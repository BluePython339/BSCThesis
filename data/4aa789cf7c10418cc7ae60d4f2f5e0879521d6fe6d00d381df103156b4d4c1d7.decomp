sub_10001010
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call [ r--data ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_10001060
push ebp
mov ebp esp
mov dl [ ebp + 0xc ]
mov eax ecx
mov cx [ ebp + 0x8 ]
mov [ eax ] cx
mov cl [ ebp + 0x10 ]
mov [ eax + 0x2 ] dl
mov dl [ ebp + 0x14 ]
mov [ eax + 0x3 ] cl
mov [ eax + 0x4 ] dl
pop ebp
retn 0x10
sub_100010b0
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
call sub_10013f10
mov eax [ esi - 0x4 ]
push edi
push sub_10013f10
lea edi [ esi - 0x4 ]
push eax
push 0x2c
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_100011a0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x14
call sub_1003c1de
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
mov ecx eax
call sub_1001fd50
jmp r-xdata
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10020170
sub_10001240
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x14
call sub_1003c1de
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
mov ecx eax
call sub_1001fd50
jmp r-xdata
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10020170
sub_10001340
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov [ esi ] r--data
test bl 0x1
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push sub_10001310
lea edi [ esi - 0x4 ]
push eax
push 0x4
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_100013d0
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov [ esi ] r--data
test bl 0x1
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push sub_100013a0
lea edi [ esi - 0x4 ]
push eax
push 0x4
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_10001460
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov [ esi ] r--data
test bl 0x1
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push sub_10001430
lea edi [ esi - 0x4 ]
push eax
push 0x4
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_100014f0
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov [ esi ] r--data
test bl 0x1
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push sub_100014c0
lea edi [ esi - 0x4 ]
push eax
push 0x4
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_10001580
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call [ r--data ]
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_1003c200
push ecx
call sub_1003c1de
add esp 0x4
test eax eax
jne r-xdata
sub_100015e0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call [ r--data ]
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call [ r--data ]
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_10001670
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call [ r--data ]
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_1003c200
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_10001580
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_1003c10a
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_1003c110
add esp 0xc
sub_100017ac
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_1003c200
int3
mov edx [ esi ]
push edx
call sub_1003c10a
add esp 0x4
sub_100017e0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_1003c10a
add esp 0x4
sub_10001810
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call [ r--data ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_10001670
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_1003c10a
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_1003c110
add esp 0xc
sub_100018c0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call [ r--data ]
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_100015e0
push ebx
push 0x0
mov ecx esi
call sub_100015e0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call [ r--data ]
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_10001670
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_1003c110
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_100019b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call [ r--data ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_10001670
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_1003c110
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_100018c0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_100018c0
pop esi
pop ebx
pop ebp
retn 0x8
sub_10001ab0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0xffffffff
mov esi ecx
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_100018c0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001ae0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
add ecx 0x4
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] al
call sub_100018c0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10001b10
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call [ r--data ]
mov [ esi ] r--data
mov cx [ edi + 0xc ]
xor eax eax
mov [ esi + 0xc ] cx
push 0xffffffff
lea ecx [ esi + 0x10 ]
push eax
add edi 0x10
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] eax
push edi
mov [ ebp - 0x4 ] eax
mov [ ecx ] al
call sub_100018c0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10001b90
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_100019b0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001bd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0xffffffff
mov esi ecx
push 0x0
add eax 0x4
push eax
lea ecx [ esi + 0x4 ]
call sub_100018c0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001bf0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call [ r--data ]
mov ax [ edi + 0xc ]
push 0xffffffff
push 0x0
add edi 0x10
push edi
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] ax
call sub_100018c0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001c30
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] 0x0
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x4 ] 0x1
call eax
push r--data
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_10020be0
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x3
call sub_10020000
test eax eax
lea ecx [ ebp - 0x14 ]
sete bl
mov [ ebp - 0x4 ] 0x2
call sub_1001fe80
test bl bl
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_10020650
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x4 ] 0x1
call sub_1001fe80
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push 0xffffffff
push 0x0
lea edx [ ebp + 0xc ]
mov ebx 0xf
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ecx ] 0x0
call sub_100018c0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x20 ] esp
push 0x12
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] 0x0
push r--data
mov [ ebp - 0x4 ] 0x4
mov [ ecx ] 0x0
call sub_100019b0
push esi
mov [ ebp - 0x4 ] 0x5
call sub_100136f0
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_10011930
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x4 ] 0x1
call sub_1001fe80
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0xc ]
push eax
jmp r-xdata
call sub_1003c10a
add esp 0x4
sub_10001d80
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call [ r--data ]
add esp 0xc
pop ebp
retn
sub_10001da0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0x1
jbe r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_10001e70
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov [ esi ] r--data
test bl 0x1
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push sub_10001e40
lea edi [ esi - 0x4 ]
push eax
push 0x4
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_10001f10
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov [ esi ] r--data
test bl 0x1
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push sub_10001ee0
lea edi [ esi - 0x4 ]
push eax
push 0x4
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_10001fa0
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov [ esi ] r--data
test bl 0x1
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push sub_10001f80
lea edi [ esi - 0x4 ]
push eax
push 0x4
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_10002000
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
mov cl [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov dl [ ebp + 0x14 ]
mov [ eax + 0x8 ] cl
mov [ eax + 0x9 ] dl
pop ebp
retn 0x10
sub_10002070
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov [ esi ] r--data
test bl 0x1
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push r-xdata
lea edi [ esi - 0x4 ]
push eax
push 0x4
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_100020d0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10020470
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call sub_10020470
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_10020470
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10002130
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001fe80
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call sub_1001fe80
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_1001fe80
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_100021a0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10020650
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call sub_10020650
add edi 0x8
push edi
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_10020650
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10002210
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10020200
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_10020200
add edi 0x8
push edi
lea ecx [ esi + 0x8 ]
call sub_10020200
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100022a0
push esi
mov esi ecx
mov ecx [ esi ]
inc [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
cmp [ esi + 0x4 ] eax
jle r-xdata
mov eax esi
pop esi
retn 0x4
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ esi + 0x4 ] eax
sub_100022d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
cmp [ esi + 0x4 ] eax
jle r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ esi + 0x4 ] eax
sub_10002340
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
call edx
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x4
sub_10002380
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov [ esi ] r--data
test bl 0x1
je r-xdata
mov eax [ esi - 0x4 ]
push edi
push sub_10002310
lea edi [ esi - 0x4 ]
push eax
push 0x4
push esi
call sub_1003c17a
test bl 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
call sub_1003c116
add esp 0x4
sub_100023e0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov esi [ ebp + 0x8 ]
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10036dd0
mov eax [ ebp + 0x14 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
call sub_1001ccc0
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx esi
call sub_1001ccc0
mov edx [ ebp + 0xc ]
push edx
mov ecx esi
call sub_1001ccc0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10002470
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
xor esi esi
call sub_1001fea0
cmp [ eax + 0xc ] esi
jbe r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
call sub_10020650
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] 0x0
call sub_1001fe80
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push esi
lea ecx [ ebp + 0xc ]
call sub_10020730
cmp [ eax ] 0x8
jne r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_10020730
cmp [ eax ] 0x4
jne r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_10020730
mov ecx 0x1
mov [ eax ] cx
push esi
lea ecx [ ebp + 0xc ]
call sub_10020730
cmp [ eax ] 0x5
jne r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_10020730
mov edx 0x2
mov [ eax ] dx
push esi
lea ecx [ ebp + 0xc ]
call sub_10020730
cmp [ eax ] 0x6
jne r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_10020730
mov ecx 0x3
mov [ eax ] cx
lea ecx [ ebp + 0xc ]
inc esi
call sub_1001fea0
cmp esi [ eax + 0xc ]
jb r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_10020730
mov edx 0x4
mov [ eax ] dx
sub_10002590
mov edx [ ecx + 0x10 ]
lea eax [ ecx + 0x48 ]
cmp [ edx ] eax
jne r-xdata
retn
mov eax [ ecx + 0x40 ]
push esi
mov esi [ ecx + 0x3c ]
mov [ edx ] esi
mov edx [ ecx + 0x20 ]
mov [ edx ] eax
mov ecx [ ecx + 0x30 ]
sub eax eax
mov [ ecx ] eax
pop esi
sub_100025c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
sub_100025e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
pop ebp
retn
mov edi edi
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
sub_10002600
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x29 ] 0x0
je r-xdata
sub_10002620
mov eax ecx
mov edx [ eax ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
retn
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov edx [ ecx ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov [ eax ] edx
mov ecx [ eax ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
retn
jmp r-xdata
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x45 ] 0x0
je r-xdata
mov ecx edx
mov edx [ ecx ]
cmp [ edx + 0x45 ] 0x0
je r-xdata
sub_10002670
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ r--data ]
push 0x0
lea ecx [ ebp - 0x18 ]
call edi
mov eax [ rw-data ]
mov esi [ r--data ]
mov [ ebp - 0x10 ] eax
cmp [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi [ esi ]
mov eax [ ebx ]
cmp edi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call edi
cmp [ esi ] 0x0
jne r-xdata
xor esi esi
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov esi [ ecx + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call [ r--data ]
mov eax [ r--data ]
inc [ eax ]
mov ecx [ r--data ]
mov edx [ ecx ]
mov [ esi ] edx
cmp [ eax + 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ r--data ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
jne r-xdata
call [ r--data ]
cmp edi [ eax + 0xc ]
jae r-xdata
mov esi [ ebp - 0x10 ]
test esi esi
jne r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + edi * 4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call [ r--data ]
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov esi ecx
mov [ rw-data ] ecx
mov edi ecx
call [ r--data ]
push edi
call sub_1003b825
add esp 0x4
push r--data
lea ecx [ ebp - 0x24 ]
call [ r--data ]
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_1003c200
sub_10002790
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ r--data ]
push 0x0
lea ecx [ ebp - 0x18 ]
call edi
mov eax [ rw-data ]
mov esi [ r--data ]
mov [ ebp - 0x10 ] eax
cmp [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi [ esi ]
mov eax [ ebx ]
cmp edi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call edi
cmp [ esi ] 0x0
jne r-xdata
xor esi esi
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov esi [ ecx + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call [ r--data ]
mov eax [ r--data ]
inc [ eax ]
mov ecx [ r--data ]
mov edx [ ecx ]
mov [ esi ] edx
cmp [ eax + 0x14 ] 0x0
je r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ r--data ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
jne r-xdata
call [ r--data ]
cmp edi [ eax + 0xc ]
jae r-xdata
mov esi [ ebp - 0x10 ]
test esi esi
jne r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + edi * 4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call [ r--data ]
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov esi ecx
mov [ rw-data ] ecx
mov edi ecx
call [ r--data ]
push edi
call sub_1003b825
add esp 0x4
push r--data
lea ecx [ ebp - 0x24 ]
call [ r--data ]
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_1003c200
sub_100028b0
push ebp
mov ebp esp
mov eax [ ecx + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov esi [ ebp + 0xc ]
sub eax edi
cmp eax esi
jae r-xdata
push r--data
call [ r--data ]
mov ebx [ ebp + 0x14 ]
mov edx esi
cmp esi ebx
jb r-xdata
mov esi eax
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov edx ebx
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp esi ebx
jae r-xdata
mov ecx [ ebp + 0x10 ]
push edx
push ecx
add eax edi
push eax
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp esi ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x10
sub_10002920
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] ebx
test edi edi
jne r-xdata
push esi
cmp edi eax
ja r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx eax
jae r-xdata
or eax 0xffffffff
pop esi
mov ecx [ ebp + 0xc ]
sub eax edi
cmp ecx eax
jae r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop edi
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov ecx ebx
call sub_10002580
cmp esi eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
test edi edi
je r-xdata
lea esi [ ecx + eax * 2 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov [ ebp + 0xc ] ecx
sub esi 0x2
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
lea ebx [ ebx ]
mov dx [ ebp + 0xc ]
cmp [ esi ] dx
jne r-xdata
mov eax esi
mov ecx ebx
pop esi
sub eax ecx
pop edi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebx ]
mov eax esi
pop esi
sub eax ecx
pop edi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sbb ecx ecx
and ecx 0xfffffffe
inc ecx
je r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
sub_10002a30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
movsx ecx [ ebp + 0x8 ]
push eax
push ecx
call [ r--data ]
xor edx edx
add esp 0x8
cmp eax 0xffffffff
setne al
pop ebp
retn
sub_10002a70
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x1c ]
push edi
mov ecx esi
call edx
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov edx [ esi + 0x30 ]
mov edx [ edx ]
mov eax ecx
add edx eax
cmp eax edx
jae r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
push edi
mov ecx esi
call edx
mov eax edi
pop edi
pop esi
retn
pop edi
or eax eax
pop esi
retn
movzx eax [ ecx ]
pop esi
retn
sub_10002ac0
push esi
mov esi ecx
cmp [ esi + 0x54 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
mov edx [ eax + 0xc ]
push 0xffffffff
call edx
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x54 ]
push eax
call [ r--data ]
add esp 0x4
test eax eax
jns r-xdata
or eax 0xffffffff
pop esi
retn
sub_10002b00
mov edx [ ecx + 0x10 ]
push esi
mov esi [ edx ]
lea eax [ ecx + 0x48 ]
cmp esi eax
je r-xdata
mov [ edx ] eax
mov edx [ ecx + 0x20 ]
mov [ edx ] eax
mov edx ecx
sub edx eax
mov eax [ ecx + 0x30 ]
add edx 0x49
mov [ eax ] edx
pop esi
retn
mov [ ecx + 0x3c ] esi
mov esi [ ecx + 0x30 ]
mov esi [ esi ]
push edi
mov edi [ ecx + 0x20 ]
add esi [ edi ]
pop edi
mov [ ecx + 0x40 ] esi
sub_10002b40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
cmp [ ecx ] eax
jae r-xdata
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
inc [ eax ]
mov esi [ esi + 0x20 ]
dec [ esi ]
lea eax [ ebx + 0x1 ]
neg eax
sbb eax eax
pop esi
and eax ebx
pop ebx
pop ebp
retn 0x4
movzx edx [ eax - 0x1 ]
cmp edx ebx
jne r-xdata
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x48 ]
cmp [ ecx ] eax
je r-xdata
push eax
movzx eax bl
push eax
call [ r--data ]
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov ecx esi
mov [ eax ] bl
call sub_10002b00
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_10002bd0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x54 ]
push edi
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
test edx edx
jne r-xdata
xor eax eax
mov eax edi
or eax [ ebp + 0x10 ]
jne r-xdata
mov edi [ esi + 0x54 ]
mov ecx esi
mov [ esi + 0x50 ] 0x1
mov [ esi + 0x49 ] al
call [ r--data ]
test edi edi
je r-xdata
mov eax 0x4
jmp r-xdata
mov [ esi + 0x54 ] edi
mov ecx [ rw-data ]
pop edi
mov [ esi + 0x4c ] ecx
mov [ esi + 0x44 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0xc
lea eax [ edi + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
lea eax [ edi + 0x4 ]
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
push edi
push eax
push edx
push ecx
call [ r--data ]
add esp 0x10
test eax eax
jne r-xdata
sub_10002c60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
push eax
mov esi ecx
call sub_10002790
mov edi eax
add esp 0x4
mov ecx edi
call [ r--data ]
test al al
je r-xdata
mov ecx esi
mov [ esi + 0x44 ] edi
call [ r--data ]
pop edi
pop esi
pop ebp
retn 0x4
pop edi
mov [ esi + 0x44 ] 0x0
pop esi
pop ebp
retn 0x4
sub_10002ca0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
cmp [ esi + 0x54 ] ebx
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
call [ r--data ]
mov edi eax
add esp 0xc
cmp edi ebx
je r-xdata
mov ecx esi
mov [ esi + 0x50 ] 0x1
mov [ esi + 0x49 ] bl
call [ r--data ]
lea ecx [ edi + 0x4 ]
mov [ esi + 0x30 ] ecx
mov [ esi + 0x34 ] ecx
lea eax [ edi + 0x8 ]
lea ecx [ ebp + 0x10 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x54 ] edi
mov eax [ rw-data ]
push ecx
mov ecx esi
mov [ esi + 0x4c ] eax
mov [ esi + 0x44 ] ebx
call [ r--data ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_10002790
mov edi eax
add esp 0x4
mov ecx edi
call [ r--data ]
test al al
je r-xdata
mov ecx esi
mov [ esi + 0x44 ] edi
call [ r--data ]
mov [ esi + 0x44 ] ebx
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call [ r--data ]
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp ecx ebx
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
sub_10002db0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_1003c20c
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_10002df0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x45 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_10002e50
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x45 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_10002eb0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x29 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_10002f10
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x10
mov ecx [ eax + 0x10 ]
jb r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ecx + 0x10 ]
push eax
push 0x0
call sub_100028b0
xor ecx ecx
test eax eax
sets al
pop ebp
retn 0x8
mov eax [ eax ]
sub_10002f40
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ecx + 0x4 ]
push edi
mov edi [ eax + 0x4 ]
cmp [ edi + 0x45 ] 0x0
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
push ebx
mov ebx [ edx + 0x10 ]
push esi
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x10
lea eax [ edi + 0xc ]
jb r-xdata
mov esi [ eax + 0x10 ]
mov ecx esi
cmp ecx esi
jae r-xdata
mov edx [ edx ]
mov ecx esi
cmp esi ebx
jb r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
push ecx
push edx
push eax
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
jns r-xdata
cmp esi ebx
jb r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ edi ]
mov edi [ edi + 0x8 ]
jmp r-xdata
cmp esi ebx
setne al
test eax eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
cmp [ edi + 0x45 ] 0x0
je r-xdata
sub_10002fd0
push ebp
mov ebp esp
push ecx
mov eax ecx
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x0
jb r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
push esi
call sub_1001c470
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax ]
sub_10003000
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1003c10a
add esp 0x4
sub_10003030
push esi
mov esi ecx
cmp [ esi + 0x30 ] 0x10
jb r-xdata
mov [ esi + 0x30 ] 0xf
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_1003c10a
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov ecx [ esi ]
push ecx
call sub_1003c10a
add esp 0x4
sub_10003080
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call [ r--data ]
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call [ r--data ]
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10001670
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_10002db0
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_10003130
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x28 ] esi
cmp ecx edi
je r-xdata
push edi
mov ecx esi
mov [ ebp - 0x4 ] edi
call [ r--data ]
mov [ ebp - 0x24 ] al
mov ebx 0x1
mov [ ebp - 0x4 ] ebx
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
cmp [ ebp - 0x11 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x20 ] edi
mov [ eax + esi + 0x24 ] edi
jne r-xdata
mov edx [ esi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx [ edx + 0x4 ]
add ecx esi
call [ r--data ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10002670
mov ecx [ ebp - 0x1c ]
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] bl
cmp ecx edi
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ esi ]
push edi
push ecx
mov ecx [ edx + 0x4 ]
add ecx esi
call [ r--data ]
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + eax + 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp ecx edi
je r-xdata
or [ ebp - 0x18 ] 0x2
mov ecx [ ebp + 0xc ]
push 0xffffffff
push edi
call sub_100015e0
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + esi + 0x24 ]
mov eax [ edx + esi + 0x20 ]
mov [ ebp - 0x4 ] 0x3
cmp ecx edi
jl r-xdata
call [ r--data ]
cmp eax edi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov edi 0xfffffffe
jg r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push ebx
call eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2c ] ecx
cmp eax 0xfffffffe
jae r-xdata
cmp eax edi
jbe r-xdata
xor edi edi
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x10 ]
movzx ecx al
test [ edx + ecx * 2 ] 0x48
jne r-xdata
or [ ebp - 0x18 ] ebx
mov [ ebp - 0x2c ] ecx
mov edi eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
push eax
push ebx
call sub_10003080
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
mov [ ebp - 0x11 ] bl
sub edi ebx
call [ r--data ]
jmp r-xdata
mov ecx [ edx + esi + 0x38 ]
call [ r--data ]
nop
test edi edi
je r-xdata
sub_100032f0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x4
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x4
jmp r-xdata
push edi
mov ecx esi
call sub_10020650
cmp edi [ ebp + 0xc ]
je r-xdata
sub_10003356
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1003c200
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_1001fe80
add esi 0x4
cmp esi edi
jne r-xdata
sub_10003390
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor edi edi
cmp eax edi
je r-xdata
cmp [ esi + 0x54 ] edi
je r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ ecx ]
mov edx [ esi + 0x30 ]
mov ecx [ edx ]
add ecx eax
cmp eax ecx
jae r-xdata
or eax 0xffffffff
mov eax [ esi + 0x10 ]
mov eax [ eax ]
lea ecx [ esi + 0x48 ]
cmp eax ecx
jne r-xdata
mov eax edx
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea edx [ eax + 0x1 ]
mov [ esi ] edx
movzx eax [ eax ]
jmp r-xdata
cmp [ esi + 0x44 ] edi
jne r-xdata
mov eax [ esi + 0x40 ]
mov edx [ esi + 0x3c ]
push eax
push eax
push edx
mov ecx esi
call [ r--data ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
mov eax [ esi + 0x54 ]
mov ebx [ r--data ]
push eax
mov [ ebp - 0x4 ] edi
call ebx
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov esi [ esi + 0x54 ]
push esi
call [ r--data ]
add esp 0x4
cmp eax 0xffffffff
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_100017e0
lea edi [ esi + 0x4c ]
movzx eax al
jmp r-xdata
add ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x38 ]
push edx
lea edx [ ebp - 0x2c ]
push edx
lea edx [ ebp - 0x2d ]
push edx
lea edx [ ebp - 0x34 ]
push edx
push ecx
mov ecx [ esi + 0x44 ]
push eax
push edi
call [ r--data ]
test eax eax
js r-xdata
lea ecx [ ebp - 0x2c ]
mov eax ecx
cmp eax 0x1
jle r-xdata
lea eax [ ebp - 0x2d ]
cmp [ ebp - 0x38 ] eax
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov edi [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x1c ] 0x1
jb r-xdata
sub edi [ ebp - 0x34 ]
add edi [ ebp - 0x1c ]
test edi edi
jle r-xdata
lea edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_100015e0
lea eax [ ebp - 0x2c ]
mov edx [ esi + 0x54 ]
push edx
call ebx
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx esi [ ebp - 0x2d ]
lea ecx [ ebp - 0x2c ]
call sub_100017e0
mov eax esi
jmp r-xdata
mov ebx [ r--data ]
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10003080
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov ecx eax
cmp edx 0x10
jae r-xdata
push 0x1
push eax
lea eax [ ebp - 0x2d ]
push 0x1
push eax
call [ r--data ]
movzx esi [ ebp - 0x2d ]
add esp 0x10
lea ecx [ ebp - 0x2c ]
call sub_100017e0
mov eax esi
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x34 ]
mov ecx [ esi + 0x54 ]
movsx eax [ edi + edx - 0x1 ]
dec edi
push ecx
push eax
call ebx
add esp 0x8
test edi edi
jg r-xdata
sub_10003590
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x44 ] 0x0
je r-xdata
mov al 0x1
cmp [ edi + 0x49 ] 0x0
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0xc ]
push 0xffffffff
call edx
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
mov ecx 0xf
xor eax eax
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x1c ] 0x8
cmp ecx 0x10
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
mov [ eax + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x4c ]
lea eax [ ebp - 0x2c ]
add ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x30 ]
push edx
push ecx
mov ecx [ edi + 0x44 ]
push eax
push ebx
call [ r--data ]
sub eax 0x0
je r-xdata
lea ecx [ ebp - 0x2c ]
mov eax ecx
mov [ edi + 0x49 ] 0x0
dec eax
je r-xdata
mov esi [ ebp - 0x30 ]
sub esi ecx
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov ecx eax
cmp edx 0x10
jae r-xdata
sub eax 0x2
lea ecx [ ebp - 0x2c ]
jne r-xdata
cmp [ edi + 0x49 ] 0x0
je r-xdata
cmp edx 0x10
jae r-xdata
call sub_100017e0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
test esi esi
jne r-xdata
mov ecx [ edi + 0x54 ]
push ecx
push esi
push 0x1
push eax
call [ r--data ]
add esp 0x10
cmp esi eax
jne r-xdata
lea eax [ ebp - 0x2c ]
call sub_100017e0
mov ecx eax
cmp edx 0x10
jae r-xdata
push esi
push 0x8
lea ecx [ ebp - 0x2c ]
call sub_10003080
jmp r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x18 ]
sub_100036e0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0x7
mov [ ebp - 0x4 ] eax
mov [ esi ] ax
mov eax [ ebp + 0xc ]
push edx
push eax
push ecx
mov ecx esi
call sub_1000ef20
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10003720
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov edi ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ edi + 0x24 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
cmp [ edi + 0x54 ] 0x0
je r-xdata
mov eax [ edi + 0x34 ]
mov edx [ eax ]
add edx ecx
cmp ecx edx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
or eax 0xffffffff
mov edx [ edi + 0x10 ]
lea ecx [ edi + 0x48 ]
cmp [ edx ] ecx
jne r-xdata
dec [ eax ]
mov edi [ edi + 0x24 ]
mov eax [ edi ]
lea ecx [ eax + 0x1 ]
mov [ edi ] ecx
mov [ eax ] bl
mov eax ebx
jmp r-xdata
cmp [ edi + 0x44 ] 0x0
jne r-xdata
mov eax [ edi + 0x40 ]
mov edx [ edi + 0x3c ]
push eax
push eax
push edx
mov ecx edi
call [ r--data ]
mov ecx 0xf
xor eax eax
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x30 ] bl
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x1c ] 0x8
cmp ecx 0x10
jae r-xdata
mov edi [ edi + 0x54 ]
movsx eax bl
push edi
push eax
call [ r--data ]
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov [ eax + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x4c ]
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x2c ]
mov eax ebx
jmp r-xdata
add ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x34 ]
push edx
push ecx
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x2f ]
push ecx
mov ecx [ edi + 0x44 ]
lea edx [ ebp - 0x30 ]
push edx
push ebx
call [ r--data ]
test eax eax
js r-xdata
lea ecx [ ebp - 0x2c ]
mov eax ecx
lea ecx [ ebp - 0x2c ]
cmp eax 0x1
jg r-xdata
in al dx
inc esi
mov edx 0x3ebb
mov ch 0xb6
call sub_10003915
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov ecx eax
cmp edx 0x10
jae r-xdata
mov esi [ ebp - 0x34 ]
sub esi ecx
je r-xdata
lea ecx [ ebp - 0x2c ]
lea ecx [ ebp - 0x30 ]
mov [ edi + 0x49 ] 0x1
cmp [ ebp - 0x38 ] ecx
jne r-xdata
cmp edx 0x10
jae r-xdata
lea ecx [ ebp - 0x2c ]
call sub_100017e0
mov eax [ ebp + 0x8 ]
jmp r-xdata
test esi esi
jne r-xdata
mov ecx [ edi + 0x54 ]
push ecx
push esi
push 0x1
push eax
call [ r--data ]
add esp 0x10
cmp esi eax
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx eax
cmp edx 0x10
jae r-xdata
cmp [ ebp - 0x1c ] 0x20
lea ecx [ ebp - 0x2c ]
jae r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
call sub_100017e0
push esi
push 0x8
call sub_10003080
jmp 0xffffffff9b563805
sub_10003915
inc esi
mov ecx 0x7613
dec esi
xor ecx 0x9
push edi
add ecx 0xffffffb7
add eax 0x392f
nop
mov ebx 0x7f30
sub ebx 0xfffffff5
mov eax 0x43d
mov cl 0x8d
and bh 0x39
or esi 0xffffff8c
or edi 0xffffffff
mov cl 0xa1
mov edx 0x374e
mov ecx 0x48b8
jmp r-xdata
mov ah 0x58
jmp r-xdata
add esi 0x51
jmp r-xdata
add eax 0x3044
add eax 0x1a
call sub_10003a91
sub_10003952
cmp [ esi + 0x54 ] 0x0
je r-xdata
mov ecx [ r--data ]
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
pop edi
mov [ eax + 0x4 ] ecx
xor ecx ecx
pop esi
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
add esi 0x51
jmp r-xdata
mov ecx esi
call sub_10003590
test al al
je r-xdata
add eax 0x3044
add eax 0x1a
call sub_10003a91
mov edx ebx
or edx edi
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ esi + 0x54 ]
push eax
push edi
push ebx
push ecx
call [ r--data ]
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
mov eax [ esi + 0x54 ]
lea edx [ ebp + 0xc ]
push edx
push eax
call [ 0x6de958b4 ]
add [ eax ] al
add [ ebp - 0x74b88a40 ] al
dec esi
adc [ ebp + 0x1394846 ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x4c ]
pop esi
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x14
mov edx [ esi + 0x3c ]
mov eax [ esi + 0x40 ]
mov [ ecx ] edx
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov edx [ esi + 0x30 ]
sub eax eax
mov [ edx ] eax
sub_10003af0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_1003c10a
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call [ r--data ]
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
sub_10003bf0
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x54 ] ebx
je r-xdata
xor edi edi
call sub_10003590
test al al
jne r-xdata
mov eax [ esi + 0x54 ]
push eax
call [ r--data ]
add esp 0x4
test eax eax
je r-xdata
xor edi edi
mov ecx esi
mov [ esi + 0x50 ] bl
mov [ esi - 0x18 ] bl
xor eax 0x4000000
adc [ ecx + 0xd8b545e ] cl
sub_10003c70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
pop ebp
retn
mov eax [ esi ]
push eax
call sub_1003c10a
add esp 0x4
sub_10003e33
mov bl 0xbe
and edx 0xffffffd6
nop
mov bl 0x27
push ebx
cmp esp 0x4a
inc edx
cmp edi 0xffffff93
sub esi 0xe
or edi 0xffffffd8
xor esi 0xf
mov esi 0x3a9e
and esi 0x5e
xor ecx 0xffffffd1
mov ah 0xef
push edi
mov dh 0x37
inc esi
push ebx
mov ebx 0x6548
mov dl 0xc5
inc eax
dec edi
jmp r-xdata
mov ch 0xa9
jmp r-xdata
pop eax
jmp r-xdata
mov edx 0x7383
push edi
dec edx
or edi 0x15
dec eax
push ebp
mov dh 0xe
or cl 0xe2
mov edi 0x3fc8
jmp r-xdata
jmp r-xdata
call sub_10003fea
sub_10003e6f
add [ eax ] al
add [ ebx + 0x573b047a ] cl
or [ ebp + 0xb ] dh
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
pop esi
mov [ ecx + 0x28 ] 0xe9
adc eax 0x0
int3
mov esi [ esi ]
cmp [ esi + 0x28 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x28 ] bl
jne r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x28 ] 0x1
mov [ esi + 0x28 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx - 0x4b ]
test eax 0x29e9
add [ ebx - 0x6e16fbc0 ] cl
add [ eax ] al
add [ ebx ] bh
add dh [ ebp + 0x3c ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x28 ] 0x1
mov [ esi + 0x28 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x28 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x28 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x28 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x29 ] bl
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x29 ] bl
jne r-xdata
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov edx [ eax - 0x4d ]
mov esi 0x90d6e283
mov bl 0x27
push ebx
cmp esp 0x4a
inc edx
cmp edi 0xffffff93
sub esi 0xe
or edi 0xffffffd8
xor esi 0xf
mov esi 0x3a9e
and esi 0x5e
xor ecx 0xffffffd1
mov ah 0xef
push edi
mov dh 0x37
inc esi
push ebx
mov ebx 0x6548
mov dl 0xc5
inc eax
dec edi
jmp r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x29 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x28 ] bl
je r-xdata
mov edi [ edx + 0x4 ]
mov [ edi + 0x4 ] edx
mov edx 0x7383
push edi
dec edx
or edi 0x15
dec eax
push ebp
mov dh 0xe
or cl 0xe2
mov edi 0x3fc8
jmp r-xdata
mov ch 0xa9
jmp r-xdata
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
jmp r-xdata
pop eax
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
call sub_10003fea
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_10003eea
mov [ esi ] edx
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov edx [ eax + 0x4 ]
mov [ edx + 0x28 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x28 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x29 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov edx 0x7383
push edi
dec edx
or edi 0x15
dec eax
push ebp
mov dh 0xe
or cl 0xe2
mov edi 0x3fc8
jmp r-xdata
mov [ edi + 0x4 ] edx
jmp r-xdata
call sub_10003fea
sub_10003f38
mov [ edi + 0x8 ] esi
mov [ esi ] edx
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
pop esi
mov [ ecx + 0x28 ] 0xe9
adc eax 0x0
int3
mov esi [ esi ]
cmp [ esi + 0x28 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x28 ] bl
jne r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x28 ] 0x1
mov [ esi + 0x28 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx - 0x4b ]
test eax 0x29e9
add [ ebx - 0x6e16fbc0 ] cl
add [ eax ] al
add [ ebx ] bh
add dh [ ebp + 0x3c ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x28 ] 0x1
mov [ esi + 0x28 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x28 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x28 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x28 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x29 ] bl
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x29 ] bl
jne r-xdata
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov edx [ eax - 0x4d ]
mov esi 0x90d6e283
mov bl 0x27
push ebx
cmp esp 0x4a
inc edx
cmp edi 0xffffff93
sub esi 0xe
or edi 0xffffffd8
xor esi 0xf
mov esi 0x3a9e
and esi 0x5e
xor ecx 0xffffffd1
mov ah 0xef
push edi
mov dh 0x37
inc esi
push ebx
mov ebx 0x6548
mov dl 0xc5
inc eax
dec edi
jmp r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x29 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x28 ] bl
je r-xdata
mov edi [ edx + 0x4 ]
mov [ edi + 0x4 ] edx
mov edx 0x7383
push edi
dec edx
or edi 0x15
dec eax
push ebp
mov dh 0xe
or cl 0xe2
mov edi 0x3fc8
jmp r-xdata
mov ch 0xa9
jmp r-xdata
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
jmp r-xdata
pop eax
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
call sub_10003fea
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_1000403c
push esp
jmp r-xdata
push esp
push ecx
dec ecx
add si 0xffc9
add eax 0x49bb
mov edi 0x521b
add al 0x29
inc eax
mov ch 0xa9
dec eax
pop esi
jmp r-xdata
call sub_100040ec
sub_1000416c
push eax
add [ edi + eax - 0x75 ] dh
into
call sub_10003bf0
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call [ r--data ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_100041c1
or edi 0x0
push ecx
mov cl 0x75
push edi
cmp edx 0xffffffd2
dec edx
inc edx
mov esi 0x5025
push esp
inc edi
mov ch 0x2d
mov cl 0x9b
add eax 0x24c
xor edx 0xffffffc5
add eax 0x40cd
push esp
jmp r-xdata
mov cl 0x63
push eax
dec eax
mov al 0x78
mov ebx 0x45cd
inc ebx
push edx
call sub_10004297
sub_100041eb
adc bh bh
adc eax r--data
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
sar ecx 0x2
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ebx [ esi + 0xc ]
push eax
mov ecx ebx
call sub_1000d230
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
push edx
push 0x0
mov edi eax
mov eax [ esi + 0x4 ]
push ebx
push edi
push eax
push ecx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4f ] 0xb0485063
js r-xdata
push esp
jmp r-xdata
int 0x45
add [ eax ] al
inc ebx
push edx
call sub_10004297
mov cl 0x63
push eax
dec eax
mov al 0x78
mov ebx 0x45cd
sub_100042b0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x29 ] 0x0
push esi
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
call sub_10021030
mov ecx [ ebx ]
cmp [ ecx + 0x29 ] 0x0
je r-xdata
push r--data
call [ r--data ]
mov eax [ ebx + 0x8 ]
mov edi [ ebx + 0x8 ]
jmp r-xdata
cmp [ edi + 0x29 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
add eax 0x7dab
mov bh 0xee
mov al 0xc8
inc esi
inc edi
or esi 0x75
call sub_10004377
cmp [ edi + 0x29 ] 0x0
je r-xdata
push edi
call sub_10021010
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov eax [ edi ]
mov al 0x7a
sub_100043cb
mov eax [ ebp - 0x8 ]
mov bl 0x1
cmp [ eax + 0x28 ] bl
jne r-xdata
cmp [ eax + 0x20 ] 0x10
pop edi
pop esi
pop ebx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp edi [ eax + 0x4 ]
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x20 ] 0xf
mov [ eax + 0x1c ] 0x0
push eax
mov [ eax + 0xc ] 0x0
call sub_1003c10a
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ eax + 0xc ]
push ecx
call sub_1003c10a
add esp 0x4
mov eax [ ebp - 0x8 ]
mov [ edi + 0x28 ] bl
jmp sub_100043f0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
sub_100043f0
cmp [ edi + 0x28 ] bl
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ edi + 0x28 ] bl
cmp [ eax + 0x20 ] 0x10
pop edi
pop esi
pop ebx
jb r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x20 ] 0xf
mov [ eax + 0x1c ] 0x0
push eax
mov [ eax + 0xc ] 0x0
call sub_1003c10a
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ eax + 0xc ]
push ecx
call sub_1003c10a
add esp 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov [ eax + 0x28 ] bl
push esi
mov [ esi + 0x28 ] 0x0
jmp r-xdata
mov [ eax + 0x28 ] bl
push esi
mov [ esi + 0x28 ] 0x0
call sub_10002eb0
mov eax [ esi - 0x49 ]
xchg esp eax
add edx 0xffffffeb
push edx
cmp esp 0xffffffc3
add eax 0x3bef
mov bh 0xa4
call sub_1000443b
mov eax [ ecx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne 0xffffffffaec2c7f0
mov edx [ eax + 0x8 ]
cmp [ edx + 0x28 ] bl
jne r-xdata
call sub_10021170
inc esi
sub [ eax ] al
inc edx
add al 0x4d
call j_sub_10004545
dec ebp
mov edx [ eax ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov [ eax + 0x28 ] 0x0
sub_10004530
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x29 ] 0x0
push edi
mov ebx ecx
mov edi esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ edi + 0x57 ]
mov ebx 0x5b6a
mov bh 0xc3
dec edi
cmp eax 0x7f
jmp r-xdata
add eax 0x7967
add al 0x1
and ebx 0xfffffffd
xor edx 0xfffffff9
inc ecx
dec eax
mov bh 0x1b
dec esi
call sub_100045fd
sub_10004545
push edi
mov ebx 0x5b6a
mov bh 0xc3
dec edi
cmp eax 0x7f
jmp r-xdata
add eax 0x7967
add al 0x1
and ebx 0xfffffffd
xor edx 0xfffffff9
inc ecx
dec eax
mov bh 0x1b
dec esi
call sub_100045fd
sub_10004609
mov [ edi + 0x4 ] eax
mov edx [ ecx + 0x4 ]
cmp eax edx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ edx + 0x4 ] edi
mov edx [ ecx + 0x4 ]
mov [ edx ] edi
mov eax [ ecx + 0x4 ]
mov [ eax + 0x8 ] edi
jmp r-xdata
mov [ eax + 0x8 ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ eax ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov edx [ edi + 0x4 ]
cmp [ edx + 0x44 ] 0x0
mov eax edi
mov bl 0x1
jne r-xdata
mov [ edx + 0x8 ] edi
mov [ edx ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax - 0x18 ]
push ecx
add [ eax ] al
add [ eax ] bh
pop edi
pop esi
mov [ ecx + 0x44 ] bl
pop ebx
pop ebp
retn 0x10
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
jmp sub_100046d6
sub_1000489a
add eax [ eax ]
add esp 0x4
dec ebx
push ebx
push 0x0
lea edx [ ebp - 0x48 ]
push edx
mov ecx esi
call sub_100036e0
mov ecx [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x1
call j_sub_10003b96
sub_10004920
push ebx
mov ebx ecx
push esi
mov esi [ ebx ]
test esi esi
je r-xdata
xor eax eax
pop esi
mov [ esi - 0x7cb0ae97 ] esi
out dx al
mov esp 0x5fa0bf
add [ esi - 0x7d ] ah
out dx eax
sbb eax 0x522b34e
or [ ebx ] cl
add [ eax ] al
add al 0x48
push ecx
call sub_10004985
push edi
mov edi [ ebx + 0x4 ]
cmp esi edi
je r-xdata
mov eax [ ebx ]
push eax
call sub_1003c10a
add esp 0x4
pop edi
mov ecx esi
call sub_1001fe80
add esi 0x4
cmp esi edi
jne r-xdata
sub_10004972
push esi
mov esi edi
cmp edi edi
je r-xdata
mov edi [ ecx + 0x4 ]
mov esi ebx
cmp ebx edi
je r-xdata
lea esp [ esp ]
push esi
mov ecx ebx
call 0x44690400
add [ eax ] al
mov bh 0x64
dec eax
jmp r-xdata
mov [ ecx + 0x4 ] ebx
pop esi
pop edi
pop ebx
mov edi edi
or al 0xb
inc eax
mov bl 0x7b
dec eax
add ebx 0x12
cmp ecx 0xffffffcd
call sub_100049ff
mov ecx esi
call sub_1001fe80
add esi 0x4
cmp esi edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub_10004992
mov ecx [ ebp - 0x4 ]
mov edi [ ecx + 0x4 ]
mov esi ebx
cmp ebx edi
je r-xdata
mov [ ecx + 0x4 ] ebx
pop esi
pop edi
pop ebx
or al 0xb
inc eax
mov bl 0x7b
dec eax
add ebx 0x12
cmp ecx 0xffffffcd
call sub_100049ff
mov edi edi
mov ecx esi
call sub_1001fe80
add esi 0x4
cmp esi edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
sub_100049c0
adc al [ ebx + 0x36e8cdf9 ]
add [ eax ] al
add [ eax ] dl
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x14 ] eax
je r-xdata
inc edx
add [ eax ] al
add [ eax ] dl
push esi
mov ecx edi
call [ r--data ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp + 0x14 ] esi
call [ r--data ]
xor al al
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x50 ] al
mov [ esi + 0x49 ] al
call [ r--data ]
mov [ edi ] r--data
mov ecx [ 0x52fe8348 ]
add eax 0x16b1
inc esi
mov edx 0x1f38
inc ebx
inc edi
mov edi 0x4bac
mov bl 0x3b
dec eax
call sub_10004a5e
sub_10004ac0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x68 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x68 ] r--data
lea esi [ ecx - 0x58 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
cmp [ esi + 0x54 ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov ecx [ esi + 0x10 ]
lea edx [ esi - 0x4a ]
xor al 0xbf
daa
add eax [ eax ]
add [ ebx + 0x26e86dc2 ] al
add [ eax ] al
add [ eax ] ah
mov [ ecx ] eax
mov edx [ esi + 0x30 ]
sub eax eax
mov [ edx ] eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call [ r--data ]
mov eax [ esi - 0x10 ]
mov ecx esi
call sub_10003bf0
sub_10004b96
cmp ecx 0x5f
call sub_10004bc3
salc
sar edx 0x2
cmp eax edx
jbe r-xdata
add [ eax - 0x17 ] dl
and al 0x0
add [ eax ] al
int3
mov esi edx
shr esi 0x1
mov edi 0x3fffffff
sub edi esi
cmp edi edx
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call 0x1072f882
mov edx eax
cmp edx eax
jae r-xdata
sub_10004bc3
mov ebx 0x72ac
push eax
jmp r-xdata
add dx 0xffa7
mov ebx 0x3928
push edi
nop
xor ecx 0x77
and ebx 0x43
dec ebx
xor dh 0xd1
sub esi 0xffffffae
push edi
call sub_10004c87
mov eax [ ebp + 0xc ]
mov ebx [ eax + 0x8 ]
cmp eax edi
jne r-xdata
push ebp
push esp
dec edi
inc esi
mov eax 0x2f88
add al 0x17
or edx 0x40
sub dx 0xfffd
mov bl 0x85
sub ecx 0xffffffb9
inc edx
cmp bp 0x9
call sub_10004d17
mov [ eax + 0x8 ] ecx
mov edx [ edi + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] edi
jne r-xdata
cmp [ ebx + 0x45 ] 0x0
mov esi [ edi + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
cmp [ ecx ] edi
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] edi
jne r-xdata
mov [ ebx + 0x4 ] esi
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov cl [ eax + 0x44 ]
mov dl [ edi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ edi + 0x44 ] cl
mov ecx [ ebp - 0x4 ]
cmp [ esi ] edi
jne r-xdata
mov [ eax + 0x4 ] ebx
jmp r-xdata
cmp [ edi + 0x3c ] 0x10
jb r-xdata
mov eax [ ecx + 0x4 ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] edi
jne r-xdata
xor esi esi
mov ebx 0xf
mov [ edi + 0x3c ] ebx
mov [ edi + 0x38 ] esi
mov [ edi + 0x28 ] 0x0
cmp [ edi + 0x20 ] 0x10
jb r-xdata
mov ecx [ edi + 0x28 ]
push ecx
call sub_1003c10a
add esp 0x4
mov [ ebx + 0x44 ] 0x1
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x8 ] edi
jne r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
cld
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
mov bh 0x1a
jmp r-xdata
mov eax [ esi ]
cmp ebx eax
jne r-xdata
cmp [ edi + 0x44 ] 0x1
jne r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
push ebx
call sub_100025e0
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10004e70
cmp [ esi - 0x49 ] 0x3b
dec edi
nop
add al 0x86
mov dh 0xe2
mov dl 0xfb
mov ecx 0x158
call sub_10004f22
cmp al 0xf
add [ eax ] al
add [ ecx + 0x5e88385e ] cl
sub [ ebx + 0x7210207e ] al
or al 0x8b
push esi
or al 0x52
call sub_1003c10a
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1003c10a
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov bh 0x3b
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4b ]
jmp r-xdata
push ebx
call sub_100025c0
mov ecx [ ebp - 0x4f ]
mov dl 0x58
inc esi
dec eax
inc esi
or cl 0xbf
xor edx 0xffffffb8
mov edx [ ecx + 0x4 ]
mov eax esi
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ eax + 0x44 ] 0x1
push esi
mov [ esi + 0x44 ] 0x0
call sub_10002e50
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov ch 0xe1
dec esi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ebx esi
mov esi [ esi + 0x4 ]
cmp ebx [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
call sub_10004e2d
jpe r-xdata
jmp r-xdata
push esi
mov [ eax + 0x44 ] 0x1
call sub_10002e50
add [ ebp + 0x17 ] esi
mov [ eax + 0x44 ] 0x0
sub_10004bd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
cmp [ edi + 0x45 ] 0x0
mov [ ebp - 0x4 ] ecx
je r-xdata
lea ecx [ ebp + 0xc ]
call 0xffffffffb7c2cf5c
mov ebx 0x3928
push edi
nop
xor ecx 0x77
and ebx 0x43
dec ebx
xor dh 0xd1
sub esi 0xffffffae
push edi
call sub_10004c87
mov eax [ ebp + 0xc ]
mov ebx [ eax + 0x8 ]
cmp eax edi
jne r-xdata
push r--data
call [ r--data ]
push ebp
push esp
dec edi
inc esi
mov eax 0x2f88
add al 0x17
or edx 0x40
sub dx 0xfffd
mov bl 0x85
sub ecx 0xffffffb9
inc edx
cmp bp 0x9
call sub_10004d17
mov [ eax + 0x8 ] ecx
mov edx [ edi + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] edi
jne r-xdata
cmp [ ebx + 0x45 ] 0x0
mov esi [ edi + 0x4 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
cmp [ ecx ] edi
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] edi
jne r-xdata
mov [ ebx + 0x4 ] esi
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov cl [ eax + 0x44 ]
mov dl [ edi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ edi + 0x44 ] cl
mov ecx [ ebp - 0x4 ]
cmp [ esi ] edi
jne r-xdata
mov [ eax + 0x4 ] ebx
jmp r-xdata
cmp [ edi + 0x3c ] 0x10
jb r-xdata
mov eax [ ecx + 0x4 ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] edi
jne r-xdata
xor esi esi
mov ebx 0xf
mov [ edi + 0x3c ] ebx
mov [ edi + 0x38 ] esi
mov [ edi + 0x28 ] 0x0
cmp [ edi + 0x20 ] 0x10
jb r-xdata
mov ecx [ edi + 0x28 ]
push ecx
call sub_1003c10a
add esp 0x4
mov [ ebx + 0x44 ] 0x1
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x8 ] edi
jne r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
cld
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
mov bh 0x1a
jmp r-xdata
mov eax [ esi ]
cmp ebx eax
jne r-xdata
cmp [ edi + 0x44 ] 0x1
jne r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
push ebx
call sub_100025e0
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10004e70
cmp [ esi - 0x49 ] 0x3b
dec edi
nop
add al 0x86
mov dh 0xe2
mov dl 0xfb
mov ecx 0x158
call sub_10004f22
cmp al 0xf
add [ eax ] al
add [ ecx + 0x5e88385e ] cl
sub [ ebx + 0x7210207e ] al
or al 0x8b
push esi
or al 0x52
call sub_1003c10a
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1003c10a
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov bh 0x3b
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4b ]
jmp r-xdata
push ebx
call sub_100025c0
mov ecx [ ebp - 0x4f ]
mov dl 0x58
inc esi
dec eax
inc esi
or cl 0xbf
xor edx 0xffffffb8
mov edx [ ecx + 0x4 ]
mov eax esi
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ eax + 0x44 ] 0x1
push esi
mov [ esi + 0x44 ] 0x0
call sub_10002e50
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov ch 0xe1
dec esi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ebx esi
mov esi [ esi + 0x4 ]
cmp ebx [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
call sub_10004e2d
jpe r-xdata
jmp r-xdata
push esi
mov [ eax + 0x44 ] 0x1
call sub_10002e50
add [ ebp + 0x17 ] esi
mov [ eax + 0x44 ] 0x0
sub_10004c87
mov cl 0xb2
pop eax
inc esi
dec eax
inc esi
or cl 0xbf
xor edx 0xffffffb8
push ebp
push esp
dec edi
inc esi
mov eax 0x2f88
add al 0x17
or edx 0x40
sub dx 0xfffd
mov bl 0x85
sub ecx 0xffffffb9
inc edx
cmp bp 0x9
call sub_10004d17
mov [ eax + 0x8 ] ecx
mov edx [ edi + 0x8 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] edi
jne r-xdata
mov ecx [ edi + 0x4 ]
cmp [ ecx ] edi
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov cl [ eax + 0x44 ]
mov dl [ edi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ edi + 0x44 ] cl
mov ecx [ ebp - 0x4 ]
cmp [ edi + 0x44 ] 0x1
jne r-xdata
cmp [ edi + 0x3c ] 0x10
jb r-xdata
mov eax [ ecx + 0x4 ]
cmp ebx [ eax + 0x4 ]
je r-xdata
xor esi esi
mov ebx 0xf
mov [ edi + 0x3c ] ebx
mov [ edi + 0x38 ] esi
mov [ edi + 0x28 ] 0x0
cmp [ edi + 0x20 ] 0x10
jb r-xdata
mov ecx [ edi + 0x28 ]
push ecx
call sub_1003c10a
add esp 0x4
mov [ ebx + 0x44 ] 0x1
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
cld
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
mov bh 0x1a
jmp r-xdata
mov eax [ esi ]
cmp ebx eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10004e70
cmp [ esi - 0x49 ] 0x3b
dec edi
nop
add al 0x86
mov dh 0xe2
mov dl 0xfb
mov ecx 0x158
call sub_10004f22
cmp al 0xf
add [ eax ] al
add [ ecx + 0x5e88385e ] cl
sub [ ebx + 0x7210207e ] al
or al 0x8b
push esi
or al 0x52
call sub_1003c10a
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1003c10a
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov bh 0x3b
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4b ]
jmp r-xdata
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ eax + 0x44 ] 0x1
push esi
mov [ esi + 0x44 ] 0x0
call sub_10002e50
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov ch 0xe1
dec esi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ebx esi
mov esi [ esi + 0x4 ]
cmp ebx [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
call sub_10004e2d
jpe r-xdata
jmp r-xdata
push esi
mov [ eax + 0x44 ] 0x1
call sub_10002e50
add [ ebp + 0x17 ] esi
mov [ eax + 0x44 ] 0x0
sub_10004d17
inc ecx
dec ebx
mov ch 0xe1
dec esi
jmp r-xdata
call sub_10004e2d
jpe r-xdata
push esi
mov [ eax + 0x44 ] 0x1
call sub_10002e50
add [ ebp + 0x17 ] esi
mov [ eax + 0x44 ] 0x0
xor esi esi
mov ebx 0xf
mov [ edi + 0x3c ] ebx
mov [ edi + 0x38 ] esi
mov [ edi + 0x28 ] 0x0
cmp [ edi + 0x20 ] 0x10
jb r-xdata
mov ecx [ edi + 0x28 ]
push ecx
call sub_1003c10a
add esp 0x4
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
jmp r-xdata
cld
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
mov bh 0x1a
jmp r-xdata
mov [ ebx + 0x44 ] 0x1
cmp [ edi + 0x3c ] 0x10
jb r-xdata
mov eax [ esi ]
cmp ebx eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10004e70
cmp [ esi - 0x49 ] 0x3b
dec edi
nop
add al 0x86
mov dh 0xe2
mov dl 0xfb
mov ecx 0x158
call sub_10004f22
cmp al 0xf
add [ eax ] al
add [ ecx + 0x5e88385e ] cl
sub [ ebx + 0x7210207e ] al
or al 0x8b
push esi
or al 0x52
call sub_1003c10a
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1003c10a
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov bh 0x3b
cmp [ eax + 0x44 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ecx + 0x4b ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ eax + 0x44 ] 0x1
push esi
mov [ esi + 0x44 ] 0x0
call sub_10002e50
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov ebx esi
mov esi [ esi + 0x4 ]
cmp ebx [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
sub_10004d2a
loopne r-xdata
dec [ ebx + 0x4d8b0846 ]
cld
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
mov ebx esi
mov esi [ esi + 0x4 ]
cmp ebx [ eax + 0x4 ]
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
jmp r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
je r-xdata
mov [ ebx + 0x44 ] 0x1
cmp [ edi + 0x3c ] 0x10
jb r-xdata
mov eax [ esi ]
cmp ebx eax
jne r-xdata
mov dl [ esi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ esi - 0x4b ] 0xe1
mov edx [ eax ]
mov [ edx + 0x44 ] 0x1
push eax
mov [ eax + 0x44 ] 0x0
call sub_10002e50
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x0
xor esi esi
mov ebx 0xf
mov [ edi + 0x3c ] ebx
mov [ edi + 0x38 ] esi
mov [ edi + 0x28 ] 0x0
cmp [ edi + 0x20 ] 0x10
jb r-xdata
mov ecx [ edi + 0x28 ]
push ecx
call sub_1003c10a
add esp 0x4
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4b ]
jmp r-xdata
call sub_10004e2d
jpe r-xdata
cld
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
mov bh 0x1a
jmp r-xdata
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ eax + 0x44 ] 0x1
push esi
mov [ esi + 0x44 ] 0x0
call sub_10002e50
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
dec esi
jmp r-xdata
mov ch 0xe1
push esi
mov [ eax + 0x44 ] 0x1
call sub_10002e50
add [ ebp + 0x17 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10004e70
cmp [ esi - 0x49 ] 0x3b
dec edi
nop
add al 0x86
mov dh 0xe2
mov dl 0xfb
mov ecx 0x158
call sub_10004f22
cmp al 0xf
add [ eax ] al
add [ ecx + 0x5e88385e ] cl
sub [ ebx + 0x7210207e ] al
or al 0x8b
push esi
or al 0x52
call sub_1003c10a
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1003c10a
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov bh 0x3b
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
sub_10004dcd
mov edx [ eax ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov dl [ esi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ esi + 0x44 ] 0x1
mov eax [ eax ]
push esi
mov [ eax + 0x44 ] 0x1
call sub_10002e50
mov [ ebx + 0x44 ] 0x1
cmp [ edi + 0x3c ] 0x10
jb r-xdata
mov edx [ eax + 0x8 ]
mov [ edx + 0x44 ] 0x1
push eax
mov [ eax + 0x44 ] 0x0
call sub_10002df0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
xor esi esi
mov ebx 0xf
mov [ edi + 0x3c ] ebx
mov [ edi + 0x38 ] esi
mov [ edi + 0x28 ] 0x0
cmp [ edi + 0x20 ] 0x10
jb r-xdata
mov ecx [ edi + 0x28 ]
push ecx
call sub_1003c10a
add esp 0x4
cld
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
mov bh 0x1a
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10004e70
cmp [ esi - 0x49 ] 0x3b
dec edi
nop
add al 0x86
mov dh 0xe2
mov dl 0xfb
mov ecx 0x158
call sub_10004f22
cmp al 0xf
add [ eax ] al
add [ ecx + 0x5e88385e ] cl
sub [ ebx + 0x7210207e ] al
or al 0x8b
push esi
or al 0x52
call sub_1003c10a
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1003c10a
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov bh 0x3b
sub_10004e2d
push eax
mov bh 0x1a
jmp r-xdata
mov bh 0x3b
dec edi
nop
add al 0x86
mov dh 0xe2
mov dl 0xfb
mov ecx 0x158
call sub_10004f22
cmp al 0xf
add [ eax ] al
add [ ecx + 0x5e88385e ] cl
sub [ ebx + 0x7210207e ] al
or al 0x8b
push esi
or al 0x52
call sub_1003c10a
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1003c10a
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10004e70
cmp [ esi - 0x49 ] 0x3b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10004e35
add eax [ eax ]
add esp 0x4
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] esi
push edi
mov [ edi + 0xc ] 0x0
call sub_1003c10a
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
cmp eax esi
pop esi
pop ebx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
sub_10004e70
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ecx
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10004e70
cmp [ esi - 0x49 ] 0x3b
dec edi
nop
add al 0x86
mov dh 0xe2
mov dl 0xfb
mov ecx 0x158
call sub_10004f22
cmp al 0xf
add [ eax ] al
add [ ecx + 0x5e88385e ] cl
sub [ ebx + 0x7210207e ] al
or al 0x8b
push esi
or al 0x52
call sub_1003c10a
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1003c10a
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
sub_10004f22
mov cl 0xd2
mov esi [ eax + 0x10 ]
mov ecx esi
cmp ecx esi
jae r-xdata
mov edi [ ebp - 0xc ]
mov ecx esi
cmp esi edi
jb r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx edi
push ecx
push edx
push eax
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
add [ 0x3001 ] al
and eax 0x2b
mov ch 0xc5
call sub_1000500b
mov edx [ ebp + 0xc ]
mov esi [ edx + 0x1c ]
cmp ecx esi
jae r-xdata
cmp esi edi
jae r-xdata
mov edx esi
cmp esi edi
jb r-xdata
mov esi ecx
xor eax eax
cmp esi edi
or eax 0xffffffff
test eax eax
setns al
jmp r-xdata
cmp [ ebp - 0x10 ] 0x10
mov ecx [ ebp + 0xc ]
jb r-xdata
mov edx edi
mov [ ebp - 0x4 ] al
test al al
je r-xdata
add ecx 0xc
mov ecx [ ecx + 0xc ]
jmp r-xdata
mov ebx [ ebx + 0x8 ]
mov ebx [ ebx ]
jmp r-xdata
sets al
cmp esi edi
jae r-xdata
push edx
push eax
push ecx
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
add eax 0x1522
add al 0x5d
mov ecx 0x35e1
inc eax
call sub_10004f7f
adc [ edx + 0x5 ] dh
mov edx [ edx + 0xc ]
jmp r-xdata
mov edi [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov esi edi
mov [ ebp + 0x10 ] esi
test al al
je r-xdata
cmp [ ebx + 0x45 ] 0x0
mov edx [ ebp + 0xc ]
je r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
cmp [ edx + 0x20 ] 0x10
mov eax [ ecx + 0x4 ]
cmp edi [ eax ]
test eax eax
pop ecx
add [ eax ] al
add [ ecx + 0x10 ] dl
push eax
push edx
push 0x0
call sub_100028b0
test eax eax
jns r-xdata
mov eax [ ebx ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0xd
push ebx
push edx
call sub_10010a30
mov eax [ ebp + 0xc ]
push eax
call sub_1003c10a
mov eax [ ebp + 0x8 ]
add esp 0xc
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
push eax
push edi
push ecx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
lea ebx [ edx + 0xc ]
mov edx [ ebx + 0x10 ]
lea ecx [ esi + 0xc ]
jb r-xdata
adc [ ebx + 0x7a830c55 ] cl
and [ eax ] dl
jmp r-xdata
jmp sub_100050ac
sub_10004f7f
mov eax 0x3fa3
add eax 0x3001
mov edx esi
cmp esi edi
jb r-xdata
mov esi ecx
cmp [ ebp - 0x10 ] 0x10
mov ecx [ ebp + 0xc ]
jb r-xdata
mov edx edi
add ecx 0xc
mov ecx [ ecx + 0xc ]
jmp r-xdata
sets al
cmp esi edi
jae r-xdata
push edx
push eax
push ecx
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
mov ebx [ ebx + 0x8 ]
mov ebx [ ebx ]
jmp r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
add eax 0x1522
add al 0x5d
mov ecx 0x35e1
inc eax
call sub_10004f7f
adc [ edx + 0x5 ] dh
mov edx [ edx + 0xc ]
jmp r-xdata
mov edi [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov esi edi
mov [ ebp + 0x10 ] esi
test al al
je r-xdata
cmp [ ebx + 0x45 ] 0x0
mov edx [ ebp + 0xc ]
je r-xdata
test eax eax
mov esi [ eax + 0x10 ]
mov ecx esi
cmp ecx esi
jae r-xdata
cmp [ edx + 0x20 ] 0x10
mov eax [ ecx + 0x4 ]
cmp edi [ eax ]
mov edi [ ebp - 0xc ]
mov ecx esi
cmp esi edi
jb r-xdata
pop ecx
add [ eax ] al
add [ ecx + 0x10 ] dl
push eax
push edx
push 0x0
call sub_100028b0
test eax eax
jns r-xdata
mov eax [ ebx ]
jmp r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx edi
mov edx [ ebp - 0x8 ]
add edx 0xd
push ebx
push edx
call sub_10010a30
mov eax [ ebp + 0xc ]
push eax
call sub_1003c10a
mov eax [ ebp + 0x8 ]
add esp 0xc
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
push eax
push edi
push ecx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
lea ebx [ edx + 0xc ]
mov edx [ ebx + 0x10 ]
lea ecx [ esi + 0xc ]
jb r-xdata
adc [ ebx + 0x7a830c55 ] cl
and [ eax ] dl
push ecx
push edx
push eax
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
and eax 0x2b
mov ch 0xc5
call sub_1000500b
mov edx [ ebp + 0xc ]
mov esi [ edx + 0x1c ]
cmp ecx esi
jae r-xdata
add [ 0x3001 ] al
cmp esi edi
jae r-xdata
jmp sub_100050ac
xor eax eax
cmp esi edi
or eax 0xffffffff
test eax eax
setns al
jmp r-xdata
mov [ ebp - 0x4 ] al
test al al
je r-xdata
sub_100050ac
call sub_10005100
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x2c
call sub_1003c1de
mov esi eax
xor eax eax
add esp 0x4
mov [ ebp - 0x14 ] esi
cmp esi eax
je r-xdata
lea ecx [ eax - 0x17 ]
inc ebx
add [ eax ] al
add [ ecx + 0x15ff0845 ] cl
cld
push edx
add al 0x10
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_1003c200
int3
mov ecx [ edi + 0x4 ]
mov [ esi ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ edi + 0x4 ]
mov [ esi + 0x8 ] ecx
lea ecx [ esi + 0xc ]
mov [ esi + 0x28 ] ax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] ecx
sub_10005100
dec ecx
cmp esp 0xffffffdc
push edi
add edx 0xffffff98
dec ecx
nop
add al 0xe0
add edx 0x4d
call sub_1000514f
sldt [ eax ]
add [ ecx - 0x77adefbf ] cl
add eax ebp
popfd
sub_10005198
push ebp
jmp r-xdata
jmp r-xdata
inc ebx
mov esi 0x1b67
mov edi 0xbaa
call sub_1000527b
add al 0x89
inc eax
add al 0x8b
inc esi
add al 0x89
add [ ebx + 0x40890446 ] cl
or [ ebx + 0x458b044e ] cl
or bh al
inc esi
or [ eax ] al
add [ eax ] al
add [ ebx + 0x5e108911 ] cl
mov esp ebp
pop ebp
retn 0xc
sub_10005200
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
jmp r-xdata
inc ebx
mov esi 0x1b67
mov edi 0xbaa
call sub_1000527b
add al 0x89
inc eax
add al 0x8b
inc esi
add al 0x89
add [ ebx + 0x40890446 ] cl
or [ ebx + 0x458b044e ] cl
or bh al
inc esi
or [ eax ] al
add [ eax ] al
add [ ebx + 0x5e108911 ] cl
mov esp ebp
pop ebp
retn 0xc
sub_10005270
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x29 ] 0x0
je sub_10005270
mov eax ebp
xor eax 0xe9000002
add [ ebx ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
xor edi edi
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
sub esi ecx
cmp al [ esi + ecx ]
cmp al 0x7a
ja r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
inc edi
inc ecx
cmp edi ebx
jb r-xdata
cmp al 0x5a
jbe r-xdata
mov al [ ecx ]
cmp al 0x41
jb r-xdata
mov dl [ esi + ecx ]
cmp al 0x5b
jae r-xdata
cmp al 0x61
jb r-xdata
cmp al dl
je r-xdata
cmp al dl
je r-xdata
movzx eax al
movzx edx dl
sub eax 0x20
cmp eax edx
jmp r-xdata
movzx eax al
movzx edx dl
add eax 0x20
cmp eax edx
jmp r-xdata
jne r-xdata
sub_10005285
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
xor edi edi
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
sub esi ecx
cmp al [ esi + ecx ]
cmp al 0x7a
ja r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
inc edi
inc ecx
cmp edi ebx
jb r-xdata
cmp al 0x5a
jbe r-xdata
mov al [ ecx ]
cmp al 0x41
jb r-xdata
mov dl [ esi + ecx ]
cmp al 0x5b
jae r-xdata
cmp al 0x61
jb r-xdata
cmp al dl
je r-xdata
cmp al dl
je r-xdata
movzx eax al
movzx edx dl
sub eax 0x20
cmp eax edx
jmp r-xdata
movzx eax al
movzx edx dl
add eax 0x20
cmp eax edx
jmp r-xdata
jne r-xdata
sub_100052f5
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
inc eax
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
call sub_10005285
add esp 0xc
pop ebp
retn
lea esp [ esp ]
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_10005325
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov eax [ fs : 0x18 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
lea ecx [ ecx ]
mov edi edi
lea edx [ eax + eax + 0x2 ]
push edx
push edi
push ecx
call sub_10005285
add esp 0xc
test eax eax
jne r-xdata
lea ebx [ ebx ]
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ esi ]
mov eax [ esi + 0x18 ]
test eax eax
jne r-xdata
mov esi [ esi ]
cmp [ esi + 0x18 ] eax
jne r-xdata
inc eax
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
cmp eax ecx
je r-xdata
mov ecx [ esi + 0x30 ]
xor eax eax
cmp [ ecx ] ax
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_100053d5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push eax
call sub_10005325
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax + 0x18 ]
pop ebp
retn
sub_100053f5
push ebp
mov ebp esp
sub esp 0xc
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov eax [ edi + 0x3c ]
mov ecx 0x5a4d
cmp [ edi ] cx
jne r-xdata
cmp [ ebp + 0x18 ] edx
jne r-xdata
cmp [ eax + edi ] 0x4550
jne r-xdata
mov ecx [ eax + edi + 0x7c ]
mov [ ebp - 0xc ] ecx
test ecx ecx
je r-xdata
push ebx
push esi
mov esi [ eax + edi + 0x78 ]
mov ecx [ esi + edi + 0x24 ]
mov eax [ esi + edi + 0x20 ]
add esi edi
add ecx edi
mov [ ebp - 0x4 ] ecx
mov ecx [ esi + 0x1c ]
add ecx edi
mov [ ebp - 0x8 ] ecx
mov ecx edx
add eax edi
shr ecx 0x10
mov [ ebp + 0xc ] eax
test ecx ecx
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
xor ebx ebx
cmp [ esi + 0x18 ] ebx
jbe r-xdata
jmp r-xdata
mov eax [ eax + ebx * 4 ]
add eax edi
push eax
push edx
call sub_100052f5
add esp 0x8
sub_10005480
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + ebx * 2 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + edx * 4 ]
add eax edi
cmp eax esi
jbe r-xdata
inc ebx
cmp ebx [ esi + 0x18 ]
jb r-xdata
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
add esi [ ebp - 0xc ]
cmp eax esi
jae r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov eax [ eax + ebx * 4 ]
add eax edi
push eax
push edx
call sub_100052f5
add esp 0x8
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
sub_100054b5
push ebp
mov ebp esp
sub esp 0x44
push ebx
xor eax eax
mov ebx 0x74
mov ecx ebx
mov [ ebp - 0x2a ] cx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x2c ]
push esi
mov eax 0x6e
push ecx
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x2c ] ax
mov [ ebp - 0x28 ] 0x6c0064
mov [ ebp - 0x24 ] 0x2e006c
mov [ ebp - 0x20 ] 0x6c0064
mov [ ebp - 0x1c ] 0x6c
call sub_100053d5
push 0x0
push 0x0
lea edx [ ebp - 0x44 ]
push edx
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x44 ] 0x7250746e
mov [ ebp - 0x40 ] 0x6365746f
mov [ ebp - 0x3c ] 0x72695674
mov [ ebp - 0x38 ] 0x6c617574
mov [ ebp - 0x34 ] 0x6f6d654d
mov [ ebp - 0x30 ] 0x7972
mov [ ebp - 0x2e ] 0x0
call sub_100053f5
add esp 0x18
mov esi eax
call sub_10005575
lea ecx [ ebp - 0xc ]
push ecx
push 0x40
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push edx
lea eax [ ebp - 0x8 ]
push eax
push 0xffffffff
mov [ ebp - 0x4 ] 0x2bf20
call esi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10005585
push ebp
mov ebp esp
sub esp 0x4c
call $+5
mov edi [ esp ]
add edi 0x14
mov ecx 0x27600
mov al 0xba
add al 0x8e
xor [ edi ] al
inc edi
loopne r-xdata
add eax 0x68a0218c
push cs
pushfd
sub bh [ eax - 0x675a8e2 ]
cmc
les ebx [ ecx ]
call 0x73d32543
das
dec edx
mov al 0x25
mov esp 0xecce31bd
jpe r-xdata
push es
xchg esp eax
and dh [ eax - 0x17a533c2 ]
jbe r-xdata
xchg esi eax
and al 0xb2
inc eax
into
pop esp
0x22940678 0x3eb0
0xe658
xchg edx eax
and [ esi - 0x19a735c4 ] ch
je r-xdata
lodsb [ esi ]
cmp al dh
dec ecx
pop esi
jl r-xdata
pop eax
push ds
cmp dl [ 0x557e1967 ]
scasb [ edi ]
mov ebp 0xc172d8df
inc ebp
in al 0x22
xchg edx eax
add [ ebx + 0x14cb79f8 ] ebx
mov eax [ 0xffffffff9502b031 ]
cld
sub_100089d0
mov [ 0xffffffff9d5ebc07 ] eax
js r-xdata
sbb dl dh
int1
sbb al 0x99
pop esi
mov ah 0x3f
rcr [ edi - 0x7c ] 0x1
mov ds [ edi ]
sbb dh bl
inc esi
mov bh 0x29
cmp ecx [ edx - 0x7f ]
push cs
pushfd
sub ah dh
sbb edx [ edi ]
inc ebx
scasd [ edi ]
test al 0x41
popfd
jge r-xdata
loop r-xdata
jecxz r-xdata
test al 0x59
and eax 0xed812ae6
sub bh [ esi ]
dec esp
jecxz r-xdata
ficom [ ecx - 0x246988fb ]
and [ ecx - 0x371c27c6 ] bl
insd
adc [ ebx - 0x1ca03500 ] bl
aam 0xfe
add al 0xda
out 0xd al
fbld [ esp + ebx * 4 - 0x5b ]
stosb [ edi ]
enter 0x652f 0x86
mov [ edi + 0x16312ecc ] eax
fsub st3
mov al [ 0x5d8a3572 ]
mov ecx 0x9b64827d
jbe r-xdata
inc edx
inc edx
push edi
insb
sbb [ ebx - 0x1e ] 0x26
cmp edx [ eax + 0x4e ]
movsd [ edi ] [ esi ]
jmp r-xdata
push es
add [ ebx - 0x1b ] esi
and bh [ eax - 0x40 ]
rcr [ ecx ] cl
cmp [ eax - 0x4b496e78 ] cl
cmp edx [ ecx - 0x56 ]
jae r-xdata
enter 0xc12e 0x47
jmp 0xffffffffbd0f6ad3
fld [ eax ]
or dl ah
add [ 0x4fa44ea9 ] ecx
retn 0xb46f
fbld [ edi + esi * 2 - 0x7d ]
daa
cld
mov ebp 0x822dd58
sti
adc eax 0x5bca6893
adc ch [ 0xffffffff8cc7c862 ]
rcl [ esi - 0x11f64e9f ] 0x48
scasd [ edi ]
iret
sub_10008f90
pop edx
mov ebx 0xa6909fc1
sar dl cl
cwde
push ss
mov ebp 0xf68e8e4a
mov ch 0x11
sahf
cmpsd [ esi ] [ edi ]
test [ eax - 0x7b ] 0x5f68b7ed
lahf
in al dx
call 0x157865f
jle r-xdata
jo r-xdata
in eax 0x2c
cmp eax 0xee71cad3
jl r-xdata
add ecx [ eax - 0x6a ]
scasd [ edi ]
cmc
pushad
popfd
xlat
mov ch 0x5c
push eax
pop ds
push ebp
movsb [ edi ] [ esi ]
mov bh 0x89
push edx
pushfd
jpo r-xdata
fxch st2
in al 0xcf
pop ebp
push es
adc al [ ebp - 0x6fb13809 ]
push ss
xor [ esi - 0x148d4791 ] ecx
test eax 0x5da63ac7
xor esi esp
retn 0x68a1
0xcfe4
fxch st6
out 0x28 al
rcr [ ebp + 0x2f ] 0x1
sub bl [ esi - 0x3f ]
int3
mov ebx 0xdfd3e5f9
test eax 0x1e294fc6
sti
mov ebx 0x69f34470
dec edi
mov bh 0xbd
lodsd [ esi ]
and [ ecx + 0x604c6411 ] bl
and dl [ ebp + esi + 0x6f ]
fstp [ ebp - 0x19d34cb8 ]
lds edi [ 0x3ed3da4b ]
std
push edi
cwde
xchg ebp eax
outsb
mov edi 0x91605908
add [ esi + 0x326b271c ] cl
aad 0x18
sub edi 0xffffff8c
sbb ah [ edi - 0x1fadef4f ]
outsb
scasd [ edi ]
fimul [ ecx + 0x4e ]
mov dh 0x34
push eax
fsubp st7
test [ ebx - 0x70bbc29c ] dl
fsubr [ edx - 0x8 ]
mov ch 0xd4
0xbfbe
sub_1000901a
mov esp 0xab621cc9
fstp st3
adc eax 0x5d1ea664
adc eax 0x98470bfa
sbb [ eax - 0x3d ] edi
sbb eax 0x5af3e816
sahf
stosd [ edi ]
mov [ ebp - 0x5a ] es
push 0xffffffae
dec eax
xchg esp eax
sbb eax 0xb5233075
0xa9d60cf7 0xc686
sub_10009910
jecxz r-xdata
cmpsb [ esi ] [ edi ]
cld
adc al 0x18
jb r-xdata
fsubr st5
jpo r-xdata
je r-xdata
loopne r-xdata
ror [ esi + ebp ] cl
sti
mov bl [ eax ]
ficom [ esi ]
mov [ esi - 0x8 ] ch
dec edi
js r-xdata
and esi 0xf316f1f
ror [ esi + 0x24 ] 0x15
inc edx
xchg ebx eax
or [ eax - 0x71 ] edx
cmp bh [ ebx + 0x3a ]
inc ebx
aad 0xa1
lodsd [ esi ]
sbb al dh
shl bl cl
r-xdata
popfd
sub [ esi + 0x66d042cc ] bh
hlt
pop eax
int1
inc ebp
sbb eax 0x36e5dc17
sbb eax 0x23db9a9f
call 0xffffffffaa149a56
out dx eax
scasd [ edi ]
dec esi
pop esp
mov edi [ edi + 0x1f ]
fwait
mov dh 0x15
and [ bp + di + 0x71 ] ch
div [ eax - 0x33 ]
dec ecx
xor eax 0xf6200057
or bl [ ecx - 0x67 ]
jl r-xdata
xlat
mov ecx 0x4c9c1a39
aam 0x77
mov dl 0x20
shl [ edx - 0x45028e95 ] 0x1
sbb al 0x50
int3
sbb eax esp
out 0x46 al
rcr [ esi - 0x46 ] 0x1
xchg edx eax
je r-xdata
scasb [ edi ]
in al dx
pop es
sbb bh [ edx + edi * 8 ]
shr al 0x5d
pop eax
daa
in al 0x42
push es
ficom [ esi - 0x5339ce83 ]

mov ebx 0xadee708a
dec esi
jpe r-xdata
cmp dh [ edx - 0x7e9da7c0 ]
out 0x1f al
outsd
xor [ edi ] ecx
popfd
and al 0xb2
retn
sub_10009d30
and ebx [ ebx - 0x44 ]
sub eax 0x27bea93f
dec edi
cmp dl [ eax - 0x48 ]
sbb esi edi
test eax 0x839f569f
stosb [ edi ]
sar [ edx + 0x1c ] cl
or al 0x7c
sub ah ah
mov ecx 0x53330a7a
cmpsd [ esi ] [ edi ]
mov al [ 0x72afbb1 ]
push edx
je r-xdata
sub [ 0xffffffff9705658d ] esp
sub dh [ eax + 0x1359881e ]
mov [ ecx + 0x30 ] ah
movsd [ edi ] [ esi ]
and eax 0xedae9178
xor ecx edx
retn
ja r-xdata
pop ebx
mov esp 0xbea93f2d
daa
cli
pop ebx
add al 0x1a
or [ ecx ] ebp
nop
mov al 0x4a
lodsb [ esi ]
popad
popad
sub_1000a060
sbb esp [ eax - 0x58 ]
mov ecx 0x4b0c5a0c
sbb eax 0x7f931c8f
shl [ ecx ] cl
out dx al
enter 0x8cff 0x1a
test al 0x69
0xa18b6b09 0x7249
salc
bound ebp [ edx ]
pushad
shr [ edx + edi * 8 - 0x28 ] 0x7c
movsb [ edi ] [ esi ]
fidivr [ eax + 0x736add57 ]
into
cmp al 0xc8
xor ah dl
dec edi
mov edi [ esi ]
push ds
fcomp st1
mov al [ 0x5bb2372e ]
mov [ 0xffffffffeaef07d4 ] al
jpo r-xdata
aam 0x4f
mov al [ 0xffffffff80f3457d ]
or [ ecx ] 0x72
inc ebp
mov ecx 0xf5a6302b
aam 0x72
je r-xdata
xchg [ esi - 0x69f6a6de ] dh
cmpsd [ esi ] [ edi ]
jbe r-xdata
inc esp
shl bl cl
sub dh [ eax - 0x71 ]
pop eax
push edx
loopne r-xdata
dec ebx
pushfd
sahf
push ebp
and dl dh
sbb [ edi ] edi
jge r-xdata
movsb [ edi ] [ esi ]
add al 0x67
test [ ebx + 0x4e3928d3 ] eax
movsb [ edi ] [ esi ]
pop esp
mov edx 0x75916c29
pop eax
jno r-xdata
0xd3654dc0 0x6d60
mov eax 0x3120111e
and [ esp + eax - 0x2c7c7a99 ] 0x28
cmp [ esi - 0x5c ] ecx
xor esi [ 0x2a9c0e86 ]
mov eax 0xf06e9181
jle r-xdata
sbb cl dl
sub dl ah
dec edx
enter 0xf466 0xea
adc [ esi - 0x29dd45d3 ] bl
hlt
pop ebx
call 0x2d87624e
stosb [ edi ]
cmp al 0xca
cwde
xchg ebx eax
aaa
mov [ edi - 0x3745538a ] edx
push esi
imul esp [ edi ] 0xfa4adc0c
outsd
out dx ax
jno r-xdata
pop es
pop edi
movsb [ edi ] [ esi ]
pop esp
rcl [ edi - 0x20 ] 0x6e
std
mov dh [ eax - 0x5a ]
and al 0xc2
push eax
mov es [ esi ]
cli
fstp st1
mov [ 0xffffffffdc4ec032 ] al
jecxz r-xdata
mov bh ah
add edx [ ecx ]
mov edi 0xdeac594c
or eax 0xc9ee2514
loop r-xdata
push ebp
xor al 0xdc
dec ebp
pop ebp
test eax 0xeff4317a
in eax 0xe8
push cs
sbb al 0x2a
mov eax 0xa16e99cb
sub [ esi - 0x33 ] bl
rcr [ ebp + 0x48 ] 0xd3
pushad
insd
mov eax 0xb2e1c71e
inc edx
rcr [ esi - 0x14 ] 0x1
dec ecx
enter 0x79c8 0x71

sub_1000a2f0
stc
mov al 0x9c
xchg ecx eax
inc [ edx ]
inc edi
xchg esi eax
call 0xffffffffa39f4de4
loope r-xdata
xchg edi eax
bound esi [ edx - 0x24 ]
cmc
dec edx
jb r-xdata
dec ebx
push ss
add [ edi ] ecx
fisub [ eax + 0x2061076b ]
xor edi [ edi ]
into
out 0x3d eax
jge r-xdata
mov al 0x67
in al dx
mov ebp 0x489ddd08
dec ebx
cmp edx eax
out dx eax
push cs
cmp al 0x29
jge r-xdata
cdq
cmc
and bh [ ecx ]
cwde
lodsb [ esi ]
jns r-xdata
adc eax 0xc38d9c2
das
pop ds
mov eax 0xca2e0cbb
std
dec esp
sahf
stosd [ edi ]
cmpsd [ esi ] [ edi ]
mov ecx 0x75ff2c03
dec edx
pushfd
fldlg2
xor cl al
push esi
in al 0x72
mov ecx esi
adc al bh
push 0x8f1c262e
leave
adc ebx [ edi + edx * 8 ]
cmovae ebp [ ebp + 0x24e342fd ]
sub_1000a490
fcom [ ecx - 0xa972492 ]
inc esp
inc edx
sub eax 0x25b2c9ba
cdq
or edx ebp
inc edx
jbe r-xdata
salc
xor esp [ ecx + 0x2b830968 ]
mov eax 0xd9a51cb
xor ebx 0x66bdc0ca
shl [ eax + 0x6d ] cl
mov eax 0xc0e61d16
pop edx
pop ebp
shr [ ecx - 0x24960a74 ] cl
aam 0xc3
test [ eax ] 0x4635739e
inc esp
cmp [ edi ] ebp
dec edi
mov bl 0xea
r-xdata
movsd [ edi ] [ esi ]
dec ecx
popfd
adc edx [ ebx - 0x547dce0 ]
pop eax
div [ edx + eax - 0x32 ]
frstor [ eax - 0xa ]
popfd
fisttp [ eax ]
stc
inc ebp
xchg [ ecx + 0x69 ] al
0x6daa8547 0x5258
std
mov ebp 0x2e0cd128
stosb [ edi ]
loopne r-xdata
lodsd [ esi ]
sub eax esp
aaa
cmpsd [ esi ] [ edi ]
sbb [ edx + ebp * 8 ] esp
jo r-xdata
outsd
salc
0xee7bb856 0x46d2
mov esi 0xe428a062
cmpsd [ esi ] [ edi ]
0x905944b6 0xb86d
sub esi [ ecx + 0x3 ]
cmp bl dh
cmp al 0x3c
int 0xd6
movsb [ edi ] [ esi ]
fimul [ eax ]
push eax
lodsd [ esi ]
cmp al [ ebx + 0x3 ]
hlt
sub_1000b1f0
and eax 0x291ef275
int1
les edx [ eax - 0x20 ]
outsb
stosd [ edi ]
add esp [ ebp - 0x52 ]
fadd [ ebx ]
inc esp
fild [ ecx + edi * 2 + 0x4c ]
adc bl [ ecx - 0x23b13f4e ]
jg r-xdata
cwde
mov al 0x12
mov edx [ 0x37c55216 ]
mov esi 0x8e006fbe
lahf
outsb
sbb al 0x43
xchg esp eax
xchg edi eax
adc eax 0xa4e930a2
ja r-xdata
mov esi 0x70e18c4c
rcr [ ecx ] 0x1
mov al [ 0xffffffffcaaf542e ]
hlt
test [ edi + ebx * 4 + 0x18be2ef4 ] 0x331c358f
add [ edi - 0x3973c6d4 ] ebx
push edi
or eax 0x2598480b
pop ss
add [ edx + ecx * 4 - 0x65f296a0 ] 0xb44cfba3
jmp 0x2b4db827
sub_1000c3f0
or [ esi + edx * 8 - 0x6f ] edi
in eax 0xce
dec edi
sbb [ edi + 0x39d1b7d0 ] cl
jae r-xdata
xchg ebx esp
jecxz r-xdata
add bh [ edi - 0x3b ]
jns r-xdata
in al dx
mov ebp 0x5d8bb1f5
cmp [ esi ] ecx
or [ ebx + 0x64 ] ebx
jmp r-xdata
sbb eax 0xce8dfdac
sub [ ebp + 0x4a ] esp
dec edi
sub [ ebx + 0x42 ] ebp
cmp esi edx
pop esi
rol [ ebx - 0x3d ] 0x1
popfd
xchg edx eax
jg r-xdata
pop ss
sbb al 0xaf
mov [ ss : ebx - 0x53684281 ] dl
push edi
sbb [ edx ] eax
jg r-xdata
jge r-xdata
test al 0xb
pop ebx
pushad
jmp r-xdata
call 0xffffffffe1ad5c38
scasd [ edi ]
out 0xa8 al
or ebx [ ebx + 0x60 ]
sbb [ ebp + 0x5a ] ebp
mov ch 0x8f
mov al [ 0xffffffff9307b427 ]
fsubr [ edi + 0x1a9675be ]
xchg [ ss : ebx ] edx
stosb [ edi ]
inc esi
mov esp 0x6e53a12f
or [ esi - 0x34798cdc ] dl
xlat
xor [ ebx - 0x21 ] cl
cmpsd [ esi ] [ edi ]
cli
mov bl 0xcd
iretd
salc
out dx eax
je r-xdata
adc [ esi + 0x6207877b ] 0xbcf4c0b
inc ebx
ja r-xdata
lodsd [ esi ]
jno r-xdata
iretd
adc edi [ ebx + 0x48 ]
inc ecx
insb
retn
0xd9857f0d 0x79de
fmul st7
xchg [ eax + 0x11f62167 ] ebx
imul ecx [ eax - 0x35 ] 0xffffff95
cmpsb [ esi ] [ edi ]
sub eax 0xef1d0dba
or [ 0x7d2ddf32 ] 0x71215e35
cmp eax 0x8844e748
sti
dec esi
das
cmc
push 0xffffff9a
or eax 0xded9857f
jns r-xdata
xchg [ ebx ] edx
or edx [ edx - 0x5f49061c ]
mov edi 0xdda6e347
mov eax [ 0xffffffffe0db898e ]
and ecx [ ebp + 0x3e ]
fbstp [ edx ]
inc ebx
stosd [ edi ]
jo r-xdata
insd
stosd [ edi ]
jecxz r-xdata
and [ ecx + 0x3d ] esi
dec eax
out 0x44 eax
mov bl bh
outsb
xor esi edi
and ebx 0xffffff9c
sub_1000d230
cvttps2pi mm3 [ edx + esi * 2 + 0x14 ]
dec eax
mov ebx 0xe8a3ed2d
pop ebx
jo r-xdata
xlat
cmp [ esi - 0x1c ] edx
int1
pop ebx
mov ebp 0xef61082f
test [ ebx - 0x25 ] ch
dec ebp
adc al [ ebx + 0x19 ]
jle r-xdata
push cs
pop ss
xor al al
dec esi
mov edi fs
jne r-xdata
mov ebp 0xdb6d5e81
jo r-xdata
out dx al
in al dx
jecxz r-xdata
adc eax 0x7c1c783a
or bl [ ebx ]
loop r-xdata
int1
out dx al
jmp 0x8834a170
sbb al 0xaa
out 0x59 eax
mov edi 0xe51f7b0c
mov edi 0x24131998
xchg edx eax
cmpsb [ esi ] [ edi ]
sbb dl [ ebx + 0x669786f8 ]
xor al 0x3b
mov [ edi + 0x29807b7e ] gs
les ebx [ esi + 0x4d63f443 ]
mov cl 0xbf
mov bl 0xc7
stc
std
mov ebp 0x1a0cd328
dec [ edx - 0x60400ae8 ]
inc eax
mov [ ebx ] bh
leave
dec eax
jle r-xdata
pmulhuw mm7 mm3
inc eax
xchg edx eax
and bh dh
mov cl 0x47
mov al 0x1b
mov edi ebp
ror [ esp + eax * 2 - 0x29 ] 0x39
push esi
in al 0xf1
cli
pop ecx
adc eax 0x3e194661
jle r-xdata
cmp ecx eax
push esi
imul edi edi 0x55e373e8
imul ecx [ ebx + 0x1 ] 0x42162212
sbb ch [ ecx - 0x1ea953ca ]
outsb
cld
pop es
popfd
inc esi
iretd
sbb eax 0x9f67058e
push ebp
push ebp
test eax 0xa333a827
adc eax 0xd666ee2a
mov al 0x3e
inc edi
jno r-xdata
ja r-xdata
vpblendmw zmm7 k1 zmm1 [ edx - 0x680 ]
mov ah 0xcb
and [ edx - 0xe ] 0xf5
dec ecx
jpe r-xdata
or [ esi ] 0x17
scasd [ edi ]
cmc
cmpsb [ esi ] [ edi ]
pushfd
pop ecx
push ds
sahf
outsb
jl r-xdata
daa
jge r-xdata
popfd
fisttp [ eax ]
in al dx
pop ecx
movsb [ edi ] gs : [ esi ]
fstp [ ebx - 0x4 ]
pop es
ja r-xdata
lahf
adc [ 0x5c55705c ] ebp
push ecx
push 0x47
aad 0x76
mov ebp edi
outsd
dec edi
and [ edi + 0x50 ] ebp
outsb
add al 0xa
les eax [ ss : edx ]
insd
jecxz r-xdata
mov ch 0x43
in al 0x1c
dec esp
jpo r-xdata
mov ebp 0xea79d32f
sub eax 0x5c55705c
dec esi
fsubr st1
lea ecx [ esi - 0x41a55d82 ]
ror [ edi - 0x8 ] 0xb
jpo r-xdata
jmp 0x5e324e56
r-xdata
or dh [ eax + 0x6 ]
jae r-xdata
pop ds
and eax 0xd4010b99
and [ ecx - 0x64d427c1 ] 0xd
0x2cc2cc0f 0xd4b5
and eax 0x6d035c7b
sti
insb
ja r-xdata
add al 0xc
push eax
pop ecx
bound edx [ eax + 0x595c1b8 ]
ja r-xdata
aas
fsubr [ ebx ]
fwait
or eax 0xc2cc0fea
sub al 0xb5
aam 0x62
jae r-xdata
stc
and al [ ebx - 0x76 ]
in al dx
pop ecx
pop es
add ecx edi
salc
imul esi [ 0x43e5d609 ] 0x14
out dx eax
pop edi
shl [ edi ] 0x1
test bl dh
cmpsd [ esi ] [ edi ]
jge r-xdata
stosb [ edi ]
cmp [ ebp + 0x3e43b502 ] dl
in al 0x1c
or [ edi ] dl
movsb [ edi ] [ esi ]
aam 0x2f
dec ebx
clc
add [ ebx ] dl
mov edx 0xa0726147
push 0xb82a64a9
lds edx [ eax ]
jne sub_1000d370
jns r-xdata
cmc
imul ebx ebx 0xafb9a8e0
0xaf648d78 0xa6f5
das
sar [ ecx - 0x16 ] cl
movsd [ edi ] [ esi ]
mov dl 0x7f
mov ah 0x61
call 0x87979131
pop esp
shr [ eax ] cl
pop esi
in al dx
stc
int3
sub_1000d370
jo r-xdata
insd
jae r-xdata
push eax
pop ecx
bound edx [ eax + 0x595c1b8 ]
ja r-xdata
add al 0xc
push ecx
push 0x47
aad 0x76
mov ebp edi
outsd
dec edi
and [ edi + 0x50 ] ebp
sti
insb
ja r-xdata
and eax 0x6d035c7b
scasd [ edi ]
cmc
cmpsb [ esi ] [ edi ]
pushfd
pop ecx
push ds
sahf
outsb
jl r-xdata
daa
jge r-xdata
aas
fsubr [ ebx ]
fwait
or eax 0xc2cc0fea
sub al 0xb5
aam 0x62
jae r-xdata
stc
and al [ ebx - 0x76 ]
in al dx
pop ecx
pop es
add ecx edi
salc
imul esi [ 0x43e5d609 ] 0x14
out dx eax
pop edi
shl [ edi ] 0x1
test bl dh
cmpsd [ esi ] [ edi ]
jge r-xdata
lahf
adc [ 0x5c55705c ] ebp
outsb
add al 0xa
cmp [ ebp + 0x3e43b502 ] dl
in al 0x1c
or [ edi ] dl
movsb [ edi ] [ esi ]
aam 0x2f
dec ebx
clc
add [ ebx ] dl
mov edx 0xa0726147
push 0xb82a64a9
lds edx [ eax ]
jne sub_1000d370
jno r-xdata
ja r-xdata
jns r-xdata
popfd
fisttp [ eax ]
in al dx
pop ecx
movsb [ edi ] gs : [ esi ]
fstp [ ebx - 0x4 ]
pop es
ja r-xdata
cmc
imul ebx ebx 0xafb9a8e0
0xaf648d78 0xa6f5
das
sar [ ecx - 0x16 ] cl
movsd [ edi ] [ esi ]
mov dl 0x7f
mov ah 0x61
call 0x87979131
pop esp
shr [ eax ] cl
pop esi
in al dx
stc
int3
stosb [ edi ]
les eax [ ss : edx ]
insd
jecxz r-xdata
mov ch 0x43
in al 0x1c
dec esp
jpo r-xdata
mov ebp 0xea79d32f
sub eax 0x5c55705c
dec esi
fsubr st1
lea ecx [ esi - 0x41a55d82 ]
ror [ edi - 0x8 ] 0xb
jpo r-xdata
jmp 0x5e324e56
r-xdata
or dh [ eax + 0x6 ]
pop ds
and eax 0xd4010b99
and [ ecx - 0x64d427c1 ] 0xd
0x2cc2cc0f 0xd4b5
sub_1000d490
add [ esp + ecx * 2 - 0x26 ] cl
add dh ch
dec esi
mov al [ 0xffffffff8e1dbc2e ]
add [ ebp - 0x6a ] bh
push esi
jbe r-xdata
xchg edx eax
je r-xdata
dec ecx
dec eax
salc
push cs
or eax 0xee7a7c4b
scasb [ edi ]
push esi
xchg ecx eax
mov [ 0xed64849 ] al
enter 0x5c21 0xea
dec ebx
and [ ecx - 0x6cb6cd8c ] 0x9c
sub [ edi ] esi
push edx
out 0xeb eax
fsub [ esi - 0x3a8b76a8 ]
aad 0xfa

sub_1000d620
sbb dh cl
shr [ eax - 0x3d ] cl
xchg ebx eax
nop
jns r-xdata
add [ ebx ] 0x1e
stosb [ edi ]
mov dh 0x44
shr bl cl
test ebp ecx
and ch al
mov ecx 0x82b5e906
xchg [ edx - 0x7db3185d ] edx
lahf
cmp al 0xf7
dec edi
pushad
lodsd [ esi ]
mov esp 0xbc5681c9
test edx ebx
movsd [ edi ] [ esi ]
in al 0xed
push ds
xchg ebp eax
xlat
push esi
in al dx
jpe r-xdata
inc ebx
pushad
jb r-xdata
dec ebx
bound edi [ ecx - 0x763c3747 ]
mov gs [ edx + 0x2ce39fd6 ]
inc ecx
pushfd
pop ecx
adc eax 0x956f8512
movsd [ edi ] [ esi ]
stc
cmpsb [ esi ] [ edi ]
push ebx
outsb
jg r-xdata
rcr ah cl
shr [ edi + edi * 8 ] 0x1
cmp al 0x19
pop ebp
mov ch 0xb2
pop esp
outsd
cmp al 0xa
sbb edx [ ebx + 0x7c ]
push 0xfbc00043
dec eax
and bl 0x78
mov bl 0x83
test al 0x69
js r-xdata
out dx al
mov ebx 0x36d58184
aas
jo r-xdata
fmul [ eax ]
dec ecx
pop es
or al 0x3c
lodsb [ esi ]
add [ ecx - 0x76 ] ebx

shr esi 0x1
sub_1000dc10
jne r-xdata
fsub st2
je r-xdata
movsb [ edi ] [ esi ]
inc esp
mov bh 0x43
push esi
in al 0xf1
les edx [ edx + 0x2ec4ef95 ]
xchg esi eax
clc
retn
jno r-xdata
add eax 0x8deab6a
add [ esi + 0x2e6efd4d ] cl
inc esi
inc ecx
pop [ ecx ]
pmaxub mm6 [ eax - 0x20c7fbfb ]
r-xdata
ja r-xdata
mov [ 0xffffffff82f494ac ] al
popfd
adc ebx [ eax ]
inc ebp
mov bh 0x29
xor eax 0x908a3e7f
sub eax 0x23dcb59
push edi
sub [ edx ] eax
add [ ebx + 0x58 ] edx
dec eax
loope r-xdata
push 0xffffffab
fimul [ eax ]
in al dx
das
inc esp
rcl ebp 0x21
sbb [ esi - 0x48a3b4fd ] dh
sbb edi [ edx ]
cdq
jmp 0xffffffffb2190ed6
sub bh [ eax + 0x1f933c11 ]
xor ebx 0xcde05df0
xchg edi eax
push 0x67e80a06
fnstcw [ edi ]
0xffc89a53 0xe2d3
aas
fmul [ ebx ]
cwde
mov ah 0xf
int1
push es
xchg esp eax
jb r-xdata
cmpsb [ esi ] [ edi ]
pop edx
mov ebx 0xaa0bec21
scasb [ edi ]
cmp al 0x49
pushfd
cli
mov edx 0x95237a45
pop es
outsb
push esi
inc ebp
xor [ esi + 0x95c5fc1 ] bh
jpo r-xdata
push ebx
pop eax
0xec2f
sub_1000dcc0
push esi
mov dh 0x91
jpe r-xdata
test [ eax + 0x3a ] edx
cmp eax [ ebx + 0x30 ]
fist [ edi ]
add bl [ edx ]
clc
and ah al
cmp al 0x22
cld
jne r-xdata
scasb [ edi ]
push 0x45
fmul [ esp + ecx - 0x2b27200 ]
outsb
inc esi
inc ecx
pop [ ecx ]
pmaxub mm6 [ eax - 0x20c7fbfb ]
r-xdata
adc ebx esi
mov [ 0xffffffff82f494ac ] al
popfd
adc ebx [ eax ]
inc ebp
mov bh 0x29
xor eax 0x908a3e7f
sub eax 0x23dcb59
push edi
sub [ edx ] eax
add [ ebx + 0x58 ] edx
sub bh [ eax + 0x1f933c11 ]
xor ebx 0xcde05df0
xchg edi eax
push 0x67e80a06
fnstcw [ edi ]
0xffc89a53 0xe2d3
aas
fmul [ ebx ]
cwde
mov ah 0xf
int1
push es
xchg esp eax
jb r-xdata
cmpsb [ esi ] [ edi ]
pop edx
mov ebx 0xaa0bec21
scasb [ edi ]
cmp al 0x49
pushfd
cli
mov edx 0x95237a45
pop es
outsb
push esi
inc ebp
xor [ esi + 0x95c5fc1 ] bh
jpo r-xdata
push ebx
pop eax
0xec2f
sub_1000dfe0
nop
je r-xdata
cmc
arpl [ edi ] si
or [ esi ] esp
sub [ ebp - 0x525fedf4 ] 0x78
push es
mov al 0x4e
jpo r-xdata
mov bh 0x46
xchg ebp eax
sbb al 0x4c
les ebp [ ebp + 0x58c6b830 ]
out 0x9c al
rcl [ edi ] cl
push ds
lodsb [ esi ]
push 0xffffffa2
push esi
shl esp 0x1
sub al 0xd0
dec eax
xor [ edi ] 0x74fac57b
outsd
fisttp [ ebp + 0x42 ]
cmp al 0x4e
push esp
loop r-xdata
shr al cl
jb r-xdata
inc esi
cmp dl [ eax + 0x2cdaed93 ]
imul esi edi 0x6f
cld
add ebp [ eax - 0x5b ]
fadd [ ecx + 0x736cdf47 ]
clc
adc eax 0x4fd76d4c
fsubr st1
movsd [ edi ] [ esi ]
jle r-xdata
xor [ esi - 0x2c ] al
or [ edi - 0x27207ad8 ] dh
pop esi
push ebp
pushad
out dx al
sub al 0x60
cwde
dec esp
mov ah 0x15
xor [ esi - 0x69f70d3e ] 0xffffffaf
out dx eax
dec eax
dec ebp
cwde
shl [ ebx ] cl
cmp edx [ edi - 0x7b95132b ]
adc ah [ eax - 0x27493e53 ]
imul esi [ eax + 0x10 ] 0x392c9e10
mul [ edx + 0x68 ]
or [ esi ] 0x93
scasb [ edi ]
cmp eax 0x7b62d446
add edi eax
pop ds
xlat
retn 0xb83a
sub_1000e600
adc eax 0x88fa6c22
push ss
pop edx
imul ecx [ 0x430d6185 ] 0x15c43450
mov ebp 0xcc11e8fd
cmpsb [ esi ] [ edi ]
mov bh 0x9f
dec eax
insb
jns r-xdata
arpl [ edi + 0x38 ] si
dec esi
pushfd
idiv al
outsb
mul [ eax + 0x30 ]
mov esi 0x73441ecf
inc esp
imul esp [ esi + 0x3dc17c1d ] 0x3b
aaa
or [ ebp - 0x76 ] edx
scasd [ edi ]
inc edx
jpe r-xdata
add eax 0xfa6c2215
mov [ esi ] dl
add dl [ edi ]
push 0xe1dfadb4
or [ edx ] bl
jns r-xdata
mov [ 0x225948e3 ] eax
stc
0x23ec
sub_1000e7b0
sbb cl al
daa
0xda803528 0x2608
jle r-xdata
scasb [ edi ]
cwde
stosd [ edi ]
and [ edx + 0x2913a12c ] ecx
pop edx
jle r-xdata
and eax 0x7ba09918
inc ecx
into
cmp eax 0x61081c6b
xor ebp esp
cli
sbb [ edx - 0x5c2a35c4 ] ch
jl r-xdata
leave
inc edi
xchg esi eax
call 0xffffffffad862468
xor eax 0x8950c236
loope r-xdata
outsb
inc eax
into
xlat
in eax dx
cmc
dec ebx
jl r-xdata
or al 0x19
imul esi [ ebx ] 0x7e450320
mov ebp 0x3157b09f
push ds
pushad
std
sbb [ edx ] esi
ror ch 0x18
dec edx
jge r-xdata
xchg esp eax
sbb al 0xa4
xor dl [ ecx + 0x160f3418 ]
xchg [ ecx ] dl
hlt
cwde
loope r-xdata
and [ edx ] ecx
cli
sbb bh bh
push eax
leave
call 0x374782a8
scasb [ edi ]
cmp al 0xbe
insw
sbb ebp [ edx ]
xor [ esp + ecx * 2 + 0x7cabe1da ] bh
sub edi esi
xor dh [ ebx - 0xb999832 ]
sbb [ ebx + 0x22e924cb ] 0xd2
jmp 0x66060ea
in al dx
scasb [ edi ]
jge r-xdata
pop esp
imul eax [ 0x332db81a ] 0xe85acd81
dec edi
0x3cae2746 0x66be
insd
stosb [ edi ]
cwde
mov ah 0xc9
lodsd [ esi ]
inc esi
aad 0x25
sbb [ ecx - 0x31be8460 ] bl
sub_1000e8a0
clc
push ecx
pop edx
call 0x374782a8
scasb [ edi ]
cmp al 0xbe
shr [ ebx ] 0x5a
jecxz r-xdata
inc [ edi + edx * 4 + 0x24 ]
mov dl 0xcb
dec eax
jl r-xdata
inc esp
xchg edi eax
and al 0xb2

cld
sub eax 0xe479ca5b
adc bh [ edx ]
cmp [ ebp + 0x7c ] bl
or bl [ ebx ]
loop r-xdata
cmc
js r-xdata
pop ss
cmc
rcr [ edx + 0x4167f07f ] 0xbd
mov ebx 0x93af68b7
loope r-xdata
les esi [ eax + ebx * 2 - 0x5f ]
jo r-xdata
sub [ edi - 0x5e ] esi
ja r-xdata
fwait
pop es
insb
das
nop
jpe r-xdata
out 0xa1 eax
jle r-xdata
push esi
pop edi
aaa
call 0x495e3161
out dx al
or ecx [ ebx - 0x78 ]
mov eax [ 0x375f56f5 ]
sbb al 0xf3
maxps xmm2 [ edi - 0x4c ]
ror [ ebp - 0x72b5992 ] 0x51
loop r-xdata
cmp dh al
fbld [ edi - 0x68536b88 ]
std
cmpsb [ esi ] [ edi ]
xchg esi eax
add dh [ esi - 0x1888e57a ]
pop ecx
mov bh 0x6
dec esp
out 0x31 al
push 0x7f2f02fc
enter 0x8a1f 0x82
pushfd
inc edx
adc al 0xa2
mov bl 0x7a
inc esp
insw
jecxz r-xdata
jpe r-xdata
add al bh
xchg ebp eax
jmp r-xdata
clc
add ebp ecx
lea esp [ esi + 0x35 ]
add al 0xfc
mov cl 0x44
rcl [ esi + edi * 8 ] cl
push ss
cmp [ 0xffffffff8710bc73 ] dl
or [ edi + esi * 8 ] al
hlt
and [ edx ] ecx
cli
sbb bh bh
push eax
leave
and eax 0x7ba09918
inc ecx
into
pop esp
imul eax [ 0x332db81a ] 0xe85acd81
dec edi
0x3cae2746 0x66be
insd
retn 0x4210
mov ebx [ ebp + 0xf413cae ]
test [ esi ] esi
lodsd [ esi ]
maskmovq mm7 mm5
in eax dx
aaa
paddq mm5 mm3
mov eax [ 0x7ace427e ]
push edx
sub ebx [ fs : ebx - 0x6f35fcf3 ]
scasd [ edi ]
js r-xdata
aam 0x44
dec eax
sub [ ecx ] eax
dec edx
fsubr st5
mov cl 0x9e
xchg ebx eax
pop edx
and [ ecx + 0x716ea28b ] al
js r-xdata
push ecx
mov al [ 0xffffffffecc947eb ]
aaa
aas
cvttps2pi mmx1 [ 0xffffffffc75829bf ]
jb r-xdata
call 0xffffffffe0bf24de
pop ss
out dx al
cmc
mov esi esp
aad 0x49
mov ebx 0x47eba051
leave
in al dx
jmp r-xdata
sub [ ebx + 0x5c ] dh
0xa98cc2fb 0xc2e5
sub_1000ecc0
rcr [ esi + 0x61 ] 0x1
imul [ ebx + ebp * 2 + 0x26114ddb ]
stosb [ edi ]
xor edi [ eax + 0x6 ]
pop ss
out 0xa0 al
cmp eax 0xe3650a0c
mov al [ 0x6e51df6f ]
inc edi
fld [ edx - 0x73 ]
std
outsd
dec esi
inc esp
out 0x11 eax
push esi
in al 0xff
mov ebx cs
mov eax 0xd739c753
je r-xdata
into
mov eax [ 0xffffffffe987b0f7 ]
and al 0xf7
arpl bp dx
0xf0b8c6ae 0x817e
sub_1000ee00
je r-xdata
dec ebp
0xc652aa76 0xe23e
sbb bh dh
add [ edi + 0x40 ] ebx
dec di
pop ss
call 0xffffffffa16b9860
les ecx [ ecx + 0x5 ]
sar [ 0xffffffffe1d1d8a8 ] cl
insd
cli
mov [ esi ] dl
cli
mov ecx 0x441f1325
inc edx
dec ebp
mov ebp 0x33f465ec
aad 0x3d
jge r-xdata
fcmovu st0
dec esi
fsubr [ edx + 0x3f ]
retn
dec ecx
add eax 0xd8a83dd2
shl ecx 0x1
xchg ebx eax
dec esp
push cs
mov eax 0xc730d84a
inc edx
js r-xdata
cmp eax 0xe1d1d8a8
das
mov edx 0x7fe98648
sub_1000eea0
adc [ ecx + 0x69 ] bl
inc esi
dec eax
salc
push 0xb82a26c9
jne r-xdata
js r-xdata
loope r-xdata
or edi [ ebp + 0x41 ]
leave
retn
mov esi 0x8e00a78e
xchg edi eax
out dx eax
sub [ ebp + 0x29 ] cl
0x9f803af3 0x4268
mov [ ss : edx + 0x27 ] ebx
das
test [ ebx + ebp * 8 - 0x3a1008d1 ] ecx
in eax 0x37
in al dx
adc al 0x6e
jpe r-xdata
cmp al [ eax - 0x2fbd9761 ]
cmp ah al
outsd
cld
mov cl [ eax + 0x2b ]
popad
cmp al [ edx ]
push edx
sbb [ eax - 0x3309d8ea ] ecx
movsd [ edi ] [ esi ]
mov esp 0x32ecc300
dec edx
and [ edi - 0x4d ] ah
and eax 0x78444067
mov eax [ 0x20c7317e ]
fwait
pop ebp
sbb eax 0xc6ac33c8
pop esi
0x11c35078 0x5670
sub_1000f080
movsb [ edi ] [ esi ]
and eax 0xe8e00593
movsd [ edi ] [ esi ]
xor al al
push ds
lahf
or [ ebp + edx * 2 - 0x46445dec ] 0xc1
xchg edi eax
pushfd
cmpsd [ esi ] [ edi ]
in al dx
adc ah [ edx + 0x4dc7bc2e ]
xchg edx eax
sub_1000f0d0
mov al 0xbd
or [ edx + 0x6b ] dl
or edx [ eax ]
xchg edx eax
push esp
fdiv [ edi + 0x6f8e489f ]
add [ edx - 0x619201e2 ] dl
mov esi 0x71ff8fce
lahf
outsb
sub [ ebx - 0x6c ] al
xchg esi eax
das
cwde
pop es
lahf
lodsb [ esi ]
0xad3b
sub_1000f1b0
test [ esi + 0x66 ] esi
0x57c99f42 0x13c4
xor ebp 0xffffffc8
jo r-xdata
cmp [ ebx ] esp
sbb ah [ ebx + 0xacb681f ]
rcr [ 0x6c73885d ] cl
push cs
cwde
sub bh [ eax - 0x675d18f0 ]
or [ edi ] 0x9a
sub dh ah
leave
pop edi
bound edx [ edx ]
xor ebp 0xffffffc9
inc eax
cmp eax 0x13a2d0c7
test eax esp
popfd
div [ edx - 0x1dd6bac0 ]
sti
retn 0xa198
adc esi edx
pop esi
in al dx
int1
dec ebp
0x83cdb24e 0xbbac
cmc
push ebx
cmp [ eax - 0x26 ] dh
cmpsb [ esi ] [ edi ]
pop edx
xor [ esi + 0x4 ] 0x92
sub ah al
cmp eax 0x748c58a0
push edx
sbb eax 0x37c70893
test eax 0xd80018b5
hlt
sub_1000f270
mov [ ecx ] es
jae r-xdata
dec eax
mov ebp 0x28e3342f
loopne r-xdata
xchg ebp eax
lodsb [ esi ]
sbb al 0x44
shl [ eax + 0x65 ] cl
cmp [ edx ] eax
enter 0x5c70 0x73
push 0x5e
in al dx
stc
int3
div [ edx - 0x1167b2c0 ]
cmc
adc cl 0x22
dec esp
shl [ ebx ] 0xa
mov esi 0xdf4f9e9e
push ecx
push esi
shl [ edx ] 0xec
pushfd
inc ebx
sub_1000f2e0
inc ebp
loope r-xdata
inc esp
shl [ eax + 0x65 ] cl
cmp [ edx ] eax
enter 0x5c70 0x73
push 0x5e
in al dx
stc
int3
mov al 0x10
aad 0x20
push 0xf
cmp bh dl
sar [ ecx ] 0x97
fnstenv [ edi + 0x70 ]
add dh [ ebx - 0x1b ]
cli
fimul [ esi ]
and eax 0x1c4e7f6e
sub esi [ eax - 0x6cddaf79 ]
add eax 0x5b4c40d8
sub al 0x46
mov bh 0x29
xor eax 0x66a968a4
aad 0x47
lds edx [ eax ]
inc edx
jne sub_1000f270
in al dx
popad
shr ebx cl
lds eax [ ebx - 0x19295f94 ]
jpe r-xdata
add ebx [ esi ]
fwait
mov bh 0x44
shl [ ebx ] cl
test [ ebp - 0x79 ] bh
or eax 0x2fbd4826
xor al 0xe3
sub al ah
insd
div [ edx - 0x1167b2c0 ]
cmc
adc cl 0x22
dec esp
shl [ ebx ] 0xa
mov esi 0xdf4f9e9e
push ecx
push esi
shl [ edx ] 0xec
pushfd
inc ebx
sbb eax 0x3ce923b1
xchg esi eax
xchg esp eax
pop ecx
cmp esp ebp
inc ebx
pop edi
xchg esi esi
test [ edx ] dl
enter 0xbe31 0x48
fsubr st3
jns r-xdata
sbb al 0x2b
mov al 0x87
push eax
and dl [ ebx + 0x4c40d805 ]
pop ebx
inc edi
mov ecx 0xfbe0a657
int3
sub_1000f620
pushfd
fld [ esi + eax * 2 ]
mov bh 0x29
xor eax 0x6b2968a4
aad 0x47
lds edx [ eax ]
inc edx
jne r-xdata
mov [ ecx ] es
jae r-xdata
add ebx [ edi ]
or eax 0x3e2dbb49
cdq
push edi
pop ebx
dec esp
mov ch 0x28
sub_1000f640
fisttp [ ecx ]
mov edx 0xdb4c2492
dec ebp
sub cl dl
pop esi
call 0x321a81c8
dec esp
shl [ ebx ] 0xb
and ecx [ gs : eax + eax * 8 ]
jbe r-xdata
out dx eax
popad
jl r-xdata
mov bh [ 0xffffffffc6f719a7 ]
mov al 0x9b
insb
xor eax 0x72e4dd4c
add [ 0xffffffff9068a259 ] al
mov [ 0x276e447 ] al
sbb eax 0x37c6ac8b
test eax 0x8645ffb6
dec esp
cld
shl ch 0x1
mov [ 0x487d8f1d ] eax
cmp al dl
dec ecx
fnstsw ax
xchg edx eax
add esi [ ebp + 0x49 ]
sub esp [ ecx - 0x36 ]
add cl [ eax - 0x168f987c ]
pop ebx
mov cl 0x4
pop esi
pop ecx
stosb [ edi ]
add eax 0x68a435de
imul ebp [ ebx - 0x2b ] 0x6a81cd47
mov [ 0xffffffff9e27e428 ] al
mov dh 0x44
push ecx
movsb [ edi ] [ esi ]
push ebx
insd
jecxz r-xdata
jbe r-xdata
dec esp
fucom st4
jb r-xdata
pop ecx
pop esi
into
add [ esi ] esi
push edx
sub cl [ eax - 0x3b09d8ea ]
retn
mov esp 0x8cfec7e3
cdq
insb
scasb [ edi ]
add eax 0x9068a259
sub_10010b80
fst [ ebx - 0x4c ]
pop es
ja r-xdata
imul esi [ 0x5e5f050c ] 0xffffffbf
sub [ eax + 0x74b9e786 ] 0x920ba295
xchg edi eax
loopne r-xdata
fistp [ eax ]
adc eax 0xd64f62af
jpo r-xdata
pop ds
sbb ebp [ edi ]
sbb ch ah
adc al 0xce
xor [ ecx + 0x9 ] bh
inc esi
aam 0xd2
push eax
dec [ ebx + ebx - 0x453bc958 ]
sbb [ esi ] dh
cld
mov bl [ ebx - 0x6fb8db9e ]
stosb [ edi ]
stosb [ edi ]
fdivp st6
into
int3
push es
sbb edx ebp
mov bh 0xc2
js r-xdata
imul ch
adc ah [ edi + 0x6b ]
push esp
and al 0xd8
pmuludq mm4 mm4
cdq

or [ esi ] edi
inc esi
sub_10011f30
test [ edx - 0x49f31b71 ] dh
xor [ ebx ] dl
nop
push esp
or ch ah
out 0x37 al
cmp al 0xfc
pop esi
cwde
ror [ ebx + 0x34b214e8 ] 0x7a
fist [ esp + ecx * 2 - 0x25731ffa ]
add [ ecx + 0x1f ] eax
sub [ esp + eax ] ebx
retn 0xebe6
sub_10012070
jo r-xdata
sti
inc ebp
inc ebx
xchg ebp eax
out dx eax
jmp 0x9383240
shl edx 0xc2
jae r-xdata
push ds
mov dh 0x6a
xchg edx eax
xchg [ edx - 0xd ] al
fadd [ ecx + 0x43 ]
fisubr [ eax + 0x7d ]
rol [ esi ] cl
shr [ esi - 0x37 ] 0x1
sbb al 0x56
stosd [ edi ]
fsubr [ eax + 0x48ba2c9f ]
loop r-xdata
shl [ edi + 0x551b546a ] 0x1
inc esi
retn
add ah bl
sub dh [ eax - 0x71 ]
pop eax
push ebx
fxch st1
popfd
mov [ 0x665df7bc ] al
lodsd [ esi ]
div [ edi + eax * 2 - 0x74d5ede7 ]
rol esi 0x1
cmp [ ebx + 0x20 ] esi
dec ecx
pop es
and al 0x3c
stosb [ edi ]
dec esp
sbb al 0x97
xor al 0x2a
add [ ecx + 0x6c ] bh
cli
add edx [ ecx ]
das
jg r-xdata
sub_10013310
jne r-xdata
arpl [ eax ] bp
imul ecx [ edx + ebp * 2 - 0x8 ] 0x3aad005
insb
and al 0xdc
push 0xfffffff6
test [ eax + 0x2d ] al
stosd [ edi ]
xchg esi eax
mov bh 0x27
cdq
movsb [ edi ] [ esi ]
in al 0x99
or eax [ edi + eax * 2 ]
mov bh 0x29
mov [ ebx + 0x10 ] ds
push cs
pushfd
sbb [ eax + 0x2c ] edi
out dx al
xor bh [ ebp - 0xd ]
cmp ah [ ebp - 0x29 ]
dec ecx
adc eax 0x83dee515
cmc
sub esi [ si - 0x2fb8 ]
cmp [ ebp - 0x1 ] ah
cmp al 0x69
fisttp [ ebp - 0x58 ]
dec ecx
int3
lds ebx [ edi - 0x3e3e8059 ]
sub [ ebx + 0x6b ] ch
mov [ 0xffffffff82f4f63c ] al
fwait
fstp [ eax ]
cmp [ esi + ebx * 8 - 0x7570cd1f ] ecx
jne r-xdata
fstp st4
and eax 0x6b97e1fb
shl [ esi ] 0x1
nop
mov eax 0xe82f5f46
sub eax 0x4e7d175a
push ss
mov eax 0x607c8460
cwde
dec esp
mov ah 0xcb
xchg ebp eax
0xd3857a86 0xf394
push ds
lodsb [ esi ]
cmp al [ edx + 0x42 ]
in eax 0xfa
adc dh cl
push edx
fxch st7
lodsb [ esi ]
push esp
outsd
xor eax 0x404ddc46
insd
push eax
push edx
loopne r-xdata
nop
mov ecx 0x38629b76
inc edi
nop
stosb [ edi ]
popad
jno r-xdata
adc [ edx - 0x79 ] ebx
push ebx
test [ ecx - 0x53b6393b ] ch
pushfd
popad
push ds
hlt
sub_100137b0
[ edx - 0x7c44b62b ] 0x5860b9ed
jo r-xdata
adc al ah
0x34b32a4 0x3bcc
jne r-xdata
and [ ebp + 0x6228dd2f ] edi
adc [ ebp + 0x4a4f72a1 ] 0x678e81d
cmpsd [ esi ] [ edi ]
loop r-xdata
lahf
sub al 0xba
retn
sbb [ edi + ecx * 8 + 0x41 ] bl
push ds
lea eax [ eax + 0x5fed728d ]
lodsd [ esi ]
js r-xdata
int1
arpl [ edx + 0x50 ] di
inc esp
stosb [ edi ]
int 0x5a
call 0x3d18c4ff
push eax
retn
xchg esp eax
in eax dx
hlt
pop ebp
cmpsb [ esi ] [ edi ]
sti
push es
sti
sub_10013800
scasd [ edi ]
and [ edx + edx - 0x3c ] ebp
0x34b32a4 0x3bcc
jne r-xdata
lahf
sub al 0xba
retn
sbb [ edi + ecx * 8 + 0x41 ] bl
push ds
lea eax [ eax + 0x5fed728d ]
lodsd [ esi ]
js r-xdata
xchg esp eax
in eax dx
hlt
pop ebp
cmpsb [ esi ] [ edi ]
sti
push es
sti
sub_10013890
xor [ esi - 0x19caaeb4 ] edi
xlat
lahf
and eax 0x27b54262
sahf
cmp [ edx - 0x62 ] 0x7b
push edx
movsb [ edi ] [ esi ]
and [ ebx - 0x7735fcf3 ] ebx
scasd [ edi ]
js r-xdata
dec ecx
inc esp
mov bh 0x5f
test eax 0x300181b
xchg ecx eax
xchg dh al
cmp [ ebx - 0x4de9dc4d ] ebp
xchg ebp eax
test al 0x36
xchg edi eax
fbstp [ ebp + 0x66 ]
add eax 0x63f4e775
sub ah [ eax + 0x505932d ]
xchg ebx eax
lodsb [ esi ]

sub_10014040
rcl ch 0x1
bound edi [ esi + 0x2 ]
xchg esi eax
and al 0x31
test [ esi - 0x398415ca ] cl
xchg ebp eax
movsb [ edi ] [ esi ]
mov eax 0xbf5acc34
daa
in al dx
dec ebx
cmpsd [ esi ] [ edi ]
scasb [ edi ]
cmp al 0x9d
mov al 0x85
add dl [ eax + 0x4e3b6c1d ]
pop esi
out dx al
jb r-xdata
add eax 0xc632ae9a
push esp
mov [ eax + 0x73 ] dh
fxch st2
cli
sub al 0xeb
outsb
cld
pop es
push ebp
jbe r-xdata
popfd
fisttp [ eax ]
in al dx
mov ds [ esi ]
stosb [ edi ]
cmp [ ebp + 0x3e43b502 ] dl
in al 0xe4
test eax 0x6d02c436
sub dl [ eax ]
pop eax
insb
cli
mov edx esi
movsd [ edi ] [ esi ]
mov ah 0xc8
inc esp
fsubr [ edx + 0x73 ]
add [ eax ] dl
test al 0x30
mov esi 0xa3e5da26
push esp
inc eax
jecxz r-xdata
je r-xdata
pop ecx
int1
scasd [ edi ]
mov eax 0xe8887fe5
pop ebx
int 0x28
or [ edi + 0x6a ] ebx
clc
or eax 0x7ab3b261
inc eax
pop edi
sahf
and bl 0x74
cdq
adc al cl
sub [ ebx + 0x3b ] dl
clc
imul edx [ ebx ] 0xc5ba6513
inc ebx
or al 0x7f
int1
hlt
sub_10017c70
sbb bh dh
fsubrp st5
js r-xdata
mov cl [ ecx + 0x2b ]
mov eax [ 0xffffffff9321ac68 ]
test al 0xee
lahf
sub [ edx - 0x7ddc4ec4 ] ebx
cmp al 0xc1
adc al 0xa2
add edi [ esi - 0x31 ]
push ds
xor ecx eax
fcmove st1
ror [ cs : edx + 0x1f ] 0x1
and edi [ eax ]
lodsb [ esi ]
adc ah dh
sub al 0x7d
or eax 0xe5f21406
push cs
pop ebx
outsd
insb
and esp edx
or eax 0xfc6f1e3a
sub_10018920
mov [ fs : 0x33ef95da ] eax
je r-xdata
imul esp [ esi - 0x2b ] 0x59bd0943
scasd [ edi ]
or bl [ edi + 0x26918889 ]
cmp [ esi ] 0x77
dec esi
inc esp
xor [ edi + 0x3a ] ecx
push esp
cmpsd [ esi ] [ edi ]
std
mov al 0x49
push eax
adc al dh
xchg esp eax
outsb
out dx al
add esi ebp
insd
or [ ecx + 0x664bb779 ] bl
scasb [ edi ]
jmp r-xdata
jns r-xdata
stosb [ edi ]
int3
arpl di si
sub_10018980
test [ edx ] edx
sub ebx [ esi - 0x18 ]
mov al 0xd7
fwait
salc
fidivr [ eax + ecx * 4 - 0x33556f83 ]
pop edx
je r-xdata
cmp eax edx
call 0x80615318
cdq
std
movsd [ edi ] [ esi ]
add al 0x23
aam 0xad
xor ebx [ edi ]
ja r-xdata
jb r-xdata
clc
pop esi
or ecx [ ebx - 0x16 ]
add [ edx ] edx
cmp al 0x84
xchg edx eax
fsubr [ eax - 0x29 ]
or [ ebx ] ch
adc cl [ eax + ebp * 2 + 0x3229ce30 ]
dec edx
or ch bl
add edi [ ecx - 0x35 ]
in eax dx
push si
pop ds
fdiv [ esi + 0x63527db7 ]
test [ eax + 0x11097d9 ] ebp
mov ch 0x65
push ebp
jecxz r-xdata
test al 0x8
adc [ edi ] 0x81
0x637b
ror [ ecx + 0x15b594fc ] 0x7a
cmpsb [ esi ] [ edi ]
dec esp
fdivp st3
xlat
in al 0x74
push cs
dec ecx
cmp cl [ ebx + edi - 0x3e ]
int1
rol [ edi - 0x28 ] 0x1
jl r-xdata
and [ ebx ] ah
add eax 0x7acc7cf5
sub al 0x66
jmp 0xffffffff944c8d72
lahf
mov [ eax + 0x3e802691 ] ecx
ja r-xdata
call 0xffffffffa46c5042
cdq
inc esp
xor [ edi + 0x3a ] ecx
push esp
cmpsd [ esi ] [ edi ]
std
mov al 0x49
push eax
adc al dh
xchg esp eax
outsb
out dx al
add esi ebp
sub_10018ad0
insb
out 0x63 eax
dec ebp
push edi
jg r-xdata
push es
xchg dh ah
jecxz r-xdata
push es
salc
adc al 0xff
inc ecx
or esp ebx
imul ebp [ eax ] 0xb4113ad5
xlat
pop edx
cmp [ esi ] ah
fstpnce st0
push ds
shr [ ebx ] 0x1c
mov al 0x6
pop ebx
sbb eax 0x22fc43ae
or [ edi + ebp * 8 ] eax
std
ror [ edi + 0x7c4da6e6 ] 0xb0
fcom [ edi + ebx * 2 ]
lea edx [ ebp + ebx * 4 - 0x77 ]
inc esi
int 0x80
loop r-xdata
cmp esp esi
clc
clc
inc edi
sub bh cl
inc esp
sub al [ ecx ]
xchg ebx eax
in eax 0x70
jb r-xdata
stc
pop edx
push 0xffffffc8
adc ecx [ fs : ecx + 0x6c ]
into
cli
sub [ esi + 0x5e ] 0xc7
test al bh
in eax dx
sub ecx ebp
aam 0x20
cmp ecx [ ebx + 0x4209599 ]
pop edi
pop esi
sub eax 0xf43f4616
dec ecx
std
mov eax 0x6fc87f34
sub eax 0x52ec5f3d
mov dl 0x14
out dx eax
cmp [ ebp - 0x5c ] 0xaa
inc eax
inc [ eax - 0x5f8dff02 ]
mov eax [ 0x5b552a81 ]
lds ebx [ ecx + 0x23 ]
adc [ edi ] esi
sti
cld
or eax 0xf055e746
iretd
jg r-xdata
dec ecx
mov esp 0x14526c46
sbb al 0xd1
mov [ 0xffffffffbd793170 ] eax
sub bh [ edi - 0x33 ]
cmp ebx [ eax + edi + 0x27 ]
sbb cl [ edi - 0x72f24d40 ]
mov ebp 0xb3a6e8be
push eax
jl r-xdata
inc edx
aam 0xd5
clc
jg r-xdata
clc
xchg [ ebp + edx + 0x255cd1a5 ] esp
sbb [ edx - 0x189305f3 ] 0x63
jbe r-xdata
jpe r-xdata
les esp [ ebx + 0x2e ]
sar [ edx ] 0x44
test eax 0xcb1f110b
push cs
je r-xdata
cmc
mov eax 0xf48d2b3f
inc ebp
jecxz r-xdata
xchg ecx eax
jecxz r-xdata
or al 0xbb
imul ebx [ edi + 0x6 ] 0xffffff86
out 0xe3 al
outsb
mov ebp 0x19a7dc2e
mul dh
xchg edi eax
cmp ecx [ es : ebp + 0x57 ]
salc
inc esp
cmp al 0xaf
and eax 0x75757f87
adc [ esp + ebp * 8 - 0x48b35815 ] ah
or eax 0x85b21235
aas
add ebx [ ebp + 0x1d ]
enter 0xac33 0x3a
pop eax
0x75c25578 0xaef1
pop ebp
dec ebp
add eax 0x81477bac
or al [ esi + 0x23a72659 ]
pop esp
imul ecx ebp 0x16
jl r-xdata
leave
das
shl [ ebx - 0x53 ] 0x1
fild [ esi - 0x2b ]
cmp eax 0xf9540f1b
inc ecx
or [ edi ] ebp
imul eax [ edx + 0x72 ] 0xffffffc7
outsb
mov eax 0x15a4876f
movsd [ edi ] [ esi ]
rcr [ ebp - 0x7d ] 0x1
0xe76cfa0d 0xf863
sub_10019060
imul edi [ edi - 0x73428422 ] 0x7e
cmp esi [ esi + 0x36 ]
inc eax
lds ecx [ ecx + 0x36 ]
fnstsw [ ebx + edi * 2 + 0x32 ]
and ebx 0xfffffffd
push es
mov fs si
adc eax 0xd5ac9d49
imul edi [ edi + 0x5 ] 0x69
pop ss
dec ebp
stc
neg ebx
call 0x8960d48e
xor al 0x2c
shr [ esi ] 0x71
sar [ esi + 0x4c ] 0xb3
jns r-xdata
out 0x42 al
mov [ 0x30b33947 ] eax
xchg [ eax - 0x5b ] ebx
and bh [ ecx ]
cld
int3
sub_10019080
imul edx [ edi ] 0xf7f94d2e
fucomi st0
add al [ edi + ebx * 2 + 0x79 ]
xor al 0x2c
shr [ esi ] 0x71
sar [ esi + 0x4c ] 0xb3
jns r-xdata
out 0x42 al
mov [ 0x30b33947 ] eax
xchg [ eax - 0x5b ] ebx
and bh [ ecx ]
cld
int3
sub_10019460
sbb ecx [ eax - 0x4c ]
push 0x853cd345
push [ ecx + 0x4c ]
inc edx
or al 0xf4
push esp
loop r-xdata
jb r-xdata
adc [ esi ] ebp
imul ebp [ esi ] 0xdb443d8
ja r-xdata
retn 0xc95f
and eax 0x7fdf1a35
fiadd [ eax + 0x3 ]
pop ss
or [ ebx ] cl
dec esp
jpo r-xdata
or ecx [ esi + 0x692e11b0 ]
fadd [ cs : ebx - 0x4c ]
or eax 0x7b4ce977
dec esi
fsubr st1
xchg [ esi - 0x7ac39969 ] bl
mov bh 0xd5
in al dx
retn
sub_10019c60
adc esp [ eax - 0x68 ]
cmp al bh
shl [ ebp + 0x72 ] cl
add [ esi - 0x39f72b61 ] cl
and [ ecx + 0x1aa080f3 ] bl
fadd [ ebx + 0x4f ]
adc al 0xc0
jmp r-xdata
pop ebx
push 0x132e2a65
popad
xchg esp eax

sub_1001c200
push ebx
push edi
pop ecx
ror ah 0x8b
inc edx
into
pop esp
popad
sub edx [ edx - 0x3a ]
jne r-xdata
dec edi
or eax 0x4242f53a
dec ebx
and esi [ edi ]
sbb dl ah
aaa
jg r-xdata
nop
xor bh [ esi + 0x269bcf94 ]
salc
xor bl [ ebx - 0x18 ]
jbe r-xdata
push ds
cdq
0x73de1b4d 0x80b3
add al 0x9d
jecxz r-xdata
add [ ecx ] ch
jo r-xdata
inc eax
adc ebp [ esi - 0x41 ]
push cs
inc esp
outsd
and esi edi
mul [ 0xabb3cef ]
insd
daa
or al 0x65
sub [ eax - 0x4e ] esi
dec ebx
add [ esi ] dh
sbb ch [ eax ]
setl [ edx ]
xor eax [ ebx ]
sub [ ebp + 0x47 ] ch
xor eax 0xba6d190a
insb
xchg edx eax
jecxz r-xdata
int1
push edi
xchg ecx eax
jle r-xdata
jo r-xdata
sub al 0x7
cmp al 0x52
loopne r-xdata
iretd
fwait
push cs
mov bl [ bx + di - 0x40 ]
int3
leave
fstp st2
pop [ ebx - 0x4398085e ]
push esi
leave
jg r-xdata
mov ecx edi
and [ ebx ] ch
add al 0xce
add al 0xa7
ja r-xdata
push eax
in al dx
adc al 0xdd
popfd
dec eax
mov ecx 0xaa594685
mov [ eax - 0x41951053 ] ss
dec esp
mov esp 0x1ef1fe51
sub edi [ esi - 0x80 ]

movsd [ edi ] [ esi ]
xchg ebx eax
lahf
movsx edx [ ecx ]
jecxz r-xdata
jo r-xdata
clc
push ds
fwait
neg [ ecx - 0xbd5946f ]
cmpsb [ esi ] [ edi ]
sbb esp [ edi + 0x69 ]
add [ ebx ] ebx
mov ah 0xc9
cmp al 0xee
add eax [ esi - 0x54 ]
or [ edx ] ecx
cmp bl dl
cmp [ ebx - 0x2a ] dh
or [ ebp + 0x5753b7fe ] bl
sub dh [ eax - 0x7d ]
xchg ebx eax
das
pop esp
sub_1001c230
inc edi
int1
push edi
xchg ecx eax
jle r-xdata
jo r-xdata
sub al 0x7
cmp al 0x52
loopne r-xdata
iretd
leave
fstp st2
pop [ ebx - 0x4398085e ]
push esi
leave
jg r-xdata
mov ecx edi
and [ ebx ] ch
add al 0xce
add al 0xa7
ja r-xdata
push eax
in al dx
adc al 0xdd
popfd
dec eax
mov ecx 0xaa594685
mov [ eax - 0x41951053 ] ss
dec esp
mov esp 0x1ef1fe51
sub edi [ esi - 0x80 ]

movsd [ edi ] [ esi ]
xchg ebx eax
lahf
movsx edx [ ecx ]
jecxz r-xdata
jo r-xdata
clc
push ds
fwait
neg [ ecx - 0xbd5946f ]
cmpsb [ esi ] [ edi ]
sbb esp [ edi + 0x69 ]
add [ ebx ] ebx
fwait
push cs
mov bl [ bx + di - 0x40 ]
int3
mov ah 0xc9
or [ ebp + 0x5753b7fe ] bl
cmp al 0xee
add eax [ esi - 0x54 ]
or [ edx ] ecx
cmp bl dl
cmp [ ebx - 0x2a ] dh
sub dh [ eax - 0x7d ]
xchg ebx eax
das
pop esp
pop ecx
ror ah 0x8b
inc edx
into
pop esp
popad
sub edx [ edx - 0x3a ]
jne r-xdata
dec edi
or eax 0x4242f53a
dec ebx
and esi [ edi ]
sbb dl ah
aaa
jg r-xdata
nop
xor bh [ esi + 0x269bcf94 ]
salc
xor bl [ ebx - 0x18 ]
jbe r-xdata
push ds
cdq
0x73de1b4d 0x80b3
add al 0x9d
jecxz r-xdata
add [ ecx ] ch
jo r-xdata
inc eax
adc ebp [ esi - 0x41 ]
push cs
inc esp
outsd
and esi edi
mul [ 0xabb3cef ]
insd
daa
or al 0x65
sub [ eax - 0x4e ] esi
xor eax 0xba6d190a
insb
xchg edx eax
jecxz r-xdata
dec ebx
add [ esi ] dh
sbb ch [ eax ]
setl [ edx ]
xor eax [ ebx ]
sub [ ebp + 0x47 ] ch
sub_1001c470
mov cl 0x17
mov ss [ ecx - 0x26903aaa ]
sub ch ch
sbb eax 0x6b0ceb89
dec ecx
xchg esi eax
xor [ edi ] 0xa7
dec ebx
popfd
loope r-xdata
mov cl 0x96
and ebx 0x27d85ad8
mov [ 0x17cf4b15 ] eax
out 0xa8 al
add eax 0x45e3260d
salc
test eax 0x8a8a1e1
arpl [ edi ] si
add [ ebx ] ecx
iretd
popfd
lea ecx [ edx - 0x41299da1 ]
cmp [ ebx + 0x8 ] ecx
out dx eax
mov bh 0x3d
jge r-xdata
jmp 0x9621884
xchg ecx eax
dec esp
adc ch bh
sbb al 0x53
adc edi eax
or [ esi - 0x5e ] ecx
cmpsd [ esi ] [ edi ]
sub_1001c5f0
adc [ eax ] al
jae r-xdata
inc esi
or ah [ ebx ]
cmpsd [ esi ] [ edi ]
sbb edi edi
adc ebx edx
mov esp 0xf6223ebf
idiv edi
cli
adc bh ch
push edx
mov [ edx ] 0xa
sub esi edx
enter 0x26d9 0x31
mov [ 0xffffffffd097dbd7 ] al
cmpsd [ esi ] [ edi ]
rcr ebp 0x1
xchg ecx esp
fstp [ ebp + 0x54225a48 ]
xchg edx eax
popad
adc ch dl
loop r-xdata
cmp [ esp + eax * 2 ] edi
sbb al cl
js r-xdata
iretd
popfd
fisttp [ eax ]
and [ ebx + 0x6ffc0cd3 ] ecx
cmc
stosd [ edi ]
stosd [ di ]
mov al dl
xchg ecx eax
in eax 0x3e
dec edi
daa
in al dx
inc ebp
or eax 0x759a1900
mov al 0x65
loop r-xdata
test al 0x5c
les eax [ edx ]
imul ebp [ ebx ] 0xfffffff4
cwde
jl r-xdata
lea edi [ ecx - 0x3bbb01d6 ]
jb r-xdata
fwait
insb
dec esi
xchg esp eax
add eax 0x9738a9d7
push 0x68467bad
jmp 0x5d7752e4
outsb
mov ah 0x77
inc edx
xor [ ebp - 0x13a3ae12 ] ah
cmpsb [ esi ] [ edi ]
xchg [ edx - 0x4815d5ff ] dl
or eax 0x1e2a6fc6
aas
xchg ebp eax
push esi
mov ebx 0xa85a85b3
adc [ edi + 0x49ae61ae ] al
xor al [ 0xffffffffc697d225 ]
or [ ecx ] ebx
push esi
sbb cl dl
or al 0x0
lodsb [ esi ]
or al 0xe5
aas

sub_1001c700
loop r-xdata
cwde
jl r-xdata
lea edi [ ecx - 0x3bbb01d6 ]
jb r-xdata
fwait
insb
dec esi
xchg esp eax
add eax 0x9738a9d7
push 0x68467bad
jmp 0x5d7752e4
outsb
mov ah 0x77
inc edx
xor [ ebp - 0x13a3ae12 ] ah
cmpsb [ esi ] [ edi ]
xchg [ edx - 0x4815d5ff ] dl
or eax 0x1e2a6fc6
aas
xchg ebp eax
push esi
mov ebx 0xa85a85b3
adc [ edi + 0x49ae61ae ] al
xor al [ 0xffffffffc697d225 ]
or [ ecx ] ebx
push esi
popfd
fisttp [ eax ]
and [ ebx + 0x6ffc0cd3 ] ecx
cmc
stosd [ edi ]
stosd [ di ]
mov al dl
xchg ecx eax
in eax 0x3e
dec edi
daa
in al dx
inc ebp
or eax 0x759a1900
mov al 0x65
loop r-xdata
sbb cl dl
or al 0x0
lodsb [ esi ]
or al 0xe5
aas

sub_1001c7d0
inc eax
0xfdbd45dd 0x19e8
jne r-xdata
and eax 0x7ec93a27
xchg ebx eax
jg r-xdata
mov bh 0x87
dec eax
mov al 0x47
hlt
pop edi
rcl [ eax ] 0x1
sbb [ ecx + 0x38 ] 0xffffffdd
dec ecx
popad
mov ebp 0xe3da68da
mov bl 0x88
cdq
in eax dx
jmp r-xdata
iretd
sub_1001ccc0
mov ah [ ecx ]
out dx al
jle r-xdata
lds edx [ ebp - 0x1e ]
jo r-xdata
push ds
and [ eax + 0x7298001 ] bh
and edx ecx
call [ ebx - 0x74 ]
dec esi
daa
mov ebp 0x8f1da93e
scasb [ edi ]
xchg edi eax
pop esi
leave
cmp eax [ ecx ]
insd
jecxz r-xdata
or edi esp
push esi
leave
cmp edi [ eax ]
loopne r-xdata
xchg ebx eax
mov eax 0x77059a91
popfd
ja r-xdata
call 0xffffffffe64d4127
push ebx
pop ecx
adc [ ebx + 0x3 ] ebx
cld
inc ecx
shl cl cl
jg r-xdata
cmp cl [ edi ]
in al 0x58

sbb eax 0xc81d5d54
cmp [ 0x1e236fc6 ] edx
aas
sahf
push esi
mov ebx 0xa95a85b3
adc [ edi + 0x49ae6aae ] al
xor dl [ edi + 0x51 ]
mov ch 0xd
daa
xlat
cli
test [ esi + edx * 2 - 0x48998d1c ] dl
push 0x75b2c6e0
mov ch 0xfd
0xb3ce1aa8 0x2604
neg [ ebp + 0x3 ]
dec ebp
aaa
pop ecx
arpl [ ebx + 0x59a91b8 ] dx
ja r-xdata
mov esi 0x3eb02295
xchg ecx eax
cdq
mov ebp 0xcc13e8fd
cmpsb [ esi ] [ edi ]
0xb058
sub [ ecx ] 0x7
mov dh 0xe5
inc esp
mov bh 0x29
out dx eax
cmp al 0xab
loope r-xdata
sub_1001de90
in eax dx
xchg [ eax + 0x64 ] dl
sbb [ eax - 0x130f8f1 ] ch
adc al 0xfd
jle r-xdata
push ds
aam 0x4e
mov edi 0xc77731
mov [ ebx + 0x1cfb3000 ] ds
dec ecx
cmc
jmp 0xfffffffff72f14f9
int1
fwait
push edi
xlat
hlt
sub_1001eb00
jge r-xdata
0x3ddd65e 0xbfe6
loope r-xdata
insb
cmp ebp ebp
aaa
dec esp
sbb al 0x12
pop [ ecx ]
or eax 0xa3bd2f4
cmp esi [ eax - 0x30be3683 ]
shl [ ecx - 0x1ee682fd ] 0x1
in eax 0x6
fisub [ esi + esi * 8 ]
je r-xdata
push es
std
outsd
xchg edi eax
cdq
ror ebp cl
mov bh 0xfe
mov dl 0x25
sbb cl 0x54
popad
aad 0x31
int1
xchg esp eax
ficom [ edi ]
push 0xffffffbc
jbe r-xdata
fstp [ edx + 0x228a10e8 ]
rcr [ esi + 0x606ed74f ] cl
iretd
push ebp
or [ esi - 0x4 ] ch
mov bl [ eax ]
sub_1001ef60
jb r-xdata
xor [ ebp - 0x39 ] ecx
js r-xdata
sahf
mov al [ 0x6b004a72 ]
out 0x7d al
stosb [ edi ]
xchg eax ebx
outsb
mov ebx 0xeefb4bf4
clc
sub [ esi + 0x6e7a6fef ] esi
push esp
dec esi
pushfd
mov ebx [ edx + ebx - 0x38b2ceeb ]
or [ edi - 0x46 ] esp
mov bl 0x25
add edx [ esi + 0x4c ]
mov bl 0xe3
pop eax
xor [ edx + 0x40d9d0fb ] 0x36
les edx [ edx - 0x20 ]
aas
fist [ ebx + 0x7b3cdf4a ]
retn
sub_1001fd50
push ebx
les ecx [ edx + 0x588f7565 ]
popad
outsb
lea eax [ ebx + 0x24 ]
dec eax
and dh [ esi + 0x6b ]
xchg ecx eax
mov edi 0x4942a266
into
mov dh 0x7e
sahf
cmp al 0x45
0xe37267bf 0x4393
inc eax
loop r-xdata
or al 0xfa
cmp dl [ cs : eax + ebx ]
or dh [ edi + 0x3da05ceb ]
push 0x8d818cb4
xor [ edi + 0x781c12f ] ah
mov ebp 0x589897d9
mov esp 0x641017e9
aaa
xlat
jl r-xdata
or ebx esp
in eax dx
add [ eax ] 0x28
xor al 0x90
loopne r-xdata
xor ecx [ ebx ]
fsub st5
and al 0xfa
jo r-xdata
adc [ edi + esi - 0x29 ] ah
in al dx
psllw mm4 mm4
push ebx
movsd [ edi ] [ esi ]
cmp dh [ ebx - 0x21 ]
or eax 0x1b2c6f88
jl r-xdata
jbe r-xdata
cli
cmp eax 0xe23b6083
jpo r-xdata
fucom st6
mov bh 0x21
or [ edi ] 0x34
lodsd [ esi ]
cmp ebp [ ebx * 4 + 0x27d981d2 ]
cmc
pop esp
or ecx [ ecx + 0x9 ]
push 0xffffffb2
xchg esi eax
insd
stc
daa
iretd
sub_1001fe80
or eax 0xaaa4f172
aaa
sbb eax 0xb933c639
mov bh [ ebx ]
test bl ch
jpe r-xdata
retn
jpe r-xdata
mov ecx 0x1379132
mov al [ 0xffffffffa3d6f9df ]
cmp bl 0xe0
lodsb [ esi ]
out dx al
movsd [ edi ] [ esi ]
cmc
fisub [ eax ]
sub ecx [ ecx + edi * 2 - 0x33b13fe3 ]
adc eax 0x82e094e9
sbb dh bh
mov dh 0xfc
push 0xb94ba4d7
sbb esp [ eax ]
sbb eax ebx
shl [ ebx ] 0x1
clc
fwait
fcmovb st0
test al 0x97
mov al 0x1b
fwait
xchg esi eax
push esi
jbe r-xdata
mov ah 0x39
cmp ebx [ ebx + 0x7d ]
int 0x4e
or [ ecx + 0x25 ] bl
mov esp 0x358d932
or eax 0xf5d82729
cmc
jne r-xdata
sbb eax 0x4b34739f
jl r-xdata
dec ebx
cmp al 0xdc
dec ecx
inc ebx
push 0x27
xor bh bh
dec ebx
daa
and al 0x6b
inc esp
xchg ebx eax
mov dh 0x10
push [ esi + 0x4f7bc3b6 ]
mul dl
sub_1001fea0
xchg esp eax
loopne r-xdata
sbb [ eax - 0x78 ] esp
inc [ ecx + 0x1e6ce698 ]
into
daa
mov ah 0xee
mov ecx 0x1379132
mov al [ 0xffffffffa3d6f9df ]
cmp bl 0xe0
lodsb [ esi ]
out dx al
movsd [ edi ] [ esi ]
sbb dh bh
mov dh 0xfc
push 0xb94ba4d7
sbb esp [ eax ]
sbb eax ebx
shl [ ebx ] 0x1
clc
fwait
fcmovb st0
test al 0x97
mov al 0x1b
fwait
xchg esi eax
push esi
jbe r-xdata
mov ah 0x39
cmp ebx [ ebx + 0x7d ]
int 0x4e
or [ ecx + 0x25 ] bl
mov esp 0x358d932
or eax 0xf5d82729
cmc
jne r-xdata
sbb eax 0x4b34739f
jl r-xdata
dec ebx
cmp al 0xdc
dec ecx
inc ebx
push 0x27
xor bh bh
dec ebx
daa
and al 0x6b
inc esp
xchg ebx eax
mov dh 0x10
push [ esi + 0x4f7bc3b6 ]
mul dl
sub_10020070
in al 0x70
mov eax 0x538bbf2e
pushad
scasd [ edi ]
out 0x3c al
or eax 0xd151814d
aam 0xa
mov eax [ edx - 0x31b36c70 ]
xlat
inc ecx
out dx al
jne r-xdata
add ah ch
cmp eax 0x2a3d757c
sub dl [ edi + 0x5bbfdf25 ]
sub al 0x25
popad
cmp dh dh
xchg ebp eax
mov esp 0xc350b967
arpl [ esi ] bp
aas
xor [ ebx ] eax
rol dl 0x71
adc [ ebx - 0x47552ea3 ] esi
and bh [ eax + 0x49 ]
cmp eax 0x2f3266ce
inc ebp
sbb eax 0x4e00129
xchg ebx eax
dec esp
into
lea ebp [ esi - 0x6831e761 ]
loop r-xdata
mov edi 0xaf60538b
sub [ ecx ] eax
loopne r-xdata
jge r-xdata
xchg edx eax
and bl ch
mov ah 0xc6
imul esi [ ebx + edx * 4 ] 0x4
mov esp esp
jo r-xdata
push edx
fisub [ ebx + 0x11 ]
add al 0x89
push edx
mov ebx 0xcc0e3e8c
push ss
sbb al 0xb5
mov ecx 0xb6abd9df
adc al 0x77
pushfd
inc esi
sub_10020470
mov [ 0x173222fb ] eax
xchg edx eax
pop esp
push ss
in al dx
je r-xdata
cwde
mov gs sp
aaa
fistp [ fs : ebx + ebx * 2 + 0x43 ]
fmul [ esp + ebx * 8 - 0x4 ]
dec edx

cmp edi [ edi - 0x59 ]
std
lodsd [ esi ]
adc ebp ebp
inc ebp
salc
push cs
sub eax 0x57f1219b
add al 0x4f
call 0xffffffffe451708d
sar ebp 0x28
cmp esi [ edx - 0x4a16a407 ]
mov edi 0xe76ed087
cmp eax 0x91073a82
sub ah bh
cmp al 0xd7
dec esp
dec edi
pop ebp
push ebx
std
add [ esi ] bl
adc [ es : edx ] 0xe8
sub [ esi - 0x3c ] 0x36ea4643
scasd [ edi ]
mov ecx 0xd41875ba
pushfd
inc edx
test al 0xdf
retn
aas
and bh [ esi - 0xd ]
fldpi
loop r-xdata
retn
dec ebx
mov cl 0x7b
xor dh [ esi - 0x535fd57f ]
inc edi
jb r-xdata
fwait
nop
test edx ebx
sbb eax 0x6a7b99ca
fadd [ ebx + 0x20 ]
push ebx
pop ebp
les edi [ eax ]
or al [ esi + 0x6f ]
stosb [ edi ]
cmp [ ecx ] bl
sub [ ebx + 0x401e11d5 ] dh
salc
inc esi
adc eax 0xcf987c97
in eax dx
push 0x885f1cff
jpe r-xdata
stc
daa
ja r-xdata
mov ch 0x43
pop eax
das
sar [ ecx + 0x5fff016a ] 0xb4
sbb [ esi - 0x32 ] eax
jpo r-xdata
push esi
add esp [ edi ]
jpo r-xdata
xor dl [ edi ]
xchg esi eax
jpo r-xdata
add [ edi - 0x71f7c2d9 ] bh
test al 0xe4
xor eax 0x269bbf2e
and al 0x4
and [ eax + ebx ] 0xce77355f
mov bh [ ebp + 0x5e ]
pop ecx
loopne r-xdata
outsd
adc eax 0x82495767
pushad
jo r-xdata
salc
xchg edi eax
jl r-xdata
movsb [ edi ] [ esi ]
and esi [ ebx ]
mov ebx [ edx ]
xchg ebp edx
mov ch 0xee
call 0xffffffffd6ff35b6
push ds
inc eax
iretd
sub_10020730
mov [ edi - 0x7bd959f7 ] ss
inc ebx
insd
push eax
add [ ecx - 0x55 ] 0xdd4b5f74
jo r-xdata
daa
sar bh 0x1
fistp [ eax - 0x6a97e69 ]
xor edx esp
retn 0x1bb
setne [ edi ]
mov edi 0x9a031081
mov esp 0x25e602c0
sub_10020ac0
jecxz r-xdata
mov edx 0x338343f3
rol esp 0x1
adc ah [ esi - 0x10 ]
sti
inc esi
push edi
0x79616d5a 0x4f08
je r-xdata
aam 0x46
int3
mov eax [ 0xffffffffb671d691 ]
0xbf75
push edx
nop
or al 0x9d
0x730c
sub_10021010
lodsd [ esi ]
enter 0x86fc 0x4b
inc esp
add al 0x67
out 0x9e eax
in eax dx
out dx eax
mov al [ 0x7dd6608e ]
push es
imul edi [ edi ] 0xffffffcc
lfs eax [ cs : ebx - 0x749c62e0 ]
jge r-xdata
lfs eax [ ebx - 0x749c62e0 ]
push edi
sub_10023310
test esp 0xae81187f
pushfd
pushad
dec ebx
dec edx
pop ecx
jae r-xdata
add eax 0x80f3acf9
arpl [ edi - 0x1cce576a ] di
cdq
add dl [ ebp + 0x7c ]
bound edi [ edi + 0x62235179 ]
pop edx
loop r-xdata
pop esp
jg r-xdata
loopne r-xdata
fcom [ 0x286f0369 ]
loopne r-xdata
add eax 0x79ac16c7
sub eax 0x6d7283d1
loopne r-xdata
les edi [ ecx + 0x9 ]
push 0x5900937f
xchg ebp eax
mov dh 0x84
cmp al 0x1f
stosd [ edi ]
push ebx
pop edi
sar esi 0x1
aaa
push cs
in eax 0x8d
outsd
jno r-xdata
mov esp 0xeba27e51
jmp r-xdata
and [ ecx ] ebp
jecxz r-xdata
arpl [ eax + 0x79 ] cx
loopne r-xdata
jae r-xdata
and ebp [ edi - 0x576deb74 ]
0xe169
xchg ebp eax
push 0xa64a4a7a
jl r-xdata
mov [ 0xffffffffeddb9dbf ] al
add esi eax
or [ edx - 0x13 ] esi
rcl [ ecx - 0x31d27e6a ] 0x1
mov al 0x26
fild [ ecx ]
xchg cx ax
ficom [ ecx + 0x8425526 ]
retn
jns r-xdata
fwait
shr ah 0xb9
loope r-xdata
cmp [ ebx - 0x5904b8cf ] dh
xchg ecx eax
insd
dec ecx
mov [ 0xffffffff8a959afd ] al
sub [ eax + 0x7968b743 ] cl
or [ eax - 0x3c ] bl
fimul [ ecx - 0x4e ]
imul ebx [ edi + 0x52f7d27 ] 0xfffffff9
lodsb [ esi ]
and [ esi - 0xe ] 0x63
mov edi 0xe331a896
pushfd
push 0x1a81ce64
cmp ecx eax
neg edi
jb r-xdata
lodsb [ esi ]
push edi
mov bl 0xf4
mov ah 0xc3
adc al 0x87
sbb esp [ edi - 0x1b ]
lea esp [ ebx ]
scasd [ edi ]
mov [ edx + edx * 4 ] ss
test al 0xca
imul esp ecx 0x47778150
xor eax 0x42ab0fcb
in eax 0x8
and [ ecx ] eax
xchg edx eax
les esi [ ebp - 0x2554e1e4 ]
dec edx
pop ebp
bound eax [ ecx + 0x23 ]
xchg [ ebx ] edx
mov [ ebx ] es
inc edx
inc edx
fld [ 0x5d8a35ae ]
pushfd
pop edi
scasd [ edi ]
test [ ecx + 0x5d ] 0x91
sti
jl r-xdata
movsb [ edi ] [ esi ]
retn 0x6c80
and esi [ esi + 0x35 ]
mov dl 0x80
mov al dl
jae r-xdata
and al 0xa6
mov [ 0xffffffffa978e3fb ] eax
cmp al 0x66
mov al 0xd0
popfd
jmp r-xdata
insb
insd
add [ esi + 0x6c2c70f7 ] esp
mov dl 0x9d
test [ eax ] dh
r-xdata
jg r-xdata
cmp ecx [ ecx + 0x736cc28f ]
xchg [ eax + 0x22 ] ch
or al al
xchg edx eax
cwde
mov ah bl
mov ch 0xd
nop
sahf
and eax 0x247a20ba
cmpsb [ esi ] [ edi ]
in al 0x9
aam 0x9a
cmp [ ebx - 0x43 ] ebp
cmpsb [ esi ] [ edi ]
pop esi
lodsb [ esi ]
aas
aam 0x1b
jmp r-xdata
sbb bl bl
salc
cmpsd [ esi ] [ edi ]
daa
dec ebp
jpo r-xdata
faddp st5
in al dx
xor edi edi
imul ebp ebx 0x1b28e446
sub [ cs : ecx - 0xf ] ah
add cl [ ebx - 0x21 ]
dec ebp
sub eax eax
mov eax 0x7d58fa35
sub eax 0xb6b23755
sub al 0x10
sbb ah [ esi ]
xchg edx eax
sbb eax 0x5bc6841d
retn 0x8a75
xchg esi eax
mov ah [ eax - 0x13 ]
cmp al 0x8e
sub_10023ac0
salc
call edi
into
mov [ 0xffffffff80f092b6 ] ss
and [ ebx - 0x4b ] ebx
rcr [ edx + 0x2a ] 0x1
jno r-xdata
test [ ecx - 0x45 ] 0x71
pop ss
rol [ edx ] 0x1
pop ss
fld st5
inc ebx
0x48335fb 0xdc64
mov edi 0x68d53450
inc ebx
push 0x27
rol [ ebp + eax * 8 - 0x433b0e9a ] 0x1
xor eax ebx
rcl esi cl
jge r-xdata
0x584dab7d 0x5e13
push edx
ror [ ecx + 0x3a ] cl
push es
adc ebx ebp
pop eax
xor ebp [ ebp + 0x36 ]
ffreep st1
mov bh 0x16
sbb eax 0xac9e8df8
push esi
mov al [ 0xffffffffbd69ca01 ]
lodsb [ esi ]
test [ ecx ] ah
inc eax
push ebx
pushfd
inc ecx
jmp 0xfffffffff79162c3
mov esp 0x6680f8b
salc
js r-xdata
push ds
sub [ es : ebx ] cl
cwde
movsd [ edi ] [ esi ]
jne r-xdata
fidivr [ ebp - 0x7108c92c ]
mov [ 0xffffffffc4e4c3c7 ] eax
sub dl [ eax - 0x714ae783 ]
sahf
push ebx
test [ edi + 0x5d ] al
xchg [ ebp - 0x37 ] al
pop ebx
mov ch 0xd0
pop edx
sub dh [ ecx - 0x36 ]
xor dl [ esi + 0x288d739c ]
add [ ecx + 0x4c9404a9 ] 0x26
das
and eax 0x4ec28ea6
sub_10023d60
jno r-xdata
jge r-xdata
sub [ ecx - 0x39 ] 0xbb
cmp dh [ edx + 0x7159541f ]
out 0xe6 al
loopne r-xdata
cmp al 0x18
mov al [ 0x621d3f93 ]
sbb [ edx + 0x29bf06cd ] edx
outsb
rol [ eax ] cl
out 0x51 eax
fwait
nop
int 0x53
sub esi [ ebp + 0x5e ]
retn 0x9d9d
sub eax 0xe5f63d1d
cmp al 0xd6
pop esp
sub al 0x36
jl r-xdata
[ eax + 0x102494a1 ]
test al 0xa1
xchg esp eax
and al 0x10
adc eax 0x80669a2a
pop ebx
or eax 0x6f6dd62
cwde
out dx al
imul ecx ebx 0x6bb052cc
[ edi ]
jbe r-xdata
jae r-xdata
insd
test eax 0xb0247d77
inc esp
dec ebx
mov ss [ edi + ebp * 2 ]
cmp esi [ edx ]
fwait
int1
pop ebp
stc
in al 0xe4
add cl [ ecx + 0x21bb8bb5 ]
scasb [ edi ]
cmp bl al
pop ecx
sub eax 0x525a9e41
inc ebp
xchg ebx eax
jpo r-xdata
mov edi 0x661e78e8
sbb eax 0x9d7729c
jpo r-xdata
pop ebp
neg [ ecx + 0x58e26cab ]
fistp [ eax ]
or [ esi + 0x34f6073e ] ebx
shl edi 0x94
mov dh 0x17
test [ edx ] dh
movsb [ edi ] [ esi ]
mov bh 0x39
and ebp [ ebx - 0x28764cae ]
sub al 0xf8
lds eax [ eax ]
push es
lahf
push esi
dec edi
les esi [ eax ]
push esi
sub eax 0xcbd1e905
retn
mov al 0x44
sbb al 0xba
and edx [ esi + 0x3f41c4bb ]
js r-xdata
lodsd [ esi ]
popad
dec esp
clc
test al 0x63
pop es
imul esi [ ebx - 0x2ba257b9 ] 0x6006ca7a
mov esp 0x78e8bfb4
push ds
inc ebx
out dx al
out dx eax
push esi
daa
and edx [ ebp * 4 - 0x3f1f00bc ]
shl [ ebp + 0x23 ] 0x1
or ah cl
js r-xdata
mov edx 0xc4bb9623
inc ecx
aas
sub_10024210
aad 0xb7
pop ebx
mov cl 0xcf
aas
je r-xdata
add dl [ eax + 0x1b ]
jb r-xdata
or al 0xcc
0x1f64
in al 0xf0
or dh [ ecx ]
out dx eax
popad
salc
pop esi
push eax
cld
arpl di bp
aam 0xd
jge r-xdata
loopne r-xdata
inc esp
inc ecx
xor edi [ eax ]
ficomp [ bp + di ]
mov bh 0x77
xor [ 0xffffffffeae7fde9 ] 0xd4
jno r-xdata
jge r-xdata
sbb [ eax - 0x5e ] bl
retn 0x1420
nop
push ebp
mov [ 0x67ecabc2 ] al
je r-xdata
fst [ ebp + esi * 4 + 0x5 ]
pop edi
push esp
add dl [ ebx + 0x5084bc5d ]
scasb [ edi ]
inc esi
pop es
pop eax
push edx
mov esp 0xf0e49478
add al 0xe2
sub al 0x58
popad
outsd
jecxz r-xdata
stc
jmp 0x37c0b82c
pop ss
into
aam 0xbe
inc ebp
sbb eax 0xdb973344
out dx al
xchg ecx eax
pop eax
mov [ 0x541420c2 ] al
jo r-xdata
mov esi 0xedc4d789
and cl [ 0xffffffffd9f8aa4c ]
fwait
aas
xchg ebx eax
or [ edi + 0x1 ] 0xffffff90
push esi
xchg edx eax
rol bh 0xdb
aam 0x54
push 0x9fbc66ad
cmpsb [ esi ] [ edi ]
loope r-xdata
pop esi
xlat
sub al 0x82
or bl [ ecx - 0x55 ]
imul ebx [ ecx + 0x52f1b9e3 ] 0x2c
sbb [ esi * 4 - 0x6337818a ] 0xb29d84b7
xor eax 0xc37dc9d1
sub_10024410
aam 0x40
sar [ ebp + 0x2 ] 0x1
loopne r-xdata
scasd [ edi ]
xor eax 0x79ca5e9c
push 0x56
scasb [ edi ]
enter 0x5350 0x7a
xchg esi eax
pop esp
push ecx
inc ebx
cdq
mov ebx edi
setl dh
fidiv [ ebx - 0x39bf227b ]
loop r-xdata
out 0xde al
mov bl 0x85
fld [ eax - 0x3a ]
popad
0xe760
sub_10025970
loopne r-xdata
inc eax
out dx al
aad 0x8a
xor ecx [ esi ]
jl r-xdata
sti
jb r-xdata
test cl ah
inc edx
mov al 0x40
fmul [ ebp - 0x6e1436b1 ]
std
int1
dec ebp
rcr [ ebx - 0x33 ] 0xe0
jne r-xdata
jo r-xdata
fdiv [ fs : ebp + ebp + 0x38f92a71 ]
add al 0xde
mov cl [ ebx + ecx * 8 ]
not [ ebx ]
stosb [ edi ]
mov [ ecx + 0x58 ] edi
push ss
fcmovnb st4
jno r-xdata
aam 0x7e
leave
ror [ esp ] 0x1
cmp edx [ 0xffffffffe9891ad7 ]
scasb [ edi ]
stosd [ edi ]
fimul [ ecx ]
push esp
nop
dec ecx
mov dh 0xc0
dec esp
xchg esi eax
adc ch bl
pop eax
hlt
fidiv [ ecx ]
pop edi
adc esi [ edx ]
nop
dec ecx
imul ecx [ ebx - 0x7c ] 0x68618de
lodsb [ esi ]
pop ss
cmp al 0x24
jne r-xdata
pop es
push ss
mul [ esi + 0x71 ]
xlat
jbe r-xdata
arpl [ esi - 0x53 ] sp
std
aad 0x1d
lodsd [ esi ]
sbb esp [ ebx + 0x26 ]
lahf
pop ds
inc edx
pop esp
add eax 0x6c928ae6
xchg edi eax
mov al [ 0xffffffffa6972fb6 ]
push cs
mov [ 0xffffffff8c46d357 ] eax
dec esp
test [ eax ] dl
pop ebp
sub bl bh
or eax 0xac55537e
lodsd [ esi ]
mov dh 0xcb
dec edi
leave
jmp r-xdata
and ecx ebx
add [ edx + edi * 4 - 0x68 ] 0xb4
mov ah ah
fsubr [ ecx ]
imul ebp [ edi ] 0xdcdb7cf2
pop edi
insb
xchg ebp eax
pushfd
salc
xor al 0xa9
out dx eax
shr ebx 0xd0
dec edx
fstpnce st3
sub ebx [ ebx ]
jge r-xdata
push 0x95d72be0
pop ds
outsd
dec esp
int1
loop r-xdata
add bh [ eax - 0x6a ]
mov gs [ ebx + 0x6aead925 ]
mov ebp 0x2fb8f919
fwait
iretd
mov ch [ edi + 0x1842c3a3 ]
lds ecx [ edi + 0x4630588a ]
movsb [ edi ] [ esi ]
xchg ebx eax
arpl [ edx + 0x4a7c605a ] bx
push edx
or al 0xf2
test [ edx + ecx * 2 ] esi
jecxz r-xdata
mov edx 0xe488b498
mov ebp [ ebx + edx * 8 ]
mov ch 0x64
sub eax 0x542749f9
and [ ebp - 0xba2ebf0 ] ch
0xc49765a1 0x3406
push ss
cld
leave
inc esi
jl r-xdata
mov [ edx - 0x107b25e8 ] esi
scasd [ edi ]
sub [ edi ] 0x53
adc ebx [ edi + 0x64 ]
movsd [ edi ] [ esi ]
push edi
xor ebp ebx
js r-xdata
int 0x4c
aad 0x7c
xor eax 0xe1894ce4
enter 0x54f6 0x4e
arpl [ eax - 0x7a ] sp
cmp [ ebx - 0x42 ] ebx
adc al 0x16
lds edi [ esi + 0x1 ]
mov ch 0xc8
leave
imul esi [ edx + 0x7bb5ea1b ] 0x8f70a21e
inc eax
mov esi 0x75ad96ce
cld
mul dl
fwait
pop ss
rcr [ eax + edx * 2 ] 0x1
xchg esi eax
jbe r-xdata
jecxz r-xdata
fiadd [ eax - 0x6c0e6b9 ]
push esi
loopne r-xdata
mov cl 0x11
mov bh ch
mov cl 0xd7
push 0x87f936e2
pop ds
xor eax 0xc269eaed
in al dx
jb r-xdata
arpl [ edx + 0x13807a88 ] si
aaa
dec eax
0xade58a70 0xfd7c
loopne r-xdata
test [ cs : ecx ] ecx
aam 0x90
add [ ebx + 0x1f ] 0xc4
je r-xdata
aad 0x35
lds eax [ eax + 0x3157a549 ]
fnstsw [ eax + 0x71 ]
cwde
dec ebp
mov dl 0xe0
scasb [ edi ]

push ecx
inc esi
inc eax
pop ebx
jns r-xdata
and ah dh
adc [ eax ] edi
push 0xffffffa2
and [ esi - 0x7e ] eax
hlt
shl [ edi + 0x13 ] cl
mov bl 0xa7
aam 0x56

popfd
pop ebx
call 0xffffffffc315d298
cmpsd [ esi ] [ edi ]
sub_10025a50
sbb dl bl
test bh ch
movsd [ edi ] [ esi ]
push edi
xor ebp ebx
js r-xdata
int 0x4c
aad 0x7c
xor eax 0xe1894ce4
enter 0x54f6 0x4e
arpl [ eax - 0x7a ] sp
cmp [ ebx - 0x42 ] ebx
adc al 0x16
lds edi [ esi + 0x1 ]
mov ch 0xc8
jecxz r-xdata
fiadd [ eax - 0x6c0e6b9 ]
push esi
loopne r-xdata
aad 0x35
lds eax [ eax + 0x3157a549 ]
fnstsw [ eax + 0x71 ]
cwde
dec ebp
mov dl 0xe0
scasb [ edi ]

sub_10025a90
pop ebx
mov dl 0xd
jo r-xdata
std
bound esi [ edx + 0x37 ]
popfd
cmpsb [ esi ] [ edi ]
into
and [ 0xffffffff9a20a48c ] bh
inc esi
jl r-xdata
scasd [ edi ]
sub [ edi ] 0x53
adc ebx [ edi + 0x64 ]
leave
imul esi [ edx + 0x7bb5ea1b ] 0x8f70a21e
inc eax
mov esi 0x75ad96ce
cld
mul dl
fwait
pop ss
rcr [ eax + edx * 2 ] 0x1
xchg esi eax
jbe r-xdata
mov cl 0x11
mov bh ch
mov cl 0xd7
push 0x87f936e2
pop ds
xor eax 0xc269eaed
in al dx
jb r-xdata
arpl [ edx + 0x13807a88 ] si
aaa
dec eax
0xade58a70 0xfd7c
loopne r-xdata
test [ cs : ecx ] ecx
aam 0x90
add [ ebx + 0x1f ] 0xc4
je r-xdata
push ecx
inc esi
inc eax
pop ebx
jns r-xdata
and ah dh
adc [ eax ] edi
push 0xffffffa2
and [ esi - 0x7e ] eax
hlt
shl [ edi + 0x13 ] cl
mov bl 0xa7
aam 0x56

popfd
pop ebx
call 0xffffffffc315d298
cmpsd [ esi ] [ edi ]
sub_10028490
adc al ch
adc ah [ ebx + 0x2 ]
and ebx [ esi ]
jbe r-xdata
push es
or cl [ edx + 0x3e ]
pop edx
imul esp [ eax ] 0x55
jae r-xdata
sahf
insd
mov ecx 0xa7d71b84
pop ss
xor al 0x7
dec edi
dec ecx
test ah bl
js r-xdata
outsd
push ss
stc
xor eax 0x7c34914b
scasd [ edi ]
retn
xchg edx eax
loop r-xdata
dec esp
insd
push edx
or al 0x52
aad 0xeb
inc ecx
adc bl [ esi ]
jae r-xdata
aas
mov ebp 0xa286e509
aam 0xce
jbe r-xdata
iretd
outsb
xlat
mov ebx 0xd248ba9
xchg esi eax
test eax 0x3364b32e
sahf
mov [ 0x4c6d382a ] eax
add eax [ eax ]
test bh dl
in eax dx
popa
js r-xdata
retn
and edx [ edx - 0x329cfe11 ]
and [ ebx + 0x42 ] 0xffffffc7
mov al 0x55
mov dl 0xa2
mov esi 0xc7607cf1
sar edi cl
jno r-xdata
arpl [ ecx ] dx
cwde
push ebp
movsb [ edi ] [ esi ]
sub ah [ esi ]
push ecx
and edi [ ecx ]
stosd [ edi ]
jno r-xdata
xor [ ebx + 0x1e1241f3 ] bl
cdq
adc ecx [ eax - 0x2d09c17 ]
jl r-xdata
push 0xe810c3a9
add ebp edi
mov ds [ edi + 0x558e5c4b ]
cmp eax 0x118dccd3
pop esi
cmp al 0x5c
push ebp
into
pop ss
mov ch 0x9b
ja r-xdata
and edi 0x4dc72d86

int 0xba
js r-xdata
movsd [ edi ] [ esi ]
lds esp [ ebp - 0x15 ]
cwde
dec ecx
xor ebx [ ebp + 0x56 ]
jae r-xdata
push esi
scasd [ edi ]
sub [ ecx ] edx
movsb [ edi ] [ esi ]
outsb
stosb [ edi ]
cld
cmp eax 0x77564e6f
push es
xchg ebp eax
sbb [ ebx - 0x8 ] ecx
pop es
dec ecx
out dx al
stosb [ edi ]
0x912a686 0xcaef
mov eax ebp
int 0x1f
sub [ edi + 0x52cb21ff ] ecx
and ebx [ fs : esi - 0x66 ]
xor esp [ esi ]
enter 0x8752 0xb2
test esp ebp
add [ edi - 0x4dca002c ] ebp
rol edi cl
xor al al
dec esp
adc eax 0xf4153a8
sub_100295c0
mov al dh
adc ecx [ esp + edi * 2 - 0x6c ]
fbstp [ ecx - 0x5e ]
pop es
jb r-xdata
add bl bl
clc
ror [ ebx + 0x11d59ff6 ] cl
pop ecx
test [ ebx + 0x43d0c533 ] dh
mov eax [ 0x39f60f38 ]
adc bh [ eax - 0x36 ]
cmp al 0x72
add bl cl
and [ 0xffffffff8bef5288 ] bl
mov edx ebp
sub_1002a4c0
push esi
cld
rcl [ ebp + 0x1c ] 0xd2
shl [ ecx - 0x60634da3 ] 0x1
or al 0x71
in eax 0xaf
add bh [ ecx - 0x2d9d2bb6 ]
cmp dl [ edx ]
adc [ ebx ] ecx
mov cl bh
xchg ebx eax
sbb edi 0xffffffbd
0x93ec9617 0xbd1d
pushfd
sub [ esp + ebp * 4 ] dh
mov eax 0x3f59c4b0
jpo r-xdata
push ss
xchg esp eax
imul edi [ edx - 0x4e89203e ] 0x2f
mov ebp 0xe4361b34
or dl [ ecx ]
push 0xfffffff9
and [ edx + 0x2c40d4ef ] ah
jle r-xdata
out 0x1 eax
mov cl 0x72
cli
sub dh bl
adc [ ebx + ebx ] bl
xchg esi eax
aam 0x6f
shr [ edx + 0x5fe3daf1 ] cl
sbb [ ecx - 0x3a93b27 ] edx
jb r-xdata
mov [ ebp - 0x7e ] cs

mov edx 0x29246054
cmp [ edi ] 0xffffff94
xor esi 0x66
test [ edx + 0xcf89f75 ] ebx
or eax 0x3ff4e0ba
xchg al ah
shl [ eax ] 0xbd
stosd [ edi ]
rol ah cl
adc [ esi - 0x37 ] ah
sahf
pop eax
test eax 0x73c4c352
inc eax
out 0xed eax
jmp r-xdata
push 0x7eda3cc9
fstp [ edi ]
out 0x6a al
fmul [ eax ]
pop edx
cwde
mov cl 0x7f
inc ecx
sub_1002a860
sbb eax 0x411b502b
das
jne r-xdata
xor ah 0x91
out 0x8e al
cmp eax 0x94380633
push ds
int3
mov ebp [ esi + 0x7b ]
movsd [ edi ] [ esi ]
jae r-xdata
xor eax [ esi ]
cmp [ esi + ebx - 0x32e6c634 ] dl
0xc8adaf98 0xb016
and eax 0x70f8faa9

sub_1002bc00
sbb al 0x1e
mov [ 0x1a296655 ] eax
and al 0xf9
[ esi ] [ edi ]
test al 0xc6
outsb
push 0xffffffa2
sti
inc edx
cmp [ 0x16d5f386 ] 0x4f
js r-xdata
js r-xdata
add esp [ eax ]
xchg edx eax
arpl [ eax - 0x15 ] ax
add eax 0xb405ad3e
inc ecx
test [ edi + 0x69 ] ch
loopne r-xdata
retn 0x6cd6
sub al 0x54
pushad
test al 0xd5
mov ebp 0x4bf6821
jmp 0xffffffffc00e625a
pop eax
test al 0xe4
pop ebp
call 0x10a0d7b2
or al 0xb
xchg ebp eax
popad
cmp eax 0xc753113b
salc
movsb [ edi ] [ esi ]
[ 0xffffffffa54aac20 ]
push eax
pop ecx
fld [ ebx + 0x65 ]
pushad
push cs
in eax 0xb2
pop edi
cld
push edx
jbe r-xdata
dec [ esi + 0x4 ]
in al dx
shl [ gs : esi + 0x31 ] 0x1
pop eax
add al 0xec
les ebx [ ecx * 8 - 0x59ff1471 ]
xor cl dh
jpe r-xdata
aam 0x2c
push es
jmp r-xdata
sbb ebp [ edx + edx * 8 ]
fadd [ edx - 0x7e81757 ]
test eax 0xc95069fe
stosd [ edi ]
add edi [ ecx ]
pushad
inc esp
push eax
call 0x12745ede
inc ecx
sbb eax 0x89a011e6
aad 0x25
mov esi 0x176ab499
dec ebp
pop ebp
xor [ eax ] 0x48
xchg esp eax
jge r-xdata
push ebx
sub esp 0x43
push ebx
adc esp esi
lds esi [ ebx + 0x3 ]
salc
cdq
add eax 0x62eb0c7f
mov edx 0x61272eb9
sub al 0xd2
je r-xdata
inc esp
aad 0x7d
and ebp edx
clc
std
int3
xor ecx [ esi - 0x2d ]
out 0xf5 eax
adc dh [ esp + edx * 2 - 0x7cacb696 ]
in al dx
inc ebx
lodsb [ esi ]
add eax 0x109de86f
jle r-xdata
adc [ eax ] 0x59
mov bh 0x94
das
mov fs bp
r-xdata
mov dl 0xb
aas
aaa
aas
pop edx
and [ edi + ebx * 8 + 0xa ] esp
push 0xccb9fcfd
imul ebx [ edx - 0x47 ] 0x7adb6f62
sbb eax 0x7f3a57cf
out 0x5e al
pop esi
shl [ ecx ] 0x1
add [ 0x3e591080 ] 0x2f94b7f2
shr [ edi ] 0x4c
cmpsb [ esi ] [ edi ]
dec eax
imul eax [ esi ] 0x3def8a7a
mov bl 0x1f
arpl [ ebp + 0x1 ] ax
jns r-xdata
add eax 0x9ac34d3b
xor eax 0x79014563
jecxz r-xdata
jae r-xdata
test eax 0x4fd4536a
mov bl 0xd7
and eax 0x57617935
fcmovu st6
test [ ebx - 0x52 ] al
bound ebx [ eax + 0x658cf5b8 ]
sbb eax 0xee9d0a63
movsd [ edi ] [ esi ]
das
jle r-xdata
daa
popad
inc esp
out 0x39 al
mov eax [ 0xfffffffffd68809f ]
cld
mov ecx 0xb95a69cc
bound ebp [ edi - 0x25 ]
jpe r-xdata
push 0x53
aam 0x4f
dec ebp
jns r-xdata
iretd
sub_1002cc00
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
cmp ecx edx
je r-xdata
pop ebp
retn
push esi
add ecx 0xc
add eax 0xc
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
test eax eax
je r-xdata
pop esi
sub_1002cc40
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x15555555
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call [ r--data ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_1002ca00
sub_1002cd30
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x2aaaaaab
imul edx
mov eax [ ebp + 0x8 ]
sar edx 0x1
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x15555555
sub edx eax
cmp edx esi
jae r-xdata
mov edx [ ecx + 0x8 ]
add esi eax
sub edx edi
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call [ r--data ]
pop edi
pop esi
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x15555555
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1002cc40
mov eax esi
cmp eax esi
jae r-xdata
sub_1002cde0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_1002cd30
sub esi eax
mov eax 0x2aaaaaab
imul esi
sar edx 0x1
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0xc
pop edi
pop esi
pop ebp
retn 0x4
mov edx [ esi ]
mov [ eax ] edx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ edi ]
lea eax [ esi + esi * 2 ]
lea ecx [ ecx + eax * 4 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_1002cd30
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ecx
add [ edi + 0x4 ] 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_1002ce70
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x2
call sub_1001fe80
mov eax [ esi + 0x8 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
push eax
call sub_1003c10a
add esp 0x4
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call sub_1002a4c0
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_1002cf10
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx ]
cmp esi [ ebx + 0x4 ]
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi + 0x2 ]
movzx ecx [ esi ]
mov dl [ esi + 0x3 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] al
movzx eax [ esi + 0x4 ]
lea ecx [ ebp - 0xc ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x3 ] al
call sub_1002cde0
add esi 0x6
cmp esi [ ebx + 0x4 ]
jne r-xdata
pop edi
sub_1002cf60
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x3
call sub_10020650
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_1002cf10
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
push eax
call sub_1002bc00
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push eax
call sub_1002a4c0
add esp 0x4
sub_1002d010
push edi
mov edi ecx
cmp [ edi ] 0x0
je r-xdata
pop edi
retn
push esi
call [ GetLastError@IAT ]
mov esi eax
mov eax [ edi ]
push eax
call [ ReleaseActCtx@IAT ]
push esi
call [ SetLastError@IAT ]
pop esi
sub_1002d040
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x1c ] 0x4
call [ CreateActCtxW@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x4df
call [ SetLastError@IAT ]
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
mov [ esi ] 0x0
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_1002d0c0
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push edi
call [ GetLastError@IAT ]
mov edi eax
mov eax [ esi ]
push eax
push 0x0
call [ DeactivateActCtx@IAT ]
push edi
call [ SetLastError@IAT ]
pop edi
sub_1002d110
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1002d140
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
cmp [ esi + 0x15 ] 0x0
push edi
mov edi eax
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea ecx [ esi + 0xc ]
call sub_100209e0
test al al
je r-xdata
mov ecx [ ebx + 0x4 ]
lea eax [ ebp + 0xc ]
pop edi
mov [ ebp + 0xc ] ecx
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
add edi 0xc
push edi
call sub_100209e0
test al al
jne r-xdata
mov edi esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x15 ] 0x0
je r-xdata
sub_1002d1c0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
push ebx
push esi
push edi
cmp eax 0x1ffffffe
jb r-xdata
mov edi [ ebp + 0x14 ]
inc eax
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov edx [ ecx + 0x4 ]
xor bl bl
cmp eax edx
jne r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ esi + 0xc ]
call sub_1001fe80
push esi
call sub_1003c10a
add esp 0x4
push r--data
call [ r--data ]
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ edx + 0x4 ] edi
mov eax [ ecx + 0x4 ]
mov [ eax ] edi
mov edx [ ecx + 0x4 ]
jmp r-xdata
mov [ eax + 0x8 ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ eax ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov eax edi
cmp [ edx + 0x14 ] bl
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
pop esi
mov [ ecx + 0x14 ] 0x1
pop ebx
pop ebp
retn 0x10
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov esi [ esi ]
cmp [ esi + 0x14 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] bl
jne r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_1002d3f0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x15 ] 0x0
push esi
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
call sub_10023260
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call [ r--data ]
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0xc ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x8 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
push edi
call sub_1000db30
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0xc
call sub_1001fe80
mov ecx [ ebp - 0x8 ]
push ecx
call sub_1003c10a
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_1002d110
mov ecx [ ebp - 0xc ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
jmp r-xdata
cmp [ edi + 0x14 ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_1000d490
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_1002eda0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x14 ] bl
call sub_1000d490
mov edx [ eax + 0x8 ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_1002eda0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x14 ] bl
call sub_1002eda0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_1000d490
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub_1002d660
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_1002d660
mov esi [ esi ]
lea ecx [ edi + 0xc ]
call sub_1001fe80
push edi
call sub_1003c10a
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_1002d6a0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ecx + 0x4 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi eax
add ebx 0xc
cmp [ esi + 0x15 ] 0x0
mov al 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] al
jne r-xdata
mov esi edi
mov [ ebp + 0x10 ] esi
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov edi esi
je r-xdata
push ebx
lea ecx [ esi + 0xc ]
call sub_100209e0
test al al
je r-xdata
mov edx [ ecx + 0x4 ]
cmp edi [ edx ]
jne r-xdata
lea eax [ esi + 0xc ]
push eax
mov ecx ebx
call sub_100209e0
push ebx
lea ecx [ esi + 0xc ]
call sub_100209e0
test al al
sete al
jmp r-xdata
mov ecx ebx
call sub_1001fe80
mov eax [ ebp + 0xc ]
push eax
call sub_1003c10a
mov eax [ ebp + 0x8 ]
add esp 0x4
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
push edx
push edi
push eax
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_1002d1c0
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp + 0x10 ]
call sub_10023310
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push eax
push edi
push 0x1
lea edx [ ebp + 0x10 ]
push edx
call sub_1002d1c0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov [ ebp - 0x4 ] al
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ esi + 0x15 ] 0x0
je r-xdata
sub_1002d7a0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x18
call sub_1003c1de
mov esi eax
xor eax eax
add esp 0x4
mov [ ebp - 0x14 ] esi
cmp esi eax
je r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp + 0x8 ] eax
call [ r--data ]
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_1003c200
int3
mov ecx [ edi + 0x4 ]
mov [ esi ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ edi + 0x4 ]
lea edi [ esi + 0xc ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x14 ] ax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0x1
cmp edi eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push ebx
mov ecx edi
call sub_10020650
mov edx [ ebx + 0x4 ]
mov [ edi + 0x4 ] edx
sub_1002d870
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
add ecx 0x138
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] al
call sub_100018c0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1002d8b0
push ebx
push esi
mov ebx ecx
mov eax [ ebx + 0x4 ]
push edi
mov edi [ eax + 0x4 ]
cmp [ edi + 0x15 ] 0x0
mov esi edi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ eax ] eax
mov eax [ ebx + 0x4 ]
pop edi
mov [ eax + 0x8 ] eax
pop esi
mov [ ebx + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx ebx
call sub_1002d660
mov esi [ esi ]
lea ecx [ edi + 0xc ]
call sub_1001fe80
push edi
call sub_1003c10a
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_1002d910
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x10 ]
lea ebx [ edi + 0xc ]
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push edi
call sub_1002d1c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp ecx eax
jne r-xdata
add ecx 0xc
push ecx
mov ecx ebx
call sub_100209e0
test al al
je r-xdata
add ecx 0xc
push ecx
mov ecx ebx
call sub_100209e0
test al al
je r-xdata
mov ecx [ eax + 0x8 ]
add ecx 0xc
push ebx
call sub_100209e0
test al al
je r-xdata
push 0x0
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_1002d6a0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push ecx
push 0x1
push edi
mov ecx esi
call sub_1002d1c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
push ebx
add ecx 0xc
call sub_100209e0
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
lea ecx [ ebp + 0x10 ]
call sub_10023310
mov ecx [ ebp + 0x10 ]
push ebx
add ecx 0xc
call sub_100209e0
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x0
push edi
mov ecx esi
call sub_1002d1c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
lea ecx [ ebp + 0x10 ]
call sub_10023260
mov eax [ ebp + 0x10 ]
cmp eax [ esi + 0x4 ]
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
add eax 0xc
push eax
mov ecx ebx
call sub_100209e0
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
push 0x1
push edi
call sub_1002d1c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x0
push edi
call sub_1002d1c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x1
push edi
mov ecx esi
call sub_1002d1c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
push 0x0
push edi
mov ecx esi
call sub_1002d1c0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
sub_1002dab0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
push 0x24c
call sub_1003c1de
add esp 0x4
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor esi esi
push edi
mov ecx eax
call sub_100326b0
mov esi eax
jmp r-xdata
push 0x1
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_1001c200
add esp 0xc
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x3
call sub_1001ccc0
mov edi 0x8
cmp [ ebp - 0x50 ] edi
jb r-xdata
lea eax [ ebp - 0x2c ]
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10036dd0
push 0xa
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100019b0
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
jae r-xdata
xor edx edx
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] dx
mov [ ebp - 0x4 ] 0x1
jb r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_1003c10a
add esp 0x4
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100136f0
mov dl [ eax + 0x124 ]
mov ecx [ eax + 0x120 ]
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x68 ] dl
cmp [ ebp - 0x34 ] edi
jae r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
mov edx [ ebp - 0x68 ]
push edx
push ecx
push esi
push eax
call sub_1002a040
add esp 0x10
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x48 ]
cmp esi ebx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x2c ]
mov ecx esi
call edx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10035170
mov eax esi
jmp r-xdata
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10035170
xor eax eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
sub_1002dc40
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
mov ecx esi
call sub_1002d8b0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edx
lea edx [ ebp - 0x4 ]
push edx
mov ecx esi
call sub_1002d3f0
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] ecx
jmp r-xdata
nop
mov ecx eax
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1002dce0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x15 ] 0x0
mov ebx eax
jne r-xdata
cmp ebx [ edi + 0x4 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0xc ]
call sub_100209e0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_10020650
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
call sub_1002d7a0
push eax
push ebx
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx edi
call sub_1002d910
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1001fe80
lea eax [ esi + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebx + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_100209e0
test al al
je r-xdata
mov ebx esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
lea eax [ ebx + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0x15 ] 0x0
je r-xdata
sub_1002ddc0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esi ] r--data
push 0x18
mov [ ebp - 0x44 ] esi
mov [ esi + 0xc ] 0x0
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] 0x0
call [ r--data ]
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
mov [ ebp - 0x50 ] r--data
call sub_1003c200
int3
mov [ esi + 0x8 ] eax
mov [ eax ] eax
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x8 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x15 ] 0x1
push 0x0
mov [ ebp - 0x4 ] 0x0
call [ CoInitialize@IAT ]
test eax eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
cmp eax 0x1
je r-xdata
push r--data
push 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea edx [ ebp - 0x3c ]
push edx
call sub_1003c200
sub_1002deb0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ edi ] r--data
call [ CoUninitialize@IAT ]
lea esi [ edi + 0x4 ]
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_1000d620
mov ecx [ esi + 0x4 ]
push ecx
call sub_1003c10a
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push edi
call sub_1003c10a
add esp 0x4
sub_1002df40
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
push 0x14
call sub_1003c1de
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
mov ecx eax
call sub_1002ddc0
mov [ rw-data ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1002dfc0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_1002dc40
mov ecx [ esi + 0x4 ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1002e020
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor esi esi
push 0x18
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x44 ] esi
call sub_1003c1de
add esp 0x4
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x3c ] esi
call [ r--data ]
push r--data
lea edx [ ebp - 0x60 ]
push edx
mov [ ebp - 0x60 ] r--data
call sub_1003c200
int3
mov [ ebp - 0x48 ] eax
mov [ eax ] eax
mov eax [ ebp - 0x48 ]
mov [ eax + 0x4 ] eax
mov eax [ ebp - 0x48 ]
mov [ eax + 0x8 ] eax
mov eax [ ebp - 0x48 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ ebp - 0x48 ]
mov [ ecx + 0x15 ] 0x1
mov eax [ ebx ]
mov [ ebp - 0x4 ] esi
mov esi [ eax ]
cmp esi eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov [ ebp - 0x34 ] ecx
cmp ecx eax
je r-xdata
mov edi [ esi + 0x8 ]
mov edx [ edi ]
mov edx [ edx + 0x4 ]
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call edx
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_1002dce0
lea ecx [ ebp - 0x30 ]
mov [ eax ] edi
mov [ ebp - 0x4 ] 0x0
call sub_1001fe80
mov esi [ esi ]
cmp esi [ ebx ]
jne r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
push eax
push ecx
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x4
call sub_1002dc40
mov eax [ ebp - 0x48 ]
push eax
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x34 ]
mov eax [ eax + 0x8 ]
push 0x0
push rw-data
push rw-data
push 0x0
push eax
call sub_1003c33c
mov edi eax
add esp 0x14
cmp [ edi + 0x170 ] 0x0
je r-xdata
mov ecx [ ebp - 0x34 ]
mov eax [ ecx ]
mov [ ebp - 0x34 ] eax
cmp eax [ ebx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
call sub_1002d870
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_10020cf0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x54 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_1002d140
mov edx [ ebp - 0x54 ]
mov eax [ edx + 0x10 ]
push 0x0
push rw-data
push rw-data
push 0x0
push eax
call sub_1003c33c
lea esi [ eax + 0x234 ]
add esp 0x14
mov [ edi + 0x134 ] eax
mov ebx [ esi ]
mov edx [ ebx + 0x4 ]
lea ecx [ ebp - 0x50 ]
push ecx
push edx
push ebx
mov ecx esi
mov [ ebp - 0x50 ] edi
call sub_10019460
mov ecx [ esi + 0x4 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
push r--data
call [ r--data ]
inc ecx
mov [ esi + 0x4 ] ecx
mov [ ebx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov ecx edi
call sub_10031470
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_1001fe80
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov ebx [ ebp - 0x38 ]
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
sub_1002e240
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x104 ] ecx
mov [ ebp - 0x110 ] eax
call sub_100136f0
lea ecx [ ebp - 0xa0 ]
push ecx
mov ecx eax
call sub_100089d0
xor edi edi
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] edi
call sub_10036db0
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0xa0 ]
lea ecx [ ebp - 0x68 ]
jne r-xdata
mov edx [ rw-data ]
push edx
push eax
push ecx
call sub_1001d420
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov edx [ rw-data ]
push edx
push eax
push ecx
call sub_1001d420
add esp 0xc
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x114 ]
push ecx
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x114 ] edi
call [ r--data ]
push r--data
lea edx [ ebp - 0x124 ]
push edx
mov [ ebp - 0x124 ] r--data
call sub_1003c200
int3
mov ebx eax
mov [ eax ] eax
mov [ ebp - 0xfc ] ebx
mov [ eax + 0x4 ] eax
push 0x1
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0x4 ] 0x6
call sub_1001ee40
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000ef20
mov esi 0x8
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x38 ] esi
jb r-xdata
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x84 ]
call sub_1000ef20
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x1
call sub_10035170
lea edx [ ebp - 0x84 ]
push edx
lea ecx [ ebp - 0xe8 ]
call sub_1001ea40
xor eax eax
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] ax
push 0xc
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0xf8 ] edi
call sub_1003c1de
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0xe8 ]
call sub_1001c5f0
test al al
jne r-xdata
mov edx [ ebp - 0x4c ]
push edx
cmp [ ebp - 0xf8 ] edi
je r-xdata
cmp [ ebp - 0x20 ] edi
je r-xdata
mov eax [ ebx ]
mov [ ebx ] ebx
mov [ ebx + 0x4 ] ebx
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0xfc ]
push ecx
mov ecx [ ebp - 0x104 ]
call sub_1002e020
mov ebx [ ebp - 0xfc ]
lea edx [ ebp - 0x68 ]
push edx
lea ecx [ ebp - 0xe8 ]
call sub_1001ef60
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000ef20
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov eax [ ebp - 0x30 ]
cmp [ ebp - 0x1c ] esi
jae r-xdata
push ebx
call sub_1003c10a
add esp 0x4
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov esi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax esi
cmp esi ebx
jne r-xdata
mov eax [ ebp - 0x68 ]
push eax
jmp r-xdata
cmp [ eax ] 0x2e
je r-xdata
lea eax [ ebp - 0x30 ]
xor eax eax
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] ax
mov [ ebp - 0x4 ] 0x1
call sub_1001eb00
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x0
call sub_10035170
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10035170
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x30 ]
push edx
call sub_1003c10a
add esp 0x4
mov esi 0x8
call sub_1003c10a
add esp 0x4
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x9
call sub_10036dd0
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
call sub_1001ccc0
mov [ ebp - 0x100 ] edi
mov [ ebp - 0xec ] edi
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x38 ] esi
jae r-xdata
push eax
push r--data
lea ecx [ ebp - 0x100 ]
call sub_1002d040
mov esi [ ebp - 0x100 ]
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0xec ] edi
je r-xdata
push 0x6
call [ SetLastError@IAT ]
jmp r-xdata
lea edx [ ebp - 0xec ]
push edx
push esi
call [ ActivateActCtx@IAT ]
cmp eax edi
jne r-xdata
push 0x4df
call [ SetLastError@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x104 ]
lea eax [ ebp - 0x4c ]
push eax
call sub_1002dab0
mov [ ebp - 0xf0 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0xec ] edi
mov eax [ ebp - 0xec ]
cmp eax edi
je r-xdata
push edi
push rw-data
push rw-data
push edi
push eax
call sub_1003c33c
mov esi eax
add esp 0x14
cmp esi edi
je r-xdata
mov [ ebp - 0xec ] edi
cmp esi edi
je r-xdata
push eax
push edi
call [ DeactivateActCtx@IAT ]
mov eax [ ebx + 0x4 ]
lea edx [ ebp - 0xf0 ]
push edx
push eax
push ebx
lea ecx [ ebp - 0xfc ]
call sub_10019460
mov ecx 0x3ffffffe
sub ecx [ ebp - 0xf8 ]
cmp ecx 0x1
jae r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x9
call sub_10035170
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
push esi
call [ ReleaseActCtx@IAT ]
cmp [ ebp - 0xec ] edi
je r-xdata
inc [ ebp - 0xf8 ]
mov [ ebx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
push r--data
lea ecx [ ebp - 0x10c ]
call sub_10020be0
mov edx [ esi ]
mov edx [ edx + 0x4 ]
lea eax [ ebp - 0x118 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0xd
call edx
lea ecx [ ebp - 0x10c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0xe
call sub_10020000
cmp eax edi
lea ecx [ ebp - 0x118 ]
sete bl
mov [ ebp - 0x4 ] 0xd
call sub_1001fe80
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0xc
call sub_1001fe80
test bl bl
je r-xdata
push r--data
call [ r--data ]
lea ecx [ ebp - 0xf0 ]
push ecx
mov ecx [ ebp - 0x110 ]
call sub_1000f080
mov esi 0x8
call [ GetLastError@IAT ]
mov ecx [ ebp - 0xec ]
push ecx
push edi
mov esi eax
call [ DeactivateActCtx@IAT ]
push esi
call [ SetLastError@IAT ]
mov ebx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
mov ecx [ ebp - 0x104 ]
lea edx [ ebp - 0x4c ]
push edx
call sub_1002dab0
push edi
push rw-data
push rw-data
push edi
push eax
mov [ ebp - 0xf0 ] eax
call sub_1003c33c
mov esi eax
add esp 0x14
cmp esi edi
je r-xdata
mov ebx [ ebp - 0xfc ]
mov edx [ ebx + 0x4 ]
lea ecx [ ebp - 0xf0 ]
push ecx
push edx
push ebx
lea ecx [ ebp - 0xfc ]
call sub_10019460
mov ecx 0x3ffffffe
sub ecx [ ebp - 0xf8 ]
cmp ecx 0x1
jae r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
inc [ ebp - 0xf8 ]
mov [ ebx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
push r--data
lea ecx [ ebp - 0x108 ]
call sub_10020be0
lea edx [ ebp - 0x108 ]
lea ecx [ esi + 0xfc ]
push edx
mov [ ebp - 0x4 ] 0xf
call sub_10020200
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x4 ] 0xc
call sub_1001fe80
mov eax [ esi ]
mov edx [ eax + 0x78 ]
push 0x1
mov ecx esi
call edx
mov ecx [ ebp - 0x104 ]
lea eax [ ebp - 0x4c ]
push eax
call sub_1002dab0
mov esi eax
call sub_100136f0
mov [ rw-data ] esi
push r--data
call [ r--data ]
mov ecx [ ebp - 0x110 ]
lea eax [ ebp - 0xf0 ]
push eax
call sub_1000f080
sub_1002e6a8
mov ebx [ ebp - 0xfc ]
xor edi edi
lea ecx [ ebp - 0xe8 ]
call sub_1001c5f0
test al al
jne r-xdata
mov eax [ ebp - 0x68 ]
push eax
jmp r-xdata
cmp [ ebp - 0xf8 ] edi
je r-xdata
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_1003c10a
add esp 0x4
jmp r-xdata
mov eax [ ebx ]
mov [ ebx ] ebx
mov [ ebx + 0x4 ] ebx
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0xfc ]
push ecx
mov ecx [ ebp - 0x104 ]
call sub_1002e020
mov ebx [ ebp - 0xfc ]
lea edx [ ebp - 0x68 ]
push edx
lea ecx [ ebp - 0xe8 ]
call sub_1001ef60
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000ef20
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov eax [ ebp - 0x30 ]
cmp [ ebp - 0x1c ] esi
jae r-xdata
push ebx
call sub_1003c10a
add esp 0x4
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov esi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax esi
cmp esi ebx
jne r-xdata
cmp [ eax ] 0x2e
je r-xdata
lea eax [ ebp - 0x30 ]
xor eax eax
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] ax
mov [ ebp - 0x4 ] 0x1
call sub_1001eb00
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x0
call sub_10035170
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10035170
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x30 ]
push edx
call sub_1003c10a
add esp 0x4
mov esi 0x8
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x9
call sub_10036dd0
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
call sub_1001ccc0
mov [ ebp - 0x100 ] edi
mov [ ebp - 0xec ] edi
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x38 ] esi
jae r-xdata
push eax
push r--data
lea ecx [ ebp - 0x100 ]
call sub_1002d040
mov esi [ ebp - 0x100 ]
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0xec ] edi
je r-xdata
push 0x6
call [ SetLastError@IAT ]
jmp r-xdata
lea edx [ ebp - 0xec ]
push edx
push esi
call [ ActivateActCtx@IAT ]
cmp eax edi
jne r-xdata
push 0x4df
call [ SetLastError@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x104 ]
lea eax [ ebp - 0x4c ]
push eax
call sub_1002dab0
mov [ ebp - 0xf0 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0xec ] edi
mov eax [ ebp - 0xec ]
cmp eax edi
je r-xdata
push edi
push rw-data
push rw-data
push edi
push eax
call sub_1003c33c
mov esi eax
add esp 0x14
cmp esi edi
je r-xdata
mov [ ebp - 0xec ] edi
cmp esi edi
je r-xdata
push eax
push edi
call [ DeactivateActCtx@IAT ]
mov eax [ ebx + 0x4 ]
lea edx [ ebp - 0xf0 ]
push edx
push eax
push ebx
lea ecx [ ebp - 0xfc ]
call sub_10019460
mov ecx 0x3ffffffe
sub ecx [ ebp - 0xf8 ]
cmp ecx 0x1
jae r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x9
call sub_10035170
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
push esi
call [ ReleaseActCtx@IAT ]
cmp [ ebp - 0xec ] edi
je r-xdata
inc [ ebp - 0xf8 ]
mov [ ebx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
push r--data
lea ecx [ ebp - 0x10c ]
call sub_10020be0
mov edx [ esi ]
mov edx [ edx + 0x4 ]
lea eax [ ebp - 0x118 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0xd
call edx
lea ecx [ ebp - 0x10c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0xe
call sub_10020000
cmp eax edi
lea ecx [ ebp - 0x118 ]
sete bl
mov [ ebp - 0x4 ] 0xd
call sub_1001fe80
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0xc
call sub_1001fe80
test bl bl
je r-xdata
push r--data
call [ r--data ]
lea ecx [ ebp - 0xf0 ]
push ecx
mov ecx [ ebp - 0x110 ]
call sub_1000f080
mov esi 0x8
call [ GetLastError@IAT ]
mov ecx [ ebp - 0xec ]
push ecx
push edi
mov esi eax
call [ DeactivateActCtx@IAT ]
push esi
call [ SetLastError@IAT ]
mov ebx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
mov ecx [ ebp - 0x104 ]
lea edx [ ebp - 0x4c ]
push edx
call sub_1002dab0
push edi
push rw-data
push rw-data
push edi
push eax
mov [ ebp - 0xf0 ] eax
call sub_1003c33c
mov esi eax
add esp 0x14
cmp esi edi
je r-xdata
mov ebx [ ebp - 0xfc ]
mov edx [ ebx + 0x4 ]
lea ecx [ ebp - 0xf0 ]
push ecx
push edx
push ebx
lea ecx [ ebp - 0xfc ]
call sub_10019460
mov ecx 0x3ffffffe
sub ecx [ ebp - 0xf8 ]
cmp ecx 0x1
jae r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
inc [ ebp - 0xf8 ]
mov [ ebx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
push r--data
lea ecx [ ebp - 0x108 ]
call sub_10020be0
lea edx [ ebp - 0x108 ]
lea ecx [ esi + 0xfc ]
push edx
mov [ ebp - 0x4 ] 0xf
call sub_10020200
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x4 ] 0xc
call sub_1001fe80
mov eax [ esi ]
mov edx [ eax + 0x78 ]
push 0x1
mov ecx esi
call edx
mov ecx [ ebp - 0x104 ]
lea eax [ ebp - 0x4c ]
push eax
call sub_1002dab0
mov esi eax
call sub_100136f0
mov [ rw-data ] esi
push r--data
call [ r--data ]
mov ecx [ ebp - 0x110 ]
lea eax [ ebp - 0xf0 ]
push eax
call sub_1000f080
sub_1002e7e0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call [ r--data ]
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002e810
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003c020
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_1002e840
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
sub esp 0x10
push esi
lea esi [ ecx + 0x4 ]
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push eax
push eax
push eax
push eax
call [ CreateEventA@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov edx ecx
xor eax eax
[ esi ] edx
mov esi eax
test esi esi
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_1003c000
push r--data
lea eax [ ebp - 0x10 ]
push eax
call sub_1003c200
mov eax ecx
push ecx
call [ CloseHandle@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_1002e8c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x20 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x24 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x28 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0x2c ] eax
pop ebp
retn 0x4
sub_1002e8f0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
add ecx 0xfc
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10020650
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1002e970
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push 0x0
push eax
push ecx
push esi
call sub_100136f0
mov ecx eax
call sub_10013b90
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1002ea00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
sub_1002ea20
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx edi [ esi + 0x2 ]
mov eax edi
mov ecx 0xe
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add ecx edx
mov dx [ esi ]
movzx eax cx
sub dx ax
mov ecx 0x12c0
add dx cx
movzx ecx dx
lea edx [ eax + eax * 2 ]
lea eax [ edi + edx * 4 - 0x3 ]
movzx edx ax
imul edx edx 0x99
add edx 0x2
mov eax 0x66666667
imul edx
sar edx 0x1
mov edi edx
shr edi 0x1f
add edi edx
mov eax 0x51eb851f
imul ecx
sar edx 0x7
add edi edx
mov ebx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
shr ebx 0x1f
add ebx edi
mov eax edx
shr eax 0x1f
add eax edx
movzx edx [ esi + 0x4 ]
sub ebx eax
mov eax ecx
imul eax eax 0x16d
add ebx edx
add ebx eax
pop edi
shr ecx 0x2
pop esi
lea eax [ ebx + ecx - 0x7d2d ]
pop ebx
pop ebp
retn
sub_1002ead0
push ebp
mov ebp esp
movzx ecx [ ebp + 0x8 ]
mov eax ecx
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
xor eax eax
pop ebp
retn
mov eax ecx
push esi
cdq
mov esi 0x64
idiv esi
pop esi
test edx edx
jne r-xdata
mov eax 0x1
pop ebp
retn
mov eax ecx
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
sub_1002eb10
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov [ eax ] edx
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
retn
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x19 ] 0x0
je r-xdata
mov [ eax ] edx
retn
sub_1002eb70
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push rw-data
call [ r--data ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
lea eax [ esi + 0x10 ]
pop esi
pop ebp
retn 0x4
sub_1002eba0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call [ r--data ]
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
pop edi
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002ebd0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
retn
mov ecx [ ecx ]
mov eax 0x80000000
mov edx ecx
[ edx ] eax
test eax 0x40000000
jne r-xdata
cmp eax 0x80000000
jle r-xdata
mov eax ecx
[ eax ] 0x1e
jb r-xdata
call sub_1002e840
push eax
call [ SetEvent@IAT ]
sub_1002ec10
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x4
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xfffffffe
mov [ eax + 0x4 ] 0x7fffffff
pop ebp
retn
jmp [ eax * 4 + jump_table_1002ec7c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x80000000
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0x7fffffff
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xfffffffd
mov [ eax + 0x4 ] 0x7fffffff
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
mov [ eax + 0x4 ] 0x80000000
pop ebp
retn
sub_1002ec90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
test eax eax
js r-xdata
cdq
xor eax edx
sub eax edx
cdq
mov ecx eax
mov esi edx
shld esi ecx 0x4
shl ecx 0x4
sub ecx eax
mov eax [ ebp + 0xc ]
sbb esi edx
cdq
xor eax edx
sub eax edx
shld esi ecx 0x2
cdq
add ecx ecx
add ecx ecx
add ecx eax
adc esi edx
mov edx ecx
mov eax esi
shld eax edx 0x4
shl edx 0x4
sub edx ecx
sbb eax esi
shld eax edx 0x2
mov esi eax
mov eax [ ebp + 0x10 ]
add edx edx
lea ecx [ edx + edx ]
cdq
xor eax edx
sub eax edx
cdq
push 0x0
add ecx eax
push 0xf4240
adc esi edx
push esi
push ecx
call sub_1003c380
mov ecx eax
mov esi edx
mov eax ebx
cdq
xor eax edx
xor edi edx
sub edi edx
sbb eax edx
mov edx eax
mov eax edi
neg eax
adc edx 0x0
neg edx
sub eax ecx
pop edi
sbb edx esi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
cdq
mov ecx eax
mov esi edx
shld esi ecx 0x4
shl ecx 0x4
sub ecx eax
mov eax [ ebp + 0xc ]
sbb esi edx
shld esi ecx 0x2
cdq
add ecx ecx
add ecx ecx
add ecx eax
adc esi edx
mov edx ecx
mov eax esi
shld eax edx 0x4
shl edx 0x4
sub edx ecx
sbb eax esi
shld eax edx 0x2
add edx edx
mov esi eax
mov eax [ ebp + 0x10 ]
lea ecx [ edx + edx ]
cdq
push 0x0
add ecx eax
push 0xf4240
adc esi edx
push esi
push ecx
call sub_1003c380
add eax edi
pop edi
pop esi
adc edx ebx
pop ebx
pop ebp
retn
test edi edi
jb r-xdata
sub_1002eda0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_1002ee00
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ecx ]
push edi
mov [ ebp - 0x4 ] edx
test esi esi
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp edx 0x80000000
je r-xdata
cmp esi 0xfffffffe
jne r-xdata
cmp edx 0x7fffffff
je r-xdata
cmp esi 0xfffffffe
jne r-xdata
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
test edi edi
jne r-xdata
cmp edx 0x7fffffff
je r-xdata
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
cmp edi 0xfffffffe
jne r-xdata
cmp edx 0x7fffffff
je r-xdata
cmp edi 0xffffffff
jne r-xdata
cmp ebx 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] 0xfffffffe
mov [ eax + 0x4 ] 0x7fffffff
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi 0xffffffff
jne r-xdata
cmp ebx 0x7fffffff
je r-xdata
cmp edi 0xfffffffe
jne r-xdata
cmp ebx 0x7fffffff
je r-xdata
test esi esi
jne r-xdata
cmp edx 0x7fffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
sub esi edi
pop edi
sbb edx ebx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx 0x7fffffff
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp edx 0x80000000
jne r-xdata
cmp edi esi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
cmp edx 0x7fffffff
jne r-xdata
test edi edi
jne r-xdata
cmp ebx edx
je r-xdata
push ebx
push edi
call sub_1002e9e0
add esp 0x8
test al al
je r-xdata
cmp ebx 0x7fffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
pop edi
mov edx esi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx edx
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0x7fffffff
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x80000000
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1002ef60
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ebp + 0xc ]
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp esi 0x80000000
je r-xdata
cmp eax 0xfffffffe
jne r-xdata
cmp esi 0x7fffffff
je r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov edx [ edi ]
test edx edx
je r-xdata
cmp esi 0x7fffffff
je r-xdata
mov edx [ edi ]
cmp edx 0xfffffffe
je r-xdata
cmp esi 0x7fffffff
je r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] 0xfffffffe
mov [ eax + 0x4 ] 0x7fffffff
pop esi
pop ebp
retn 0x8
cmp eax 0xffffffff
jne r-xdata
cmp edx 0xfffffffe
jne r-xdata
test eax eax
jne r-xdata
cmp esi 0x7fffffff
jne r-xdata
xor ecx ecx
add edx eax
mov eax [ ebp + 0x8 ]
adc ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x8
cmp eax 0xffffffff
jne r-xdata
cmp esi 0x80000000
jne r-xdata
test edx edx
je r-xdata
cmp edx 0xffffffff
jne r-xdata
cmp esi 0x7fffffff
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x7fffffff
pop esi
pop ebp
retn 0x8
mov edx eax
mov eax [ ebp + 0x8 ]
mov ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x80000000
pop esi
pop ebp
retn 0x8
sub_1002f060
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
call [ CoUninitialize@IAT ]
push esi
call sub_1003c10a
add esp 0x4
sub_1002f080
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x0
mov ecx esi
call edx
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop esi
pop ebp
retn 0x4
sub_1002f0b0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
lea eax [ esi + esi + 0x2 ]
push edi
mov ebx esi
cmp eax edx
jge r-xdata
jne r-xdata
lea esp [ esp ]
lea eax [ esi - 0x1 ]
cdq
sub eax edx
sar eax 0x1
cmp ebx esi
jge r-xdata
mov ax [ ecx + edx * 2 - 0x2 ]
mov [ ecx + esi * 2 ] ax
lea esi [ edx - 0x1 ]
mov di [ ecx + eax * 2 ]
mov [ ecx + esi * 2 ] di
mov esi eax
lea eax [ eax + eax + 0x2 ]
cmp eax edx
jl r-xdata
dec eax
mov eax [ ebp + 0x14 ]
mov dx [ eax ]
pop edi
mov [ ecx + esi * 2 ] dx
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x14 ]
jmp r-xdata
mov di [ ecx + eax * 2 ]
cmp di [ ecx + eax * 2 - 0x2 ]
jae r-xdata
movzx edx [ ecx + eax * 2 ]
cmp dx [ edi ]
jae r-xdata
mov ax [ edi ]
pop edi
mov [ ecx + esi * 2 ] ax
pop esi
pop ebx
pop ebp
retn
mov [ ecx + esi * 2 ] dx
mov esi eax
dec eax
cdq
sub eax edx
sar eax 0x1
cmp ebx esi
jl r-xdata
mov dx [ edi ]
pop edi
mov [ ecx + esi * 2 ] dx
pop esi
pop ebx
pop ebp
retn
sub_1002f150
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1002f200
push ebp
mov ebp esp
push esi
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x9249249
jbe r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
push edi
lea ecx [ esi + 0xc ]
call sub_1001c6a0
lea ecx [ edi * 8 ]
sub ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop edi
mov [ esi + 0x8 ] edx
mov al 0x1
pop esi
pop ebp
retn 0x4
push r--data
call [ r--data ]
sub_1002f260
push ebp
mov ebp esp
push esi
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x3fffffff
jbe r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
push edi
lea ecx [ esi + 0xc ]
call sub_1000d230
mov [ esi ] eax
mov [ esi + 0x4 ] eax
lea eax [ eax + edi * 4 ]
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
push r--data
call [ r--data ]
sub_1002f2b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
push esi
mov esi ecx
mov [ esi ] 0x1
mov [ esi + 0x4 ] 0x0
mov ecx [ eax ]
mov eax [ ebp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
call sub_1002ef60
mov edx [ eax ]
mov [ esi ] edx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp ecx 0xffffffff
je r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov edx [ eax ]
mov edi [ eax + 0x4 ]
test edx edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
cmp edi 0x80000000
je r-xdata
cmp edx 0xfffffffe
jne r-xdata
cmp edi 0x7fffffff
je r-xdata
push ebx
mov ebx [ eax + 0x4 ]
push 0x14
push 0x1dd76000
push 0x0
push ecx
mov edi edx
call sub_1003c380
add eax edi
adc edx ebx
pop ebx
mov [ esi ] eax
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp edi 0x7fffffff
je r-xdata
sub_1002f370
push ebp
mov ebp esp
sub esp 0x10
push 0x4
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call [ r--data ]
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1003c200
sub_1002f3c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x10 ]
push esi
push ecx
push eax
call [ r--data ]
add esp 0xc
add eax esi
pop esi
pop ebp
retn 0xc
sub_1002f3f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
push edi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
push r--data
call [ r--data ]
int3
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
cmp eax edx
jb r-xdata
mov edi [ ebp + 0x14 ]
sub eax edx
cmp eax edi
jae r-xdata
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call [ r--data ]
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
push ebx
lea ebx [ ecx + edi ]
mov [ ebp + 0x14 ] ebx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call [ r--data ]
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_10001670
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov [ eax ] bl
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov edx 0x10
cmp [ eax + 0x14 ] edx
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x10 ]
sub edx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push edx
add ecx ebx
add eax ebx
push ecx
add eax edi
push eax
call [ r--data ]
mov eax [ ebp + 0xc ]
add esp 0xc
cmp esi eax
jne r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edx
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + ecx ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
add ecx [ ebp + 0x10 ]
push edi
push ecx
add eax ebx
push eax
call sub_1003c110
push edi
add ecx edx
mov eax esi
push ecx
add eax ebx
push eax
call [ r--data ]
jmp r-xdata
mov eax [ esi ]
push edi
add ecx edx
push ecx
add eax ebx
push eax
call [ r--data ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx [ ebp + 0x14 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_1002f570
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x14
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1002f600
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
sub ebx ecx
sar ebx 0x1
mov eax ebx
cdq
sub eax edx
push edi
mov edi eax
sar edi 0x1
mov [ ebp - 0x4 ] ebx
test edi edi
jle r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea eax [ edi + edi + 0x2 ]
jmp r-xdata
movzx edx [ ecx + eax - 0x4 ]
sub eax 0x2
dec edi
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov esi edi
cmp eax ebx
jge r-xdata
jne r-xdata
jmp r-xdata
lea eax [ esi - 0x1 ]
cdq
sub eax edx
sar eax 0x1
cmp edi esi
jge r-xdata
mov ax [ ecx + ebx * 2 - 0x2 ]
mov [ ecx + esi * 2 ] ax
lea esi [ ebx - 0x1 ]
mov dx [ ecx + eax * 2 ]
cmp dx [ ecx + eax * 2 - 0x2 ]
jae r-xdata
mov dx [ ebp + 0xc ]
mov [ ecx + esi * 2 ] dx
test edi edi
jg r-xdata
jmp r-xdata
mov dx [ ecx + eax * 2 ]
mov [ ecx + esi * 2 ] dx
mov esi eax
lea eax [ eax + eax + 0x2 ]
cmp eax ebx
jl r-xdata
dec eax
mov eax [ ebp + 0x8 ]
pop esi
movzx edx [ ecx + eax * 2 ]
cmp dx [ ebp + 0xc ]
jae r-xdata
mov ebx [ ebp - 0x4 ]
mov [ ecx + esi * 2 ] dx
mov esi eax
dec eax
cdq
sub eax edx
sar eax 0x1
cmp edi esi
jl r-xdata
sub_1002f6d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx eax
je r-xdata
pop ebx
pop ebp
retn
push edi
lea edi [ ebx + 0x2 ]
cmp edi eax
je r-xdata
pop edi
mov eax 0x2
sub eax ebx
push esi
mov [ ebp + 0x8 ] eax
jmp r-xdata
movzx esi [ edi ]
mov edx edi
cmp si [ ebx ]
jae r-xdata
movzx ecx [ edi - 0x2 ]
lea eax [ edi - 0x2 ]
cmp si cx
jae r-xdata
lea eax [ eax + edi - 0x2 ]
sar eax 0x1
add eax eax
push eax
mov ecx edi
sub ecx eax
add ecx 0x2
push ebx
push ecx
call [ r--data ]
add esp 0xc
mov [ ebx ] si
jmp r-xdata
mov [ edx ] si
lea esp [ esp ]
add edi 0x2
cmp edi [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
mov [ edx ] cx
movzx ecx [ eax - 0x2 ]
mov edx eax
sub eax 0x2
cmp si cx
jb r-xdata
sub_1002f760
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movzx eax [ ebp + 0x8 ]
movzx edi [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov esi ecx
call sub_100136f0
mov ecx eax
call sub_10013890
mov edx [ esi ]
push edi
push eax
mov eax [ edx + 0x54 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call eax
cmp [ ebp - 0x18 ] 0x10
mov esi eax
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
mov eax esi
sub_1002f7f0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movzx eax [ ebp + 0x8 ]
movzx edi [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov esi ecx
call sub_100136f0
mov ecx eax
call sub_10013890
mov edx [ esi ]
push edi
push eax
mov eax [ edx + 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call eax
cmp [ ebp - 0x18 ] 0x10
mov esi eax
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
mov eax esi
sub_1002f880
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0xf ] 0x0
push edi
mov edi [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ ebp + 0xc ] edx
cmp edx eax
je r-xdata
push esi
movzx esi [ edi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov cx [ edi ]
cmp cx [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0xc ] si
jae r-xdata
pop esi
cmp [ eax + 0xf ] 0x0
je r-xdata
sub_1002f8f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x10 ]
sub esp 0x18
push esi
mov esi [ eax + 0x4 ]
test ecx ecx
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp esi 0x80000000
je r-xdata
cmp ecx 0xfffffffe
jne r-xdata
cmp esi 0x7fffffff
je r-xdata
mov ecx [ edx ]
mov edx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ eax ]
mov [ ebp - 0x4 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
call sub_1002ee00
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp ecx 0xfffffffe
jne r-xdata
mov ecx [ edx ]
mov esi [ edx + 0x4 ]
test ecx ecx
jne r-xdata
cmp esi 0x7fffffff
je r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x7fffffff
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp esi 0x80000000
je r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp eax 0x80000000
jne r-xdata
mov esi [ ebp + 0x8 ]
xor eax eax
push eax
push esi
call sub_1002ec10
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp ecx 0xfffffffe
jne r-xdata
cmp esi 0x7fffffff
je r-xdata
mov eax 0x5
cmp eax 0x7fffffff
lea eax [ ecx + 0x3 ]
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax 0x1
push eax
push esi
call sub_1002ec10
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov esi [ edx ]
mov eax [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
sub ecx esi
sbb eax edx
push eax
push ecx
push 0x0
push 0x0
push 0x0
call sub_1002ec90
mov ecx [ ebp + 0x8 ]
add esp 0x14
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ecx
pop esi
mov esp ebp
pop ebp
retn
cmp esi 0x7fffffff
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push esi
call sub_1002ec10
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_1002fa20
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push esi
movzx esi [ ecx ]
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax ecx
sar eax 0x1
cmp eax 0x28
jle r-xdata
mov eax [ ebp + 0xc ]
movzx edx [ eax ]
cmp dx si
jae r-xdata
inc eax
cdq
and edx 0x7
add eax edx
sar eax 0x3
lea edi [ eax * 4 ]
add eax eax
movzx edx [ eax + ecx ]
mov [ ebp + 0x8 ] edi
cmp dx si
jae r-xdata
movzx edx [ edi ]
movzx esi [ eax ]
cmp dx si
jae r-xdata
mov [ eax ] si
mov [ ecx ] dx
movzx edx [ edi + ecx ]
movzx esi [ eax + ecx ]
cmp dx si
jae r-xdata
mov [ eax + ecx ] si
mov [ ecx ] dx
movzx edx [ eax ]
movzx esi [ ecx ]
cmp dx si
jae r-xdata
mov [ edi ] si
mov [ eax ] dx
movzx edx [ eax + ecx ]
movzx esi [ ecx ]
cmp dx si
jae r-xdata
mov [ edi + ecx ] si
mov [ eax + ecx ] dx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ eax ] si
mov [ ecx ] dx
mov edx [ ebp + 0xc ]
movzx edi [ edx ]
mov esi edx
sub esi eax
push ebx
movzx ebx [ esi ]
cmp di bx
jae r-xdata
mov [ eax + ecx ] si
mov [ ecx ] dx
movzx edi [ eax + edx ]
movzx ebx [ edx ]
cmp di bx
jae r-xdata
mov [ edx ] bx
mov [ esi ] di
movzx edi [ edx ]
movzx ebx [ esi ]
cmp di bx
jae r-xdata
mov [ eax + edx ] bx
mov [ edx ] di
mov edi [ ebp + 0x10 ]
mov esi edi
sub edi [ ebp + 0x8 ]
sub esi eax
movzx ebx [ esi ]
mov [ ebp + 0x8 ] edi
movzx edi [ edi ]
cmp bx di
jae r-xdata
mov [ edx ] bx
mov [ esi ] di
mov edi [ ebp + 0x10 ]
movzx edi [ edi ]
movzx ebx [ esi ]
cmp di bx
jae r-xdata
mov [ esi ] di
mov edi [ ebp + 0x8 ]
mov [ edi ] bx
mov ebx [ ebp + 0x8 ]
movzx edi [ esi ]
movzx ebx [ ebx ]
cmp di bx
jae r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x10 ]
mov [ edi ] bx
mov di [ ebp - 0x4 ]
mov [ esi ] di
movzx edi [ edx ]
movzx ebx [ eax + ecx ]
cmp di bx
jae r-xdata
mov [ esi ] bx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] di
movzx edi [ esi ]
movzx ebx [ edx ]
cmp di bx
jae r-xdata
mov [ edx ] bx
mov [ eax + ecx ] di
movzx esi [ edx ]
movzx edi [ eax + ecx ]
pop ebx
cmp si di
jae r-xdata
mov [ esi ] bx
mov [ edx ] di
mov [ edx ] di
pop edi
mov [ eax + ecx ] si
pop esi
mov esp ebp
pop ebp
retn
sub_1002fba0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ esi + 0x5c ]
call sub_1002f880
mov edx [ eax ]
cmp edx [ esi + 0x60 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ esi + 0x4c ]
call sub_1002f880
mov edx [ eax ]
cmp edx [ esi + 0x50 ]
je r-xdata
mov al 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
push 0xffffff30
lea ecx [ ebp - 0x30 ]
call sub_10013fd0
push r--data
lea eax [ ebp - 0x30 ]
push eax
call sub_1003c200
int3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor al al
pop esi
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
sub_1002fc30
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
mov edx ecx
sub edx eax
sar edx 0x1
push ebx
mov [ ebp + 0x8 ] edx
jne r-xdata
mov ebx [ esi ]
mov edx [ esi + 0x4 ]
sub edx ebx
sar edx 0x1
cmp [ ebp + 0x8 ] edx
ja r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
cmp edi ecx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
sar ecx 0x1
cmp [ ebp + 0x8 ] ecx
ja r-xdata
sub ecx eax
sar ecx 0x1
add ecx ecx
push ecx
push eax
push ebx
call [ r--data ]
mov eax [ edi + 0x4 ]
sub eax [ edi ]
mov ecx [ esi ]
add esp 0xc
sar eax 0x1
pop ebx
lea edx [ ecx + eax * 2 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebp
retn 0x4
pop ebx
mov eax ecx
sub eax ecx
sar eax 0x1
lea ebx [ eax + eax ]
push ebx
push ecx
push edi
call [ r--data ]
add esp 0xc
add ebx edi
mov [ esi + 0x4 ] ebx
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax ebx
test eax eax
je r-xdata
lea ebx [ eax + edx * 2 ]
mov edx ebx
sub edx eax
sar edx 0x1
add edx edx
push edx
push eax
mov eax [ esi ]
push eax
call [ r--data ]
mov eax [ edi + 0x4 ]
mov ecx [ esi + 0x4 ]
sub eax ebx
sar eax 0x1
lea edi [ eax + eax ]
push edi
push ebx
push ecx
call [ r--data ]
add esp 0x18
add eax edi
pop ebx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x4 ]
sub eax [ edi ]
mov ecx esi
sar eax 0x1
push eax
call sub_1000dfe0
test al al
je r-xdata
push eax
call sub_1003c10a
add esp 0x4
mov eax [ edi ]
mov edi [ edi + 0x4 ]
mov ecx [ esi ]
sub edi eax
sar edi 0x1
add edi edi
push edi
push eax
push ecx
call [ r--data ]
add esp 0xc
add eax edi
mov [ esi + 0x4 ] eax
sub_1002fd50
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
push edi
mov edi [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ ebp + 0xc ] edx
cmp edx eax
je r-xdata
push esi
movzx esi [ edi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov cx [ edi ]
cmp cx [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0xc ] si
jae r-xdata
pop esi
cmp [ eax + 0x19 ] 0x0
je r-xdata
sub_1002fdc0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax ecx
sub eax edi
sar eax 0x1
cdq
sub eax edx
sar eax 0x1
add ecx 0xfffffffe
push ecx
lea esi [ edi + eax * 2 ]
push esi
push edi
call sub_1002fa20
add esp 0xc
mov ecx esi
lea ebx [ esi + 0x2 ]
cmp edi esi
jae r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx esi
jae r-xdata
movzx eax [ ecx - 0x2 ]
movzx edx [ ecx ]
cmp dx ax
ja r-xdata
mov eax ebx
mov edx ecx
movzx edx [ ecx ]
jb r-xdata
cmp edx [ ebp + 0xc ]
jbe r-xdata
lea ecx [ ecx ]
jb r-xdata
add ecx 0xfffffffe
cmp edi ecx
jb r-xdata
jne r-xdata
mov edi edi
add eax 0x2
cmp eax [ ebp + 0x10 ]
jb r-xdata
jb r-xdata
add ebx 0x2
cmp ebx esi
jb r-xdata
sub edx 0x2
cmp eax [ ebp + 0x10 ]
jne r-xdata
cmp eax [ ebp + 0x10 ]
je r-xdata
add edx 0xfffffffe
cmp [ ebp + 0xc ] edx
jb r-xdata
jb r-xdata
movzx edi [ eax ]
movzx esi [ ecx ]
cmp di si
ja r-xdata
mov esi ebx
add ebx 0x2
mov [ ebp - 0x4 ] ebx
movzx ebx [ esi ]
mov [ esi ] di
mov [ eax ] bx
mov ebx [ ebp - 0x4 ]
movzx eax [ ebx ]
cmp dx ax
ja r-xdata
movzx esi [ eax ]
mov di [ edx ]
mov [ eax ] di
mov [ edx ] si
add eax 0x2
jmp r-xdata
sub ecx 0x2
cmp edx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx eax
je r-xdata
movzx esi [ edx - 0x2 ]
movzx edi [ ecx ]
cmp di si
ja r-xdata
cmp edx [ ebp + 0xc ]
movzx esi [ ecx - 0x2 ]
mov di [ edx - 0x2 ]
sub ecx 0x2
mov [ ecx ] di
mov [ edx - 0x2 ] si
cmp eax [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ecx ]
mov di [ ebx - 0x2 ]
sub ebx 0x2
mov [ ecx ] di
mov [ ebx ] si
jmp r-xdata
movzx esi [ edx ]
mov di [ ecx ]
mov [ edx ] di
mov [ ecx ] si
mov esi ecx
movzx edi [ esi ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edi
mov edi [ ebp - 0x4 ]
mov di [ edi ]
mov [ esi ] di
mov si [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
add ebx 0x2
add ecx 0x2
add eax 0x2
mov [ edi ] si
jmp r-xdata
movzx esi [ ecx ]
mov di [ ebx ]
mov [ ecx ] di
mov [ ebx ] si
sub_1002ff30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ecx eax
and ecx 0xfffffffe
cmp ecx 0x2
jle r-xdata
pop esi
pop ebp
retn
push edi
jmp r-xdata
movzx edx [ esi + eax - 0x2 ]
mov cx [ esi ]
lea edi [ eax - 0x2 ]
mov [ esi + eax - 0x2 ] cx
mov [ ebp + 0xc ] edx
lea edx [ ebp + 0xc ]
push edx
mov eax edi
sar eax 0x1
push eax
push 0x0
push esi
call sub_1002f0b0
mov eax edi
mov ecx edi
and ecx 0xfffffffe
add esp 0x10
cmp ecx 0x2
jg r-xdata
pop edi
sub_1002ffe0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x70 ]
cmp eax ecx
je r-xdata
push r--data
push 0xffffff36
lea ecx [ ebp - 0x30 ]
call sub_10014040
push r--data
lea eax [ ebp - 0x30 ]
push eax
call sub_1003c200
mov dx [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ebp
pop esi
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
push r--data
push 0xffffff37
lea ecx [ ebp - 0x30 ]
call sub_10014040
push r--data
lea edx [ ebp - 0x30 ]
push edx
call sub_1003c200
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ esi + 0x104 ]
call sub_1002fd50
mov eax [ ebp - 0x34 ]
cmp eax [ esi + 0x108 ]
jne r-xdata
add eax 0x2
cmp eax ecx
jne r-xdata
cmp dx [ eax ]
je r-xdata
sub_10030080
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edx ecx
sub edx eax
sar edx 0x2
push edi
mov edi [ esi ]
mov [ ebp + 0x8 ] edx
test edx edx
jne r-xdata
mov edx [ esi + 0x4 ]
sub edx edi
sar edx 0x2
cmp [ ebp + 0x8 ] edx
ja r-xdata
mov ecx [ esi + 0x4 ]
cmp edi ecx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
cmp [ ebp + 0x8 ] ecx
ja r-xdata
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call [ r--data ]
mov eax [ ebx + 0x4 ]
sub eax [ ebx ]
mov ecx [ esi ]
add esp 0xc
sar eax 0x2
lea edx [ ecx + eax * 4 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
pop edi
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call [ r--data ]
add esp 0xc
add ebx edi
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
test eax eax
je r-xdata
lea edi [ eax + edx * 4 ]
mov edx edi
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
mov eax [ esi ]
push eax
call [ r--data ]
mov eax [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
sub eax edi
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push edi
push ecx
call [ r--data ]
add esp 0x18
add eax ebx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebx + 0x4 ]
sub eax [ ebx ]
mov ecx esi
sar eax 0x2
push eax
call sub_1002f260
test al al
je r-xdata
push eax
call sub_1003c10a
add esp 0x4
mov eax [ esi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
push eax
push ecx
push edx
mov ecx esi
call sub_1002f3c0
mov [ esi + 0x4 ] eax
sub_100301b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea esi [ eax + 0x14 ]
xor ebx ebx
add esi 0x1c
lea ecx [ esi - 0x14 ]
add edi 0x1c
cmp ecx [ ebp + 0xc ]
jne r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
lea eax [ esi - 0x14 ]
cmp edi eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
cmp [ esi ] 0x10
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ esi - 0x14 ]
mov [ edi ] ecx
mov [ esi - 0x14 ] ebx
mov edx [ esi - 0x4 ]
inc edx
push edx
lea eax [ esi - 0x14 ]
push eax
push edi
call [ r--data ]
add esp 0xc
jmp r-xdata
mov edx [ esi - 0x4 ]
mov [ edi + 0x10 ] edx
mov eax [ esi ]
mov [ edi + 0x14 ] eax
mov [ esi - 0x4 ] ebx
mov [ esi ] ebx
sub_10030240
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x28
mov esi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_100019b0
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov eax esi
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
lea edx [ ebp - 0x30 ]
push edx
mov ecx esi
call [ r--data ]
cmp [ ebp - 0x18 ] 0x10
mov [ esi ] r--data
jb r-xdata
sub_100302f0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x27
mov esi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_100019b0
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov eax esi
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
lea edx [ ebp - 0x30 ]
push edx
mov ecx esi
call [ r--data ]
cmp [ ebp - 0x18 ] 0x10
mov [ esi ] r--data
jb r-xdata
sub_100303a0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x22
mov esi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_100019b0
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov eax esi
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
lea edx [ ebp - 0x30 ]
push edx
mov ecx esi
call [ r--data ]
cmp [ ebp - 0x18 ] 0x10
mov [ esi ] r--data
jb r-xdata
sub_10030450
push ebp
mov ebp esp
push esi
mov esi ecx
call [ r--data ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_10030480
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ax [ ebp + 0x8 ]
mov si [ ebp + 0xc ]
mov bx [ ebp + 0x10 ]
mov edi ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov [ ebp - 0x34 ] ax
mov [ ebp - 0x32 ] si
mov [ ebp - 0x30 ] bx
call sub_1002ea20
mov [ edi ] eax
movzx eax si
add eax 0xfffffffe
add esp 0x4
cmp eax 0x9
ja r-xdata
mov eax 0x1f
movzx edx [ eax + lookup_table_10030598 ]
jmp [ edx * 4 + jump_table_1003058c ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
push 0x22
xor ebx ebx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100019b0
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] ebx
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_1002ead0
xor ecx ecx
add esp 0x4
test al al
setne cl
lea eax [ ecx + 0x1c ]
jmp r-xdata
mov eax 0x1e
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x34 ] edx
jmp r-xdata
cmp ax bx
jae r-xdata
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x40 ]
call [ r--data ]
push r--data
lea edx [ ebp - 0x40 ]
push edx
mov [ ebp - 0x40 ] r--data
call sub_1003c200
sub_10030610
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
call eax
mov ecx [ ebp + 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10030080
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0xc
push eax
call sub_1003c10a
add esp 0x4
sub_10030680
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x5
xor ebx ebx
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x28 ] bl
call sub_100019b0
lea eax [ ebp - 0x28 ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_100136f0
mov ecx eax
call sub_10013dc0
sub_10030710
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
push eax
call sub_100136f0
mov ecx eax
call sub_10013800
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
mov edi [ ebp + 0xc ]
movzx ebx ax
mov eax [ edx + 0x14 ]
push edi
mov ecx esi
call eax
push eax
lea ecx [ ebp - 0x1c ]
call sub_1000f1b0
mov [ ebp - 0x4 ] 0x0
cmp di 0x3
jne r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax edx
cmp edx ecx
je r-xdata
mov edx [ esi ]
mov eax [ ebp + 0x14 ]
mov edx [ edx + 0x7c ]
push eax
mov ecx esi
call edx
push eax
lea ecx [ ebp - 0x1c ]
call sub_1002fc30
test di di
jne r-xdata
cmp bx [ eax ]
je r-xdata
cmp di 0x1
jne r-xdata
push 0x0
jmp r-xdata
test edx edx
je r-xdata
add eax 0x2
cmp eax ecx
jne r-xdata
mov eax edx
cmp edx ecx
je r-xdata
push 0x1
mov eax [ esi ]
mov edx [ eax + 0x7c ]
mov ecx esi
call edx
push eax
lea ecx [ ebp - 0x1c ]
call sub_1002fc30
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push edx
call sub_1003c10a
add esp 0x4
test edx edx
je r-xdata
mov esi 0x1
cmp si [ eax ]
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push edx
call sub_1003c10a
add esp 0x4
add eax 0x2
cmp eax ecx
jne r-xdata
sub_10030830
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_100136f0
mov ecx eax
call sub_10013800
mov edx [ esi ]
movzx edi ax
mov eax [ edx + 0x14 ]
push 0x3
mov ecx esi
call eax
push eax
lea ecx [ ebp - 0x1c ]
call sub_1000f1b0
mov edx [ esi ]
mov ebx [ ebp + 0xc ]
mov eax [ edx + 0x7c ]
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call eax
push eax
lea ecx [ ebp - 0x1c ]
call sub_1002fc30
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax ecx
cmp ecx edx
je r-xdata
mov eax ecx
cmp ecx edx
je r-xdata
lea ebx [ ebx ]
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
push ebx
push esi
call sub_100136f0
mov ecx eax
call sub_100137b0
mov edi eax
test edi edi
je r-xdata
push ecx
call sub_1003c10a
add esp 0x4
mov edi 0x1
cmp di [ eax ]
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ecx
call sub_1003c10a
add esp 0x4
cmp di [ eax ]
je r-xdata
call sub_100136f0
mov ecx eax
call sub_10013310
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push ecx
push 0x3
push edi
mov ecx esi
call sub_10030710
test al al
jne r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
call sub_100136f0
mov ecx eax
call sub_1000f620
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edx
push 0x3
push edi
mov ecx esi
call sub_10030710
test al al
jne r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_100309a0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movzx eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov esi ecx
call sub_100136f0
mov ecx eax
call sub_10013890
push eax
mov [ ebp - 0x4 ] 0x0
call sub_100136f0
mov ecx eax
call sub_10013800
mov edx [ esi ]
movzx edi ax
mov eax [ edx + 0x14 ]
push 0x2
mov ecx esi
call eax
push eax
lea ecx [ ebp - 0x68 ]
call sub_1000f1b0
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x64 ]
mov eax ecx
cmp ecx edx
je r-xdata
mov eax ecx
cmp ecx edx
je r-xdata
cmp di [ eax ]
je r-xdata
test ecx ecx
je r-xdata
lea ebx [ ebx ]
add eax 0x2
cmp eax edx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
push ecx
call sub_1003c10a
add esp 0x4
add eax 0x2
cmp eax edx
jne r-xdata
push r--data
push 0xffffff36
lea ecx [ ebp - 0x58 ]
call sub_10014040
push r--data
lea edx [ ebp - 0x58 ]
push edx
call sub_1003c200
int3
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
mov esi 0x1
cmp si [ eax ]
je r-xdata
sub_10030a90
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x234 ]
push esi
mov esi [ eax ]
mov [ ebp - 0x4 ] ecx
cmp esi eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
push edi
lea esp [ esp ]
push r--data
call [ r--data ]
int3
mov edx [ ebp - 0x4 ]
inc ecx
mov [ ebx + 0x4 ] ecx
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov esi [ esi ]
cmp esi [ edx + 0x234 ]
jne r-xdata
mov edi [ ebx ]
mov ecx [ edi + 0x4 ]
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
mov ecx ebx
call sub_10019460
mov ecx [ ebx + 0x4 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
pop edi
pop ebx
sub_10030b40
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x10 ]
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ecx + 0x10 ]
push edi
mov edi [ eax + 0x14 ]
sub edi edx
mov [ ebp - 0x4 ] 0x0
cmp esi edi
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_1000e7b0
mov edi [ ecx + 0x14 ]
sub edi esi
cmp edi edx
jb r-xdata
push 0xffffffff
push 0x0
push eax
push 0x0
call sub_1002f3f0
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_10003af0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10030bb0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_100018c0
add esi 0x1c
add edi 0x1c
cmp esi ebx
jne r-xdata
sub_10030be0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
sub eax ebx
sar eax 0x1
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x10 ]
lea ecx [ ecx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push edi
push ebx
call sub_1002f6d0
add esp 0xc
cmp eax 0x20
jle r-xdata
push edi
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_1002fdc0
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov esi eax
cdq
sub eax edx
mov edx [ ebp - 0x8 ]
sar eax 0x1
add esi eax
mov eax [ ebp - 0x4 ]
mov ecx edi
sub ecx eax
sub edx ebx
add esp 0xc
and ecx 0xfffffffe
and edx 0xfffffffe
push esi
cmp edx ecx
jge r-xdata
mov ecx edi
sub ecx ebx
and ecx 0xfffffffe
cmp ecx 0x2
jle r-xdata
push edi
push eax
call sub_10030be0
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
push ebx
call sub_10030be0
mov ebx [ ebp - 0x4 ]
jmp r-xdata
push edi
push ebx
call sub_1002ff30
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push edi
push ebx
call sub_1002f600
add esp 0x10
test esi esi
jle r-xdata
mov eax edi
sub eax ebx
sar eax 0x1
add esp 0xc
cmp eax 0x20
jg r-xdata
sub_10030cb0
push ebp
mov ebp esp
sub esp 0x8
push edi
mov edi [ ebp + 0xc ]
cmp edi [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ eax ] ecx
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
mov edx [ ecx + 0x8 ]
cmp eax edx
jne r-xdata
mov esi [ ecx ]
cmp esi edi
ja r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov esi [ ecx ]
sub eax esi
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
mov edx [ ecx + 0x8 ]
sub edi esi
sar edi 0x1
cmp eax edx
jne r-xdata
add [ ebx ] 0x2
add edi 0x2
mov [ ebp + 0xc ] edi
cmp edi [ ebp + 0x10 ]
jne r-xdata
mov dx [ edi ]
mov [ eax ] dx
push r--data
call [ r--data ]
int3
sub edx esi
inc eax
sar edx 0x1
cmp eax edx
jbe r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
sub eax esi
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + 0x4 ]
lea ebx [ ecx + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp edi eax
jae r-xdata
pop esi
pop ebx
mov esi edx
shr esi 0x1
mov edi 0x7fffffff
sub edi esi
cmp edi edx
jae r-xdata
mov edi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov cx [ edx + edi * 2 ]
mov [ eax ] cx
sub edx esi
inc eax
sar edx 0x1
cmp eax edx
jbe r-xdata
add edx esi
xor edx edx
jmp r-xdata
mov esi edx
shr esi 0x1
mov ebx 0x7fffffff
sub ebx esi
cmp ebx edx
jae r-xdata
push edx
call sub_1000e9c0
mov edi [ ebp + 0xc ]
mov edx eax
cmp edx eax
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_1000e9c0
mov ebx [ ebp - 0x4 ]
mov edx eax
cmp edx eax
jae r-xdata
sub_10030dc0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x1c
jmp r-xdata
push 0xffffffff
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] bl
call sub_100018c0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_10030e35
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1003c200
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
push esi
push ebx
call sub_10003c70
add esi 0x1c
add esp 0x8
cmp esi edi
jne r-xdata
sub_10030e70
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
movzx edx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
xor eax eax
mov [ ebp - 0x4c ] eax
mov ebx ecx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x54 ] edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x70 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x6c ]
mov [ ebp - 0x4c ] 0x1
cmp eax ecx
je r-xdata
push r--data
push 0xffffff36
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
cmp dx [ eax ]
je r-xdata
movzx eax [ eax ]
mov edi [ ebx ]
push eax
push edx
mov edx [ edi + 0x20 ]
mov ecx ebx
call edx
mov edi eax
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] edi
cmp ecx eax
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov eax [ edi ]
mov [ ebp - 0x40 ] eax
cmp eax [ edi + 0x4 ]
jne r-xdata
add eax 0x2
cmp eax ecx
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
ja r-xdata
mov edi ecx
mov ecx [ esi + 0x8 ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x54 ]
add [ esi + 0x4 ] 0x4
add eax 0x2
mov [ ebp - 0x40 ] eax
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ eax ] edi
push r--data
call [ r--data ]
int3
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esi ]
lea edi [ edx + edi * 4 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
ja r-xdata
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x50 ]
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov ecx [ edi ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
mov ecx esi
call sub_1001c820
mov ebx [ ebp - 0x48 ]
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx esi
call sub_1001c820
mov ebx [ ebp - 0x48 ]
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10031040
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x2c ]
push esi
push edi
call edx
mov esi [ ebp + 0x8 ]
mov edi eax
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_1000ee00
push edi
mov ecx esi
call sub_1000eea0
sub_10031080
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x1c
call sub_1003c1de
mov esi eax
xor ecx ecx
add esp 0x4
mov [ ebp - 0x14 ] esi
cmp esi ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x28 ]
call [ r--data ]
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_1003c200
int3
mov eax [ edi + 0x4 ]
mov [ esi ] eax
mov edx [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x8 ] eax
lea eax [ esi + 0xc ]
mov [ esi + 0x18 ] cx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ecx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dx [ ecx ]
mov [ eax ] dx
mov edi [ ecx + 0x4 ]
lea ebx [ eax + 0x8 ]
push edi
mov ecx ebx
mov [ eax + 0x4 ] edi
call sub_1002f150
push edi
push edi
push ebx
call sub_10027ef0
add esp 0xc
sub_10031170
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
add ecx 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push edx
push eax
call sub_10030dc0
add esp 0x14
pop ebp
retn 0xc
sub_100311a0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
mov esi ecx
mov cl 0x1
mov [ ebp - 0x4 ] cl
jne r-xdata
mov ebx esi
mov [ ebp + 0x10 ] ebx
test cl cl
je r-xdata
movzx ebx [ edx + 0xc ]
mov ax [ ebx + 0xc ]
cmp ax [ edx + 0xc ]
jae r-xdata
mov eax [ edi + 0x4 ]
lea ecx [ ebp + 0x10 ]
cmp esi [ eax ]
jne r-xdata
cmp bx [ eax + 0xc ]
setb cl
cmp [ eax + 0xc ] bx
setae cl
jmp r-xdata
mov esi [ edx + 0x14 ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
push edx
push esi
push ecx
lea edx [ ebp + 0x10 ]
push edx
mov ecx edi
call sub_10009d30
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_1002eb10
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edx
push esi
push 0x1
push ecx
mov ecx edi
call sub_10009d30
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov [ ebp - 0x4 ] cl
test cl cl
je r-xdata
push edx
call sub_1003c10a
mov eax [ ebp + 0x8 ]
add esp 0x4
pop edi
pop esi
mov [ eax ] ebx
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi eax
je r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_100312b0
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edi [ eax + 0x4 ]
xor edx edx
xor esi esi
add esi ecx
adc edi edx
push edx
add esi 0x2ac18000
push 0x989680
adc edi 0xfe624e21
push edi
push esi
call sub_1003c470
push 0x0
push 0x989680
mov ebx eax
push edx
push ebx
mov [ ebp - 0xc ] edx
call sub_1003c380
push 0x0
sub esi eax
push 0xa
sbb edi edx
push edi
push esi
call sub_1003c470
cmp [ ebp + 0x10 ] 0x0
mov edi eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] eax
jne r-xdata
lea edx [ ebp - 0x20 ]
push edx
call [ r--data ]
lea ecx [ ebp - 0x20 ]
push ecx
call [ r--data ]
jmp r-xdata
cmp eax 0x1f
jbe r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10030240
push r--data
lea eax [ ebp - 0x14 ]
push eax
call sub_1003c200
mov esi eax
movzx eax [ esi + 0xc ]
add esp 0x4
lea edx [ eax + 0x1 ]
push ecx
mov ecx esp
cmp edx 0x2
jge r-xdata
mov [ ecx ] ax
mov dx [ esi + 0x10 ]
inc dx
movzx eax dx
lea edx [ eax + 0x1 ]
push ecx
mov ecx esp
cmp edx 0x2
jge r-xdata
lea ecx [ ebp - 0x2c ]
call sub_10030240
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
call sub_1003c200
cmp eax 0xc
jbe r-xdata
lea ecx [ ebp - 0x50 ]
call sub_100303a0
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_1003c200
mov [ ecx ] ax
mov edx 0x76c
add dx [ esi + 0x14 ]
push ecx
movzx eax dx
lea edx [ eax + 0x1 ]
mov ecx esp
cmp edx 0x579
jge r-xdata
lea ecx [ ebp - 0x38 ]
call sub_100303a0
push r--data
lea ecx [ ebp - 0x38 ]
push ecx
call sub_1003c200
mov edx 0x2710
cmp ax dx
jbe r-xdata
lea ecx [ ebp - 0x44 ]
call sub_100302f0
push r--data
lea eax [ ebp - 0x44 ]
push eax
call sub_1003c200
mov [ ecx ] ax
lea ecx [ ebp - 0x8 ]
call sub_10030480
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push 0x0
push edi
push ecx
push edx
push eax
call sub_1002ec90
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0x18 ]
add esp 0x14
mov [ ebp - 0xc ] edx
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
push edx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push eax
mov ecx esi
call sub_1002f2b0
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1003c1ea
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x5c ]
call sub_100302f0
push r--data
lea eax [ ebp - 0x5c ]
push eax
call sub_1003c200
sub_10031470
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
cmp [ edi + 0x170 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov ecx [ edi + 0x134 ]
mov [ ebp - 0x4 ] eax
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
lea edx [ ebp - 0x78 ]
push edx
call eax
mov eax [ ebp - 0x78 ]
mov ecx [ ebp - 0x74 ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp eax ecx
je r-xdata
mov edx [ ebp - 0x28 ]
push edx
lea esi [ edi + 0x6c ]
push esi
push ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_10030cb0
mov ebx [ edi + 0x174 ]
add esp 0x14
mov [ ebp - 0x1c ] ebx
cmp ebx [ edi + 0x178 ]
je r-xdata
lea esp [ esp ]
mov eax [ edi + 0x218 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov edi edi
mov esi [ ebp - 0x48 ]
cmp esi [ ebp - 0x44 ]
je r-xdata
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x78 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp ebx eax
jae r-xdata
movzx ecx [ ebx ]
lea ecx [ ecx ]
mov eax [ ebp - 0x68 ]
xor esi esi
cmp eax esi
je r-xdata
mov edi [ ebp - 0x14 ]
nop
cmp esi [ ebp - 0x54 ]
je r-xdata
mov edx [ ebp - 0x10 ]
movzx ebx [ edx ]
push eax
call sub_1003c10a
add esp 0x4
mov ecx [ edi + 0x108 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ebx
ja r-xdata
mov edx [ ebp - 0x14 ]
add ebx 0x2
mov [ ebp - 0x1c ] ebx
cmp ebx [ edx + 0x178 ]
jne r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x60 ] esi
cmp eax esi
je r-xdata
push eax
call sub_1003c10a
add esp 0x4
xor eax eax
movzx edx [ esi ]
push edx
mov ecx eax
call sub_1002b940
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp [ ebp - 0x10 ] eax
jae r-xdata
mov eax [ ebp - 0x10 ]
mov cx [ eax ]
cmp cx [ esi ]
jae r-xdata
mov ecx eax
or edx 0xffffffff
sub edx eax
lea esi [ esi + eax * 2 + 0x2 ]
add ecx edx
jmp r-xdata
mov eax [ edi + 0x108 ]
mov [ ebp - 0x20 ] ecx
cmp ecx eax
je r-xdata
movzx edx [ esi + 0xc ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
mov ecx [ esi + 0x8 ]
mov edi ebx
sub edi edx
sar edi 0x1
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0x74 ]
cmp eax edx
je r-xdata
mov edi edx
cmp [ eax ] cx
je r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4 ] 0x0
cmp eax esi
je r-xdata
push eax
call sub_1003c10a
add esp 0x4
push 0x14
call sub_1003c1de
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
mov cx [ esi ]
push 0x0
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] cx
push edx
lea ecx [ edi + 0x104 ]
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x2c ] eax
call sub_10031080
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ edi + 0x104 ]
call sub_100311a0
add esi 0x2
cmp esi [ ebp - 0x44 ]
jne r-xdata
mov ecx [ edi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ edi ]
cmp edx [ ebp - 0x10 ]
ja r-xdata
mov eax [ ebp - 0x18 ]
add [ ebp - 0x10 ] 0x2
inc eax
mov [ ebp - 0x18 ] eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax ecx
cdq
sub eax edx
sar eax 0x1
cmp [ esi + eax * 2 ] bx
jae r-xdata
test ecx ecx
jg r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
mov dx [ esi + 0xc ]
cmp dx [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
add [ esi + 0x4 ] 0x2
mov cx [ ebx ]
mov [ eax ] cx
push r--data
call [ r--data ]
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea edi [ ecx + edi * 2 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
mov ecx [ ebp - 0x74 ]
add ebx 0x2
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x1c ] ebx
cmp ebx ecx
jne r-xdata
push eax
call sub_1003c10a
add esp 0x4
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov edx [ edi ]
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
mov esi [ ebp - 0x10 ]
mov ecx [ edi + 0x8 ]
sub esi edx
sar esi 0x1
cmp eax ecx
jne r-xdata
mov esi [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
sub ecx esi
sar ecx 0x1
test ecx ecx
jle r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ esi + 0x19 ] 0x0
jne r-xdata
push 0x14
call sub_1003c1de
add esp 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
jmp r-xdata
cmp [ eax + 0xc ] dx
jae r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
push ecx
mov ecx esi
call sub_1000e9c0
mov ebx [ ebp - 0x1c ]
mov ecx eax
mov edx ecx
shr edx 0x1
mov edi 0x7fffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov dx [ edi ]
mov [ eax ] dx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
movzx esi [ ebx ]
xor eax eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] eax
mov edi [ ebp - 0x14 ]
mov ecx [ edi + 0x134 ]
mov edx [ ecx ]
mov edx [ edx + 0x18 ]
push esi
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x3
call edx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x48 ]
push ecx
shl esi 0x4
add esi edi
lea edi [ esi + 0x7c ]
push edi
push edx
push eax
lea ecx [ ebp - 0x24 ]
push ecx
call sub_10030cb0
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x44 ]
push edx
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x58 ]
push eax
push ecx
push edx
lea eax [ ebp - 0x28 ]
push eax
call sub_10030cb0
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x58 ]
mov edx eax
sub edx ecx
sar edx 0x1
push edx
push eax
push ecx
call sub_10030be0
add esp 0x34
add esi 0x184
push esi
lea ecx [ ebp - 0x68 ]
call sub_1002fc30
mov eax [ ebp - 0x64 ]
sub eax [ ebp - 0x68 ]
mov [ ebp - 0x18 ] 0x0
sar eax 0x1
mov [ ebp - 0x20 ] eax
je r-xdata
mov eax [ ebp - 0x78 ]
mov edi [ ebp - 0x14 ]
add [ edi + 0x4 ] 0x2
mov edx [ ebp - 0x10 ]
mov cx [ edx ]
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
mov eax [ edi + 0x4 ]
mov edx [ edi ]
lea esi [ edx + esi * 2 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
cmp esi [ edi + 0x218 ]
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
xor eax eax
movzx ecx [ esi + 0xc ]
push ecx
mov ecx eax
call sub_1002b940
jmp r-xdata
mov eax [ eax ]
cmp eax [ edi + 0x108 ]
jne r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x7fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x7fffffff
sub esi edx
cmp esi ecx
jae r-xdata
mov cx [ esi ]
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov dx [ esi + 0xc ]
mov [ ebp - 0x2c ] eax
push 0x0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ edi + 0x104 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x30 ] dx
call sub_10031080
push eax
lea ecx [ ebp - 0x38 ]
push ecx
lea ecx [ edi + 0x104 ]
call sub_100311a0
push ecx
mov ecx esi
call sub_1000e9c0
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov [ eax ] cx
mov edx ecx
shr edx 0x1
mov ebx 0x7fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
cmp ecx eax
jae r-xdata
push ecx
mov ecx edi
call sub_1000e9c0
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
push ecx
mov ecx edi
call sub_1000e9c0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_100319e0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0x4 ]
sub ecx [ edi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp + 0x8 ] eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ebx
mov ebx [ esi ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp ecx eax
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ebx
mov [ ebp - 0x4 ] edx
mov eax 0x92492493
imul edx
add edx [ ebp - 0x4 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x4 ]
push ebx
push eax
mov eax [ edi ]
push eax
call sub_10030bb0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_1000a490
mov ecx [ edi + 0x4 ]
sub ecx [ edi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add esp 0x1c
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esi ]
pop ebx
lea ecx [ eax + edx * 4 ]
pop edi
mov [ esi + 0x4 ] ecx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push edx
push ecx
push eax
push eax
call sub_100301b0
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0xc ]
push ecx
push edx
push edi
call sub_1000a490
add esp 0x20
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov eax [ edi ]
lea edx [ ecx * 8 ]
sub edx ecx
lea ecx [ eax + edx * 4 ]
push ebx
push ecx
push eax
mov [ ebp + 0x8 ] ecx
call sub_10030bb0
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov edi [ edi + 0x4 ]
push ecx
lea edx [ esi + 0xc ]
push edx
push eax
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_10030dc0
add esp 0x20
pop ebx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0x4 ]
sub ecx [ edi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
push eax
mov ecx esi
call sub_1002f200
test al al
je r-xdata
mov eax [ esi + 0x4 ]
push eax
push ebx
mov ecx esi
call sub_1000b1f0
mov ecx [ esi ]
push ecx
call sub_1003c10a
add esp 0x4
pop ebx
mov edx [ esi ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
push edx
push eax
push ecx
mov ecx esi
call sub_10031170
mov [ esi + 0x4 ] eax
sub_10031b90
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x19 ] 0x0
mov edx ecx
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_1000a2f0
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x0
mov edx [ ecx ]
mov [ eax ] edx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edx
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_1000a060
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] ecx
jmp r-xdata
jmp r-xdata
mov ecx eax
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
sub_10031c50
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
call sub_100312b0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
add esp 0xc
cmp [ ebp - 0x4 ] eax
jl r-xdata
cmp [ esi + 0x4 ] 0x7fffffff
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
lea edx [ ebp - 0x10 ]
push esi
push edx
call sub_1002f8f0
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
add esp 0xc
push 0x0
push 0x3e8
push eax
push ecx
call sub_1003c3c0
inc eax
pop esi
mov esp ebp
pop ebp
retn
jg r-xdata
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] ecx
jb r-xdata
sub_10031cd0
push ebp
mov ebp esp
push edi
mov edi ecx
mov eax edi
[ eax ] 0x1f
jb r-xdata
push esi
mov esi [ edi ]
lea esp [ esp ]
mov al 0x1
pop edi
pop ebp
retn 0x4
mov eax esi
or eax 0x80000000
lea eax [ esi + 0x1 ]
jmp r-xdata
push ebx
test esi esi
jns r-xdata
mov esi eax
jmp r-xdata
mov ecx eax
mov edx edi
mov eax esi
[ edx ] ecx
cmp eax esi
je r-xdata
pop ebx
pop esi
mov al 0x1
pop edi
pop ebp
retn 0x4
mov ecx edi
call sub_1002e840
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_10031c50
add esp 0x4
push eax
push ebx
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
test esi esi
jns r-xdata
or ecx 0xffffffff
[ edi ] ecx
pop ebx
pop esi
xor al al
pop edi
pop ebp
retn 0x4
lea esp [ esp ]
lea eax [ esi - 0x1 ]
or eax 0x80000000
mov eax esi
jmp r-xdata
test esi esi
jns r-xdata
mov esi eax
jmp r-xdata
and eax 0xbfffffff
mov ecx eax
mov edx edi
mov eax esi
[ edx ] ecx
cmp eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10031c50
add esp 0x4
push eax
push ebx
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
test esi esi
jns r-xdata
and esi 0x3fffffff
or esi 0x40000000
lea esp [ esp ]
sub_10031dd0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10031b90
mov ecx [ esi + 0x4 ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10031e30
push ebp
mov ebp esp
push 0xffffffff
push sub_1004220a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x48 ] esi
mov [ esi ] r--data
lea edi [ esi + 0x40 ]
push edi
mov [ ebp - 0x4 ] 0x18
call sub_1003ba10
add esp 0x4
xor ebx ebx
test eax eax
jne r-xdata
push edi
call sub_1003ba10
add esp 0x4
cmp eax ebx
je r-xdata
push 0x1
call sub_1003c1de
add esp 0x4
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] 0x19
cmp eax ebx
je r-xdata
push edi
call sub_1003ba10
add esp 0x4
push ebx
push ebx
sub esp 0x8
mov eax esp
mov [ ebp - 0x40 ] esp
mov [ eax ] ebx
push edi
mov [ eax + 0x4 ] ebx
call sub_1003bf00
mov eax [ esi + 0x240 ]
add esp 0x14
cmp eax ebx
je r-xdata
mov edx [ edi ]
push 0x1
push ebx
sub esp 0x8
mov ecx esp
mov [ ecx ] edx
mov eax [ edi + 0x4 ]
mov [ ebp - 0x40 ] esp
mov [ ecx + 0x4 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x40 ] ebx
push ebx
call [ CoInitialize@IAT ]
cmp eax ebx
je r-xdata
mov [ esi + 0x134 ] ebx
xor eax eax
lea ecx [ esi + 0x248 ]
xchg [ ecx ] eax
cmp eax ebx
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
push edi
call sub_1003bf00
add esp 0x14
add eax 0x4
mov ecx 0x1
[ eax ] ecx
mov edx [ edi ]
push 0x1
push ecx
sub esp 0x8
mov ecx esp
mov [ ecx ] edx
mov eax [ edi + 0x4 ]
mov [ ebp - 0x40 ] esp
mov [ ecx + 0x4 ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] ecx
jmp r-xdata
cmp eax 0x1
je r-xdata
mov ecx [ esi + 0x234 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi + 0x234 ]
mov [ ecx + 0x4 ] ecx
mov [ esi + 0x238 ] ebx
cmp eax [ esi + 0x234 ]
je r-xdata
push eax
call [ CloseHandle@IAT ]
push edi
call sub_1003bf00
add esp 0x14
add eax 0x4
mov ecx 0x1
[ eax ] ecx
push edi
mov [ ebp - 0x4 ] 0x18
call sub_1003ba10
mov ecx [ ebp - 0x40 ]
add esp 0x4
cmp eax ecx
je r-xdata
push r--data
push 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
mov eax [ esi + 0x234 ]
push eax
call sub_1003c10a
lea edi [ esi + 0x224 ]
add esp 0x4
mov [ ebp - 0x40 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edx [ ebp - 0x44 ]
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0x1a
call sub_1000d620
mov edi [ edi + 0x4 ]
push edi
call sub_1003c10a
lea edi [ esi + 0x214 ]
add esp 0x4
mov [ ebp - 0x44 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x40 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1b
call sub_10031b90
mov edi [ edi + 0x4 ]
push edi
call sub_1003c10a
add esp 0x4
push r-xdata
push 0x4
push 0x10
lea ecx [ esi + 0x1d4 ]
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_1003c17a
mov eax [ esi + 0x1c4 ]
cmp eax ebx
je r-xdata
lea esp [ esp ]
push sub_10017100
push 0x4
push 0x10
lea eax [ esi + 0x184 ]
push eax
mov [ esi + 0x1c4 ] ebx
mov [ esi + 0x1c8 ] ebx
mov [ esi + 0x1cc ] ebx
mov [ ebp - 0x4 ] 0x11
call sub_1003c17a
mov eax [ esi + 0x174 ]
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x44 ]
mov ecx [ esi + 0x1c8 ]
push edx
lea edx [ esi + 0x1d0 ]
push edx
push ecx
push eax
call sub_1000a490
mov eax [ esi + 0x1c4 ]
push eax
call sub_1003c10a
add esp 0x14
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi + 0x234 ]
jne r-xdata
mov [ esi + 0x174 ] ebx
mov [ esi + 0x178 ] ebx
mov [ esi + 0x17c ] ebx
cmp [ esi + 0x168 ] 0x10
jb r-xdata
push eax
call sub_1003c10a
add esp 0x4
mov edi 0xf
mov [ esi + 0x168 ] edi
mov [ esi + 0x164 ] ebx
mov [ esi + 0x154 ] bl
cmp [ esi + 0x14c ] 0x10
jb r-xdata
mov eax [ esi + 0x154 ]
push eax
call sub_1003c10a
add esp 0x4
mov [ esi + 0x14c ] edi
lea edi [ esi + 0x124 ]
mov [ esi + 0x148 ] ebx
mov [ esi + 0x138 ] bl
mov [ ebp - 0x44 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x1c
call sub_10011f30
mov edi [ edi + 0x4 ]
push edi
call sub_1003c10a
lea edi [ esi + 0x114 ]
add esp 0x4
mov [ ebp - 0x44 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edx [ ebp - 0x40 ]
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0x1d
call sub_1000d620
mov edi [ edi + 0x4 ]
push edi
call sub_1003c10a
lea edi [ esi + 0x104 ]
add esp 0x4
mov [ ebp - 0x44 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x40 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1e
call sub_10031b90
mov edi [ edi + 0x4 ]
push edi
call sub_1003c10a
add esp 0x4
lea ecx [ esi + 0x100 ]
mov [ ebp - 0x4 ] 0xa
call sub_1001fe80
lea ecx [ esi + 0xfc ]
mov [ ebp - 0x4 ] 0x9
call sub_1001fe80
lea edi [ esi + 0xec ]
mov [ ebp - 0x44 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x1f
call sub_10012070
mov edi [ edi + 0x4 ]
push edi
call sub_1003c10a
mov eax [ esi + 0xdc ]
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ esi + 0x138 ]
push eax
call sub_1003c10a
add esp 0x4
push sub_10017100
push 0x2
push 0x10
lea eax [ esi + 0xbc ]
push eax
mov [ esi + 0xdc ] ebx
mov [ esi + 0xe0 ] ebx
mov [ esi + 0xe4 ] ebx
mov [ ebp - 0x4 ] 0x6
call sub_1003c17a
push sub_10017100
push 0x4
push 0x10
lea ecx [ esi + 0x7c ]
push ecx
mov [ ebp - 0x4 ] 0x5
call sub_1003c17a
mov eax [ esi + 0x6c ]
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x44 ]
mov ecx [ esi + 0xe0 ]
push edx
lea edx [ esi + 0xe8 ]
push edx
push ecx
push eax
call sub_1000a490
mov eax [ esi + 0xdc ]
push eax
call sub_1003c10a
add esp 0x14
lea edi [ esi + 0x5c ]
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x74 ] ebx
mov [ ebp - 0x44 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edx [ ebp - 0x40 ]
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0x20
call sub_1000ee00
mov edi [ edi + 0x4 ]
push edi
call sub_1003c10a
lea edi [ esi + 0x4c ]
add esp 0x4
mov [ ebp - 0x44 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x40 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x21
call sub_1000ee00
mov edi [ edi + 0x4 ]
push edi
call sub_1003c10a
add esp 0x4
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x4 ] 0x1
call sub_10023ac0
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] bl
call sub_10035170
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
push eax
call sub_1003c10a
add esp 0x4
sub_10032310
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
mov [ eax ] edx
mov edx [ ecx + 0x24 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x28 ]
mov ecx [ ecx + 0x2c ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
pop ebp
retn 0x4
sub_10032350
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
call sub_100136f0
mov ebx [ ebp + 0x8 ]
mov edi eax
push ebx
lea ecx [ edi + 0x20 ]
call sub_1000e8a0
mov [ ebp - 0x10 ] eax
cmp eax [ edi + 0x24 ]
je r-xdata
mov ecx [ edi + 0x24 ]
mov [ ebp - 0x18 ] ecx
lea eax [ ebp - 0x18 ]
mov ecx [ eax + 0x1c ]
add eax 0xc
cmp [ eax + 0x14 ] 0x10
jb r-xdata
movzx ebx [ eax + 0x28 ]
push ebx
mov ecx edi
call sub_10013200
movzx ebx ax
jmp r-xdata
push ecx
push eax
mov eax [ ebx + 0x10 ]
push eax
push 0x0
mov ecx ebx
call sub_100028b0
test eax eax
js r-xdata
mov eax [ eax ]
cmp bx 0x1
jne r-xdata
lea esp [ esp ]
movzx edx [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
add edx edx
lea esi [ eax + edx * 8 + 0x7c ]
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] ebx
call sub_1000f1b0
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x0
mov eax edi
cmp edi ecx
je r-xdata
lea eax [ ebp - 0x10 ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_1000f270
mov ebx [ ebp - 0x10 ]
cmp [ ebp + 0xc ] 0x3
je r-xdata
cmp eax ecx
jne r-xdata
add eax 0x2
cmp eax ecx
jne r-xdata
mov eax [ eax ]
cmp eax [ edi + 0x24 ]
jne r-xdata
mov esi [ ebp - 0x14 ]
movzx eax [ ebp + 0x10 ]
mov esi [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
add eax eax
push edx
lea ecx [ esi + eax * 8 + 0xbc ]
call sub_1000f270
mov ebx [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x3
jne r-xdata
cmp [ eax ] bx
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ esi + 0xdc ]
call sub_1000c320
sub_10032474
push 0x14
call sub_1003c1de
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
push ebx
mov ecx eax
call sub_1002b940
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push edi
call sub_1003c10a
add esp 0x4
push 0x0
lea edx [ ebp - 0x1c ]
push edx
lea ecx [ esi + 0x104 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] bx
mov [ ebp - 0x18 ] eax
call sub_10031080
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ esi + 0x104 ]
call sub_100311a0
test edi edi
je r-xdata
sub_100324f0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movzx eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x38 ] eax
call sub_100136f0
lea edi [ eax + 0x20 ]
push esi
mov ecx edi
mov [ ebp - 0x40 ] eax
call sub_1000e8a0
mov [ ebp - 0x34 ] eax
cmp eax [ edi + 0x4 ]
je r-xdata
mov edx [ edi + 0x4 ]
mov [ ebp - 0x44 ] edx
lea eax [ ebp - 0x44 ]
mov ecx [ eax + 0x1c ]
add eax 0xc
cmp [ eax + 0x14 ] 0x10
jb r-xdata
movzx ecx [ eax + 0x28 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x40 ]
push esi
call sub_10013200
movzx eax ax
mov [ ebp - 0x34 ] eax
jmp r-xdata
push ecx
mov ecx [ esi + 0x10 ]
push eax
push ecx
push 0x0
mov ecx esi
call sub_100028b0
test eax eax
js r-xdata
mov eax [ eax ]
movzx edi [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
add edi edi
push eax
lea ecx [ ebx + edi * 8 + 0x184 ]
call sub_1000f270
push esi
lea ecx [ ebx + 0x1c4 ]
call sub_1000c320
lea eax [ ebp - 0x34 ]
jmp r-xdata
mov eax [ eax ]
cmp eax [ edi + 0x4 ]
jne r-xdata
sub_10032680
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10031e30
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_100326b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1004240f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x18 ] esi
xor ebx ebx
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
call sub_10036db0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] bl
call sub_1002f370
mov edi eax
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ esi + 0x44 ]
push edi
mov [ esi + 0x40 ] edi
call sub_1002f570
push edi
lea eax [ esi + 0x44 ]
push edi
push eax
call sub_10027ef0
push 0x10
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x54 ] ebx
call sub_1003c1de
add esp 0x10
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] ebx
call [ r--data ]
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] r--data
call sub_1003c200
mov [ esi + 0x50 ] eax
mov [ eax ] eax
mov eax [ esi + 0x50 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x50 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x50 ]
mov [ ecx + 0xe ] 0x1
mov edx [ esi + 0x50 ]
mov [ edx + 0xf ] 0x1
push 0x10
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x64 ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] ebx
call [ r--data ]
push r--data
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x30 ] r--data
call sub_1003c200
mov [ esi + 0x60 ] eax
mov [ eax ] eax
mov eax [ esi + 0x60 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x60 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x60 ]
mov [ eax + 0xe ] 0x1
mov ecx [ esi + 0x60 ]
mov [ ecx + 0xf ] 0x1
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x74 ] ebx
push sub_10017100
push r-xdata
push 0x4
push 0x10
lea edx [ esi + 0x7c ]
push edx
mov [ ebp - 0x4 ] 0x5
call sub_1003c2d6
push sub_10017100
push r-xdata
push 0x2
push 0x10
lea eax [ esi + 0xbc ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_1003c2d6
mov [ esi + 0xdc ] ebx
mov [ esi + 0xe0 ] ebx
mov [ esi + 0xe4 ] ebx
push 0x30
mov [ ebp - 0x4 ] 0x8
mov [ esi + 0xf4 ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] ebx
call [ r--data ]
push r--data
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x30 ] r--data
call sub_1003c200
mov [ esi + 0xf0 ] eax
mov [ eax ] eax
mov eax [ esi + 0xf0 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0xf0 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0xf0 ]
mov [ ecx + 0x2c ] 0x1
mov edx [ esi + 0xf0 ]
mov [ edx + 0x2d ] 0x1
lea ecx [ esi + 0xfc ]
mov [ ebp - 0x4 ] 0x9
call sub_10020470
lea ecx [ esi + 0x100 ]
mov [ ebp - 0x4 ] 0xa
call sub_10020470
push 0x1c
mov [ ebp - 0x4 ] 0xb
mov [ esi + 0x10c ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] ebx
call [ r--data ]
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x30 ] r--data
call sub_1003c200
int3
mov [ esi + 0x108 ] eax
mov [ eax ] eax
mov eax [ esi + 0x108 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x108 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x108 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ esi + 0x108 ]
mov [ ecx + 0x19 ] 0x1
push 0x18
mov [ ebp - 0x4 ] 0xc
mov [ esi + 0x11c ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] ebx
call [ r--data ]
push r--data
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] r--data
call sub_1003c200
mov [ esi + 0x118 ] eax
mov [ eax ] eax
mov eax [ esi + 0x118 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x118 ]
mov [ eax + 0x8 ] eax
mov edx [ esi + 0x118 ]
mov [ edx + 0x14 ] 0x1
mov eax [ esi + 0x118 ]
mov [ eax + 0x15 ] 0x1
push 0x30
mov [ ebp - 0x4 ] 0xd
mov [ esi + 0x12c ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0x128 ] eax
mov [ eax ] eax
mov eax [ esi + 0x128 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x128 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x128 ]
mov [ ecx + 0x2c ] 0x1
mov edx [ esi + 0x128 ]
mov [ edx + 0x2d ] 0x1
lea edi [ esi + 0x138 ]
mov eax 0xf
mov [ edi + 0x14 ] eax
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
mov [ esi + 0x168 ] eax
mov [ esi + 0x164 ] ebx
mov [ esi + 0x154 ] bl
mov [ esi + 0x174 ] ebx
mov [ esi + 0x178 ] ebx
mov [ esi + 0x17c ] ebx
push sub_10017100
push r-xdata
push 0x4
push 0x10
lea eax [ esi + 0x184 ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_1003c2d6
mov [ esi + 0x1c4 ] ebx
mov [ esi + 0x1c8 ] ebx
mov [ esi + 0x1cc ] ebx
push r-xdata
push r-xdata
push 0x4
push 0x10
lea ecx [ esi + 0x1d4 ]
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_1003c2d6
push 0x1c
mov [ ebp - 0x4 ] 0x14
mov [ esi + 0x21c ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0x218 ] eax
mov [ eax ] eax
mov eax [ esi + 0x218 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x218 ]
mov [ eax + 0x8 ] eax
mov edx [ esi + 0x218 ]
mov [ edx + 0x18 ] 0x1
mov eax [ esi + 0x218 ]
mov [ eax + 0x19 ] 0x1
push 0x18
mov [ ebp - 0x4 ] 0x15
mov [ esi + 0x22c ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0x228 ] eax
mov [ eax ] eax
mov eax [ esi + 0x228 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x228 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x228 ]
mov [ ecx + 0x14 ] 0x1
mov edx [ esi + 0x228 ]
mov [ edx + 0x15 ] 0x1
push 0xc
mov [ ebp - 0x4 ] 0x16
mov [ esi + 0x238 ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] ebx
call [ r--data ]
push r--data
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x24 ] r--data
call sub_1003c200
mov [ esi + 0x234 ] eax
mov [ eax ] eax
mov eax [ esi + 0x234 ]
mov [ eax + 0x4 ] eax
mov [ esi + 0x240 ] ebx
mov [ esi + 0x244 ] ebx
mov [ esi + 0x248 ] ebx
mov eax [ r--data ]
mov [ esi + 0x30 ] eax
mov ecx [ r--data ]
mov [ esi + 0x34 ] ecx
mov edx [ r--data ]
mov ecx [ ebp + 0x8 ]
push 0xffffffff
mov [ esi + 0x38 ] edx
mov eax [ r--data ]
push ebx
push ecx
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x18
mov [ esi + 0x3c ] eax
call sub_1000ef20
mov ecx 0x10
mov [ edi + 0x10 ] ebx
cmp [ edi + 0x14 ] ecx
jb r-xdata
lea eax [ esi + 0x154 ]
mov [ edi ] bl
mov [ eax + 0x10 ] ebx
cmp [ eax + 0x14 ] ecx
jb r-xdata
mov edi [ edi ]
mov [ eax ] bl
mov [ esi + 0x134 ] ebx
mov [ esi + 0x170 ] bx
mov [ esi + 0x48 ] bl
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax ]
sub_10032be0
push ebp
mov ebp esp
push 0xffffffff
push sub_100424e5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x208
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ esi + 0x40 ]
push edi
call sub_1003ba10
add esp 0x4
test eax eax
jne r-xdata
lea edx [ ebp - 0x1fc ]
push edx
lea eax [ ebp - 0x1f4 ]
or ebx 0xffffffff
lea edi [ esi + 0x244 ]
push eax
lea ecx [ ebp - 0x208 ]
mov [ ebp - 0x214 ] edi
mov [ ebp - 0x1fc ] ebx
mov [ ebp - 0x1f8 ] 0x7fffffff
mov [ ebp - 0x1f4 ] ebx
call sub_1002f2b0
lea ecx [ ebp - 0x208 ]
push ecx
mov ecx edi
call sub_10031cd0
mov [ ebp - 0x210 ] 0x1
cmp [ esi + 0x240 ] 0x0
lea edi [ esi + 0x240 ]
mov [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x1
call sub_1003c1de
mov ebx eax
add esp 0x4
mov [ ebp - 0x1f8 ] ebx
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
mov edi [ edi ]
lea ecx [ ebp - 0x214 ]
mov [ ebp - 0x4 ] ebx
call sub_1002ebd0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
lea ebx [ esi + 0x20 ]
push r--data
push ebx
mov [ ebp - 0x1f4 ] ebx
call sub_100387b0
add esp 0x8
add esi 0x30
push edi
push esi
test eax eax
je r-xdata
xor ebx ebx
push 0x0
call [ CoInitialize@IAT ]
test eax eax
je r-xdata
push 0x1
push 0x0
push ebx
call [ CoCreateInstance@IAT ]
push ebx
call sub_10038890
jmp r-xdata
mov edx [ edi ]
push 0x1
push ebx
sub esp 0x8
mov ecx esp
mov [ ecx ] edx
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1f8 ] esp
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
push edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_1003ba10
add esp 0x4
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
or ebx 0xffffffff
push r--data
lea ecx [ ebp - 0x1a8 ]
call sub_10001b90
mov edi eax
lea edx [ ebp - 0x1c4 ]
push esi
push edx
mov [ ebp - 0x4 ] 0x2
call sub_1001c230
add esp 0x8
mov esi eax
push r--data
lea ecx [ ebp - 0x18c ]
mov [ ebp - 0x4 ] 0x3
call sub_10001b90
mov ebx eax
mov eax [ ebp - 0x1f4 ]
push eax
lea ecx [ ebp - 0x154 ]
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_1001c230
add esp 0x8
mov [ ebp - 0x1f8 ] eax
push r--data
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x4 ] 0x5
call sub_10001b90
mov [ ebp - 0x204 ] eax
lea edx [ ebp - 0x200 ]
push edx
lea eax [ ebp - 0xe4 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_1001c2e0
add esp 0x8
mov [ ebp - 0x20c ] eax
push r--data
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x7
call sub_10001b90
mov [ ebp - 0x1f4 ] eax
push r--data
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x8
call sub_10001b90
mov ecx [ ebp - 0x1f4 ]
push ecx
push eax
lea edx [ ebp - 0x74 ]
push edx
mov [ ebp - 0x4 ] 0x9
call sub_10030b40
mov ecx [ ebp - 0x20c ]
push ecx
push eax
lea edx [ ebp - 0x58 ]
push edx
mov [ ebp - 0x4 ] 0xa
call sub_10025a50
mov ecx [ ebp - 0x204 ]
push ecx
push eax
lea edx [ ebp - 0x138 ]
push edx
mov [ ebp - 0x4 ] 0xb
call sub_10030b40
mov ecx [ ebp - 0x1f8 ]
mov [ ebp - 0x4 ] 0xc
push ecx
push eax
lea edx [ ebp - 0x170 ]
push edx
call sub_10025a50
push ebx
push eax
lea eax [ ebp - 0x100 ]
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10030b40
push esi
push eax
lea ecx [ ebp - 0xc8 ]
push ecx
mov [ ebp - 0x4 ] 0xe
call sub_10025a50
add esp 0x48
push edi
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0xf
call sub_10030b40
add esp 0xc
lea ecx [ ebp - 0xc8 ]
call sub_100017e0
lea ecx [ ebp - 0x100 ]
call sub_100017e0
lea ecx [ ebp - 0x170 ]
call sub_100017e0
lea ecx [ ebp - 0x138 ]
call sub_100017e0
lea ecx [ ebp - 0x58 ]
call sub_100017e0
lea ecx [ ebp - 0x74 ]
call sub_100017e0
lea ecx [ ebp - 0x90 ]
call sub_100017e0
lea ecx [ ebp - 0xac ]
call sub_100017e0
lea ecx [ ebp - 0xe4 ]
call sub_100017e0
lea ecx [ ebp - 0x11c ]
call sub_100017e0
lea ecx [ ebp - 0x154 ]
call sub_100017e0
lea ecx [ ebp - 0x18c ]
call sub_100017e0
lea ecx [ ebp - 0x1c4 ]
call sub_100017e0
lea ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x4 ] 0x1e
call sub_100017e0
lea eax [ ebp - 0x2c ]
push eax
push 0xfffffe0b
lea ecx [ ebp - 0x1f0 ]
call sub_10013f50
push r--data
lea ecx [ ebp - 0x1f0 ]
push ecx
call sub_1003c200
mov [ ebp - 0x200 ] eax
test eax eax
jns r-xdata
push edi
call sub_1003bf00
add esp 0x14
add eax 0x4
mov ecx 0x1
[ eax ] ecx
push r--data
push 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
sub_10032fb0
push ebp
mov ebp esp
push 0xffffffff
push sub_10042518
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x48 ] 0x0
jne r-xdata
lea eax [ esi + 0x4c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x6c ]
cmp eax [ esi + 0x70 ]
je r-xdata
xor ecx ecx
cmp cx [ eax ]
je r-xdata
mov ecx esi
call sub_10032be0
mov ebx eax
mov [ ebp - 0x48 ] ebx
test ebx ebx
je r-xdata
add eax 0x2
cmp eax [ esi + 0x70 ]
jne r-xdata
mov ecx [ esi + 0x128 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] eax
cmp eax ecx
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push ebx
call eax
jmp r-xdata
mov [ esi + 0x48 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
test ebx ebx
je r-xdata
lea edi [ eax + 0xc ]
lea eax [ edi + 0x4 ]
mov [ ebp - 0x44 ] 0x0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
call ecx
mov ecx [ ebx ]
lea edx [ ebp - 0x44 ]
push edx
push eax
mov eax [ ecx + 0xc ]
push ebx
call eax
test eax eax
js r-xdata
mov eax [ eax ]
push r--data
push 0xfffffe0b
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea edx [ ebp - 0x3c ]
push edx
call sub_1003c200
int3
cmp [ ebp - 0x44 ] 0x0
je r-xdata
lea ecx [ ebp - 0x40 ]
call sub_10023210
mov eax [ ebp - 0x40 ]
cmp eax [ esi + 0x128 ]
jne r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x50 ]
push ecx
lea ecx [ esi + 0x5c ]
call sub_1000f2e0
sub_100330e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10042548
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x48 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x3c ]
push ecx
mov ecx edi
call edx
test al al
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x2c ]
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x6c ]
mov ecx [ edi + 0x70 ]
cmp eax ecx
je r-xdata
lea ecx [ ecx ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x40 ]
push ecx
lea ecx [ edi + 0x124 ]
call sub_1000ecc0
mov ebx [ ebp - 0x40 ]
cmp ebx [ edi + 0x128 ]
je r-xdata
add eax 0x2
cmp eax ecx
jne r-xdata
mov ecx edi
call sub_10032be0
mov esi eax
mov [ ebp - 0x40 ] esi
test esi esi
je r-xdata
xor edx edx
cmp dx [ eax ]
je r-xdata
jmp r-xdata
cmp [ ebx + 0x24 ] 0x10
lea eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov ecx [ esi ]
mov edx [ ecx + 0x10 ]
push 0x1
push eax
push esi
call edx
test eax eax
jns r-xdata
mov eax [ eax ]
push 0x0
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ edi + 0x5c ]
call sub_1000eb50
push eax
lea edx [ ebp - 0x48 ]
push edx
lea ecx [ edi + 0x5c ]
call sub_100295c0
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call ecx
push r--data
push 0xfffffe0b
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
sub_10033220
push ebp
mov ebp esp
push 0xffffffff
push sub_10042578
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x48 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x3c ]
push ecx
mov ecx esi
call edx
test al al
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x2c ]
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x70 ]
cmp eax ecx
je r-xdata
lea ecx [ ecx ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x40 ]
push ecx
lea ecx [ esi + 0x124 ]
call sub_1000ecc0
mov edi [ ebp - 0x40 ]
cmp edi [ esi + 0x128 ]
je r-xdata
add eax 0x2
cmp eax ecx
jne r-xdata
mov ecx esi
call sub_10032be0
mov ebx eax
mov [ ebp - 0x44 ] ebx
test ebx ebx
je r-xdata
xor edx edx
cmp dx [ eax ]
je r-xdata
jmp r-xdata
cmp [ edi + 0x24 ] 0x10
lea eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push ebx
call eax
mov ecx [ ebx ]
mov edx [ ecx + 0x10 ]
push 0x0
push eax
push ebx
call edx
test eax eax
jns r-xdata
mov eax [ eax ]
mov edi [ esi + 0x60 ]
mov eax [ edi ]
mov [ ebp - 0x40 ] eax
cmp eax edi
je r-xdata
push r--data
push 0xfffffe0b
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
mov eax [ ebx ]
mov ecx [ eax + 0x8 ]
push ebx
mov [ ebp - 0x4 ] 0xffffffff
call ecx
lea ebx [ ebx ]
push eax
lea edx [ ebp - 0x40 ]
push edx
lea ecx [ esi + 0x5c ]
call sub_1000e130
lea ecx [ ebp - 0x40 ]
call sub_1000dcc0
mov eax [ ebp - 0x40 ]
cmp eax edi
jne r-xdata
mov cx [ ebp + 0x8 ]
cmp [ eax + 0xc ] cx
je r-xdata
jmp r-xdata
sub_10033380
push ebp
mov ebp esp
push 0xffffffff
push sub_100425c3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
movzx eax [ ebp + 0xc ]
push 0x0
push edi
mov esi ecx
push 0x0
push esi
mov [ ebp - 0x40 ] eax
call sub_10030710
test al al
je r-xdata
push r--data
push 0xffffff37
jmp r-xdata
push 0x0
push edi
mov ecx esi
call sub_10030830
push edi
push eax
lea ecx [ ebp - 0x48 ]
push ecx
call sub_1000cdb0
mov ecx eax
call sub_1000bfd0
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10032be0
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ ebp - 0x50 ]
push ecx
push r--data
push eax
call edx
test eax eax
jns r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
mov ebx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] ebx
test ebx ebx
je r-xdata
push r--data
push 0xfffffe0b
push 0x28
mov [ ebp - 0x4 ] 0x1
call sub_1003c1de
mov ecx eax
add esp 0x4
mov [ ebp - 0x4c ] ecx
test ecx ecx
je r-xdata
push ebx
call sub_1002bc00
add esp 0x4
xor edi edi
mov edx [ ebp - 0x40 ]
push edx
mov edx [ ebp - 0x48 ]
sub esp 0x8
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x40 ] esp
test eax eax
je r-xdata
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
push ebx
call sub_1002a4c0
add esp 0x4
push edi
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x58 ] esp
mov [ eax ] ebx
test ebx ebx
je r-xdata
add eax 0x4
mov edx 0x1
[ eax ] edx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
push esi
mov [ ebp - 0x4 ] 0x2
call sub_100347c0
mov edi eax
jmp r-xdata
push ebx
call sub_1002bc00
mov ecx [ ebp - 0x4c ]
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_10033530
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movzx eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push ebx
mov esi ecx
mov [ ebp - 0x48 ] eax
call sub_100136f0
mov ecx eax
call sub_10013800
mov edx [ esi ]
movzx edi ax
mov eax [ edx + 0x14 ]
push 0x1
mov ecx esi
call eax
push eax
lea ecx [ ebp - 0x58 ]
call sub_1000f1b0
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x0
mov eax ecx
cmp ecx edx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x7c ]
push 0x1
mov ecx esi
call eax
push eax
lea ecx [ ebp - 0x58 ]
call sub_1002fc30
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x54 ]
mov eax ecx
cmp ecx edx
je r-xdata
mov edi edi
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
je r-xdata
lea esp [ esp ]
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
je r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
push r--data
push 0xffffff37
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
push ecx
call sub_1003c10a
add esp 0x4
add eax 0x2
cmp eax edx
jne r-xdata
push 0x1
push ebx
mov ecx esi
call sub_10030830
push ebx
push eax
lea ecx [ ebp - 0x50 ]
push ecx
call sub_1000cdb0
mov ecx eax
call sub_1000bfd0
cmp [ esi + 0x170 ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
push ecx
call sub_1003c10a
add esp 0x4
cmp di [ eax ]
je r-xdata
mov edi 0x1
cmp di [ eax ]
je r-xdata
mov ecx esi
push ebx
lea edx [ ebp - 0x40 ]
push edx
lea ecx [ esi + 0x1e4 ]
call sub_1000f0d0
mov eax [ eax ]
cmp eax [ esi + 0x1e8 ]
jne r-xdata
test eax eax
jns r-xdata
mov ecx [ esi + 0x134 ]
test ecx ecx
jne r-xdata
mov edi [ ebp - 0x44 ]
mov [ ebp - 0x5c ] edi
test edi edi
je r-xdata
push r--data
push 0xfffffe0b
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1003c200
call sub_10032be0
mov ecx [ eax ]
lea edx [ ebp - 0x44 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
jmp r-xdata
mov eax [ ebp - 0x40 ]
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1003c1de
mov ecx eax
add esp 0x4
mov [ ebp - 0x40 ] ecx
test ecx ecx
je r-xdata
push edi
call sub_1002bc00
add esp 0x4
xor ebx ebx
mov edx [ ebp - 0x48 ]
push edx
mov edx [ ebp - 0x50 ]
sub esp 0x8
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x4c ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x48 ] esp
test eax eax
je r-xdata
mov esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
push edi
call sub_1002a4c0
add esp 0x4
push ebx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x60 ] esp
mov [ eax ] edi
test edi edi
je r-xdata
add eax 0x4
mov edx 0x1
[ eax ] edx
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
push esi
mov [ ebp - 0x4 ] 0x3
call sub_1002c060
mov ebx eax
jmp r-xdata
push edi
call sub_1002bc00
mov ecx [ ebp - 0x40 ]
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_100337b0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x40 ] 0x0
mov edx [ edi ]
mov esi ecx
mov [ ebp - 0x34 ] eax
mov eax [ edx + 0xc ]
mov ecx edi
mov [ ebp - 0x30 ] ebx
call eax
movzx ecx ax
push ecx
lea edx [ ebp - 0x2c ]
push edx
call sub_100136f0
mov ecx eax
call sub_10013890
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100136f0
mov ecx eax
call sub_10013800
mov edx [ esi ]
movzx ecx ax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x3c ] ecx
push 0x3
mov ecx esi
call eax
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000f1b0
mov edx [ esi ]
mov eax [ edx + 0x7c ]
push 0x0
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call eax
push eax
lea ecx [ ebp - 0x50 ]
call sub_1002fc30
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov ecx eax
cmp eax edx
je r-xdata
mov ecx eax
cmp eax edx
je r-xdata
mov bx [ ebp - 0x3c ]
cmp bx [ ecx ]
je r-xdata
test eax eax
je r-xdata
mov ebx 0x1
cmp bx [ ecx ]
je r-xdata
mov [ ebp - 0x4 ] 0x1
add ecx 0x2
cmp ecx edx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
jb r-xdata
push eax
call sub_1003c10a
add esp 0x4
mov [ ebp - 0x4 ] bl
jmp r-xdata
add ecx 0x2
cmp ecx edx
jne r-xdata
push 0x8c
call sub_1003c1de
mov ebx eax
add esp 0x4
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4 ] 0x3
test ebx ebx
je r-xdata
push eax
call sub_1003c10a
add esp 0x4
mov ebx [ ebp - 0x30 ]
mov eax ebx
mov edx [ ebp - 0x2c ]
push edx
call sub_1003c10a
add esp 0x4
test eax eax
je r-xdata
mov ebx [ ebp - 0x30 ]
xor esi esi
mov edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
push ecx
push edx
push edi
mov ecx esi
call sub_10032be0
push eax
push esi
mov ecx ebx
call sub_1002b500
mov esi eax
jmp r-xdata
mov [ ebp - 0x40 ] 0x1
test esi esi
je r-xdata
lea edx [ esi + 0x4 ]
mov eax 0x1
[ edx ] eax
push esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x38 ] esi
call sub_10009070
push esi
lea eax [ ebp - 0x34 ]
push esi
push eax
call sub_10027ef0
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x34 ]
mov ecx [ ebp - 0x38 ]
add esp 0xc
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax edi
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
sub_100339c0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ ebp + 0x14 ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x4
mov [ esi + 0x14 ] eax
call sub_10036db0
lea ecx [ esi + 0x34 ]
mov [ ebp - 0x4 ] 0x5
call sub_10036db0
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_10033a90
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x50 ] 0x0
mov [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ esi + 0x34 ]
mov [ ebp - 0x4 ] 0x3
call sub_10035170
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x2
call sub_10035170
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
lea eax [ esi + 0x18 ]
push eax
call sub_1001c700
lea ecx [ esi + 0x34 ]
push ecx
call sub_1001c700
add esp 0x8
mov eax [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_10033b40
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ecx + 0xc ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ebp - 0x40 ] esi
test esi esi
je r-xdata
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_1001fea0
mov edi [ eax + 0x10 ]
mov ecx ebx
call sub_1001fea0
mov eax [ eax + 0x10 ]
mov edx [ esi ]
push edi
push eax
mov eax [ edx + 0x1c ]
push esi
call eax
test eax eax
jns r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1003c200
sub_10033c00
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10033a90
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_10033c30
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp + 0xc ]
sub eax 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
dec eax
je r-xdata
mov ecx edi
mov [ ebp - 0x40 ] esi
call sub_1001fea0
mov eax [ eax + 0x10 ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x10 ]
push esi
call eax
test eax eax
jns r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov esi [ ecx + 0x10 ]
test esi esi
je r-xdata
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1003c200
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
jmp r-xdata
sub_10033d20
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp + 0xc ]
sub eax 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
dec eax
je r-xdata
mov ecx edi
mov [ ebp - 0x40 ] esi
call sub_1001fea0
mov eax [ eax + 0x10 ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x18 ]
push esi
call eax
test eax eax
jns r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov esi [ ecx + 0x10 ]
test esi esi
je r-xdata
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1003c200
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
jmp r-xdata
sub_10033e10
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp + 0x8 ]
sub eax 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
dec eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x20 ]
push esi
mov [ ebp - 0x40 ] esi
call eax
test eax eax
jns r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov esi [ ecx + 0x10 ]
test esi esi
je r-xdata
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea eax [ ebp - 0x3c ]
push eax
call sub_1003c200
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1003c200
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
jmp r-xdata
sub_10033f00
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x4 ]
sub ebx [ edi ]
mov [ ebp - 0x44 ] ecx
sar ebx 0x2
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
mov eax ebx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003b8b2
mov esi [ edi ]
add esp 0x4
mov [ ebp - 0x48 ] eax
cmp esi [ edi + 0x4 ]
je r-xdata
xor edi edi
mov [ ebp - 0x40 ] edi
mov eax [ ebp + 0xc ]
sub eax edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ ebp - 0x40 ] eax
lea esp [ esp ]
mov eax [ ebp - 0x44 ]
mov esi [ eax + 0xc ]
dec eax
je r-xdata
mov ecx esi
call sub_1001fea0
mov ecx [ eax + 0x10 ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
add eax 0x4
add esi 0x4
mov [ ebp - 0x40 ] eax
cmp esi [ edi + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
push ebx
push esi
mov [ ebp - 0x40 ] esi
call edx
mov ebx eax
mov eax [ ebp - 0x48 ]
push eax
call sub_1003c116
add esp 0x4
cmp ebx edi
jge r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov eax [ ebp - 0x44 ]
mov esi [ eax + 0x10 ]
jmp r-xdata
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea edx [ ebp - 0x3c ]
push edx
call sub_1003c200
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call eax
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1003c200
cmp esi edi
je r-xdata
sub_10034050
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov esi ecx
push eax
lea ecx [ ebp - 0x58 ]
push ecx
call sub_1001de90
add esp 0x8
push 0xffffffff
push 0x0
lea edx [ ebp - 0x58 ]
lea ecx [ esi + 0x18 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_1000ef20
cmp [ ebp - 0x44 ] 0x8
mov edi [ esi + 0xc ]
mov eax [ ebp - 0x58 ]
mov bl 0x1
mov [ esi + 0x50 ] bl
jae r-xdata
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1001c470
add esp 0x8
mov [ ebp - 0x4 ] bl
mov ebx 0x10
cmp [ eax + 0x14 ] ebx
jb r-xdata
lea eax [ ebp - 0x58 ]
mov ecx [ esi + 0x14 ]
cmp [ ecx + 0x14 ] ebx
jb r-xdata
mov eax [ eax ]
mov edx [ edi ]
push eax
mov eax [ edx + 0xc ]
push ecx
push edi
call eax
mov edi eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov ecx [ ecx ]
test edi edi
jns r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
mov eax [ rw-data ]
push eax
lea ecx [ ebp - 0x74 ]
push ecx
call sub_1001de90
add esp 0x8
push 0xffffffff
push 0x0
lea edx [ ebp - 0x74 ]
lea ecx [ esi + 0x34 ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_1000ef20
cmp [ ebp - 0x60 ] 0x8
mov edi [ esi + 0x10 ]
mov eax [ ebp - 0x74 ]
jae r-xdata
push r--data
push 0xfffffe0a
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea edx [ ebp - 0x3c ]
push edx
call sub_1003c200
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1001c470
add esp 0x8
mov [ ebp - 0x4 ] 0x3
cmp [ eax + 0x14 ] ebx
jb r-xdata
lea eax [ ebp - 0x74 ]
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov edx [ edi ]
push ecx
push eax
mov eax [ edx + 0xc ]
push edi
call eax
mov esi eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ eax ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x14 ] ebx
jb r-xdata
test esi esi
js r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x0
call sub_10035170
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10035170
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
sub_100341f0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edx edx
xor edi edi
xor ecx ecx
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax ]
mov [ ebp - 0x4 ] edx
cmp ebx eax
jne r-xdata
lea esi [ ebx + 0xc ]
cmp esi ecx
jae r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ esi ]
mov eax [ eax + 0x14 ]
push ecx
lea edx [ ebp - 0x28 ]
push edx
mov ecx esi
call eax
mov esi [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
cmp ecx edx
jne r-xdata
cmp edi esi
ja r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi [ ebp - 0x24 ]
cmp esi edi
je r-xdata
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x2
test ecx ecx
je r-xdata
mov eax ecx
sub eax edi
sar eax 0x2
cmp eax 0x3ffffffe
ja r-xdata
sub esi edi
sar esi 0x2
cmp ecx edx
jne r-xdata
push esi
call sub_1003c10a
add esp 0x4
mov ecx esi
call sub_1001fe80
add esi 0x4
cmp esi edi
jne r-xdata
add ecx 0x4
mov [ ebp - 0x24 ] ecx
cmp [ ebx + 0x11 ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
push esi
push r--data
call [ r--data ]
int3
sub edx edi
inc eax
sar edx 0x2
cmp eax edx
jbe r-xdata
lea eax [ edi + esi * 4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov eax ecx
sub eax edi
sar eax 0x2
cmp eax 0x3ffffffe
ja r-xdata
mov esi [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x11 ] 0x0
jne r-xdata
mov ecx edx
shr ecx 0x1
mov edi 0x3fffffff
sub edi ecx
cmp edi edx
jae r-xdata
push eax
jmp r-xdata
sub edx edi
inc eax
sar edx 0x2
cmp eax edx
jbe r-xdata
mov edx [ ebp - 0x20 ]
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
mov eax [ edx ]
cmp [ eax + 0x11 ] 0x0
jne r-xdata
add edx ecx
xor edx edx
jmp r-xdata
call sub_10020650
mov ecx [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx edx
shr ecx 0x1
mov edi 0x3fffffff
sub edi ecx
cmp edi edx
jae r-xdata
mov ebx eax
lea ecx [ ecx ]
mov ebx edx
jmp r-xdata
mov edx eax
mov eax [ edx ]
cmp [ eax + 0x11 ] 0x0
je r-xdata
push edx
lea ecx [ ebp - 0x28 ]
call sub_100041b0
mov edx eax
cmp edx eax
jae r-xdata
add edx ecx
xor edx edx
jmp r-xdata
mov ebx eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x11 ] 0x0
je r-xdata
push edx
lea ecx [ ebp - 0x28 ]
call sub_100041b0
mov edx eax
cmp edx eax
jae r-xdata
cmp ebx [ eax + 0x8 ]
jne r-xdata
sub_10034420
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
push esi
mov esi [ ecx + 0x4 ]
mov [ ecx + 0xc ] ax
cmp esi [ edx + 0x4 ]
pop esi
jne r-xdata
pop ebp
retn 0x4
mov ecx [ ecx + 0x10 ]
mov edx [ ecx ]
movzx eax ax
push eax
push ecx
mov ecx [ edx + 0x20 ]
call ecx
sub_10034470
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
push esi
mov esi ecx
jne r-xdata
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x14 ]
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x34 ]
mov ecx esi
call eax
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
sub_100344a0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
push ebx
mov [ ebp - 0x8 ] edi
call sub_10018050
add esp 0x4
test al al
je r-xdata
movzx eax [ esi + 0xc ]
cmp eax 0x2
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
test edi edi
je r-xdata
cmp eax 0x1
jne r-xdata
mov edi [ esi + 0x10 ]
mov ecx ebx
call sub_1001fea0
mov ecx [ ebp + 0x8 ]
mov ebx [ eax + 0xc ]
call sub_1001fea0
mov eax [ eax + 0x10 ]
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push ebx
push eax
push edi
call edx
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ esi + 0x4 ]
je r-xdata
test edi edi
je r-xdata
mov ebx [ ebp + 0x8 ]
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push ebx
call eax
cmp al 0x1
je r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ esi + 0x4 ]
je r-xdata
test edi edi
je r-xdata
cmp eax 0x1
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ esi + 0xc ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ esi + 0x4 ]
je r-xdata
movzx eax [ esi + 0xc ]
cmp eax 0x2
je r-xdata
mov esi [ esi + 0x1c ]
mov edx [ esi ]
mov eax [ edx + 0xc ]
push ebx
mov ecx esi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10034580
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x4 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov eax ebx
mov edx 0x4
mul edx
seto cl
push edi
mov [ ebp + 0x8 ] ebx
neg ecx
or ecx eax
push ecx
call sub_1003b8b2
mov ecx [ esi ]
mov edx eax
mov eax [ ecx ]
add esp 0x4
mov [ ebp - 0x8 ] edx
cmp eax ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ esi + 0x4 ]
xor ecx ecx
mov eax edi
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003b8b2
mov edx [ esi ]
mov ecx [ edx ]
add esp 0x4
cmp ecx edx
je r-xdata
mov ecx edx
nop
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x10 ]
mov edx [ ecx ]
push edi
push eax
mov eax [ ebp - 0x8 ]
push ebx
push eax
push ecx
mov ecx [ edx + 0x1c ]
call ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx eax
lea esp [ esp ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov eax [ eax ]
add ecx 0x4
cmp eax [ esi ]
jne r-xdata
mov ebx [ ecx + 0x8 ]
mov [ edx ] ebx
mov ecx [ ecx ]
add edx 0x4
cmp ecx [ esi ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
sub_10034630
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x38 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x14 ]
xor ebx ebx
mov [ ebp - 0x4 ] 0x2
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x1c ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push esi
call edx
push 0xc
mov edi 0xf
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100019b0
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x2c ]
push ecx
push eax
lea edx [ ebp - 0x34 ]
push edx
mov [ ebp - 0x4 ] 0x3
call sub_1000cdb0
mov ecx eax
call sub_1000bfd0
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x5
jb r-xdata
mov ecx [ esi + 0x20 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x34 ]
mov edx [ ecx ]
mov eax [ edx + 0x14 ]
push esi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edi [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x1
cmp edi ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov edi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
lea eax [ edi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
sub_100347c0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x10 ]
mov esi ecx
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x4c ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] 0x2
mov eax [ ebp + 0xc ]
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x10 ] eax
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x18 ] eax
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov dx [ ebp + 0x1c ]
mov eax [ esi + 0x10 ]
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] 0x0
mov [ esi + 0xc ] dx
cmp [ edi + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x4
jb r-xdata
add eax 0x4
mov ecx 0x1
[ eax ] ecx
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov ebx ecx
test ebx ebx
je r-xdata
push r--data
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0xc ]
call eax
cmp eax ebx
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
push esi
call eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x50 ] eax
cmp [ esi + 0x4 ] eax
jne r-xdata
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push 0x2
push edi
push eax
call sub_10019060
mov ecx eax
call sub_10019080
mov edi eax
test edi edi
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
jns r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x18
lea eax [ edi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x50 ]
push 0x2
push ecx
push edx
call sub_10019060
mov ecx eax
call sub_10019080
mov edi eax
test edi edi
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x1c ]
push 0x1
mov ecx edi
call eax
lea ecx [ ebp - 0x48 ]
call sub_1002a860
mov edx [ edi ]
mov edx [ edx + 0x38 ]
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebx + 0x24 ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x5
call edx
mov [ edi + 0x24 ] 0x1
mov [ esi + 0x1c ] edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x6
call sub_1002ab80
mov eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1003c10a
add esp 0x4
lea edx [ ebx + 0x30 ]
push edx
lea eax [ ebx + 0x24 ]
push eax
mov ecx esi
call sub_10034580
jmp r-xdata
push r--data
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
push 0xc
mov edi 0xf
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_100019b0
mov ebx [ ebx + 0x4 ]
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x58 ]
push ebx
push eax
mov [ ebp - 0x4 ] 0x9
call sub_1000cdb0
mov ecx eax
call sub_1000bfd0
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0xb
jb r-xdata
mov eax [ edi ]
mov edx [ eax + 0x1c ]
push 0x1
mov ecx edi
call edx
lea ecx [ ebp - 0x48 ]
call sub_1002a860
mov eax [ edi ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebx + 0x30 ]
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0x7
call eax
mov [ edi + 0x24 ] 0x1
mov [ esi + 0x20 ] edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x8
call sub_1002ab80
mov ecx [ ebp - 0x48 ]
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_1003c10a
add esp 0x4
push 0xffffff37
lea ecx [ ebp - 0x3c ]
call sub_10014040
push r--data
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1003c200
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov ecx [ ebp - 0x58 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
push esi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
mov ebx eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx ebx
call eax
lea ecx [ ebx + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov ecx ebx
call edx
sub_10034ad0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10034630
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_10034b00
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ esi + 0x14 ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
cmp eax [ edi + 0x4 ]
jne r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
cmp [ esi + 0x24 ] 0x1
je r-xdata
cmp [ esi + 0x20 ] ebx
je r-xdata
push 0xc
mov [ ebp - 0x1c ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x38 ]
lea ecx [ edi + 0x30 ]
push ecx
add edi 0x24
push edi
mov ecx esi
call edx
push 0xc
mov [ ebp - 0x28 ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x10 ] ebx
call [ r--data ]
push r--data
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x38 ] r--data
call sub_1003c200
mov [ ebp - 0x20 ] eax
mov [ eax ] eax
mov eax [ ebp - 0x20 ]
mov [ eax + 0x4 ] eax
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x38 ]
lea edx [ ebp - 0x20 ]
push edx
lea edx [ edi + 0x24 ]
push edx
mov [ ebp - 0x4 ] ebx
call eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_1002ab80
mov ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_1003c10a
add esp 0x4
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x14 ] ebx
call [ r--data ]
push r--data
lea edx [ ebp - 0x44 ]
push edx
mov [ ebp - 0x44 ] r--data
call sub_1003c200
int3
mov [ ebp - 0x2c ] eax
mov [ eax ] eax
mov eax [ ebp - 0x2c ]
mov [ eax + 0x4 ] eax
mov ecx [ esi + 0x20 ]
mov edx [ ecx ]
mov edx [ edx + 0x38 ]
lea eax [ ebp - 0x2c ]
push eax
add edi 0x30
push edi
mov [ ebp - 0x4 ] 0x2
call edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_1002ab80
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10034c80
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
push 0x18
call sub_1003c1de
add esp 0x4
mov [ ebp - 0x24 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] edi
movzx ecx [ ebx + 0xe ]
push ecx
mov ecx eax
call sub_100188d0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10018ad0
mov eax [ ebx + 0x14 ]
mov [ ebp - 0x18 ] eax
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
cmp ecx edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebx + 0x10 ]
call sub_1001fea0
mov ecx [ ebp + 0x8 ]
mov edi [ eax + 0xc ]
call sub_1001fea0
mov eax [ eax + 0x10 ]
mov ecx [ esi ]
lea edx [ ebp - 0x1c ]
push edx
push edi
push eax
mov eax [ ecx + 0x18 ]
push esi
call eax
test eax eax
js r-xdata
mov ecx [ eax + 0x4 ]
cmp ecx [ ebx + 0x4 ]
je r-xdata
mov edi [ ebp - 0x1c ]
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] 0x0
push edi
call sub_1002bc00
add esp 0x4
movzx ecx [ ebx + 0xc ]
cmp ecx 0x2
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp + esi * 4 - 0x34 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_10020820
mov ecx [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10018ad0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001fe80
inc esi
cmp esi [ ebp - 0x14 ]
jb r-xdata
cmp eax edi
je r-xdata
cmp ecx 0x1
jne r-xdata
mov edx [ edi ]
mov edx [ edx + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
push 0x3
mov ecx edi
call edx
xor esi esi
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x14 ] esi
jbe r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_10018920
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x4 ]
cmp eax [ ebx + 0x4 ]
je r-xdata
mov eax [ ebp - 0x18 ]
xor edi edi
push edi
call sub_1002a4c0
add esp 0x4
mov ecx [ ebx + 0x1c ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
push eax
call edx
mov esi eax
cmp esi edi
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
cmp eax edi
jle r-xdata
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edi
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x3
call sub_10004960
sub_10034ef0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call [ r--data ]
lea ecx [ ebp - 0x3 ]
push ecx
mov ecx esi
call [ r--data ]
lea edx [ ebp - 0x2 ]
push edx
mov ecx esi
call [ r--data ]
lea eax [ ebp - 0x1 ]
push eax
mov ecx esi
call [ r--data ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x1 ]
mov bl [ ebp - 0x2 ]
test al al
jne r-xdata
cmp al 0xff
jne r-xdata
test ah ah
jne r-xdata
cmp al 0xef
jne r-xdata
cmp ah 0xfe
jne r-xdata
mov cl ah
or cl al
jne r-xdata
cmp bl 0xfe
jne r-xdata
cmp al 0xfe
jne r-xdata
cmp ah 0xbb
jne r-xdata
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test cl cl
je r-xdata
mov bl [ ebp - 0x2 ]
or dl bl
je r-xdata
test dl dl
jne r-xdata
cmp ah 0xff
jne r-xdata
cmp bl 0xbf
jne r-xdata
push 0x0
push 0x0
push 0x2
mov ecx esi
call [ r--data ]
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
test al al
jne r-xdata
or dl bl
jne r-xdata
mov dl [ ebp - 0x1 ]
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ r--data ]
pop esi
mov eax 0x4
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x4
mov ecx esi
call [ r--data ]
pop esi
mov eax 0x5
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x2
mov ecx esi
call [ r--data ]
pop esi
mov eax 0x3
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x3
mov ecx esi
call [ r--data ]
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x4
mov ecx esi
call [ r--data ]
pop esi
mov eax 0x4
pop ebx
mov esp ebp
pop ebp
retn
test ah ah
jne r-xdata
test ah ah
je r-xdata
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ r--data ]
pop esi
mov eax 0x5
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ r--data ]
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ r--data ]
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ r--data ]
pop esi
mov eax 0x3
pop ebx
mov esp ebp
pop ebp
retn
sub_100350b0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x1
jne r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp + 0x8 ]
push edi
lea edi [ eax + edx * 2 ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ eax + ecx * 2 ] dx
pop ebp
retn 0xc
mov eax [ eax ]
pop edi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_10035110
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov [ eax ] edx
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
retn
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x45 ] 0x0
je r-xdata
mov [ eax ] edx
retn
sub_10035170
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor ecx ecx
mov [ esi ] cx
pop esi
retn
mov eax [ esi ]
push eax
call sub_1003c10a
add esp 0x4
sub_100351a0
push esi
mov esi ecx
cmp [ esi + 0x30 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] cx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_1003c10a
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov edx [ esi ]
push edx
call sub_1003c10a
add esp 0x4
sub_100351f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call [ r--data ]
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call [ r--data ]
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1000e600
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
push eax
push ebx
push ecx
mov ecx esi
call sub_100350b0
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov eax esi
xor edx edx
mov [ eax + edi * 2 ] dx
mov eax [ esi ]
xor edx edx
mov [ eax + edi * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_100352b0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
test [ ecx + esi + 0xc ] 0x1
je r-xdata
push ebx
mov bl [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x9 ] al
mov [ ebp + 0x8 ] ah
movzx eax [ ebp + 0x8 ]
movzx eax [ ebp - 0x4 ]
jmp r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
cmp ax 0xd
je r-xdata
mov edx [ esi ]
movzx ecx ax
mov [ ebp - 0x4 ] ecx
mov ecx [ edx + 0x4 ]
test [ ecx + esi + 0xc ] 0x1
jne r-xdata
lea edx [ ebp + 0x8 ]
push edx
mov ecx esi
call [ r--data ]
lea eax [ ebp + 0x9 ]
push eax
mov ecx esi
call [ r--data ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
test [ edx + esi + 0xc ] 0x1
je r-xdata
cmp ax 0xa
je r-xdata
test bl bl
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
mov ecx esi
call [ r--data ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push 0x0
push 0x0
add ecx esi
call [ r--data ]
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push eax
push 0x1
mov ecx edi
call sub_100351f0
jmp r-xdata
movzx eax [ ebp + 0x8 ]
movzx ecx ax
mov [ ebp + 0x8 ] ecx
cmp ax 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x9 ] al
mov [ ebp + 0x8 ] ah
lea edx [ ebp - 0x4 ]
push edx
mov ecx esi
call [ r--data ]
lea eax [ ebp - 0x3 ]
push eax
mov ecx esi
call [ r--data ]
test bl bl
jne r-xdata
cmp [ ebp - 0x4 ] ax
jne r-xdata
cmp ax 0xa
jne r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
mov ecx esi
call [ r--data ]
sub_100353c0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov edi ecx
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
push 0x3d
push esi
mov [ ebp - 0x4 ] ebx
call [ r--data ]
add esp 0x8
cmp eax ebx
je r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
sub eax esi
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_100019b0
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
call sub_10002f40
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x54 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4c ] ebx
lea eax [ ebp - 0x4c ]
mov esi [ eax + 0x1c ]
add eax 0xc
mov edx 0x10
cmp [ eax + 0x14 ] edx
jb r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10036db0
push 0xffffffff
push 0x0
add esi 0x28
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000ef20
mov esi [ ebp - 0x50 ]
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10036dd0
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov esi [ ebp - 0x50 ]
push rw-data
mov ecx esi
call sub_10036dd0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov edi [ ebp - 0x1c ]
mov ecx edi
cmp edi esi
jb r-xdata
mov eax [ eax ]
xor edx edx
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1003c10a
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x2c ]
push edx
jmp r-xdata
cmp [ ebp - 0x18 ] edx
mov edx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
push ecx
push eax
push edx
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
lea edx [ ebp - 0x2c ]
sets al
test al al
jne r-xdata
cmp edi esi
jae r-xdata
lea eax [ ebp - 0x54 ]
jmp r-xdata
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
mov esi [ eax ]
cmp esi ebx
jne r-xdata
test eax eax
sub_10035550
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x30 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] cx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_1003c10a
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
pop ebp
retn
mov edx [ esi ]
push edx
call sub_1003c10a
add esp 0x4
sub_100355b0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
push ebx
push esi
push edi
cmp eax 0x4924923
jb r-xdata
mov edi [ ebp + 0x14 ]
inc eax
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov edx [ ecx + 0x4 ]
xor bl bl
cmp eax edx
jne r-xdata
mov esi [ ebp + 0x14 ]
lea eax [ esi + 0xc ]
push eax
add ecx 0xd
push ecx
call sub_10035550
push esi
call sub_1003c10a
add esp 0xc
push r--data
call [ r--data ]
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ edx + 0x4 ] edi
mov edx [ ecx + 0x4 ]
mov [ edx ] edi
mov eax [ ecx + 0x4 ]
mov [ eax + 0x8 ] edi
jmp r-xdata
mov [ eax + 0x8 ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ eax ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax edi
cmp [ edx + 0x44 ] bl
jne r-xdata
mov [ edx + 0x8 ] edi
mov [ edx ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
pop esi
mov [ ecx + 0x44 ] 0x1
pop ebx
pop ebp
retn 0x10
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov esi [ esi ]
cmp [ esi + 0x44 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x44 ] bl
jne r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x44 ] 0x1
mov [ esi + 0x44 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x44 ] 0x1
mov [ esi + 0x44 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x44 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x45 ] bl
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x45 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x44 ] bl
je r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x44 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x45 ] bl
jne r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x45 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_100357e0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov edi [ ebp + 0xc ]
cmp [ edi + 0x14 ] 0x8
mov ebx [ edi + 0x10 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
jb r-xdata
cmp ebx eax
jbe r-xdata
mov edi [ edi ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al [ edi ]
mov [ ebp + 0xc ] al
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
mov ecx esi
call sub_10003080
add edi 0x2
dec ebx
jne r-xdata
sub_10035870
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x45 ] 0x0
push esi
mov [ ebp - 0x4 ] ecx
je r-xdata
push edi
lea ecx [ ebp + 0xc ]
call sub_10002620
mov ecx [ ebx ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
push r--data
call [ r--data ]
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x45 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x45 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov cl [ eax + 0x44 ]
mov dl [ ebx + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ ebx + 0x44 ] cl
mov ecx [ ebp - 0x4 ]
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
push edi
call sub_100025e0
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
cmp [ ebx + 0x3c ] 0x8
pop edi
jb r-xdata
mov eax [ ecx + 0x4 ]
cmp edi [ eax + 0x4 ]
je r-xdata
push edi
call sub_100025c0
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
add esp 0x4
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov eax esi
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
xor esi esi
xor edx edx
mov [ ebx + 0x3c ] 0x7
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x28 ] dx
cmp [ ebx + 0x20 ] 0x10
jb r-xdata
mov ecx [ ebx + 0x28 ]
push ecx
call sub_1003c10a
add esp 0x4
mov [ edi + 0x44 ] 0x1
cmp [ edi + 0x44 ] 0x1
jne r-xdata
mov [ ebx + 0x20 ] 0xf
mov [ ebx + 0x1c ] esi
push ebx
mov [ ebx + 0xc ] 0x0
call sub_1003c10a
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
cmp eax esi
pop esi
pop ebx
jbe r-xdata
mov eax [ ebx + 0xc ]
push eax
call sub_1003c10a
add esp 0x4
mov eax [ esi ]
cmp edi eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ eax + 0x44 ] 0x1
push esi
mov [ esi + 0x44 ] 0x0
call sub_10002e50
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ eax + 0x44 ] 0x1
push esi
mov [ esi + 0x44 ] 0x0
call sub_10002df0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
je r-xdata
mov dl [ esi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ esi + 0x44 ] 0x1
mov eax [ eax ]
push esi
mov [ eax + 0x44 ] 0x1
call sub_10002e50
mov edx [ eax + 0x8 ]
mov [ edx + 0x44 ] 0x1
push eax
mov [ eax + 0x44 ] 0x0
call sub_10002df0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x0
mov dl [ esi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ esi + 0x44 ] 0x1
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x44 ] 0x1
call sub_10002df0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x44 ] 0x1
push eax
mov [ eax + 0x44 ] 0x0
call sub_10002e50
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub_10035b20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ecx
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_10035b20
cmp [ esi + 0x3c ] 0x8
mov edi [ edi ]
jb r-xdata
xor edx edx
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] ebx
mov [ esi + 0x28 ] dx
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov ecx [ esi + 0x28 ]
push ecx
call sub_1003c10a
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1003c10a
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov eax [ esi + 0xc ]
push eax
call sub_1003c10a
add esp 0x4
sub_10035ba0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x45 ] 0x0
push esi
push edi
mov edi eax
mov al 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] al
jne r-xdata
mov esi edi
mov [ ebp + 0x10 ] esi
test al al
je r-xdata
mov ecx [ edx + 0x1c ]
mov eax [ edx + 0x20 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ edx + 0x20 ] 0x10
lea ebx [ edx + 0xc ]
mov edx [ ebx + 0x10 ]
lea ecx [ esi + 0xc ]
jb r-xdata
mov eax [ ecx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x14 ] ebx
lea eax [ ebx + 0xc ]
je r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
lea ecx [ ebp + 0x10 ]
call sub_10035110
mov esi [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edx
push edi
push 0x1
cmp [ eax + 0x14 ] 0x10
mov edi [ eax + 0x10 ]
jb r-xdata
cmp [ ebp - 0x10 ] 0x10
jb r-xdata
mov edx [ ebp - 0x8 ]
add edx 0xd
push ebx
push edx
call sub_10035550
mov eax [ ebp + 0xc ]
push eax
call sub_1003c10a
mov eax [ ebp + 0x8 ]
add esp 0xc
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
push eax
push edi
push ecx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
push edx
mov edx [ ecx + 0x10 ]
push eax
push edx
push 0x0
call sub_100028b0
test eax eax
jns r-xdata
mov edx [ ebp + 0xc ]
mov esi [ edx + 0x1c ]
cmp ecx esi
jae r-xdata
mov eax [ eax ]
add edx 0xc
mov edx [ edx + 0xc ]
jmp r-xdata
lea edx [ ebp + 0x10 ]
push edx
call sub_100355b0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx esi
cmp esi edi
jb r-xdata
mov esi ecx
mov edi [ ebp - 0xc ]
mov ecx esi
cmp esi edi
jb r-xdata
mov esi [ eax + 0x10 ]
mov ecx esi
cmp ecx esi
jae r-xdata
cmp [ ebp - 0x10 ] 0x10
mov ecx [ ebp + 0xc ]
jb r-xdata
mov edx edi
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx edi
add ecx 0xc
mov ecx [ ecx + 0xc ]
jmp r-xdata
push ecx
push edx
push eax
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
sets al
cmp esi edi
jae r-xdata
push edx
push eax
push ecx
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
setns al
jmp r-xdata
cmp esi edi
jae r-xdata
mov ebx [ ebx + 0x8 ]
mov ebx [ ebx ]
jmp r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] al
test al al
je r-xdata
xor eax eax
cmp esi edi
setne al
test eax eax
or eax 0xffffffff
test eax eax
setns al
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
cmp [ ebx + 0x45 ] 0x0
mov edx [ ebp + 0xc ]
je r-xdata
test eax eax
sub_10035d50
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x45 ] 0x0
mov edx ecx
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_10035b20
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x0
mov edx [ ecx ]
mov [ eax ] edx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edx
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_10035870
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] ecx
jmp r-xdata
jmp r-xdata
mov ecx eax
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
sub_10035e10
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x48
call sub_1003c1de
mov edi eax
xor ebx ebx
add esp 0x4
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x28 ]
mov [ ebp + 0x8 ] ebx
call [ r--data ]
push r--data
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x28 ] r--data
call sub_1003c200
int3
mov eax [ esi + 0x4 ]
mov [ edi ] eax
mov ecx [ esi + 0x4 ]
mov [ edi + 0x4 ] ecx
mov edx [ esi + 0x4 ]
lea esi [ edi + 0xc ]
mov [ edi + 0x8 ] edx
mov [ edi + 0x44 ] bx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push 0xffffffff
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] bl
call sub_100018c0
mov eax [ ebp + 0x8 ]
lea ecx [ esi + 0x1c ]
add eax 0x1c
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ecx ] dx
call j_sub_10003b96
sub_10035f10
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10035d50
mov ecx [ esi + 0x4 ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10035f70
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
push 0x48
mov [ esi + 0x8 ] 0x0
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call [ r--data ]
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1003c200
int3
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov al 0x1
mov [ ecx + 0x44 ] al
mov edx [ esi + 0x4 ]
mov [ edx + 0x45 ] al
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10035fe0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
push 0xffffffff
push ebx
mov esi ecx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
call sub_100018c0
push 0xffffffff
push ebx
xor eax eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
call sub_1000ef20
push ebx
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10035e10
push eax
lea edx [ ebp - 0x50 ]
push edx
mov ecx esi
call sub_10035ba0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor ecx ecx
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x48 ]
push edx
call sub_1003c10a
add esp 0x4
sub_100360c0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x84 ] esi
call sub_10034ef0
add esp 0x4
cmp eax 0x2
je r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x3
je r-xdata
mov [ ebp - 0x98 ] 0x0
mov [ ebp - 0x98 ] 0x1
jmp r-xdata
mov [ ebp - 0x88 ] r--data
lea eax [ ebp - 0x88 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
mov edi 0x7
lea ebx [ edi + 0x1 ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
test [ eax + esi + 0xc ] 0x1
jne r-xdata
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xa0 ] eax
cmp eax 0x6
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1003c10a
add esp 0x4
jmp r-xdata
mov [ ebp - 0x84 ] r--data
lea eax [ ebp - 0x84 ]
jmp r-xdata
cmp eax edi
jbe r-xdata
push eax
lea ecx [ ebp - 0x94 ]
call [ r--data ]
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x94 ] r--data
push ecx
push r--data
call [ r--data ]
mov esi [ ebp - 0x18 ]
mov edi [ ebp - 0x2c ]
mov ecx edi
cmp esi ebx
jae r-xdata
call sub_1003c200
cmp [ ecx ] 0x22
jne r-xdata
lea ecx [ ebp - 0x2c ]
lea ecx [ ebp - 0x84 ]
push ecx
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x84 ] r--data
call [ r--data ]
push r--data
lea edx [ ebp - 0x94 ]
mov [ ebp - 0x94 ] r--data
push edx
jmp r-xdata
lea edx [ eax - 0x1 ]
cmp eax edx
jbe r-xdata
mov ecx edi
cmp esi ebx
jae r-xdata
cmp [ ecx + edx * 2 ] 0x22
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x9c ] 0x3d
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
push edx
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x84 ] r--data
call [ r--data ]
push r--data
lea eax [ ebp - 0x94 ]
mov [ ebp - 0x94 ] r--data
push eax
jmp r-xdata
mov ecx eax
mov [ ebp - 0x88 ] ecx
cmp eax 0x1
jb r-xdata
cmp esi ebx
jae r-xdata
mov eax edi
test ecx ecx
je r-xdata
lea edi [ ebp - 0x2c ]
mov edi edi
cmp [ eax ] 0x3d
je r-xdata
test eax eax
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov esi 0x1
lea edx [ ebp - 0x9c ]
mov ecx eax
jmp r-xdata
mov bx [ ecx ]
cmp bx [ edx ]
jne r-xdata
sbb edx edx
and edx 0xfffffffe
inc edx
je r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jae r-xdata
mov ecx eax
sub ecx edi
sar ecx 0x1
or edx 0xffffffff
sub edx ecx
mov ecx [ ebp - 0x88 ]
add ecx edx
mov [ ebp - 0x88 ] ecx
lea edi [ eax + 0x2 ]
jmp r-xdata
sub eax ecx
sar eax 0x1
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea ecx [ ebp - 0x2c ]
lea eax [ esi - 0x1 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_100036e0
mov eax [ ebp - 0xa0 ]
sub eax esi
sub eax 0x2
push eax
inc esi
push esi
lea edx [ ebp - 0x48 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_100036e0
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x80 ]
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_100357e0
add esp 0x8
mov ecx [ ebp - 0xa4 ]
lea edx [ ebp - 0x48 ]
push edx
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10035fe0
cmp [ ebp - 0x6c ] 0x10
jb r-xdata
cmp [ ebp - 0x34 ] ebx
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_1003c10a
add esp 0x4
xor esi esi
xor edx edx
mov edi 0x7
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x50 ] ebx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1003c10a
add esp 0x4
xor ecx ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x64 ] cx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1003c10a
add esp 0x4
mov esi [ ebp - 0x84 ]
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
test [ ecx + esi + 0xc ] 0x1
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1003c10a
add esp 0x4
mov [ ebp - 0x18 ] edi
xor edi edi
xor ecx ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] cx
mov eax [ ebp - 0x98 ]
lea edx [ ebp - 0x2c ]
push edx
push eax
push esi
mov [ ebp - 0x4 ] edi
call sub_100352b0
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
add esp 0xc
test [ edx + esi + 0xc ] 0x1
jne r-xdata
sub_10036440
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ esi + 0x1c ]
xor ebx ebx
mov [ ebp - 0x4 ] 0x3
cmp edi ebx
je r-xdata
mov edi [ esi + 0x20 ]
cmp edi ebx
je r-xdata
mov ecx edi
call sub_10035f10
push edi
call sub_1003c10a
add esp 0x4
mov edi [ esi + 0x24 ]
cmp edi ebx
je r-xdata
mov ecx edi
call sub_10035f10
push edi
call sub_1003c10a
add esp 0x4
call sub_10027ef0
cmp [ esi + 0x74 ] 0x10
jb r-xdata
mov ecx edi
call sub_10035f10
push edi
call sub_1003c10a
add esp 0x4
mov edi 0xf
mov [ esi + 0x74 ] edi
mov [ esi + 0x70 ] ebx
mov [ esi + 0x60 ] bl
cmp [ esi + 0x58 ] 0x10
jb r-xdata
mov eax [ esi + 0x60 ]
push eax
call sub_1003c10a
add esp 0x4
mov [ esi + 0x58 ] edi
mov [ esi + 0x54 ] ebx
mov [ esi + 0x44 ] bl
cmp [ esi + 0x3c ] 0x10
jb r-xdata
mov eax [ esi + 0x44 ]
push eax
call sub_1003c10a
add esp 0x4
mov [ esi + 0x3c ] edi
mov [ esi + 0x38 ] ebx
mov ecx esi
mov [ esi + 0x28 ] bl
mov [ ebp - 0x4 ] 0xffffffff
call sub_10035170
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x28 ]
push eax
call sub_1003c10a
add esp 0x4
sub_10036540
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov eax edx
push esi
mov [ ebp - 0x4 ] 0x0
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0xc ]
sub eax esi
push eax
push edx
call sub_10024210
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_10003af0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10036590
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
push 0x15
mov edi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100019b0
mov eax esi
mov [ ebp - 0x4 ] ebx
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_10024210
push 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10024210
push edi
lea ecx [ ebp - 0x48 ]
call sub_10036dd0
mov eax [ ebp - 0x2c ]
mov edi 0x10
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] edi
jae r-xdata
push 0x1
push eax
lea ecx [ ebp - 0x64 ]
push ecx
call sub_1001c200
add esp 0xc
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_1001ccc0
mov esi 0x8
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x50 ] esi
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp - 0x48 ]
cmp [ ebp - 0x34 ] esi
jae r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_1003c10a
add esp 0x4
push 0x1
push 0x40
push 0x21
push eax
lea ecx [ ebp - 0x11c ]
call sub_100049c0
lea eax [ ebp - 0x48 ]
sub_10036730
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
push eax
call sub_10036dd0
xor ebx ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov eax 0xf
mov [ esi + 0x3c ] eax
mov [ esi + 0x38 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x28 ] bl
mov [ esi + 0x58 ] eax
mov [ esi + 0x54 ] ebx
mov [ esi + 0x44 ] bl
mov [ esi + 0x74 ] eax
mov [ esi + 0x70 ] ebx
mov [ esi + 0x60 ] bl
mov [ ebp - 0x4 ] 0x3
call sub_10027ef0
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
lea edi [ esi + 0x24 ]
push edi
mov ecx esi
call sub_10036590
push eax
lea eax [ esi + 0x20 ]
push eax
mov ecx esi
call sub_10036590
lea esp [ esp ]
sbb eax eax
sbb eax 0xffffffff
cmp dl bl
je r-xdata
mov eax [ ebp + 0xc ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add ecx 0x2
cmp dl bl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10036860
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x130
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x12c ] eax
mov [ ebp - 0x138 ] edi
mov [ ebp - 0x13c ] ebx
cmp esi ebx
je r-xdata
push 0x1d
mov esi 0xf
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
call sub_100019b0
push edi
lea ecx [ ebp - 0x80 ]
push ecx
lea edx [ ebp - 0xd4 ]
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10036540
push r--data
push eax
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10036540
add esp 0x18
cmp [ ebp - 0xc0 ] 0x10
jb r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
cmp [ ebp - 0x6c ] 0x10
mov [ ebp - 0x4 ] 0x5
jb r-xdata
mov ecx [ ebp - 0xd4 ]
push ecx
call sub_1003c10a
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov ecx [ ebp - 0x130 ]
sub eax edx
mov edx [ ecx + 0x38 ]
push eax
add ecx 0x28
push esi
push edx
push ebx
call sub_100028b0
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ebx
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
je r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_1003c10a
add esp 0x4
mov edi [ ebp - 0x130 ]
mov ecx [ edi + 0x1c ]
add edi 0x1c
mov [ ebp - 0x134 ] ecx
cmp ecx ebx
je r-xdata
push 0x1d
push r--data
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
call sub_100019b0
push edi
lea eax [ ebp - 0x9c ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
mov [ ebp - 0x4 ] 0x6
call sub_10036540
push r--data
push eax
lea edx [ ebp - 0x10c ]
push edx
mov [ ebp - 0x4 ] 0x7
call sub_10036540
add esp 0x18
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10003af0
cmp [ ebp - 0xf8 ] 0x10
jb r-xdata
dec eax
jne r-xdata
mov ecx [ ebp - 0x130 ]
push esi
push edi
call sub_10036590
call sub_10035f10
mov eax [ ebp - 0x134 ]
push eax
call sub_1003c10a
add esp 0x4
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] bl
jb r-xdata
mov eax [ ebp - 0x10c ]
push eax
call sub_1003c10a
add esp 0x4
lea ecx [ ebp - 0x48 ]
call sub_10036db0
mov eax [ ebp - 0x12c ]
xor ecx ecx
mov [ eax + 0x14 ] 0x7
mov [ eax + 0x10 ] ebx
mov [ ebp - 0x4 ] 0xc
mov [ eax ] cx
mov esi [ ebp - 0x130 ]
mov ecx [ esi + 0x1c ]
mov [ ebp - 0x13c ] 0x1
cmp ecx ebx
je r-xdata
push 0x1d
push r--data
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
call sub_100019b0
push edi
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x128 ]
push ecx
mov [ ebp - 0x4 ] 0x9
call sub_10036540
push r--data
push eax
lea edx [ ebp - 0xf0 ]
push edx
mov [ ebp - 0x4 ] 0xa
call sub_10036540
add esp 0x18
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xb
call sub_10003af0
cmp [ ebp - 0xdc ] 0x10
jb r-xdata
cmp [ ebp - 0x88 ] 0x10
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] 0x5
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
cmp [ esi + 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
jae r-xdata
cmp [ ebp - 0x114 ] 0x10
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] bl
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_1003c10a
add esp 0x4
mov edx [ ebp - 0x9c ]
cmp [ esi + 0x24 ] ebx
je r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10036d70
test eax eax
jne r-xdata
push eax
lea edx [ ebp - 0x2c ]
push edx
call sub_100353c0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xd
call sub_10036e00
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] 0xc
jb r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0xa4 ] 0x10
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] bl
mov [ ebp - 0x4 ] 0x5
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_1003c10a
add esp 0x4
lea ecx [ ebp - 0x48 ]
call sub_10036d70
test eax eax
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10036d70
test eax eax
jne r-xdata
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
jae r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
mov edx [ ebp - 0xb8 ]
jmp r-xdata
lea ecx [ ebp - 0x48 ]
call sub_10036d70
mov esi eax
mov [ ebp - 0x134 ] eax
shr esi 0x1
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1003b8b2
add esp 0x4
mov edi eax
mov eax [ ebp - 0x134 ]
push 0x1
push eax
push edi
lea ecx [ ebp - 0x48 ]
call sub_10036d80
mov ecx [ ebp - 0x12c ]
push esi
push edi
call sub_10009910
push edi
call sub_1003c116
add esp 0x4
mov al [ edi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
jae r-xdata
push eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ esi + 0x20 ]
call sub_100353c0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xe
call sub_10036e00
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] 0xc
jb r-xdata
lea eax [ ebp - 0x64 ]
push edx
call sub_1003c10a
add esp 0x4
xor edx edx
cmp [ ebp - 0x50 ] 0x10
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1003c10a
add esp 0x4
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov esi edi
lea ecx [ ecx ]
mov ecx [ esi + 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_100353c0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xf
call sub_10036e00
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] 0xc
jb r-xdata
lea eax [ ebp - 0x64 ]
mov edx [ ebp - 0x2c ]
push edx
call sub_1003c10a
add esp 0x4
mov eax [ ebp - 0x12c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x64 ]
push eax
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0x12c ]
movsx dx al
movzx eax dx
push eax
push 0x1
call sub_100351f0
mov al [ esi + 0x1 ]
inc esi
cmp al bl
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
sub_10036d80
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x10 ]
jb r-xdata
add eax eax
push eax
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1003c110
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_10036dd0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_1000ef20
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10036e00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0xffffffff
push 0x0
push eax
mov esi ecx
call sub_1000ef20
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10036e30
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x34 ] 0x0
test eax eax
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
cdq
push edx
push eax
push edi
push 0x0
call utext_openUChars_4_0
add esp 0x14
cmp [ ebp - 0x34 ] 0x0
mov [ esi + 0x14 ] eax
jle r-xdata
push eax
call utext_close_4_0
add esp 0x4
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
lea ebx [ ebp - 0x34 ]
push ebx
push eax
mov eax [ edx + 0x18 ]
call eax
cmp [ ebp - 0x34 ] 0x0
jle r-xdata
push r--data
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x10 ] edi
pop edi
mov [ esi + 0x8 ] eax
pop esi
xor ecx ebp
pop ebx
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
push r--data
jmp r-xdata
push 0xffffff37
lea ecx [ ebp - 0x30 ]
call sub_10014040
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
call sub_1003c200
sub_10036f00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ecx + 0x10 ]
mov eax [ eax ]
push esi
mov esi [ ebp + 0x8 ]
push edx
lea edx [ ecx + eax * 2 ]
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10020550
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10036f30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x54 ]
push edi
mov edi ecx
mov ecx esi
call edx
cmp [ edi + 0x20 ] 0x0
je r-xdata
cmp eax 0x64
jl r-xdata
mov [ edi + 0x20 ] 0x0
mov eax [ esi ]
mov edx [ eax + 0x38 ]
mov ecx esi
call edx
cdq
push edx
push eax
mov eax [ ebp + 0xc ]
push eax
call utext_next32From_4_0
mov esi eax
push esi
call u_isWhitespace_4_0
add esp 0x10
cmp al 0x1
je r-xdata
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx + 0x38 ]
mov ecx esi
call eax
mov ecx [ ebp + 0xc ]
cdq
push edx
push eax
push ecx
call utext_next32From_4_0
mov esi eax
push 0xe
push esi
call u_hasBinaryProperty_4_0
add esp 0x14
test al al
jne r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x8
push esi
call u_ispunct_4_0
add esp 0x4
cmp al 0x1
je r-xdata
mov [ edi + 0x20 ] 0x1
pop edi
xor al al
pop esi
pop ebp
retn 0x8
push 0x1c
push esi
call u_hasBinaryProperty_4_0
add esp 0x8
test al al
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
cmp esi 0x2e
je r-xdata
cmp esi 0x3f
je r-xdata
cmp esi 0x21
jne r-xdata
sub_10036ff0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
push eax
call utext_close_4_0
add esp 0x4
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x0
call [ icu_4_0::Locale::~Locale@IAT ]
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_10037090
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
je r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
push eax
mov eax [ esi + 0x18 ]
push eax
call edx
test al al
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x4
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esi + 0x8 ]
mov cl 0x1
mov [ edi + 0x4 ] eax
mov edx [ esi + 0x4 ]
mov [ esi + 0x8 ] edx
cmp [ edi + 0x4 ] 0x1
jne r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x34 ]
call edx
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
mov al cl
pop ebx
pop ebp
retn 0x4
mov eax [ edi ]
mov ecx [ esi + 0x10 ]
movzx ebx [ ecx + eax * 2 ]
push ebx
call u_isblank_4_0
add esp 0x4
test al al
jne r-xdata
push ebx
call u_ispunct_4_0
add esp 0x4
test al al
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
sub_10037140
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call sub_10001ae0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10037170
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_1003c10a
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_100371d0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x60 ] esi
xor ebx ebx
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
call sub_10001ae0
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
jb r-xdata
push ebx
push ebx
push ebx
lea edi [ esi + 0x1c ]
push eax
mov ecx edi
call [ icu_4_0::Locale::Locale@IAT ]
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x3
jb r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x5c ]
push edx
push edi
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x5c ] ebx
call [ icu_4_0::BreakIterator::createWordInstance@IAT ]
add esp 0x8
mov [ esi + 0x18 ] eax
cmp [ ebp - 0x5c ] ebx
jle r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
push r--data
push 0xffffff37
lea ecx [ ebp - 0x58 ]
call sub_10014040
push r--data
lea eax [ ebp - 0x58 ]
push eax
call sub_1003c200
sub_100372c0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x10 ]
mov eax esi
mov ecx esi
cmp esi 0x5
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx 0x5
mov eax edi
mov eax [ edi ]
jmp r-xdata
sete al
cmp al bl
je r-xdata
cmp esi 0x5
jae r-xdata
push ecx
push r--data
push eax
call sub_10001da0
xor ebx ebx
add esp 0xc
cmp eax ebx
jne r-xdata
push 0x24
call sub_1003c1de
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
push 0x20
call sub_1003c1de
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp esi 0x5
setne al
or eax 0xffffffff
jmp r-xdata
xor esi esi
push 0xffffffff
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edi
mov [ ecx ] bl
call sub_100018c0
mov [ esi ] r--data
mov [ esi + 0x20 ] bl
jmp r-xdata
push 0xffffffff
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edi
mov [ ecx ] bl
call sub_100018c0
mov [ esi ] r--data
jmp r-xdata
cmp eax ebx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov ecx eax
call sub_100371d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xb8
mov [ ebp - 0x4 ] 0xffffffff
call sub_1003c1de
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
sub_10037430
push esi
mov esi ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
mov esi [ esi + 0x3c ]
test esi esi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax 0x1
pop esi
retn
push esi
call [ FreeLibrary@IAT ]
mov eax [ esi + 0x5c ]
push esi
call eax
add esp 0x4
sub_10037460
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x3c ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x30 ] 0x0
je r-xdata
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001fe80
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_1001fe80
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1001fe80
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi ]
test eax eax
je r-xdata
mov edx [ esi + 0x54 ]
push 0x0
push 0x0
lea ecx [ ebp - 0x30 ]
push ecx
push r--data
push r--data
push r--data
push eax
call edx
add esp 0x1c
lea ecx [ ebp + 0x8 ]
call sub_1001fea0
mov eax [ eax + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1001c470
add esp 0x8
mov edi 0x10
mov [ ebp - 0x4 ] 0x3
cmp [ eax + 0x14 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
mov edx [ esi ]
push eax
mov eax [ esi + 0x58 ]
push r--data
push ecx
push edx
call eax
add esp 0x10
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ eax ]
lea ecx [ ebp + 0xc ]
call sub_1001fea0
mov eax [ eax + 0x10 ]
push eax
lea edx [ ebp - 0x2c ]
push edx
call sub_1001c470
add esp 0x8
mov [ ebp - 0x4 ] 0x4
cmp [ eax + 0x14 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ esi ]
mov edx [ esi + 0x58 ]
push eax
mov eax [ ebp - 0x30 ]
push r--data
push eax
push ecx
call edx
add esp 0x10
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ eax ]
lea ecx [ ebp + 0x10 ]
call sub_1001fea0
mov eax [ eax + 0x10 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
call sub_1001c470
add esp 0x8
mov [ ebp - 0x4 ] 0x5
cmp [ eax + 0x14 ] edi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
mov edx [ ebp - 0x30 ]
mov ecx [ esi + 0x58 ]
push eax
mov eax [ esi ]
push r--data
push edx
push eax
call ecx
add esp 0x10
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov edx [ ebp - 0x2c ]
push edx
call sub_1003c10a
add esp 0x4
sub_10037610
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x3c ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x30 ] 0x0
mov edi 0x10
je r-xdata
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001fe80
cmp [ ebp + 0x20 ] edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] 0x0
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0x20 ] 0xf
cmp [ ebp + 0x3c ] edi
jb r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_1003c10a
add esp 0x4
push 0x0
push 0x0
lea edx [ ebp - 0x30 ]
push edx
push r--data
push r--data
push r--data
push eax
mov eax [ esi + 0x54 ]
call eax
add esp 0x1c
lea ecx [ ebp + 0x8 ]
call sub_1001fea0
mov eax [ eax + 0x10 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
call sub_1001c470
add esp 0x8
mov [ ebp - 0x4 ] 0x3
cmp [ eax + 0x14 ] edi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x3c
mov ecx [ ebp + 0x28 ]
push ecx
call sub_1003c10a
add esp 0x4
mov edx [ ebp - 0x30 ]
mov ecx [ esi + 0x58 ]
push eax
mov eax [ esi ]
push r--data
push edx
push eax
call ecx
add esp 0x10
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ eax ]
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x20 ] edi
jae r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1003c10a
add esp 0x4
mov ecx [ esi ]
mov edx [ esi + 0x58 ]
push eax
mov eax [ ebp - 0x30 ]
push r--data
push eax
push ecx
call edx
mov eax [ ebp + 0x28 ]
add esp 0x10
cmp [ ebp + 0x3c ] edi
jae r-xdata
lea eax [ ebp + 0xc ]
mov ecx [ esi ]
mov edx [ esi + 0x58 ]
push eax
mov eax [ ebp - 0x30 ]
push r--data
push eax
push ecx
call edx
add esp 0x10
lea eax [ ebp + 0x28 ]
sub_10037770
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ rw-data ]
xor ebx ebx
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
mov eax 0x1
mov [ rw-data ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] ebx
call sub_10035170
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push esi
mov [ esi + 0x4 ] bl
call sub_1003c10a
add esp 0x4
mov eax [ esi + 0x4 ]
push eax
call sub_1003c10a
add esp 0x4
sub_10037800
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
xor ebx ebx
xor cl cl
mov [ ebp - 0x65 ] cl
cmp [ eax + 0x10 ] ebx
je r-xdata
mov al cl
push eax
lea ecx [ ebp - 0x64 ]
call sub_10036dd0
mov edx [ rw-data ]
mov eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push edx
lea ecx [ ebp - 0x2c ]
call sub_100019b0
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
jae r-xdata
push 0x1
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_1001c200
add esp 0xc
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x2
call sub_1001ccc0
mov edi 0x8
cmp [ ebp - 0x34 ] edi
jb r-xdata
lea eax [ ebp - 0x2c ]
xor edx edx
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1003c10a
add esp 0x4
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x50 ] edi
jae r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
push eax
call [ LoadLibraryW@IAT ]
mov [ esi + 0x3c ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10035170
mov al [ ebp - 0x65 ]
jmp r-xdata
mov edi [ GetProcAddress@IAT ]
push r--data
push eax
call edi
mov ecx [ esi + 0x3c ]
push r--data
push ecx
mov [ esi + 0x40 ] eax
call edi
mov edx [ esi + 0x3c ]
push r--data
push edx
mov [ esi + 0x44 ] eax
call edi
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
push r--data
push eax
call edi
mov ecx [ esi + 0x3c ]
push r--data
push ecx
mov [ esi + 0x4c ] eax
call edi
mov edx [ esi + 0x3c ]
push r--data
push edx
mov [ esi + 0x54 ] eax
call edi
mov [ esi + 0x58 ] eax
mov eax [ esi + 0x3c ]
push r--data
push eax
call edi
mov ecx [ esi + 0x3c ]
push r--data
push ecx
mov [ esi + 0x50 ] eax
call edi
mov [ esi + 0x5c ] eax
cmp [ esi + 0x40 ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi + 0x3c ]
push edx
call [ FreeLibrary@IAT ]
mov [ esi + 0x3c ] ebx
cmp [ esi + 0x44 ] ebx
je r-xdata
cmp [ esi + 0x48 ] ebx
je r-xdata
cmp [ esi + 0x4c ] ebx
je r-xdata
cmp [ esi + 0x58 ] ebx
je r-xdata
cmp [ esi + 0x54 ] ebx
je r-xdata
cmp [ esi + 0x50 ] ebx
je r-xdata
cmp eax ebx
je r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
sub_100379f0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
cmp [ esi + 0x3c ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
cmp [ esi ] ebx
jne r-xdata
push ebx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100019b0
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] ebx
call sub_10002fd0
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push edx
lea ecx [ ebp - 0x2c ]
call sub_100019b0
mov edi 0x10
mov [ ebp - 0x4 ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov eax edx
lea edi [ eax + 0x1 ]
nop
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1003c10a
add esp 0x4
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1003c10a
add esp 0x4
cmp [ esi + 0x18 ] edi
lea eax [ esi + 0x4 ]
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ esi + 0x40 ]
push ecx
push ebx
push eax
call edx
mov eax [ esi + 0x4c ]
push r--data
push ebx
push r--data
push r--data
push r--data
push esi
call eax
add esp 0x24
mov eax [ eax ]
sub_10037b10
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn
push 0x60
call sub_1003c1de
mov esi eax
add esp 0x4
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10036db0
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x5c ] ebx
mov [ esi + 0x54 ] ebx
jmp r-xdata
push ebx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100019b0
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_1003c10a
add esp 0x4
mov [ rw-data ] esi
mov [ esi + 0x3c ] ebx
mov eax [ rw-data ]
push ebx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
call sub_100019b0
mov ecx [ rw-data ]
lea edx [ ebp - 0x48 ]
add ecx 0x4
push edx
mov [ ebp - 0x4 ] 0x2
call sub_10003af0
mov esi 0x10
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x34 ] esi
jb r-xdata
push 0x1
push eax
lea ecx [ ebp - 0x64 ]
push ecx
call sub_1001c200
add esp 0xc
mov ecx [ rw-data ]
push 0xffffffff
push ebx
lea edx [ ebp - 0x64 ]
add ecx 0x20
push edx
mov [ ebp - 0x4 ] 0x4
call sub_1000ef20
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_10035170
cmp [ ebp - 0x18 ] esi
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ rw-data ]
mov eax [ ebp - 0x2c ]
push eax
call sub_1003c10a
add esp 0x4
sub_10037c90
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax ecx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x34 ] 0x0
lea ebx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ebx
push eax
push ecx
lea ecx [ esi + 0x4 ]
call sub_100019b0
push 0xffffffff
push 0x0
push edi
lea ecx [ esi + 0x20 ]
call sub_1000ef20
cmp [ esi + 0x14 ] 0x0
jne r-xdata
push edi
call sub_1001c7d0
add esp 0x4
test al al
jne r-xdata
push r--data
push 0xffffff06
lea ecx [ ebp - 0x30 ]
call sub_10014040
push r--data
lea eax [ ebp - 0x30 ]
push eax
call sub_1003c200
push edi
mov ecx esi
call sub_10037800
test al al
jne r-xdata
push r--data
push 0xffffff05
lea ecx [ ebp - 0x30 ]
call sub_10014040
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
call sub_1003c200
mov ecx esi
call sub_100379f0
cmp [ esi ] 0x0
pop edi
pop esi
pop ebx
mov eax 0x1
jne r-xdata
push r--data
push 0xffffff04
lea ecx [ ebp - 0x30 ]
call sub_10014040
push r--data
lea edx [ ebp - 0x30 ]
push edx
call sub_1003c200
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x34 ]
sub_10037d90
push ebp
mov ebp esp
sub esp 0x26c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x26c ] r--data
mov [ ebp - 0x268 ] r--data
mov [ ebp - 0x264 ] r--data
mov [ ebp - 0x260 ] r--data
mov [ ebp - 0x25c ] r--data
mov [ ebp - 0x258 ] r--data
mov [ ebp - 0x254 ] r--data
mov [ ebp - 0x250 ] r--data
mov [ ebp - 0x24c ] r--data
mov [ ebp - 0x248 ] r--data
mov [ ebp - 0x244 ] r--data
mov [ ebp - 0x240 ] r--data
mov [ ebp - 0x23c ] r--data
mov [ ebp - 0x238 ] r--data
mov [ ebp - 0x234 ] r--data
mov [ ebp - 0x230 ] r--data
mov [ ebp - 0x22c ] r--data
mov [ ebp - 0x228 ] r--data
mov [ ebp - 0x224 ] r--data
mov [ ebp - 0x220 ] r--data
mov [ ebp - 0x21c ] r--data
mov [ ebp - 0x218 ] r--data
mov [ ebp - 0x214 ] r--data
mov [ ebp - 0x210 ] r--data
mov [ ebp - 0x20c ] r--data
mov [ ebp - 0x208 ] r--data
mov [ ebp - 0x204 ] r--data
mov [ ebp - 0x200 ] r--data
mov [ ebp - 0x1fc ] r--data
mov [ ebp - 0x1f8 ] r--data
mov [ ebp - 0x1f4 ] r--data
mov [ ebp - 0x1f0 ] r--data
mov [ ebp - 0x1ec ] r--data
mov [ ebp - 0x1e8 ] r--data
mov [ ebp - 0x1e4 ] r--data
mov [ ebp - 0x1e0 ] r--data
mov [ ebp - 0x1dc ] r--data
mov [ ebp - 0x1d8 ] r--data
mov [ ebp - 0x1d4 ] r--data
mov [ ebp - 0x1d0 ] r--data
mov [ ebp - 0x1cc ] r--data
mov [ ebp - 0x1c8 ] r--data
mov [ ebp - 0x1c4 ] r--data
mov [ ebp - 0x1c0 ] r--data
mov [ ebp - 0x1bc ] r--data
mov [ ebp - 0x1b8 ] r--data
mov [ ebp - 0x1b4 ] r--data
mov [ ebp - 0x1b0 ] r--data
mov [ ebp - 0x1ac ] r--data
mov [ ebp - 0x1a8 ] r--data
mov [ ebp - 0x1a4 ] r--data
mov [ ebp - 0x1a0 ] r--data
mov [ ebp - 0x19c ] r--data
mov [ ebp - 0x198 ] r--data
mov [ ebp - 0x194 ] r--data
mov [ ebp - 0x190 ] r--data
mov [ ebp - 0x18c ] r--data
mov [ ebp - 0x188 ] r--data
mov [ ebp - 0x184 ] r--data
mov [ ebp - 0x180 ] r--data
mov [ ebp - 0x17c ] r--data
mov [ ebp - 0x178 ] r--data
mov [ ebp - 0x174 ] r--data
mov [ ebp - 0x170 ] r--data
mov [ ebp - 0x16c ] r--data
mov [ ebp - 0x168 ] r--data
mov [ ebp - 0x164 ] r--data
mov [ ebp - 0x160 ] r--data
mov [ ebp - 0x15c ] r--data
mov [ ebp - 0x158 ] r--data
mov [ ebp - 0x154 ] r--data
mov [ ebp - 0x150 ] r--data
mov [ ebp - 0x14c ] r--data
mov [ ebp - 0x148 ] r--data
mov [ ebp - 0x144 ] r--data
mov [ ebp - 0x140 ] r--data
mov [ ebp - 0x13c ] r--data
mov [ ebp - 0x138 ] r--data
mov [ ebp - 0x134 ] r--data
mov [ ebp - 0x130 ] r--data
push 0x0
push eax
push r--data
mov ecx r--data
push 0x4c
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x12c ] r--data
mov [ ebp - 0x128 ] r--data
mov [ ebp - 0x124 ] r--data
mov [ ebp - 0x120 ] r--data
mov [ ebp - 0x11c ] r--data
mov [ ebp - 0x118 ] r--data
mov [ ebp - 0x114 ] r--data
mov [ ebp - 0x110 ] r--data
mov [ ebp - 0x10c ] r--data
mov [ ebp - 0x108 ] r--data
mov [ ebp - 0x104 ] r--data
mov [ ebp - 0x100 ] r--data
mov [ ebp - 0xfc ] r--data
mov [ ebp - 0xf8 ] r--data
mov [ ebp - 0xf4 ] r--data
mov [ ebp - 0xf0 ] r--data
mov [ ebp - 0xec ] r--data
mov [ ebp - 0xe8 ] r--data
mov [ ebp - 0xe4 ] r--data
mov [ ebp - 0xe0 ] r--data
mov [ ebp - 0xdc ] r--data
mov [ ebp - 0xd8 ] r--data
mov [ ebp - 0xd4 ] r--data
mov [ ebp - 0xd0 ] r--data
mov [ ebp - 0xcc ] r--data
mov [ ebp - 0xc8 ] r--data
mov [ ebp - 0xc4 ] r--data
mov [ ebp - 0xc0 ] r--data
mov [ ebp - 0xbc ] r--data
mov [ ebp - 0xb8 ] r--data
mov [ ebp - 0xb4 ] r--data
mov [ ebp - 0xb0 ] r--data
mov [ ebp - 0xac ] r--data
mov [ ebp - 0xa8 ] r--data
mov [ ebp - 0xa4 ] r--data
mov [ ebp - 0xa0 ] r--data
mov [ ebp - 0x9c ] r--data
mov [ ebp - 0x98 ] r--data
mov [ ebp - 0x94 ] r--data
mov [ ebp - 0x90 ] r--data
mov [ ebp - 0x8c ] r--data
mov [ ebp - 0x88 ] r--data
mov [ ebp - 0x84 ] r--data
mov [ ebp - 0x80 ] r--data
mov [ ebp - 0x7c ] r--data
mov [ ebp - 0x78 ] r--data
mov [ ebp - 0x74 ] r--data
mov [ ebp - 0x70 ] r--data
mov [ ebp - 0x6c ] r--data
mov [ ebp - 0x68 ] r--data
mov [ ebp - 0x64 ] r--data
mov [ ebp - 0x60 ] r--data
mov [ ebp - 0x5c ] r--data
mov [ ebp - 0x58 ] r--data
mov [ ebp - 0x54 ] r--data
mov [ ebp - 0x50 ] r--data
mov [ ebp - 0x4c ] r--data
mov [ ebp - 0x48 ] r--data
mov [ ebp - 0x44 ] r--data
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x38 ] r--data
mov [ ebp - 0x34 ] r--data
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
push eax
call sub_10028490
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x14
call sub_1003c1ea
mov esp ebp
pop ebp
retn
sub_10038390
mov eax [ rw-data ]
push esi
mov esi [ eax ]
cmp esi [ rw-data ]
je r-xdata
mov eax rw-data
pop esi
retn
push rw-data
call sub_10037d90
add esp 0x4
test eax eax
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] eax
pop esi
retn
sub_100383d0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
mov eax [ esi + 0xc ]
dec [ eax + 0x4 ]
test [ ebp + 0x8 ] 0x1
je r-xdata
sub_10038420
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x3070065
push ecx
call Ordinal_AXE8SharedExpat_1
add esp 0xc
mov esp ebp
pop ebp
retn
sub_1003856c
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov eax __dos_header
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ebx [ esi + 0xc ]
add edx eax
push edi
mov edi [ esi + 0x14 ]
add edi eax
add ecx eax
mov [ ebp - 0x18 ] edx
mov edx [ esi + 0x10 ]
add ebx eax
add edx eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
xor ecx ecx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x3c ] eax
xor eax eax
test [ esi ] 0x1
lea edi [ ebp - 0x30 ]
mov [ ebp - 0x44 ] 0x24
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x34 ] ecx
stosd [ edi ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
mov eax [ ebp + 0xc ]
sub eax ebx
and eax 0xfffffffc
mov edx [ edx + eax ]
mov [ ebp + 0x8 ] eax
mov eax edx
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x34 ] eax
lea eax [ edx + r--data ]
jne r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push ecx
push 0xc06d0057
call [ RaiseException@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
xor ebx ebx
cmp eax ecx
je r-xdata
movzx eax dx
pop edi
pop esi
pop ebx
leave
retn 0x8
test edi edi
jne r-xdata
lea edx [ ebp - 0x44 ]
push edx
push ecx
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x2c ] edi
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x2
call eax
mov ebx eax
push [ ebp - 0x38 ]
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x1
call eax
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp - 0x44 ]
push ecx
push 0x5
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] ebx
call eax
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
push edi
push [ ebp - 0x18 ]
call [ InterlockedExchange@IAT ]
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ ebp - 0x30 ]
push edi
call [ GetProcAddress@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
push edi
call [ FreeLibrary@IAT ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push 0x0
push 0xc06d007e
call [ RaiseException@IAT ]
mov eax [ ebp - 0x28 ]
jmp r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x3
call eax
mov edi eax
test edi edi
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ edi + 0x3c ]
cmp [ eax + edi ] 0x4550
jne r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push 0xc06d007f
call [ RaiseException@IAT ]
mov ebx [ ebp - 0x28 ]
lea ecx [ ebp - 0x44 ]
push ecx
push 0x4
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ eax + edi + 0x8 ] ecx
jne r-xdata
mov [ eax + 0x4 ] esi
mov ecx [ rw-data ]
mov [ eax ] ecx
mov [ rw-data ] eax
jmp r-xdata
cmp edi [ eax + edi + 0x34 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx + eax ]
test ebx ebx
jne r-xdata
sub_100387b0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax 0x10
push esi
nop
movzx eax [ edx ]
movzx esi [ ecx ]
sub eax esi
jne r-xdata
sub eax 0x4
add ecx 0x4
add edx 0x4
cmp eax 0x4
jae r-xdata
sar eax 0x1f
or eax 0x1
xor edx edx
test eax eax
sete dl
pop esi
mov eax edx
pop ebp
retn
movzx eax [ edx + 0x1 ]
movzx esi [ ecx + 0x1 ]
sub eax esi
jne r-xdata
mov esi [ edx ]
cmp esi [ ecx ]
jne r-xdata
xor eax eax
xor edx edx
test eax eax
sete dl
pop esi
mov eax edx
pop ebp
retn
movzx eax [ edx + 0x2 ]
movzx esi [ ecx + 0x2 ]
sub eax esi
jne r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_10038820
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x14 ]
mov [ edi ] 0x0
je r-xdata
push esi
push 0x28
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
mov eax 0x80040110
pop edi
pop ebp
retn 0x10
pop esi
mov eax 0x8007000e
pop edi
pop ebp
retn 0x10
mov ecx eax
call sub_10038f90
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov eax [ ebp + 0x10 ]
mov edx [ esi ]
mov ecx [ edx ]
push edi
push eax
push esi
call ecx
mov edx [ esi ]
mov edi eax
mov eax [ edx + 0x8 ]
push esi
call eax
pop esi
mov eax edi
pop edi
pop ebp
retn 0x10
sub_10038890
push ebp
mov ebp esp
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax [ ebp + 0x8 ]
push r--data
push eax
call sub_100387b0
add esp 0x8
test eax eax
je r-xdata
or [ rw-data ] eax
mov ecx rw-data
call sub_10039220
push r-xdata
call sub_1003c2bf
add esp 0x4
mov ecx [ ebp + 0x10 ]
mov [ ecx ] 0x0
mov eax 0x80040111
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push ebx
push rw-data
call sub_100390f0
push 0x28
mov [ edi ] 0x0
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x8007000e
pop ebx
pop ebp
retn 0xc
mov ecx eax
call sub_10038f90
mov esi eax
test esi esi
jne r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
mov eax [ esi ]
mov ecx [ eax ]
push edi
push ebx
push esi
call ecx
mov edx [ esi ]
mov edi eax
mov eax [ edx + 0x8 ]
push esi
call eax
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_10038950
push esi
xor esi esi
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov ax [ esi * 2 + rw-data ]
pop esi
retn
inc esi
cmp esi 0x8
jl r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov ecx [ esi * 4 + rw-data ]
mov eax edi
lea esp [ esp ]
xor eax eax
pop esi
retn
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_100389a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
je r-xdata
push 0x54
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
je r-xdata
push 0x40
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_1003aff0
jmp r-xdata
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
push 0x58
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov ecx eax
call sub_1003a5c0
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_10039960
jmp r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
sub_10038a90
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
call sub_10038950
test ax ax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x80004005
pop esi
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov eax edi
mov [ ebp - 0xc ] 0xf
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x20 ] 0x0
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
push ebx
sub eax ecx
push eax
push edi
lea ecx [ ebp - 0x20 ]
call sub_100019b0
mov ecx [ esi + 0xc ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] ecx
push edx
lea ecx [ esi + 0x8 ]
call sub_10023d60
mov esi [ esi + 0xc ]
mov [ ebp - 0x2c ] eax
cmp eax esi
je r-xdata
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x30 ]
mov ebx [ eax + 0x1c ]
add eax 0xc
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x28 ]
xor eax eax
test bl bl
setne al
pop ebx
pop edi
pop esi
mov [ ecx ] eax
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x20 ]
push edx
call sub_1003c10a
add esp 0x4
mov edi [ ebp - 0x10 ]
mov edx edi
cmp edi ebx
jb r-xdata
mov eax [ eax ]
cmp [ ebp - 0xc ] 0x10
mov ecx [ ebp - 0x20 ]
jae r-xdata
mov edx ebx
push edx
push eax
push ecx
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ ebp - 0x20 ]
js r-xdata
cmp edi ebx
jb r-xdata
lea eax [ ebp - 0x2c ]
jmp r-xdata
cmp edi ebx
setne al
test eax eax
mov ecx [ ebp - 0x24 ]
cmp [ eax ] ecx
setne bl
cmp [ ebp - 0xc ] 0x10
jb r-xdata
sub_10038bb0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x2c
call sub_1003c1de
mov esi eax
xor ebx ebx
add esp 0x4
mov [ ebp - 0x14 ] esi
cmp esi ebx
je r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp + 0x8 ] ebx
call [ r--data ]
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_1003c200
int3
mov eax [ edi + 0x4 ]
mov [ esi ] eax
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x4 ]
lea ecx [ esi + 0xc ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x28 ] bx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x1
cmp ecx ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
mov eax edi
lea edx [ eax + 0x1 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
mov [ ecx ] bl
mov [ ebp + 0x8 ] edx
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax [ ebp + 0x8 ]
push eax
push edi
call sub_100019b0
sub_10038ca0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea edi [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x18 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10005200
mov edi [ edi + 0x4 ]
push edi
call sub_1003c10a
add esi 0x8
add esp 0x4
mov [ ebp - 0x18 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10005200
mov edx [ esi + 0x4 ]
push edx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10038d40
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x4 ]
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
pop edi
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push 0x1
mov ecx esi
call edx
sub_10038d80
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x24 ] ebx
call sub_10038950
test ax ax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x80004005
pop ebx
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov eax edi
mov [ ebp - 0xc ] 0xf
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x20 ] bl
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push edi
lea ecx [ ebp - 0x20 ]
call sub_100019b0
mov eax [ esi + 0xc ]
lea ecx [ ebp - 0x20 ]
add esi 0x8
push ecx
mov ecx esi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] esi
call sub_10023d60
mov esi [ esi + 0x4 ]
mov [ ebp - 0x30 ] eax
cmp eax esi
je r-xdata
mov [ ebp - 0x34 ] esi
lea eax [ ebp - 0x34 ]
mov ebx [ eax + 0x1c ]
add eax 0xc
mov ecx 0x10
cmp [ eax + 0x14 ] ecx
jb r-xdata
test bl bl
je r-xdata
mov edx [ ebp - 0x20 ]
push edx
call sub_1003c10a
add esp 0x4
mov edx [ ebp - 0x10 ]
cmp edx ebx
jb r-xdata
mov eax [ eax ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax edi
mov [ ebp - 0xc ] 0xf
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x20 ] 0x0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x20 ]
jae r-xdata
mov edx ebx
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov eax edi
mov [ ebp - 0xc ] 0xf
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x20 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0x20 ]
call sub_100019b0
mov eax [ ebp - 0x2c ]
mov esi [ eax + 0x1c ]
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
lea ecx [ eax + 0x18 ]
call sub_10024410
cmp [ eax ] esi
je r-xdata
push edx
push eax
push ecx
call sub_10001da0
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0x20 ]
call sub_100019b0
mov ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10026280
cmp [ ebp - 0xc ] esi
jb r-xdata
xor bl bl
cmp [ ebp + 0x10 ] 0x0
je r-xdata
js r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
jb r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
call sub_1003c10a
add esp 0x4
test bl bl
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
call sub_1003c10a
add esp 0x4
mov bl 0x1
jmp r-xdata
lea eax [ ebp - 0x30 ]
jmp r-xdata
xor edx edx
cmp eax ebx
setne dl
mov eax edx
test eax eax
mov esi [ ebp - 0x28 ]
push 0x0
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call sub_10038bb0
push eax
lea edx [ ebp - 0x3c ]
push edx
mov ecx esi
call sub_10025a90
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0xc ] 0x10
jb r-xdata
mov ecx [ ebp - 0x24 ]
cmp [ eax ] ecx
mov esi 0x10
sete bl
cmp [ ebp - 0xc ] esi
jb r-xdata
sub_10038f90
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x18 ] esi
xor edi edi
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
push 0x2c
mov [ esi + 0x10 ] edi
call sub_1003c1de
add esp 0x4
cmp eax edi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] edi
call [ r--data ]
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x30 ] r--data
call sub_1003c200
int3
mov [ esi + 0xc ] eax
mov [ eax ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0xc ]
mov bl 0x1
mov [ eax + 0x28 ] bl
mov ecx [ esi + 0xc ]
mov [ ecx + 0x29 ] bl
push 0x2c
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] edi
call sub_1003c1de
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] edi
call [ r--data ]
push r--data
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] r--data
call sub_1003c200
mov [ esi + 0x1c ] eax
mov [ eax ] eax
mov eax [ esi + 0x1c ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x1c ]
mov [ eax + 0x8 ] eax
mov edx [ esi + 0x1c ]
mov [ edx + 0x28 ] bl
mov eax [ esi + 0x1c ]
mov [ eax + 0x29 ] bl
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10039090
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10038ca0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_100390f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
sub_10039150
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
add esi 0x4
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
pop esi
pop ebp
retn 0x4
sub_10039180
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jge r-xdata
push rw-data
call [ InterlockedIncrement@IAT ]
xor eax eax
pop ebp
retn 0x8
push rw-data
call [ InterlockedDecrement@IAT ]
xor eax eax
pop ebp
retn 0x8
push 0x70
push r--data
push r--data
call [ r--data ]
add esp 0xc
sub_100391d0
push ebp
mov ebp esp
push esi
mov esi ecx
push rw-data
mov [ esi ] r--data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
push 0x3b
push r--data
push r--data
call [ r--data ]
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_10039220
push esi
mov esi ecx
push rw-data
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x0
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax esi
pop esi
retn
push 0xffffffff
call [ r--data ]
sub_10039250
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
sub_100392b0
push ebp
mov ebp esp
mov ax [ ebp + 0xc ]
xor ecx ecx
cmp cx ax
jge r-xdata
xor eax eax
pop ebp
retn 0xc
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
movzx ebx ax
lea ebx [ ebx ]
mov eax [ esi ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
push edi
call eax
add esi 0x4
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
sub_10039300
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x39 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x39 ] 0x0
je r-xdata
sub_10039320
mov eax ecx
mov edx [ eax ]
cmp [ edx + 0x39 ] 0x0
jne r-xdata
retn
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x39 ] 0x0
jne r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x39 ] 0x0
jne r-xdata
mov edx [ ecx ]
cmp [ edx + 0x39 ] 0x0
jne r-xdata
mov [ eax ] edx
mov ecx [ eax ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
retn
jmp r-xdata
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x39 ] 0x0
je r-xdata
mov ecx edx
mov edx [ ecx ]
cmp [ edx + 0x39 ] 0x0
je r-xdata
sub_10039370
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
push eax
mov [ ebp - 0x4 ] esi
call [ SysStringLen@IAT ]
mov edi [ esi + 0x3c ]
mov ebx eax
cmp edi [ esi + 0x40 ]
je r-xdata
mov ecx [ esi + 0x40 ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
push ecx
call [ SysStringLen@IAT ]
cmp ebx eax
jne r-xdata
add edi 0x4
cmp edi [ esi + 0x40 ]
jne r-xdata
mov ecx [ edi ]
mov esi [ ebp + 0xc ]
mov eax ebx
cmp ebx 0x4
jb r-xdata
test eax eax
je r-xdata
lea esp [ esp ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
cmp eax 0x1
jbe r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
je r-xdata
sub_10039420
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push ebx
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_10039370
mov edi [ eax ]
cmp edi [ esi + 0x40 ]
je r-xdata
lea eax [ ebp - 0x20 ]
push ebx
push eax
call sub_1001c470
mov eax [ ebp - 0x20 ]
mov edi 0x10
add esp 0x8
cmp [ ebp - 0xc ] edi
jae r-xdata
mov ecx [ edi ]
push ecx
call [ SysFreeString@IAT ]
mov edx [ esi + 0x40 ]
lea eax [ edi + 0x4 ]
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
push edi
call [ r--data ]
add esp 0xc
add [ esi + 0x40 ] 0xfffffffc
mov ecx [ esi + 0x50 ]
push eax
call sub_1003b480
cmp [ ebp - 0xc ] edi
pop edi
pop esi
pop ebx
jb r-xdata
lea eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x20 ]
push ecx
call sub_1003c10a
add esp 0x4
sub_100394c0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x3c ]
cmp edi [ esi + 0x40 ]
je r-xdata
mov ecx [ esi + 0x40 ]
mov edi [ esi + 0x3c ]
cmp edi ecx
je r-xdata
mov ebx [ SysFreeString@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x4
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call [ r--data ]
add esp 0xc
add ebx edi
mov [ esi + 0x40 ] ebx
mov ecx [ esi + 0x50 ]
push eax
call sub_1003b480
mov edx [ edi ]
push edx
call ebx
cmp [ ebp - 0xc ] 0x10
jb r-xdata
lea eax [ ebp - 0x20 ]
add edi 0x4
cmp edi [ esi + 0x40 ]
jne r-xdata
mov eax [ ebp - 0x20 ]
push eax
call sub_1003c10a
add esp 0x4
mov eax [ edi ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
call sub_1001c470
mov eax [ ebp - 0x20 ]
add esp 0x8
cmp [ ebp - 0xc ] 0x10
jae r-xdata
sub_10039570
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ esi + 0x40 ]
push edi
mov edi [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_10039370
cmp [ eax ] ebx
jne r-xdata
lea edx [ ebp - 0x20 ]
push edi
push edx
call sub_1001c470
mov eax [ ebp - 0x20 ]
mov edi 0x10
add esp 0x8
cmp [ ebp - 0xc ] edi
jae r-xdata
push edi
call [ SysAllocString@IAT ]
lea ecx [ ebp - 0x24 ]
push ecx
lea ecx [ esi + 0x3c ]
mov [ ebp - 0x24 ] eax
call sub_1000d370
mov ecx [ esi + 0x50 ]
push eax
call sub_1003b580
cmp [ ebp - 0xc ] edi
pop edi
pop esi
pop ebx
jb r-xdata
lea eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x20 ]
push eax
call sub_1003c10a
add esp 0x4
sub_10039600
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push esi
mov eax ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0xf
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x20 ] 0x0
lea esi [ eax + 0x1 ]
nop
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x20 ]
call sub_100019b0
push 0x1
push 0x0
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] 0x40
call sub_1000dc10
cmp eax 0xffffffff
je r-xdata
push 0xffffffff
push 0x0
lea edx [ ebp - 0x20 ]
push edx
lea ecx [ edi + 0x20 ]
call sub_100018c0
push 0x8
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_100015e0
xor eax eax
mov ecx eax
call sub_1003b170
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x20 ]
push eax
call sub_1003c10a
add esp 0x4
cmp [ ebp - 0xc ] 0x10
mov [ edi + 0x50 ] eax
pop edi
pop esi
jb r-xdata
sub_100396c0
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call sub_1001c470
lea ecx [ ebp - 0x58 ]
push esi
push ecx
call sub_1001c470
push 0x2
call sub_1003b8b2
add esp 0x14
mov esi eax
lea edx [ ebp - 0x58 ]
push edx
push esi
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
xor ebx ebx
mov [ esi ] 0x1
call sub_10025970
add esp 0xc
push eax
lea edx [ ebp - 0x3c ]
push edx
call sub_10025a50
add esp 0xc
cmp [ ebp - 0xc ] 0x10
jb r-xdata
push esi
call sub_1003c10a
mov eax [ ebp - 0x3c ]
add esp 0x4
cmp [ ebp - 0x28 ] 0x10
jae r-xdata
mov eax [ ebp - 0x20 ]
push eax
call sub_1003c10a
add esp 0x4
push 0x1
push eax
lea ecx [ ebp - 0x20 ]
push ecx
call sub_1001c200
add esp 0xc
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x3c ]
push eax
call [ SysAllocString@IAT ]
cmp [ ebp - 0xc ] 0x8
mov esi eax
jb r-xdata
mov eax [ eax ]
mov ecx [ edi ]
mov edx [ ecx + 0x10 ]
push esi
xor eax eax
push edi
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x20 ] ax
call edx
push esi
call [ SysFreeString@IAT ]
mov esi 0x10
cmp [ ebp - 0x28 ] esi
jb r-xdata
mov edx [ ebp - 0x20 ]
push edx
call sub_1003c10a
add esp 0x4
mov edi 0xf
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] bl
cmp [ ebp - 0x44 ] esi
jb r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_1003c10a
add esp 0x4
cmp [ ebp - 0x60 ] esi
mov [ ebp - 0x44 ] edi
pop edi
pop esi
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
pop ebx
jb r-xdata
mov ecx [ ebp - 0x58 ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x74 ]
push edx
call sub_1003c10a
add esp 0x4
sub_10039810
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov edi [ esi + 0x3c ]
mov [ ebp - 0x4 ] 0x2
cmp edi [ esi + 0x40 ]
je r-xdata
mov ecx [ esi + 0x40 ]
mov edi [ esi + 0x3c ]
cmp edi ecx
je r-xdata
mov ebx [ SysFreeString@IAT ]
mov edi [ esi + 0x50 ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call [ r--data ]
add esp 0xc
add ebx edi
mov [ esi + 0x40 ] ebx
mov eax [ edi ]
push eax
call ebx
add edi 0x4
cmp edi [ esi + 0x40 ]
jne r-xdata
mov eax [ esi + 0x3c ]
cmp eax ebx
je r-xdata
mov ecx edi
call sub_1003b1c0
push edi
call sub_1003c10a
add esp 0x4
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
cmp [ esi + 0x34 ] 0x10
jb r-xdata
push eax
call sub_1003c10a
add esp 0x4
mov [ esi + 0x34 ] 0xf
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] bl
add esi 0x8
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10005200
mov edx [ esi + 0x4 ]
push edx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x20 ]
push eax
call sub_1003c10a
add esp 0x4
sub_10039920
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x4 ]
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
pop edi
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax + 0x30 ]
push 0x1
mov ecx esi
call edx
sub_10039960
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
push 0x2c
mov [ esi + 0x10 ] ebx
call sub_1003c1de
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ebx
call [ r--data ]
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_1003c200
int3
mov [ esi + 0xc ] eax
mov [ eax ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0xc ]
mov al 0x1
mov [ ecx + 0x28 ] al
mov edx [ esi + 0xc ]
mov [ edx + 0x29 ] al
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] 0xf
mov [ esi + 0x20 ] bl
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x4c ] al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x54 ] eax
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10039a00
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10039810
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_10039a30
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
sub_10039ab0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x3f
ja r-xdata
mov eax 0x80004005
pop edi
pop ebp
retn 0x18
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp [ eax ] edi
jae r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
mov [ ecx ] 0x0
push ebx
mov [ edx ] 0x0
mov ebx [ eax ]
test ebx ebx
js r-xdata
pop ebx
xor eax eax
pop edi
pop ebp
retn 0x18
xor ecx ecx
inc ebx
lea eax [ edi + 0x1 ]
mov edx 0x2
mul edx
seto cl
push esi
mov [ ebp + 0x10 ] ebx
neg ecx
or ecx eax
push ecx
call sub_1003b8b2
mov esi eax
lea eax [ edi + edi + 0x2 ]
push eax
push 0x0
push esi
mov [ ebp + 0x14 ] eax
call sub_1003c20c
mov eax [ ebp + 0xc ]
add ebx ebx
push ebx
push eax
push esi
call sub_1003c110
add esp 0x1c
xor ecx ecx
push esi
mov [ ebx + esi ] cx
call [ SysAllocString@IAT ]
mov edx [ ebp + 0x18 ]
sub edi [ ebp + 0x10 ]
mov [ edx ] eax
mov eax [ ebp + 0x14 ]
push eax
push 0x0
push esi
movzx edi di
call sub_1003c20c
add ebx [ ebp + 0xc ]
movsx edi di
add edi edi
push edi
push ebx
push esi
call sub_1003c110
add esp 0x18
xor edx edx
push esi
mov [ edi + esi ] dx
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x1c ]
push esi
mov [ ecx ] eax
call sub_1003c116
add esp 0x4
pop esi
sub_10039bc0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ecx + 0xc ]
sub edi [ ecx + 0x8 ]
mov [ eax ] 0x0
sar edi 0x3
mov [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x18 ] edi
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ eax ] ecx
pop edi
sbb eax eax
neg eax
mov esp ebp
pop ebp
retn 0xc
push esi
mov esi [ ebp + 0xc ]
push ebx
pop ebx
pop esi
mov eax [ ecx + 0x18 ]
inc [ ebp - 0x4 ]
lea edx [ eax + 0x1 ]
mov [ ecx + 0x18 ] edx
mov edx [ ecx + 0x8 ]
mov ebx [ edx + eax * 8 ]
mov [ esi ] ebx
mov eax [ edx + eax * 8 + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x10 ]
inc [ eax ]
add esi 0x8
cmp [ ecx + 0x18 ] edi
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jae r-xdata
sub_10039c30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ ecx + 0x18 ] eax
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x8 ]
sar eax 0x3
cmp [ ecx + 0x18 ] eax
jb r-xdata
xor eax eax
pop ebp
retn 0x4
dec eax
mov [ ecx + 0x18 ] eax
mov eax 0x1
pop ebp
retn 0x4
sub_10039c70
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call [ r--data ]
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1003c200
lea eax [ ecx * 8 ]
push eax
call sub_1003c1de
add esp 0x4
test eax eax
jne r-xdata
sub_10039cd0
push esi
mov esi ecx
mov ecx [ esi ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi ]
mov [ ecx + 0x4 ] ecx
mov [ esi + 0x4 ] 0x0
cmp eax [ esi ]
je r-xdata
pop esi
retn
push edi
lea ebx [ ebx ]
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi ]
jne r-xdata
pop edi
sub_10039d10
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
cmp ecx edx
je r-xdata
pop ebp
retn
push esi
add ecx 0x8
add eax 0x8
mov [ ebp + 0x8 ] ecx
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_10039d40
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x18 ] edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
lea ecx [ ecx ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
add eax 0x8
lea esi [ ecx + 0x4 ]
push eax
mov eax [ esi ]
push eax
push ecx
mov ecx edi
call sub_10019460
mov ecx [ edi + 0x4 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebp + 0xc ] eax
jmp r-xdata
push r--data
call [ r--data ]
cmp eax [ ebp + 0x10 ]
je r-xdata
sub_10039dc9
mov esi [ ebp - 0x14 ]
cmp esi [ ebp + 0xc ]
je r-xdata
push 0x0
push 0x0
call sub_1003c200
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edi [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx edi
call sub_1000ec00
mov esi [ esi ]
cmp esi [ ebp + 0xc ]
jne r-xdata
sub_10039e10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x24 ]
mov eax [ ecx ]
push esi
lea esi [ ebx + 0x24 ]
mov [ ecx ] ecx
mov ecx [ esi ]
mov [ ecx + 0x4 ] ecx
push edi
mov [ esi + 0x4 ] 0x0
cmp eax [ esi ]
je r-xdata
mov ecx [ ebx + 0x30 ]
mov eax [ ecx ]
lea edi [ ebx + 0x30 ]
mov [ ecx ] ecx
mov ecx [ edi ]
mov [ ecx + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
cmp eax [ edi ]
je r-xdata
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
mov edi edi
cmp [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
mov edi edi
mov ebx [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax ebx
cmp ebx [ edi ]
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x14
mov ebx [ ebp + 0x14 ]
lea ecx [ ecx ]
push r--data
call [ r--data ]
int3
add [ ebp + 0xc ] 0x4
inc ecx
mov [ esi + 0x4 ] ecx
mov [ ebx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
inc eax
add ebx 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ ebp + 0x18 ]
jb r-xdata
mov ebx [ esi ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x4 ]
push eax
push ecx
push ebx
mov ecx esi
call sub_10019460
mov ecx [ esi + 0x4 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
mov esi [ edi ]
mov edx [ esi + 0x4 ]
push ebx
push edx
push esi
mov ecx edi
call sub_10019460
mov ecx [ edi + 0x4 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
sub_10039f20
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp eax 0x1fffffff
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
sar ecx 0x3
cmp ecx eax
jae r-xdata
push r--data
call [ r--data ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push eax
mov ecx edi
call sub_10039c70
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
push edx
push 0x0
mov ebx eax
mov eax [ esi + 0x4 ]
push edi
push ebx
push eax
push ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
call sub_10017c70
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0x18
sar edi 0x3
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebx + eax * 8 ]
lea edx [ ebx + edi * 8 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] edx
mov [ esi ] ebx
push eax
call sub_1003c10a
add esp 0x4
sub_10039ff0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
mov [ esi ] eax
sar edi 0x3
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x1fffffff
jbe r-xdata
lea ecx [ esi + 0xc ]
push edi
call sub_10039c70
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ eax + edi * 8 ]
lea edx [ esi + 0xc ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ecx
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
mov [ ebp - 0x4 ] 0x0
call sub_10039d10
add esp 0x14
mov [ esi + 0x4 ] eax
push r--data
call [ r--data ]
sub_1003a0c0
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
push edi
sub eax esi
mov edi 0x1fffffff
sar eax 0x3
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x3
cmp eax edx
jbe r-xdata
push r--data
call [ r--data ]
pop edi
pop esi
pop ebp
retn 0x4
mov esi edx
shr esi 0x1
mov edi 0x1fffffff
sub edi esi
cmp edi edx
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_10039f20
mov edx eax
cmp edx eax
jae r-xdata
sub_1003a140
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
push edi
cmp ecx edx
je r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
je r-xdata
mov eax edx
cmp edx edx
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
pop edi
pop esi
retn
push eax
call sub_1003c10a
add esp 0x4
mov [ esi + 0xc ] ecx
lea ebx [ ebx ]
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
sub_1003a1a0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_1003a0c0
sub edi ecx
sar edi 0x3
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x8
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push 0x1
mov ecx esi
call sub_1003a0c0
mov eax [ esi ]
mov edx [ eax + edi * 8 ]
mov [ ecx ] edx
mov eax [ eax + edi * 8 + 0x4 ]
mov [ ecx + 0x4 ] eax
add [ esi + 0x4 ] 0x8
pop edi
pop esi
pop ebp
retn 0x4
sub_1003a220
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] 0x3f
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x64 ] ecx
jbe r-xdata
push ebx
push esi
push edi
push eax
lea edx [ ebp - 0x20 ]
push edx
xor ebx ebx
xor edi edi
call sub_1001c470
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
add esp 0x8
cmp eax 0x1
je r-xdata
mov eax 0x80004005
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x10
add ecx 0x24
push ecx
lea ecx [ ebp - 0x58 ]
call sub_1000f640
mov ecx [ ebp - 0x58 ]
mov esi [ ecx ]
cmp esi ecx
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ ebp - 0x58 ]
mov [ ecx + 0x4 ] ecx
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x54 ] ebx
cmp eax ecx
je r-xdata
lea ecx [ ecx ]
xor esi esi
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x6c ] esi
cmp edi esi
je r-xdata
push ecx
call sub_1003c10a
add esp 0x4
jmp r-xdata
push eax
call sub_1003b7b0
mov ecx [ ebp - 0x58 ]
mov edi eax
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x20 ]
push 0x1c
call sub_1003c1de
mov esi eax
xor edi edi
add esp 0x4
cmp esi edi
je r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
mov esi [ eax ]
push eax
call sub_1003c10a
mov ecx [ ebp - 0x58 ]
add esp 0x4
mov eax esi
cmp esi ecx
jne r-xdata
mov esi [ esi ]
cmp esi ecx
jne r-xdata
xor esi esi
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ esi + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
call sub_10039ff0
mov [ esi + 0x18 ] edi
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
cmp [ ebp - 0xc ] 0x10
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x50 ]
mov eax [ ebp - 0x20 ]
jae r-xdata
cmp [ ebp - 0xc ] 0x10
pop edi
pop esi
pop ebx
jb r-xdata
push ebx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0x64 ]
mov [ ecx ] esi
cmp ebx edi
je r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x20 ]
push edx
call sub_1003c10a
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
xor ebx ebx
mov [ ebp - 0x48 ] eax
call sub_1003b8b2
mov ecx [ ebp - 0x48 ]
push ecx
mov esi eax
push ebx
push esi
call sub_1003c20c
xor ecx ecx
add esp 0x10
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x44 ] ecx
cmp [ edi ] cl
je r-xdata
push esi
call sub_1003c116
mov ebx [ ebp - 0x74 ]
add esp 0x4
mov eax 0x1
sub eax edi
mov [ ebp - 0x40 ] eax
nop
sub ecx ebx
mov [ ecx + esi ] al
cmp al 0x4
jg r-xdata
mov al [ edi ]
cmp al 0x2
jl r-xdata
push 0x1
lea edx [ ebp - 0x3c ]
sub ecx ebx
push esi
push edx
mov [ ecx + esi ] 0x0
call sub_1001c200
mov eax [ ebp - 0x44 ]
add esp 0xc
add eax [ ebp - 0x2c ]
mov [ ebp - 0x44 ] eax
jne r-xdata
dec eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x60 ] 0x400
jmp r-xdata
mov ecx [ ebp - 0x4c ]
inc edi
inc ecx
cmp [ edi ] 0x0
mov [ ebp - 0x4c ] ecx
jne r-xdata
mov edx [ ebp - 0x3c ]
push edx
call sub_1003c10a
add esp 0x4
jmp r-xdata
movsx ax [ edi ]
xor ecx ecx
lea edx [ ebp - 0x60 ]
sub ax 0x2
mov [ ebp - 0x5a ] cx
push edx
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x5c ] ax
call sub_1003a1a0
mov eax [ ebp - 0x48 ]
push eax
push 0x0
push esi
call sub_1003c20c
mov ebx [ ebp - 0x40 ]
add esp 0xc
add ebx edi
cmp [ ebp - 0x28 ] 0x8
jb r-xdata
sub_1003a470
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003a140
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_1003a4a0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x30 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi + 0x30 ]
mov [ ecx + 0x4 ] ecx
mov [ esi + 0x34 ] 0x0
cmp eax [ esi + 0x30 ]
je r-xdata
mov eax [ esi + 0x30 ]
push eax
call sub_1003c10a
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi + 0x24 ]
mov [ ecx + 0x4 ] ecx
add esp 0x4
mov [ esi + 0x28 ] 0x0
cmp eax [ esi + 0x24 ]
je r-xdata
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi + 0x30 ]
jne r-xdata
mov eax [ esi + 0x24 ]
push eax
call sub_1003c10a
add esi 0x8
add esp 0x4
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10005200
mov ecx [ esi + 0x4 ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
nop
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi + 0x24 ]
jne r-xdata
sub_1003a580
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x4 ]
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
pop edi
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax + 0x20 ]
push 0x1
mov ecx esi
call edx
sub_1003a5c0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x1c ] esi
xor edi edi
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
push 0x2c
mov [ esi + 0x10 ] edi
call sub_1003c1de
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x18 ] edi
call [ r--data ]
push r--data
lea edx [ ebp - 0x40 ]
push edx
mov [ ebp - 0x40 ] r--data
call sub_1003c200
int3
mov [ esi + 0xc ] eax
mov [ eax ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x28 ] 0x1
mov ecx [ esi + 0xc ]
mov [ ecx + 0x29 ] 0x1
mov [ esi + 0x20 ] 0x2
push 0xc
mov [ ebp - 0x4 ] edi
mov [ esi + 0x28 ] edi
call sub_1003c1de
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x14 ] edi
call [ r--data ]
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_1003c200
mov [ esi + 0x24 ] eax
mov [ eax ] eax
mov eax [ esi + 0x24 ]
mov [ eax + 0x4 ] eax
push 0xc
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x34 ] edi
call sub_1003c1de
add esp 0x4
cmp eax edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] edi
call [ r--data ]
push r--data
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x28 ] r--data
call sub_1003c200
mov edx [ ebp + 0x8 ]
mov [ esi + 0x30 ] eax
mov [ eax ] eax
mov eax [ esi + 0x30 ]
mov [ eax + 0x4 ] eax
mov [ esi + 0x3c ] edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1003a700
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003a4a0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_1003a730
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
push r--data
push esi
call sub_100387b0
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x80004002
pop esi
pop ebp
retn 0xc
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
sub_1003a7b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push r--data
push eax
call sub_100387b0
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
xor eax eax
pop ebp
retn 0xc
sub_1003a800
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
sar eax 0x2
mov [ edi ] 0x0
xor esi esi
cmp [ ecx + 0x18 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp [ edi ] eax
pop edi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0xc
push ebx
nop
pop ebx
mov edx [ ecx + 0x18 ]
lea ebx [ edx + 0x1 ]
mov [ ecx + 0x18 ] ebx
mov ebx [ ecx + 0x8 ]
mov edx [ ebx + edx * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebx + esi * 4 ] edx
inc [ edi ]
inc esi
cmp [ ecx + 0x18 ] eax
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
sub_1003a860
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ ecx + 0x18 ] eax
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x8 ]
sar eax 0x2
cmp [ ecx + 0x18 ] eax
jb r-xdata
xor eax eax
pop ebp
retn 0x4
dec eax
mov [ ecx + 0x18 ] eax
mov eax 0x1
pop ebp
retn 0x4
sub_1003a890
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov esi [ eax ]
xor cl cl
cmp esi eax
je r-xdata
pop edi
mov al cl
pop esi
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0xc ]
pop ebx
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x8
mov esi [ esi ]
cmp esi [ edi ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x50 ]
push ebx
call sub_1003b7d0
test al al
jne r-xdata
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
sub_1003a8e0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_1001c470
mov eax [ esi + 0x34 ]
add esp 0x8
mov ebx 0x10
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x20 ]
cmp [ ebp - 0xc ] ebx
jae r-xdata
cmp eax 0x2
jne r-xdata
push eax
lea ecx [ esi + 0x44 ]
push ecx
mov ecx esi
call sub_1003a890
test al al
jne r-xdata
lea eax [ ebp - 0x20 ]
mov eax [ esi + 0x34 ]
cmp eax 0x1
je r-xdata
mov [ edi ] 0x1
cmp [ ebp - 0xc ] ebx
jb r-xdata
mov eax [ ebp - 0x20 ]
cmp [ ebp - 0xc ] ebx
jae r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x20 ]
push edx
push eax
lea eax [ esi + 0x38 ]
push eax
mov ecx esi
call sub_1003a890
test al al
je r-xdata
lea eax [ ebp - 0x20 ]
mov [ edi ] 0x0
cmp [ ebp - 0xc ] ebx
jb r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
jmp r-xdata
call sub_1003c10a
add esp 0x4
sub_1003a9a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x4 ]
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
pop edi
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax + 0x1c ]
push 0x1
mov ecx esi
call edx
sub_1003a9e0
push esi
push edi
mov edi ecx
mov esi [ edi + 0x8 ]
mov [ edi ] r--data
cmp esi [ edi + 0xc ]
je r-xdata
mov eax [ edi + 0x8 ]
xor esi esi
cmp eax esi
je r-xdata
push ebx
mov ebx [ SysFreeString@IAT ]
lea esp [ esp ]
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] esi
pop edi
pop esi
retn
push eax
call sub_1003c10a
add esp 0x4
mov eax [ esi ]
push eax
call ebx
add esi 0x4
cmp esi [ edi + 0xc ]
jne r-xdata
pop ebx
sub_1003aa30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x38 ]
mov eax [ ecx ]
push esi
lea esi [ ebx + 0x38 ]
mov [ ecx ] ecx
mov ecx [ esi ]
mov [ ecx + 0x4 ] ecx
push edi
mov [ esi + 0x4 ] 0x0
cmp eax [ esi ]
je r-xdata
mov ecx [ ebx + 0x44 ]
mov eax [ ecx ]
lea edi [ ebx + 0x44 ]
mov [ ecx ] ecx
mov ecx [ edi ]
mov [ ecx + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
cmp eax [ edi ]
je r-xdata
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
mov edi edi
cmp [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
mov edi edi
mov ebx [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax ebx
cmp ebx [ edi ]
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x14
mov ebx [ ebp + 0x14 ]
lea ecx [ ecx ]
push r--data
call [ r--data ]
int3
add [ ebp + 0xc ] 0x4
inc ecx
mov [ esi + 0x4 ] ecx
mov [ ebx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
inc eax
add ebx 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ ebp + 0x18 ]
jb r-xdata
mov ebx [ esi ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x4 ]
push eax
push ecx
push ebx
mov ecx esi
call sub_10019460
mov ecx [ esi + 0x4 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
mov esi [ edi ]
mov edx [ esi + 0x4 ]
push ebx
push edx
push esi
mov ecx edi
call sub_10019460
mov ecx [ edi + 0x4 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
sub_1003ab40
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003a9e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_1003ab70
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x50 ] ecx
call sub_1001c470
push 0x1c
call sub_1003c1de
xor esi esi
add esp 0xc
cmp eax esi
je r-xdata
mov [ ebp - 0x40 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax + 0x10 ] esi
mov [ eax + 0x18 ] esi
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ edi + 0x38 ]
push ebx
mov ebx [ eax ]
mov [ ebp - 0x48 ] ebx
cmp ebx eax
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ edi + 0x34 ]
cmp eax 0x1
je r-xdata
pop ebx
lea ebx [ ebx ]
cmp [ ebp - 0xc ] 0x10
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x50 ]
pop edi
mov [ ecx ] eax
pop esi
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp - 0x20 ]
push edx
call sub_1003c10a
add esp 0x4
push eax
call sub_1003b7f0
cmp eax esi
je r-xdata
lea eax [ ebp - 0x20 ]
mov ebx [ ebx ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x48 ] ebx
cmp ebx [ edx + 0x38 ]
jne r-xdata
push 0x1
push eax
lea ecx [ ebp - 0x3c ]
push ecx
call sub_1001c200
mov esi 0x8
add esp 0xc
cmp [ eax + 0x14 ] esi
jb r-xdata
cmp [ ebp - 0xc ] 0x10
mov eax [ ebx + 0x8 ]
mov ecx [ eax + 0x50 ]
mov eax [ ebp - 0x20 ]
jae r-xdata
push eax
call [ SysAllocString@IAT ]
mov edi eax
cmp [ ebp - 0x28 ] esi
jb r-xdata
mov eax [ eax ]
mov esi [ ebp - 0x40 ]
mov eax [ esi + 0xc ]
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] edi
cmp ecx eax
jae r-xdata
mov edx [ ebp - 0x3c ]
push edx
call sub_1003c10a
add esp 0x4
mov ecx [ esi + 0x10 ]
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x8 ]
cmp edx ecx
ja r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov edx [ esi + 0x8 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
ja r-xdata
mov edi ecx
mov ecx [ esi + 0x10 ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
add [ esi + 0xc ] 0x4
xor esi esi
mov [ eax ] edi
push r--data
call [ r--data ]
int3
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
ja r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov edx [ esi + 0x8 ]
mov ecx [ edx + edi * 4 ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
lea ecx [ esi + 0x8 ]
call sub_1001c820
mov ebx [ ebp - 0x48 ]
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
lea ecx [ esi + 0x8 ]
call sub_1001c820
mov ebx [ ebp - 0x48 ]
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1003ad70
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor ebx ebx
mov edi 0xf
mov eax esi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x20 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_100019b0
push ebx
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] bl
call sub_100019b0
push 0x1
push ebx
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x5c ] 0x40
call sub_1000dc10
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov esi 0x10
mov ecx [ ebp - 0x10 ]
push ecx
lea edx [ esi + 0x1 ]
push edx
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
call sub_100018c0
push 0xffffffff
push ebx
lea ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebp - 0x3c ]
call sub_100018c0
mov edx [ ebp - 0x10 ]
push edx
push esi
lea ecx [ ebp - 0x20 ]
call sub_100015e0
mov esi 0x10
cmp [ ebp - 0x44 ] esi
jb r-xdata
cmp [ ebp - 0xc ] esi
mov [ ebp - 0x28 ] edi
pop edi
pop esi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] bl
pop ebx
jb r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
call sub_1003c10a
add esp 0x4
cmp [ ebp - 0x28 ] esi
jb r-xdata
mov eax [ ebp - 0x58 ]
push eax
call sub_1003c10a
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1003c1ea
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x20 ]
push edx
call sub_1003c10a
add esp 0x4
sub_1003ae80
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x38 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi + 0x38 ]
mov [ ecx + 0x4 ] ecx
xor ebx ebx
mov [ esi + 0x3c ] ebx
cmp eax [ esi + 0x38 ]
je r-xdata
mov ecx [ esi + 0x44 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi + 0x44 ]
mov [ ecx + 0x4 ] ecx
mov [ esi + 0x48 ] ebx
cmp eax [ esi + 0x44 ]
je r-xdata
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi + 0x38 ]
jne r-xdata
mov ecx [ esi + 0x44 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi + 0x44 ]
mov [ ecx + 0x4 ] ecx
mov [ esi + 0x48 ] ebx
cmp eax [ esi + 0x44 ]
je r-xdata
mov edi edi
mov eax [ esi + 0x44 ]
push eax
call sub_1003c10a
mov ecx [ esi + 0x38 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi + 0x38 ]
mov [ ecx + 0x4 ] ecx
add esp 0x4
mov [ esi + 0x3c ] ebx
cmp eax [ esi + 0x38 ]
je r-xdata
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi + 0x44 ]
jne r-xdata
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi + 0x44 ]
jne r-xdata
mov eax [ esi + 0x38 ]
push eax
call sub_1003c10a
add esi 0x8
add esp 0x4
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_10005200
mov ecx [ esi + 0x4 ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
mov edi [ eax ]
push eax
call sub_1003c10a
add esp 0x4
mov eax edi
cmp edi [ esi + 0x38 ]
jne r-xdata
sub_1003afb0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x4 ]
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
pop edi
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax + 0x24 ]
push 0x1
mov ecx esi
call edx
sub_1003aff0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x1c ] esi
xor edi edi
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
push 0x2c
mov [ esi + 0x10 ] edi
call sub_1003c1de
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x18 ] edi
call [ r--data ]
push r--data
lea edx [ ebp - 0x40 ]
push edx
mov [ ebp - 0x40 ] r--data
call sub_1003c200
int3
mov [ esi + 0xc ] eax
mov [ eax ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0xc ]
mov ebx 0x1
mov [ eax + 0x28 ] bl
mov ecx [ esi + 0xc ]
mov [ ecx + 0x29 ] bl
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x34 ] ebx
push 0xc
mov [ ebp - 0x4 ] edi
mov [ esi + 0x3c ] edi
call sub_1003c1de
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x14 ] edi
call [ r--data ]
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_1003c200
mov [ esi + 0x38 ] eax
mov [ eax ] eax
mov eax [ esi + 0x38 ]
mov [ eax + 0x4 ] eax
push 0xc
mov [ ebp - 0x4 ] bl
mov [ esi + 0x48 ] edi
call sub_1003c1de
add esp 0x4
cmp eax edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] edi
call [ r--data ]
push r--data
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x28 ] r--data
call sub_1003c200
mov edx [ ebp + 0x8 ]
mov [ esi + 0x44 ] eax
mov [ eax ] eax
mov eax [ esi + 0x44 ]
mov [ eax + 0x4 ] eax
mov [ esi + 0x50 ] edx
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1003b140
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003ae80
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
sub_1003b170
push esi
mov esi ecx
push 0x7d0
mov [ esi ] 0x1f4
call [ r--data ]
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] eax
mov eax esi
pop esi
retn
mov ecx [ esi + 0x4 ]
mov [ ecx + eax * 4 ] 0x0
inc eax
cmp eax [ esi ]
jl r-xdata
mov eax esi
pop esi
retn
sub_1003b1c0
push ebp
mov ebp esp
sub esp 0x8
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
mov [ edi ] 0x0
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
push ebx
mov ebx [ r--data ]
mov [ ebp - 0x4 ] eax
cmp [ edi ] eax
jle r-xdata
mov edx [ edi + 0x4 ]
push edx
call ebx
add esp 0x4
pop ebx
push esi
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ edi ]
jl r-xdata
lea ecx [ ecx ]
mov ecx [ edi + 0x4 ]
mov esi [ ecx + eax * 4 ]
test esi esi
je r-xdata
pop esi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call ebx
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call ebx
add esp 0x4
push esi
call ebx
add esp 0x4
mov esi edi
test edi edi
jne r-xdata
push eax
call ebx
add esp 0x4
mov eax [ esi + 0x10 ]
mov edi [ esi + 0x4 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub_1003b250
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
cmp [ ecx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x8
mov [ edx ] 0x0
xor eax eax
pop ebp
retn 0x8
jmp r-xdata
mov al [ ecx ]
cmp al 0x2
jl r-xdata
mov [ edx ] al
inc edx
cmp al 0x4
jle r-xdata
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_1003b290
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ecx ]
mov cl [ eax ]
test cl cl
je r-xdata
or eax 0xffffffff
pop ebp
retn 0xc
cmp [ eax ] 0x1
jne r-xdata
cmp cl 0x1
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
inc eax
mov [ edx ] 0x0
mov cl [ eax ]
test cl cl
je r-xdata
inc eax
mov [ edx ] cl
mov cl [ eax ]
inc edx
test cl cl
jne r-xdata
mov [ esi ] 0x0
inc eax
mov [ esi ] cl
mov cl [ eax ]
inc esi
test cl cl
jne r-xdata
sub_1003b2f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
xor ecx ecx
test eax eax
jle r-xdata
xor al al
pop esi
pop ebp
retn 0x4
nop
inc ecx
cmp ecx eax
jl r-xdata
cmp dl 0x4
jle r-xdata
mov dl [ ecx + esi ]
cmp dl 0x2
jl r-xdata
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_1003b330
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
mov bl 0x53
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
xor edx edx
test eax eax
jle r-xdata
push edi
call sub_1003b2f0
test al al
mov al 0x48
jne r-xdata
nop
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov al bl
pop edi
pop esi
mov al 0x4d
pop ebx
pop ebp
retn 0x4
inc edx
cmp edx eax
jl r-xdata
cmp [ edx + edi ] 0x1
je r-xdata
sub_1003b380
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movsx edx [ esi ]
xor eax eax
test edx edx
je r-xdata
xor edx edx
div [ ecx ]
pop esi
mov eax edx
pop ebp
retn 0x4
imul eax eax 0x1003f
inc esi
add eax edx
movsx edx [ esi ]
test edx edx
jne r-xdata
sub_1003b3b0
push ebp
mov ebp esp
push ebx
mov ebx [ ecx + 0x4 ]
push esi
push edi
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0x8 ]
movsx edx [ edi ]
xor eax eax
mov esi edi
test edx edx
je r-xdata
xor edx edx
div [ ecx ]
mov eax [ ebx + edx * 4 ]
test eax eax
je r-xdata
nop
mov dl [ ebp + 0xc ]
imul eax eax 0x1003f
inc esi
add eax edx
movsx edx [ esi ]
test edx edx
jne r-xdata
cmp [ eax + 0x1 ] 0x0
jne r-xdata
cmp dl 0x4d
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] dl
jne r-xdata
mov ecx [ eax + 0x10 ]
mov esi edi
cmp dl 0x48
je r-xdata
mov ecx [ eax + 0x8 ]
mov esi edi
mov edi edi
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
cmp [ eax + 0x1 ] cl
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ esi + 0x1 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ esi + 0x1 ]
jne r-xdata
je r-xdata
test ecx ecx
jne r-xdata
add ecx 0x2
add esi 0x2
test bl bl
jne r-xdata
test ecx ecx
add ecx 0x2
add esi 0x2
test bl bl
jne r-xdata
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
sub_1003b480
push ebp
mov ebp esp
sub esp 0xc
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
mov [ ebp - 0x4 ] ecx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push ebx
mov ebx [ r--data ]
push esi
sub eax edx
lea esi [ eax + 0x1 ]
push 0x1
push esi
call ebx
push 0x1
push esi
mov [ ebp + 0x8 ] eax
call ebx
mov [ ebp - 0xc ] eax
mov eax edi
add esp 0x10
mov [ ebp - 0x8 ] 0x53
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
xor ecx ecx
test eax eax
jle r-xdata
mov ebx [ ebp - 0x4 ]
push edi
mov ecx ebx
call sub_1003b2f0
test al al
je r-xdata
cmp [ ecx + edi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
mov eax edi
sub edx edi
lea esp [ esp ]
push edi
lea edx [ ebp + 0x8 ]
push edx
mov ecx ebx
mov [ ebp - 0x8 ] 0x48
call sub_1003b250
push edi
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x4d
call sub_1003b290
mov ebx [ ebp - 0x4 ]
jmp r-xdata
inc ecx
cmp ecx eax
jl r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov edi [ r--data ]
test esi esi
je r-xdata
cmp [ eax + 0x1 ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
push esi
mov ecx ebx
call sub_1003b3b0
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
push esi
call edi
add esp 0x4
mov [ eax + 0x1 ] 0x1
mov al 0x1
pop edi
mov esp ebp
pop ebp
retn 0x4
push eax
call edi
add esp 0x4
sub_1003b580
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
push edi
mov [ ebp - 0xc ] ecx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ r--data ]
sub eax edx
lea edi [ eax + 0x1 ]
push 0x1
push edi
call ebx
push 0x1
push edi
mov [ ebp - 0x8 ] eax
call ebx
push 0x1
push edi
mov [ ebp + 0x8 ] eax
call ebx
mov edi eax
mov eax [ ebp - 0x8 ]
add esp 0x18
mov [ ebp - 0x4 ] edi
test eax eax
je r-xdata
mov esi [ r--data ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test edi edi
je r-xdata
push eax
call esi
add esp 0x4
mov esi [ r--data ]
push eax
call esi
add esp 0x4
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
call esi
add esp 0x4
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x14
push 0x1
call ebx
mov edx [ ebp - 0x8 ]
mov edi eax
add esp 0x8
mov [ edi + 0x10 ] edx
mov eax esi
sub edx esi
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov ebx [ ebp - 0xc ]
push esi
mov ecx ebx
call sub_1003b330
mov [ edi ] al
cmp al 0x48
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
lea edx [ ebp + 0x8 ]
mov [ edi + 0x8 ] ecx
push edx
mov ecx ebx
call sub_1003b250
mov ecx [ ebp - 0x4 ]
mov [ edi + 0xc ] ecx
sub ecx esi
cmp al 0x4d
je r-xdata
mov al [ esi ]
mov [ ecx + esi ] al
inc esi
test al al
jne r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx ebx
call sub_1003b380
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x1 ] 0x0
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push esi
lea edx [ ebp - 0x4 ]
mov [ edi + 0x8 ] eax
push edx
lea eax [ ebp + 0x8 ]
mov [ edi + 0xc ] ecx
push eax
mov ecx ebx
call sub_1003b290
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edi + 0x8 ] edx
sub edx esi
cmp al 0x53
mov eax esi
je r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ edi + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ edi + 0xc ] ecx
sub ecx esi
mov ecx [ ebp - 0x4 ]
mov [ edi + 0xc ] ecx
sub ecx esi
mov edx [ ebp - 0x8 ]
mov [ esi + 0x1 ] 0x0
mov esi [ r--data ]
push edx
call esi
mov eax [ ebp + 0x8 ]
push eax
call esi
mov ecx [ ebp - 0x4 ]
push ecx
call esi
push edi
call esi
add esp 0x10
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
nop
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov al [ esi ]
mov [ ecx + esi ] al
inc esi
test al al
jne r-xdata
jmp r-xdata
mov al [ esi ]
mov [ ecx + esi ] al
inc esi
test al al
jne r-xdata
jmp r-xdata
mov [ esi + 0x4 ] edi
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi eax
mov ecx [ esi + 0x10 ]
mov eax [ edi + 0x10 ]
nop
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_1003b7b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x48
push eax
call sub_1003b3b0
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ eax + 0xc ]
pop ebp
retn 0x4
sub_1003b7f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x4d
push eax
call sub_1003b3b0
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ eax + 0xc ]
pop ebp
retn 0x4
sub_1003b825
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_1003c1de
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_1003b84f
push 0x4
mov eax r-xdata
call sub_1003c869
push 0x0
lea ecx [ ebp - 0x10 ]
call [ r--data ]
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_1003b80f
push esi
call sub_1003c10a
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call [ r--data ]
call sub_1003c89c
retn
sub_1003b8c0
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov [ esi ] r--data
mov eax [ esi + 0xc ]
mov edi [ CloseHandle@IAT ]
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
test [ esp + 0x20 ] 0x1
je r-xdata
cmp eax 0xffffffff
je r-xdata
push eax
call edi
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
push esi
call sub_1003c10a
add esp 0x4
push eax
call edi
sub_1003b970
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0xffffffff
push ebx
push ebx
push 0x1
push ebx
mov [ esp + 0x38 ] ebx
call [ CreateEventA@IAT ]
cmp eax ebx
jne r-xdata
mov [ esi + 0xc ] eax
inc [ esi + 0x4 ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi ] r--data
mov [ esi + 0x18 ] bl
mov eax esi
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x20
retn
lea ecx [ esp + 0x10 ]
call sub_1003c000
push r--data
lea eax [ esp + 0x14 ]
push eax
call sub_1003c200
sub_1003ba10
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push eax
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x4 ]
nop
mov eax [ eax + 0xc ]
retn
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_1003ba70
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x20
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] eax
mov ecx eax
mov [ ebp - 0x4 ] 0x1
call sub_1003b970
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] r--data
call [ r--data ]
push r--data
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x28 ] r--data
call sub_1003c200
sub_1003bb20
mov eax [ esp + 0x4 ]
push ebx
push edi
mov edi ecx
mov ecx [ eax ]
mov [ edi ] ecx
mov ebx [ eax + 0x4 ]
cmp ebx [ edi + 0x4 ]
je r-xdata
mov eax edi
pop edi
pop ebx
retn 0x4
test ebx ebx
je r-xdata
push esi
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x4 ]
mov eax 0x1
[ edx ] eax
mov [ edi + 0x4 ] ebx
pop esi
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
sub_1003bb90
push esi
mov esi [ ecx ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x0
mov ecx esi
call eax
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1003bbc0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov [ esi ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edx
test eax eax
je r-xdata
add eax 0x4
mov edx 0x1
[ eax ] edx
mov eax [ esp + 0x10 ]
mov eax esi
pop esi
retn 0x14
push edi
mov edi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
pop edi
mov eax esi
pop esi
retn 0x14
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
sub_1003bc40
mov eax [ rw-data ]
push edi
mov edi [ TlsGetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_1003ba70
push sub_1003b950
push rw-data
mov esi eax
call sub_10008f90
mov eax [ rw-data ]
add esp 0x8
push esi
push eax
call [ TlsSetValue@IAT ]
mov eax [ rw-data ]
pop esi
test eax eax
jne r-xdata
push eax
call edi
test eax eax
jne r-xdata
push eax
call edi
pop edi
retn
pop edi
retn
sub_1003bc90
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x14
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] eax
mov edx [ ebp + 0x14 ]
mov ecx [ edx ]
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ edx ]
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ edx ]
sub esp 0x8
mov esi esp
mov [ esi ] ecx
mov edx [ edx + 0x4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x20 ] esp
mov [ esi + 0x4 ] edx
test edx edx
je r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] r--data
call [ r--data ]
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
mov [ ebp - 0x2c ] r--data
call sub_1003c200
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
push ecx
mov ecx eax
call sub_1003bbc0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add edx 0x4
mov ecx 0x1
[ edx ] ecx
sub_1003bd80
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
call [ TlsGetValue@IAT ]
mov esi eax
xor esi esi
jmp r-xdata
mov [ esp + 0x20 ] 0xffffffff
test esi esi
je r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov [ esp + 0x14 ] esi
mov ebp [ HeapFree@IAT ]
mov [ esp + 0x20 ] 0x0
test esi esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x0
mov ecx esi
call edx
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebp
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax [ ebx + 0x4 ]
mov [ esi + 0x10 ] eax
mov ecx [ ebx ]
test ecx ecx
je r-xdata
push sub_1003b950
push rw-data
call sub_10008f90
mov eax [ rw-data ]
add esp 0x8
push 0x0
push eax
call [ TlsSetValue@IAT ]
mov edi [ esi + 0x14 ]
mov ecx [ edi + 0x10 ]
mov [ esi + 0x14 ] ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebp
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov edi [ ebx ]
mov edx [ edi ]
mov eax [ edx ]
push 0x0
mov ecx edi
call eax
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebp
mov ebx [ edi + 0x8 ]
test ebx ebx
je r-xdata
mov edx [ ecx ]
mov eax [ edi + 0xc ]
mov edx [ edx + 0x4 ]
push eax
call edx
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebp
cmp [ esi + 0x14 ] 0x0
jne r-xdata
lea eax [ ebx + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx ebx
call eax
lea ecx [ ebx + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov ecx ebx
call edx
sub_1003bf00
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
call sub_1003bc40
lea esi [ eax + 0x14 ]
push esi
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
call sub_1003bc90
add esp 0x10
mov [ esi ] eax
push eax
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esp + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
cmp [ esp + 0x28 ] 0x0
je r-xdata
mov esi [ esi + 0x10 ]
test esi esi
jne r-xdata
lea ecx [ esp + 0x1c ]
push ecx
lea ecx [ esi + 0x4 ]
call sub_1003bb20
mov edx [ esp + 0x24 ]
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi ] eax
je r-xdata
mov esi [ esp + 0x20 ]
mov [ esp + 0x10 ] 0xffffffff
test esi esi
je r-xdata
mov eax [ ecx ]
mov edx [ esi + 0xc ]
mov eax [ eax + 0x4 ]
push edx
call eax
sub_1003c0b7
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x2
push edi
mov edi ecx
je r-xdata
call sub_1003cd84
test [ ebp + 0x8 ] 0x1
je r-xdata
push esi
push sub_1003cd84
lea esi [ edi - 0x4 ]
push [ esi ]
push 0xc
push edi
call sub_1003c17a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
push edi
call sub_1003c10a
pop ecx
mov eax esi
pop esi
jmp r-xdata
push esi
call sub_1003c10a
pop ecx
pop edi
pop ebp
retn 0x4
sub_1003c11c
push 0x14
push r--data
call sub_1003c970
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003c9b5
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_1003c13f
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_1003c962
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003c9b5
retn 0x10
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_1003c17a
push 0xc
push r--data
call sub_1003c970
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003c1c5
call sub_1003c9b5
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_1003c21e
push 0x14
push r--data
call sub_1003c970
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call sub_1003cb00
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
mov esi [ EncodePointer@IAT ]
call esi
push eax
call sub_1003cafa
add esp 0xc
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003c2b6
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
jmp r-xdata
call sub_1003c9b5
retn
sub_1003c2d6
push 0x10
push r--data
call sub_1003c970
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003c323
call sub_1003c9b5
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_1003c350
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_1003c380
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1003c3c0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_1003c470
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1003c4da
push esi
push 0x80
call [ r--data ]
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
call sub_1003cb12
push sub_1003cb38
call sub_1003c2bf
mov [ esp ] sub_1003cb06
call sub_1003c2bf
pop ecx
xor eax eax
pop esi
retn
xor eax eax
inc eax
pop esi
retn
sub_1003c526
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor eax eax
push esi
push edi
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
xor eax eax
inc eax
mov ecx [ fs : 0x18 ]
mov ebx [ ecx + 0x4 ]
mov esi [ InterlockedCompareExchange@IAT ]
mov [ ebp + 0xc ] eax
push eax
mov edi rw-data
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ fs : 0x18 ]
dec [ rw-data ]
mov ebx [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
mov esi [ InterlockedCompareExchange@IAT ]
mov edi rw-data
jmp r-xdata
push ebx
push edi
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x0
push ebx
push edi
call esi
test eax eax
jne r-xdata
cmp eax ebx
je r-xdata
jmp r-xdata
cmp eax ebx
je r-xdata
jmp r-xdata
mov [ ebp + 0xc ] 0x1
push 0x3e8
call [ Sleep@IAT ]
push 0x0
mov eax [ rw-data ]
push 0x2
pop esi
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
push 0x3e8
call [ Sleep@IAT ]
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
push r--data
push r--data
mov [ rw-data ] 0x1
call sub_1003ccb2
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1f
call sub_1003ccb8
jmp r-xdata
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
push 0x1f
call sub_1003ccb8
pop ecx
jmp r-xdata
push r--data
push r--data
call sub_1003ccac
pop ecx
mov [ rw-data ] esi
xor ebx ebx
pop ecx
cmp [ ebp + 0xc ] ebx
jne r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ ebp - 0x4 ] eax
jne r-xdata
push [ rw-data ]
call esi
mov ebx eax
mov eax [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x8 ] ebx
cmp [ rw-data ] ebx
je r-xdata
push ebx
push edi
call [ InterlockedExchange@IAT ]
push eax
push edi
call [ InterlockedExchange@IAT ]
push [ ebp + 0xc ]
call [ r--data ]
pop ecx
call [ r--data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ ebx ] 0x0
je r-xdata
inc [ rw-data ]
jmp r-xdata
push rw-data
call sub_1003cbf0
pop ecx
test eax eax
je r-xdata
sub ebx 0x4
cmp ebx [ ebp + 0xc ]
jb r-xdata
call [ r--data ]
cmp [ ebx ] eax
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call [ rw-data ]
push [ ebx ]
call esi
mov [ ebp - 0x8 ] eax
call [ r--data ]
mov [ ebx ] eax
call [ ebp - 0x8 ]
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x8 ] eax
call esi
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x8 ] eax
mov ebx eax
jmp r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
sub_1003c730
push 0x10
push r--data
call sub_1003c970
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ rw-data ] esi
mov [ ebp - 0x4 ] eax
cmp esi ecx
jne r-xdata
cmp esi eax
je r-xdata
cmp [ rw-data ] ecx
jne r-xdata
mov eax [ r--data ]
cmp eax ecx
je r-xdata
cmp esi 0x2
jne r-xdata
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_1003ccc4
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003c83b
mov eax [ ebp - 0x1c ]
call sub_1003c9b5
retn
push edi
push esi
push ebx
call sub_1003c526
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_1003c526
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_1003ccc4
push edi
push 0x0
push ebx
call sub_1003c526
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
sub_1003c846
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_1003c730
pop ecx
pop ebp
retn 0xc
call sub_1003cce8
sub_1003c869
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1003c8b0
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1003c970
push sub_1003c9c9
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1003c9c9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_1003c1ea
push rw-data
call sub_1003cd8a
add esp 0x18
pop ebp
retn
sub_1003c9ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1003cd90
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1003cd90
pop ecx
sub_1003cb12
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1003cb38
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1003cb60
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_1003cba0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1003cbf0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1003c9c9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_1003cb60
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_1003cba0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1003ccc4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
xor eax eax
inc eax
pop ebp
retn 0xc
cmp [ r--data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ DisableThreadLibraryCalls@IAT ]
sub_1003cce8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_100425a0
lea ecx [ ebp - 0x48 ]
jmp r-xdata
popfd
cli
int1
js r-xdata
int3
scasd [ edi ]
insw
cli
mov [ esi ] dl
cli
outsd
add esp [ ebx ]
ja r-xdata
daa
inc ebp
jae r-xdata
int1
push edi
imul esi [ 0x4c5f051e ] 0xffffffbf
cmp [ edx - 0x27efd497 ] 0x92d4e395
mov eax 0x77059461
xchg ebp eax
pushad
cmp al [ ebp - 0x72 ]
test eax 0xefbdbf6d
test eax 0x8e3877b9
push edi
popfd
mov bh [ 0x4c91687d ]
push cs
jmp r-xdata
shl bl 0x1
push ebp
dec ebx
fst [ esi - 0x2a110681 ]
js r-xdata
fcom [ ebp - 0x476d2b1d ]
popad
xchg esp eax
add eax 0x3a609577
inc ebp
mov gs [ ecx - 0x10424093 ]
fnstenv [ ecx ]
or al 0x4a
sbb [ ecx + 0x5acc3eb0 ] edi
push 0x55c7334a
pushfd
test [ ecx - 0x4c ] eax
out 0x74 al
test eax 0xbd3b9b52
je r-xdata
or [ edx - 0x58ac1538 ] bh
cmc
cmp al 0x25
mov eax [ 0x4d44654 ]
leave
xor bh [ ebx ]
fwait
pop ebp
nop
cld
shl [ eax - 0x12 ] cl
jl r-xdata
mov ch 0x5d
mov ebp 0xfa9dd280
fnstsw [ esi - 0x3d84f89 ]
aas
in al dx
pop ds
popad
pop edx
leave
mov esi [ eax + 0x7443f5b8 ]
jb r-xdata
jae r-xdata
xor bh [ ebp + 0xc22dd5f ]
sbb [ eax - 0x54c63baf ] 0x828bbad9
and edi eax
mov cl 0x5b
fnstcw [ esi ]
xor eax 0x77bedda7
mov al 0x27
cld
mov eax [ edi - 0x2c ]
loope r-xdata
push ebx
pop edi
test eax 0x60103e01
loope r-xdata
mov ds [ edi ]
insb
jo r-xdata
jbe r-xdata
movsd [ edi ] [ esi ]
pop ss
cmc
rcr [ edx - 0x3ab6915b ] 0x1f
fisttp [ edi - 0x166aac90 ]
sbb bh bl
aaa
rcl edi cl
mov esp 0x51863176
mov ecx ebx
xchg [ eax - 0x2f ] bl
mov dl 0x73
cmpsb [ esi ] [ edi ]
sbb esp eax
mov ecx 0x826d153
popfd
movsb [ edi ] [ esi ]
mov [ 0xffffffffdda735c1 ] eax
mov esi 0xfc27b077
pop edx
pop ebp
mov bl 0x1b
pop ecx
test [ ebx - 0x2d227e41 ] esi
out 0xc9 eax
mov [ edx - 0x46 ] al
sub_100432c0
push ebp
mov ebp esp
sub esp 0x10
push 0x48
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call [ r--data ]
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1003c200
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x44 ] al
mov edx [ rw-data ]
push sub_10043ac0
mov [ edx + 0x45 ] al
call sub_1003c2bf
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10043340
push ebp
mov ebp esp
sub esp 0x10
push 0x48
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call [ r--data ]
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1003c200
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x44 ] al
mov edx [ rw-data ]
push sub_10043a60
mov [ edx + 0x45 ] al
call sub_1003c2bf
add esp 0x4
mov esp ebp
pop ebp
retn
sub_100433d0
push ebp
mov ebp esp
sub esp 0x10
push 0x48
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call [ r--data ]
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1003c200
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x44 ] al
mov edx [ rw-data ]
push sub_10043b80
mov [ edx + 0x45 ] al
call sub_1003c2bf
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10043460
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
push 0x0
call [ CreateMutexW@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push sub_10043c20
call sub_1003c2bf
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x4
call sub_1003c1ea
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push r--data
push 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_10014040
push r--data
lea eax [ ebp - 0x30 ]
push eax
call sub_1003c200
sub_100434d0
push ebp
mov ebp esp
sub esp 0x10
push 0x2c
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call [ r--data ]
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1003c200
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x28 ] al
mov edx [ rw-data ]
push sub_10043c40
mov [ edx + 0x29 ] al
call sub_1003c2bf
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10043570
push ebp
mov ebp esp
sub esp 0x60
push esi
push edi
push 0x60
lea eax [ ebp - 0x60 ]
push 0x0
push eax
call sub_1003c20c
add esp 0xc
mov ecx 0x18
lea esi [ ebp - 0x60 ]
mov edi rw-data
[ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_100435b0
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
push esi
push edi
mov ecx 0x8
lea esi [ ebp - 0x20 ]
mov edi rw-data
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
[ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10043680
push ebp
mov ebp esp
sub esp 0x40
push esi
push edi
push 0x40
lea eax [ ebp - 0x40 ]
push 0x0
push eax
call sub_1003c20c
add esp 0xc
mov ecx 0x10
lea esi [ ebp - 0x40 ]
mov edi rw-data
[ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10043700
mov eax [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x0
mov [ eax ] rw-data
mov eax [ rw-data ]
mov ecx 0x1
add [ eax + 0x4 ] ecx
push r-xdata
mov [ rw-data ] ecx
mov [ rw-data ] r-xdata
mov [ rw-data ] r--data
call sub_1003c2bf
pop ecx
retn
mov [ eax + 0x8 ] rw-data
sub_10043760
mov eax [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x0
mov [ eax ] rw-data
mov eax [ rw-data ]
mov ecx 0x1
add [ eax + 0x4 ] ecx
push r-xdata
mov [ rw-data ] ecx
mov [ rw-data ] r-xdata
mov [ rw-data ] r--data
call sub_1003c2bf
pop ecx
retn
mov [ eax + 0x8 ] rw-data
sub_100437c0
mov eax [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x0
mov [ eax ] rw-data
mov eax [ rw-data ]
inc [ eax + 0x4 ]
push r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r--data
call sub_1003c2bf
pop ecx
retn
mov [ eax + 0x8 ] rw-data
sub_10043830
mov eax [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x0
mov [ eax ] rw-data
mov eax [ rw-data ]
inc [ eax + 0x4 ]
push sub_10043d10
mov [ rw-data ] r--data
call sub_1003c2bf
pop ecx
retn
mov [ eax + 0x8 ] rw-data
sub_10043890
mov eax [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x0
mov [ eax ] rw-data
mov eax [ rw-data ]
inc [ eax + 0x4 ]
push sub_10043d70
mov [ rw-data ] r--data
call sub_1003c2bf
pop ecx
retn
mov [ eax + 0x8 ] rw-data
sub_100438f0
mov eax [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x0
mov [ eax ] rw-data
mov eax [ rw-data ]
inc [ eax + 0x4 ]
push sub_10043dd0
mov [ rw-data ] r--data
call sub_1003c2bf
pop ecx
retn
mov [ eax + 0x8 ] rw-data
sub_10043970
mov eax [ rw-data ]
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x0
mov [ eax ] rw-data
mov eax [ rw-data ]
inc [ eax + 0x4 ]
push r-xdata
mov [ rw-data ] r--data
call sub_1003c2bf
pop ecx
retn
mov [ eax + 0x8 ] rw-data
sub_100439c0
push ebp
mov ebp esp
sub esp 0x10
push 0x3c
call sub_1003c1de
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call [ r--data ]
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_1003c200
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x38 ] al
mov edx [ rw-data ]
push sub_10044050
mov [ edx + 0x39 ] al
call sub_1003c2bf
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10043a60
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10005480
mov ecx [ rw-data ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10043ac0
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10005480
mov ecx [ rw-data ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10043b20
push ebp
mov ebp esp
push 0xffffffff
push sub_1003e88a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10012070
mov ecx [ rw-data ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10043b80
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10005480
mov ecx [ rw-data ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10043c40
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_10022030
mov ecx [ rw-data ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10043d10
mov eax [ rw-data ]
mov [ rw-data ] r--data
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov [ eax + 0x8 ] ecx
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
dec [ eax + 0x4 ]
retn
mov [ ecx + 0x4 ] eax
mov eax [ rw-data ]
dec [ eax + 0x4 ]
retn
sub_10043d70
mov eax [ rw-data ]
mov [ rw-data ] r--data
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov [ eax + 0x8 ] ecx
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
dec [ eax + 0x4 ]
retn
mov [ ecx + 0x4 ] eax
mov eax [ rw-data ]
dec [ eax + 0x4 ]
retn
sub_10043dd0
mov eax [ rw-data ]
mov [ rw-data ] r--data
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov [ eax + 0x8 ] ecx
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
dec [ eax + 0x4 ]
retn
mov [ ecx + 0x4 ] eax
mov eax [ rw-data ]
dec [ eax + 0x4 ]
retn
sub_10044050
push ebp
mov ebp esp
push 0xffffffff
push r-xdata
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_1000c3f0
mov ecx [ rw-data ]
push ecx
call sub_1003c10a
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10001000
mov [ ecx ] r--data
jmp [ r--data ]
sub_10001040
push ebp
mov ebp esp
mov dl [ ebp + 0xc ]
mov eax ecx
mov cx [ ebp + 0x8 ]
mov [ eax ] cx
mov cl [ ebp + 0x10 ]
mov [ eax + 0x2 ] dl
mov [ eax + 0x3 ] cl
mov [ eax + 0x4 ] 0x0
pop ebp
retn 0xc
sub_10001090
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov cx [ ecx + 0x4 ]
mov [ eax + 0x4 ] cx
pop ebp
retn 0x4
sub_10001130
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_10020000
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_10001150
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_10020070
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_10001170
call sub_1001fea0
mov eax [ eax + 0xc ]
retn
sub_10001180
call sub_1001fea0
mov eax [ eax + 0x10 ]
retn
j_sub_10020ac0
jmp sub_10020ac0
sub_100012e0
push 0x0
call sub_10020170
sub_100012f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_10020200
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001310
mov [ ecx ] r--data
retn
sub_10001320
mov eax ecx
mov [ eax ] r--data
retn
sub_10001330
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_100013a0
mov [ ecx ] r--data
retn
sub_100013b0
mov eax ecx
mov [ eax ] r--data
retn
sub_100013c0
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_10001430
mov [ ecx ] r--data
retn
sub_10001440
mov eax ecx
mov [ eax ] r--data
retn
sub_10001450
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_100014c0
mov [ ecx ] r--data
retn
sub_100014d0
mov eax ecx
mov [ eax ] r--data
retn
sub_100014e0
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_10001550
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call [ r--data ]
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001570
call sub_1001fea0
xor ecx ecx
cmp [ eax + 0xc ] ecx
sete al
retn
sub_100015d0
cmp [ ecx + 0x18 ] 0x10
lea eax [ ecx + 0x4 ]
jb r-xdata
retn
mov eax [ eax ]
sub_10001e20
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
call [ r--data ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
sub_10001e40
mov [ ecx ] r--data
retn
sub_10001e50
mov eax ecx
mov [ eax ] r--data
retn
sub_10001e60
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_10001ed0
mov eax ecx
mov [ eax ] r--data
retn
sub_10001ee0
mov [ ecx ] r--data
retn
sub_10001ef0
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_10001f00
mov eax ecx
retn 0x4
sub_10001f70
mov eax ecx
mov [ eax ] r--data
retn
sub_10001f80
mov [ ecx ] r--data
retn
sub_10001f90
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_10002030
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x4
sub_10002050
mov eax ecx
mov [ eax ] r--data
retn
sub_10002060
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_10002240
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_10002260
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x8
sub_10002280
mov eax ecx
mov ecx [ eax ]
movzx eax [ eax + 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
push eax
call edx
retn
sub_10002300
mov eax ecx
mov [ eax ] r--data
retn
sub_10002310
mov [ ecx ] r--data
retn
sub_10002320
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x0
pop ebp
retn 0x4
sub_10002360
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
pop ebp
retn 0x8
sub_10002370
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_10002580
mov eax ecx
cmp [ eax + 0x14 ] 0x8
jb r-xdata
retn
mov eax [ eax ]
sub_10002a00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] 0x8
mov [ ecx + 0x10 ] eax
jb r-xdata
mov [ ecx + eax * 2 ] dx
pop ebp
retn 0x4
mov ecx [ ecx ]
sub_10002a20
mov eax [ ecx + 0x4 ]
push eax
call sub_1003c10a
pop ecx
retn
sub_10002a50
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
retn
push eax
call [ r--data ]
pop ecx
sub_10002a60
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
retn
push eax
call [ r--data ]
pop ecx
sub_10003260
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov ebx 0x1
push ebx
push 0x4
add ecx eax
call [ r--data ]
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
_start
push ebp
mov ebp esp
inc esi
mov edx 0x3ebb
mov ch 0xb6
call sub_10003915
sub_10003a91
mov eax 0x6c9
mov dh 0x24
mov bh 0x8
dec ecx
dec edx
jmp sub_10003ab3
sub_10003ab3
cmp edx 0x4c
mov dh 0x3a
mov al 0x31
inc esi
and ebx 0x17
mov bh 0x87
sub edx 0x6b
pop ebx
xor edi 0xffffffd9
call sub_10003b48
sub_10003b48
call sub_10003b6e
sub_10003b6e
mov bl 0x8e
j_sub_10003b96
jmp sub_10003b96
sub_10003b96
add esi 0xffffffcb
call sub_10003be7
sub_10003be7
call sub_10003c23
sub_10003c23
call sub_10003c5d
sub_10003c30
mov eax 0xc78b1006
pop edi
mov [ esi + 0x44 ] ebx
mov [ esi + 0x4c ] ecx
pop esi
pop ebx
retn
sub_10003c5d
inc esi
call j_sub_10003cd3
j_sub_10003cd3
jmp sub_10003cd3
sub_10003cd3
mov al 0x57
mov dl 0xd5
xor esi 0xffffffd1
push esp
dec ebx
mov dl 0xde
xor ecx 0xffffffe0
mov dl 0x38
mov cl 0x15
call sub_10003d28
sub_10003d28
inc edi
jmp sub_10003dab
sub_10003dab
push ebp
dec ebx
cmp edi 0x18
call sub_10003e33
sub_10003e6c
or cl ch

sub_10003fea
call sub_1000403c
sub_100040ec
add edi 0xd
call sub_10004167
sub_10004167
call sub_100041c1
sub_10004297
mov edi 0x5064
mov ebx 0x58ca
mov cl 0xad
call sub_100042eb
sub_100042eb
push esp
call sub_10004344
sub_10004344
add al 0xe7
mov al 0x7a
add eax 0x7dab
mov bh 0xee
mov al 0xc8
inc esi
inc edi
or esi 0x75
call sub_10004377
sub_10004360
push edi
call sub_10002600
mov ecx [ ebp - 0xc ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp sub_100043cb
sub_10004377
mov ah 0xd0
inc eax
xor ebx 0xffffffb3
xor eax 0xffffffb8
mov ebx 0x912
inc eax
sub ebx 0xffffff9a
cmp esp 0xffffffa7
add al 0x50
inc ebx
xor edx 0x4a
call sub_10004417
sub_10004417
mov bh 0x94
add edx 0xffffffeb
push edx
cmp esp 0xffffffc3
add eax 0x3bef
mov bh 0xa4
call sub_1000443b
sub_1000443b
dec ebx
call sub_100044a3
sub_100044a3
add edx 0xffffff9e
inc edx
add al 0x4d
call j_sub_10004545
j_sub_10004545
jmp sub_10004545
sub_100045fd
inc esi
inc ebx
mov eax 0x755b
jmp r-xdata
jmp sub_100046d6
sub_100046d6
mov al 0x55
or esi 0x34
dec esi
call sub_100046fd
sub_100046fd
dec edx
mov bh 0x63
or dh 0x9a
mov bh 0x78
mov ecx 0x2b69
dec edx
xor esi 0x60
mov edi 0x46dd
sub edx 0xffffffd3
jmp sub_1000476d
sub_1000476d
pop ebx
dec esi
mov eax 0x4fa7
dec esi
mov eax 0x7b5
add eax 0x38
pop ebx
add eax 0x4f52
call j_sub_100047d7
j_sub_100047d7
jmp sub_100047d7
sub_100047d7
call sub_1000482d
sub_1000482d
mov eax 0x72d0
or eax 0x78
and ecx 0xffffff87
mov bl 0xa
call sub_10004892
sub_10004892
push ecx
push eax
push ecx
jmp r-xdata
call sub_10004950
sub_10004950
mov dh 0x69
push ecx
dec edi
sub esi 0xffffffbc
mov edi 0x5fa0
sub di 0x1d
sub_10004960
dec esi
mov bl 0x22
add eax 0xb08
add al 0x48
push ecx
call sub_10004985
sub_10004985
mov edx 0x3468
mov bh 0x64
dec eax
jmp r-xdata
or al 0xb
inc eax
mov bl 0x7b
dec eax
add ebx 0x12
cmp ecx 0xffffffcd
call sub_100049ff
sub_100049ff
cmp esi 0x52
add eax 0x16b1
inc esi
mov edx 0x1f38
inc ebx
inc edi
mov edi 0x4bac
mov bl 0x3b
dec eax
call sub_10004a5e
sub_10004a5e
or esi 0xfffffffa
mov edx 0x32a3
call sub_10004a72
sub_10004a72
add al 0xe3
mov bh 0xf8
sub esi 0x7a
call sub_10004a8c
sub_10004a8c
push ebx
push edx
or esi 0xffffffd0
call sub_10004aa8
sub_10004aa8
cmp edx 0xffffffc4
mov ebx 0x52b5
add al 0xde
mov ecx 0x7a2b
add al 0x99
nop
dec ebx
call sub_10004b19
sub_10004b19
mov dh 0x34
mov edi 0x327
add edx 0x6d
call sub_10004b4e
sub_10004b4e
mov ebx 0x2ab5
dec edi
push eax
add al 0x54
add eax 0xffffffcc
call sub_10004b96
sub_10004d1e
adc al 0xc6
inc eax
inc esp
add [ esi - 0x3a ] edx
inc esi
inc esp
add al ch
retn
sub_1000500b
or esi 0xffffffdd
add ebx 0xffffff95
jmp r-xdata
jmp sub_100050ac
sub_10005019
dec [ ebx + 0x8458b08 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_10005122
dec [ ebx - 0xbb2743a ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1000514f
dec eax
jmp sub_10005198
sub_10005180
push esi
lea esi [ ecx + 0x68 ]
mov ecx esi
call sub_10004ac0
sub_1000519e
push ecx
add al 0x10
add esp 0x4
pop esi
retn
sub_100051b0
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x68 ]
lea esi [ edi + 0x68 ]
mov ecx esi
call sub_10004ac0
sub_1000527b
call sub_100054b5
jmp sub_10005585
sub_10005575
push ebp
mov ebp esp
call $+5
pop eax
mov esp ebp
pop ebp
retn
sub_10008970
stc
mov es [ ecx + edx * 4 + 0x27120db8 ]
stosd [ edi ]
in eax 0xb4
mov fs [ ebx ]
push 0xae698641
pop [ fs : ecx - 0x30c12bd1 ]
0x97ab
sub_10009070
xchg dh bh
mov [ ecx + 0xd9a266c ] ds
mov ebp 0x2164dbad
adc cl 0x87
jmp sub_1000901a
sub_1000bfd0
and dl 0xc8
scasd [ edi ]
mov ebp 0x76c1e8fd
and eax 0x6b0fc249
or ch [ edx ]
sbb eax 0x986de858
fstp [ edx - 0x4599ac92 ]
push ecx
cmp dh al
frstor [ esp - 0xb ]
mov [ edx ] ds
sub_1000c320
inc esi
xchg edx eax
cmpsd [ esi ] [ edi ]
int3
sub_1000cdb0
mov dh 0x7a
pop ebx
0xbdc0
sub_1000db30
sub_1000e130
or [ cs : eax + eax * 2 ] 0x32d24432
mov ecx 0xb85ce22a
dec ebx
mov ebp 0x2cf49a53
loopne r-xdata
adc edi [ ebp - 0x60d243da ]
push es
0x3f2698e8 0xd837
sub_1000eb50
pop eax
rcl [ edx + ebx * 2 ] 0xe8
inc ebp
sub_1000ec00
cmp bl cl
push es
jmp [ ebx + 0x12 ]
sub_10010a30
[ ebp + 0x405dcad7 ] al
mov ah 0x9f
stosd [ edi ]
sahf
mov [ ebx + 0x1a ] esp
sub_10011930
xor [ ecx + eax * 4 ] ch
pop ds
outsb
dec ebx
mov ebx 0xea06302d
mov al [ 0xffffffff86372698 ]
enter 0xed34 0xf7
test esi edx
sub_100122d0
fstp [ edx + 0xa ]
pop ds
adc [ esi - 0x14 ] dh
sbb eax [ edi - 0x63b6c352 ]
out dx al
push ds
add edi edx
add al 0xfa
rcl [ esi * 8 - 0x2c748d1c ] cl
adc al 0x29
cld
retn 0x6ed9
sub_10013200
push eax
push ebp
cli
inc [ edx - 0x39a75bea ]
retn
sub_10013b90
iretd
sub_10013dc0
hlt
sub_10013f10
cmpsb [ esi ] [ edi ]
mov edx 0x9c68da46
test [ ecx ] dl
pushad
das
cmp al [ edx - 0x2e ]
hlt
sub_10013f50
mov al 0x3e
iretd
sub_10013fd0
in eax 0x86
sahf
mov dl 0x4
sub_10018050
sub_100188d0
sub_1001c2e0
aam 0x16
aam 0xb1
mov [ esi - 0x10 ] ds
das
retn
sub_1001c6a0
sub bl [ eax + 0x5d1d6f45 ]
mov [ ecx - 0x33 ] bh
push es
scasd [ edi ]
0x69a04780 0x1a7d
sub_1001ea40
frstor [ ecx - 0x6203eede ]
or [ ecx ] ebp
push edx
test eax 0xd07d6556
mov dh 0x76
fstp [ 0xffffffffee0ce3e1 ]
aad 0x53
add eax 0xa7808497
dec eax
sub_1001ee40
loop r-xdata
push 0x2592e49b
push es
rcr esp cl
cmpsb [ esi ] [ edi ]
mov [ 0x699d9fa0 ] al
or al 0xc2
mov [ eax - 0x74 ] ch
jae r-xdata
0xe3633127 0x378c
and [ edx - 0x16 ] ecx
iretd
sub_10020000
dec esp
dec ebp
pop eax
and edx ebp
salc
0x80be9d15 0x3cb
sub_10020170
les edx [ ebx - 0x4186172f ]
sbb esp [ edi + 0x2566fff7 ]
fcomp [ ecx ]
int3
sub_100201b4
sub_10020200
and eax 0x68e79243
jmp sub_100201b4
sub_10020550
jno r-xdata
aam 0x40
stc
pop edi
pop ebp
mov cl 0x94
retn 0x31d7
dec edi
cmpsb [ esi ] [ edi ]
mov [ 0xffffffff919aa253 ] al
hlt
sub_10020650
or [ ecx - 0x27903cd4 ] edx
mov al 0x4
xlat
inc ebx
xchg [ edi + 0x3f ] esi
retn
sub_10020820
stosd [ edi ]
0x8110
sub_10020cf0
sti
push 0xffffffca
mov edx 0xbbb0045d
clc
mov [ edi + 0x2b ] gs
sub [ gs : edx + 0x2 ] eax
salc
and [ esi - 0x2a2699 ] 0xffffffe5
xchg edi eax
insb
cmc
sub_10021030
add eax 0xc0bdffae
retn
sub_10021170
hlt
sub_10022030
mov ah [ esi ]
sub_10023210
adc bl [ ebx ]
sub [ edx + 0x29 ] 0xed
pushfd
sbb [ esi ] cl
xlat
sub_10023260
0x7ff1
sub_10026280
mov ebx 0x9fb63a3d
cld
xor bh [ edi - 0x73 ]
cmp eax 0xa36a7f45
retn 0xec19
sub_10027ef0
mov eax [ 0x28a4e6a9 ]
sub_1002a040
adc al 0x8f
out 0x1b al
pop ds
rcr edi 0x9d
mov al [ 0x64fdea13 ]
pop es
cwde
lds eax [ edx - 0x1222aa1f ]
fwait
mov [ 0xffffffffe15224af ] eax
shl [ edi ] 0x1
0x84c0
sub_1002b500
inc ebx
fld [ edx - 0x2a81b690 ]
sti
jge r-xdata
adc ch cl
hlt
xor eax 0x83a1e8f1
shl [ ecx + 0x3040729c ] 0x1
sub_1002c060
sub_1002ca00
push eax
fisubr [ edx + edi * 8 - 0x78 ]
push ss
movsb [ edi ] [ esi ]
xor al al
dec esi
fsubr [ edx - 0x8 ]
xchg [ edx ] dl
xor [ esi - 0x99725b4 ] bh
test [ edx ] dl
mov al [ 0xffffffffd84abc2e ]
hlt
sub_1002cd1a
mov eax [ ebp - 0x14 ]
push eax
call sub_1003c10a
add esp 0x4
push 0x0
push 0x0
call sub_1003c200
int3
sub_1002cdb0
mov edx [ ecx + 0xc ]
sub edx [ ecx + 0x8 ]
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add eax edx
retn
sub_1002cdd0
push ebp
mov ebp esp
mov ecx [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1002d0f0
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
j_sub_1001fe80
jmp sub_1001fe80
sub_1002e69b
mov [ ebp - 0x4 ] 0x6
mov eax sub_1002e6a8
retn
sub_1002e8a0
xor eax eax
add ecx 0x4
xchg [ ecx ] eax
test eax eax
je r-xdata
retn
push eax
call [ CloseHandle@IAT ]
sub_1002e920
lea eax [ ecx + 0x6c ]
retn
sub_1002e930
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add eax eax
lea eax [ ecx + eax * 8 + 0xbc ]
pop ebp
retn 0x4
sub_1002e950
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add eax eax
lea eax [ ecx + eax * 8 + 0x7c ]
pop ebp
retn 0x4
sub_1002e9a0
retn 0x4
sub_1002e9b0
retn 0x8
sub_1002e9c0
xor eax eax
retn 0xc
sub_1002e9d0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call sub_1002a4c0
pop ecx
sub_1002e9e0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0xc ] 0x80000000
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_1002f1c9
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_1003c200
int3
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_1002f5e9
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp + 0xc ]
call sub_1002f080
push 0x0
push 0x0
call sub_1003c200
int3
sub_1002ff90
push ebp
mov ebp esp
add ecx 0x6c
push ecx
mov ecx [ ebp + 0x8 ]
call sub_1002fc30
pop ebp
retn 0x4
sub_1002ffb0
push ebp
mov ebp esp
movzx eax [ ebp + 0xc ]
add eax eax
lea ecx [ ecx + eax * 8 + 0x7c ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_1002fc30
pop ebp
retn 0x8
sub_1003059b
add al [ ecx ]
add al [ edx ]
add [ edx ] eax
add esp ecx
int3
sub_100305b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call [ r--data ]
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100305d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call [ r--data ]
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100305f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call [ r--data ]
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10030b00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call [ r--data ]
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10030b20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call [ r--data ]
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10031db0
push ebp
mov ebp esp
add ecx 0xdc
push ecx
mov ecx [ ebp + 0x8 ]
call sub_100319e0
pop ebp
retn 0x4
sub_10032340
mov al [ ecx + 0x171 ]
retn
sub_100343e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
push eax
call edx
pop ebp
retn 0x8
sub_10034400
mov eax [ ecx + 0x8 ]
retn
sub_10034410
xor al al
retn 0x4
sub_10034450
push ebp
mov ebp esp
mov eax [ ecx + 0x10 ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
pop ebp
retn 0x4
sub_10036d70
mov eax [ ecx + 0x10 ]
add eax eax
retn
sub_10036db0
mov eax ecx
xor ecx ecx
mov [ eax + 0x14 ] 0x7
mov [ eax + 0x10 ] 0x0
mov [ eax ] cx
retn
sub_10036e20
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x18 ]
push 0x1
call edx
sub_10036ee0
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
call edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_100371c0
mov al 0x1
retn 0x8
sub_10037410
cmp [ ecx + 0x3c ] 0x0
je r-xdata
xor al al
retn
cmp [ ecx ] 0x0
je r-xdata
mov al 0x1
retn
sub_10038380
mov [ rw-data ] 0x0
retn
sub_10038460
jmp Ordinal_AXE8SharedExpat_2
sub_10038465
mov eax icu_4_0::Locale::~Locale@IAT
jmp sub_1003846f
sub_1003846f
push ecx
push edx
push eax
push __delay_import_directory_entries
call sub_1003856c
pop edx
pop ecx
jmp eax
utext_close_4_0
jmp [ utext_close_4_0@IAT ]
sub_10038490
mov eax utext_openUChars_4_0@IAT
jmp sub_1003846f
utext_openUChars_4_0
jmp [ utext_openUChars_4_0@IAT ]
sub_100384a0
mov eax u_ispunct_4_0@IAT
jmp sub_1003846f
u_ispunct_4_0
jmp [ u_ispunct_4_0@IAT ]
sub_100384b0
mov eax u_isblank_4_0@IAT
jmp sub_1003846f
u_isblank_4_0
jmp [ u_isblank_4_0@IAT ]
sub_100384c0
mov eax u_hasBinaryProperty_4_0@IAT
jmp sub_1003846f
u_hasBinaryProperty_4_0
jmp [ u_hasBinaryProperty_4_0@IAT ]
sub_100384d0
mov eax u_isWhitespace_4_0@IAT
jmp sub_1003846f
u_isWhitespace_4_0
jmp [ u_isWhitespace_4_0@IAT ]
sub_100384e0
mov eax utext_next32From_4_0@IAT
jmp sub_1003846f
utext_next32From_4_0
jmp [ utext_next32From_4_0@IAT ]
sub_100384f0
mov eax icu_4_0::BreakIterator::createWordInstance@IAT
jmp sub_1003846f
sub_100384fa
mov eax icu_4_0::Locale::Locale@IAT
jmp sub_1003846f
sub_10038504
mov eax Ordinal_AXE8SharedExpat_1@IAT
jmp sub_1003850e
sub_1003850e
push ecx
push edx
push eax
push r--data
call sub_1003856c
pop edx
pop ecx
jmp eax
Ordinal_AXE8SharedExpat_1
jmp [ Ordinal_AXE8SharedExpat_1@IAT ]
sub_10038525
mov eax Ordinal_AXE8SharedExpat_2@IAT
jmp sub_1003850e
Ordinal_AXE8SharedExpat_2
jmp [ Ordinal_AXE8SharedExpat_2@IAT ]
sub_10038535
mov eax Ordinal_BIB_11@IAT
jmp sub_1003853f
sub_1003853f
push ecx
push edx
push eax
push r--data
call sub_1003856c
pop edx
pop ecx
jmp eax
sub_100390c0
push rw-data
mov [ ecx ] r--data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push 0x3b
push r--data
push r--data
call [ r--data ]
add esp 0xc
sub_100392f0
xor eax eax
retn 0x8
sub_10039a90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x20 ] ecx
xor eax eax
pop ebp
retn 0x8
sub_10039ba0
mov [ ecx + 0x18 ] 0x0
xor eax eax
retn
sub_10039bb0
mov eax 0x80004005
retn 0x4
sub_10039c60
mov eax [ ecx ]
push eax
call sub_1003c10a
pop ecx
retn
sub_10039fd8
mov eax [ ebp - 0x14 ]
push eax
call sub_1003c10a
add esp 0x4
push 0x0
push 0x0
call sub_1003c200
int3
sub_1003a0a0
mov ecx [ ebp - 0x14 ]
call sub_10017100
sub_1003a0a8
push 0x0
push 0x0
call sub_1003c200
int3
sub_1003a120
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_1003a790
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x34 ] ecx
xor eax eax
pop ebp
retn 0x8
sub_1003b7d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x53
push eax
call sub_1003b3b0
test eax eax
setne al
pop ebp
retn 0x4
sub_1003b80f
mov ecx [ ecx + 0x4 ]
call [ r--data ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1003b8a0
jmp [ r--data ]
sub_1003b8b2
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003c1de
sub_1003b950
call sub_10027ef0
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
retn
sub_1003ba50
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call [ TlsFree@IAT ]
mov [ rw-data ] 0x0
sub_1003bb08
mov edx [ ebp - 0x14 ]
push edx
call sub_10008970
add esp 0x4
push 0x0
push 0x0
call sub_1003c200
int3
sub_1003bd5f
mov edx [ ebp - 0x14 ]
push edx
call sub_10008970
add esp 0x4
push 0x0
push 0x0
call sub_1003c200
int3
j_sub_1003bd80
jmp sub_1003bd80
sub_1003c000
push esi
mov esi ecx
call [ r--data ]
mov [ esi + 0xc ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_1003c020
mov [ ecx ] r--data
jmp [ r--data ]
sub_1003c040
push ecx
mov eax [ r--data ]
mov [ esp ] eax
xor eax eax
pop ecx
retn
sub_1003c050
push j_sub_1003bd80
call sub_1003c2bf
add esp 0x4
call sub_10027ef0
xor eax eax
retn
sub_1003c070
call sub_1003ba50
xor eax eax
retn
sub_1003c080
cmp [ esp + 0x8 ] 0x3
jne r-xdata
retn 0xc
call j_sub_1003bd80
sub_1003c090
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
call sub_1003ba50
cmp eax 0x3
jne r-xdata
mov eax 0x1
retn 0xc
call j_sub_1003bd80
mov eax 0x1
retn 0xc
sub_1003c104
jmp [ r--data ]
sub_1003c10a
jmp [ r--data ]
sub_1003c110
jmp [ r--data ]
sub_1003c116
jmp [ r--data ]
sub_1003c1c5
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003c11c
sub_1003c1de
jmp [ r--data ]
sub_1003c1e4
jmp [ r--data ]
sub_1003c1ea
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_1003c9ee
retn
sub_1003c1fa
jmp [ r--data ]
sub_1003c200
jmp [ r--data ]
sub_1003c20c
jmp [ r--data ]
sub_1003c2b6
push 0x8
call sub_1003caf4
pop ecx
retn
sub_1003c323
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003c11c
sub_1003c33c
jmp [ r--data ]
sub_1003c807
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x20 ] ecx
push eax
push ecx
call sub_1003ccbe
pop ecx
pop ecx
retn
sub_1003c83b
mov [ rw-data ] 0xffffffff
retn
sub_1003c89c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1003c962
jmp [ r--data ]
sub_1003c9b5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1003caf4
jmp [ r--data ]
sub_1003cafa
jmp [ r--data ]
sub_1003cb00
jmp [ r--data ]
sub_1003cb06
push rw-data
call sub_1003cd96
pop ecx
retn
sub_1003cc7b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_1003ccac
jmp [ r--data ]
sub_1003ccb2
jmp [ r--data ]
sub_1003ccb8
jmp [ r--data ]
sub_1003ccbe
jmp [ r--data ]
sub_1003cd84
jmp [ r--data ]
sub_1003cd8a
jmp [ r--data ]
sub_1003cd90
jmp [ r--data ]
sub_1003cd96
jmp [ r--data ]
sub_1003e380
push r-xdata
push 0x4
push 0x10
lea eax [ ebp - 0x50 ]
push eax
call sub_1003c17a
retn
sub_1003e3b6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xac ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e59f
push sub_10017100
push 0x4
push 0x10
mov eax [ ebp - 0x10 ]
add eax 0x80
push eax
call sub_1003c17a
retn
sub_1003e5b7
push r-xdata
push 0x4
push 0x10
mov eax [ ebp - 0x10 ]
add eax 0xc0
push eax
call sub_1003c17a
retn
sub_1003e5cf
push r-xdata
push 0x2
push 0x10
mov eax [ ebp - 0x10 ]
add eax 0x100
push eax
call sub_1003c17a
retn
sub_1003e5e7
mov ecx [ ebp - 0x14 ]
jmp sub_10002a20
sub_1003e5ef
mov ecx [ ebp - 0x18 ]
jmp sub_10002a20
sub_1003e5f7
mov ecx [ ebp - 0x18 ]
jmp sub_10002a20
sub_1003e5ff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e620
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1003e62e
lea ecx [ ebp - 0x2c ]
jmp sub_100017e0
sub_1003e636
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e660
lea ecx [ ebp - 0x30 ]
jmp sub_10035170
sub_1003e668
lea ecx [ ebp - 0x34 ]
jmp j_sub_1001fe80
sub_1003e670
lea ecx [ ebp - 0x38 ]
jmp j_sub_1001fe80
sub_1003e688
lea ecx [ ebp - 0x50 ]
jmp sub_10002a20
sub_1003e690
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e6c0
lea ecx [ ebp - 0x30 ]
jmp sub_10003000
sub_1003e6c8
lea ecx [ ebp - 0x50 ]
jmp sub_100017e0
sub_1003e6d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e700
lea ecx [ ebp - 0x10 ]
jmp j_sub_1001fe80
sub_1003e710
lea ecx [ ebp - 0x20 ]
jmp sub_10002a20
sub_1003e718
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e740
mov ecx [ ebp - 0x50 ]
jmp sub_10019c60
sub_1003e769
mov ecx [ ebp - 0x50 ]
add ecx 0x44
jmp sub_10035170
sub_1003e774
mov ecx [ ebp - 0x50 ]
add ecx 0x60
jmp sub_10035170
sub_1003e77f
push sub_10017100
push 0x4
push 0x10
mov eax [ ebp - 0x50 ]
add eax 0x80
push eax
call sub_1003c17a
retn
sub_1003e797
push r-xdata
push 0x4
push 0x10
mov eax [ ebp - 0x50 ]
add eax 0xc0
push eax
call sub_1003c17a
retn
sub_1003e7af
push r-xdata
push 0x2
push 0x10
mov eax [ ebp - 0x50 ]
add eax 0x100
push eax
call sub_1003c17a
retn
sub_1003e7c7
lea ecx [ ebp - 0x2c ]
jmp sub_10035170
sub_1003e7cf
lea ecx [ ebp - 0x2c ]
jmp sub_10035170
sub_1003e7d7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e800
lea ecx [ ebp - 0x64 ]
jmp sub_100017e0
sub_1003e808
lea ecx [ ebp - 0x48 ]
jmp sub_100017e0
sub_1003e810
lea ecx [ ebp - 0x2c ]
jmp sub_100017e0
sub_1003e818
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e840
lea ecx [ ebp - 0x30 ]
jmp sub_100017e0
sub_1003e848
lea ecx [ ebp - 0x4c ]
jmp sub_100017e0
sub_1003e850
lea ecx [ ebp - 0x4c ]
jmp sub_100017e0
sub_1003e858
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e880
mov ecx rw-data
jmp sub_10002a20
sub_1003e88a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_1003e8b0
mov ecx [ ebp - 0x10 ]
jmp [ r--data ]
sub_1004208f
push sub_10017100
push 0x4
push 0x10
mov eax [ ebp - 0x48 ]
add eax 0x7c
push eax
call sub_1003c17a
retn
sub_100420a5
push sub_10017100
push 0x2
push 0x10
mov eax [ ebp - 0x48 ]
add eax 0xbc
push eax
call sub_1003c17a
retn
sub_100420d9
mov ecx [ ebp - 0x48 ]
add ecx 0xfc
jmp j_sub_1001fe80
sub_100420e7
mov ecx [ ebp - 0x48 ]
add ecx 0x100
jmp j_sub_1001fe80
sub_100420f5
mov ecx [ ebp - 0x48 ]
add ecx 0x104
jmp sub_10031dd0
sub_1004211f
mov ecx [ ebp - 0x48 ]
add ecx 0x138
jmp sub_100017e0
sub_1004212d
mov ecx [ ebp - 0x48 ]
add ecx 0x154
jmp sub_100017e0
sub_10042149
push sub_10017100
push 0x4
push 0x10
mov eax [ ebp - 0x48 ]
add eax 0x184
push eax
call sub_1003c17a
retn
sub_1004216f
push r-xdata
push 0x4
push 0x10
mov eax [ ebp - 0x48 ]
add eax 0x1d4
push eax
call sub_1003c17a
retn
sub_10042187
mov ecx [ ebp - 0x48 ]
add ecx 0x214
jmp sub_10031dd0
sub_100421b1
mov ecx [ ebp - 0x48 ]
add ecx 0x244
jmp sub_1002e8a0
sub_100421bf
mov eax [ ebp - 0x40 ]
push eax
call sub_1003c10a
pop ecx
retn
sub_100421ca
mov ecx [ ebp - 0x40 ]
jmp sub_10002a20
sub_100421d2
mov ecx [ ebp - 0x44 ]
jmp sub_10002a20
sub_100421da
mov ecx [ ebp - 0x44 ]
jmp sub_10002a20
sub_100421e2
mov ecx [ ebp - 0x44 ]
jmp sub_10002a20
sub_100421ea
mov ecx [ ebp - 0x44 ]
jmp sub_10002a20
sub_100421f2
mov ecx [ ebp - 0x44 ]
jmp sub_10002a20
sub_100421fa
mov ecx [ ebp - 0x44 ]
jmp sub_10002a20
sub_10042202
mov ecx [ ebp - 0x44 ]
jmp sub_10002a20
sub_1004220a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_10042230
lea ecx [ ebp - 0x2c ]
jmp sub_10017100
sub_100422df
push sub_10017100
push 0x4
push 0x10
mov eax [ ebp - 0x18 ]
add eax 0x7c
push eax
call sub_1003c17a
retn
sub_100422f5
push sub_10017100
push 0x2
push 0x10
mov eax [ ebp - 0x18 ]
add eax 0xbc
push eax
call sub_1003c17a
retn
sub_10042329
mov ecx [ ebp - 0x18 ]
add ecx 0xfc
jmp j_sub_1001fe80
sub_10042337
mov ecx [ ebp - 0x18 ]
add ecx 0x100
jmp j_sub_1001fe80
sub_10042345
mov ecx [ ebp - 0x18 ]
add ecx 0x104
jmp sub_10031dd0
sub_1004236f
mov ecx [ ebp - 0x18 ]
add ecx 0x138
jmp sub_100017e0
sub_1004237d
mov ecx [ ebp - 0x18 ]
add ecx 0x154
jmp sub_100017e0
sub_10042399
push sub_10017100
push 0x4
push 0x10
mov eax [ ebp - 0x18 ]
add eax 0x184
push eax
call sub_1003c17a
retn
sub_100423bf
push r-xdata
push 0x4
push 0x10
mov eax [ ebp - 0x18 ]
add eax 0x1d4
push eax
call sub_1003c17a
retn
sub_100423d7
mov ecx [ ebp - 0x18 ]
add ecx 0x214
jmp sub_10031dd0
sub_10042401
mov ecx [ ebp - 0x18 ]
add ecx 0x244
jmp sub_1002e8a0
sub_1004240f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_10042430
mov eax [ ebp - 0x1f8 ]
push eax
call sub_1003c10a
pop ecx
retn
sub_1004243e
lea ecx [ ebp - 0x214 ]
jmp sub_1002ebd0
sub_10042449
lea ecx [ ebp - 0x1a8 ]
jmp sub_100017e0
sub_10042454
lea ecx [ ebp - 0x1c4 ]
jmp sub_100017e0
sub_1004245f
lea ecx [ ebp - 0x18c ]
jmp sub_100017e0
sub_1004246a
lea ecx [ ebp - 0x154 ]
jmp sub_100017e0
sub_10042475
lea ecx [ ebp - 0x11c ]
jmp sub_100017e0
sub_10042480
lea ecx [ ebp - 0xe4 ]
jmp sub_100017e0
sub_1004248b
lea ecx [ ebp - 0xac ]
jmp sub_100017e0
sub_10042496
lea ecx [ ebp - 0x90 ]
jmp sub_100017e0
sub_100424a1
lea ecx [ ebp - 0x74 ]
jmp sub_100017e0
sub_100424a9
lea ecx [ ebp - 0x58 ]
jmp sub_100017e0
sub_100424b1
lea ecx [ ebp - 0x138 ]
jmp sub_100017e0
sub_100424bc
lea ecx [ ebp - 0x170 ]
jmp sub_100017e0
sub_100424c7
lea ecx [ ebp - 0x100 ]
jmp sub_100017e0
sub_100424d2
lea ecx [ ebp - 0xc8 ]
jmp sub_100017e0
sub_100424dd
lea ecx [ ebp - 0x2c ]
jmp sub_100017e0
sub_100424e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x218 ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_10042518
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_10042548
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_10042578
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_100425a8
lea ecx [ ebp - 0x54 ]
jmp sub_1002e9d0
sub_100425b0
mov eax [ ebp - 0x4c ]
push eax
call sub_1003c10a
pop ecx
retn
sub_100425c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1003c1ea
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1003c1ea
mov eax r--data
jmp sub_1003c1e4
sub_100425f0
lea ecx [ ebp - 0x58 ]
jmp sub_10017100
sub_10043450
push sub_10043be0
call sub_1003c2bf
pop ecx
retn
sub_100435a0
push sub_10043ce0
call sub_1003c2bf
pop ecx
retn
sub_100435f0
mov ecx rw-data
call [ r--data ]
push sub_10043e20
mov [ rw-data ] r--data
mov [ rw-data ] 0x0
call sub_1003c2bf
pop ecx
retn
sub_10043620
mov ecx rw-data
call [ r--data ]
push r-xdata
mov [ rw-data ] r--data
mov [ rw-data ] 0x0
call sub_1003c2bf
pop ecx
retn
sub_10043650
mov eax sub_10027ef0
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_10043660
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_100436b0
mov [ rw-data ] sub_10027ef0
retn
sub_100436c0
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_100436f0
push sub_10043cf0
call sub_1003c2bf
pop ecx
retn
sub_10043820
push sub_10043d00
call sub_1003c2bf
pop ecx
retn
sub_10043880
push sub_10043d60
call sub_1003c2bf
pop ecx
retn
sub_100438e0
push sub_10043dc0
call sub_1003c2bf
pop ecx
retn
sub_10043940
push sub_10043ca0
call sub_1003c2bf
pop ecx
retn
sub_10043950
push sub_10043cc0
call sub_1003c2bf
pop ecx
retn
sub_10043960
push r-xdata
call sub_1003c2bf
pop ecx
retn
sub_10043a3a
push sub_100440af
call sub_1003c2bf
pop ecx
retn
sub_10043a50
mov ecx rw-data
jmp sub_10035170
sub_10043be0
cmp [ rw-data ] 0x8
jb r-xdata
xor ecx ecx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
retn
mov eax [ rw-data ]
push eax
call sub_1003c10a
add esp 0x4
sub_10043c20
mov eax [ rw-data ]
mov [ rw-data ] r--data
test eax eax
je r-xdata
retn
push eax
call [ CloseHandle@IAT ]
sub_10043ca0
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call [ rw-data ]
pop ecx
sub_10043cc0
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call [ rw-data ]
pop ecx
sub_10043ce0
retn
sub_10043cf0
retn
sub_10043d00
retn
sub_10043d60
retn
sub_10043dc0
retn
sub_10043e20
mov eax [ rw-data ]
push eax
mov [ rw-data ] r--data
call [ rw-data ]
add esp 0x4
mov ecx rw-data
jmp [ r--data ]
sub_100440af
mov ecx rw-data
jmp sub_1003b84f
